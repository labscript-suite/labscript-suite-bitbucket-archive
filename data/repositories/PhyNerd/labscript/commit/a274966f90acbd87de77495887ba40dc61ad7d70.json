{"rendered": {"message": {"raw": "pulseblaster programming moved into its own module. Also modified so that the main function is called as a Python function instead of taking input from command line args and outputting to stdout. This way we can use the script from a LabVIEW script node, like:\nimport pulseblaster\nfinal states = pulseblaster.program_all_pulseblasters(h5_file, initial_states)", "markup": "markdown", "html": "<p>pulseblaster programming moved into its own module. Also modified so that the main function is called as a Python function instead of taking input from command line args and outputting to stdout. This way we can use the script from a LabVIEW script node, like:<br />\nimport pulseblaster<br />\nfinal states = pulseblaster.program_all_pulseblasters(h5_file, initial_states)</p>", "type": "rendered"}}, "hash": "a274966f90acbd87de77495887ba40dc61ad7d70", "repository": {"links": {"self": {"href": "data/repositories/PhyNerd/labscript.json"}, "html": {"href": "#!/PhyNerd/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7ae7c0f3-4119-4307-8b3f-652003761155}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "PhyNerd/labscript", "uuid": "{7ae7c0f3-4119-4307-8b3f-652003761155}"}, "links": {"self": {"href": "data/repositories/PhyNerd/labscript/commit/a274966f90acbd87de77495887ba40dc61ad7d70.json"}, "comments": {"href": "data/repositories/PhyNerd/labscript/commit/a274966f90acbd87de77495887ba40dc61ad7d70/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript/patch/a274966f90acbd87de77495887ba40dc61ad7d70"}, "html": {"href": "#!/PhyNerd/labscript/commits/a274966f90acbd87de77495887ba40dc61ad7d70"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript/diff/a274966f90acbd87de77495887ba40dc61ad7d70"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript/commit/a274966f90acbd87de77495887ba40dc61ad7d70/approve"}, "statuses": {"href": "data/repositories/PhyNerd/labscript/commit/a274966f90acbd87de77495887ba40dc61ad7d70/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "pulseblaster programming moved into its own module. Also modified so that the main function is called as a Python function instead of taking input from command line args and outputting to stdout. This way we can use the script from a LabVIEW script node, like:\nimport pulseblaster\nfinal states = pulseblaster.program_all_pulseblasters(h5_file, initial_states)", "markup": "markdown", "html": "<p>pulseblaster programming moved into its own module. Also modified so that the main function is called as a Python function instead of taking input from command line args and outputting to stdout. This way we can use the script from a LabVIEW script node, like:<br />\nimport pulseblaster<br />\nfinal states = pulseblaster.program_all_pulseblasters(h5_file, initial_states)</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "17297e96ab008051403ec01dfc5e78cf860c9cec", "type": "commit", "links": {"self": {"href": "data/repositories/PhyNerd/labscript/commit/17297e96ab008051403ec01dfc5e78cf860c9cec.json"}, "html": {"href": "#!/PhyNerd/labscript/commits/17297e96ab008051403ec01dfc5e78cf860c9cec"}}}], "date": "2011-09-12T02:14:36+00:00", "message": "pulseblaster programming moved into its own module. Also modified so that the main function is called as a Python function instead of taking input from command line args and outputting to stdout. This way we can use the script from a LabVIEW script node, like:\nimport pulseblaster\nfinal states = pulseblaster.program_all_pulseblasters(h5_file, initial_states)", "type": "commit", "git_hash": "74837179fe638bb605a7d90ae37cf6071129e215", "tags": null, "branches": "default"}