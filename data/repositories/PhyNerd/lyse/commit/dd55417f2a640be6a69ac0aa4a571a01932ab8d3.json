{"rendered": {"message": {"raw": "Fixes #17 by speeding up dataframe transfers.\n\nMoved call to df.convert_objects to the lyse server, which makes dataframes more\nefficiently picklable by replacing columns containing only a single array datatype\nwith an array of that datatype. Previously df.convert_obects was only called\nafter the transfer, so the preceding pickling was slow.\n\nFor the large, mostly numeric dataframe tested, this speeds\nup pickling and unpickling by approx a factor of 5.\n\nAlso set convert_numeric=False in the call to df.convert_objects. It was\npreviously set to True, but I don't think this is what we want. With it False,\nall-numeric columns are still converted as desired. With it True, *strings* are\nconverted to numbers even if only a single string is convertible to a numeric\nvalue, with all non-convertable values in the column becoming NaNs. I don't\nthink this is what we want. If the user asked for a string, the data should\nremain a string. It is presumptuous to assume otherwise and I suspect a\nmisunderstanding by whoever wrote this line originally.", "markup": "markdown", "html": "<p>Fixes #17 by speeding up dataframe transfers.</p>\n<p>Moved call to df.convert_objects to the lyse server, which makes dataframes more<br />\nefficiently picklable by replacing columns containing only a single array datatype<br />\nwith an array of that datatype. Previously df.convert_obects was only called<br />\nafter the transfer, so the preceding pickling was slow.</p>\n<p>For the large, mostly numeric dataframe tested, this speeds<br />\nup pickling and unpickling by approx a factor of 5.</p>\n<p>Also set convert_numeric=False in the call to df.convert_objects. It was<br />\npreviously set to True, but I don't think this is what we want. With it False,<br />\nall-numeric columns are still converted as desired. With it True, <em>strings</em> are<br />\nconverted to numbers even if only a single string is convertible to a numeric<br />\nvalue, with all non-convertable values in the column becoming NaNs. I don't<br />\nthink this is what we want. If the user asked for a string, the data should<br />\nremain a string. It is presumptuous to assume otherwise and I suspect a<br />\nmisunderstanding by whoever wrote this line originally.</p>", "type": "rendered"}}, "hash": "dd55417f2a640be6a69ac0aa4a571a01932ab8d3", "repository": {"links": {"self": {"href": "data/repositories/PhyNerd/lyse.json"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "links": {"self": {"href": "data/repositories/PhyNerd/lyse/commit/dd55417f2a640be6a69ac0aa4a571a01932ab8d3.json"}, "comments": {"href": "data/repositories/PhyNerd/lyse/commit/dd55417f2a640be6a69ac0aa4a571a01932ab8d3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/patch/dd55417f2a640be6a69ac0aa4a571a01932ab8d3"}, "html": {"href": "#!/PhyNerd/lyse/commits/dd55417f2a640be6a69ac0aa4a571a01932ab8d3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/diff/dd55417f2a640be6a69ac0aa4a571a01932ab8d3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/dd55417f2a640be6a69ac0aa4a571a01932ab8d3/approve"}, "statuses": {"href": "data/repositories/PhyNerd/lyse/commit/dd55417f2a640be6a69ac0aa4a571a01932ab8d3/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixes #17 by speeding up dataframe transfers.\n\nMoved call to df.convert_objects to the lyse server, which makes dataframes more\nefficiently picklable by replacing columns containing only a single array datatype\nwith an array of that datatype. Previously df.convert_obects was only called\nafter the transfer, so the preceding pickling was slow.\n\nFor the large, mostly numeric dataframe tested, this speeds\nup pickling and unpickling by approx a factor of 5.\n\nAlso set convert_numeric=False in the call to df.convert_objects. It was\npreviously set to True, but I don't think this is what we want. With it False,\nall-numeric columns are still converted as desired. With it True, *strings* are\nconverted to numbers even if only a single string is convertible to a numeric\nvalue, with all non-convertable values in the column becoming NaNs. I don't\nthink this is what we want. If the user asked for a string, the data should\nremain a string. It is presumptuous to assume otherwise and I suspect a\nmisunderstanding by whoever wrote this line originally.", "markup": "markdown", "html": "<p>Fixes #17 by speeding up dataframe transfers.</p>\n<p>Moved call to df.convert_objects to the lyse server, which makes dataframes more<br />\nefficiently picklable by replacing columns containing only a single array datatype<br />\nwith an array of that datatype. Previously df.convert_obects was only called<br />\nafter the transfer, so the preceding pickling was slow.</p>\n<p>For the large, mostly numeric dataframe tested, this speeds<br />\nup pickling and unpickling by approx a factor of 5.</p>\n<p>Also set convert_numeric=False in the call to df.convert_objects. It was<br />\npreviously set to True, but I don't think this is what we want. With it False,<br />\nall-numeric columns are still converted as desired. With it True, <em>strings</em> are<br />\nconverted to numbers even if only a single string is convertible to a numeric<br />\nvalue, with all non-convertable values in the column becoming NaNs. I don't<br />\nthink this is what we want. If the user asked for a string, the data should<br />\nremain a string. It is presumptuous to assume otherwise and I suspect a<br />\nmisunderstanding by whoever wrote this line originally.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "d4de6d8fe857be9f4758cf8bfba3356ff691f613", "type": "commit", "links": {"self": {"href": "data/repositories/PhyNerd/lyse/commit/d4de6d8fe857be9f4758cf8bfba3356ff691f613.json"}, "html": {"href": "#!/PhyNerd/lyse/commits/d4de6d8fe857be9f4758cf8bfba3356ff691f613"}}}], "date": "2015-07-28T09:38:25+00:00", "message": "Fixes #17 by speeding up dataframe transfers.\n\nMoved call to df.convert_objects to the lyse server, which makes dataframes more\nefficiently picklable by replacing columns containing only a single array datatype\nwith an array of that datatype. Previously df.convert_obects was only called\nafter the transfer, so the preceding pickling was slow.\n\nFor the large, mostly numeric dataframe tested, this speeds\nup pickling and unpickling by approx a factor of 5.\n\nAlso set convert_numeric=False in the call to df.convert_objects. It was\npreviously set to True, but I don't think this is what we want. With it False,\nall-numeric columns are still converted as desired. With it True, *strings* are\nconverted to numbers even if only a single string is convertible to a numeric\nvalue, with all non-convertable values in the column becoming NaNs. I don't\nthink this is what we want. If the user asked for a string, the data should\nremain a string. It is presumptuous to assume otherwise and I suspect a\nmisunderstanding by whoever wrote this line originally.", "type": "commit", "git_hash": "c12b48e1bf9261593f2349949ba2f16ee05ffcc0", "tags": null, "branches": "default"}