{"pagelen": 100, "previous": "data/repositories/cavitylab/labscript/commits/prevent_unicode_warning_page=1.json", "values": [{"rendered": {"message": {"raw": "Merged in ReneKolb/Ramp_optimisation (pull request #3)\n\nrepalce a ramp with a constant, if initial and final values are identical.", "markup": "markdown", "html": "<p>Merged in ReneKolb/Ramp_optimisation (pull request #3)</p>\n<p>repalce a ramp with a constant, if initial and final values are identical.</p>", "type": "rendered"}}, "hash": "acd6abf3f7c2e217968128a97c120479f57c88d3", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/acd6abf3f7c2e217968128a97c120479f57c88d3.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/acd6abf3f7c2e217968128a97c120479f57c88d3/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript/commits/acd6abf3f7c2e217968128a97c120479f57c88d3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/acd6abf3f7c2e217968128a97c120479f57c88d3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/acd6abf3f7c2e217968128a97c120479f57c88d3/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/acd6abf3f7c2e217968128a97c120479f57c88d3/statuses_page=1.json"}}, "author": {"raw": "ReneKolb <rene.kolb@gmail.com>", "type": "author", "user": {"display_name": "ReneKolb", "uuid": "{a14da38a-5a42-4215-a657-8d03e2e12c62}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D"}, "html": {"href": "https://bitbucket.org/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fdb60d6ad1bfc79b620af131e1ff76acd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsR-3.png"}}, "nickname": "ReneKolb", "type": "user", "account_id": "557058:cee66bea-c1f2-4230-9ace-11e2dc725285"}}, "summary": {"raw": "Merged in ReneKolb/Ramp_optimisation (pull request #3)\n\nrepalce a ramp with a constant, if initial and final values are identical.", "markup": "markdown", "html": "<p>Merged in ReneKolb/Ramp_optimisation (pull request #3)</p>\n<p>repalce a ramp with a constant, if initial and final values are identical.</p>", "type": "rendered"}, "parents": [{"hash": "b238964a18d7e18a2c26eb52eb0414fec8f91e2e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/b238964a18d7e18a2c26eb52eb0414fec8f91e2e.json"}, "html": {"href": "#!/cavitylab/labscript/commits/b238964a18d7e18a2c26eb52eb0414fec8f91e2e"}}}, {"hash": "e215a0fae70cd72647a84b1e59b94eb3181756f1", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/e215a0fae70cd72647a84b1e59b94eb3181756f1.json"}, "html": {"href": "#!/cavitylab/labscript/commits/e215a0fae70cd72647a84b1e59b94eb3181756f1"}}}], "date": "2017-05-30T13:56:44+00:00", "message": "Merged in ReneKolb/Ramp_optimisation (pull request #3)\n\nrepalce a ramp with a constant, if initial and final values are identical.", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch ReneKolb/Ramp_optimisation", "markup": "markdown", "html": "<p>Close branch ReneKolb/Ramp_optimisation</p>", "type": "rendered"}}, "hash": "e215a0fae70cd72647a84b1e59b94eb3181756f1", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/e215a0fae70cd72647a84b1e59b94eb3181756f1.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/e215a0fae70cd72647a84b1e59b94eb3181756f1/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/e215a0fae70cd72647a84b1e59b94eb3181756f1"}, "html": {"href": "#!/cavitylab/labscript/commits/e215a0fae70cd72647a84b1e59b94eb3181756f1"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/e215a0fae70cd72647a84b1e59b94eb3181756f1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/e215a0fae70cd72647a84b1e59b94eb3181756f1/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/e215a0fae70cd72647a84b1e59b94eb3181756f1/statuses_page=1.json"}}, "author": {"raw": "ReneKolb <rene.kolb@gmail.com>", "type": "author", "user": {"display_name": "ReneKolb", "uuid": "{a14da38a-5a42-4215-a657-8d03e2e12c62}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D"}, "html": {"href": "https://bitbucket.org/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fdb60d6ad1bfc79b620af131e1ff76acd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsR-3.png"}}, "nickname": "ReneKolb", "type": "user", "account_id": "557058:cee66bea-c1f2-4230-9ace-11e2dc725285"}}, "summary": {"raw": "Close branch ReneKolb/Ramp_optimisation", "markup": "markdown", "html": "<p>Close branch ReneKolb/Ramp_optimisation</p>", "type": "rendered"}, "parents": [{"hash": "252a72d1807f2bf770fda6f18269ad0b2eadadac", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/252a72d1807f2bf770fda6f18269ad0b2eadadac.json"}, "html": {"href": "#!/cavitylab/labscript/commits/252a72d1807f2bf770fda6f18269ad0b2eadadac"}}}], "date": "2017-05-30T13:56:44+00:00", "message": "Close branch ReneKolb/Ramp_optimisation", "type": "commit"}, {"rendered": {"message": {"raw": "repalce a ramp with a constant, if initial and final values are identical.", "markup": "markdown", "html": "<p>repalce a ramp with a constant, if initial and final values are identical.</p>", "type": "rendered"}}, "hash": "252a72d1807f2bf770fda6f18269ad0b2eadadac", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/252a72d1807f2bf770fda6f18269ad0b2eadadac.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/252a72d1807f2bf770fda6f18269ad0b2eadadac/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/252a72d1807f2bf770fda6f18269ad0b2eadadac"}, "html": {"href": "#!/cavitylab/labscript/commits/252a72d1807f2bf770fda6f18269ad0b2eadadac"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/252a72d1807f2bf770fda6f18269ad0b2eadadac"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/252a72d1807f2bf770fda6f18269ad0b2eadadac/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/252a72d1807f2bf770fda6f18269ad0b2eadadac/statuses_page=1.json"}}, "author": {"raw": "ReneKolb <rene.kolb@gmail.com>", "type": "author", "user": {"display_name": "ReneKolb", "uuid": "{a14da38a-5a42-4215-a657-8d03e2e12c62}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D"}, "html": {"href": "https://bitbucket.org/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fdb60d6ad1bfc79b620af131e1ff76acd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsR-3.png"}}, "nickname": "ReneKolb", "type": "user", "account_id": "557058:cee66bea-c1f2-4230-9ace-11e2dc725285"}}, "summary": {"raw": "repalce a ramp with a constant, if initial and final values are identical.", "markup": "markdown", "html": "<p>repalce a ramp with a constant, if initial and final values are identical.</p>", "type": "rendered"}, "parents": [{"hash": "b238964a18d7e18a2c26eb52eb0414fec8f91e2e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/b238964a18d7e18a2c26eb52eb0414fec8f91e2e.json"}, "html": {"href": "#!/cavitylab/labscript/commits/b238964a18d7e18a2c26eb52eb0414fec8f91e2e"}}}], "date": "2017-05-30T13:56:34+00:00", "message": "repalce a ramp with a constant, if initial and final values are identical.", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in ReneKolb/Check_Shutter_Delays (pull request #2)\n\nA check has been added which checks whether the shutter is to be closed during the opening process and vice versa. If the new instruction is during the open or close delay, a warning message is emitted.", "markup": "markdown", "html": "<p>Merged in ReneKolb/Check_Shutter_Delays (pull request #2)</p>\n<p>A check has been added which checks whether the shutter is to be closed during the opening process and vice versa. If the new instruction is during the open or close delay, a warning message is emitted.</p>", "type": "rendered"}}, "hash": "b238964a18d7e18a2c26eb52eb0414fec8f91e2e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/b238964a18d7e18a2c26eb52eb0414fec8f91e2e.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/b238964a18d7e18a2c26eb52eb0414fec8f91e2e/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript/commits/b238964a18d7e18a2c26eb52eb0414fec8f91e2e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/b238964a18d7e18a2c26eb52eb0414fec8f91e2e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/b238964a18d7e18a2c26eb52eb0414fec8f91e2e/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/b238964a18d7e18a2c26eb52eb0414fec8f91e2e/statuses_page=1.json"}}, "author": {"raw": "ReneKolb <rene.kolb@gmail.com>", "type": "author", "user": {"display_name": "ReneKolb", "uuid": "{a14da38a-5a42-4215-a657-8d03e2e12c62}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D"}, "html": {"href": "https://bitbucket.org/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fdb60d6ad1bfc79b620af131e1ff76acd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsR-3.png"}}, "nickname": "ReneKolb", "type": "user", "account_id": "557058:cee66bea-c1f2-4230-9ace-11e2dc725285"}}, "summary": {"raw": "Merged in ReneKolb/Check_Shutter_Delays (pull request #2)\n\nA check has been added which checks whether the shutter is to be closed during the opening process and vice versa. If the new instruction is during the open or close delay, a warning message is emitted.", "markup": "markdown", "html": "<p>Merged in ReneKolb/Check_Shutter_Delays (pull request #2)</p>\n<p>A check has been added which checks whether the shutter is to be closed during the opening process and vice versa. If the new instruction is during the open or close delay, a warning message is emitted.</p>", "type": "rendered"}, "parents": [{"hash": "2ebdd39146ece676e63899d0a22d01db6c590a23", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/2ebdd39146ece676e63899d0a22d01db6c590a23.json"}, "html": {"href": "#!/cavitylab/labscript/commits/2ebdd39146ece676e63899d0a22d01db6c590a23"}}}, {"hash": "f84c38081d3739ee566e33f3145ac63af158e600", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/f84c38081d3739ee566e33f3145ac63af158e600.json"}, "html": {"href": "#!/cavitylab/labscript/commits/f84c38081d3739ee566e33f3145ac63af158e600"}}}], "date": "2017-05-30T12:20:18+00:00", "message": "Merged in ReneKolb/Check_Shutter_Delays (pull request #2)\n\nA check has been added which checks whether the shutter is to be closed during the opening process and vice versa. If the new instruction is during the open or close delay, a warning message is emitted.", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch ReneKolb/Check_Shutter_Delays", "markup": "markdown", "html": "<p>Close branch ReneKolb/Check_Shutter_Delays</p>", "type": "rendered"}}, "hash": "f84c38081d3739ee566e33f3145ac63af158e600", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/f84c38081d3739ee566e33f3145ac63af158e600.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/f84c38081d3739ee566e33f3145ac63af158e600/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/f84c38081d3739ee566e33f3145ac63af158e600"}, "html": {"href": "#!/cavitylab/labscript/commits/f84c38081d3739ee566e33f3145ac63af158e600"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/f84c38081d3739ee566e33f3145ac63af158e600"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/f84c38081d3739ee566e33f3145ac63af158e600/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/f84c38081d3739ee566e33f3145ac63af158e600/statuses_page=1.json"}}, "author": {"raw": "ReneKolb <rene.kolb@gmail.com>", "type": "author", "user": {"display_name": "ReneKolb", "uuid": "{a14da38a-5a42-4215-a657-8d03e2e12c62}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D"}, "html": {"href": "https://bitbucket.org/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fdb60d6ad1bfc79b620af131e1ff76acd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsR-3.png"}}, "nickname": "ReneKolb", "type": "user", "account_id": "557058:cee66bea-c1f2-4230-9ace-11e2dc725285"}}, "summary": {"raw": "Close branch ReneKolb/Check_Shutter_Delays", "markup": "markdown", "html": "<p>Close branch ReneKolb/Check_Shutter_Delays</p>", "type": "rendered"}, "parents": [{"hash": "9191913b80cd3e33fc56818dc6aaf50be2df88c5", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/9191913b80cd3e33fc56818dc6aaf50be2df88c5.json"}, "html": {"href": "#!/cavitylab/labscript/commits/9191913b80cd3e33fc56818dc6aaf50be2df88c5"}}}], "date": "2017-05-30T12:20:18+00:00", "message": "Close branch ReneKolb/Check_Shutter_Delays", "type": "commit"}, {"rendered": {"message": {"raw": "A check has been added which checks whether the shutter is to be closed during the opening process and vice versa. If the new instruction is during the open or close delay, a warning message is emitted.", "markup": "markdown", "html": "<p>A check has been added which checks whether the shutter is to be closed during the opening process and vice versa. If the new instruction is during the open or close delay, a warning message is emitted.</p>", "type": "rendered"}}, "hash": "9191913b80cd3e33fc56818dc6aaf50be2df88c5", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/9191913b80cd3e33fc56818dc6aaf50be2df88c5.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/9191913b80cd3e33fc56818dc6aaf50be2df88c5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/9191913b80cd3e33fc56818dc6aaf50be2df88c5"}, "html": {"href": "#!/cavitylab/labscript/commits/9191913b80cd3e33fc56818dc6aaf50be2df88c5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/9191913b80cd3e33fc56818dc6aaf50be2df88c5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/9191913b80cd3e33fc56818dc6aaf50be2df88c5/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/9191913b80cd3e33fc56818dc6aaf50be2df88c5/statuses_page=1.json"}}, "author": {"raw": "ReneKolb <rene.kolb@gmail.com>", "type": "author", "user": {"display_name": "ReneKolb", "uuid": "{a14da38a-5a42-4215-a657-8d03e2e12c62}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D"}, "html": {"href": "https://bitbucket.org/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fdb60d6ad1bfc79b620af131e1ff76acd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsR-3.png"}}, "nickname": "ReneKolb", "type": "user", "account_id": "557058:cee66bea-c1f2-4230-9ace-11e2dc725285"}}, "summary": {"raw": "A check has been added which checks whether the shutter is to be closed during the opening process and vice versa. If the new instruction is during the open or close delay, a warning message is emitted.", "markup": "markdown", "html": "<p>A check has been added which checks whether the shutter is to be closed during the opening process and vice versa. If the new instruction is during the open or close delay, a warning message is emitted.</p>", "type": "rendered"}, "parents": [{"hash": "2ebdd39146ece676e63899d0a22d01db6c590a23", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/2ebdd39146ece676e63899d0a22d01db6c590a23.json"}, "html": {"href": "#!/cavitylab/labscript/commits/2ebdd39146ece676e63899d0a22d01db6c590a23"}}}], "date": "2017-05-30T12:19:53+00:00", "message": "A check has been added which checks whether the shutter is to be closed during the opening process and vice versa. If the new instruction is during the open or close delay, a warning message is emitted.", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in ReneKolb/Ramp_Collide_Check (pull request #1)\n\nCheck that no other instruction is during a ramp on one output", "markup": "markdown", "html": "<p>Merged in ReneKolb/Ramp_Collide_Check (pull request #1)</p>\n<p>Check that no other instruction is during a ramp on one output</p>", "type": "rendered"}}, "hash": "2ebdd39146ece676e63899d0a22d01db6c590a23", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/2ebdd39146ece676e63899d0a22d01db6c590a23.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/2ebdd39146ece676e63899d0a22d01db6c590a23/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript/commits/2ebdd39146ece676e63899d0a22d01db6c590a23"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/2ebdd39146ece676e63899d0a22d01db6c590a23"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/2ebdd39146ece676e63899d0a22d01db6c590a23/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/2ebdd39146ece676e63899d0a22d01db6c590a23/statuses_page=1.json"}}, "author": {"raw": "ReneKolb <rene.kolb@gmail.com>", "type": "author", "user": {"display_name": "ReneKolb", "uuid": "{a14da38a-5a42-4215-a657-8d03e2e12c62}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D"}, "html": {"href": "https://bitbucket.org/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fdb60d6ad1bfc79b620af131e1ff76acd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsR-3.png"}}, "nickname": "ReneKolb", "type": "user", "account_id": "557058:cee66bea-c1f2-4230-9ace-11e2dc725285"}}, "summary": {"raw": "Merged in ReneKolb/Ramp_Collide_Check (pull request #1)\n\nCheck that no other instruction is during a ramp on one output", "markup": "markdown", "html": "<p>Merged in ReneKolb/Ramp_Collide_Check (pull request #1)</p>\n<p>Check that no other instruction is during a ramp on one output</p>", "type": "rendered"}, "parents": [{"hash": "8605d16ba9c6c8e143d1977b30309a57fd3915a1", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/8605d16ba9c6c8e143d1977b30309a57fd3915a1.json"}, "html": {"href": "#!/cavitylab/labscript/commits/8605d16ba9c6c8e143d1977b30309a57fd3915a1"}}}, {"hash": "0e1997d4c09607df692cfc9031fffc3e1992f6c0", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/0e1997d4c09607df692cfc9031fffc3e1992f6c0.json"}, "html": {"href": "#!/cavitylab/labscript/commits/0e1997d4c09607df692cfc9031fffc3e1992f6c0"}}}], "date": "2017-05-30T12:05:21+00:00", "message": "Merged in ReneKolb/Ramp_Collide_Check (pull request #1)\n\nCheck that no other instruction is during a ramp on one output", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch ReneKolb/Ramp_Collide_Check", "markup": "markdown", "html": "<p>Close branch ReneKolb/Ramp_Collide_Check</p>", "type": "rendered"}}, "hash": "0e1997d4c09607df692cfc9031fffc3e1992f6c0", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/0e1997d4c09607df692cfc9031fffc3e1992f6c0.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/0e1997d4c09607df692cfc9031fffc3e1992f6c0/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/0e1997d4c09607df692cfc9031fffc3e1992f6c0"}, "html": {"href": "#!/cavitylab/labscript/commits/0e1997d4c09607df692cfc9031fffc3e1992f6c0"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/0e1997d4c09607df692cfc9031fffc3e1992f6c0"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/0e1997d4c09607df692cfc9031fffc3e1992f6c0/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/0e1997d4c09607df692cfc9031fffc3e1992f6c0/statuses_page=1.json"}}, "author": {"raw": "ReneKolb <rene.kolb@gmail.com>", "type": "author", "user": {"display_name": "ReneKolb", "uuid": "{a14da38a-5a42-4215-a657-8d03e2e12c62}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D"}, "html": {"href": "https://bitbucket.org/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fdb60d6ad1bfc79b620af131e1ff76acd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsR-3.png"}}, "nickname": "ReneKolb", "type": "user", "account_id": "557058:cee66bea-c1f2-4230-9ace-11e2dc725285"}}, "summary": {"raw": "Close branch ReneKolb/Ramp_Collide_Check", "markup": "markdown", "html": "<p>Close branch ReneKolb/Ramp_Collide_Check</p>", "type": "rendered"}, "parents": [{"hash": "e45e025c797b6bb736b730ad3e642c63fdd0c0dd", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/e45e025c797b6bb736b730ad3e642c63fdd0c0dd.json"}, "html": {"href": "#!/cavitylab/labscript/commits/e45e025c797b6bb736b730ad3e642c63fdd0c0dd"}}}], "date": "2017-05-30T12:05:21+00:00", "message": "Close branch ReneKolb/Ramp_Collide_Check", "type": "commit"}, {"rendered": {"message": {"raw": "Check that no other instruction is during a ramp on one output", "markup": "markdown", "html": "<p>Check that no other instruction is during a ramp on one output</p>", "type": "rendered"}}, "hash": "e45e025c797b6bb736b730ad3e642c63fdd0c0dd", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/e45e025c797b6bb736b730ad3e642c63fdd0c0dd.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/e45e025c797b6bb736b730ad3e642c63fdd0c0dd/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/e45e025c797b6bb736b730ad3e642c63fdd0c0dd"}, "html": {"href": "#!/cavitylab/labscript/commits/e45e025c797b6bb736b730ad3e642c63fdd0c0dd"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/e45e025c797b6bb736b730ad3e642c63fdd0c0dd"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/e45e025c797b6bb736b730ad3e642c63fdd0c0dd/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/e45e025c797b6bb736b730ad3e642c63fdd0c0dd/statuses_page=1.json"}}, "author": {"raw": "ReneKolb <rene.kolb@gmail.com>", "type": "author", "user": {"display_name": "ReneKolb", "uuid": "{a14da38a-5a42-4215-a657-8d03e2e12c62}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D"}, "html": {"href": "https://bitbucket.org/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fdb60d6ad1bfc79b620af131e1ff76acd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsR-3.png"}}, "nickname": "ReneKolb", "type": "user", "account_id": "557058:cee66bea-c1f2-4230-9ace-11e2dc725285"}}, "summary": {"raw": "Check that no other instruction is during a ramp on one output", "markup": "markdown", "html": "<p>Check that no other instruction is during a ramp on one output</p>", "type": "rendered"}, "parents": [{"hash": "8605d16ba9c6c8e143d1977b30309a57fd3915a1", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/8605d16ba9c6c8e143d1977b30309a57fd3915a1.json"}, "html": {"href": "#!/cavitylab/labscript/commits/8605d16ba9c6c8e143d1977b30309a57fd3915a1"}}}], "date": "2017-05-30T12:05:01+00:00", "message": "Check that no other instruction is during a ramp on one output", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in monashspinor/labscript/hg_info (pull request #7)\n\nSave Mercurial (instead of Subversion) revision data of labscript file in h5 file\n\nApproved-by: Chris Billington", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/monashspinor/labscript\" rel=\"nofollow\" class=\"ap-connect-link\">monashspinor/labscript</a>/hg_info (pull request #7)</p>\n<p>Save Mercurial (instead of Subversion) revision data of labscript file in h5 file</p>\n<p>Approved-by: Chris Billington</p>", "type": "rendered"}}, "hash": "8605d16ba9c6c8e143d1977b30309a57fd3915a1", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/8605d16ba9c6c8e143d1977b30309a57fd3915a1.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/8605d16ba9c6c8e143d1977b30309a57fd3915a1/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript/commits/8605d16ba9c6c8e143d1977b30309a57fd3915a1"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/8605d16ba9c6c8e143d1977b30309a57fd3915a1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/8605d16ba9c6c8e143d1977b30309a57fd3915a1/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/8605d16ba9c6c8e143d1977b30309a57fd3915a1/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in monashspinor/labscript/hg_info (pull request #7)\n\nSave Mercurial (instead of Subversion) revision data of labscript file in h5 file\n\nApproved-by: Chris Billington", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/monashspinor/labscript\" rel=\"nofollow\" class=\"ap-connect-link\">monashspinor/labscript</a>/hg_info (pull request #7)</p>\n<p>Save Mercurial (instead of Subversion) revision data of labscript file in h5 file</p>\n<p>Approved-by: Chris Billington</p>", "type": "rendered"}, "parents": [{"hash": "f5dadbb93aef83ca8c7aed7265fa756e1ad27663", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/f5dadbb93aef83ca8c7aed7265fa756e1ad27663.json"}, "html": {"href": "#!/cavitylab/labscript/commits/f5dadbb93aef83ca8c7aed7265fa756e1ad27663"}}}, {"hash": "2717fb07bf9537ba674241570432fe1a4c16d962", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/2717fb07bf9537ba674241570432fe1a4c16d962.json"}, "html": {"href": "#!/cavitylab/labscript/commits/2717fb07bf9537ba674241570432fe1a4c16d962"}}}], "date": "2017-02-22T17:09:01+00:00", "message": "Merged in monashspinor/labscript/hg_info (pull request #7)\n\nSave Mercurial (instead of Subversion) revision data of labscript file in h5 file\n\nApproved-by: Chris Billington", "type": "commit"}, {"rendered": {"message": {"raw": "hg commands required cwd=os.path.split(path)[0] (subprocess was being run from\nrunmanager directory).", "markup": "markdown", "html": "<p>hg commands required cwd=os.path.split(path)[0] (subprocess was being run from<br />\nrunmanager directory).</p>", "type": "rendered"}}, "hash": "2717fb07bf9537ba674241570432fe1a4c16d962", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/2717fb07bf9537ba674241570432fe1a4c16d962.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/2717fb07bf9537ba674241570432fe1a4c16d962/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/2717fb07bf9537ba674241570432fe1a4c16d962"}, "html": {"href": "#!/cavitylab/labscript/commits/2717fb07bf9537ba674241570432fe1a4c16d962"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/2717fb07bf9537ba674241570432fe1a4c16d962"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/2717fb07bf9537ba674241570432fe1a4c16d962/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/2717fb07bf9537ba674241570432fe1a4c16d962/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "hg commands required cwd=os.path.split(path)[0] (subprocess was being run from\nrunmanager directory).", "markup": "markdown", "html": "<p>hg commands required cwd=os.path.split(path)[0] (subprocess was being run from<br />\nrunmanager directory).</p>", "type": "rendered"}, "parents": [{"hash": "dd7d076cf9377dc4ec64b7b64dca770f3a5713b1", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/dd7d076cf9377dc4ec64b7b64dca770f3a5713b1.json"}, "html": {"href": "#!/cavitylab/labscript/commits/dd7d076cf9377dc4ec64b7b64dca770f3a5713b1"}}}], "date": "2016-01-25T06:26:22+00:00", "message": "hg commands required cwd=os.path.split(path)[0] (subprocess was being run from\nrunmanager directory).", "type": "commit"}, {"rendered": {"message": {"raw": "Save Mercurial revision data of labscript file in h5 file instead of SVN.\nSeems appropriate as we migrated labscript source to Mercurial in January 2013.\nChances are that most user side code, e.g. labscript_suite/userlib/labscriptlib\nwill be under Mercurial control, as has been the case @ Monash since June 2014.", "markup": "markdown", "html": "<p>Save Mercurial revision data of labscript file in h5 file instead of SVN.<br />\nSeems appropriate as we migrated labscript source to Mercurial in January 2013.<br />\nChances are that most user side code, e.g. labscript_suite/userlib/labscriptlib<br />\nwill be under Mercurial control, as has been the case @ Monash since June 2014.</p>", "type": "rendered"}}, "hash": "dd7d076cf9377dc4ec64b7b64dca770f3a5713b1", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/dd7d076cf9377dc4ec64b7b64dca770f3a5713b1.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/dd7d076cf9377dc4ec64b7b64dca770f3a5713b1/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/dd7d076cf9377dc4ec64b7b64dca770f3a5713b1"}, "html": {"href": "#!/cavitylab/labscript/commits/dd7d076cf9377dc4ec64b7b64dca770f3a5713b1"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/dd7d076cf9377dc4ec64b7b64dca770f3a5713b1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/dd7d076cf9377dc4ec64b7b64dca770f3a5713b1/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/dd7d076cf9377dc4ec64b7b64dca770f3a5713b1/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Save Mercurial revision data of labscript file in h5 file instead of SVN.\nSeems appropriate as we migrated labscript source to Mercurial in January 2013.\nChances are that most user side code, e.g. labscript_suite/userlib/labscriptlib\nwill be under Mercurial control, as has been the case @ Monash since June 2014.", "markup": "markdown", "html": "<p>Save Mercurial revision data of labscript file in h5 file instead of SVN.<br />\nSeems appropriate as we migrated labscript source to Mercurial in January 2013.<br />\nChances are that most user side code, e.g. labscript_suite/userlib/labscriptlib<br />\nwill be under Mercurial control, as has been the case @ Monash since June 2014.</p>", "type": "rendered"}, "parents": [{"hash": "069374a6825aafc2fa86b5cda81bab9bdc4fe678", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/069374a6825aafc2fa86b5cda81bab9bdc4fe678.json"}, "html": {"href": "#!/cavitylab/labscript/commits/069374a6825aafc2fa86b5cda81bab9bdc4fe678"}}}], "date": "2016-01-25T05:55:44+00:00", "message": "Save Mercurial revision data of labscript file in h5 file instead of SVN.\nSeems appropriate as we migrated labscript source to Mercurial in January 2013.\nChances are that most user side code, e.g. labscript_suite/userlib/labscriptlib\nwill be under Mercurial control, as has been the case @ Monash since June 2014.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed typo in changeset: fcfd28a48cb6\n(note, changeset: fcfd28a48cb6 was actually done by me!)", "markup": "markdown", "html": "<p>Fixed typo in changeset: <a href=\"#!/cavitylab/labscript/commits/fcfd28a48cb6\" rel=\"nofollow\" class=\"ap-connect-link\">fcfd28a48cb6</a><br />\n(note, changeset: <a href=\"#!/cavitylab/labscript/commits/fcfd28a48cb6\" rel=\"nofollow\" class=\"ap-connect-link\">fcfd28a48cb6</a> was actually done by me!)</p>", "type": "rendered"}}, "hash": "f5dadbb93aef83ca8c7aed7265fa756e1ad27663", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/f5dadbb93aef83ca8c7aed7265fa756e1ad27663.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/f5dadbb93aef83ca8c7aed7265fa756e1ad27663/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/f5dadbb93aef83ca8c7aed7265fa756e1ad27663"}, "html": {"href": "#!/cavitylab/labscript/commits/f5dadbb93aef83ca8c7aed7265fa756e1ad27663"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/f5dadbb93aef83ca8c7aed7265fa756e1ad27663"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/f5dadbb93aef83ca8c7aed7265fa756e1ad27663/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/f5dadbb93aef83ca8c7aed7265fa756e1ad27663/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed typo in changeset: fcfd28a48cb6\n(note, changeset: fcfd28a48cb6 was actually done by me!)", "markup": "markdown", "html": "<p>Fixed typo in changeset: <a href=\"#!/cavitylab/labscript/commits/fcfd28a48cb6\" rel=\"nofollow\" class=\"ap-connect-link\">fcfd28a48cb6</a><br />\n(note, changeset: <a href=\"#!/cavitylab/labscript/commits/fcfd28a48cb6\" rel=\"nofollow\" class=\"ap-connect-link\">fcfd28a48cb6</a> was actually done by me!)</p>", "type": "rendered"}, "parents": [{"hash": "b91d4a46072fda6054d5eb8355446122c4ec3abf", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/b91d4a46072fda6054d5eb8355446122c4ec3abf.json"}, "html": {"href": "#!/cavitylab/labscript/commits/b91d4a46072fda6054d5eb8355446122c4ec3abf"}}}], "date": "2016-09-05T02:21:22+00:00", "message": "Fixed typo in changeset: fcfd28a48cb6\n(note, changeset: fcfd28a48cb6 was actually done by me!)", "type": "commit"}, {"rendered": {"message": {"raw": "Merge", "markup": "markdown", "html": "<p>Merge</p>", "type": "rendered"}}, "hash": "b91d4a46072fda6054d5eb8355446122c4ec3abf", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/b91d4a46072fda6054d5eb8355446122c4ec3abf.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/b91d4a46072fda6054d5eb8355446122c4ec3abf/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript/commits/b91d4a46072fda6054d5eb8355446122c4ec3abf"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/b91d4a46072fda6054d5eb8355446122c4ec3abf"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/b91d4a46072fda6054d5eb8355446122c4ec3abf/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/b91d4a46072fda6054d5eb8355446122c4ec3abf/statuses_page=1.json"}}, "author": {"raw": "shjohnst", "type": "author", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}}, "summary": {"raw": "Merge", "markup": "markdown", "html": "<p>Merge</p>", "type": "rendered"}, "parents": [{"hash": "fcfd28a48cb6ae14cd81c439cbfc8616d717dd92", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/fcfd28a48cb6ae14cd81c439cbfc8616d717dd92.json"}, "html": {"href": "#!/cavitylab/labscript/commits/fcfd28a48cb6ae14cd81c439cbfc8616d717dd92"}}}, {"hash": "ae4925e1670671774ddc1fc019d65e087d28bc4e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ae4925e1670671774ddc1fc019d65e087d28bc4e.json"}, "html": {"href": "#!/cavitylab/labscript/commits/ae4925e1670671774ddc1fc019d65e087d28bc4e"}}}], "date": "2016-09-05T02:18:17+00:00", "message": "Merge", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a bunch of bugs related to time rounding of triggers and associated offsets", "markup": "markdown", "html": "<p>Fixed a bunch of bugs related to time rounding of triggers and associated offsets</p>", "type": "rendered"}}, "hash": "fcfd28a48cb6ae14cd81c439cbfc8616d717dd92", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/fcfd28a48cb6ae14cd81c439cbfc8616d717dd92.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/fcfd28a48cb6ae14cd81c439cbfc8616d717dd92/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/fcfd28a48cb6ae14cd81c439cbfc8616d717dd92"}, "html": {"href": "#!/cavitylab/labscript/commits/fcfd28a48cb6ae14cd81c439cbfc8616d717dd92"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/fcfd28a48cb6ae14cd81c439cbfc8616d717dd92"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/fcfd28a48cb6ae14cd81c439cbfc8616d717dd92/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/fcfd28a48cb6ae14cd81c439cbfc8616d717dd92/statuses_page=1.json"}}, "author": {"raw": "shjohnst", "type": "author", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}}, "summary": {"raw": "Fixed a bunch of bugs related to time rounding of triggers and associated offsets", "markup": "markdown", "html": "<p>Fixed a bunch of bugs related to time rounding of triggers and associated offsets</p>", "type": "rendered"}, "parents": [{"hash": "9d779507789666b95dbffb60bc01e83538e75546", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/9d779507789666b95dbffb60bc01e83538e75546.json"}, "html": {"href": "#!/cavitylab/labscript/commits/9d779507789666b95dbffb60bc01e83538e75546"}}}], "date": "2016-09-05T02:16:53+00:00", "message": "Fixed a bunch of bugs related to time rounding of triggers and associated offsets", "type": "commit"}, {"rendered": {"message": {"raw": "Add error checking to edge case that crashed at NIST.", "markup": "markdown", "html": "<p>Add error checking to edge case that crashed at NIST.</p>", "type": "rendered"}}, "hash": "ae4925e1670671774ddc1fc019d65e087d28bc4e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ae4925e1670671774ddc1fc019d65e087d28bc4e.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/ae4925e1670671774ddc1fc019d65e087d28bc4e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/ae4925e1670671774ddc1fc019d65e087d28bc4e"}, "html": {"href": "#!/cavitylab/labscript/commits/ae4925e1670671774ddc1fc019d65e087d28bc4e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/ae4925e1670671774ddc1fc019d65e087d28bc4e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/ae4925e1670671774ddc1fc019d65e087d28bc4e/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/ae4925e1670671774ddc1fc019d65e087d28bc4e/statuses_page=1.json"}}, "author": {"raw": "Ian Spielman <spielman@umd.edu>", "type": "author", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}}, "summary": {"raw": "Add error checking to edge case that crashed at NIST.", "markup": "markdown", "html": "<p>Add error checking to edge case that crashed at NIST.</p>", "type": "rendered"}, "parents": [{"hash": "069374a6825aafc2fa86b5cda81bab9bdc4fe678", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/069374a6825aafc2fa86b5cda81bab9bdc4fe678.json"}, "html": {"href": "#!/cavitylab/labscript/commits/069374a6825aafc2fa86b5cda81bab9bdc4fe678"}}}], "date": "2016-01-29T14:06:07+00:00", "message": "Add error checking to edge case that crashed at NIST.", "type": "commit"}, {"rendered": {"message": {"raw": "Added tag 2.2.0 for changeset 39321b29d18de7d079290b941b479f7e59bcf1e5", "markup": "markdown", "html": "<p>Added tag 2.2.0 for changeset <a href=\"#!/cavitylab/labscript/commits/39321b29d18de7d079290b941b479f7e59bcf1e5\" rel=\"nofollow\" class=\"ap-connect-link\">39321b29d18de7d079290b941b479f7e59bcf1e5</a></p>", "type": "rendered"}}, "hash": "069374a6825aafc2fa86b5cda81bab9bdc4fe678", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/069374a6825aafc2fa86b5cda81bab9bdc4fe678.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/069374a6825aafc2fa86b5cda81bab9bdc4fe678/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/069374a6825aafc2fa86b5cda81bab9bdc4fe678"}, "html": {"href": "#!/cavitylab/labscript/commits/069374a6825aafc2fa86b5cda81bab9bdc4fe678"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/069374a6825aafc2fa86b5cda81bab9bdc4fe678"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/069374a6825aafc2fa86b5cda81bab9bdc4fe678/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/069374a6825aafc2fa86b5cda81bab9bdc4fe678/statuses_page=1.json"}}, "author": {"raw": "Philip Starkey <philip.starkey@monash.edu>", "type": "author", "user": {"display_name": "Phil Starkey", "uuid": "{bf2034f3-ffd1-49fb-9bf4-e900788cfbff}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbf2034f3-ffd1-49fb-9bf4-e900788cfbff%7D"}, "html": {"href": "https://bitbucket.org/%7Bbf2034f3-ffd1-49fb-9bf4-e900788cfbff%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a5d16233c76364a4acbdc83e9ee02d96d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-3.png"}}, "nickname": "Philip Starkey", "type": "user", "account_id": "5e2d536c52522c0e6fe716ed"}}, "summary": {"raw": "Added tag 2.2.0 for changeset 39321b29d18de7d079290b941b479f7e59bcf1e5", "markup": "markdown", "html": "<p>Added tag 2.2.0 for changeset <a href=\"#!/cavitylab/labscript/commits/39321b29d18de7d079290b941b479f7e59bcf1e5\" rel=\"nofollow\" class=\"ap-connect-link\">39321b29d18de7d079290b941b479f7e59bcf1e5</a></p>", "type": "rendered"}, "parents": [{"hash": "39321b29d18de7d079290b941b479f7e59bcf1e5", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/39321b29d18de7d079290b941b479f7e59bcf1e5.json"}, "html": {"href": "#!/cavitylab/labscript/commits/39321b29d18de7d079290b941b479f7e59bcf1e5"}}}], "date": "2016-01-24T22:28:05+00:00", "message": "Added tag 2.2.0 for changeset 39321b29d18de7d079290b941b479f7e59bcf1e5", "type": "commit"}, {"rendered": {"message": {"raw": "Bumped version to 2.2.0", "markup": "markdown", "html": "<p>Bumped version to 2.2.0</p>", "type": "rendered"}}, "hash": "39321b29d18de7d079290b941b479f7e59bcf1e5", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/39321b29d18de7d079290b941b479f7e59bcf1e5.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/39321b29d18de7d079290b941b479f7e59bcf1e5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/39321b29d18de7d079290b941b479f7e59bcf1e5"}, "html": {"href": "#!/cavitylab/labscript/commits/39321b29d18de7d079290b941b479f7e59bcf1e5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/39321b29d18de7d079290b941b479f7e59bcf1e5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/39321b29d18de7d079290b941b479f7e59bcf1e5/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/39321b29d18de7d079290b941b479f7e59bcf1e5/statuses_page=1.json"}}, "author": {"raw": "Philip Starkey <philip.starkey@monash.edu>", "type": "author", "user": {"display_name": "Phil Starkey", "uuid": "{bf2034f3-ffd1-49fb-9bf4-e900788cfbff}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbf2034f3-ffd1-49fb-9bf4-e900788cfbff%7D"}, "html": {"href": "https://bitbucket.org/%7Bbf2034f3-ffd1-49fb-9bf4-e900788cfbff%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a5d16233c76364a4acbdc83e9ee02d96d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-3.png"}}, "nickname": "Philip Starkey", "type": "user", "account_id": "5e2d536c52522c0e6fe716ed"}}, "summary": {"raw": "Bumped version to 2.2.0", "markup": "markdown", "html": "<p>Bumped version to 2.2.0</p>", "type": "rendered"}, "parents": [{"hash": "b3f8b00dc3939d5d91813683517618b9778358dd", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/b3f8b00dc3939d5d91813683517618b9778358dd.json"}, "html": {"href": "#!/cavitylab/labscript/commits/b3f8b00dc3939d5d91813683517618b9778358dd"}}}], "date": "2016-01-24T22:26:29+00:00", "message": "Bumped version to 2.2.0", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in monashspinor/labscript/truncate_ramp (pull request #5)\n\nAdded truncation kwarg to all ramping functions in AnalogQuantity. Standardised interface for truncating a ramp across methods and added consistency checks to ensure the truncation point is within bounds.", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/monashspinor/labscript\" rel=\"nofollow\" class=\"ap-connect-link\">monashspinor/labscript</a>/truncate_ramp (pull request #5)</p>\n<p>Added truncation kwarg to all ramping functions in AnalogQuantity. Standardised interface for truncating a ramp across methods and added consistency checks to ensure the truncation point is within bounds.</p>", "type": "rendered"}}, "hash": "b3f8b00dc3939d5d91813683517618b9778358dd", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/b3f8b00dc3939d5d91813683517618b9778358dd.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/b3f8b00dc3939d5d91813683517618b9778358dd/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript/commits/b3f8b00dc3939d5d91813683517618b9778358dd"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/b3f8b00dc3939d5d91813683517618b9778358dd"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/b3f8b00dc3939d5d91813683517618b9778358dd/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/b3f8b00dc3939d5d91813683517618b9778358dd/statuses_page=1.json"}}, "author": {"raw": "Philip Starkey <philip.starkey@monash.edu>", "type": "author", "user": {"display_name": "Phil Starkey", "uuid": "{bf2034f3-ffd1-49fb-9bf4-e900788cfbff}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbf2034f3-ffd1-49fb-9bf4-e900788cfbff%7D"}, "html": {"href": "https://bitbucket.org/%7Bbf2034f3-ffd1-49fb-9bf4-e900788cfbff%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a5d16233c76364a4acbdc83e9ee02d96d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-3.png"}}, "nickname": "Philip Starkey", "type": "user", "account_id": "5e2d536c52522c0e6fe716ed"}}, "summary": {"raw": "Merged in monashspinor/labscript/truncate_ramp (pull request #5)\n\nAdded truncation kwarg to all ramping functions in AnalogQuantity. Standardised interface for truncating a ramp across methods and added consistency checks to ensure the truncation point is within bounds.", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/monashspinor/labscript\" rel=\"nofollow\" class=\"ap-connect-link\">monashspinor/labscript</a>/truncate_ramp (pull request #5)</p>\n<p>Added truncation kwarg to all ramping functions in AnalogQuantity. Standardised interface for truncating a ramp across methods and added consistency checks to ensure the truncation point is within bounds.</p>", "type": "rendered"}, "parents": [{"hash": "37583afb8ab958ba545571587634065ef9eb3756", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/37583afb8ab958ba545571587634065ef9eb3756.json"}, "html": {"href": "#!/cavitylab/labscript/commits/37583afb8ab958ba545571587634065ef9eb3756"}}}, {"hash": "1d4118b0618369cc414618ca9d16d3b07f018fbf", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/1d4118b0618369cc414618ca9d16d3b07f018fbf.json"}, "html": {"href": "#!/cavitylab/labscript/commits/1d4118b0618369cc414618ca9d16d3b07f018fbf"}}}], "date": "2016-01-24T22:24:17+00:00", "message": "Merged in monashspinor/labscript/truncate_ramp (pull request #5)\n\nAdded truncation kwarg to all ramping functions in AnalogQuantity. Standardised interface for truncating a ramp across methods and added consistency checks to ensure the truncation point is within bounds.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed variable name typo (trunc should've been truncation) in exp_ramp_t.", "markup": "markdown", "html": "<p>Fixed variable name typo (trunc should've been truncation) in exp_ramp_t.</p>", "type": "rendered"}}, "hash": "1d4118b0618369cc414618ca9d16d3b07f018fbf", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/1d4118b0618369cc414618ca9d16d3b07f018fbf.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/1d4118b0618369cc414618ca9d16d3b07f018fbf/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/1d4118b0618369cc414618ca9d16d3b07f018fbf"}, "html": {"href": "#!/cavitylab/labscript/commits/1d4118b0618369cc414618ca9d16d3b07f018fbf"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/1d4118b0618369cc414618ca9d16d3b07f018fbf"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/1d4118b0618369cc414618ca9d16d3b07f018fbf/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/1d4118b0618369cc414618ca9d16d3b07f018fbf/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Fixed variable name typo (trunc should've been truncation) in exp_ramp_t.", "markup": "markdown", "html": "<p>Fixed variable name typo (trunc should've been truncation) in exp_ramp_t.</p>", "type": "rendered"}, "parents": [{"hash": "b974ebcdd160928e4cf902baafc26253cb7fc14e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/b974ebcdd160928e4cf902baafc26253cb7fc14e.json"}, "html": {"href": "#!/cavitylab/labscript/commits/b974ebcdd160928e4cf902baafc26253cb7fc14e"}}}], "date": "2016-01-22T04:52:51+00:00", "message": "Fixed variable name typo (trunc should've been truncation) in exp_ramp_t.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed error in last commit whereby truncation value checking was not taking into\naccount variable truncation type for exp_ramp and exp_ramp_t functions. Also\nadded a docstring to these functions.", "markup": "markdown", "html": "<p>Fixed error in last commit whereby truncation value checking was not taking into<br />\naccount variable truncation type for exp_ramp and exp_ramp_t functions. Also<br />\nadded a docstring to these functions.</p>", "type": "rendered"}}, "hash": "b974ebcdd160928e4cf902baafc26253cb7fc14e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/b974ebcdd160928e4cf902baafc26253cb7fc14e.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/b974ebcdd160928e4cf902baafc26253cb7fc14e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/b974ebcdd160928e4cf902baafc26253cb7fc14e"}, "html": {"href": "#!/cavitylab/labscript/commits/b974ebcdd160928e4cf902baafc26253cb7fc14e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/b974ebcdd160928e4cf902baafc26253cb7fc14e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/b974ebcdd160928e4cf902baafc26253cb7fc14e/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/b974ebcdd160928e4cf902baafc26253cb7fc14e/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Fixed error in last commit whereby truncation value checking was not taking into\naccount variable truncation type for exp_ramp and exp_ramp_t functions. Also\nadded a docstring to these functions.", "markup": "markdown", "html": "<p>Fixed error in last commit whereby truncation value checking was not taking into<br />\naccount variable truncation type for exp_ramp and exp_ramp_t functions. Also<br />\nadded a docstring to these functions.</p>", "type": "rendered"}, "parents": [{"hash": "f0eb02ce00f48b1f8acffb1ab0b9640b9ae0e387", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/f0eb02ce00f48b1f8acffb1ab0b9640b9ae0e387.json"}, "html": {"href": "#!/cavitylab/labscript/commits/f0eb02ce00f48b1f8acffb1ab0b9640b9ae0e387"}}}], "date": "2016-01-22T02:44:09+00:00", "message": "Fixed error in last commit whereby truncation value checking was not taking into\naccount variable truncation type for exp_ramp and exp_ramp_t functions. Also\nadded a docstring to these functions.", "type": "commit"}, {"rendered": {"message": {"raw": "Omitted the truncate decorator in favour of changing every ramp method.\nNow the duration is modified before add_instruction is executed.\nThis is more maintainable in the long run, as it is immune to changes to Output.\nIt also avoids the ramp collision detection problem.\nMinor changes to exp_ramp and exp_ramp_t to conform with kwarg name(s) and error\nchecking.", "markup": "markdown", "html": "<p>Omitted the truncate decorator in favour of changing every ramp method.<br />\nNow the duration is modified before add_instruction is executed.<br />\nThis is more maintainable in the long run, as it is immune to changes to Output.<br />\nIt also avoids the ramp collision detection problem.<br />\nMinor changes to exp_ramp and exp_ramp_t to conform with kwarg name(s) and error<br />\nchecking.</p>", "type": "rendered"}}, "hash": "f0eb02ce00f48b1f8acffb1ab0b9640b9ae0e387", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/f0eb02ce00f48b1f8acffb1ab0b9640b9ae0e387.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/f0eb02ce00f48b1f8acffb1ab0b9640b9ae0e387/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/f0eb02ce00f48b1f8acffb1ab0b9640b9ae0e387"}, "html": {"href": "#!/cavitylab/labscript/commits/f0eb02ce00f48b1f8acffb1ab0b9640b9ae0e387"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/f0eb02ce00f48b1f8acffb1ab0b9640b9ae0e387"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/f0eb02ce00f48b1f8acffb1ab0b9640b9ae0e387/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/f0eb02ce00f48b1f8acffb1ab0b9640b9ae0e387/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Omitted the truncate decorator in favour of changing every ramp method.\nNow the duration is modified before add_instruction is executed.\nThis is more maintainable in the long run, as it is immune to changes to Output.\nIt also avoids the ramp collision detection problem.\nMinor changes to exp_ramp and exp_ramp_t to conform with kwarg name(s) and error\nchecking.", "markup": "markdown", "html": "<p>Omitted the truncate decorator in favour of changing every ramp method.<br />\nNow the duration is modified before add_instruction is executed.<br />\nThis is more maintainable in the long run, as it is immune to changes to Output.<br />\nIt also avoids the ramp collision detection problem.<br />\nMinor changes to exp_ramp and exp_ramp_t to conform with kwarg name(s) and error<br />\nchecking.</p>", "type": "rendered"}, "parents": [{"hash": "ea38bf9a6d83993965972e801decd5901980afdc", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ea38bf9a6d83993965972e801decd5901980afdc.json"}, "html": {"href": "#!/cavitylab/labscript/commits/ea38bf9a6d83993965972e801decd5901980afdc"}}}], "date": "2016-01-21T07:23:05+00:00", "message": "Omitted the truncate decorator in favour of changing every ramp method.\nNow the duration is modified before add_instruction is executed.\nThis is more maintainable in the long run, as it is immune to changes to Output.\nIt also avoids the ramp collision detection problem.\nMinor changes to exp_ramp and exp_ramp_t to conform with kwarg name(s) and error\nchecking.", "type": "commit"}, {"rendered": {"message": {"raw": "Moved truncate decorator for ramp functions outside AnalogQuantity class and\nadded docstring.", "markup": "markdown", "html": "<p>Moved truncate decorator for ramp functions outside AnalogQuantity class and<br />\nadded docstring.</p>", "type": "rendered"}}, "hash": "ea38bf9a6d83993965972e801decd5901980afdc", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ea38bf9a6d83993965972e801decd5901980afdc.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/ea38bf9a6d83993965972e801decd5901980afdc/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/ea38bf9a6d83993965972e801decd5901980afdc"}, "html": {"href": "#!/cavitylab/labscript/commits/ea38bf9a6d83993965972e801decd5901980afdc"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/ea38bf9a6d83993965972e801decd5901980afdc"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/ea38bf9a6d83993965972e801decd5901980afdc/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/ea38bf9a6d83993965972e801decd5901980afdc/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Moved truncate decorator for ramp functions outside AnalogQuantity class and\nadded docstring.", "markup": "markdown", "html": "<p>Moved truncate decorator for ramp functions outside AnalogQuantity class and<br />\nadded docstring.</p>", "type": "rendered"}, "parents": [{"hash": "ee3b45b77ec00104ff187b4c0e51c6612a47705f", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ee3b45b77ec00104ff187b4c0e51c6612a47705f.json"}, "html": {"href": "#!/cavitylab/labscript/commits/ee3b45b77ec00104ff187b4c0e51c6612a47705f"}}}], "date": "2016-01-21T04:06:38+00:00", "message": "Moved truncate decorator for ramp functions outside AnalogQuantity class and\nadded docstring.", "type": "commit"}, {"rendered": {"message": {"raw": "Added truncation decorator for ramp functions. Allows a truncation kwarg to be\npassed to decorated ramp functions, whose effect is to keep the same functional\nform of the ramp, but truncate the duration by a fraction between 0 and 1.\nThis works by modifying the end_time of the instruction generated by the ramp,\nprior to sampling. One issue with this implementation is that the collision\ndetection of ramps in add_instruction uses the end_time of the full ramp, which\ncannot be readily circumvented.", "markup": "markdown", "html": "<p>Added truncation decorator for ramp functions. Allows a truncation kwarg to be<br />\npassed to decorated ramp functions, whose effect is to keep the same functional<br />\nform of the ramp, but truncate the duration by a fraction between 0 and 1.<br />\nThis works by modifying the end_time of the instruction generated by the ramp,<br />\nprior to sampling. One issue with this implementation is that the collision<br />\ndetection of ramps in add_instruction uses the end_time of the full ramp, which<br />\ncannot be readily circumvented.</p>", "type": "rendered"}}, "hash": "ee3b45b77ec00104ff187b4c0e51c6612a47705f", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ee3b45b77ec00104ff187b4c0e51c6612a47705f.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/ee3b45b77ec00104ff187b4c0e51c6612a47705f/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/ee3b45b77ec00104ff187b4c0e51c6612a47705f"}, "html": {"href": "#!/cavitylab/labscript/commits/ee3b45b77ec00104ff187b4c0e51c6612a47705f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/ee3b45b77ec00104ff187b4c0e51c6612a47705f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/ee3b45b77ec00104ff187b4c0e51c6612a47705f/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/ee3b45b77ec00104ff187b4c0e51c6612a47705f/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Added truncation decorator for ramp functions. Allows a truncation kwarg to be\npassed to decorated ramp functions, whose effect is to keep the same functional\nform of the ramp, but truncate the duration by a fraction between 0 and 1.\nThis works by modifying the end_time of the instruction generated by the ramp,\nprior to sampling. One issue with this implementation is that the collision\ndetection of ramps in add_instruction uses the end_time of the full ramp, which\ncannot be readily circumvented.", "markup": "markdown", "html": "<p>Added truncation decorator for ramp functions. Allows a truncation kwarg to be<br />\npassed to decorated ramp functions, whose effect is to keep the same functional<br />\nform of the ramp, but truncate the duration by a fraction between 0 and 1.<br />\nThis works by modifying the end_time of the instruction generated by the ramp,<br />\nprior to sampling. One issue with this implementation is that the collision<br />\ndetection of ramps in add_instruction uses the end_time of the full ramp, which<br />\ncannot be readily circumvented.</p>", "type": "rendered"}, "parents": [{"hash": "37583afb8ab958ba545571587634065ef9eb3756", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/37583afb8ab958ba545571587634065ef9eb3756.json"}, "html": {"href": "#!/cavitylab/labscript/commits/37583afb8ab958ba545571587634065ef9eb3756"}}}], "date": "2016-01-20T23:55:05+00:00", "message": "Added truncation decorator for ramp functions. Allows a truncation kwarg to be\npassed to decorated ramp functions, whose effect is to keep the same functional\nform of the ramp, but truncate the duration by a fraction between 0 and 1.\nThis works by modifying the end_time of the instruction generated by the ramp,\nprior to sampling. One issue with this implementation is that the collision\ndetection of ramps in add_instruction uses the end_time of the full ramp, which\ncannot be readily circumvented.", "type": "commit"}, {"rendered": {"message": {"raw": "Added tag 2.1.1 for changeset 27339e5915909a58701059fef7de560980755ef2", "markup": "markdown", "html": "<p>Added tag 2.1.1 for changeset <a href=\"#!/cavitylab/labscript/commits/27339e5915909a58701059fef7de560980755ef2\" rel=\"nofollow\" class=\"ap-connect-link\">27339e5915909a58701059fef7de560980755ef2</a></p>", "type": "rendered"}}, "hash": "37583afb8ab958ba545571587634065ef9eb3756", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/37583afb8ab958ba545571587634065ef9eb3756.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/37583afb8ab958ba545571587634065ef9eb3756/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/37583afb8ab958ba545571587634065ef9eb3756"}, "html": {"href": "#!/cavitylab/labscript/commits/37583afb8ab958ba545571587634065ef9eb3756"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/37583afb8ab958ba545571587634065ef9eb3756"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/37583afb8ab958ba545571587634065ef9eb3756/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/37583afb8ab958ba545571587634065ef9eb3756/statuses_page=1.json"}}, "author": {"raw": "Philip Starkey <philip.starkey@monash.edu>", "type": "author", "user": {"display_name": "Phil Starkey", "uuid": "{bf2034f3-ffd1-49fb-9bf4-e900788cfbff}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbf2034f3-ffd1-49fb-9bf4-e900788cfbff%7D"}, "html": {"href": "https://bitbucket.org/%7Bbf2034f3-ffd1-49fb-9bf4-e900788cfbff%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a5d16233c76364a4acbdc83e9ee02d96d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-3.png"}}, "nickname": "Philip Starkey", "type": "user", "account_id": "5e2d536c52522c0e6fe716ed"}}, "summary": {"raw": "Added tag 2.1.1 for changeset 27339e5915909a58701059fef7de560980755ef2", "markup": "markdown", "html": "<p>Added tag 2.1.1 for changeset <a href=\"#!/cavitylab/labscript/commits/27339e5915909a58701059fef7de560980755ef2\" rel=\"nofollow\" class=\"ap-connect-link\">27339e5915909a58701059fef7de560980755ef2</a></p>", "type": "rendered"}, "parents": [{"hash": "27339e5915909a58701059fef7de560980755ef2", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/27339e5915909a58701059fef7de560980755ef2.json"}, "html": {"href": "#!/cavitylab/labscript/commits/27339e5915909a58701059fef7de560980755ef2"}}}], "date": "2015-11-03T09:27:32+00:00", "message": "Added tag 2.1.1 for changeset 27339e5915909a58701059fef7de560980755ef2", "type": "commit"}, {"rendered": {"message": {"raw": "Bumped version to 2.1.1", "markup": "markdown", "html": "<p>Bumped version to 2.1.1</p>", "type": "rendered"}}, "hash": "27339e5915909a58701059fef7de560980755ef2", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/27339e5915909a58701059fef7de560980755ef2.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/27339e5915909a58701059fef7de560980755ef2/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/27339e5915909a58701059fef7de560980755ef2"}, "html": {"href": "#!/cavitylab/labscript/commits/27339e5915909a58701059fef7de560980755ef2"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/27339e5915909a58701059fef7de560980755ef2"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/27339e5915909a58701059fef7de560980755ef2/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/27339e5915909a58701059fef7de560980755ef2/statuses_page=1.json"}}, "author": {"raw": "Philip Starkey <philip.starkey@monash.edu>", "type": "author", "user": {"display_name": "Phil Starkey", "uuid": "{bf2034f3-ffd1-49fb-9bf4-e900788cfbff}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbf2034f3-ffd1-49fb-9bf4-e900788cfbff%7D"}, "html": {"href": "https://bitbucket.org/%7Bbf2034f3-ffd1-49fb-9bf4-e900788cfbff%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a5d16233c76364a4acbdc83e9ee02d96d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-3.png"}}, "nickname": "Philip Starkey", "type": "user", "account_id": "5e2d536c52522c0e6fe716ed"}}, "summary": {"raw": "Bumped version to 2.1.1", "markup": "markdown", "html": "<p>Bumped version to 2.1.1</p>", "type": "rendered"}, "parents": [{"hash": "9d779507789666b95dbffb60bc01e83538e75546", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/9d779507789666b95dbffb60bc01e83538e75546.json"}, "html": {"href": "#!/cavitylab/labscript/commits/9d779507789666b95dbffb60bc01e83538e75546"}}}], "date": "2015-11-03T09:26:58+00:00", "message": "Bumped version to 2.1.1", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bug where the ClockLine clock_limits were not taken into account when determining the minimum time between a wait and subsequent output.\nThis meant that triggers to secondary pseudoclocks, immediately followed by output could be faster than the allowed update rate of IntermediateDevices. This was fortunately caught further down the line, but should have never been a problem.\n\nThe wait() function (via a fix to trigger_all_pseudoclocks) now returns the correct length of time before you can command further output.\n\nIt is possible this bug only affected wait() commands with a single pseudoclock where the pseudoclock trigger_duration was very short and the wait_monitor was on a clockline that had a high clock_limit.", "markup": "markdown", "html": "<p>Fixed bug where the ClockLine clock_limits were not taken into account when determining the minimum time between a wait and subsequent output.<br />\nThis meant that triggers to secondary pseudoclocks, immediately followed by output could be faster than the allowed update rate of IntermediateDevices. This was fortunately caught further down the line, but should have never been a problem.</p>\n<p>The wait() function (via a fix to trigger_all_pseudoclocks) now returns the correct length of time before you can command further output.</p>\n<p>It is possible this bug only affected wait() commands with a single pseudoclock where the pseudoclock trigger_duration was very short and the wait_monitor was on a clockline that had a high clock_limit.</p>", "type": "rendered"}}, "hash": "9d779507789666b95dbffb60bc01e83538e75546", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/9d779507789666b95dbffb60bc01e83538e75546.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/9d779507789666b95dbffb60bc01e83538e75546/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/9d779507789666b95dbffb60bc01e83538e75546"}, "html": {"href": "#!/cavitylab/labscript/commits/9d779507789666b95dbffb60bc01e83538e75546"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/9d779507789666b95dbffb60bc01e83538e75546"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/9d779507789666b95dbffb60bc01e83538e75546/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/9d779507789666b95dbffb60bc01e83538e75546/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed bug where the ClockLine clock_limits were not taken into account when determining the minimum time between a wait and subsequent output.\nThis meant that triggers to secondary pseudoclocks, immediately followed by output could be faster than the allowed update rate of IntermediateDevices. This was fortunately caught further down the line, but should have never been a problem.\n\nThe wait() function (via a fix to trigger_all_pseudoclocks) now returns the correct length of time before you can command further output.\n\nIt is possible this bug only affected wait() commands with a single pseudoclock where the pseudoclock trigger_duration was very short and the wait_monitor was on a clockline that had a high clock_limit.", "markup": "markdown", "html": "<p>Fixed bug where the ClockLine clock_limits were not taken into account when determining the minimum time between a wait and subsequent output.<br />\nThis meant that triggers to secondary pseudoclocks, immediately followed by output could be faster than the allowed update rate of IntermediateDevices. This was fortunately caught further down the line, but should have never been a problem.</p>\n<p>The wait() function (via a fix to trigger_all_pseudoclocks) now returns the correct length of time before you can command further output.</p>\n<p>It is possible this bug only affected wait() commands with a single pseudoclock where the pseudoclock trigger_duration was very short and the wait_monitor was on a clockline that had a high clock_limit.</p>", "type": "rendered"}, "parents": [{"hash": "43df3cb9323f529d64bb06e4efa8920b4e9accfb", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/43df3cb9323f529d64bb06e4efa8920b4e9accfb.json"}, "html": {"href": "#!/cavitylab/labscript/commits/43df3cb9323f529d64bb06e4efa8920b4e9accfb"}}}], "date": "2015-11-03T05:44:48+00:00", "message": "Fixed bug where the ClockLine clock_limits were not taken into account when determining the minimum time between a wait and subsequent output.\nThis meant that triggers to secondary pseudoclocks, immediately followed by output could be faster than the allowed update rate of IntermediateDevices. This was fortunately caught further down the line, but should have never been a problem.\n\nThe wait() function (via a fix to trigger_all_pseudoclocks) now returns the correct length of time before you can command further output.\n\nIt is possible this bug only affected wait() commands with a single pseudoclock where the pseudoclock trigger_duration was very short and the wait_monitor was on a clockline that had a high clock_limit.", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in philipstarkey/fixed-bug-where-all-wait-timeouts-were-s-1446517542861 (pull request #1)\n\nFixed bug where all wait timeouts were set to the timeout of the first wait.", "markup": "markdown", "html": "<p>Merged in philipstarkey/fixed-bug-where-all-wait-timeouts-were-s-1446517542861 (pull request #1)</p>\n<p>Fixed bug where all wait timeouts were set to the timeout of the first wait.</p>", "type": "rendered"}}, "hash": "43df3cb9323f529d64bb06e4efa8920b4e9accfb", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/43df3cb9323f529d64bb06e4efa8920b4e9accfb.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/43df3cb9323f529d64bb06e4efa8920b4e9accfb/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript/commits/43df3cb9323f529d64bb06e4efa8920b4e9accfb"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/43df3cb9323f529d64bb06e4efa8920b4e9accfb"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/43df3cb9323f529d64bb06e4efa8920b4e9accfb/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/43df3cb9323f529d64bb06e4efa8920b4e9accfb/statuses_page=1.json"}}, "author": {"raw": "Philip Starkey <philip.starkey@monash.edu>", "type": "author", "user": {"display_name": "Phil Starkey", "uuid": "{bf2034f3-ffd1-49fb-9bf4-e900788cfbff}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbf2034f3-ffd1-49fb-9bf4-e900788cfbff%7D"}, "html": {"href": "https://bitbucket.org/%7Bbf2034f3-ffd1-49fb-9bf4-e900788cfbff%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a5d16233c76364a4acbdc83e9ee02d96d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-3.png"}}, "nickname": "Philip Starkey", "type": "user", "account_id": "5e2d536c52522c0e6fe716ed"}}, "summary": {"raw": "Merged in philipstarkey/fixed-bug-where-all-wait-timeouts-were-s-1446517542861 (pull request #1)\n\nFixed bug where all wait timeouts were set to the timeout of the first wait.", "markup": "markdown", "html": "<p>Merged in philipstarkey/fixed-bug-where-all-wait-timeouts-were-s-1446517542861 (pull request #1)</p>\n<p>Fixed bug where all wait timeouts were set to the timeout of the first wait.</p>", "type": "rendered"}, "parents": [{"hash": "3735fcca8ce8b32941d162a7295aabb748756ece", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/3735fcca8ce8b32941d162a7295aabb748756ece.json"}, "html": {"href": "#!/cavitylab/labscript/commits/3735fcca8ce8b32941d162a7295aabb748756ece"}}}, {"hash": "949f12fd5dc72be0535c30fe5672b69f2a90f974", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/949f12fd5dc72be0535c30fe5672b69f2a90f974.json"}, "html": {"href": "#!/cavitylab/labscript/commits/949f12fd5dc72be0535c30fe5672b69f2a90f974"}}}], "date": "2015-11-03T02:26:21+00:00", "message": "Merged in philipstarkey/fixed-bug-where-all-wait-timeouts-were-s-1446517542861 (pull request #1)\n\nFixed bug where all wait timeouts were set to the timeout of the first wait.", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch philipstarkey/fixed-bug-where-all-wait-timeouts-were-s-1446517542861", "markup": "markdown", "html": "<p>Close branch philipstarkey/fixed-bug-where-all-wait-timeouts-were-s-1446517542861</p>", "type": "rendered"}}, "hash": "949f12fd5dc72be0535c30fe5672b69f2a90f974", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/949f12fd5dc72be0535c30fe5672b69f2a90f974.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/949f12fd5dc72be0535c30fe5672b69f2a90f974/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/949f12fd5dc72be0535c30fe5672b69f2a90f974"}, "html": {"href": "#!/cavitylab/labscript/commits/949f12fd5dc72be0535c30fe5672b69f2a90f974"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/949f12fd5dc72be0535c30fe5672b69f2a90f974"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/949f12fd5dc72be0535c30fe5672b69f2a90f974/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/949f12fd5dc72be0535c30fe5672b69f2a90f974/statuses_page=1.json"}}, "author": {"raw": "Philip Starkey <philip.starkey@monash.edu>", "type": "author", "user": {"display_name": "Phil Starkey", "uuid": "{bf2034f3-ffd1-49fb-9bf4-e900788cfbff}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbf2034f3-ffd1-49fb-9bf4-e900788cfbff%7D"}, "html": {"href": "https://bitbucket.org/%7Bbf2034f3-ffd1-49fb-9bf4-e900788cfbff%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a5d16233c76364a4acbdc83e9ee02d96d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-3.png"}}, "nickname": "Philip Starkey", "type": "user", "account_id": "5e2d536c52522c0e6fe716ed"}}, "summary": {"raw": "Close branch philipstarkey/fixed-bug-where-all-wait-timeouts-were-s-1446517542861", "markup": "markdown", "html": "<p>Close branch philipstarkey/fixed-bug-where-all-wait-timeouts-were-s-1446517542861</p>", "type": "rendered"}, "parents": [{"hash": "ceb002be0c5603981901357773a03228485055da", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ceb002be0c5603981901357773a03228485055da.json"}, "html": {"href": "#!/cavitylab/labscript/commits/ceb002be0c5603981901357773a03228485055da"}}}], "date": "2015-11-03T02:26:21+00:00", "message": "Close branch philipstarkey/fixed-bug-where-all-wait-timeouts-were-s-1446517542861", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bug where all wait timeouts were set to the timeout of the first wait.\n\nThis was due to a list comprehension leaking values into the namespace of the wait() function because we used a variable name in the list comprehension which was the same as one of the function arguments.\nThe list comprehension has been modified to use a dummy variable name", "markup": "markdown", "html": "<p>Fixed bug where all wait timeouts were set to the timeout of the first wait.</p>\n<p>This was due to a list comprehension leaking values into the namespace of the wait() function because we used a variable name in the list comprehension which was the same as one of the function arguments.<br />\nThe list comprehension has been modified to use a dummy variable name</p>", "type": "rendered"}}, "hash": "ceb002be0c5603981901357773a03228485055da", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ceb002be0c5603981901357773a03228485055da.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/ceb002be0c5603981901357773a03228485055da/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/ceb002be0c5603981901357773a03228485055da"}, "html": {"href": "#!/cavitylab/labscript/commits/ceb002be0c5603981901357773a03228485055da"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/ceb002be0c5603981901357773a03228485055da"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/ceb002be0c5603981901357773a03228485055da/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/ceb002be0c5603981901357773a03228485055da/statuses_page=1.json"}}, "author": {"raw": "Philip Starkey <philip.starkey@monash.edu>", "type": "author", "user": {"display_name": "Phil Starkey", "uuid": "{bf2034f3-ffd1-49fb-9bf4-e900788cfbff}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbf2034f3-ffd1-49fb-9bf4-e900788cfbff%7D"}, "html": {"href": "https://bitbucket.org/%7Bbf2034f3-ffd1-49fb-9bf4-e900788cfbff%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a5d16233c76364a4acbdc83e9ee02d96d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-3.png"}}, "nickname": "Philip Starkey", "type": "user", "account_id": "5e2d536c52522c0e6fe716ed"}}, "summary": {"raw": "Fixed bug where all wait timeouts were set to the timeout of the first wait.\n\nThis was due to a list comprehension leaking values into the namespace of the wait() function because we used a variable name in the list comprehension which was the same as one of the function arguments.\nThe list comprehension has been modified to use a dummy variable name", "markup": "markdown", "html": "<p>Fixed bug where all wait timeouts were set to the timeout of the first wait.</p>\n<p>This was due to a list comprehension leaking values into the namespace of the wait() function because we used a variable name in the list comprehension which was the same as one of the function arguments.<br />\nThe list comprehension has been modified to use a dummy variable name</p>", "type": "rendered"}, "parents": [{"hash": "3735fcca8ce8b32941d162a7295aabb748756ece", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/3735fcca8ce8b32941d162a7295aabb748756ece.json"}, "html": {"href": "#!/cavitylab/labscript/commits/3735fcca8ce8b32941d162a7295aabb748756ece"}}}], "date": "2015-11-03T02:26:05+00:00", "message": "Fixed bug where all wait timeouts were set to the timeout of the first wait.\n\nThis was due to a list comprehension leaking values into the namespace of the wait() function because we used a variable name in the list comprehension which was the same as one of the function arguments.\nThe list comprehension has been modified to use a dummy variable name", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a bug where the stop time was not updated to reflect the initial trigger time.\nfixes #1", "markup": "markdown", "html": "<p>Fixed a bug where the stop time was not updated to reflect the initial trigger time.<br />\nfixes #1</p>", "type": "rendered"}}, "hash": "3735fcca8ce8b32941d162a7295aabb748756ece", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/3735fcca8ce8b32941d162a7295aabb748756ece.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/3735fcca8ce8b32941d162a7295aabb748756ece/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/3735fcca8ce8b32941d162a7295aabb748756ece"}, "html": {"href": "#!/cavitylab/labscript/commits/3735fcca8ce8b32941d162a7295aabb748756ece"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/3735fcca8ce8b32941d162a7295aabb748756ece"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/3735fcca8ce8b32941d162a7295aabb748756ece/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/3735fcca8ce8b32941d162a7295aabb748756ece/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed a bug where the stop time was not updated to reflect the initial trigger time.\nfixes #1", "markup": "markdown", "html": "<p>Fixed a bug where the stop time was not updated to reflect the initial trigger time.<br />\nfixes #1</p>", "type": "rendered"}, "parents": [{"hash": "f482ebda149268f0692ca736d74a03fb30a2980c", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/f482ebda149268f0692ca736d74a03fb30a2980c.json"}, "html": {"href": "#!/cavitylab/labscript/commits/f482ebda149268f0692ca736d74a03fb30a2980c"}}}], "date": "2015-05-25T07:04:45+00:00", "message": "Fixed a bug where the stop time was not updated to reflect the initial trigger time.\nfixes #1", "type": "commit"}, {"rendered": {"message": {"raw": "Backed out changeset: f5e16623c362", "markup": "markdown", "html": "<p>Backed out changeset: <a href=\"#!/cavitylab/labscript/commits/f5e16623c362\" rel=\"nofollow\" class=\"ap-connect-link\">f5e16623c362</a></p>", "type": "rendered"}}, "hash": "f482ebda149268f0692ca736d74a03fb30a2980c", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/f482ebda149268f0692ca736d74a03fb30a2980c.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/f482ebda149268f0692ca736d74a03fb30a2980c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/f482ebda149268f0692ca736d74a03fb30a2980c"}, "html": {"href": "#!/cavitylab/labscript/commits/f482ebda149268f0692ca736d74a03fb30a2980c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/f482ebda149268f0692ca736d74a03fb30a2980c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/f482ebda149268f0692ca736d74a03fb30a2980c/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/f482ebda149268f0692ca736d74a03fb30a2980c/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Backed out changeset: f5e16623c362", "markup": "markdown", "html": "<p>Backed out changeset: <a href=\"#!/cavitylab/labscript/commits/f5e16623c362\" rel=\"nofollow\" class=\"ap-connect-link\">f5e16623c362</a></p>", "type": "rendered"}, "parents": [{"hash": "f5e16623c362c5f018db6ecef9ff7d26393e5e96", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/f5e16623c362c5f018db6ecef9ff7d26393e5e96.json"}, "html": {"href": "#!/cavitylab/labscript/commits/f5e16623c362c5f018db6ecef9ff7d26393e5e96"}}}], "date": "2015-05-13T04:26:27+00:00", "message": "Backed out changeset: f5e16623c362", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a bug where the stop time was able to be set at the time of the\nlast instruction.", "markup": "markdown", "html": "<p>Fixed a bug where the stop time was able to be set at the time of the<br />\nlast instruction.</p>", "type": "rendered"}}, "hash": "f5e16623c362c5f018db6ecef9ff7d26393e5e96", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/f5e16623c362c5f018db6ecef9ff7d26393e5e96.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/f5e16623c362c5f018db6ecef9ff7d26393e5e96/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/f5e16623c362c5f018db6ecef9ff7d26393e5e96"}, "html": {"href": "#!/cavitylab/labscript/commits/f5e16623c362c5f018db6ecef9ff7d26393e5e96"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/f5e16623c362c5f018db6ecef9ff7d26393e5e96"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/f5e16623c362c5f018db6ecef9ff7d26393e5e96/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/f5e16623c362c5f018db6ecef9ff7d26393e5e96/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed a bug where the stop time was able to be set at the time of the\nlast instruction.", "markup": "markdown", "html": "<p>Fixed a bug where the stop time was able to be set at the time of the<br />\nlast instruction.</p>", "type": "rendered"}, "parents": [{"hash": "0754977dd0cf22373a7c5920fae771536dde3f92", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/0754977dd0cf22373a7c5920fae771536dde3f92.json"}, "html": {"href": "#!/cavitylab/labscript/commits/0754977dd0cf22373a7c5920fae771536dde3f92"}}}], "date": "2015-05-13T02:22:58+00:00", "message": "Fixed a bug where the stop time was able to be set at the time of the\nlast instruction.", "type": "commit"}, {"rendered": {"message": {"raw": "Added the beginnings of sphinx documentation (will be publicly hosted on readthedocs.org)", "markup": "markdown", "html": "<p>Added the beginnings of sphinx documentation (will be publicly hosted on readthedocs.org)</p>", "type": "rendered"}}, "hash": "0754977dd0cf22373a7c5920fae771536dde3f92", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/0754977dd0cf22373a7c5920fae771536dde3f92.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/0754977dd0cf22373a7c5920fae771536dde3f92/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/0754977dd0cf22373a7c5920fae771536dde3f92"}, "html": {"href": "#!/cavitylab/labscript/commits/0754977dd0cf22373a7c5920fae771536dde3f92"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/0754977dd0cf22373a7c5920fae771536dde3f92"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/0754977dd0cf22373a7c5920fae771536dde3f92/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/0754977dd0cf22373a7c5920fae771536dde3f92/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added the beginnings of sphinx documentation (will be publicly hosted on readthedocs.org)", "markup": "markdown", "html": "<p>Added the beginnings of sphinx documentation (will be publicly hosted on readthedocs.org)</p>", "type": "rendered"}, "parents": [{"hash": "01288ca7d413c983790abbee980ffb1a9ac5b79d", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/01288ca7d413c983790abbee980ffb1a9ac5b79d.json"}, "html": {"href": "#!/cavitylab/labscript/commits/01288ca7d413c983790abbee980ffb1a9ac5b79d"}}}], "date": "2015-01-16T04:47:29+00:00", "message": "Added the beginnings of sphinx documentation (will be publicly hosted on readthedocs.org)", "type": "commit"}, {"rendered": {"message": {"raw": "Added tag 2.1.0 for changeset 459ab641faa1", "markup": "markdown", "html": "<p>Added tag 2.1.0 for changeset <a href=\"#!/cavitylab/labscript/commits/459ab641faa1\" rel=\"nofollow\" class=\"ap-connect-link\">459ab641faa1</a></p>", "type": "rendered"}}, "hash": "01288ca7d413c983790abbee980ffb1a9ac5b79d", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/01288ca7d413c983790abbee980ffb1a9ac5b79d.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/01288ca7d413c983790abbee980ffb1a9ac5b79d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/01288ca7d413c983790abbee980ffb1a9ac5b79d"}, "html": {"href": "#!/cavitylab/labscript/commits/01288ca7d413c983790abbee980ffb1a9ac5b79d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/01288ca7d413c983790abbee980ffb1a9ac5b79d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/01288ca7d413c983790abbee980ffb1a9ac5b79d/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/01288ca7d413c983790abbee980ffb1a9ac5b79d/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added tag 2.1.0 for changeset 459ab641faa1", "markup": "markdown", "html": "<p>Added tag 2.1.0 for changeset <a href=\"#!/cavitylab/labscript/commits/459ab641faa1\" rel=\"nofollow\" class=\"ap-connect-link\">459ab641faa1</a></p>", "type": "rendered"}, "parents": [{"hash": "459ab641faa150cc4cde09a41ddd40e60a5abcc4", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/459ab641faa150cc4cde09a41ddd40e60a5abcc4.json"}, "html": {"href": "#!/cavitylab/labscript/commits/459ab641faa150cc4cde09a41ddd40e60a5abcc4"}}}], "date": "2015-01-08T03:21:33+00:00", "message": "Added tag 2.1.0 for changeset 459ab641faa1", "type": "commit"}, {"rendered": {"message": {"raw": "Bumped version to 2.1.0.\n\nReversed order of keyword arguments overwrite and location in Device.set_property()", "markup": "markdown", "html": "<p>Bumped version to 2.1.0.</p>\n<p>Reversed order of keyword arguments overwrite and location in Device.set_property()</p>", "type": "rendered"}}, "hash": "459ab641faa150cc4cde09a41ddd40e60a5abcc4", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/459ab641faa150cc4cde09a41ddd40e60a5abcc4.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/459ab641faa150cc4cde09a41ddd40e60a5abcc4/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/459ab641faa150cc4cde09a41ddd40e60a5abcc4"}, "html": {"href": "#!/cavitylab/labscript/commits/459ab641faa150cc4cde09a41ddd40e60a5abcc4"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/459ab641faa150cc4cde09a41ddd40e60a5abcc4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/459ab641faa150cc4cde09a41ddd40e60a5abcc4/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/459ab641faa150cc4cde09a41ddd40e60a5abcc4/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Bumped version to 2.1.0.\n\nReversed order of keyword arguments overwrite and location in Device.set_property()", "markup": "markdown", "html": "<p>Bumped version to 2.1.0.</p>\n<p>Reversed order of keyword arguments overwrite and location in Device.set_property()</p>", "type": "rendered"}, "parents": [{"hash": "3d3240dd868cea40c6e7bdafc7794f3b77281ea9", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/3d3240dd868cea40c6e7bdafc7794f3b77281ea9.json"}, "html": {"href": "#!/cavitylab/labscript/commits/3d3240dd868cea40c6e7bdafc7794f3b77281ea9"}}}], "date": "2015-01-08T03:21:21+00:00", "message": "Bumped version to 2.1.0.\n\nReversed order of keyword arguments overwrite and location in Device.set_property()", "type": "commit"}, {"rendered": {"message": {"raw": "Added requirement for labscript_utils 2.2", "markup": "markdown", "html": "<p>Added requirement for labscript_utils 2.2</p>", "type": "rendered"}}, "hash": "3d3240dd868cea40c6e7bdafc7794f3b77281ea9", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/3d3240dd868cea40c6e7bdafc7794f3b77281ea9.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/3d3240dd868cea40c6e7bdafc7794f3b77281ea9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/3d3240dd868cea40c6e7bdafc7794f3b77281ea9"}, "html": {"href": "#!/cavitylab/labscript/commits/3d3240dd868cea40c6e7bdafc7794f3b77281ea9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/3d3240dd868cea40c6e7bdafc7794f3b77281ea9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/3d3240dd868cea40c6e7bdafc7794f3b77281ea9/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/3d3240dd868cea40c6e7bdafc7794f3b77281ea9/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added requirement for labscript_utils 2.2", "markup": "markdown", "html": "<p>Added requirement for labscript_utils 2.2</p>", "type": "rendered"}, "parents": [{"hash": "ceda18018d1b11385d89ada36e5f6f0ba1d95a73", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ceda18018d1b11385d89ada36e5f6f0ba1d95a73.json"}, "html": {"href": "#!/cavitylab/labscript/commits/ceda18018d1b11385d89ada36e5f6f0ba1d95a73"}}}], "date": "2015-01-07T05:54:20+00:00", "message": "Added requirement for labscript_utils 2.2", "type": "commit"}, {"rendered": {"message": {"raw": "Added tag 2.0.2 for changeset 10e3b0b7017d", "markup": "markdown", "html": "<p>Added tag 2.0.2 for changeset <a href=\"#!/cavitylab/labscript/commits/10e3b0b7017d\" rel=\"nofollow\" class=\"ap-connect-link\">10e3b0b7017d</a></p>", "type": "rendered"}}, "hash": "ceda18018d1b11385d89ada36e5f6f0ba1d95a73", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ceda18018d1b11385d89ada36e5f6f0ba1d95a73.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/ceda18018d1b11385d89ada36e5f6f0ba1d95a73/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/ceda18018d1b11385d89ada36e5f6f0ba1d95a73"}, "html": {"href": "#!/cavitylab/labscript/commits/ceda18018d1b11385d89ada36e5f6f0ba1d95a73"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/ceda18018d1b11385d89ada36e5f6f0ba1d95a73"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/ceda18018d1b11385d89ada36e5f6f0ba1d95a73/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/ceda18018d1b11385d89ada36e5f6f0ba1d95a73/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added tag 2.0.2 for changeset 10e3b0b7017d", "markup": "markdown", "html": "<p>Added tag 2.0.2 for changeset <a href=\"#!/cavitylab/labscript/commits/10e3b0b7017d\" rel=\"nofollow\" class=\"ap-connect-link\">10e3b0b7017d</a></p>", "type": "rendered"}, "parents": [{"hash": "9069956de7685a4d0e33fca68546c450443d81b4", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/9069956de7685a4d0e33fca68546c450443d81b4.json"}, "html": {"href": "#!/cavitylab/labscript/commits/9069956de7685a4d0e33fca68546c450443d81b4"}}}], "date": "2015-01-05T23:59:05+00:00", "message": "Added tag 2.0.2 for changeset 10e3b0b7017d", "type": "commit"}, {"rendered": {"message": {"raw": "Fixes and changes to properties (previously referred to as generic attributes)\n\nImplemented serialisation at several points:\n    - Connection table properties and unit conversion parameters are both now\n      serialised unconditionally using JSON.\n    - Device properties are now written in write_device_properties, which is\n      called from stop(), rather than earlier during init_device_group.\n      This is so that device code can call self.set_property(... location='device_properties')\n      after init_device_group (which now doesn't do much) and still have these\n      be written to the file.\n    - Renamed 'destination' to 'location' everyhwere (more meaningful for 'get')\n    - This code relies on serialisation and deserialisation code in labscript_utils.properties.\n\nFixed a bug where added_properties was passed into the decorator by itself\nrather than as a list; 'in' checks still passed, as all strings are substrings\nof themselves, but this would produce broken behaviour in other cases.", "markup": "markdown", "html": "<p>Fixes and changes to properties (previously referred to as generic attributes)</p>\n<p>Implemented serialisation at several points:<br />\n    - Connection table properties and unit conversion parameters are both now<br />\n      serialised unconditionally using JSON.<br />\n    - Device properties are now written in write_device_properties, which is<br />\n      called from stop(), rather than earlier during init_device_group.<br />\n      This is so that device code can call self.set_property(... location='device_properties')<br />\n      after init_device_group (which now doesn't do much) and still have these<br />\n      be written to the file.<br />\n    - Renamed 'destination' to 'location' everyhwere (more meaningful for 'get')<br />\n    - This code relies on serialisation and deserialisation code in labscript_utils.properties.</p>\n<p>Fixed a bug where added_properties was passed into the decorator by itself<br />\nrather than as a list; 'in' checks still passed, as all strings are substrings<br />\nof themselves, but this would produce broken behaviour in other cases.</p>", "type": "rendered"}}, "hash": "9069956de7685a4d0e33fca68546c450443d81b4", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/9069956de7685a4d0e33fca68546c450443d81b4.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/9069956de7685a4d0e33fca68546c450443d81b4/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/9069956de7685a4d0e33fca68546c450443d81b4"}, "html": {"href": "#!/cavitylab/labscript/commits/9069956de7685a4d0e33fca68546c450443d81b4"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/9069956de7685a4d0e33fca68546c450443d81b4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/9069956de7685a4d0e33fca68546c450443d81b4/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/9069956de7685a4d0e33fca68546c450443d81b4/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixes and changes to properties (previously referred to as generic attributes)\n\nImplemented serialisation at several points:\n    - Connection table properties and unit conversion parameters are both now\n      serialised unconditionally using JSON.\n    - Device properties are now written in write_device_properties, which is\n      called from stop(), rather than earlier during init_device_group.\n      This is so that device code can call self.set_property(... location='device_properties')\n      after init_device_group (which now doesn't do much) and still have these\n      be written to the file.\n    - Renamed 'destination' to 'location' everyhwere (more meaningful for 'get')\n    - This code relies on serialisation and deserialisation code in labscript_utils.properties.\n\nFixed a bug where added_properties was passed into the decorator by itself\nrather than as a list; 'in' checks still passed, as all strings are substrings\nof themselves, but this would produce broken behaviour in other cases.", "markup": "markdown", "html": "<p>Fixes and changes to properties (previously referred to as generic attributes)</p>\n<p>Implemented serialisation at several points:<br />\n    - Connection table properties and unit conversion parameters are both now<br />\n      serialised unconditionally using JSON.<br />\n    - Device properties are now written in write_device_properties, which is<br />\n      called from stop(), rather than earlier during init_device_group.<br />\n      This is so that device code can call self.set_property(... location='device_properties')<br />\n      after init_device_group (which now doesn't do much) and still have these<br />\n      be written to the file.<br />\n    - Renamed 'destination' to 'location' everyhwere (more meaningful for 'get')<br />\n    - This code relies on serialisation and deserialisation code in labscript_utils.properties.</p>\n<p>Fixed a bug where added_properties was passed into the decorator by itself<br />\nrather than as a list; 'in' checks still passed, as all strings are substrings<br />\nof themselves, but this would produce broken behaviour in other cases.</p>", "type": "rendered"}, "parents": [{"hash": "9cb698a019fba0f392ba2efb94a14dbd5202fead", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/9cb698a019fba0f392ba2efb94a14dbd5202fead.json"}, "html": {"href": "#!/cavitylab/labscript/commits/9cb698a019fba0f392ba2efb94a14dbd5202fead"}}}], "date": "2015-01-05T06:14:53+00:00", "message": "Fixes and changes to properties (previously referred to as generic attributes)\n\nImplemented serialisation at several points:\n    - Connection table properties and unit conversion parameters are both now\n      serialised unconditionally using JSON.\n    - Device properties are now written in write_device_properties, which is\n      called from stop(), rather than earlier during init_device_group.\n      This is so that device code can call self.set_property(... location='device_properties')\n      after init_device_group (which now doesn't do much) and still have these\n      be written to the file.\n    - Renamed 'destination' to 'location' everyhwere (more meaningful for 'get')\n    - This code relies on serialisation and deserialisation code in labscript_utils.properties.\n\nFixed a bug where added_properties was passed into the decorator by itself\nrather than as a list; 'in' checks still passed, as all strings are substrings\nof themselves, but this would produce broken behaviour in other cases.", "type": "commit"}, {"rendered": {"message": {"raw": "Turned on gzip compression", "markup": "markdown", "html": "<p>Turned on gzip compression</p>", "type": "rendered"}}, "hash": "9cb698a019fba0f392ba2efb94a14dbd5202fead", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/9cb698a019fba0f392ba2efb94a14dbd5202fead.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/9cb698a019fba0f392ba2efb94a14dbd5202fead/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/9cb698a019fba0f392ba2efb94a14dbd5202fead"}, "html": {"href": "#!/cavitylab/labscript/commits/9cb698a019fba0f392ba2efb94a14dbd5202fead"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/9cb698a019fba0f392ba2efb94a14dbd5202fead"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/9cb698a019fba0f392ba2efb94a14dbd5202fead/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/9cb698a019fba0f392ba2efb94a14dbd5202fead/statuses_page=1.json"}}, "author": {"raw": "Ian Spielman <spielman@umd.edu>", "type": "author", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}}, "summary": {"raw": "Turned on gzip compression", "markup": "markdown", "html": "<p>Turned on gzip compression</p>", "type": "rendered"}, "parents": [{"hash": "626b589df1288bcff05f57bcf2e6112a6b79ece4", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/626b589df1288bcff05f57bcf2e6112a6b79ece4.json"}, "html": {"href": "#!/cavitylab/labscript/commits/626b589df1288bcff05f57bcf2e6112a6b79ece4"}}}], "date": "2014-12-16T21:47:31+00:00", "message": "Turned on gzip compression", "type": "commit"}, {"rendered": {"message": {"raw": "Add valid destinations for \"unit_conversion_parameters\" and \"unit_conversion_class\"\nDID NOT IMPLEMENT PLACING DATA THERE", "markup": "markdown", "html": "<p>Add valid destinations for \"unit_conversion_parameters\" and \"unit_conversion_class\"<br />\nDID NOT IMPLEMENT PLACING DATA THERE</p>", "type": "rendered"}}, "hash": "626b589df1288bcff05f57bcf2e6112a6b79ece4", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/626b589df1288bcff05f57bcf2e6112a6b79ece4.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/626b589df1288bcff05f57bcf2e6112a6b79ece4/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/626b589df1288bcff05f57bcf2e6112a6b79ece4"}, "html": {"href": "#!/cavitylab/labscript/commits/626b589df1288bcff05f57bcf2e6112a6b79ece4"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/626b589df1288bcff05f57bcf2e6112a6b79ece4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/626b589df1288bcff05f57bcf2e6112a6b79ece4/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/626b589df1288bcff05f57bcf2e6112a6b79ece4/statuses_page=1.json"}}, "author": {"raw": "Ian Spielman <spielman@umd.edu>", "type": "author", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}}, "summary": {"raw": "Add valid destinations for \"unit_conversion_parameters\" and \"unit_conversion_class\"\nDID NOT IMPLEMENT PLACING DATA THERE", "markup": "markdown", "html": "<p>Add valid destinations for \"unit_conversion_parameters\" and \"unit_conversion_class\"<br />\nDID NOT IMPLEMENT PLACING DATA THERE</p>", "type": "rendered"}, "parents": [{"hash": "e6880b9cb16f0a123dfcbb3fd2d1ed7d5467f0fc", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/e6880b9cb16f0a123dfcbb3fd2d1ed7d5467f0fc.json"}, "html": {"href": "#!/cavitylab/labscript/commits/e6880b9cb16f0a123dfcbb3fd2d1ed7d5467f0fc"}}}], "date": "2014-12-16T21:24:50+00:00", "message": "Add valid destinations for \"unit_conversion_parameters\" and \"unit_conversion_class\"\nDID NOT IMPLEMENT PLACING DATA THERE", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed the inevitable bugs.", "markup": "markdown", "html": "<p>Fixed the inevitable bugs.</p>", "type": "rendered"}}, "hash": "e6880b9cb16f0a123dfcbb3fd2d1ed7d5467f0fc", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/e6880b9cb16f0a123dfcbb3fd2d1ed7d5467f0fc.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/e6880b9cb16f0a123dfcbb3fd2d1ed7d5467f0fc/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/e6880b9cb16f0a123dfcbb3fd2d1ed7d5467f0fc"}, "html": {"href": "#!/cavitylab/labscript/commits/e6880b9cb16f0a123dfcbb3fd2d1ed7d5467f0fc"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/e6880b9cb16f0a123dfcbb3fd2d1ed7d5467f0fc"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/e6880b9cb16f0a123dfcbb3fd2d1ed7d5467f0fc/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/e6880b9cb16f0a123dfcbb3fd2d1ed7d5467f0fc/statuses_page=1.json"}}, "author": {"raw": "Ian Spielman <spielman@umd.edu>", "type": "author", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}}, "summary": {"raw": "Fixed the inevitable bugs.", "markup": "markdown", "html": "<p>Fixed the inevitable bugs.</p>", "type": "rendered"}, "parents": [{"hash": "ec69e1bd3974a6472692457b825ff06554934c6c", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ec69e1bd3974a6472692457b825ff06554934c6c.json"}, "html": {"href": "#!/cavitylab/labscript/commits/ec69e1bd3974a6472692457b825ff06554934c6c"}}}], "date": "2014-12-16T14:53:58+00:00", "message": "Fixed the inevitable bugs.", "type": "commit"}, {"rendered": {"message": {"raw": "On the basis of converesations with the Monash team, I have revised the\nproperties decorator to be much more general.  Currently device is setup to\nexpect properties set by the instantian attribute:\n\n    valid_property_destinations = {\"con_table_properties\", \"device_properties\"}\n\nso a viable function call might look like (from Camera):\n\n    @set_passed_properties(\n        property_names = {\n            \"con_table_properties\": [\"BIAS_port\"],\n            \"device_properties\": [\"serial_number\", \"SDK\", \"effective_pixel_size\", \"exposuretime\", \"orientation\", \"trigger_edge_type\", \"minimum_recovery_time\", \"added_properties\"]}\n        )\n    def __init__(self, name, parent_device, connection,\n                 BIAS_port = 1027, serial_number = 0x0, SDK='', effective_pixel_size=0.0,\n                 exposuretime=None, orientation='side', trigger_edge_type='rising', minimum_recovery_time=0,\n                 **kwargs):\n\nWe see several things here:\n(1) the destination of any property is limited by the options defined in\n        valid_property_destinations. This can be altered in child objects, but\n        it would lead to problems if we do not create a superset of what is in\n        Device.\n\n(2) We have two destinations by default: information that is sent to the\n        properties entry of the connection table, and information that is sent\n        to the device.  !!! I have not written code that actually writes this!!!\n\n(3) Digging into the code you will find that Device.__init__ now takes the\n        named argument \"added_properties\" which can be absolutly anything the\n        user wants in the \"device_properties\" propties.  These are assumed\n        to have no special meaning within labscript proper, but is there\n        to provide extra information.  For example, to configure the camera\n        in labview, where different cameras want quite different information.", "markup": "markdown", "html": "<p>On the basis of converesations with the Monash team, I have revised the<br />\nproperties decorator to be much more general.  Currently device is setup to<br />\nexpect properties set by the instantian attribute:</p>\n<div class=\"codehilite\"><pre><span></span>valid_property_destinations = {&quot;con_table_properties&quot;, &quot;device_properties&quot;}\n</pre></div>\n\n\n<p>so a viable function call might look like (from Camera):</p>\n<div class=\"codehilite\"><pre><span></span>@set_passed_properties(\n    property_names = {\n        &quot;con_table_properties&quot;: [&quot;BIAS_port&quot;],\n        &quot;device_properties&quot;: [&quot;serial_number&quot;, &quot;SDK&quot;, &quot;effective_pixel_size&quot;, &quot;exposuretime&quot;, &quot;orientation&quot;, &quot;trigger_edge_type&quot;, &quot;minimum_recovery_time&quot;, &quot;added_properties&quot;]}\n    )\ndef __init__(self, name, parent_device, connection,\n             BIAS_port = 1027, serial_number = 0x0, SDK=&#39;&#39;, effective_pixel_size=0.0,\n             exposuretime=None, orientation=&#39;side&#39;, trigger_edge_type=&#39;rising&#39;, minimum_recovery_time=0,\n             **kwargs):\n</pre></div>\n\n\n<p>We see several things here:<br />\n(1) the destination of any property is limited by the options defined in<br />\n        valid_property_destinations. This can be altered in child objects, but<br />\n        it would lead to problems if we do not create a superset of what is in<br />\n        Device.</p>\n<p>(2) We have two destinations by default: information that is sent to the<br />\n        properties entry of the connection table, and information that is sent<br />\n        to the device.  !!! I have not written code that actually writes this!!!</p>\n<p>(3) Digging into the code you will find that Device.<strong>init</strong> now takes the<br />\n        named argument \"added_properties\" which can be absolutly anything the<br />\n        user wants in the \"device_properties\" propties.  These are assumed<br />\n        to have no special meaning within labscript proper, but is there<br />\n        to provide extra information.  For example, to configure the camera<br />\n        in labview, where different cameras want quite different information.</p>", "type": "rendered"}}, "hash": "ec69e1bd3974a6472692457b825ff06554934c6c", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ec69e1bd3974a6472692457b825ff06554934c6c.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/ec69e1bd3974a6472692457b825ff06554934c6c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/ec69e1bd3974a6472692457b825ff06554934c6c"}, "html": {"href": "#!/cavitylab/labscript/commits/ec69e1bd3974a6472692457b825ff06554934c6c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/ec69e1bd3974a6472692457b825ff06554934c6c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/ec69e1bd3974a6472692457b825ff06554934c6c/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/ec69e1bd3974a6472692457b825ff06554934c6c/statuses_page=1.json"}}, "author": {"raw": "Ian Spielman <spielman@umd.edu>", "type": "author", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}}, "summary": {"raw": "On the basis of converesations with the Monash team, I have revised the\nproperties decorator to be much more general.  Currently device is setup to\nexpect properties set by the instantian attribute:\n\n    valid_property_destinations = {\"con_table_properties\", \"device_properties\"}\n\nso a viable function call might look like (from Camera):\n\n    @set_passed_properties(\n        property_names = {\n            \"con_table_properties\": [\"BIAS_port\"],\n            \"device_properties\": [\"serial_number\", \"SDK\", \"effective_pixel_size\", \"exposuretime\", \"orientation\", \"trigger_edge_type\", \"minimum_recovery_time\", \"added_properties\"]}\n        )\n    def __init__(self, name, parent_device, connection,\n                 BIAS_port = 1027, serial_number = 0x0, SDK='', effective_pixel_size=0.0,\n                 exposuretime=None, orientation='side', trigger_edge_type='rising', minimum_recovery_time=0,\n                 **kwargs):\n\nWe see several things here:\n(1) the destination of any property is limited by the options defined in\n        valid_property_destinations. This can be altered in child objects, but\n        it would lead to problems if we do not create a superset of what is in\n        Device.\n\n(2) We have two destinations by default: information that is sent to the\n        properties entry of the connection table, and information that is sent\n        to the device.  !!! I have not written code that actually writes this!!!\n\n(3) Digging into the code you will find that Device.__init__ now takes the\n        named argument \"added_properties\" which can be absolutly anything the\n        user wants in the \"device_properties\" propties.  These are assumed\n        to have no special meaning within labscript proper, but is there\n        to provide extra information.  For example, to configure the camera\n        in labview, where different cameras want quite different information.", "markup": "markdown", "html": "<p>On the basis of converesations with the Monash team, I have revised the<br />\nproperties decorator to be much more general.  Currently device is setup to<br />\nexpect properties set by the instantian attribute:</p>\n<div class=\"codehilite\"><pre><span></span>valid_property_destinations = {&quot;con_table_properties&quot;, &quot;device_properties&quot;}\n</pre></div>\n\n\n<p>so a viable function call might look like (from Camera):</p>\n<div class=\"codehilite\"><pre><span></span>@set_passed_properties(\n    property_names = {\n        &quot;con_table_properties&quot;: [&quot;BIAS_port&quot;],\n        &quot;device_properties&quot;: [&quot;serial_number&quot;, &quot;SDK&quot;, &quot;effective_pixel_size&quot;, &quot;exposuretime&quot;, &quot;orientation&quot;, &quot;trigger_edge_type&quot;, &quot;minimum_recovery_time&quot;, &quot;added_properties&quot;]}\n    )\ndef __init__(self, name, parent_device, connection,\n             BIAS_port = 1027, serial_number = 0x0, SDK=&#39;&#39;, effective_pixel_size=0.0,\n             exposuretime=None, orientation=&#39;side&#39;, trigger_edge_type=&#39;rising&#39;, minimum_recovery_time=0,\n             **kwargs):\n</pre></div>\n\n\n<p>We see several things here:<br />\n(1) the destination of any property is limited by the options defined in<br />\n        valid_property_destinations. This can be altered in child objects, but<br />\n        it would lead to problems if we do not create a superset of what is in<br />\n        Device.</p>\n<p>(2) We have two destinations by default: information that is sent to the<br />\n        properties entry of the connection table, and information that is sent<br />\n        to the device.  !!! I have not written code that actually writes this!!!</p>\n<p>(3) Digging into the code you will find that Device.<strong>init</strong> now takes the<br />\n        named argument \"added_properties\" which can be absolutly anything the<br />\n        user wants in the \"device_properties\" propties.  These are assumed<br />\n        to have no special meaning within labscript proper, but is there<br />\n        to provide extra information.  For example, to configure the camera<br />\n        in labview, where different cameras want quite different information.</p>", "type": "rendered"}, "parents": [{"hash": "9239106d9815aa4a90fa51fbebcb61d56569ad1e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/9239106d9815aa4a90fa51fbebcb61d56569ad1e.json"}, "html": {"href": "#!/cavitylab/labscript/commits/9239106d9815aa4a90fa51fbebcb61d56569ad1e"}}}], "date": "2014-12-16T13:58:39+00:00", "message": "On the basis of converesations with the Monash team, I have revised the\nproperties decorator to be much more general.  Currently device is setup to\nexpect properties set by the instantian attribute:\n\n    valid_property_destinations = {\"con_table_properties\", \"device_properties\"}\n\nso a viable function call might look like (from Camera):\n\n    @set_passed_properties(\n        property_names = {\n            \"con_table_properties\": [\"BIAS_port\"],\n            \"device_properties\": [\"serial_number\", \"SDK\", \"effective_pixel_size\", \"exposuretime\", \"orientation\", \"trigger_edge_type\", \"minimum_recovery_time\", \"added_properties\"]}\n        )\n    def __init__(self, name, parent_device, connection,\n                 BIAS_port = 1027, serial_number = 0x0, SDK='', effective_pixel_size=0.0,\n                 exposuretime=None, orientation='side', trigger_edge_type='rising', minimum_recovery_time=0,\n                 **kwargs):\n\nWe see several things here:\n(1) the destination of any property is limited by the options defined in\n        valid_property_destinations. This can be altered in child objects, but\n        it would lead to problems if we do not create a superset of what is in\n        Device.\n\n(2) We have two destinations by default: information that is sent to the\n        properties entry of the connection table, and information that is sent\n        to the device.  !!! I have not written code that actually writes this!!!\n\n(3) Digging into the code you will find that Device.__init__ now takes the\n        named argument \"added_properties\" which can be absolutly anything the\n        user wants in the \"device_properties\" propties.  These are assumed\n        to have no special meaning within labscript proper, but is there\n        to provide extra information.  For example, to configure the camera\n        in labview, where different cameras want quite different information.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a bug in Device.__init__ - self.allowed children was not being set\ncorrectly.", "markup": "markdown", "html": "<p>Fixed a bug in Device.<strong>init</strong> - self.allowed children was not being set<br />\ncorrectly.</p>", "type": "rendered"}}, "hash": "9239106d9815aa4a90fa51fbebcb61d56569ad1e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/9239106d9815aa4a90fa51fbebcb61d56569ad1e.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/9239106d9815aa4a90fa51fbebcb61d56569ad1e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/9239106d9815aa4a90fa51fbebcb61d56569ad1e"}, "html": {"href": "#!/cavitylab/labscript/commits/9239106d9815aa4a90fa51fbebcb61d56569ad1e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/9239106d9815aa4a90fa51fbebcb61d56569ad1e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/9239106d9815aa4a90fa51fbebcb61d56569ad1e/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/9239106d9815aa4a90fa51fbebcb61d56569ad1e/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed a bug in Device.__init__ - self.allowed children was not being set\ncorrectly.", "markup": "markdown", "html": "<p>Fixed a bug in Device.<strong>init</strong> - self.allowed children was not being set<br />\ncorrectly.</p>", "type": "rendered"}, "parents": [{"hash": "d0508af0a52ea781d8e8ce94e3161b0739fb9fca", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/d0508af0a52ea781d8e8ce94e3161b0739fb9fca.json"}, "html": {"href": "#!/cavitylab/labscript/commits/d0508af0a52ea781d8e8ce94e3161b0739fb9fca"}}}], "date": "2014-12-12T17:35:07+00:00", "message": "Fixed a bug in Device.__init__ - self.allowed children was not being set\ncorrectly.", "type": "commit"}, {"rendered": {"message": {"raw": "Merge with Generic Attributes (again)", "markup": "markdown", "html": "<p>Merge with Generic Attributes (again)</p>", "type": "rendered"}}, "hash": "d0508af0a52ea781d8e8ce94e3161b0739fb9fca", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/d0508af0a52ea781d8e8ce94e3161b0739fb9fca.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/d0508af0a52ea781d8e8ce94e3161b0739fb9fca/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript/commits/d0508af0a52ea781d8e8ce94e3161b0739fb9fca"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/d0508af0a52ea781d8e8ce94e3161b0739fb9fca"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/d0508af0a52ea781d8e8ce94e3161b0739fb9fca/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/d0508af0a52ea781d8e8ce94e3161b0739fb9fca/statuses_page=1.json"}}, "author": {"raw": "Ian Spielman <spielman@umd.edu>", "type": "author", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}}, "summary": {"raw": "Merge with Generic Attributes (again)", "markup": "markdown", "html": "<p>Merge with Generic Attributes (again)</p>", "type": "rendered"}, "parents": [{"hash": "308c302bbbeb0791c1a3d88871fe59dbd0805d77", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/308c302bbbeb0791c1a3d88871fe59dbd0805d77.json"}, "html": {"href": "#!/cavitylab/labscript/commits/308c302bbbeb0791c1a3d88871fe59dbd0805d77"}}}, {"hash": "c3661b3d4d048c1ccc0a636bc023b4e80c6c8c75", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/c3661b3d4d048c1ccc0a636bc023b4e80c6c8c75.json"}, "html": {"href": "#!/cavitylab/labscript/commits/c3661b3d4d048c1ccc0a636bc023b4e80c6c8c75"}}}], "date": "2014-12-12T15:29:58+00:00", "message": "Merge with Generic Attributes (again)", "type": "commit"}, {"rendered": {"message": {"raw": "Removed debug code", "markup": "markdown", "html": "<p>Removed debug code</p>", "type": "rendered"}}, "hash": "308c302bbbeb0791c1a3d88871fe59dbd0805d77", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/308c302bbbeb0791c1a3d88871fe59dbd0805d77.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/308c302bbbeb0791c1a3d88871fe59dbd0805d77/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/308c302bbbeb0791c1a3d88871fe59dbd0805d77"}, "html": {"href": "#!/cavitylab/labscript/commits/308c302bbbeb0791c1a3d88871fe59dbd0805d77"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/308c302bbbeb0791c1a3d88871fe59dbd0805d77"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/308c302bbbeb0791c1a3d88871fe59dbd0805d77/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/308c302bbbeb0791c1a3d88871fe59dbd0805d77/statuses_page=1.json"}}, "author": {"raw": "Ian Spielman <spielman@umd.edu>", "type": "author", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}}, "summary": {"raw": "Removed debug code", "markup": "markdown", "html": "<p>Removed debug code</p>", "type": "rendered"}, "parents": [{"hash": "38b71683e1a3285d09ded0d4203763872cdb90a2", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/38b71683e1a3285d09ded0d4203763872cdb90a2.json"}, "html": {"href": "#!/cavitylab/labscript/commits/38b71683e1a3285d09ded0d4203763872cdb90a2"}}}], "date": "2014-12-12T13:30:50+00:00", "message": "Removed debug code", "type": "commit"}, {"rendered": {"message": {"raw": "Merge with Generic Attributes", "markup": "markdown", "html": "<p>Merge with Generic Attributes</p>", "type": "rendered"}}, "hash": "38b71683e1a3285d09ded0d4203763872cdb90a2", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/38b71683e1a3285d09ded0d4203763872cdb90a2.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/38b71683e1a3285d09ded0d4203763872cdb90a2/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript/commits/38b71683e1a3285d09ded0d4203763872cdb90a2"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/38b71683e1a3285d09ded0d4203763872cdb90a2"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/38b71683e1a3285d09ded0d4203763872cdb90a2/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/38b71683e1a3285d09ded0d4203763872cdb90a2/statuses_page=1.json"}}, "author": {"raw": "Ian Spielman <spielman@umd.edu>", "type": "author", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}}, "summary": {"raw": "Merge with Generic Attributes", "markup": "markdown", "html": "<p>Merge with Generic Attributes</p>", "type": "rendered"}, "parents": [{"hash": "10e3b0b7017d7ad9285fd4a1668647d92b4224ac", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/10e3b0b7017d7ad9285fd4a1668647d92b4224ac.json"}, "html": {"href": "#!/cavitylab/labscript/commits/10e3b0b7017d7ad9285fd4a1668647d92b4224ac"}}}, {"hash": "11fe683ca8380d135c5385becd2eabed49eba0ee", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/11fe683ca8380d135c5385becd2eabed49eba0ee.json"}, "html": {"href": "#!/cavitylab/labscript/commits/11fe683ca8380d135c5385becd2eabed49eba0ee"}}}], "date": "2014-12-12T13:15:35+00:00", "message": "Merge with Generic Attributes", "type": "commit"}, {"rendered": {"message": {"raw": "It turned out that many parameters are passed \"by keyword\" even if they\nare not keyword arguments in the function signature.  Updated decorator\nto ignore those.  Fixed error based on order of calling parent init in camera", "markup": "markdown", "html": "<p>It turned out that many parameters are passed \"by keyword\" even if they<br />\nare not keyword arguments in the function signature.  Updated decorator<br />\nto ignore those.  Fixed error based on order of calling parent init in camera</p>", "type": "rendered"}}, "hash": "c3661b3d4d048c1ccc0a636bc023b4e80c6c8c75", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/c3661b3d4d048c1ccc0a636bc023b4e80c6c8c75.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/c3661b3d4d048c1ccc0a636bc023b4e80c6c8c75/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/c3661b3d4d048c1ccc0a636bc023b4e80c6c8c75"}, "html": {"href": "#!/cavitylab/labscript/commits/c3661b3d4d048c1ccc0a636bc023b4e80c6c8c75"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/c3661b3d4d048c1ccc0a636bc023b4e80c6c8c75"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/c3661b3d4d048c1ccc0a636bc023b4e80c6c8c75/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/c3661b3d4d048c1ccc0a636bc023b4e80c6c8c75/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "It turned out that many parameters are passed \"by keyword\" even if they\nare not keyword arguments in the function signature.  Updated decorator\nto ignore those.  Fixed error based on order of calling parent init in camera", "markup": "markdown", "html": "<p>It turned out that many parameters are passed \"by keyword\" even if they<br />\nare not keyword arguments in the function signature.  Updated decorator<br />\nto ignore those.  Fixed error based on order of calling parent init in camera</p>", "type": "rendered"}, "parents": [{"hash": "11fe683ca8380d135c5385becd2eabed49eba0ee", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/11fe683ca8380d135c5385becd2eabed49eba0ee.json"}, "html": {"href": "#!/cavitylab/labscript/commits/11fe683ca8380d135c5385becd2eabed49eba0ee"}}}], "date": "2014-12-12T15:13:56+00:00", "message": "It turned out that many parameters are passed \"by keyword\" even if they\nare not keyword arguments in the function signature.  Updated decorator\nto ignore those.  Fixed error based on order of calling parent init in camera", "type": "commit"}, {"rendered": {"message": {"raw": "Paramter handeling implemented as a wrapper for Device and children's __init__\nmethod.", "markup": "markdown", "html": "<p>Paramter handeling implemented as a wrapper for Device and children's <strong>init</strong><br />\nmethod.</p>", "type": "rendered"}}, "hash": "11fe683ca8380d135c5385becd2eabed49eba0ee", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/11fe683ca8380d135c5385becd2eabed49eba0ee.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/11fe683ca8380d135c5385becd2eabed49eba0ee/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/11fe683ca8380d135c5385becd2eabed49eba0ee"}, "html": {"href": "#!/cavitylab/labscript/commits/11fe683ca8380d135c5385becd2eabed49eba0ee"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/11fe683ca8380d135c5385becd2eabed49eba0ee"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/11fe683ca8380d135c5385becd2eabed49eba0ee/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/11fe683ca8380d135c5385becd2eabed49eba0ee/statuses_page=1.json"}}, "author": {"raw": "Ian Spielman <spielman@umd.edu>", "type": "author", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}}, "summary": {"raw": "Paramter handeling implemented as a wrapper for Device and children's __init__\nmethod.", "markup": "markdown", "html": "<p>Paramter handeling implemented as a wrapper for Device and children's <strong>init</strong><br />\nmethod.</p>", "type": "rendered"}, "parents": [{"hash": "daf5c80128241aaff0a96f2442a57af29dd90337", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/daf5c80128241aaff0a96f2442a57af29dd90337.json"}, "html": {"href": "#!/cavitylab/labscript/commits/daf5c80128241aaff0a96f2442a57af29dd90337"}}}], "date": "2014-12-12T12:42:46+00:00", "message": "Paramter handeling implemented as a wrapper for Device and children's __init__\nmethod.", "type": "commit"}, {"rendered": {"message": {"raw": "Updated all device classes to include paramter forwarding.", "markup": "markdown", "html": "<p>Updated all device classes to include paramter forwarding.</p>", "type": "rendered"}}, "hash": "daf5c80128241aaff0a96f2442a57af29dd90337", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/daf5c80128241aaff0a96f2442a57af29dd90337.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/daf5c80128241aaff0a96f2442a57af29dd90337/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/daf5c80128241aaff0a96f2442a57af29dd90337"}, "html": {"href": "#!/cavitylab/labscript/commits/daf5c80128241aaff0a96f2442a57af29dd90337"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/daf5c80128241aaff0a96f2442a57af29dd90337"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/daf5c80128241aaff0a96f2442a57af29dd90337/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/daf5c80128241aaff0a96f2442a57af29dd90337/statuses_page=1.json"}}, "author": {"raw": "Ian Spielman <spielman@umd.edu>", "type": "author", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}}, "summary": {"raw": "Updated all device classes to include paramter forwarding.", "markup": "markdown", "html": "<p>Updated all device classes to include paramter forwarding.</p>", "type": "rendered"}, "parents": [{"hash": "9b43d5c96652ac67ccc2c5b68ce12e3e26020944", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/9b43d5c96652ac67ccc2c5b68ce12e3e26020944.json"}, "html": {"href": "#!/cavitylab/labscript/commits/9b43d5c96652ac67ccc2c5b68ce12e3e26020944"}}}], "date": "2014-12-11T04:41:52+00:00", "message": "Updated all device classes to include paramter forwarding.", "type": "commit"}, {"rendered": {"message": {"raw": "Added properties dictionary and methods to deal with these.  Began to port this\nprogramming pattern to all subclasses of Device.", "markup": "markdown", "html": "<p>Added properties dictionary and methods to deal with these.  Began to port this<br />\nprogramming pattern to all subclasses of Device.</p>", "type": "rendered"}}, "hash": "9b43d5c96652ac67ccc2c5b68ce12e3e26020944", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/9b43d5c96652ac67ccc2c5b68ce12e3e26020944.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/9b43d5c96652ac67ccc2c5b68ce12e3e26020944/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/9b43d5c96652ac67ccc2c5b68ce12e3e26020944"}, "html": {"href": "#!/cavitylab/labscript/commits/9b43d5c96652ac67ccc2c5b68ce12e3e26020944"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/9b43d5c96652ac67ccc2c5b68ce12e3e26020944"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/9b43d5c96652ac67ccc2c5b68ce12e3e26020944/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/9b43d5c96652ac67ccc2c5b68ce12e3e26020944/statuses_page=1.json"}}, "author": {"raw": "Ian Spielman <spielman@umd.edu>", "type": "author", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}}, "summary": {"raw": "Added properties dictionary and methods to deal with these.  Began to port this\nprogramming pattern to all subclasses of Device.", "markup": "markdown", "html": "<p>Added properties dictionary and methods to deal with these.  Began to port this<br />\nprogramming pattern to all subclasses of Device.</p>", "type": "rendered"}, "parents": [{"hash": "6c3461798d4e08106784511110d503d7a56e8c8a", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/6c3461798d4e08106784511110d503d7a56e8c8a.json"}, "html": {"href": "#!/cavitylab/labscript/commits/6c3461798d4e08106784511110d503d7a56e8c8a"}}}], "date": "2014-12-10T21:38:40+00:00", "message": "Added properties dictionary and methods to deal with these.  Began to port this\nprogramming pattern to all subclasses of Device.", "type": "commit"}, {"rendered": {"message": {"raw": "Added methods add_properties and get_properties to the device object the allow\ndictionaries to be read to and from the devices properties.  Useful if you\nwant to add properties from **kwargs for example.", "markup": "markdown", "html": "<p>Added methods add_properties and get_properties to the device object the allow<br />\ndictionaries to be read to and from the devices properties.  Useful if you<br />\nwant to add properties from **kwargs for example.</p>", "type": "rendered"}}, "hash": "6c3461798d4e08106784511110d503d7a56e8c8a", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/6c3461798d4e08106784511110d503d7a56e8c8a.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/6c3461798d4e08106784511110d503d7a56e8c8a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/6c3461798d4e08106784511110d503d7a56e8c8a"}, "html": {"href": "#!/cavitylab/labscript/commits/6c3461798d4e08106784511110d503d7a56e8c8a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/6c3461798d4e08106784511110d503d7a56e8c8a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/6c3461798d4e08106784511110d503d7a56e8c8a/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/6c3461798d4e08106784511110d503d7a56e8c8a/statuses_page=1.json"}}, "author": {"raw": "Ian Spielman <spielman@umd.edu>", "type": "author", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}}, "summary": {"raw": "Added methods add_properties and get_properties to the device object the allow\ndictionaries to be read to and from the devices properties.  Useful if you\nwant to add properties from **kwargs for example.", "markup": "markdown", "html": "<p>Added methods add_properties and get_properties to the device object the allow<br />\ndictionaries to be read to and from the devices properties.  Useful if you<br />\nwant to add properties from **kwargs for example.</p>", "type": "rendered"}, "parents": [{"hash": "697a658f7b246bc73d4f25f5f0110ae3e508c97e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/697a658f7b246bc73d4f25f5f0110ae3e508c97e.json"}, "html": {"href": "#!/cavitylab/labscript/commits/697a658f7b246bc73d4f25f5f0110ae3e508c97e"}}}], "date": "2014-12-10T17:59:01+00:00", "message": "Added methods add_properties and get_properties to the device object the allow\ndictionaries to be read to and from the devices properties.  Useful if you\nwant to add properties from **kwargs for example.", "type": "commit"}, {"rendered": {"message": {"raw": "Created a new branch to add the ability of the user to pass arbitarary config\nattributes to any device.  This involves some effort to pass **kwargs in\n__init__ all the way up to the root Device class.  Part of this will/may\nhave me writing attributes to a new \"Config\" group in the device group in the\nh5 file, so I will also be moving the code which creates the individual\ndevice group into the root __init__ as well.", "markup": "markdown", "html": "<p>Created a new branch to add the ability of the user to pass arbitarary config<br />\nattributes to any device.  This involves some effort to pass **kwargs in<br />\n<strong>init</strong> all the way up to the root Device class.  Part of this will/may<br />\nhave me writing attributes to a new \"Config\" group in the device group in the<br />\nh5 file, so I will also be moving the code which creates the individual<br />\ndevice group into the root <strong>init</strong> as well.</p>", "type": "rendered"}}, "hash": "697a658f7b246bc73d4f25f5f0110ae3e508c97e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/697a658f7b246bc73d4f25f5f0110ae3e508c97e.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/697a658f7b246bc73d4f25f5f0110ae3e508c97e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/697a658f7b246bc73d4f25f5f0110ae3e508c97e"}, "html": {"href": "#!/cavitylab/labscript/commits/697a658f7b246bc73d4f25f5f0110ae3e508c97e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/697a658f7b246bc73d4f25f5f0110ae3e508c97e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/697a658f7b246bc73d4f25f5f0110ae3e508c97e/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/697a658f7b246bc73d4f25f5f0110ae3e508c97e/statuses_page=1.json"}}, "author": {"raw": "Ian Spielman <spielman@umd.edu>", "type": "author", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}}, "summary": {"raw": "Created a new branch to add the ability of the user to pass arbitarary config\nattributes to any device.  This involves some effort to pass **kwargs in\n__init__ all the way up to the root Device class.  Part of this will/may\nhave me writing attributes to a new \"Config\" group in the device group in the\nh5 file, so I will also be moving the code which creates the individual\ndevice group into the root __init__ as well.", "markup": "markdown", "html": "<p>Created a new branch to add the ability of the user to pass arbitarary config<br />\nattributes to any device.  This involves some effort to pass **kwargs in<br />\n<strong>init</strong> all the way up to the root Device class.  Part of this will/may<br />\nhave me writing attributes to a new \"Config\" group in the device group in the<br />\nh5 file, so I will also be moving the code which creates the individual<br />\ndevice group into the root <strong>init</strong> as well.</p>", "type": "rendered"}, "parents": [{"hash": "10e3b0b7017d7ad9285fd4a1668647d92b4224ac", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/10e3b0b7017d7ad9285fd4a1668647d92b4224ac.json"}, "html": {"href": "#!/cavitylab/labscript/commits/10e3b0b7017d7ad9285fd4a1668647d92b4224ac"}}}], "date": "2014-12-10T14:32:45+00:00", "message": "Created a new branch to add the ability of the user to pass arbitarary config\nattributes to any device.  This involves some effort to pass **kwargs in\n__init__ all the way up to the root Device class.  Part of this will/may\nhave me writing attributes to a new \"Config\" group in the device group in the\nh5 file, so I will also be moving the code which creates the individual\ndevice group into the root __init__ as well.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bug in an error message", "markup": "markdown", "html": "<p>Fixed bug in an error message</p>", "type": "rendered"}}, "hash": "10e3b0b7017d7ad9285fd4a1668647d92b4224ac", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/10e3b0b7017d7ad9285fd4a1668647d92b4224ac.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/10e3b0b7017d7ad9285fd4a1668647d92b4224ac/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/10e3b0b7017d7ad9285fd4a1668647d92b4224ac"}, "html": {"href": "#!/cavitylab/labscript/commits/10e3b0b7017d7ad9285fd4a1668647d92b4224ac"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/10e3b0b7017d7ad9285fd4a1668647d92b4224ac"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/10e3b0b7017d7ad9285fd4a1668647d92b4224ac/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/10e3b0b7017d7ad9285fd4a1668647d92b4224ac/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed bug in an error message", "markup": "markdown", "html": "<p>Fixed bug in an error message</p>", "type": "rendered"}, "parents": [{"hash": "1a878aca371613aeab22d71ae5be56639f794909", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/1a878aca371613aeab22d71ae5be56639f794909.json"}, "html": {"href": "#!/cavitylab/labscript/commits/1a878aca371613aeab22d71ae5be56639f794909"}}}], "date": "2014-11-25T19:18:41+00:00", "message": "Fixed bug in an error message", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed typo in variable name, removed unused variable definitions in PseudoclockDevice constructor", "markup": "markdown", "html": "<p>Fixed typo in variable name, removed unused variable definitions in PseudoclockDevice constructor</p>", "type": "rendered"}}, "hash": "1a878aca371613aeab22d71ae5be56639f794909", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/1a878aca371613aeab22d71ae5be56639f794909.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/1a878aca371613aeab22d71ae5be56639f794909/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/1a878aca371613aeab22d71ae5be56639f794909"}, "html": {"href": "#!/cavitylab/labscript/commits/1a878aca371613aeab22d71ae5be56639f794909"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/1a878aca371613aeab22d71ae5be56639f794909"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/1a878aca371613aeab22d71ae5be56639f794909/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/1a878aca371613aeab22d71ae5be56639f794909/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed typo in variable name, removed unused variable definitions in PseudoclockDevice constructor", "markup": "markdown", "html": "<p>Fixed typo in variable name, removed unused variable definitions in PseudoclockDevice constructor</p>", "type": "rendered"}, "parents": [{"hash": "7e50a2a0ce065f1b0709b26b9c33dcd8838875b4", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/7e50a2a0ce065f1b0709b26b9c33dcd8838875b4.json"}, "html": {"href": "#!/cavitylab/labscript/commits/7e50a2a0ce065f1b0709b26b9c33dcd8838875b4"}}}], "date": "2014-11-10T03:43:27+00:00", "message": "Fixed typo in variable name, removed unused variable definitions in PseudoclockDevice constructor", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bug that broke default values for Static outputs\n\nWhen filling the raw_output array, you should access the value through the class property static_value so that it can be set to the default value for the class if it has not been explicitly set during the users experiment logic.", "markup": "markdown", "html": "<p>Fixed bug that broke default values for Static outputs</p>\n<p>When filling the raw_output array, you should access the value through the class property static_value so that it can be set to the default value for the class if it has not been explicitly set during the users experiment logic.</p>", "type": "rendered"}}, "hash": "7e50a2a0ce065f1b0709b26b9c33dcd8838875b4", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/7e50a2a0ce065f1b0709b26b9c33dcd8838875b4.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/7e50a2a0ce065f1b0709b26b9c33dcd8838875b4/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/7e50a2a0ce065f1b0709b26b9c33dcd8838875b4"}, "html": {"href": "#!/cavitylab/labscript/commits/7e50a2a0ce065f1b0709b26b9c33dcd8838875b4"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/7e50a2a0ce065f1b0709b26b9c33dcd8838875b4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/7e50a2a0ce065f1b0709b26b9c33dcd8838875b4/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/7e50a2a0ce065f1b0709b26b9c33dcd8838875b4/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed bug that broke default values for Static outputs\n\nWhen filling the raw_output array, you should access the value through the class property static_value so that it can be set to the default value for the class if it has not been explicitly set during the users experiment logic.", "markup": "markdown", "html": "<p>Fixed bug that broke default values for Static outputs</p>\n<p>When filling the raw_output array, you should access the value through the class property static_value so that it can be set to the default value for the class if it has not been explicitly set during the users experiment logic.</p>", "type": "rendered"}, "parents": [{"hash": "52f2a0c61ea6f7de93228c86739d688365f3629d", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/52f2a0c61ea6f7de93228c86739d688365f3629d.json"}, "html": {"href": "#!/cavitylab/labscript/commits/52f2a0c61ea6f7de93228c86739d688365f3629d"}}}], "date": "2014-11-10T03:42:16+00:00", "message": "Fixed bug that broke default values for Static outputs\n\nWhen filling the raw_output array, you should access the value through the class property static_value so that it can be set to the default value for the class if it has not been explicitly set during the users experiment logic.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bug with dtype\n\nChannels that were held constant while their parent clockline ramped another channel did not preserve the dtype of the value. Instead of forcing the value to float32 always, we now respect the dtype stored for the channel.", "markup": "markdown", "html": "<p>Fixed bug with dtype</p>\n<p>Channels that were held constant while their parent clockline ramped another channel did not preserve the dtype of the value. Instead of forcing the value to float32 always, we now respect the dtype stored for the channel.</p>", "type": "rendered"}}, "hash": "52f2a0c61ea6f7de93228c86739d688365f3629d", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/52f2a0c61ea6f7de93228c86739d688365f3629d.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/52f2a0c61ea6f7de93228c86739d688365f3629d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/52f2a0c61ea6f7de93228c86739d688365f3629d"}, "html": {"href": "#!/cavitylab/labscript/commits/52f2a0c61ea6f7de93228c86739d688365f3629d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/52f2a0c61ea6f7de93228c86739d688365f3629d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/52f2a0c61ea6f7de93228c86739d688365f3629d/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/52f2a0c61ea6f7de93228c86739d688365f3629d/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed bug with dtype\n\nChannels that were held constant while their parent clockline ramped another channel did not preserve the dtype of the value. Instead of forcing the value to float32 always, we now respect the dtype stored for the channel.", "markup": "markdown", "html": "<p>Fixed bug with dtype</p>\n<p>Channels that were held constant while their parent clockline ramped another channel did not preserve the dtype of the value. Instead of forcing the value to float32 always, we now respect the dtype stored for the channel.</p>", "type": "rendered"}, "parents": [{"hash": "135a9ea740e3255b98fb70e79cd28a599609bb6d", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/135a9ea740e3255b98fb70e79cd28a599609bb6d.json"}, "html": {"href": "#!/cavitylab/labscript/commits/135a9ea740e3255b98fb70e79cd28a599609bb6d"}}}], "date": "2014-11-10T02:36:13+00:00", "message": "Fixed bug with dtype\n\nChannels that were held constant while their parent clockline ramped another channel did not preserve the dtype of the value. Instead of forcing the value to float32 always, we now respect the dtype stored for the channel.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed typo, added some unicode compat and made custom function ramps return their duration", "markup": "markdown", "html": "<p>Fixed typo, added some unicode compat and made custom function ramps return their duration</p>", "type": "rendered"}}, "hash": "135a9ea740e3255b98fb70e79cd28a599609bb6d", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/135a9ea740e3255b98fb70e79cd28a599609bb6d.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/135a9ea740e3255b98fb70e79cd28a599609bb6d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/135a9ea740e3255b98fb70e79cd28a599609bb6d"}, "html": {"href": "#!/cavitylab/labscript/commits/135a9ea740e3255b98fb70e79cd28a599609bb6d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/135a9ea740e3255b98fb70e79cd28a599609bb6d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/135a9ea740e3255b98fb70e79cd28a599609bb6d/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/135a9ea740e3255b98fb70e79cd28a599609bb6d/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed typo, added some unicode compat and made custom function ramps return their duration", "markup": "markdown", "html": "<p>Fixed typo, added some unicode compat and made custom function ramps return their duration</p>", "type": "rendered"}, "parents": [{"hash": "88a945aa61512de6f9db9954c41ff3c23f997483", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/88a945aa61512de6f9db9954c41ff3c23f997483.json"}, "html": {"href": "#!/cavitylab/labscript/commits/88a945aa61512de6f9db9954c41ff3c23f997483"}}}], "date": "2014-11-06T15:50:08+00:00", "message": "Fixed typo, added some unicode compat and made custom function ramps return their duration", "type": "commit"}, {"rendered": {"message": {"raw": "Added tag 2.0.1 for changeset 3bfbdf8bc23a", "markup": "markdown", "html": "<p>Added tag 2.0.1 for changeset <a href=\"#!/cavitylab/labscript/commits/3bfbdf8bc23a\" rel=\"nofollow\" class=\"ap-connect-link\">3bfbdf8bc23a</a></p>", "type": "rendered"}}, "hash": "88a945aa61512de6f9db9954c41ff3c23f997483", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/88a945aa61512de6f9db9954c41ff3c23f997483.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/88a945aa61512de6f9db9954c41ff3c23f997483/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/88a945aa61512de6f9db9954c41ff3c23f997483"}, "html": {"href": "#!/cavitylab/labscript/commits/88a945aa61512de6f9db9954c41ff3c23f997483"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/88a945aa61512de6f9db9954c41ff3c23f997483"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/88a945aa61512de6f9db9954c41ff3c23f997483/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/88a945aa61512de6f9db9954c41ff3c23f997483/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added tag 2.0.1 for changeset 3bfbdf8bc23a", "markup": "markdown", "html": "<p>Added tag 2.0.1 for changeset <a href=\"#!/cavitylab/labscript/commits/3bfbdf8bc23a\" rel=\"nofollow\" class=\"ap-connect-link\">3bfbdf8bc23a</a></p>", "type": "rendered"}, "parents": [{"hash": "3bfbdf8bc23a9b5a3e0cb36312918c4f5eefe8b9", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/3bfbdf8bc23a9b5a3e0cb36312918c4f5eefe8b9.json"}, "html": {"href": "#!/cavitylab/labscript/commits/3bfbdf8bc23a9b5a3e0cb36312918c4f5eefe8b9"}}}], "date": "2014-10-14T21:16:11+00:00", "message": "Added tag 2.0.1 for changeset 3bfbdf8bc23a", "type": "commit"}, {"rendered": {"message": {"raw": "Merge with TriggerableDevice", "markup": "markdown", "html": "<p>Merge with TriggerableDevice</p>", "type": "rendered"}}, "hash": "3bfbdf8bc23a9b5a3e0cb36312918c4f5eefe8b9", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/3bfbdf8bc23a9b5a3e0cb36312918c4f5eefe8b9.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/3bfbdf8bc23a9b5a3e0cb36312918c4f5eefe8b9/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript/commits/3bfbdf8bc23a9b5a3e0cb36312918c4f5eefe8b9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/3bfbdf8bc23a9b5a3e0cb36312918c4f5eefe8b9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/3bfbdf8bc23a9b5a3e0cb36312918c4f5eefe8b9/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/3bfbdf8bc23a9b5a3e0cb36312918c4f5eefe8b9/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merge with TriggerableDevice", "markup": "markdown", "html": "<p>Merge with TriggerableDevice</p>", "type": "rendered"}, "parents": [{"hash": "e1781cf666b4d4b6323e447b7e9033aa9288f30a", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/e1781cf666b4d4b6323e447b7e9033aa9288f30a.json"}, "html": {"href": "#!/cavitylab/labscript/commits/e1781cf666b4d4b6323e447b7e9033aa9288f30a"}}}, {"hash": "439002d620a8ab414b2c383221ade590227d7d0e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/439002d620a8ab414b2c383221ade590227d7d0e.json"}, "html": {"href": "#!/cavitylab/labscript/commits/439002d620a8ab414b2c383221ade590227d7d0e"}}}], "date": "2014-10-14T21:15:54+00:00", "message": "Merge with TriggerableDevice", "type": "commit"}, {"rendered": {"message": {"raw": "Close TriggerableDevice branch", "markup": "markdown", "html": "<p>Close TriggerableDevice branch</p>", "type": "rendered"}}, "hash": "439002d620a8ab414b2c383221ade590227d7d0e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/439002d620a8ab414b2c383221ade590227d7d0e.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/439002d620a8ab414b2c383221ade590227d7d0e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/439002d620a8ab414b2c383221ade590227d7d0e"}, "html": {"href": "#!/cavitylab/labscript/commits/439002d620a8ab414b2c383221ade590227d7d0e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/439002d620a8ab414b2c383221ade590227d7d0e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/439002d620a8ab414b2c383221ade590227d7d0e/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/439002d620a8ab414b2c383221ade590227d7d0e/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close TriggerableDevice branch", "markup": "markdown", "html": "<p>Close TriggerableDevice branch</p>", "type": "rendered"}, "parents": [{"hash": "28f90b8d3b42858fe8aed0ca33ae4d116f72d51d", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/28f90b8d3b42858fe8aed0ca33ae4d116f72d51d.json"}, "html": {"href": "#!/cavitylab/labscript/commits/28f90b8d3b42858fe8aed0ca33ae4d116f72d51d"}}}], "date": "2014-10-14T21:15:07+00:00", "message": "Close TriggerableDevice branch", "type": "commit"}, {"rendered": {"message": {"raw": "Finished bugfixing and testing TriggerableDevice.\nBumped patch number so that code depending on this can check for it.", "markup": "markdown", "html": "<p>Finished bugfixing and testing TriggerableDevice.<br />\nBumped patch number so that code depending on this can check for it.</p>", "type": "rendered"}}, "hash": "28f90b8d3b42858fe8aed0ca33ae4d116f72d51d", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/28f90b8d3b42858fe8aed0ca33ae4d116f72d51d.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/28f90b8d3b42858fe8aed0ca33ae4d116f72d51d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/28f90b8d3b42858fe8aed0ca33ae4d116f72d51d"}, "html": {"href": "#!/cavitylab/labscript/commits/28f90b8d3b42858fe8aed0ca33ae4d116f72d51d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/28f90b8d3b42858fe8aed0ca33ae4d116f72d51d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/28f90b8d3b42858fe8aed0ca33ae4d116f72d51d/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/28f90b8d3b42858fe8aed0ca33ae4d116f72d51d/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Finished bugfixing and testing TriggerableDevice.\nBumped patch number so that code depending on this can check for it.", "markup": "markdown", "html": "<p>Finished bugfixing and testing TriggerableDevice.<br />\nBumped patch number so that code depending on this can check for it.</p>", "type": "rendered"}, "parents": [{"hash": "a2c3eaf551ee85d012ffc422c18f550d8cead4f3", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/a2c3eaf551ee85d012ffc422c18f550d8cead4f3.json"}, "html": {"href": "#!/cavitylab/labscript/commits/a2c3eaf551ee85d012ffc422c18f550d8cead4f3"}}}], "date": "2014-10-14T21:05:15+00:00", "message": "Finished bugfixing and testing TriggerableDevice.\nBumped patch number so that code depending on this can check for it.", "type": "commit"}, {"rendered": {"message": {"raw": "patched customramp function on AnalogQuantity to include sample rate in kwargs\ninstead of a positional argument. It is compulsory, but it seemed cleaner to put\nit there so it can be at the end instead of before the functino's arguments.", "markup": "markdown", "html": "<p>patched customramp function on AnalogQuantity to include sample rate in kwargs<br />\ninstead of a positional argument. It is compulsory, but it seemed cleaner to put<br />\nit there so it can be at the end instead of before the functino's arguments.</p>", "type": "rendered"}}, "hash": "e1781cf666b4d4b6323e447b7e9033aa9288f30a", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/e1781cf666b4d4b6323e447b7e9033aa9288f30a.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/e1781cf666b4d4b6323e447b7e9033aa9288f30a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/e1781cf666b4d4b6323e447b7e9033aa9288f30a"}, "html": {"href": "#!/cavitylab/labscript/commits/e1781cf666b4d4b6323e447b7e9033aa9288f30a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/e1781cf666b4d4b6323e447b7e9033aa9288f30a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/e1781cf666b4d4b6323e447b7e9033aa9288f30a/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/e1781cf666b4d4b6323e447b7e9033aa9288f30a/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "patched customramp function on AnalogQuantity to include sample rate in kwargs\ninstead of a positional argument. It is compulsory, but it seemed cleaner to put\nit there so it can be at the end instead of before the functino's arguments.", "markup": "markdown", "html": "<p>patched customramp function on AnalogQuantity to include sample rate in kwargs<br />\ninstead of a positional argument. It is compulsory, but it seemed cleaner to put<br />\nit there so it can be at the end instead of before the functino's arguments.</p>", "type": "rendered"}, "parents": [{"hash": "d967ce8ffe09de5a808bd244cc3b4ccf6aec1a5c", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/d967ce8ffe09de5a808bd244cc3b4ccf6aec1a5c.json"}, "html": {"href": "#!/cavitylab/labscript/commits/d967ce8ffe09de5a808bd244cc3b4ccf6aec1a5c"}}}], "date": "2014-10-14T15:21:04+00:00", "message": "patched customramp function on AnalogQuantity to include sample rate in kwargs\ninstead of a positional argument. It is compulsory, but it seemed cleaner to put\nit there so it can be at the end instead of before the functino's arguments.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed regression from 9ddfa091b13d (issue #12 and issue #14), which was\nmodifications that removed the requirement for there to be a pseudoclock", "markup": "markdown", "html": "<p>Fixed regression from <a href=\"#!/cavitylab/labscript/commits/9ddfa091b13d\" rel=\"nofollow\" class=\"ap-connect-link\">9ddfa091b13d</a> (issue #12 and issue #14), which was<br />\nmodifications that removed the requirement for there to be a pseudoclock</p>", "type": "rendered"}}, "hash": "d967ce8ffe09de5a808bd244cc3b4ccf6aec1a5c", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/d967ce8ffe09de5a808bd244cc3b4ccf6aec1a5c.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/d967ce8ffe09de5a808bd244cc3b4ccf6aec1a5c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/d967ce8ffe09de5a808bd244cc3b4ccf6aec1a5c"}, "html": {"href": "#!/cavitylab/labscript/commits/d967ce8ffe09de5a808bd244cc3b4ccf6aec1a5c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/d967ce8ffe09de5a808bd244cc3b4ccf6aec1a5c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/d967ce8ffe09de5a808bd244cc3b4ccf6aec1a5c/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/d967ce8ffe09de5a808bd244cc3b4ccf6aec1a5c/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed regression from 9ddfa091b13d (issue #12 and issue #14), which was\nmodifications that removed the requirement for there to be a pseudoclock", "markup": "markdown", "html": "<p>Fixed regression from <a href=\"#!/cavitylab/labscript/commits/9ddfa091b13d\" rel=\"nofollow\" class=\"ap-connect-link\">9ddfa091b13d</a> (issue #12 and issue #14), which was<br />\nmodifications that removed the requirement for there to be a pseudoclock</p>", "type": "rendered"}, "parents": [{"hash": "ab4932ca1e3ca15f4bfc86941cdccf9863ccd78b", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ab4932ca1e3ca15f4bfc86941cdccf9863ccd78b.json"}, "html": {"href": "#!/cavitylab/labscript/commits/ab4932ca1e3ca15f4bfc86941cdccf9863ccd78b"}}}], "date": "2014-10-10T21:51:18+00:00", "message": "Fixed regression from 9ddfa091b13d (issue #12 and issue #14), which was\nmodifications that removed the requirement for there to be a pseudoclock", "type": "commit"}, {"rendered": {"message": {"raw": "Ironing out the bugs", "markup": "markdown", "html": "<p>Ironing out the bugs</p>", "type": "rendered"}}, "hash": "a2c3eaf551ee85d012ffc422c18f550d8cead4f3", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/a2c3eaf551ee85d012ffc422c18f550d8cead4f3.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/a2c3eaf551ee85d012ffc422c18f550d8cead4f3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/a2c3eaf551ee85d012ffc422c18f550d8cead4f3"}, "html": {"href": "#!/cavitylab/labscript/commits/a2c3eaf551ee85d012ffc422c18f550d8cead4f3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/a2c3eaf551ee85d012ffc422c18f550d8cead4f3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/a2c3eaf551ee85d012ffc422c18f550d8cead4f3/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/a2c3eaf551ee85d012ffc422c18f550d8cead4f3/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Ironing out the bugs", "markup": "markdown", "html": "<p>Ironing out the bugs</p>", "type": "rendered"}, "parents": [{"hash": "f02fb66b9e94df845760050ab9d022f23b3e4b31", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/f02fb66b9e94df845760050ab9d022f23b3e4b31.json"}, "html": {"href": "#!/cavitylab/labscript/commits/f02fb66b9e94df845760050ab9d022f23b3e4b31"}}}], "date": "2014-10-10T21:46:13+00:00", "message": "Ironing out the bugs", "type": "commit"}, {"rendered": {"message": {"raw": "Added a customramp method to analoout functions, that takes a function and\narguments that should be passed to it. Any function can be passes in that\ntakes relative time since the start of the ramp as the first parameter,\nthe ramp duration as the second parameter, and any other parameters and keyword\narguments. With the exception of 'units', as that keyword argument will be used\nby labscript and not passed on to the function.", "markup": "markdown", "html": "<p>Added a customramp method to analoout functions, that takes a function and<br />\narguments that should be passed to it. Any function can be passes in that<br />\ntakes relative time since the start of the ramp as the first parameter,<br />\nthe ramp duration as the second parameter, and any other parameters and keyword<br />\narguments. With the exception of 'units', as that keyword argument will be used<br />\nby labscript and not passed on to the function.</p>", "type": "rendered"}}, "hash": "f02fb66b9e94df845760050ab9d022f23b3e4b31", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/f02fb66b9e94df845760050ab9d022f23b3e4b31.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/f02fb66b9e94df845760050ab9d022f23b3e4b31/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/f02fb66b9e94df845760050ab9d022f23b3e4b31"}, "html": {"href": "#!/cavitylab/labscript/commits/f02fb66b9e94df845760050ab9d022f23b3e4b31"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/f02fb66b9e94df845760050ab9d022f23b3e4b31"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/f02fb66b9e94df845760050ab9d022f23b3e4b31/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/f02fb66b9e94df845760050ab9d022f23b3e4b31/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added a customramp method to analoout functions, that takes a function and\narguments that should be passed to it. Any function can be passes in that\ntakes relative time since the start of the ramp as the first parameter,\nthe ramp duration as the second parameter, and any other parameters and keyword\narguments. With the exception of 'units', as that keyword argument will be used\nby labscript and not passed on to the function.", "markup": "markdown", "html": "<p>Added a customramp method to analoout functions, that takes a function and<br />\narguments that should be passed to it. Any function can be passes in that<br />\ntakes relative time since the start of the ramp as the first parameter,<br />\nthe ramp duration as the second parameter, and any other parameters and keyword<br />\narguments. With the exception of 'units', as that keyword argument will be used<br />\nby labscript and not passed on to the function.</p>", "type": "rendered"}, "parents": [{"hash": "bfd2b326b933befbe2113b0eb2ac98e15e0b53ed", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/bfd2b326b933befbe2113b0eb2ac98e15e0b53ed.json"}, "html": {"href": "#!/cavitylab/labscript/commits/bfd2b326b933befbe2113b0eb2ac98e15e0b53ed"}}}], "date": "2014-10-10T20:12:35+00:00", "message": "Added a customramp method to analoout functions, that takes a function and\narguments that should be passed to it. Any function can be passes in that\ntakes relative time since the start of the ramp as the first parameter,\nthe ramp duration as the second parameter, and any other parameters and keyword\narguments. With the exception of 'units', as that keyword argument will be used\nby labscript and not passed on to the function.", "type": "commit"}, {"rendered": {"message": {"raw": "Added a customramp method to analoout functions, that takes a function and\narguments that should be passed to it. Any function can be passes in that\ntakes relative time since the start of the ramp as the first parameter,\nthe ramp duration as the second parameter, and any other parameters and keyword\narguments. With the exception of 'units', as that keyword argument will be used\nby labscript and not passed on to the function.", "markup": "markdown", "html": "<p>Added a customramp method to analoout functions, that takes a function and<br />\narguments that should be passed to it. Any function can be passes in that<br />\ntakes relative time since the start of the ramp as the first parameter,<br />\nthe ramp duration as the second parameter, and any other parameters and keyword<br />\narguments. With the exception of 'units', as that keyword argument will be used<br />\nby labscript and not passed on to the function.</p>", "type": "rendered"}}, "hash": "ab4932ca1e3ca15f4bfc86941cdccf9863ccd78b", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ab4932ca1e3ca15f4bfc86941cdccf9863ccd78b.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/ab4932ca1e3ca15f4bfc86941cdccf9863ccd78b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/ab4932ca1e3ca15f4bfc86941cdccf9863ccd78b"}, "html": {"href": "#!/cavitylab/labscript/commits/ab4932ca1e3ca15f4bfc86941cdccf9863ccd78b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/ab4932ca1e3ca15f4bfc86941cdccf9863ccd78b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/ab4932ca1e3ca15f4bfc86941cdccf9863ccd78b/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/ab4932ca1e3ca15f4bfc86941cdccf9863ccd78b/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added a customramp method to analoout functions, that takes a function and\narguments that should be passed to it. Any function can be passes in that\ntakes relative time since the start of the ramp as the first parameter,\nthe ramp duration as the second parameter, and any other parameters and keyword\narguments. With the exception of 'units', as that keyword argument will be used\nby labscript and not passed on to the function.", "markup": "markdown", "html": "<p>Added a customramp method to analoout functions, that takes a function and<br />\narguments that should be passed to it. Any function can be passes in that<br />\ntakes relative time since the start of the ramp as the first parameter,<br />\nthe ramp duration as the second parameter, and any other parameters and keyword<br />\narguments. With the exception of 'units', as that keyword argument will be used<br />\nby labscript and not passed on to the function.</p>", "type": "rendered"}, "parents": [{"hash": "ad0e5b1458780af0b6be8c80cfa498892f44c073", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ad0e5b1458780af0b6be8c80cfa498892f44c073.json"}, "html": {"href": "#!/cavitylab/labscript/commits/ad0e5b1458780af0b6be8c80cfa498892f44c073"}}}], "date": "2014-10-10T20:12:35+00:00", "message": "Added a customramp method to analoout functions, that takes a function and\narguments that should be passed to it. Any function can be passes in that\ntakes relative time since the start of the ramp as the first parameter,\nthe ramp duration as the second parameter, and any other parameters and keyword\narguments. With the exception of 'units', as that keyword argument will be used\nby labscript and not passed on to the function.", "type": "commit"}, {"rendered": {"message": {"raw": "Made class TriggerableDevice, which PseudoclockDevice is a subclass of\nIts __init__ method looks at the parent, and if the parent is a Trigger,\nuses it as self.trigger_device. Otherwise, it instantiates a Trigger with\nthe given parent and connection.\n\nThis change is so that Camera can have a trigger either passed in, or it can\ninstantiate one with a given parent, the same way the PulseBlaster does.\n\nThis is so that we can pass the same Trigger object into multiple cameras\nto have them trigger simultanously", "markup": "markdown", "html": "<p>Made class TriggerableDevice, which PseudoclockDevice is a subclass of<br />\nIts <strong>init</strong> method looks at the parent, and if the parent is a Trigger,<br />\nuses it as self.trigger_device. Otherwise, it instantiates a Trigger with<br />\nthe given parent and connection.</p>\n<p>This change is so that Camera can have a trigger either passed in, or it can<br />\ninstantiate one with a given parent, the same way the PulseBlaster does.</p>\n<p>This is so that we can pass the same Trigger object into multiple cameras<br />\nto have them trigger simultanously</p>", "type": "rendered"}}, "hash": "bfd2b326b933befbe2113b0eb2ac98e15e0b53ed", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/bfd2b326b933befbe2113b0eb2ac98e15e0b53ed.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/bfd2b326b933befbe2113b0eb2ac98e15e0b53ed/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/bfd2b326b933befbe2113b0eb2ac98e15e0b53ed"}, "html": {"href": "#!/cavitylab/labscript/commits/bfd2b326b933befbe2113b0eb2ac98e15e0b53ed"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/bfd2b326b933befbe2113b0eb2ac98e15e0b53ed"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/bfd2b326b933befbe2113b0eb2ac98e15e0b53ed/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/bfd2b326b933befbe2113b0eb2ac98e15e0b53ed/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Made class TriggerableDevice, which PseudoclockDevice is a subclass of\nIts __init__ method looks at the parent, and if the parent is a Trigger,\nuses it as self.trigger_device. Otherwise, it instantiates a Trigger with\nthe given parent and connection.\n\nThis change is so that Camera can have a trigger either passed in, or it can\ninstantiate one with a given parent, the same way the PulseBlaster does.\n\nThis is so that we can pass the same Trigger object into multiple cameras\nto have them trigger simultanously", "markup": "markdown", "html": "<p>Made class TriggerableDevice, which PseudoclockDevice is a subclass of<br />\nIts <strong>init</strong> method looks at the parent, and if the parent is a Trigger,<br />\nuses it as self.trigger_device. Otherwise, it instantiates a Trigger with<br />\nthe given parent and connection.</p>\n<p>This change is so that Camera can have a trigger either passed in, or it can<br />\ninstantiate one with a given parent, the same way the PulseBlaster does.</p>\n<p>This is so that we can pass the same Trigger object into multiple cameras<br />\nto have them trigger simultanously</p>", "type": "rendered"}, "parents": [{"hash": "ad0e5b1458780af0b6be8c80cfa498892f44c073", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ad0e5b1458780af0b6be8c80cfa498892f44c073.json"}, "html": {"href": "#!/cavitylab/labscript/commits/ad0e5b1458780af0b6be8c80cfa498892f44c073"}}}], "date": "2014-10-10T15:10:27+00:00", "message": "Made class TriggerableDevice, which PseudoclockDevice is a subclass of\nIts __init__ method looks at the parent, and if the parent is a Trigger,\nuses it as self.trigger_device. Otherwise, it instantiates a Trigger with\nthe given parent and connection.\n\nThis change is so that Camera can have a trigger either passed in, or it can\ninstantiate one with a given parent, the same way the PulseBlaster does.\n\nThis is so that we can pass the same Trigger object into multiple cameras\nto have them trigger simultanously", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed issues with checking limits on static outputs.\n\nMade error messages for out of range valoues correct - they were rounding values\nto integers", "markup": "markdown", "html": "<p>Fixed issues with checking limits on static outputs.</p>\n<p>Made error messages for out of range valoues correct - they were rounding values<br />\nto integers</p>", "type": "rendered"}}, "hash": "ad0e5b1458780af0b6be8c80cfa498892f44c073", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ad0e5b1458780af0b6be8c80cfa498892f44c073.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/ad0e5b1458780af0b6be8c80cfa498892f44c073/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/ad0e5b1458780af0b6be8c80cfa498892f44c073"}, "html": {"href": "#!/cavitylab/labscript/commits/ad0e5b1458780af0b6be8c80cfa498892f44c073"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/ad0e5b1458780af0b6be8c80cfa498892f44c073"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/ad0e5b1458780af0b6be8c80cfa498892f44c073/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/ad0e5b1458780af0b6be8c80cfa498892f44c073/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed issues with checking limits on static outputs.\n\nMade error messages for out of range valoues correct - they were rounding values\nto integers", "markup": "markdown", "html": "<p>Fixed issues with checking limits on static outputs.</p>\n<p>Made error messages for out of range valoues correct - they were rounding values<br />\nto integers</p>", "type": "rendered"}, "parents": [{"hash": "b076641d289f44740902f8bfdc0663866f818d61", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/b076641d289f44740902f8bfdc0663866f818d61.json"}, "html": {"href": "#!/cavitylab/labscript/commits/b076641d289f44740902f8bfdc0663866f818d61"}}}], "date": "2014-10-09T21:55:10+00:00", "message": "Fixed issues with checking limits on static outputs.\n\nMade error messages for out of range valoues correct - they were rounding values\nto integers", "type": "commit"}, {"rendered": {"message": {"raw": "Modified StaticAnalogQuantity and StaticDigitalQuantity's internal workings\nThey now do not require get_change_times to be called, which is useful if\nthere is no pseudoclock to call it.", "markup": "markdown", "html": "<p>Modified StaticAnalogQuantity and StaticDigitalQuantity's internal workings<br />\nThey now do not require get_change_times to be called, which is useful if<br />\nthere is no pseudoclock to call it.</p>", "type": "rendered"}}, "hash": "b076641d289f44740902f8bfdc0663866f818d61", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/b076641d289f44740902f8bfdc0663866f818d61.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/b076641d289f44740902f8bfdc0663866f818d61/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/b076641d289f44740902f8bfdc0663866f818d61"}, "html": {"href": "#!/cavitylab/labscript/commits/b076641d289f44740902f8bfdc0663866f818d61"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/b076641d289f44740902f8bfdc0663866f818d61"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/b076641d289f44740902f8bfdc0663866f818d61/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/b076641d289f44740902f8bfdc0663866f818d61/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Modified StaticAnalogQuantity and StaticDigitalQuantity's internal workings\nThey now do not require get_change_times to be called, which is useful if\nthere is no pseudoclock to call it.", "markup": "markdown", "html": "<p>Modified StaticAnalogQuantity and StaticDigitalQuantity's internal workings<br />\nThey now do not require get_change_times to be called, which is useful if<br />\nthere is no pseudoclock to call it.</p>", "type": "rendered"}, "parents": [{"hash": "806256806b6e27181cc4daa358ba676a010c0e92", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/806256806b6e27181cc4daa358ba676a010c0e92.json"}, "html": {"href": "#!/cavitylab/labscript/commits/806256806b6e27181cc4daa358ba676a010c0e92"}}}], "date": "2014-10-09T21:44:15+00:00", "message": "Modified StaticAnalogQuantity and StaticDigitalQuantity's internal workings\nThey now do not require get_change_times to be called, which is useful if\nthere is no pseudoclock to call it.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bug in previous commit", "markup": "markdown", "html": "<p>Fixed bug in previous commit</p>", "type": "rendered"}}, "hash": "806256806b6e27181cc4daa358ba676a010c0e92", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/806256806b6e27181cc4daa358ba676a010c0e92.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/806256806b6e27181cc4daa358ba676a010c0e92/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/806256806b6e27181cc4daa358ba676a010c0e92"}, "html": {"href": "#!/cavitylab/labscript/commits/806256806b6e27181cc4daa358ba676a010c0e92"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/806256806b6e27181cc4daa358ba676a010c0e92"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/806256806b6e27181cc4daa358ba676a010c0e92/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/806256806b6e27181cc4daa358ba676a010c0e92/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed bug in previous commit", "markup": "markdown", "html": "<p>Fixed bug in previous commit</p>", "type": "rendered"}, "parents": [{"hash": "7ac9f2bb6b421eea6498352dfca2d34224e4773a", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/7ac9f2bb6b421eea6498352dfca2d34224e4773a.json"}, "html": {"href": "#!/cavitylab/labscript/commits/7ac9f2bb6b421eea6498352dfca2d34224e4773a"}}}], "date": "2014-10-09T21:21:37+00:00", "message": "Fixed bug in previous commit", "type": "commit"}, {"rendered": {"message": {"raw": "removed device generations. That attribute is now deprecated, it does nothing\nand the connection table is instead sorted by name", "markup": "markdown", "html": "<p>removed device generations. That attribute is now deprecated, it does nothing<br />\nand the connection table is instead sorted by name</p>", "type": "rendered"}}, "hash": "7ac9f2bb6b421eea6498352dfca2d34224e4773a", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/7ac9f2bb6b421eea6498352dfca2d34224e4773a.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/7ac9f2bb6b421eea6498352dfca2d34224e4773a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/7ac9f2bb6b421eea6498352dfca2d34224e4773a"}, "html": {"href": "#!/cavitylab/labscript/commits/7ac9f2bb6b421eea6498352dfca2d34224e4773a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/7ac9f2bb6b421eea6498352dfca2d34224e4773a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/7ac9f2bb6b421eea6498352dfca2d34224e4773a/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/7ac9f2bb6b421eea6498352dfca2d34224e4773a/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "removed device generations. That attribute is now deprecated, it does nothing\nand the connection table is instead sorted by name", "markup": "markdown", "html": "<p>removed device generations. That attribute is now deprecated, it does nothing<br />\nand the connection table is instead sorted by name</p>", "type": "rendered"}, "parents": [{"hash": "9ddfa091b13d36b52d185dafae30735f94815686", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/9ddfa091b13d36b52d185dafae30735f94815686.json"}, "html": {"href": "#!/cavitylab/labscript/commits/9ddfa091b13d36b52d185dafae30735f94815686"}}}], "date": "2014-10-09T21:16:52+00:00", "message": "removed device generations. That attribute is now deprecated, it does nothing\nand the connection table is instead sorted by name", "type": "commit"}, {"rendered": {"message": {"raw": "Resolves issue #14 and issue #12", "markup": "markdown", "html": "<p>Resolves issue #14 and issue #12</p>", "type": "rendered"}}, "hash": "9ddfa091b13d36b52d185dafae30735f94815686", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/9ddfa091b13d36b52d185dafae30735f94815686.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/9ddfa091b13d36b52d185dafae30735f94815686/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/9ddfa091b13d36b52d185dafae30735f94815686"}, "html": {"href": "#!/cavitylab/labscript/commits/9ddfa091b13d36b52d185dafae30735f94815686"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/9ddfa091b13d36b52d185dafae30735f94815686"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/9ddfa091b13d36b52d185dafae30735f94815686/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/9ddfa091b13d36b52d185dafae30735f94815686/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Resolves issue #14 and issue #12", "markup": "markdown", "html": "<p>Resolves issue #14 and issue #12</p>", "type": "rendered"}, "parents": [{"hash": "ebbd7edd7ff3ef3dfb7eb8044d2f8f85262cc525", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ebbd7edd7ff3ef3dfb7eb8044d2f8f85262cc525.json"}, "html": {"href": "#!/cavitylab/labscript/commits/ebbd7edd7ff3ef3dfb7eb8044d2f8f85262cc525"}}}], "date": "2014-10-09T21:00:49+00:00", "message": "Resolves issue #14 and issue #12", "type": "commit"}, {"rendered": {"message": {"raw": "Added support for setting device properties that are stored in the connection table\n\nset properties through Device.set_property(name, value)\n\nThis change appears to be fully backwards compatible.", "markup": "markdown", "html": "<p>Added support for setting device properties that are stored in the connection table</p>\n<p>set properties through Device.set_property(name, value)</p>\n<p>This change appears to be fully backwards compatible.</p>", "type": "rendered"}}, "hash": "ebbd7edd7ff3ef3dfb7eb8044d2f8f85262cc525", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ebbd7edd7ff3ef3dfb7eb8044d2f8f85262cc525.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/ebbd7edd7ff3ef3dfb7eb8044d2f8f85262cc525/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/ebbd7edd7ff3ef3dfb7eb8044d2f8f85262cc525"}, "html": {"href": "#!/cavitylab/labscript/commits/ebbd7edd7ff3ef3dfb7eb8044d2f8f85262cc525"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/ebbd7edd7ff3ef3dfb7eb8044d2f8f85262cc525"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/ebbd7edd7ff3ef3dfb7eb8044d2f8f85262cc525/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/ebbd7edd7ff3ef3dfb7eb8044d2f8f85262cc525/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added support for setting device properties that are stored in the connection table\n\nset properties through Device.set_property(name, value)\n\nThis change appears to be fully backwards compatible.", "markup": "markdown", "html": "<p>Added support for setting device properties that are stored in the connection table</p>\n<p>set properties through Device.set_property(name, value)</p>\n<p>This change appears to be fully backwards compatible.</p>", "type": "rendered"}, "parents": [{"hash": "83d9773f49b8214ffdcb2e0d4b3fb4a2ad93127d", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/83d9773f49b8214ffdcb2e0d4b3fb4a2ad93127d.json"}, "html": {"href": "#!/cavitylab/labscript/commits/83d9773f49b8214ffdcb2e0d4b3fb4a2ad93127d"}}}], "date": "2014-10-08T00:33:30+00:00", "message": "Added support for setting device properties that are stored in the connection table\n\nset properties through Device.set_property(name, value)\n\nThis change appears to be fully backwards compatible.", "type": "commit"}, {"rendered": {"message": {"raw": "Added tag 2.0.0 for changeset f3aea9887098", "markup": "markdown", "html": "<p>Added tag 2.0.0 for changeset <a href=\"#!/cavitylab/labscript/commits/f3aea9887098\" rel=\"nofollow\" class=\"ap-connect-link\">f3aea9887098</a></p>", "type": "rendered"}}, "hash": "83d9773f49b8214ffdcb2e0d4b3fb4a2ad93127d", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/83d9773f49b8214ffdcb2e0d4b3fb4a2ad93127d.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/83d9773f49b8214ffdcb2e0d4b3fb4a2ad93127d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/83d9773f49b8214ffdcb2e0d4b3fb4a2ad93127d"}, "html": {"href": "#!/cavitylab/labscript/commits/83d9773f49b8214ffdcb2e0d4b3fb4a2ad93127d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/83d9773f49b8214ffdcb2e0d4b3fb4a2ad93127d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/83d9773f49b8214ffdcb2e0d4b3fb4a2ad93127d/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/83d9773f49b8214ffdcb2e0d4b3fb4a2ad93127d/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added tag 2.0.0 for changeset f3aea9887098", "markup": "markdown", "html": "<p>Added tag 2.0.0 for changeset <a href=\"#!/cavitylab/labscript/commits/f3aea9887098\" rel=\"nofollow\" class=\"ap-connect-link\">f3aea9887098</a></p>", "type": "rendered"}, "parents": [{"hash": "f3aea9887098845b81b68963a0017a35724648ff", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/f3aea9887098845b81b68963a0017a35724648ff.json"}, "html": {"href": "#!/cavitylab/labscript/commits/f3aea9887098845b81b68963a0017a35724648ff"}}}], "date": "2014-10-04T22:19:11+00:00", "message": "Added tag 2.0.0 for changeset f3aea9887098", "type": "commit"}, {"rendered": {"message": {"raw": "Bumped major version number", "markup": "markdown", "html": "<p>Bumped major version number</p>", "type": "rendered"}}, "hash": "f3aea9887098845b81b68963a0017a35724648ff", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/f3aea9887098845b81b68963a0017a35724648ff.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/f3aea9887098845b81b68963a0017a35724648ff/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/f3aea9887098845b81b68963a0017a35724648ff"}, "html": {"href": "#!/cavitylab/labscript/commits/f3aea9887098845b81b68963a0017a35724648ff"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/f3aea9887098845b81b68963a0017a35724648ff"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/f3aea9887098845b81b68963a0017a35724648ff/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/f3aea9887098845b81b68963a0017a35724648ff/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Bumped major version number", "markup": "markdown", "html": "<p>Bumped major version number</p>", "type": "rendered"}, "parents": [{"hash": "3ebe0b4e2897fd300ae95d7641249714f023bfcd", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/3ebe0b4e2897fd300ae95d7641249714f023bfcd.json"}, "html": {"href": "#!/cavitylab/labscript/commits/3ebe0b4e2897fd300ae95d7641249714f023bfcd"}}}], "date": "2014-10-04T22:19:06+00:00", "message": "Bumped major version number", "type": "commit"}, {"rendered": {"message": {"raw": "Merge with gated-clocks", "markup": "markdown", "html": "<p>Merge with gated-clocks</p>", "type": "rendered"}}, "hash": "3ebe0b4e2897fd300ae95d7641249714f023bfcd", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/3ebe0b4e2897fd300ae95d7641249714f023bfcd.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/3ebe0b4e2897fd300ae95d7641249714f023bfcd/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript/commits/3ebe0b4e2897fd300ae95d7641249714f023bfcd"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/3ebe0b4e2897fd300ae95d7641249714f023bfcd"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/3ebe0b4e2897fd300ae95d7641249714f023bfcd/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/3ebe0b4e2897fd300ae95d7641249714f023bfcd/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merge with gated-clocks", "markup": "markdown", "html": "<p>Merge with gated-clocks</p>", "type": "rendered"}, "parents": [{"hash": "bd3c10bb56def29a53350e0531ddf08e1321a40a", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/bd3c10bb56def29a53350e0531ddf08e1321a40a.json"}, "html": {"href": "#!/cavitylab/labscript/commits/bd3c10bb56def29a53350e0531ddf08e1321a40a"}}}, {"hash": "35438bbecae4b8f8d770ca85036cd56725bb8500", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/35438bbecae4b8f8d770ca85036cd56725bb8500.json"}, "html": {"href": "#!/cavitylab/labscript/commits/35438bbecae4b8f8d770ca85036cd56725bb8500"}}}], "date": "2014-10-04T22:16:21+00:00", "message": "Merge with gated-clocks", "type": "commit"}, {"rendered": {"message": {"raw": "Close gated-clocks branch", "markup": "markdown", "html": "<p>Close gated-clocks branch</p>", "type": "rendered"}}, "hash": "35438bbecae4b8f8d770ca85036cd56725bb8500", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/35438bbecae4b8f8d770ca85036cd56725bb8500.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/35438bbecae4b8f8d770ca85036cd56725bb8500/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/35438bbecae4b8f8d770ca85036cd56725bb8500"}, "html": {"href": "#!/cavitylab/labscript/commits/35438bbecae4b8f8d770ca85036cd56725bb8500"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/35438bbecae4b8f8d770ca85036cd56725bb8500"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/35438bbecae4b8f8d770ca85036cd56725bb8500/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/35438bbecae4b8f8d770ca85036cd56725bb8500/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close gated-clocks branch", "markup": "markdown", "html": "<p>Close gated-clocks branch</p>", "type": "rendered"}, "parents": [{"hash": "aef12c5d57e42056bb15fcd2cbdcc899e07a064d", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/aef12c5d57e42056bb15fcd2cbdcc899e07a064d.json"}, "html": {"href": "#!/cavitylab/labscript/commits/aef12c5d57e42056bb15fcd2cbdcc899e07a064d"}}}], "date": "2014-10-04T22:16:07+00:00", "message": "Close gated-clocks branch", "type": "commit"}, {"rendered": {"message": {"raw": "Now uses runmanager's load_shot_globals() function to get shot globals.\n\nThat function applies some hacks that we were otherwise applying in several\nplaces. In particular a new hack allows us to use None as a global value.\nIt is stored as a null h5py.Reference object.\n\nThe function is backported to runmanager gtk so one need not upgrade runmanager.", "markup": "markdown", "html": "<p>Now uses runmanager's load_shot_globals() function to get shot globals.</p>\n<p>That function applies some hacks that we were otherwise applying in several<br />\nplaces. In particular a new hack allows us to use None as a global value.<br />\nIt is stored as a null h5py.Reference object.</p>\n<p>The function is backported to runmanager gtk so one need not upgrade runmanager.</p>", "type": "rendered"}}, "hash": "aef12c5d57e42056bb15fcd2cbdcc899e07a064d", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/aef12c5d57e42056bb15fcd2cbdcc899e07a064d.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/aef12c5d57e42056bb15fcd2cbdcc899e07a064d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/aef12c5d57e42056bb15fcd2cbdcc899e07a064d"}, "html": {"href": "#!/cavitylab/labscript/commits/aef12c5d57e42056bb15fcd2cbdcc899e07a064d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/aef12c5d57e42056bb15fcd2cbdcc899e07a064d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/aef12c5d57e42056bb15fcd2cbdcc899e07a064d/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/aef12c5d57e42056bb15fcd2cbdcc899e07a064d/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Now uses runmanager's load_shot_globals() function to get shot globals.\n\nThat function applies some hacks that we were otherwise applying in several\nplaces. In particular a new hack allows us to use None as a global value.\nIt is stored as a null h5py.Reference object.\n\nThe function is backported to runmanager gtk so one need not upgrade runmanager.", "markup": "markdown", "html": "<p>Now uses runmanager's load_shot_globals() function to get shot globals.</p>\n<p>That function applies some hacks that we were otherwise applying in several<br />\nplaces. In particular a new hack allows us to use None as a global value.<br />\nIt is stored as a null h5py.Reference object.</p>\n<p>The function is backported to runmanager gtk so one need not upgrade runmanager.</p>", "type": "rendered"}, "parents": [{"hash": "92bdb64d004ba6f80e07b5c5a18b4ea9aff9b022", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/92bdb64d004ba6f80e07b5c5a18b4ea9aff9b022.json"}, "html": {"href": "#!/cavitylab/labscript/commits/92bdb64d004ba6f80e07b5c5a18b4ea9aff9b022"}}}], "date": "2014-09-13T23:24:17+00:00", "message": "Now uses runmanager's load_shot_globals() function to get shot globals.\n\nThat function applies some hacks that we were otherwise applying in several\nplaces. In particular a new hack allows us to use None as a global value.\nIt is stored as a null h5py.Reference object.\n\nThe function is backported to runmanager gtk so one need not upgrade runmanager.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed loss of precision for AnalogQuantities used for large numbers\nThis affected DDS devices (frequency component only) such as the RFBlaster and NovatechDDS9m.\n\nAs an example of the bug, in the Monash Dual Species BEC lab, we effectively had a linear ramp in frequency with an fluctuation of 2.5KHz in the magnitude of the step size at each point in the ramp. This was detected because when I looked at the RFBlaster diff table, the frequency was changing by 1100, 1099, 1031, 1100, 1099, 1031.\n\nThe fix was to increase the precision of the numpy arrays to float64. Interestingly, this has not affected the size of the HDF5 files produced. This is because the data is quantised before writing the the HDF5 file. The issue affected the precision of the data that was input into the quantisation functions.", "markup": "markdown", "html": "<p>Fixed loss of precision for AnalogQuantities used for large numbers<br />\nThis affected DDS devices (frequency component only) such as the RFBlaster and NovatechDDS9m.</p>\n<p>As an example of the bug, in the Monash Dual Species BEC lab, we effectively had a linear ramp in frequency with an fluctuation of 2.5KHz in the magnitude of the step size at each point in the ramp. This was detected because when I looked at the RFBlaster diff table, the frequency was changing by 1100, 1099, 1031, 1100, 1099, 1031.</p>\n<p>The fix was to increase the precision of the numpy arrays to float64. Interestingly, this has not affected the size of the HDF5 files produced. This is because the data is quantised before writing the the HDF5 file. The issue affected the precision of the data that was input into the quantisation functions.</p>", "type": "rendered"}}, "hash": "92bdb64d004ba6f80e07b5c5a18b4ea9aff9b022", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/92bdb64d004ba6f80e07b5c5a18b4ea9aff9b022.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/92bdb64d004ba6f80e07b5c5a18b4ea9aff9b022/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/92bdb64d004ba6f80e07b5c5a18b4ea9aff9b022"}, "html": {"href": "#!/cavitylab/labscript/commits/92bdb64d004ba6f80e07b5c5a18b4ea9aff9b022"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/92bdb64d004ba6f80e07b5c5a18b4ea9aff9b022"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/92bdb64d004ba6f80e07b5c5a18b4ea9aff9b022/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/92bdb64d004ba6f80e07b5c5a18b4ea9aff9b022/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed loss of precision for AnalogQuantities used for large numbers\nThis affected DDS devices (frequency component only) such as the RFBlaster and NovatechDDS9m.\n\nAs an example of the bug, in the Monash Dual Species BEC lab, we effectively had a linear ramp in frequency with an fluctuation of 2.5KHz in the magnitude of the step size at each point in the ramp. This was detected because when I looked at the RFBlaster diff table, the frequency was changing by 1100, 1099, 1031, 1100, 1099, 1031.\n\nThe fix was to increase the precision of the numpy arrays to float64. Interestingly, this has not affected the size of the HDF5 files produced. This is because the data is quantised before writing the the HDF5 file. The issue affected the precision of the data that was input into the quantisation functions.", "markup": "markdown", "html": "<p>Fixed loss of precision for AnalogQuantities used for large numbers<br />\nThis affected DDS devices (frequency component only) such as the RFBlaster and NovatechDDS9m.</p>\n<p>As an example of the bug, in the Monash Dual Species BEC lab, we effectively had a linear ramp in frequency with an fluctuation of 2.5KHz in the magnitude of the step size at each point in the ramp. This was detected because when I looked at the RFBlaster diff table, the frequency was changing by 1100, 1099, 1031, 1100, 1099, 1031.</p>\n<p>The fix was to increase the precision of the numpy arrays to float64. Interestingly, this has not affected the size of the HDF5 files produced. This is because the data is quantised before writing the the HDF5 file. The issue affected the precision of the data that was input into the quantisation functions.</p>", "type": "rendered"}, "parents": [{"hash": "4c9f34884d5a54549148a6e55f2fb53b50e1aecb", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/4c9f34884d5a54549148a6e55f2fb53b50e1aecb.json"}, "html": {"href": "#!/cavitylab/labscript/commits/4c9f34884d5a54549148a6e55f2fb53b50e1aecb"}}}], "date": "2014-08-25T01:40:53+00:00", "message": "Fixed loss of precision for AnalogQuantities used for large numbers\nThis affected DDS devices (frequency component only) such as the RFBlaster and NovatechDDS9m.\n\nAs an example of the bug, in the Monash Dual Species BEC lab, we effectively had a linear ramp in frequency with an fluctuation of 2.5KHz in the magnitude of the step size at each point in the ramp. This was detected because when I looked at the RFBlaster diff table, the frequency was changing by 1100, 1099, 1031, 1100, 1099, 1031.\n\nThe fix was to increase the precision of the numpy arrays to float64. Interestingly, this has not affected the size of the HDF5 files produced. This is because the data is quantised before writing the the HDF5 file. The issue affected the precision of the data that was input into the quantisation functions.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bug where the wait_monitor trigger duration was not taken into account when computing the compiler trigger_duration", "markup": "markdown", "html": "<p>Fixed bug where the wait_monitor trigger duration was not taken into account when computing the compiler trigger_duration</p>", "type": "rendered"}}, "hash": "4c9f34884d5a54549148a6e55f2fb53b50e1aecb", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/4c9f34884d5a54549148a6e55f2fb53b50e1aecb.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/4c9f34884d5a54549148a6e55f2fb53b50e1aecb/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/4c9f34884d5a54549148a6e55f2fb53b50e1aecb"}, "html": {"href": "#!/cavitylab/labscript/commits/4c9f34884d5a54549148a6e55f2fb53b50e1aecb"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/4c9f34884d5a54549148a6e55f2fb53b50e1aecb"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/4c9f34884d5a54549148a6e55f2fb53b50e1aecb/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/4c9f34884d5a54549148a6e55f2fb53b50e1aecb/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Fixed bug where the wait_monitor trigger duration was not taken into account when computing the compiler trigger_duration", "markup": "markdown", "html": "<p>Fixed bug where the wait_monitor trigger duration was not taken into account when computing the compiler trigger_duration</p>", "type": "rendered"}, "parents": [{"hash": "7569f6e30b86f1e7d7bd9df6b4c855d0a63513c3", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/7569f6e30b86f1e7d7bd9df6b4c855d0a63513c3.json"}, "html": {"href": "#!/cavitylab/labscript/commits/7569f6e30b86f1e7d7bd9df6b4c855d0a63513c3"}}}], "date": "2014-08-22T01:26:39+00:00", "message": "Fixed bug where the wait_monitor trigger duration was not taken into account when computing the compiler trigger_duration", "type": "commit"}, {"rendered": {"message": {"raw": "try and fix the limit logic again", "markup": "markdown", "html": "<p>try and fix the limit logic again</p>", "type": "rendered"}}, "hash": "7569f6e30b86f1e7d7bd9df6b4c855d0a63513c3", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/7569f6e30b86f1e7d7bd9df6b4c855d0a63513c3.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/7569f6e30b86f1e7d7bd9df6b4c855d0a63513c3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/7569f6e30b86f1e7d7bd9df6b4c855d0a63513c3"}, "html": {"href": "#!/cavitylab/labscript/commits/7569f6e30b86f1e7d7bd9df6b4c855d0a63513c3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/7569f6e30b86f1e7d7bd9df6b4c855d0a63513c3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/7569f6e30b86f1e7d7bd9df6b4c855d0a63513c3/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/7569f6e30b86f1e7d7bd9df6b4c855d0a63513c3/statuses_page=1.json"}}, "author": {"raw": "Matt Earnshaw <matt@earnshaw.org.uk>", "type": "author", "user": {"display_name": "Matt Earnshaw", "uuid": "{17c89cfb-6d26-4163-b407-ca2461f38dc5}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17c89cfb-6d26-4163-b407-ca2461f38dc5%7D"}, "html": {"href": "https://bitbucket.org/%7B17c89cfb-6d26-4163-b407-ca2461f38dc5%7D/"}, "avatar": {"href": "https://bitbucket.org/account/mearnshaw/avatar/"}}, "nickname": "mearnshaw", "type": "user", "account_id": null}}, "summary": {"raw": "try and fix the limit logic again", "markup": "markdown", "html": "<p>try and fix the limit logic again</p>", "type": "rendered"}, "parents": [{"hash": "b65195a42b284295d5a32761c91884b8666ea797", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/b65195a42b284295d5a32761c91884b8666ea797.json"}, "html": {"href": "#!/cavitylab/labscript/commits/b65195a42b284295d5a32761c91884b8666ea797"}}}], "date": "2014-07-08T16:30:50+00:00", "message": "try and fix the limit logic again", "type": "commit"}, {"rendered": {"message": {"raw": "Merge commit f49f73e", "markup": "markdown", "html": "<p>Merge commit <a href=\"#!/cavitylab/labscript/commits/f49f73e\" rel=\"nofollow\" class=\"ap-connect-link\">f49f73e</a></p>", "type": "rendered"}}, "hash": "b65195a42b284295d5a32761c91884b8666ea797", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/b65195a42b284295d5a32761c91884b8666ea797.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/b65195a42b284295d5a32761c91884b8666ea797/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript/commits/b65195a42b284295d5a32761c91884b8666ea797"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/b65195a42b284295d5a32761c91884b8666ea797"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/b65195a42b284295d5a32761c91884b8666ea797/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/b65195a42b284295d5a32761c91884b8666ea797/statuses_page=1.json"}}, "author": {"raw": "Matt Earnshaw <matt@earnshaw.org.uk>", "type": "author", "user": {"display_name": "Matt Earnshaw", "uuid": "{17c89cfb-6d26-4163-b407-ca2461f38dc5}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17c89cfb-6d26-4163-b407-ca2461f38dc5%7D"}, "html": {"href": "https://bitbucket.org/%7B17c89cfb-6d26-4163-b407-ca2461f38dc5%7D/"}, "avatar": {"href": "https://bitbucket.org/account/mearnshaw/avatar/"}}, "nickname": "mearnshaw", "type": "user", "account_id": null}}, "summary": {"raw": "Merge commit f49f73e", "markup": "markdown", "html": "<p>Merge commit <a href=\"#!/cavitylab/labscript/commits/f49f73e\" rel=\"nofollow\" class=\"ap-connect-link\">f49f73e</a></p>", "type": "rendered"}, "parents": [{"hash": "6d8a8d29b0ebbf23282cc6935905d3ebac60c4b3", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/6d8a8d29b0ebbf23282cc6935905d3ebac60c4b3.json"}, "html": {"href": "#!/cavitylab/labscript/commits/6d8a8d29b0ebbf23282cc6935905d3ebac60c4b3"}}}, {"hash": "dc96cc273b3f390d6c39d86390e370386a49669f", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/dc96cc273b3f390d6c39d86390e370386a49669f.json"}, "html": {"href": "#!/cavitylab/labscript/commits/dc96cc273b3f390d6c39d86390e370386a49669f"}}}], "date": "2014-07-08T16:06:07+00:00", "message": "Merge commit f49f73e", "type": "commit"}, {"rendered": {"message": {"raw": "fix limit check", "markup": "markdown", "html": "<p>fix limit check</p>", "type": "rendered"}}, "hash": "6d8a8d29b0ebbf23282cc6935905d3ebac60c4b3", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/6d8a8d29b0ebbf23282cc6935905d3ebac60c4b3.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/6d8a8d29b0ebbf23282cc6935905d3ebac60c4b3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/6d8a8d29b0ebbf23282cc6935905d3ebac60c4b3"}, "html": {"href": "#!/cavitylab/labscript/commits/6d8a8d29b0ebbf23282cc6935905d3ebac60c4b3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/6d8a8d29b0ebbf23282cc6935905d3ebac60c4b3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/6d8a8d29b0ebbf23282cc6935905d3ebac60c4b3/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/6d8a8d29b0ebbf23282cc6935905d3ebac60c4b3/statuses_page=1.json"}}, "author": {"raw": "Matt Earnshaw <matt@earnshaw.org.uk>", "type": "author", "user": {"display_name": "Matt Earnshaw", "uuid": "{17c89cfb-6d26-4163-b407-ca2461f38dc5}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17c89cfb-6d26-4163-b407-ca2461f38dc5%7D"}, "html": {"href": "https://bitbucket.org/%7B17c89cfb-6d26-4163-b407-ca2461f38dc5%7D/"}, "avatar": {"href": "https://bitbucket.org/account/mearnshaw/avatar/"}}, "nickname": "mearnshaw", "type": "user", "account_id": null}}, "summary": {"raw": "fix limit check", "markup": "markdown", "html": "<p>fix limit check</p>", "type": "rendered"}, "parents": [{"hash": "8d41f95db565895e2225e21a8467f38ba0bee3be", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/8d41f95db565895e2225e21a8467f38ba0bee3be.json"}, "html": {"href": "#!/cavitylab/labscript/commits/8d41f95db565895e2225e21a8467f38ba0bee3be"}}}], "date": "2014-07-08T16:00:34+00:00", "message": "fix limit check", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in mearnshaw/labscript/gated-clocks (pull request #1)\n\nremove duplicate line", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/mearnshaw/labscript\" rel=\"nofollow\" class=\"ap-connect-link\">mearnshaw/labscript</a>/gated-clocks (pull request #1)</p>\n<p>remove duplicate line</p>", "type": "rendered"}}, "hash": "dc96cc273b3f390d6c39d86390e370386a49669f", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/dc96cc273b3f390d6c39d86390e370386a49669f.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/dc96cc273b3f390d6c39d86390e370386a49669f/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript/commits/dc96cc273b3f390d6c39d86390e370386a49669f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/dc96cc273b3f390d6c39d86390e370386a49669f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/dc96cc273b3f390d6c39d86390e370386a49669f/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/dc96cc273b3f390d6c39d86390e370386a49669f/statuses_page=1.json"}}, "author": {"raw": "Philip Starkey <philip.starkey@monash.edu>", "type": "author", "user": {"display_name": "Phil Starkey", "uuid": "{bf2034f3-ffd1-49fb-9bf4-e900788cfbff}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbf2034f3-ffd1-49fb-9bf4-e900788cfbff%7D"}, "html": {"href": "https://bitbucket.org/%7Bbf2034f3-ffd1-49fb-9bf4-e900788cfbff%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a5d16233c76364a4acbdc83e9ee02d96d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-3.png"}}, "nickname": "Philip Starkey", "type": "user", "account_id": "5e2d536c52522c0e6fe716ed"}}, "summary": {"raw": "Merged in mearnshaw/labscript/gated-clocks (pull request #1)\n\nremove duplicate line", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/mearnshaw/labscript\" rel=\"nofollow\" class=\"ap-connect-link\">mearnshaw/labscript</a>/gated-clocks (pull request #1)</p>\n<p>remove duplicate line</p>", "type": "rendered"}, "parents": [{"hash": "f49f73ee29fb8679a77b111cdb14271600720b56", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/f49f73ee29fb8679a77b111cdb14271600720b56.json"}, "html": {"href": "#!/cavitylab/labscript/commits/f49f73ee29fb8679a77b111cdb14271600720b56"}}}, {"hash": "8d41f95db565895e2225e21a8467f38ba0bee3be", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/8d41f95db565895e2225e21a8467f38ba0bee3be.json"}, "html": {"href": "#!/cavitylab/labscript/commits/8d41f95db565895e2225e21a8467f38ba0bee3be"}}}], "date": "2014-07-02T11:17:16+00:00", "message": "Merged in mearnshaw/labscript/gated-clocks (pull request #1)\n\nremove duplicate line", "type": "commit"}, {"rendered": {"message": {"raw": "remove duplicate line", "markup": "markdown", "html": "<p>remove duplicate line</p>", "type": "rendered"}}, "hash": "8d41f95db565895e2225e21a8467f38ba0bee3be", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/8d41f95db565895e2225e21a8467f38ba0bee3be.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/8d41f95db565895e2225e21a8467f38ba0bee3be/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/8d41f95db565895e2225e21a8467f38ba0bee3be"}, "html": {"href": "#!/cavitylab/labscript/commits/8d41f95db565895e2225e21a8467f38ba0bee3be"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/8d41f95db565895e2225e21a8467f38ba0bee3be"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/8d41f95db565895e2225e21a8467f38ba0bee3be/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/8d41f95db565895e2225e21a8467f38ba0bee3be/statuses_page=1.json"}}, "author": {"raw": "Matt Earnshaw <matt@earnshaw.org.uk>", "type": "author", "user": {"display_name": "Matt Earnshaw", "uuid": "{17c89cfb-6d26-4163-b407-ca2461f38dc5}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17c89cfb-6d26-4163-b407-ca2461f38dc5%7D"}, "html": {"href": "https://bitbucket.org/%7B17c89cfb-6d26-4163-b407-ca2461f38dc5%7D/"}, "avatar": {"href": "https://bitbucket.org/account/mearnshaw/avatar/"}}, "nickname": "mearnshaw", "type": "user", "account_id": null}}, "summary": {"raw": "remove duplicate line", "markup": "markdown", "html": "<p>remove duplicate line</p>", "type": "rendered"}, "parents": [{"hash": "f251dfce8c97134640b65f2575fdb94c0276eef9", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/f251dfce8c97134640b65f2575fdb94c0276eef9.json"}, "html": {"href": "#!/cavitylab/labscript/commits/f251dfce8c97134640b65f2575fdb94c0276eef9"}}}], "date": "2014-07-02T10:19:25+00:00", "message": "remove duplicate line", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed subtle bug where if a ramp on one ClockLine was segmented into three components due to constant updates on another ClockLine, and one of the ramp segments was only 1 clock_tick long, only the ramping ClockLine would tick.\n\nThe ClockLine with the constant instructions would not tick, however the IntermediateDevice was told that it did tick, and thus there was a mismatch between the number of clock ticks and the number of instructions programmed into the IntermediateDevice.", "markup": "markdown", "html": "<p>Fixed subtle bug where if a ramp on one ClockLine was segmented into three components due to constant updates on another ClockLine, and one of the ramp segments was only 1 clock_tick long, only the ramping ClockLine would tick.</p>\n<p>The ClockLine with the constant instructions would not tick, however the IntermediateDevice was told that it did tick, and thus there was a mismatch between the number of clock ticks and the number of instructions programmed into the IntermediateDevice.</p>", "type": "rendered"}}, "hash": "f49f73ee29fb8679a77b111cdb14271600720b56", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/f49f73ee29fb8679a77b111cdb14271600720b56.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/f49f73ee29fb8679a77b111cdb14271600720b56/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/f49f73ee29fb8679a77b111cdb14271600720b56"}, "html": {"href": "#!/cavitylab/labscript/commits/f49f73ee29fb8679a77b111cdb14271600720b56"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/f49f73ee29fb8679a77b111cdb14271600720b56"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/f49f73ee29fb8679a77b111cdb14271600720b56/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/f49f73ee29fb8679a77b111cdb14271600720b56/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed subtle bug where if a ramp on one ClockLine was segmented into three components due to constant updates on another ClockLine, and one of the ramp segments was only 1 clock_tick long, only the ramping ClockLine would tick.\n\nThe ClockLine with the constant instructions would not tick, however the IntermediateDevice was told that it did tick, and thus there was a mismatch between the number of clock ticks and the number of instructions programmed into the IntermediateDevice.", "markup": "markdown", "html": "<p>Fixed subtle bug where if a ramp on one ClockLine was segmented into three components due to constant updates on another ClockLine, and one of the ramp segments was only 1 clock_tick long, only the ramping ClockLine would tick.</p>\n<p>The ClockLine with the constant instructions would not tick, however the IntermediateDevice was told that it did tick, and thus there was a mismatch between the number of clock ticks and the number of instructions programmed into the IntermediateDevice.</p>", "type": "rendered"}, "parents": [{"hash": "f251dfce8c97134640b65f2575fdb94c0276eef9", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/f251dfce8c97134640b65f2575fdb94c0276eef9.json"}, "html": {"href": "#!/cavitylab/labscript/commits/f251dfce8c97134640b65f2575fdb94c0276eef9"}}}], "date": "2014-06-25T11:17:00+00:00", "message": "Fixed subtle bug where if a ramp on one ClockLine was segmented into three components due to constant updates on another ClockLine, and one of the ramp segments was only 1 clock_tick long, only the ramping ClockLine would tick.\n\nThe ClockLine with the constant instructions would not tick, however the IntermediateDevice was told that it did tick, and thus there was a mismatch between the number of clock ticks and the number of instructions programmed into the IntermediateDevice.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed useless traceback when instructions exist after the experiment stop_time\n\nIf instructions existed after the experiment stop_time, then labscript would raise an unhelpful error about an index being out of range.\nInstead, we now print a helpful warning indiciating there is likely a problem, and let later code take care of raising the error about instructions existing after the stop time.", "markup": "markdown", "html": "<p>Fixed useless traceback when instructions exist after the experiment stop_time</p>\n<p>If instructions existed after the experiment stop_time, then labscript would raise an unhelpful error about an index being out of range.<br />\nInstead, we now print a helpful warning indiciating there is likely a problem, and let later code take care of raising the error about instructions existing after the stop time.</p>", "type": "rendered"}}, "hash": "f251dfce8c97134640b65f2575fdb94c0276eef9", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/f251dfce8c97134640b65f2575fdb94c0276eef9.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/f251dfce8c97134640b65f2575fdb94c0276eef9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/f251dfce8c97134640b65f2575fdb94c0276eef9"}, "html": {"href": "#!/cavitylab/labscript/commits/f251dfce8c97134640b65f2575fdb94c0276eef9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/f251dfce8c97134640b65f2575fdb94c0276eef9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/f251dfce8c97134640b65f2575fdb94c0276eef9/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/f251dfce8c97134640b65f2575fdb94c0276eef9/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed useless traceback when instructions exist after the experiment stop_time\n\nIf instructions existed after the experiment stop_time, then labscript would raise an unhelpful error about an index being out of range.\nInstead, we now print a helpful warning indiciating there is likely a problem, and let later code take care of raising the error about instructions existing after the stop time.", "markup": "markdown", "html": "<p>Fixed useless traceback when instructions exist after the experiment stop_time</p>\n<p>If instructions existed after the experiment stop_time, then labscript would raise an unhelpful error about an index being out of range.<br />\nInstead, we now print a helpful warning indiciating there is likely a problem, and let later code take care of raising the error about instructions existing after the stop time.</p>", "type": "rendered"}, "parents": [{"hash": "7ecac799dbb5388bce58adf9ebd88a39fb0d49e8", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/7ecac799dbb5388bce58adf9ebd88a39fb0d49e8.json"}, "html": {"href": "#!/cavitylab/labscript/commits/7ecac799dbb5388bce58adf9ebd88a39fb0d49e8"}}}], "date": "2014-06-12T03:37:06+00:00", "message": "Fixed useless traceback when instructions exist after the experiment stop_time\n\nIf instructions existed after the experiment stop_time, then labscript would raise an unhelpful error about an index being out of range.\nInstead, we now print a helpful warning indiciating there is likely a problem, and let later code take care of raising the error about instructions existing after the stop time.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bug where an experiment with only one pseudoclock would not compile", "markup": "markdown", "html": "<p>Fixed bug where an experiment with only one pseudoclock would not compile</p>", "type": "rendered"}}, "hash": "7ecac799dbb5388bce58adf9ebd88a39fb0d49e8", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/7ecac799dbb5388bce58adf9ebd88a39fb0d49e8.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/7ecac799dbb5388bce58adf9ebd88a39fb0d49e8/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/7ecac799dbb5388bce58adf9ebd88a39fb0d49e8"}, "html": {"href": "#!/cavitylab/labscript/commits/7ecac799dbb5388bce58adf9ebd88a39fb0d49e8"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/7ecac799dbb5388bce58adf9ebd88a39fb0d49e8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/7ecac799dbb5388bce58adf9ebd88a39fb0d49e8/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/7ecac799dbb5388bce58adf9ebd88a39fb0d49e8/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed bug where an experiment with only one pseudoclock would not compile", "markup": "markdown", "html": "<p>Fixed bug where an experiment with only one pseudoclock would not compile</p>", "type": "rendered"}, "parents": [{"hash": "5e3a2f7b597044d0d8e516ffe02c3194234f599b", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/5e3a2f7b597044d0d8e516ffe02c3194234f599b.json"}, "html": {"href": "#!/cavitylab/labscript/commits/5e3a2f7b597044d0d8e516ffe02c3194234f599b"}}}], "date": "2014-06-12T00:16:40+00:00", "message": "Fixed bug where an experiment with only one pseudoclock would not compile", "type": "commit"}, {"rendered": {"message": {"raw": "Disabled labscript auto initialisation for the moment.\nThis is necessary so that things importing BLACS tabs and runviewer classes\nfrom labscript_devices don't trigger auto initialisation.\n\nWe will probably never re-enable auto-initialisation, and will instead\nmake a __main__.py here so that people can still use command line compilation\nof their labscripts with:\n\npython -m labscript myfile.py my_hdf_file.h5 --options\n\netc.", "markup": "markdown", "html": "<p>Disabled labscript auto initialisation for the moment.<br />\nThis is necessary so that things importing BLACS tabs and runviewer classes<br />\nfrom labscript_devices don't trigger auto initialisation.</p>\n<p>We will probably never re-enable auto-initialisation, and will instead<br />\nmake a <strong>main</strong>.py here so that people can still use command line compilation<br />\nof their labscripts with:</p>\n<p>python -m labscript myfile.py my_hdf_file.h5 --options</p>\n<p>etc.</p>", "type": "rendered"}}, "hash": "5e3a2f7b597044d0d8e516ffe02c3194234f599b", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/5e3a2f7b597044d0d8e516ffe02c3194234f599b.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/5e3a2f7b597044d0d8e516ffe02c3194234f599b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/5e3a2f7b597044d0d8e516ffe02c3194234f599b"}, "html": {"href": "#!/cavitylab/labscript/commits/5e3a2f7b597044d0d8e516ffe02c3194234f599b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/5e3a2f7b597044d0d8e516ffe02c3194234f599b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/5e3a2f7b597044d0d8e516ffe02c3194234f599b/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/5e3a2f7b597044d0d8e516ffe02c3194234f599b/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Disabled labscript auto initialisation for the moment.\nThis is necessary so that things importing BLACS tabs and runviewer classes\nfrom labscript_devices don't trigger auto initialisation.\n\nWe will probably never re-enable auto-initialisation, and will instead\nmake a __main__.py here so that people can still use command line compilation\nof their labscripts with:\n\npython -m labscript myfile.py my_hdf_file.h5 --options\n\netc.", "markup": "markdown", "html": "<p>Disabled labscript auto initialisation for the moment.<br />\nThis is necessary so that things importing BLACS tabs and runviewer classes<br />\nfrom labscript_devices don't trigger auto initialisation.</p>\n<p>We will probably never re-enable auto-initialisation, and will instead<br />\nmake a <strong>main</strong>.py here so that people can still use command line compilation<br />\nof their labscripts with:</p>\n<p>python -m labscript myfile.py my_hdf_file.h5 --options</p>\n<p>etc.</p>", "type": "rendered"}, "parents": [{"hash": "eb52e88e710066c4e22027f550d6c14902fbcf5a", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/eb52e88e710066c4e22027f550d6c14902fbcf5a.json"}, "html": {"href": "#!/cavitylab/labscript/commits/eb52e88e710066c4e22027f550d6c14902fbcf5a"}}}], "date": "2014-06-11T07:03:54+00:00", "message": "Disabled labscript auto initialisation for the moment.\nThis is necessary so that things importing BLACS tabs and runviewer classes\nfrom labscript_devices don't trigger auto initialisation.\n\nWe will probably never re-enable auto-initialisation, and will instead\nmake a __main__.py here so that people can still use command line compilation\nof their labscripts with:\n\npython -m labscript myfile.py my_hdf_file.h5 --options\n\netc.", "type": "commit"}, {"rendered": {"message": {"raw": "Updated example.py for gated-clocks and fixed bugs:\n * Used parent_clock_line property to find the ClockLine\n * Check clock_limit of triggers to calculate duration of a pseudoclock trigger (this could do with improving in the upcoming rewrite)", "markup": "markdown", "html": "<p>Updated example.py for gated-clocks and fixed bugs:<br />\n * Used parent_clock_line property to find the ClockLine<br />\n * Check clock_limit of triggers to calculate duration of a pseudoclock trigger (this could do with improving in the upcoming rewrite)</p>", "type": "rendered"}}, "hash": "eb52e88e710066c4e22027f550d6c14902fbcf5a", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/eb52e88e710066c4e22027f550d6c14902fbcf5a.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/eb52e88e710066c4e22027f550d6c14902fbcf5a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/eb52e88e710066c4e22027f550d6c14902fbcf5a"}, "html": {"href": "#!/cavitylab/labscript/commits/eb52e88e710066c4e22027f550d6c14902fbcf5a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/eb52e88e710066c4e22027f550d6c14902fbcf5a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/eb52e88e710066c4e22027f550d6c14902fbcf5a/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/eb52e88e710066c4e22027f550d6c14902fbcf5a/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Updated example.py for gated-clocks and fixed bugs:\n * Used parent_clock_line property to find the ClockLine\n * Check clock_limit of triggers to calculate duration of a pseudoclock trigger (this could do with improving in the upcoming rewrite)", "markup": "markdown", "html": "<p>Updated example.py for gated-clocks and fixed bugs:<br />\n * Used parent_clock_line property to find the ClockLine<br />\n * Check clock_limit of triggers to calculate duration of a pseudoclock trigger (this could do with improving in the upcoming rewrite)</p>", "type": "rendered"}, "parents": [{"hash": "6f4b61aac9d365b530ab4b650bfcf7397d6c44da", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/6f4b61aac9d365b530ab4b650bfcf7397d6c44da.json"}, "html": {"href": "#!/cavitylab/labscript/commits/6f4b61aac9d365b530ab4b650bfcf7397d6c44da"}}}], "date": "2014-06-08T07:05:29+00:00", "message": "Updated example.py for gated-clocks and fixed bugs:\n * Used parent_clock_line property to find the ClockLine\n * Check clock_limit of triggers to calculate duration of a pseudoclock trigger (this could do with improving in the upcoming rewrite)", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bugs (now minimally tested)\n\n* reordered classes\n* fixed ramps limits not being saved in dictionary in Output class\n* Fixed bug where outputs with a single update co-inciding with the start of a ramp on another clock line would both be treated as a ramp.\n* fixed collect_change_times where list of unique change_times needed to be saved back into the change_times dictionary because the list pulled out of the dictionary was run through list(set()) which meant the list we were modifying was not the same one that was in the dictionary.", "markup": "markdown", "html": "<p>Fixed bugs (now minimally tested)</p>\n<ul>\n<li>reordered classes</li>\n<li>fixed ramps limits not being saved in dictionary in Output class</li>\n<li>Fixed bug where outputs with a single update co-inciding with the start of a ramp on another clock line would both be treated as a ramp.</li>\n<li>fixed collect_change_times where list of unique change_times needed to be saved back into the change_times dictionary because the list pulled out of the dictionary was run through list(set()) which meant the list we were modifying was not the same one that was in the dictionary.</li>\n</ul>", "type": "rendered"}}, "hash": "6f4b61aac9d365b530ab4b650bfcf7397d6c44da", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/6f4b61aac9d365b530ab4b650bfcf7397d6c44da.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/6f4b61aac9d365b530ab4b650bfcf7397d6c44da/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/6f4b61aac9d365b530ab4b650bfcf7397d6c44da"}, "html": {"href": "#!/cavitylab/labscript/commits/6f4b61aac9d365b530ab4b650bfcf7397d6c44da"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/6f4b61aac9d365b530ab4b650bfcf7397d6c44da"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/6f4b61aac9d365b530ab4b650bfcf7397d6c44da/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/6f4b61aac9d365b530ab4b650bfcf7397d6c44da/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed bugs (now minimally tested)\n\n* reordered classes\n* fixed ramps limits not being saved in dictionary in Output class\n* Fixed bug where outputs with a single update co-inciding with the start of a ramp on another clock line would both be treated as a ramp.\n* fixed collect_change_times where list of unique change_times needed to be saved back into the change_times dictionary because the list pulled out of the dictionary was run through list(set()) which meant the list we were modifying was not the same one that was in the dictionary.", "markup": "markdown", "html": "<p>Fixed bugs (now minimally tested)</p>\n<ul>\n<li>reordered classes</li>\n<li>fixed ramps limits not being saved in dictionary in Output class</li>\n<li>Fixed bug where outputs with a single update co-inciding with the start of a ramp on another clock line would both be treated as a ramp.</li>\n<li>fixed collect_change_times where list of unique change_times needed to be saved back into the change_times dictionary because the list pulled out of the dictionary was run through list(set()) which meant the list we were modifying was not the same one that was in the dictionary.</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "401ce508e73fce699a9edd5319378b59df1732f7", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/401ce508e73fce699a9edd5319378b59df1732f7.json"}, "html": {"href": "#!/cavitylab/labscript/commits/401ce508e73fce699a9edd5319378b59df1732f7"}}}], "date": "2014-06-06T08:38:47+00:00", "message": "Fixed bugs (now minimally tested)\n\n* reordered classes\n* fixed ramps limits not being saved in dictionary in Output class\n* Fixed bug where outputs with a single update co-inciding with the start of a ramp on another clock line would both be treated as a ramp.\n* fixed collect_change_times where list of unique change_times needed to be saved back into the change_times dictionary because the list pulled out of the dictionary was run through list(set()) which meant the list we were modifying was not the same one that was in the dictionary.", "type": "commit"}, {"rendered": {"message": {"raw": "fixed some obvious bugs before testing", "markup": "markdown", "html": "<p>fixed some obvious bugs before testing</p>", "type": "rendered"}}, "hash": "401ce508e73fce699a9edd5319378b59df1732f7", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/401ce508e73fce699a9edd5319378b59df1732f7.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/401ce508e73fce699a9edd5319378b59df1732f7/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/401ce508e73fce699a9edd5319378b59df1732f7"}, "html": {"href": "#!/cavitylab/labscript/commits/401ce508e73fce699a9edd5319378b59df1732f7"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/401ce508e73fce699a9edd5319378b59df1732f7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/401ce508e73fce699a9edd5319378b59df1732f7/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/401ce508e73fce699a9edd5319378b59df1732f7/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "fixed some obvious bugs before testing", "markup": "markdown", "html": "<p>fixed some obvious bugs before testing</p>", "type": "rendered"}, "parents": [{"hash": "0a0ad3fc8bb18294eb6f00dd812754a2fb729cbd", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/0a0ad3fc8bb18294eb6f00dd812754a2fb729cbd.json"}, "html": {"href": "#!/cavitylab/labscript/commits/0a0ad3fc8bb18294eb6f00dd812754a2fb729cbd"}}}], "date": "2014-06-06T06:42:51+00:00", "message": "fixed some obvious bugs before testing", "type": "commit"}, {"rendered": {"message": {"raw": "Implemented true gated clocks (untested).\nlabscript_devices module has not yet been updated to support this change (hence why it is untested).\n\n* deleted slow clock\n* all clock ticks are gated (not just the looping clock ticks)\n* modified hierarchy of classes to be:\n  - PseudoclockDevice\n  --- Pseudoclock\n  ----- ClockLine\n  ------- IntermediateDevice\n  --------- Output\n* PseudoclockDevice should support multiple Pseudoclocks\n* Pseudoclock should support multiple ClockLines\n* ClockLines support multiple IntermediateDevices\n\ncorrected typo in .hgignore file", "markup": "markdown", "html": "<p>Implemented true gated clocks (untested).<br />\nlabscript_devices module has not yet been updated to support this change (hence why it is untested).</p>\n<ul>\n<li>deleted slow clock</li>\n<li>all clock ticks are gated (not just the looping clock ticks)</li>\n<li>modified hierarchy of classes to be:</li>\n<li>PseudoclockDevice<br />\n  --- Pseudoclock<br />\n  ----- ClockLine<br />\n  ------- IntermediateDevice<br />\n  --------- Output</li>\n<li>PseudoclockDevice should support multiple Pseudoclocks</li>\n<li>Pseudoclock should support multiple ClockLines</li>\n<li>ClockLines support multiple IntermediateDevices</li>\n</ul>\n<p>corrected typo in .hgignore file</p>", "type": "rendered"}}, "hash": "0a0ad3fc8bb18294eb6f00dd812754a2fb729cbd", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/0a0ad3fc8bb18294eb6f00dd812754a2fb729cbd.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/0a0ad3fc8bb18294eb6f00dd812754a2fb729cbd/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/0a0ad3fc8bb18294eb6f00dd812754a2fb729cbd"}, "html": {"href": "#!/cavitylab/labscript/commits/0a0ad3fc8bb18294eb6f00dd812754a2fb729cbd"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/0a0ad3fc8bb18294eb6f00dd812754a2fb729cbd"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/0a0ad3fc8bb18294eb6f00dd812754a2fb729cbd/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/0a0ad3fc8bb18294eb6f00dd812754a2fb729cbd/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Implemented true gated clocks (untested).\nlabscript_devices module has not yet been updated to support this change (hence why it is untested).\n\n* deleted slow clock\n* all clock ticks are gated (not just the looping clock ticks)\n* modified hierarchy of classes to be:\n  - PseudoclockDevice\n  --- Pseudoclock\n  ----- ClockLine\n  ------- IntermediateDevice\n  --------- Output\n* PseudoclockDevice should support multiple Pseudoclocks\n* Pseudoclock should support multiple ClockLines\n* ClockLines support multiple IntermediateDevices\n\ncorrected typo in .hgignore file", "markup": "markdown", "html": "<p>Implemented true gated clocks (untested).<br />\nlabscript_devices module has not yet been updated to support this change (hence why it is untested).</p>\n<ul>\n<li>deleted slow clock</li>\n<li>all clock ticks are gated (not just the looping clock ticks)</li>\n<li>modified hierarchy of classes to be:</li>\n<li>PseudoclockDevice<br />\n  --- Pseudoclock<br />\n  ----- ClockLine<br />\n  ------- IntermediateDevice<br />\n  --------- Output</li>\n<li>PseudoclockDevice should support multiple Pseudoclocks</li>\n<li>Pseudoclock should support multiple ClockLines</li>\n<li>ClockLines support multiple IntermediateDevices</li>\n</ul>\n<p>corrected typo in .hgignore file</p>", "type": "rendered"}, "parents": [{"hash": "fd7de4afde8a45aca14c39e8cadbb3f7a91d3d1c", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/fd7de4afde8a45aca14c39e8cadbb3f7a91d3d1c.json"}, "html": {"href": "#!/cavitylab/labscript/commits/fd7de4afde8a45aca14c39e8cadbb3f7a91d3d1c"}}}], "date": "2014-06-06T02:08:29+00:00", "message": "Implemented true gated clocks (untested).\nlabscript_devices module has not yet been updated to support this change (hence why it is untested).\n\n* deleted slow clock\n* all clock ticks are gated (not just the looping clock ticks)\n* modified hierarchy of classes to be:\n  - PseudoclockDevice\n  --- Pseudoclock\n  ----- ClockLine\n  ------- IntermediateDevice\n  --------- Output\n* PseudoclockDevice should support multiple Pseudoclocks\n* Pseudoclock should support multiple ClockLines\n* ClockLines support multiple IntermediateDevices\n\ncorrected typo in .hgignore file", "type": "commit"}, {"rendered": {"message": {"raw": "Lots of refactoring of DDSs.\n\nDDSs had many references to specific classes for their parent devices, and their behaviour was\nslightly different depending on what parent device they had. This has been solved in a few ways.\n\nFor DDSs attached to a PhaseMatrixQuickSyn, there is now a subclass of DDS,\nlabscript_utils.PhaseMatrixQuickSyn.QuickSynDDS, which supports only frequency\ncontrol and only static gating.\n\nFor Novatechs, one should still use DDS and StaticDDS, but they call methods on\nthe parents asking questions about how to initialise, such as whether a certain\nunit conversion class should be used if the user hasn't specified one. If the parent\ndoes not implement this method get_default_unit_conversion_classes(), it is ignored,\nso this is backward compatible.\n\nFor PulseBlasters, DDS is also still the class to use, however the creation of a\nDigitalQuantity for its gating is now done in the PulseBlaster's add_device method.\n\nIn order to facilitate this, Device.__init__ now takes an argument call_parents_add_device,\nwhich, if set to false, means Device.__init__ will not call parent_device.add_device.\n\nThis allows subclasses more control over when parent_device.add_device is called\nin their own __init__ method, although it remains the case that they *must* call it\nat some point in their __init__ method if they tell Device.__init__ not to.\n\nThis commit corresponds to a simultaneous one in the labscript_devices module which\nimplements part of this change.", "markup": "markdown", "html": "<p>Lots of refactoring of DDSs.</p>\n<p>DDSs had many references to specific classes for their parent devices, and their behaviour was<br />\nslightly different depending on what parent device they had. This has been solved in a few ways.</p>\n<p>For DDSs attached to a PhaseMatrixQuickSyn, there is now a subclass of DDS,<br />\nlabscript_utils.PhaseMatrixQuickSyn.QuickSynDDS, which supports only frequency<br />\ncontrol and only static gating.</p>\n<p>For Novatechs, one should still use DDS and StaticDDS, but they call methods on<br />\nthe parents asking questions about how to initialise, such as whether a certain<br />\nunit conversion class should be used if the user hasn't specified one. If the parent<br />\ndoes not implement this method get_default_unit_conversion_classes(), it is ignored,<br />\nso this is backward compatible.</p>\n<p>For PulseBlasters, DDS is also still the class to use, however the creation of a<br />\nDigitalQuantity for its gating is now done in the PulseBlaster's add_device method.</p>\n<p>In order to facilitate this, Device.<strong>init</strong> now takes an argument call_parents_add_device,<br />\nwhich, if set to false, means Device.<strong>init</strong> will not call parent_device.add_device.</p>\n<p>This allows subclasses more control over when parent_device.add_device is called<br />\nin their own <strong>init</strong> method, although it remains the case that they <em>must</em> call it<br />\nat some point in their <strong>init</strong> method if they tell Device.<strong>init</strong> not to.</p>\n<p>This commit corresponds to a simultaneous one in the labscript_devices module which<br />\nimplements part of this change.</p>", "type": "rendered"}}, "hash": "fd7de4afde8a45aca14c39e8cadbb3f7a91d3d1c", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/fd7de4afde8a45aca14c39e8cadbb3f7a91d3d1c.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/fd7de4afde8a45aca14c39e8cadbb3f7a91d3d1c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/fd7de4afde8a45aca14c39e8cadbb3f7a91d3d1c"}, "html": {"href": "#!/cavitylab/labscript/commits/fd7de4afde8a45aca14c39e8cadbb3f7a91d3d1c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/fd7de4afde8a45aca14c39e8cadbb3f7a91d3d1c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/fd7de4afde8a45aca14c39e8cadbb3f7a91d3d1c/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/fd7de4afde8a45aca14c39e8cadbb3f7a91d3d1c/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Lots of refactoring of DDSs.\n\nDDSs had many references to specific classes for their parent devices, and their behaviour was\nslightly different depending on what parent device they had. This has been solved in a few ways.\n\nFor DDSs attached to a PhaseMatrixQuickSyn, there is now a subclass of DDS,\nlabscript_utils.PhaseMatrixQuickSyn.QuickSynDDS, which supports only frequency\ncontrol and only static gating.\n\nFor Novatechs, one should still use DDS and StaticDDS, but they call methods on\nthe parents asking questions about how to initialise, such as whether a certain\nunit conversion class should be used if the user hasn't specified one. If the parent\ndoes not implement this method get_default_unit_conversion_classes(), it is ignored,\nso this is backward compatible.\n\nFor PulseBlasters, DDS is also still the class to use, however the creation of a\nDigitalQuantity for its gating is now done in the PulseBlaster's add_device method.\n\nIn order to facilitate this, Device.__init__ now takes an argument call_parents_add_device,\nwhich, if set to false, means Device.__init__ will not call parent_device.add_device.\n\nThis allows subclasses more control over when parent_device.add_device is called\nin their own __init__ method, although it remains the case that they *must* call it\nat some point in their __init__ method if they tell Device.__init__ not to.\n\nThis commit corresponds to a simultaneous one in the labscript_devices module which\nimplements part of this change.", "markup": "markdown", "html": "<p>Lots of refactoring of DDSs.</p>\n<p>DDSs had many references to specific classes for their parent devices, and their behaviour was<br />\nslightly different depending on what parent device they had. This has been solved in a few ways.</p>\n<p>For DDSs attached to a PhaseMatrixQuickSyn, there is now a subclass of DDS,<br />\nlabscript_utils.PhaseMatrixQuickSyn.QuickSynDDS, which supports only frequency<br />\ncontrol and only static gating.</p>\n<p>For Novatechs, one should still use DDS and StaticDDS, but they call methods on<br />\nthe parents asking questions about how to initialise, such as whether a certain<br />\nunit conversion class should be used if the user hasn't specified one. If the parent<br />\ndoes not implement this method get_default_unit_conversion_classes(), it is ignored,<br />\nso this is backward compatible.</p>\n<p>For PulseBlasters, DDS is also still the class to use, however the creation of a<br />\nDigitalQuantity for its gating is now done in the PulseBlaster's add_device method.</p>\n<p>In order to facilitate this, Device.<strong>init</strong> now takes an argument call_parents_add_device,<br />\nwhich, if set to false, means Device.<strong>init</strong> will not call parent_device.add_device.</p>\n<p>This allows subclasses more control over when parent_device.add_device is called<br />\nin their own <strong>init</strong> method, although it remains the case that they <em>must</em> call it<br />\nat some point in their <strong>init</strong> method if they tell Device.<strong>init</strong> not to.</p>\n<p>This commit corresponds to a simultaneous one in the labscript_devices module which<br />\nimplements part of this change.</p>", "type": "rendered"}, "parents": [{"hash": "e5c28df46ecc8ce288672d0c2c8027650f4d208a", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/e5c28df46ecc8ce288672d0c2c8027650f4d208a.json"}, "html": {"href": "#!/cavitylab/labscript/commits/e5c28df46ecc8ce288672d0c2c8027650f4d208a"}}}], "date": "2014-06-04T05:24:04+00:00", "message": "Lots of refactoring of DDSs.\n\nDDSs had many references to specific classes for their parent devices, and their behaviour was\nslightly different depending on what parent device they had. This has been solved in a few ways.\n\nFor DDSs attached to a PhaseMatrixQuickSyn, there is now a subclass of DDS,\nlabscript_utils.PhaseMatrixQuickSyn.QuickSynDDS, which supports only frequency\ncontrol and only static gating.\n\nFor Novatechs, one should still use DDS and StaticDDS, but they call methods on\nthe parents asking questions about how to initialise, such as whether a certain\nunit conversion class should be used if the user hasn't specified one. If the parent\ndoes not implement this method get_default_unit_conversion_classes(), it is ignored,\nso this is backward compatible.\n\nFor PulseBlasters, DDS is also still the class to use, however the creation of a\nDigitalQuantity for its gating is now done in the PulseBlaster's add_device method.\n\nIn order to facilitate this, Device.__init__ now takes an argument call_parents_add_device,\nwhich, if set to false, means Device.__init__ will not call parent_device.add_device.\n\nThis allows subclasses more control over when parent_device.add_device is called\nin their own __init__ method, although it remains the case that they *must* call it\nat some point in their __init__ method if they tell Device.__init__ not to.\n\nThis commit corresponds to a simultaneous one in the labscript_devices module which\nimplements part of this change.", "type": "commit"}, {"rendered": {"message": {"raw": "NI PCIe 6363 compiles with no instructions", "markup": "markdown", "html": "<p>NI PCIe 6363 compiles with no instructions</p>", "type": "rendered"}}, "hash": "e5c28df46ecc8ce288672d0c2c8027650f4d208a", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/e5c28df46ecc8ce288672d0c2c8027650f4d208a.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/e5c28df46ecc8ce288672d0c2c8027650f4d208a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/e5c28df46ecc8ce288672d0c2c8027650f4d208a"}, "html": {"href": "#!/cavitylab/labscript/commits/e5c28df46ecc8ce288672d0c2c8027650f4d208a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/e5c28df46ecc8ce288672d0c2c8027650f4d208a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/e5c28df46ecc8ce288672d0c2c8027650f4d208a/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/e5c28df46ecc8ce288672d0c2c8027650f4d208a/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "NI PCIe 6363 compiles with no instructions", "markup": "markdown", "html": "<p>NI PCIe 6363 compiles with no instructions</p>", "type": "rendered"}, "parents": [{"hash": "8a120a061b67c31ce5197b028f1211dd06c2222c", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/8a120a061b67c31ce5197b028f1211dd06c2222c.json"}, "html": {"href": "#!/cavitylab/labscript/commits/8a120a061b67c31ce5197b028f1211dd06c2222c"}}}], "date": "2014-06-03T04:46:26+00:00", "message": "NI PCIe 6363 compiles with no instructions", "type": "commit"}, {"rendered": {"message": {"raw": "Made IntermediateDevice use duck typing rather than hard coding what types of\npseudoclocks are allowed", "markup": "markdown", "html": "<p>Made IntermediateDevice use duck typing rather than hard coding what types of<br />\npseudoclocks are allowed</p>", "type": "rendered"}}, "hash": "8a120a061b67c31ce5197b028f1211dd06c2222c", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/8a120a061b67c31ce5197b028f1211dd06c2222c.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/8a120a061b67c31ce5197b028f1211dd06c2222c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/8a120a061b67c31ce5197b028f1211dd06c2222c"}, "html": {"href": "#!/cavitylab/labscript/commits/8a120a061b67c31ce5197b028f1211dd06c2222c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/8a120a061b67c31ce5197b028f1211dd06c2222c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/8a120a061b67c31ce5197b028f1211dd06c2222c/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/8a120a061b67c31ce5197b028f1211dd06c2222c/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Made IntermediateDevice use duck typing rather than hard coding what types of\npseudoclocks are allowed", "markup": "markdown", "html": "<p>Made IntermediateDevice use duck typing rather than hard coding what types of<br />\npseudoclocks are allowed</p>", "type": "rendered"}, "parents": [{"hash": "ff4c8866929e3927f1722d2ffedae36f22a35627", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ff4c8866929e3927f1722d2ffedae36f22a35627.json"}, "html": {"href": "#!/cavitylab/labscript/commits/ff4c8866929e3927f1722d2ffedae36f22a35627"}}}], "date": "2014-06-03T04:34:51+00:00", "message": "Made IntermediateDevice use duck typing rather than hard coding what types of\npseudoclocks are allowed", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bug where pseudoclocks with no output would not compile.", "markup": "markdown", "html": "<p>Fixed bug where pseudoclocks with no output would not compile.</p>", "type": "rendered"}}, "hash": "ff4c8866929e3927f1722d2ffedae36f22a35627", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/ff4c8866929e3927f1722d2ffedae36f22a35627.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/ff4c8866929e3927f1722d2ffedae36f22a35627/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/ff4c8866929e3927f1722d2ffedae36f22a35627"}, "html": {"href": "#!/cavitylab/labscript/commits/ff4c8866929e3927f1722d2ffedae36f22a35627"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/ff4c8866929e3927f1722d2ffedae36f22a35627"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/ff4c8866929e3927f1722d2ffedae36f22a35627/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/ff4c8866929e3927f1722d2ffedae36f22a35627/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed bug where pseudoclocks with no output would not compile.", "markup": "markdown", "html": "<p>Fixed bug where pseudoclocks with no output would not compile.</p>", "type": "rendered"}, "parents": [{"hash": "9e6c3f1f1268d6a4db93c1efddc68ba5dbc5e0d8", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/9e6c3f1f1268d6a4db93c1efddc68ba5dbc5e0d8.json"}, "html": {"href": "#!/cavitylab/labscript/commits/9e6c3f1f1268d6a4db93c1efddc68ba5dbc5e0d8"}}}], "date": "2014-06-03T04:24:34+00:00", "message": "Fixed bug where pseudoclocks with no output would not compile.", "type": "commit"}, {"rendered": {"message": {"raw": "Tweak to auto initialisation\nAdded command line arg to auto overwrite output file when none is given.", "markup": "markdown", "html": "<p>Tweak to auto initialisation<br />\nAdded command line arg to auto overwrite output file when none is given.</p>", "type": "rendered"}}, "hash": "9e6c3f1f1268d6a4db93c1efddc68ba5dbc5e0d8", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/9e6c3f1f1268d6a4db93c1efddc68ba5dbc5e0d8.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/9e6c3f1f1268d6a4db93c1efddc68ba5dbc5e0d8/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/9e6c3f1f1268d6a4db93c1efddc68ba5dbc5e0d8"}, "html": {"href": "#!/cavitylab/labscript/commits/9e6c3f1f1268d6a4db93c1efddc68ba5dbc5e0d8"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/9e6c3f1f1268d6a4db93c1efddc68ba5dbc5e0d8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/9e6c3f1f1268d6a4db93c1efddc68ba5dbc5e0d8/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/9e6c3f1f1268d6a4db93c1efddc68ba5dbc5e0d8/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Tweak to auto initialisation\nAdded command line arg to auto overwrite output file when none is given.", "markup": "markdown", "html": "<p>Tweak to auto initialisation<br />\nAdded command line arg to auto overwrite output file when none is given.</p>", "type": "rendered"}, "parents": [{"hash": "34fa01f888725def2eae5bac530add3083a8d74a", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/34fa01f888725def2eae5bac530add3083a8d74a.json"}, "html": {"href": "#!/cavitylab/labscript/commits/34fa01f888725def2eae5bac530add3083a8d74a"}}}], "date": "2014-06-03T04:16:05+00:00", "message": "Tweak to auto initialisation\nAdded command line arg to auto overwrite output file when none is given.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed regresseion in auto initialisation", "markup": "markdown", "html": "<p>Fixed regresseion in auto initialisation</p>", "type": "rendered"}}, "hash": "34fa01f888725def2eae5bac530add3083a8d74a", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript.json"}, "html": {"href": "#!/cavitylab/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{85322b88-a6d9-4e3e-bc98-201124f6bf82}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cavitylab/labscript", "uuid": "{85322b88-a6d9-4e3e-bc98-201124f6bf82}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/34fa01f888725def2eae5bac530add3083a8d74a.json"}, "comments": {"href": "data/repositories/cavitylab/labscript/commit/34fa01f888725def2eae5bac530add3083a8d74a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/patch/34fa01f888725def2eae5bac530add3083a8d74a"}, "html": {"href": "#!/cavitylab/labscript/commits/34fa01f888725def2eae5bac530add3083a8d74a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/diff/34fa01f888725def2eae5bac530add3083a8d74a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript/commit/34fa01f888725def2eae5bac530add3083a8d74a/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript/commit/34fa01f888725def2eae5bac530add3083a8d74a/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed regresseion in auto initialisation", "markup": "markdown", "html": "<p>Fixed regresseion in auto initialisation</p>", "type": "rendered"}, "parents": [{"hash": "f7364a3f478c0ce46c3ba5ea35e34266b2ebcdf8", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript/commit/f7364a3f478c0ce46c3ba5ea35e34266b2ebcdf8.json"}, "html": {"href": "#!/cavitylab/labscript/commits/f7364a3f478c0ce46c3ba5ea35e34266b2ebcdf8"}}}], "date": "2014-06-03T03:53:09+00:00", "message": "Fixed regresseion in auto initialisation", "type": "commit"}], "next": "data/repositories/cavitylab/labscript/commits/prevent_unicode_warning_page=3.json"}