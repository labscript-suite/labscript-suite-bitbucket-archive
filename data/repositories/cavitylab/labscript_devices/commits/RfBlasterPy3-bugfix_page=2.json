{"pagelen": 100, "previous": "data/repositories/cavitylab/labscript_devices/commits/RfBlasterPy3-bugfix_page=1.json", "values": [{"rendered": {"message": {"raw": "Tweak to daqmx_utils.py", "markup": "markdown", "html": "<p>Tweak to daqmx_utils.py</p>", "type": "rendered"}}, "hash": "17412f2e80825e86b2c790ca464d4a7071d825bd", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/17412f2e80825e86b2c790ca464d4a7071d825bd.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/17412f2e80825e86b2c790ca464d4a7071d825bd/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/17412f2e80825e86b2c790ca464d4a7071d825bd"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/17412f2e80825e86b2c790ca464d4a7071d825bd"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/17412f2e80825e86b2c790ca464d4a7071d825bd"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/17412f2e80825e86b2c790ca464d4a7071d825bd/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/17412f2e80825e86b2c790ca464d4a7071d825bd/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Tweak to daqmx_utils.py", "markup": "markdown", "html": "<p>Tweak to daqmx_utils.py</p>", "type": "rendered"}, "parents": [{"hash": "edf70320b17a88ae3e70bb1db9b0a2748fcafed8", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/edf70320b17a88ae3e70bb1db9b0a2748fcafed8.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/edf70320b17a88ae3e70bb1db9b0a2748fcafed8"}}}], "date": "2018-10-12T21:34:50+00:00", "message": "Tweak to daqmx_utils.py", "type": "commit"}, {"rendered": {"message": {"raw": "add daqmx_utils.py, which contains a function that introspects whether a device\nhas incomplete sample detection.", "markup": "markdown", "html": "<p>add daqmx_utils.py, which contains a function that introspects whether a device<br />\nhas incomplete sample detection.</p>", "type": "rendered"}}, "hash": "edf70320b17a88ae3e70bb1db9b0a2748fcafed8", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/edf70320b17a88ae3e70bb1db9b0a2748fcafed8.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/edf70320b17a88ae3e70bb1db9b0a2748fcafed8/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/edf70320b17a88ae3e70bb1db9b0a2748fcafed8"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/edf70320b17a88ae3e70bb1db9b0a2748fcafed8"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/edf70320b17a88ae3e70bb1db9b0a2748fcafed8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/edf70320b17a88ae3e70bb1db9b0a2748fcafed8/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/edf70320b17a88ae3e70bb1db9b0a2748fcafed8/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "add daqmx_utils.py, which contains a function that introspects whether a device\nhas incomplete sample detection.", "markup": "markdown", "html": "<p>add daqmx_utils.py, which contains a function that introspects whether a device<br />\nhas incomplete sample detection.</p>", "type": "rendered"}, "parents": [{"hash": "f285c4c0488ac07bf805074250efad18dd1262f1", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/f285c4c0488ac07bf805074250efad18dd1262f1.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/f285c4c0488ac07bf805074250efad18dd1262f1"}}}], "date": "2018-10-12T21:07:47+00:00", "message": "add daqmx_utils.py, which contains a function that introspects whether a device\nhas incomplete sample detection.", "type": "commit"}, {"rendered": {"message": {"raw": "hacking on wait monitor. Not yet functional, some issues to iron out with\nincomplete sample detection and small buffers.\n\nPlan is to\n\n* acquire pulse width instead of semiperiod, this will entail\nonly one read event per pulse rather than two, solving the issue of data\ncoming faster than it can be read and filling the buffer. Or maybe we will\nstill do semiperiod, but will read 2 samples at a time as David Meyer has had\nsucess with. The advantage of this latter approach is that we do not need to\nstore the pulse duration in the h5 file in order to take it into account -\nwe can measure it.\n\n* Determine whether a device has incomplete sample detection empirically.\n  In get_capabilities.py we can create a task that outputs on a DO and reads in\n  a counter, and we can see what we get and store whether it looks like\n  incomplete sample detection. This should be achievable without asking the user\n  to connect back any cables physically, as we should be able to configure\n  them to be connected internally. This will not work if there are any devices\n  out there with counters but no digital outs!", "markup": "markdown", "html": "<p>hacking on wait monitor. Not yet functional, some issues to iron out with<br />\nincomplete sample detection and small buffers.</p>\n<p>Plan is to</p>\n<ul>\n<li>\n<p>acquire pulse width instead of semiperiod, this will entail<br />\nonly one read event per pulse rather than two, solving the issue of data<br />\ncoming faster than it can be read and filling the buffer. Or maybe we will<br />\nstill do semiperiod, but will read 2 samples at a time as David Meyer has had<br />\nsucess with. The advantage of this latter approach is that we do not need to<br />\nstore the pulse duration in the h5 file in order to take it into account -<br />\nwe can measure it.</p>\n</li>\n<li>\n<p>Determine whether a device has incomplete sample detection empirically.<br />\n  In get_capabilities.py we can create a task that outputs on a DO and reads in<br />\n  a counter, and we can see what we get and store whether it looks like<br />\n  incomplete sample detection. This should be achievable without asking the user<br />\n  to connect back any cables physically, as we should be able to configure<br />\n  them to be connected internally. This will not work if there are any devices<br />\n  out there with counters but no digital outs!</p>\n</li>\n</ul>", "type": "rendered"}}, "hash": "f285c4c0488ac07bf805074250efad18dd1262f1", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/f285c4c0488ac07bf805074250efad18dd1262f1.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/f285c4c0488ac07bf805074250efad18dd1262f1/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/f285c4c0488ac07bf805074250efad18dd1262f1"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/f285c4c0488ac07bf805074250efad18dd1262f1"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/f285c4c0488ac07bf805074250efad18dd1262f1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/f285c4c0488ac07bf805074250efad18dd1262f1/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/f285c4c0488ac07bf805074250efad18dd1262f1/statuses_page=1.json"}}, "author": {"raw": "Chris Billington", "type": "author"}, "summary": {"raw": "hacking on wait monitor. Not yet functional, some issues to iron out with\nincomplete sample detection and small buffers.\n\nPlan is to\n\n* acquire pulse width instead of semiperiod, this will entail\nonly one read event per pulse rather than two, solving the issue of data\ncoming faster than it can be read and filling the buffer. Or maybe we will\nstill do semiperiod, but will read 2 samples at a time as David Meyer has had\nsucess with. The advantage of this latter approach is that we do not need to\nstore the pulse duration in the h5 file in order to take it into account -\nwe can measure it.\n\n* Determine whether a device has incomplete sample detection empirically.\n  In get_capabilities.py we can create a task that outputs on a DO and reads in\n  a counter, and we can see what we get and store whether it looks like\n  incomplete sample detection. This should be achievable without asking the user\n  to connect back any cables physically, as we should be able to configure\n  them to be connected internally. This will not work if there are any devices\n  out there with counters but no digital outs!", "markup": "markdown", "html": "<p>hacking on wait monitor. Not yet functional, some issues to iron out with<br />\nincomplete sample detection and small buffers.</p>\n<p>Plan is to</p>\n<ul>\n<li>\n<p>acquire pulse width instead of semiperiod, this will entail<br />\nonly one read event per pulse rather than two, solving the issue of data<br />\ncoming faster than it can be read and filling the buffer. Or maybe we will<br />\nstill do semiperiod, but will read 2 samples at a time as David Meyer has had<br />\nsucess with. The advantage of this latter approach is that we do not need to<br />\nstore the pulse duration in the h5 file in order to take it into account -<br />\nwe can measure it.</p>\n</li>\n<li>\n<p>Determine whether a device has incomplete sample detection empirically.<br />\n  In get_capabilities.py we can create a task that outputs on a DO and reads in<br />\n  a counter, and we can see what we get and store whether it looks like<br />\n  incomplete sample detection. This should be achievable without asking the user<br />\n  to connect back any cables physically, as we should be able to configure<br />\n  them to be connected internally. This will not work if there are any devices<br />\n  out there with counters but no digital outs!</p>\n</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "c7e2538e0da8152fe41a8d66d237a5748f133f42", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/c7e2538e0da8152fe41a8d66d237a5748f133f42.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/c7e2538e0da8152fe41a8d66d237a5748f133f42"}}}], "date": "2018-10-10T21:20:25+00:00", "message": "hacking on wait monitor. Not yet functional, some issues to iron out with\nincomplete sample detection and small buffers.\n\nPlan is to\n\n* acquire pulse width instead of semiperiod, this will entail\nonly one read event per pulse rather than two, solving the issue of data\ncoming faster than it can be read and filling the buffer. Or maybe we will\nstill do semiperiod, but will read 2 samples at a time as David Meyer has had\nsucess with. The advantage of this latter approach is that we do not need to\nstore the pulse duration in the h5 file in order to take it into account -\nwe can measure it.\n\n* Determine whether a device has incomplete sample detection empirically.\n  In get_capabilities.py we can create a task that outputs on a DO and reads in\n  a counter, and we can see what we get and store whether it looks like\n  incomplete sample detection. This should be achievable without asking the user\n  to connect back any cables physically, as we should be able to configure\n  them to be connected internally. This will not work if there are any devices\n  out there with counters but no digital outs!", "type": "commit"}, {"rendered": {"message": {"raw": "Ensure any callbacks still running from a previous task take no action.", "markup": "markdown", "html": "<p>Ensure any callbacks still running from a previous task take no action.</p>", "type": "rendered"}}, "hash": "c7e2538e0da8152fe41a8d66d237a5748f133f42", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/c7e2538e0da8152fe41a8d66d237a5748f133f42.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/c7e2538e0da8152fe41a8d66d237a5748f133f42/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/c7e2538e0da8152fe41a8d66d237a5748f133f42"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/c7e2538e0da8152fe41a8d66d237a5748f133f42"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/c7e2538e0da8152fe41a8d66d237a5748f133f42"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/c7e2538e0da8152fe41a8d66d237a5748f133f42/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/c7e2538e0da8152fe41a8d66d237a5748f133f42/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Ensure any callbacks still running from a previous task take no action.", "markup": "markdown", "html": "<p>Ensure any callbacks still running from a previous task take no action.</p>", "type": "rendered"}, "parents": [{"hash": "aff76b9ac8b29a454c290f53de0d83e552c7fc8a", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/aff76b9ac8b29a454c290f53de0d83e552c7fc8a.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/aff76b9ac8b29a454c290f53de0d83e552c7fc8a"}}}], "date": "2018-10-09T22:37:23+00:00", "message": "Ensure any callbacks still running from a previous task take no action.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bugs in acquisition. Removed reset device for now, it was clearing\ntasks in other subprocesses!", "markup": "markdown", "html": "<p>Fixed bugs in acquisition. Removed reset device for now, it was clearing<br />\ntasks in other subprocesses!</p>", "type": "rendered"}}, "hash": "aff76b9ac8b29a454c290f53de0d83e552c7fc8a", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/aff76b9ac8b29a454c290f53de0d83e552c7fc8a.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/aff76b9ac8b29a454c290f53de0d83e552c7fc8a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/aff76b9ac8b29a454c290f53de0d83e552c7fc8a"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/aff76b9ac8b29a454c290f53de0d83e552c7fc8a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/aff76b9ac8b29a454c290f53de0d83e552c7fc8a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/aff76b9ac8b29a454c290f53de0d83e552c7fc8a/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/aff76b9ac8b29a454c290f53de0d83e552c7fc8a/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed bugs in acquisition. Removed reset device for now, it was clearing\ntasks in other subprocesses!", "markup": "markdown", "html": "<p>Fixed bugs in acquisition. Removed reset device for now, it was clearing<br />\ntasks in other subprocesses!</p>", "type": "rendered"}, "parents": [{"hash": "6b16614386e0491f5aa683893adfc19cff87991e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/6b16614386e0491f5aa683893adfc19cff87991e.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/6b16614386e0491f5aa683893adfc19cff87991e"}}}], "date": "2018-10-09T22:31:44+00:00", "message": "Fixed bugs in acquisition. Removed reset device for now, it was clearing\ntasks in other subprocesses!", "type": "commit"}, {"rendered": {"message": {"raw": "Restrict AI input range only to that supported for a non-differential\nmeasurement.\n\nFix bugs in AI: Start task for manual mode, workaround inability to pass\nbuffered setting to the read callback by using an instance variable instead.", "markup": "markdown", "html": "<p>Restrict AI input range only to that supported for a non-differential<br />\nmeasurement.</p>\n<p>Fix bugs in AI: Start task for manual mode, workaround inability to pass<br />\nbuffered setting to the read callback by using an instance variable instead.</p>", "type": "rendered"}}, "hash": "6b16614386e0491f5aa683893adfc19cff87991e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/6b16614386e0491f5aa683893adfc19cff87991e.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/6b16614386e0491f5aa683893adfc19cff87991e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/6b16614386e0491f5aa683893adfc19cff87991e"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/6b16614386e0491f5aa683893adfc19cff87991e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/6b16614386e0491f5aa683893adfc19cff87991e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/6b16614386e0491f5aa683893adfc19cff87991e/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/6b16614386e0491f5aa683893adfc19cff87991e/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Restrict AI input range only to that supported for a non-differential\nmeasurement.\n\nFix bugs in AI: Start task for manual mode, workaround inability to pass\nbuffered setting to the read callback by using an instance variable instead.", "markup": "markdown", "html": "<p>Restrict AI input range only to that supported for a non-differential<br />\nmeasurement.</p>\n<p>Fix bugs in AI: Start task for manual mode, workaround inability to pass<br />\nbuffered setting to the read callback by using an instance variable instead.</p>", "type": "rendered"}, "parents": [{"hash": "23422b6e162ea56a93f471a923b298b60237764f", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/23422b6e162ea56a93f471a923b298b60237764f.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/23422b6e162ea56a93f471a923b298b60237764f"}}}], "date": "2018-10-09T19:56:50+00:00", "message": "Restrict AI input range only to that supported for a non-differential\nmeasurement.\n\nFix bugs in AI: Start task for manual mode, workaround inability to pass\nbuffered setting to the read callback by using an instance variable instead.", "type": "commit"}, {"rendered": {"message": {"raw": "* Fixed bug in update_capabilities.py and rename to get_capabilities.py.\n* Move base class into labscript_devices.py (updated subclass template accordingly).\n* Fix import * behaviour on Python 2 for the modules submodule - not allowed\n  to put unicode names in the globals dict.\n* Readme fixes", "markup": "markdown", "html": "<ul>\n<li>Fixed bug in update_capabilities.py and rename to get_capabilities.py.</li>\n<li>Move base class into labscript_devices.py (updated subclass template accordingly).</li>\n<li>Fix import * behaviour on Python 2 for the modules submodule - not allowed<br />\n  to put unicode names in the globals dict.</li>\n<li>Readme fixes</li>\n</ul>", "type": "rendered"}}, "hash": "23422b6e162ea56a93f471a923b298b60237764f", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/23422b6e162ea56a93f471a923b298b60237764f.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/23422b6e162ea56a93f471a923b298b60237764f/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/23422b6e162ea56a93f471a923b298b60237764f"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/23422b6e162ea56a93f471a923b298b60237764f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/23422b6e162ea56a93f471a923b298b60237764f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/23422b6e162ea56a93f471a923b298b60237764f/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/23422b6e162ea56a93f471a923b298b60237764f/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "* Fixed bug in update_capabilities.py and rename to get_capabilities.py.\n* Move base class into labscript_devices.py (updated subclass template accordingly).\n* Fix import * behaviour on Python 2 for the modules submodule - not allowed\n  to put unicode names in the globals dict.\n* Readme fixes", "markup": "markdown", "html": "<ul>\n<li>Fixed bug in update_capabilities.py and rename to get_capabilities.py.</li>\n<li>Move base class into labscript_devices.py (updated subclass template accordingly).</li>\n<li>Fix import * behaviour on Python 2 for the modules submodule - not allowed<br />\n  to put unicode names in the globals dict.</li>\n<li>Readme fixes</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "ef1c51593114defe187473ed0e08436e7c33984a", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/ef1c51593114defe187473ed0e08436e7c33984a.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/ef1c51593114defe187473ed0e08436e7c33984a"}}}], "date": "2018-10-06T21:18:52+00:00", "message": "* Fixed bug in update_capabilities.py and rename to get_capabilities.py.\n* Move base class into labscript_devices.py (updated subclass template accordingly).\n* Fix import * behaviour on Python 2 for the modules submodule - not allowed\n  to put unicode names in the globals dict.\n* Readme fixes", "type": "commit"}, {"rendered": {"message": {"raw": "* Added two new models.\n* Fixed issue in getting capabilities of some models.\n* Added introspected AI_start_delay capability.\n* Fixed Py2 incompatibility in generate_subclasses.py\n* Restore use of AI_start_delay in extract_measurements using model-dependent value.", "markup": "markdown", "html": "<ul>\n<li>Added two new models.</li>\n<li>Fixed issue in getting capabilities of some models.</li>\n<li>Added introspected AI_start_delay capability.</li>\n<li>Fixed Py2 incompatibility in generate_subclasses.py</li>\n<li>Restore use of AI_start_delay in extract_measurements using model-dependent value.</li>\n</ul>", "type": "rendered"}}, "hash": "ef1c51593114defe187473ed0e08436e7c33984a", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/ef1c51593114defe187473ed0e08436e7c33984a.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/ef1c51593114defe187473ed0e08436e7c33984a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/ef1c51593114defe187473ed0e08436e7c33984a"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/ef1c51593114defe187473ed0e08436e7c33984a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/ef1c51593114defe187473ed0e08436e7c33984a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/ef1c51593114defe187473ed0e08436e7c33984a/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/ef1c51593114defe187473ed0e08436e7c33984a/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "* Added two new models.\n* Fixed issue in getting capabilities of some models.\n* Added introspected AI_start_delay capability.\n* Fixed Py2 incompatibility in generate_subclasses.py\n* Restore use of AI_start_delay in extract_measurements using model-dependent value.", "markup": "markdown", "html": "<ul>\n<li>Added two new models.</li>\n<li>Fixed issue in getting capabilities of some models.</li>\n<li>Added introspected AI_start_delay capability.</li>\n<li>Fixed Py2 incompatibility in generate_subclasses.py</li>\n<li>Restore use of AI_start_delay in extract_measurements using model-dependent value.</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "1c58d302ab8f426a52cf4adfffeb440afb67acae", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/1c58d302ab8f426a52cf4adfffeb440afb67acae.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/1c58d302ab8f426a52cf4adfffeb440afb67acae"}}}], "date": "2018-10-06T21:13:57+00:00", "message": "* Added two new models.\n* Fixed issue in getting capabilities of some models.\n* Added introspected AI_start_delay capability.\n* Fixed Py2 incompatibility in generate_subclasses.py\n* Restore use of AI_start_delay in extract_measurements using model-dependent value.", "type": "commit"}, {"rendered": {"message": {"raw": "Hacking on analog input complete - now implemented with a callback, should\nbe faster to transition to static mode. Also have it acuqiring in static mode,\nbut not doing anything with the data as of yet. These changes untested for now.", "markup": "markdown", "html": "<p>Hacking on analog input complete - now implemented with a callback, should<br />\nbe faster to transition to static mode. Also have it acuqiring in static mode,<br />\nbut not doing anything with the data as of yet. These changes untested for now.</p>", "type": "rendered"}}, "hash": "1c58d302ab8f426a52cf4adfffeb440afb67acae", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/1c58d302ab8f426a52cf4adfffeb440afb67acae.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/1c58d302ab8f426a52cf4adfffeb440afb67acae/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/1c58d302ab8f426a52cf4adfffeb440afb67acae"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/1c58d302ab8f426a52cf4adfffeb440afb67acae"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/1c58d302ab8f426a52cf4adfffeb440afb67acae"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/1c58d302ab8f426a52cf4adfffeb440afb67acae/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/1c58d302ab8f426a52cf4adfffeb440afb67acae/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Hacking on analog input complete - now implemented with a callback, should\nbe faster to transition to static mode. Also have it acuqiring in static mode,\nbut not doing anything with the data as of yet. These changes untested for now.", "markup": "markdown", "html": "<p>Hacking on analog input complete - now implemented with a callback, should<br />\nbe faster to transition to static mode. Also have it acuqiring in static mode,<br />\nbut not doing anything with the data as of yet. These changes untested for now.</p>", "type": "rendered"}, "parents": [{"hash": "197aabd26300a66607703196bc1cf546b5083735", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/197aabd26300a66607703196bc1cf546b5083735.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/197aabd26300a66607703196bc1cf546b5083735"}}}], "date": "2018-10-06T06:01:27+00:00", "message": "Hacking on analog input complete - now implemented with a callback, should\nbe faster to transition to static mode. Also have it acuqiring in static mode,\nbut not doing anything with the data as of yet. These changes untested for now.", "type": "commit"}, {"rendered": {"message": {"raw": "Hacking on analog input to simplify and incorporate manual mode analog input.", "markup": "markdown", "html": "<p>Hacking on analog input to simplify and incorporate manual mode analog input.</p>", "type": "rendered"}}, "hash": "197aabd26300a66607703196bc1cf546b5083735", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/197aabd26300a66607703196bc1cf546b5083735.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/197aabd26300a66607703196bc1cf546b5083735/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/197aabd26300a66607703196bc1cf546b5083735"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/197aabd26300a66607703196bc1cf546b5083735"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/197aabd26300a66607703196bc1cf546b5083735"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/197aabd26300a66607703196bc1cf546b5083735/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/197aabd26300a66607703196bc1cf546b5083735/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Hacking on analog input to simplify and incorporate manual mode analog input.", "markup": "markdown", "html": "<p>Hacking on analog input to simplify and incorporate manual mode analog input.</p>", "type": "rendered"}, "parents": [{"hash": "04d05471ad062d9047228618fe786485a00dbbcb", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/04d05471ad062d9047228618fe786485a00dbbcb.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/04d05471ad062d9047228618fe786485a00dbbcb"}}}], "date": "2018-10-05T21:29:41+00:00", "message": "Hacking on analog input to simplify and incorporate manual mode analog input.", "type": "commit"}, {"rendered": {"message": {"raw": "Analog acquisition working.", "markup": "markdown", "html": "<p>Analog acquisition working.</p>", "type": "rendered"}}, "hash": "04d05471ad062d9047228618fe786485a00dbbcb", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/04d05471ad062d9047228618fe786485a00dbbcb.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/04d05471ad062d9047228618fe786485a00dbbcb/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/04d05471ad062d9047228618fe786485a00dbbcb"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/04d05471ad062d9047228618fe786485a00dbbcb"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/04d05471ad062d9047228618fe786485a00dbbcb"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/04d05471ad062d9047228618fe786485a00dbbcb/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/04d05471ad062d9047228618fe786485a00dbbcb/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Analog acquisition working.", "markup": "markdown", "html": "<p>Analog acquisition working.</p>", "type": "rendered"}, "parents": [{"hash": "a4d604e2cf9b9e5a1a14a1fef7df15694e50f293", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/a4d604e2cf9b9e5a1a14a1fef7df15694e50f293.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/a4d604e2cf9b9e5a1a14a1fef7df15694e50f293"}}}], "date": "2018-10-05T20:08:32+00:00", "message": "Analog acquisition working.", "type": "commit"}, {"rendered": {"message": {"raw": "Added acquisition worker, untested.", "markup": "markdown", "html": "<p>Added acquisition worker, untested.</p>", "type": "rendered"}}, "hash": "a4d604e2cf9b9e5a1a14a1fef7df15694e50f293", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/a4d604e2cf9b9e5a1a14a1fef7df15694e50f293.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/a4d604e2cf9b9e5a1a14a1fef7df15694e50f293/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/a4d604e2cf9b9e5a1a14a1fef7df15694e50f293"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/a4d604e2cf9b9e5a1a14a1fef7df15694e50f293"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/a4d604e2cf9b9e5a1a14a1fef7df15694e50f293"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/a4d604e2cf9b9e5a1a14a1fef7df15694e50f293/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/a4d604e2cf9b9e5a1a14a1fef7df15694e50f293/statuses_page=1.json"}}, "author": {"raw": "Chris Billington", "type": "author"}, "summary": {"raw": "Added acquisition worker, untested.", "markup": "markdown", "html": "<p>Added acquisition worker, untested.</p>", "type": "rendered"}, "parents": [{"hash": "0a5853c0f140649cbbf625043c00e7661050ab53", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/0a5853c0f140649cbbf625043c00e7661050ab53.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/0a5853c0f140649cbbf625043c00e7661050ab53"}}}], "date": "2018-10-05T17:06:18+00:00", "message": "Added acquisition worker, untested.", "type": "commit"}, {"rendered": {"message": {"raw": "Rename worker to be more specific", "markup": "markdown", "html": "<p>Rename worker to be more specific</p>", "type": "rendered"}}, "hash": "0a5853c0f140649cbbf625043c00e7661050ab53", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/0a5853c0f140649cbbf625043c00e7661050ab53.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/0a5853c0f140649cbbf625043c00e7661050ab53/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/0a5853c0f140649cbbf625043c00e7661050ab53"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/0a5853c0f140649cbbf625043c00e7661050ab53"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/0a5853c0f140649cbbf625043c00e7661050ab53"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/0a5853c0f140649cbbf625043c00e7661050ab53/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/0a5853c0f140649cbbf625043c00e7661050ab53/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Rename worker to be more specific", "markup": "markdown", "html": "<p>Rename worker to be more specific</p>", "type": "rendered"}, "parents": [{"hash": "8b9a9ffb766cacec7a44ee7d4f318529c5573b6c", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/8b9a9ffb766cacec7a44ee7d4f318529c5573b6c.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/8b9a9ffb766cacec7a44ee7d4f318529c5573b6c"}}}], "date": "2018-10-05T15:42:02+00:00", "message": "Rename worker to be more specific", "type": "commit"}, {"rendered": {"message": {"raw": "Assumption about PFI numbering was incorrect.\nThere is no systematic way to work out how the PFIs correspond to\nports and lines. Give up on trying to do this.", "markup": "markdown", "html": "<p>Assumption about PFI numbering was incorrect.<br />\nThere is no systematic way to work out how the PFIs correspond to<br />\nports and lines. Give up on trying to do this.</p>", "type": "rendered"}}, "hash": "8b9a9ffb766cacec7a44ee7d4f318529c5573b6c", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/8b9a9ffb766cacec7a44ee7d4f318529c5573b6c.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/8b9a9ffb766cacec7a44ee7d4f318529c5573b6c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/8b9a9ffb766cacec7a44ee7d4f318529c5573b6c"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/8b9a9ffb766cacec7a44ee7d4f318529c5573b6c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/8b9a9ffb766cacec7a44ee7d4f318529c5573b6c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/8b9a9ffb766cacec7a44ee7d4f318529c5573b6c/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/8b9a9ffb766cacec7a44ee7d4f318529c5573b6c/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Assumption about PFI numbering was incorrect.\nThere is no systematic way to work out how the PFIs correspond to\nports and lines. Give up on trying to do this.", "markup": "markdown", "html": "<p>Assumption about PFI numbering was incorrect.<br />\nThere is no systematic way to work out how the PFIs correspond to<br />\nports and lines. Give up on trying to do this.</p>", "type": "rendered"}, "parents": [{"hash": "944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee"}}}], "date": "2018-10-05T15:32:57+00:00", "message": "Assumption about PFI numbering was incorrect.\nThere is no systematic way to work out how the PFIs correspond to\nports and lines. Give up on trying to do this.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixes for compilation with static outputs.\nFix in BLACs worker in manual mode for ports with non-multiple-of-8 number of lines.\nFix in BLACS worker for writing to static digital out task.", "markup": "markdown", "html": "<p>Fixes for compilation with static outputs.<br />\nFix in BLACs worker in manual mode for ports with non-multiple-of-8 number of lines.<br />\nFix in BLACS worker for writing to static digital out task.</p>", "type": "rendered"}}, "hash": "944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixes for compilation with static outputs.\nFix in BLACs worker in manual mode for ports with non-multiple-of-8 number of lines.\nFix in BLACS worker for writing to static digital out task.", "markup": "markdown", "html": "<p>Fixes for compilation with static outputs.<br />\nFix in BLACs worker in manual mode for ports with non-multiple-of-8 number of lines.<br />\nFix in BLACS worker for writing to static digital out task.</p>", "type": "rendered"}, "parents": [{"hash": "807f8cbbe4ca0e11db0c657c1e3d419584e67711", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/807f8cbbe4ca0e11db0c657c1e3d419584e67711.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/807f8cbbe4ca0e11db0c657c1e3d419584e67711"}}}], "date": "2018-10-04T21:08:12+00:00", "message": "Fixes for compilation with static outputs.\nFix in BLACs worker in manual mode for ports with non-multiple-of-8 number of lines.\nFix in BLACS worker for writing to static digital out task.", "type": "commit"}, {"rendered": {"message": {"raw": "Fig bugs in AO buffered output, and include WaitUntilTaskDone, which prevents\na race condition when the driver is not aware yet that the device has\nproduced all its samples even though it has. Log the sample position as INFO\nunconditionally.", "markup": "markdown", "html": "<p>Fig bugs in AO buffered output, and include WaitUntilTaskDone, which prevents<br />\na race condition when the driver is not aware yet that the device has<br />\nproduced all its samples even though it has. Log the sample position as INFO<br />\nunconditionally.</p>", "type": "rendered"}}, "hash": "807f8cbbe4ca0e11db0c657c1e3d419584e67711", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/807f8cbbe4ca0e11db0c657c1e3d419584e67711.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/807f8cbbe4ca0e11db0c657c1e3d419584e67711/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/807f8cbbe4ca0e11db0c657c1e3d419584e67711"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/807f8cbbe4ca0e11db0c657c1e3d419584e67711"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/807f8cbbe4ca0e11db0c657c1e3d419584e67711"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/807f8cbbe4ca0e11db0c657c1e3d419584e67711/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/807f8cbbe4ca0e11db0c657c1e3d419584e67711/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fig bugs in AO buffered output, and include WaitUntilTaskDone, which prevents\na race condition when the driver is not aware yet that the device has\nproduced all its samples even though it has. Log the sample position as INFO\nunconditionally.", "markup": "markdown", "html": "<p>Fig bugs in AO buffered output, and include WaitUntilTaskDone, which prevents<br />\na race condition when the driver is not aware yet that the device has<br />\nproduced all its samples even though it has. Log the sample position as INFO<br />\nunconditionally.</p>", "type": "rendered"}, "parents": [{"hash": "bb506553f550130d272ebd5cfbab5e8c2bf5d24d", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/bb506553f550130d272ebd5cfbab5e8c2bf5d24d.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/bb506553f550130d272ebd5cfbab5e8c2bf5d24d"}}}], "date": "2018-10-04T19:32:41+00:00", "message": "Fig bugs in AO buffered output, and include WaitUntilTaskDone, which prevents\na race condition when the driver is not aware yet that the device has\nproduced all its samples even though it has. Log the sample position as INFO\nunconditionally.", "type": "commit"}, {"rendered": {"message": {"raw": "Testing and fixing bugs to the point where a shot can run.\n\nRename workers.py -> blacs_workers.py", "markup": "markdown", "html": "<p>Testing and fixing bugs to the point where a shot can run.</p>\n<p>Rename workers.py -&gt; blacs_workers.py</p>", "type": "rendered"}}, "hash": "bb506553f550130d272ebd5cfbab5e8c2bf5d24d", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/bb506553f550130d272ebd5cfbab5e8c2bf5d24d.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/bb506553f550130d272ebd5cfbab5e8c2bf5d24d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/bb506553f550130d272ebd5cfbab5e8c2bf5d24d"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/bb506553f550130d272ebd5cfbab5e8c2bf5d24d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/bb506553f550130d272ebd5cfbab5e8c2bf5d24d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/bb506553f550130d272ebd5cfbab5e8c2bf5d24d/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/bb506553f550130d272ebd5cfbab5e8c2bf5d24d/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Testing and fixing bugs to the point where a shot can run.\n\nRename workers.py -> blacs_workers.py", "markup": "markdown", "html": "<p>Testing and fixing bugs to the point where a shot can run.</p>\n<p>Rename workers.py -&gt; blacs_workers.py</p>", "type": "rendered"}, "parents": [{"hash": "9009d8bab4efadd207edf0d30bc02fac92e885e9", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/9009d8bab4efadd207edf0d30bc02fac92e885e9.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/9009d8bab4efadd207edf0d30bc02fac92e885e9"}}}], "date": "2018-10-04T18:20:12+00:00", "message": "Testing and fixing bugs to the point where a shot can run.\n\nRename workers.py -> blacs_workers.py", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bug in getting AO range, fixed platform-dependent line endings in written\nfiles, fixed bug caused by black using multiprocessing to do its work -\nneeded to guard with if __name__ == '__main__' to prevent infinite recursion\non Windows.", "markup": "markdown", "html": "<p>Fixed bug in getting AO range, fixed platform-dependent line endings in written<br />\nfiles, fixed bug caused by black using multiprocessing to do its work -<br />\nneeded to guard with if <strong>name</strong> == '<strong>main</strong>' to prevent infinite recursion<br />\non Windows.</p>", "type": "rendered"}}, "hash": "9009d8bab4efadd207edf0d30bc02fac92e885e9", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/9009d8bab4efadd207edf0d30bc02fac92e885e9.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/9009d8bab4efadd207edf0d30bc02fac92e885e9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/9009d8bab4efadd207edf0d30bc02fac92e885e9"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/9009d8bab4efadd207edf0d30bc02fac92e885e9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/9009d8bab4efadd207edf0d30bc02fac92e885e9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/9009d8bab4efadd207edf0d30bc02fac92e885e9/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/9009d8bab4efadd207edf0d30bc02fac92e885e9/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed bug in getting AO range, fixed platform-dependent line endings in written\nfiles, fixed bug caused by black using multiprocessing to do its work -\nneeded to guard with if __name__ == '__main__' to prevent infinite recursion\non Windows.", "markup": "markdown", "html": "<p>Fixed bug in getting AO range, fixed platform-dependent line endings in written<br />\nfiles, fixed bug caused by black using multiprocessing to do its work -<br />\nneeded to guard with if <strong>name</strong> == '<strong>main</strong>' to prevent infinite recursion<br />\non Windows.</p>", "type": "rendered"}, "parents": [{"hash": "abcbb0c946f0984ed2dd6b63ab75271985615f18", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/abcbb0c946f0984ed2dd6b63ab75271985615f18.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/abcbb0c946f0984ed2dd6b63ab75271985615f18"}}}], "date": "2018-10-03T20:34:00+00:00", "message": "Fixed bug in getting AO range, fixed platform-dependent line endings in written\nfiles, fixed bug caused by black using multiprocessing to do its work -\nneeded to guard with if __name__ == '__main__' to prevent infinite recursion\non Windows.", "type": "commit"}, {"rendered": {"message": {"raw": "Testing and fixing bugs. BLACS can start. Moved utility functions into separate\nsubmodule for use by other submodules. Only save the largest AO_range rather\nthan all possible AO_ranges.", "markup": "markdown", "html": "<p>Testing and fixing bugs. BLACS can start. Moved utility functions into separate<br />\nsubmodule for use by other submodules. Only save the largest AO_range rather<br />\nthan all possible AO_ranges.</p>", "type": "rendered"}}, "hash": "abcbb0c946f0984ed2dd6b63ab75271985615f18", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/abcbb0c946f0984ed2dd6b63ab75271985615f18.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/abcbb0c946f0984ed2dd6b63ab75271985615f18/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/abcbb0c946f0984ed2dd6b63ab75271985615f18"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/abcbb0c946f0984ed2dd6b63ab75271985615f18"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/abcbb0c946f0984ed2dd6b63ab75271985615f18"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/abcbb0c946f0984ed2dd6b63ab75271985615f18/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/abcbb0c946f0984ed2dd6b63ab75271985615f18/statuses_page=1.json"}}, "author": {"raw": "Chris Billington", "type": "author"}, "summary": {"raw": "Testing and fixing bugs. BLACS can start. Moved utility functions into separate\nsubmodule for use by other submodules. Only save the largest AO_range rather\nthan all possible AO_ranges.", "markup": "markdown", "html": "<p>Testing and fixing bugs. BLACS can start. Moved utility functions into separate<br />\nsubmodule for use by other submodules. Only save the largest AO_range rather<br />\nthan all possible AO_ranges.</p>", "type": "rendered"}, "parents": [{"hash": "77187e7645f4e599d04982682e3ac6b58376a739", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/77187e7645f4e599d04982682e3ac6b58376a739.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/77187e7645f4e599d04982682e3ac6b58376a739"}}}], "date": "2018-10-03T18:07:47+00:00", "message": "Testing and fixing bugs. BLACS can start. Moved utility functions into separate\nsubmodule for use by other submodules. Only save the largest AO_range rather\nthan all possible AO_ranges.", "type": "commit"}, {"rendered": {"message": {"raw": "Add subfolder for (work-in-progress) NI_DAQmx devices, including generic base\nclass and auto-generated subclasses based on introspected device capabilities.", "markup": "markdown", "html": "<p>Add subfolder for (work-in-progress) NI_DAQmx devices, including generic base<br />\nclass and auto-generated subclasses based on introspected device capabilities.</p>", "type": "rendered"}}, "hash": "77187e7645f4e599d04982682e3ac6b58376a739", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/77187e7645f4e599d04982682e3ac6b58376a739.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/77187e7645f4e599d04982682e3ac6b58376a739/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/77187e7645f4e599d04982682e3ac6b58376a739"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/77187e7645f4e599d04982682e3ac6b58376a739"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/77187e7645f4e599d04982682e3ac6b58376a739"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/77187e7645f4e599d04982682e3ac6b58376a739/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/77187e7645f4e599d04982682e3ac6b58376a739/statuses_page=1.json"}}, "author": {"raw": "Chris Billington", "type": "author"}, "summary": {"raw": "Add subfolder for (work-in-progress) NI_DAQmx devices, including generic base\nclass and auto-generated subclasses based on introspected device capabilities.", "markup": "markdown", "html": "<p>Add subfolder for (work-in-progress) NI_DAQmx devices, including generic base<br />\nclass and auto-generated subclasses based on introspected device capabilities.</p>", "type": "rendered"}, "parents": [{"hash": "2f2fd7b5772c535b43ed06c47de6ba40e1a633bd", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/2f2fd7b5772c535b43ed06c47de6ba40e1a633bd.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/2f2fd7b5772c535b43ed06c47de6ba40e1a633bd"}}}], "date": "2018-10-03T14:58:26+00:00", "message": "Add subfolder for (work-in-progress) NI_DAQmx devices, including generic base\nclass and auto-generated subclasses based on introspected device capabilities.", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in cbillington/labscript_devices/IMAQdxCamera (pull request #68)\n\nMore flexible mock IMAQdx Camera, and more subclassing-friendly classes", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/labscript_devices</a>/IMAQdxCamera (pull request #68)</p>\n<p>More flexible mock IMAQdx Camera, and more subclassing-friendly classes</p>", "type": "rendered"}}, "hash": "426f64fa05b8f807368bf220b0962c63dafc009f", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/426f64fa05b8f807368bf220b0962c63dafc009f.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/426f64fa05b8f807368bf220b0962c63dafc009f/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/426f64fa05b8f807368bf220b0962c63dafc009f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/426f64fa05b8f807368bf220b0962c63dafc009f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/426f64fa05b8f807368bf220b0962c63dafc009f/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/426f64fa05b8f807368bf220b0962c63dafc009f/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in cbillington/labscript_devices/IMAQdxCamera (pull request #68)\n\nMore flexible mock IMAQdx Camera, and more subclassing-friendly classes", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/labscript_devices</a>/IMAQdxCamera (pull request #68)</p>\n<p>More flexible mock IMAQdx Camera, and more subclassing-friendly classes</p>", "type": "rendered"}, "parents": [{"hash": "d61ada6ffa700f0aee3e26d16ff5449dde112846", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/d61ada6ffa700f0aee3e26d16ff5449dde112846.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/d61ada6ffa700f0aee3e26d16ff5449dde112846"}}}, {"hash": "844185f579d588867f80b50b5b20a4b2dba54a08", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/844185f579d588867f80b50b5b20a4b2dba54a08.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/844185f579d588867f80b50b5b20a4b2dba54a08"}}}], "date": "2019-06-01T17:16:35+00:00", "message": "Merged in cbillington/labscript_devices/IMAQdxCamera (pull request #68)\n\nMore flexible mock IMAQdx Camera, and more subclassing-friendly classes", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch IMAQdxCamera", "markup": "markdown", "html": "<p>Close branch IMAQdxCamera</p>", "type": "rendered"}}, "hash": "844185f579d588867f80b50b5b20a4b2dba54a08", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/844185f579d588867f80b50b5b20a4b2dba54a08.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/844185f579d588867f80b50b5b20a4b2dba54a08/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/844185f579d588867f80b50b5b20a4b2dba54a08"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/844185f579d588867f80b50b5b20a4b2dba54a08"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/844185f579d588867f80b50b5b20a4b2dba54a08"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/844185f579d588867f80b50b5b20a4b2dba54a08/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/844185f579d588867f80b50b5b20a4b2dba54a08/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch IMAQdxCamera", "markup": "markdown", "html": "<p>Close branch IMAQdxCamera</p>", "type": "rendered"}, "parents": [{"hash": "e1c8075e62b2d40b3a477075b8e367623a4d10b0", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/e1c8075e62b2d40b3a477075b8e367623a4d10b0.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/e1c8075e62b2d40b3a477075b8e367623a4d10b0"}}}], "date": "2019-06-01T17:16:35+00:00", "message": "Close branch IMAQdxCamera", "type": "commit"}, {"rendered": {"message": {"raw": "Allow customisation of saved attribute visibility level", "markup": "markdown", "html": "<p>Allow customisation of saved attribute visibility level</p>", "type": "rendered"}}, "hash": "e1c8075e62b2d40b3a477075b8e367623a4d10b0", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/e1c8075e62b2d40b3a477075b8e367623a4d10b0.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/e1c8075e62b2d40b3a477075b8e367623a4d10b0/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/e1c8075e62b2d40b3a477075b8e367623a4d10b0"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/e1c8075e62b2d40b3a477075b8e367623a4d10b0"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/e1c8075e62b2d40b3a477075b8e367623a4d10b0"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/e1c8075e62b2d40b3a477075b8e367623a4d10b0/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/e1c8075e62b2d40b3a477075b8e367623a4d10b0/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Allow customisation of saved attribute visibility level", "markup": "markdown", "html": "<p>Allow customisation of saved attribute visibility level</p>", "type": "rendered"}, "parents": [{"hash": "8b881f63fd133d8e8358ce40141ef404f59b1d6f", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/8b881f63fd133d8e8358ce40141ef404f59b1d6f.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/8b881f63fd133d8e8358ce40141ef404f59b1d6f"}}}], "date": "2019-06-01T17:05:51+00:00", "message": "Allow customisation of saved attribute visibility level", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed typo in new stop_acquisition_timeout attribute in labscript_devices.py.", "markup": "markdown", "html": "<p>Fixed typo in new stop_acquisition_timeout attribute in labscript_devices.py.</p>", "type": "rendered"}}, "hash": "8b881f63fd133d8e8358ce40141ef404f59b1d6f", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/8b881f63fd133d8e8358ce40141ef404f59b1d6f.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/8b881f63fd133d8e8358ce40141ef404f59b1d6f/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/8b881f63fd133d8e8358ce40141ef404f59b1d6f"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/8b881f63fd133d8e8358ce40141ef404f59b1d6f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/8b881f63fd133d8e8358ce40141ef404f59b1d6f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/8b881f63fd133d8e8358ce40141ef404f59b1d6f/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/8b881f63fd133d8e8358ce40141ef404f59b1d6f/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "Fixed typo in new stop_acquisition_timeout attribute in labscript_devices.py.", "markup": "markdown", "html": "<p>Fixed typo in new stop_acquisition_timeout attribute in labscript_devices.py.</p>", "type": "rendered"}, "parents": [{"hash": "70129aa7977543f57c21a8be47471f7680d09b18", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/70129aa7977543f57c21a8be47471f7680d09b18.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/70129aa7977543f57c21a8be47471f7680d09b18"}}}], "date": "2019-05-20T12:12:53+00:00", "message": "Fixed typo in new stop_acquisition_timeout attribute in labscript_devices.py.", "type": "commit"}, {"rendered": {"message": {"raw": "Add stop_acqusition_timeout and exception_on_failed_shot device properties.\nThis allows waiting more time for acqusition to end in the case of slow download,\nand continuing without error if not all images were acquired in a shot.\n\n(it seems that in many common configurations, shots fail, for inexplicable\nreasons that might be to do with network traffic hiccups or who know what.\nUsers tend to want other shots to continue).\n\nWell formatted docstring for device class.\n\nThese changes require testing.", "markup": "markdown", "html": "<p>Add stop_acqusition_timeout and exception_on_failed_shot device properties.<br />\nThis allows waiting more time for acqusition to end in the case of slow download,<br />\nand continuing without error if not all images were acquired in a shot.</p>\n<p>(it seems that in many common configurations, shots fail, for inexplicable<br />\nreasons that might be to do with network traffic hiccups or who know what.<br />\nUsers tend to want other shots to continue).</p>\n<p>Well formatted docstring for device class.</p>\n<p>These changes require testing.</p>", "type": "rendered"}}, "hash": "70129aa7977543f57c21a8be47471f7680d09b18", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/70129aa7977543f57c21a8be47471f7680d09b18.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/70129aa7977543f57c21a8be47471f7680d09b18/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/70129aa7977543f57c21a8be47471f7680d09b18"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/70129aa7977543f57c21a8be47471f7680d09b18"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/70129aa7977543f57c21a8be47471f7680d09b18"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/70129aa7977543f57c21a8be47471f7680d09b18/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/70129aa7977543f57c21a8be47471f7680d09b18/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Add stop_acqusition_timeout and exception_on_failed_shot device properties.\nThis allows waiting more time for acqusition to end in the case of slow download,\nand continuing without error if not all images were acquired in a shot.\n\n(it seems that in many common configurations, shots fail, for inexplicable\nreasons that might be to do with network traffic hiccups or who know what.\nUsers tend to want other shots to continue).\n\nWell formatted docstring for device class.\n\nThese changes require testing.", "markup": "markdown", "html": "<p>Add stop_acqusition_timeout and exception_on_failed_shot device properties.<br />\nThis allows waiting more time for acqusition to end in the case of slow download,<br />\nand continuing without error if not all images were acquired in a shot.</p>\n<p>(it seems that in many common configurations, shots fail, for inexplicable<br />\nreasons that might be to do with network traffic hiccups or who know what.<br />\nUsers tend to want other shots to continue).</p>\n<p>Well formatted docstring for device class.</p>\n<p>These changes require testing.</p>", "type": "rendered"}, "parents": [{"hash": "10aa9c80a1ed0d9120a8dd0cd5a96f5ba48fb449", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/10aa9c80a1ed0d9120a8dd0cd5a96f5ba48fb449.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/10aa9c80a1ed0d9120a8dd0cd5a96f5ba48fb449"}}}], "date": "2019-05-17T19:50:26+00:00", "message": "Add stop_acqusition_timeout and exception_on_failed_shot device properties.\nThis allows waiting more time for acqusition to end in the case of slow download,\nand continuing without error if not all images were acquired in a shot.\n\n(it seems that in many common configurations, shots fail, for inexplicable\nreasons that might be to do with network traffic hiccups or who know what.\nUsers tend to want other shots to continue).\n\nWell formatted docstring for device class.\n\nThese changes require testing.", "type": "commit"}, {"rendered": {"message": {"raw": "make IMAQdxCamera friendier to subclassing. Fixes issue #34\n\nRenamed `imaqdx_attributes` to just `camera_attributes`. No backward\ncompatibility provided for this, since this class is fairly new.\n\nAllow specifying worker class and camera interface class as class attributes,\nin the case that the subclass simply changes these and nothing else about\nworker class creation, or about the instantiation of the interface class.\n\nRemove IMAQdx specific code from worker class, into interface class.", "markup": "markdown", "html": "<p>make IMAQdxCamera friendier to subclassing. Fixes issue #34</p>\n<p>Renamed <code>imaqdx_attributes</code> to just <code>camera_attributes</code>. No backward<br />\ncompatibility provided for this, since this class is fairly new.</p>\n<p>Allow specifying worker class and camera interface class as class attributes,<br />\nin the case that the subclass simply changes these and nothing else about<br />\nworker class creation, or about the instantiation of the interface class.</p>\n<p>Remove IMAQdx specific code from worker class, into interface class.</p>", "type": "rendered"}}, "hash": "10aa9c80a1ed0d9120a8dd0cd5a96f5ba48fb449", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/10aa9c80a1ed0d9120a8dd0cd5a96f5ba48fb449.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/10aa9c80a1ed0d9120a8dd0cd5a96f5ba48fb449/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/10aa9c80a1ed0d9120a8dd0cd5a96f5ba48fb449"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/10aa9c80a1ed0d9120a8dd0cd5a96f5ba48fb449"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/10aa9c80a1ed0d9120a8dd0cd5a96f5ba48fb449"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/10aa9c80a1ed0d9120a8dd0cd5a96f5ba48fb449/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/10aa9c80a1ed0d9120a8dd0cd5a96f5ba48fb449/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "make IMAQdxCamera friendier to subclassing. Fixes issue #34\n\nRenamed `imaqdx_attributes` to just `camera_attributes`. No backward\ncompatibility provided for this, since this class is fairly new.\n\nAllow specifying worker class and camera interface class as class attributes,\nin the case that the subclass simply changes these and nothing else about\nworker class creation, or about the instantiation of the interface class.\n\nRemove IMAQdx specific code from worker class, into interface class.", "markup": "markdown", "html": "<p>make IMAQdxCamera friendier to subclassing. Fixes issue #34</p>\n<p>Renamed <code>imaqdx_attributes</code> to just <code>camera_attributes</code>. No backward<br />\ncompatibility provided for this, since this class is fairly new.</p>\n<p>Allow specifying worker class and camera interface class as class attributes,<br />\nin the case that the subclass simply changes these and nothing else about<br />\nworker class creation, or about the instantiation of the interface class.</p>\n<p>Remove IMAQdx specific code from worker class, into interface class.</p>", "type": "rendered"}, "parents": [{"hash": "71348dec7cb9b1457c93f85b3c297a347a744cf2", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/71348dec7cb9b1457c93f85b3c297a347a744cf2.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/71348dec7cb9b1457c93f85b3c297a347a744cf2"}}}], "date": "2019-05-17T01:23:57+00:00", "message": "make IMAQdxCamera friendier to subclassing. Fixes issue #34\n\nRenamed `imaqdx_attributes` to just `camera_attributes`. No backward\ncompatibility provided for this, since this class is fairly new.\n\nAllow specifying worker class and camera interface class as class attributes,\nin the case that the subclass simply changes these and nothing else about\nworker class creation, or about the instantiation of the interface class.\n\nRemove IMAQdx specific code from worker class, into interface class.", "type": "commit"}, {"rendered": {"message": {"raw": "Merge", "markup": "markdown", "html": "<p>Merge</p>", "type": "rendered"}}, "hash": "71348dec7cb9b1457c93f85b3c297a347a744cf2", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/71348dec7cb9b1457c93f85b3c297a347a744cf2.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/71348dec7cb9b1457c93f85b3c297a347a744cf2/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/71348dec7cb9b1457c93f85b3c297a347a744cf2"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/71348dec7cb9b1457c93f85b3c297a347a744cf2"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/71348dec7cb9b1457c93f85b3c297a347a744cf2/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/71348dec7cb9b1457c93f85b3c297a347a744cf2/statuses_page=1.json"}}, "author": {"raw": "pacosalces", "type": "author"}, "summary": {"raw": "Merge", "markup": "markdown", "html": "<p>Merge</p>", "type": "rendered"}, "parents": [{"hash": "5c4919d3a7d4865d81fb7077db82b60d95ee5c28", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/5c4919d3a7d4865d81fb7077db82b60d95ee5c28.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/5c4919d3a7d4865d81fb7077db82b60d95ee5c28"}}}, {"hash": "9f6018f6ff8c3a436f06e6772985bb8c6d9539dc", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/9f6018f6ff8c3a436f06e6772985bb8c6d9539dc.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/9f6018f6ff8c3a436f06e6772985bb8c6d9539dc"}}}], "date": "2019-05-15T19:18:09+00:00", "message": "Merge", "type": "commit"}, {"rendered": {"message": {"raw": "Fix issue with IMAQdxCamera - if using a mock device and pynivision installed,\nbut nivision itself not installed, one got an error on worker startup.\nDelay importing nivision to be dependent on mock=False to fix this and raise\nthe actual import error as it comes.", "markup": "markdown", "html": "<p>Fix issue with IMAQdxCamera - if using a mock device and pynivision installed,<br />\nbut nivision itself not installed, one got an error on worker startup.<br />\nDelay importing nivision to be dependent on mock=False to fix this and raise<br />\nthe actual import error as it comes.</p>", "type": "rendered"}}, "hash": "9f6018f6ff8c3a436f06e6772985bb8c6d9539dc", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/9f6018f6ff8c3a436f06e6772985bb8c6d9539dc.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/9f6018f6ff8c3a436f06e6772985bb8c6d9539dc/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/9f6018f6ff8c3a436f06e6772985bb8c6d9539dc"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/9f6018f6ff8c3a436f06e6772985bb8c6d9539dc"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/9f6018f6ff8c3a436f06e6772985bb8c6d9539dc"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/9f6018f6ff8c3a436f06e6772985bb8c6d9539dc/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/9f6018f6ff8c3a436f06e6772985bb8c6d9539dc/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Fix issue with IMAQdxCamera - if using a mock device and pynivision installed,\nbut nivision itself not installed, one got an error on worker startup.\nDelay importing nivision to be dependent on mock=False to fix this and raise\nthe actual import error as it comes.", "markup": "markdown", "html": "<p>Fix issue with IMAQdxCamera - if using a mock device and pynivision installed,<br />\nbut nivision itself not installed, one got an error on worker startup.<br />\nDelay importing nivision to be dependent on mock=False to fix this and raise<br />\nthe actual import error as it comes.</p>", "type": "rendered"}, "parents": [{"hash": "ab5dc8e458ac02df7745d297b0059c27353b3820", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/ab5dc8e458ac02df7745d297b0059c27353b3820.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/ab5dc8e458ac02df7745d297b0059c27353b3820"}}}], "date": "2019-05-10T19:33:59+00:00", "message": "Fix issue with IMAQdxCamera - if using a mock device and pynivision installed,\nbut nivision itself not installed, one got an error on worker startup.\nDelay importing nivision to be dependent on mock=False to fix this and raise\nthe actual import error as it comes.", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in cbillington/labscript_devices/pulse-width-fixes (pull request #67)\n\nPulse width fixes (issue #33)", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/labscript_devices</a>/pulse-width-fixes (pull request #67)</p>\n<p>Pulse width fixes (issue #33)</p>", "type": "rendered"}}, "hash": "d61ada6ffa700f0aee3e26d16ff5449dde112846", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/d61ada6ffa700f0aee3e26d16ff5449dde112846.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/d61ada6ffa700f0aee3e26d16ff5449dde112846/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/d61ada6ffa700f0aee3e26d16ff5449dde112846"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/d61ada6ffa700f0aee3e26d16ff5449dde112846"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/d61ada6ffa700f0aee3e26d16ff5449dde112846/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/d61ada6ffa700f0aee3e26d16ff5449dde112846/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in cbillington/labscript_devices/pulse-width-fixes (pull request #67)\n\nPulse width fixes (issue #33)", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/labscript_devices</a>/pulse-width-fixes (pull request #67)</p>\n<p>Pulse width fixes (issue #33)</p>", "type": "rendered"}, "parents": [{"hash": "21cf797f0b6cc7ff64cc997bd23173d96d1989be", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/21cf797f0b6cc7ff64cc997bd23173d96d1989be.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/21cf797f0b6cc7ff64cc997bd23173d96d1989be"}}}, {"hash": "f2caffffa2b2454d87d6af7f66f71b426977cc7a", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/f2caffffa2b2454d87d6af7f66f71b426977cc7a.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/f2caffffa2b2454d87d6af7f66f71b426977cc7a"}}}], "date": "2019-06-01T16:36:20+00:00", "message": "Merged in cbillington/labscript_devices/pulse-width-fixes (pull request #67)\n\nPulse width fixes (issue #33)", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch pulse-width-fixes", "markup": "markdown", "html": "<p>Close branch pulse-width-fixes</p>", "type": "rendered"}}, "hash": "f2caffffa2b2454d87d6af7f66f71b426977cc7a", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/f2caffffa2b2454d87d6af7f66f71b426977cc7a.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/f2caffffa2b2454d87d6af7f66f71b426977cc7a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/f2caffffa2b2454d87d6af7f66f71b426977cc7a"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/f2caffffa2b2454d87d6af7f66f71b426977cc7a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/f2caffffa2b2454d87d6af7f66f71b426977cc7a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/f2caffffa2b2454d87d6af7f66f71b426977cc7a/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/f2caffffa2b2454d87d6af7f66f71b426977cc7a/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch pulse-width-fixes", "markup": "markdown", "html": "<p>Close branch pulse-width-fixes</p>", "type": "rendered"}, "parents": [{"hash": "d316d3b2545232926e672324cc311771404f63e5", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/d316d3b2545232926e672324cc311771404f63e5.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/d316d3b2545232926e672324cc311771404f63e5"}}}], "date": "2019-06-01T16:36:20+00:00", "message": "Close branch pulse-width-fixes", "type": "commit"}, {"rendered": {"message": {"raw": "Added 'phase_resets' in instruction not present in default branch after the\nmerge with pb_phase_resets branch", "markup": "markdown", "html": "<p>Added 'phase_resets' in instruction not present in default branch after the<br />\nmerge with pb_phase_resets branch</p>", "type": "rendered"}}, "hash": "d316d3b2545232926e672324cc311771404f63e5", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/d316d3b2545232926e672324cc311771404f63e5.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/d316d3b2545232926e672324cc311771404f63e5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/d316d3b2545232926e672324cc311771404f63e5"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/d316d3b2545232926e672324cc311771404f63e5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/d316d3b2545232926e672324cc311771404f63e5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/d316d3b2545232926e672324cc311771404f63e5/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/d316d3b2545232926e672324cc311771404f63e5/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Added 'phase_resets' in instruction not present in default branch after the\nmerge with pb_phase_resets branch", "markup": "markdown", "html": "<p>Added 'phase_resets' in instruction not present in default branch after the<br />\nmerge with pb_phase_resets branch</p>", "type": "rendered"}, "parents": [{"hash": "bb29cf0ee1f6911887bcf8ff191ef31eeee69c51", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/bb29cf0ee1f6911887bcf8ff191ef31eeee69c51.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/bb29cf0ee1f6911887bcf8ff191ef31eeee69c51"}}}], "date": "2019-05-20T16:11:06+00:00", "message": "Added 'phase_resets' in instruction not present in default branch after the\nmerge with pb_phase_resets branch", "type": "commit"}, {"rendered": {"message": {"raw": "Merge with default", "markup": "markdown", "html": "<p>Merge with default</p>", "type": "rendered"}}, "hash": "bb29cf0ee1f6911887bcf8ff191ef31eeee69c51", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/bb29cf0ee1f6911887bcf8ff191ef31eeee69c51.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/bb29cf0ee1f6911887bcf8ff191ef31eeee69c51/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/bb29cf0ee1f6911887bcf8ff191ef31eeee69c51"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/bb29cf0ee1f6911887bcf8ff191ef31eeee69c51"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/bb29cf0ee1f6911887bcf8ff191ef31eeee69c51/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/bb29cf0ee1f6911887bcf8ff191ef31eeee69c51/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Merge with default", "markup": "markdown", "html": "<p>Merge with default</p>", "type": "rendered"}, "parents": [{"hash": "03aab267bf5bc1853284d1a331a981b28f678a74", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/03aab267bf5bc1853284d1a331a981b28f678a74.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/03aab267bf5bc1853284d1a331a981b28f678a74"}}}, {"hash": "21cf797f0b6cc7ff64cc997bd23173d96d1989be", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/21cf797f0b6cc7ff64cc997bd23173d96d1989be.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/21cf797f0b6cc7ff64cc997bd23173d96d1989be"}}}], "date": "2019-05-20T16:06:12+00:00", "message": "Merge with default", "type": "commit"}, {"rendered": {"message": {"raw": "Revert changes to set_passed_properties since we are not unifying the PulseBlaster\nclasses today.", "markup": "markdown", "html": "<p>Revert changes to set_passed_properties since we are not unifying the PulseBlaster<br />\nclasses today.</p>", "type": "rendered"}}, "hash": "03aab267bf5bc1853284d1a331a981b28f678a74", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/03aab267bf5bc1853284d1a331a981b28f678a74.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/03aab267bf5bc1853284d1a331a981b28f678a74/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/03aab267bf5bc1853284d1a331a981b28f678a74"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/03aab267bf5bc1853284d1a331a981b28f678a74"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/03aab267bf5bc1853284d1a331a981b28f678a74"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/03aab267bf5bc1853284d1a331a981b28f678a74/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/03aab267bf5bc1853284d1a331a981b28f678a74/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Revert changes to set_passed_properties since we are not unifying the PulseBlaster\nclasses today.", "markup": "markdown", "html": "<p>Revert changes to set_passed_properties since we are not unifying the PulseBlaster<br />\nclasses today.</p>", "type": "rendered"}, "parents": [{"hash": "aba86b3cfc18ae0fa7df1f456dfba6648ea1388d", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/aba86b3cfc18ae0fa7df1f456dfba6648ea1388d.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/aba86b3cfc18ae0fa7df1f456dfba6648ea1388d"}}}], "date": "2019-05-15T21:10:41+00:00", "message": "Revert changes to set_passed_properties since we are not unifying the PulseBlaster\nclasses today.", "type": "commit"}, {"rendered": {"message": {"raw": "Resolve issue #33.\n\nPulseblasters now have a long delay time computed from their core clock freq,\nwhich has been added as an instance attribute to every subclass.\n(this is messy, as it is duplicated in the BLACS worker classes too. It should be\npassed as a connection table property ideally, but this will have to wait for a\nmore general 'pulseblaster unification' change I think, along the lines of the\nNI DAQ unification).\n\nFor each clock tick, the high time is half the clock period if\n`pulse_width='symmetric'` (the default), the minimum possible if\n`pulse_width='minimum'`, or a fixed value if `pulse_width` is given as a number.\n\nThe high time is then clipped to self.long_delay if it is larger, in which case\nthe pulse_width argument is not honoured, but 57 second high times ought to be\nvisible on scopes and not too fast for any devices, so this is preferable to\nthe alternative of adding LONG_DELAY instructions to *both* the high and low\ntimes of the clock ticks.\n\nThe low time is then computed as whatever is left, and split into a LONG_DELAY\ninstruction plus the remainder as an END_LOOP instruction, as before.\n\nIf the PulseBlaster has no external clocks for this clock tick, it uses a\nLONG_DELAY plus the remainder as a CONTINUE instruction, as before.", "markup": "markdown", "html": "<p>Resolve issue #33.</p>\n<p>Pulseblasters now have a long delay time computed from their core clock freq,<br />\nwhich has been added as an instance attribute to every subclass.<br />\n(this is messy, as it is duplicated in the BLACS worker classes too. It should be<br />\npassed as a connection table property ideally, but this will have to wait for a<br />\nmore general 'pulseblaster unification' change I think, along the lines of the<br />\nNI DAQ unification).</p>\n<p>For each clock tick, the high time is half the clock period if<br />\n<code>pulse_width='symmetric'</code> (the default), the minimum possible if<br />\n<code>pulse_width='minimum'</code>, or a fixed value if <code>pulse_width</code> is given as a number.</p>\n<p>The high time is then clipped to self.long_delay if it is larger, in which case<br />\nthe pulse_width argument is not honoured, but 57 second high times ought to be<br />\nvisible on scopes and not too fast for any devices, so this is preferable to<br />\nthe alternative of adding LONG_DELAY instructions to <em>both</em> the high and low<br />\ntimes of the clock ticks.</p>\n<p>The low time is then computed as whatever is left, and split into a LONG_DELAY<br />\ninstruction plus the remainder as an END_LOOP instruction, as before.</p>\n<p>If the PulseBlaster has no external clocks for this clock tick, it uses a<br />\nLONG_DELAY plus the remainder as a CONTINUE instruction, as before.</p>", "type": "rendered"}}, "hash": "aba86b3cfc18ae0fa7df1f456dfba6648ea1388d", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/aba86b3cfc18ae0fa7df1f456dfba6648ea1388d.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/aba86b3cfc18ae0fa7df1f456dfba6648ea1388d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/aba86b3cfc18ae0fa7df1f456dfba6648ea1388d"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/aba86b3cfc18ae0fa7df1f456dfba6648ea1388d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/aba86b3cfc18ae0fa7df1f456dfba6648ea1388d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/aba86b3cfc18ae0fa7df1f456dfba6648ea1388d/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/aba86b3cfc18ae0fa7df1f456dfba6648ea1388d/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Resolve issue #33.\n\nPulseblasters now have a long delay time computed from their core clock freq,\nwhich has been added as an instance attribute to every subclass.\n(this is messy, as it is duplicated in the BLACS worker classes too. It should be\npassed as a connection table property ideally, but this will have to wait for a\nmore general 'pulseblaster unification' change I think, along the lines of the\nNI DAQ unification).\n\nFor each clock tick, the high time is half the clock period if\n`pulse_width='symmetric'` (the default), the minimum possible if\n`pulse_width='minimum'`, or a fixed value if `pulse_width` is given as a number.\n\nThe high time is then clipped to self.long_delay if it is larger, in which case\nthe pulse_width argument is not honoured, but 57 second high times ought to be\nvisible on scopes and not too fast for any devices, so this is preferable to\nthe alternative of adding LONG_DELAY instructions to *both* the high and low\ntimes of the clock ticks.\n\nThe low time is then computed as whatever is left, and split into a LONG_DELAY\ninstruction plus the remainder as an END_LOOP instruction, as before.\n\nIf the PulseBlaster has no external clocks for this clock tick, it uses a\nLONG_DELAY plus the remainder as a CONTINUE instruction, as before.", "markup": "markdown", "html": "<p>Resolve issue #33.</p>\n<p>Pulseblasters now have a long delay time computed from their core clock freq,<br />\nwhich has been added as an instance attribute to every subclass.<br />\n(this is messy, as it is duplicated in the BLACS worker classes too. It should be<br />\npassed as a connection table property ideally, but this will have to wait for a<br />\nmore general 'pulseblaster unification' change I think, along the lines of the<br />\nNI DAQ unification).</p>\n<p>For each clock tick, the high time is half the clock period if<br />\n<code>pulse_width='symmetric'</code> (the default), the minimum possible if<br />\n<code>pulse_width='minimum'</code>, or a fixed value if <code>pulse_width</code> is given as a number.</p>\n<p>The high time is then clipped to self.long_delay if it is larger, in which case<br />\nthe pulse_width argument is not honoured, but 57 second high times ought to be<br />\nvisible on scopes and not too fast for any devices, so this is preferable to<br />\nthe alternative of adding LONG_DELAY instructions to <em>both</em> the high and low<br />\ntimes of the clock ticks.</p>\n<p>The low time is then computed as whatever is left, and split into a LONG_DELAY<br />\ninstruction plus the remainder as an END_LOOP instruction, as before.</p>\n<p>If the PulseBlaster has no external clocks for this clock tick, it uses a<br />\nLONG_DELAY plus the remainder as a CONTINUE instruction, as before.</p>", "type": "rendered"}, "parents": [{"hash": "96b758466d85692e4a0ec40604dcfe89af3c8df3", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/96b758466d85692e4a0ec40604dcfe89af3c8df3.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/96b758466d85692e4a0ec40604dcfe89af3c8df3"}}}], "date": "2019-05-15T20:58:44+00:00", "message": "Resolve issue #33.\n\nPulseblasters now have a long delay time computed from their core clock freq,\nwhich has been added as an instance attribute to every subclass.\n(this is messy, as it is duplicated in the BLACS worker classes too. It should be\npassed as a connection table property ideally, but this will have to wait for a\nmore general 'pulseblaster unification' change I think, along the lines of the\nNI DAQ unification).\n\nFor each clock tick, the high time is half the clock period if\n`pulse_width='symmetric'` (the default), the minimum possible if\n`pulse_width='minimum'`, or a fixed value if `pulse_width` is given as a number.\n\nThe high time is then clipped to self.long_delay if it is larger, in which case\nthe pulse_width argument is not honoured, but 57 second high times ought to be\nvisible on scopes and not too fast for any devices, so this is preferable to\nthe alternative of adding LONG_DELAY instructions to *both* the high and low\ntimes of the clock ticks.\n\nThe low time is then computed as whatever is left, and split into a LONG_DELAY\ninstruction plus the remainder as an END_LOOP instruction, as before.\n\nIf the PulseBlaster has no external clocks for this clock tick, it uses a\nLONG_DELAY plus the remainder as a CONTINUE instruction, as before.", "type": "commit"}, {"rendered": {"message": {"raw": "Backed out changeset: 33d843a057e1", "markup": "markdown", "html": "<p>Backed out changeset: <a href=\"#!/cavitylab/labscript_devices/commits/33d843a057e1\" rel=\"nofollow\" class=\"ap-connect-link\">33d843a057e1</a></p>", "type": "rendered"}}, "hash": "96b758466d85692e4a0ec40604dcfe89af3c8df3", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/96b758466d85692e4a0ec40604dcfe89af3c8df3.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/96b758466d85692e4a0ec40604dcfe89af3c8df3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/96b758466d85692e4a0ec40604dcfe89af3c8df3"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/96b758466d85692e4a0ec40604dcfe89af3c8df3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/96b758466d85692e4a0ec40604dcfe89af3c8df3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/96b758466d85692e4a0ec40604dcfe89af3c8df3/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/96b758466d85692e4a0ec40604dcfe89af3c8df3/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Backed out changeset: 33d843a057e1", "markup": "markdown", "html": "<p>Backed out changeset: <a href=\"#!/cavitylab/labscript_devices/commits/33d843a057e1\" rel=\"nofollow\" class=\"ap-connect-link\">33d843a057e1</a></p>", "type": "rendered"}, "parents": [{"hash": "49bf56369af4624bb692b7efc65ebd269f8b862b", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/49bf56369af4624bb692b7efc65ebd269f8b862b.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/49bf56369af4624bb692b7efc65ebd269f8b862b"}}}], "date": "2019-05-14T20:17:42+00:00", "message": "Backed out changeset: 33d843a057e1", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in monashkrb/labscript_devices/pb_phase_resets (pull request #62)\n\nPulseblaster phase resets", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/monashkrb/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">monashkrb/labscript_devices</a>/pb_phase_resets (pull request #62)</p>\n<p>Pulseblaster phase resets</p>", "type": "rendered"}}, "hash": "21cf797f0b6cc7ff64cc997bd23173d96d1989be", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/21cf797f0b6cc7ff64cc997bd23173d96d1989be.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/21cf797f0b6cc7ff64cc997bd23173d96d1989be/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/21cf797f0b6cc7ff64cc997bd23173d96d1989be"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/21cf797f0b6cc7ff64cc997bd23173d96d1989be"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/21cf797f0b6cc7ff64cc997bd23173d96d1989be/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/21cf797f0b6cc7ff64cc997bd23173d96d1989be/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in monashkrb/labscript_devices/pb_phase_resets (pull request #62)\n\nPulseblaster phase resets", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/monashkrb/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">monashkrb/labscript_devices</a>/pb_phase_resets (pull request #62)</p>\n<p>Pulseblaster phase resets</p>", "type": "rendered"}, "parents": [{"hash": "49bf56369af4624bb692b7efc65ebd269f8b862b", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/49bf56369af4624bb692b7efc65ebd269f8b862b.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/49bf56369af4624bb692b7efc65ebd269f8b862b"}}}, {"hash": "584bb125448bb3a7e4ab38c99c58c986e25e374e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/584bb125448bb3a7e4ab38c99c58c986e25e374e.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/584bb125448bb3a7e4ab38c99c58c986e25e374e"}}}], "date": "2019-05-20T13:58:54+00:00", "message": "Merged in monashkrb/labscript_devices/pb_phase_resets (pull request #62)\n\nPulseblaster phase resets", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch pb_phase_resets", "markup": "markdown", "html": "<p>Close branch pb_phase_resets</p>", "type": "rendered"}}, "hash": "584bb125448bb3a7e4ab38c99c58c986e25e374e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/584bb125448bb3a7e4ab38c99c58c986e25e374e.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/584bb125448bb3a7e4ab38c99c58c986e25e374e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/584bb125448bb3a7e4ab38c99c58c986e25e374e"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/584bb125448bb3a7e4ab38c99c58c986e25e374e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/584bb125448bb3a7e4ab38c99c58c986e25e374e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/584bb125448bb3a7e4ab38c99c58c986e25e374e/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/584bb125448bb3a7e4ab38c99c58c986e25e374e/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch pb_phase_resets", "markup": "markdown", "html": "<p>Close branch pb_phase_resets</p>", "type": "rendered"}, "parents": [{"hash": "ce50da70f476b2a36073f6ed9d9fab7ac031065e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/ce50da70f476b2a36073f6ed9d9fab7ac031065e.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/ce50da70f476b2a36073f6ed9d9fab7ac031065e"}}}], "date": "2019-05-20T13:58:54+00:00", "message": "Close branch pb_phase_resets", "type": "commit"}, {"rendered": {"message": {"raw": "Updated required labscript version to 2.6", "markup": "markdown", "html": "<p>Updated required labscript version to 2.6</p>", "type": "rendered"}}, "hash": "ce50da70f476b2a36073f6ed9d9fab7ac031065e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/ce50da70f476b2a36073f6ed9d9fab7ac031065e.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/ce50da70f476b2a36073f6ed9d9fab7ac031065e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/ce50da70f476b2a36073f6ed9d9fab7ac031065e"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/ce50da70f476b2a36073f6ed9d9fab7ac031065e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/ce50da70f476b2a36073f6ed9d9fab7ac031065e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/ce50da70f476b2a36073f6ed9d9fab7ac031065e/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/ce50da70f476b2a36073f6ed9d9fab7ac031065e/statuses_page=1.json"}}, "author": {"raw": "shjohnst", "type": "author"}, "summary": {"raw": "Updated required labscript version to 2.6", "markup": "markdown", "html": "<p>Updated required labscript version to 2.6</p>", "type": "rendered"}, "parents": [{"hash": "232692bdd00658fd4bac87581ba216d25799a22f", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/232692bdd00658fd4bac87581ba216d25799a22f.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/232692bdd00658fd4bac87581ba216d25799a22f"}}}], "date": "2019-05-03T06:27:33+00:00", "message": "Updated required labscript version to 2.6", "type": "commit"}, {"rendered": {"message": {"raw": "Removed mokeypatch by subclassing newly created DDSQuantity (requires labscript pull request 47)", "markup": "markdown", "html": "<p>Removed mokeypatch by subclassing newly created DDSQuantity (requires labscript pull request 47)</p>", "type": "rendered"}}, "hash": "232692bdd00658fd4bac87581ba216d25799a22f", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/232692bdd00658fd4bac87581ba216d25799a22f.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/232692bdd00658fd4bac87581ba216d25799a22f/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/232692bdd00658fd4bac87581ba216d25799a22f"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/232692bdd00658fd4bac87581ba216d25799a22f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/232692bdd00658fd4bac87581ba216d25799a22f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/232692bdd00658fd4bac87581ba216d25799a22f/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/232692bdd00658fd4bac87581ba216d25799a22f/statuses_page=1.json"}}, "author": {"raw": "shjohnst", "type": "author"}, "summary": {"raw": "Removed mokeypatch by subclassing newly created DDSQuantity (requires labscript pull request 47)", "markup": "markdown", "html": "<p>Removed mokeypatch by subclassing newly created DDSQuantity (requires labscript pull request 47)</p>", "type": "rendered"}, "parents": [{"hash": "a3d1da61d0d8d779f9b76e7bd83e931659b19a03", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/a3d1da61d0d8d779f9b76e7bd83e931659b19a03.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/a3d1da61d0d8d779f9b76e7bd83e931659b19a03"}}}], "date": "2019-05-01T00:45:10+00:00", "message": "Removed mokeypatch by subclassing newly created DDSQuantity (requires labscript pull request 47)", "type": "commit"}, {"rendered": {"message": {"raw": "Reverted error message modified during the initial new device approach.", "markup": "markdown", "html": "<p>Reverted error message modified during the initial new device approach.</p>", "type": "rendered"}}, "hash": "a3d1da61d0d8d779f9b76e7bd83e931659b19a03", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/a3d1da61d0d8d779f9b76e7bd83e931659b19a03.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/a3d1da61d0d8d779f9b76e7bd83e931659b19a03/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/a3d1da61d0d8d779f9b76e7bd83e931659b19a03"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/a3d1da61d0d8d779f9b76e7bd83e931659b19a03"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/a3d1da61d0d8d779f9b76e7bd83e931659b19a03"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/a3d1da61d0d8d779f9b76e7bd83e931659b19a03/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/a3d1da61d0d8d779f9b76e7bd83e931659b19a03/statuses_page=1.json"}}, "author": {"raw": "shjohnst", "type": "author"}, "summary": {"raw": "Reverted error message modified during the initial new device approach.", "markup": "markdown", "html": "<p>Reverted error message modified during the initial new device approach.</p>", "type": "rendered"}, "parents": [{"hash": "ab89049be88ca23bd8cafe9d3e32dda514659dec", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/ab89049be88ca23bd8cafe9d3e32dda514659dec.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/ab89049be88ca23bd8cafe9d3e32dda514659dec"}}}], "date": "2019-03-28T06:13:11+00:00", "message": "Reverted error message modified during the initial new device approach.", "type": "commit"}, {"rendered": {"message": {"raw": "A 'phase_reset' digital quantity is now automatically generated for each pulseblaster DDS, instead of using a user-defined digital output device.\nConvenience functions 'hold_phase' and 'release_phase' are hacked on to these DDS decice instances.", "markup": "markdown", "html": "<p>A 'phase_reset' digital quantity is now automatically generated for each pulseblaster DDS, instead of using a user-defined digital output device.<br />\nConvenience functions 'hold_phase' and 'release_phase' are hacked on to these DDS decice instances.</p>", "type": "rendered"}}, "hash": "ab89049be88ca23bd8cafe9d3e32dda514659dec", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/ab89049be88ca23bd8cafe9d3e32dda514659dec.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/ab89049be88ca23bd8cafe9d3e32dda514659dec/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/ab89049be88ca23bd8cafe9d3e32dda514659dec"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/ab89049be88ca23bd8cafe9d3e32dda514659dec"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/ab89049be88ca23bd8cafe9d3e32dda514659dec"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/ab89049be88ca23bd8cafe9d3e32dda514659dec/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/ab89049be88ca23bd8cafe9d3e32dda514659dec/statuses_page=1.json"}}, "author": {"raw": "shjohnst", "type": "author"}, "summary": {"raw": "A 'phase_reset' digital quantity is now automatically generated for each pulseblaster DDS, instead of using a user-defined digital output device.\nConvenience functions 'hold_phase' and 'release_phase' are hacked on to these DDS decice instances.", "markup": "markdown", "html": "<p>A 'phase_reset' digital quantity is now automatically generated for each pulseblaster DDS, instead of using a user-defined digital output device.<br />\nConvenience functions 'hold_phase' and 'release_phase' are hacked on to these DDS decice instances.</p>", "type": "rendered"}, "parents": [{"hash": "af7ce7d60dfac5dd4a42f3e46270063cf41b698e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/af7ce7d60dfac5dd4a42f3e46270063cf41b698e.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/af7ce7d60dfac5dd4a42f3e46270063cf41b698e"}}}], "date": "2019-03-28T05:53:26+00:00", "message": "A 'phase_reset' digital quantity is now automatically generated for each pulseblaster DDS, instead of using a user-defined digital output device.\nConvenience functions 'hold_phase' and 'release_phase' are hacked on to these DDS decice instances.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed copy/paste bug, tested with basic experiment that only uses one pulseblaster DDS and one (real) digital flag", "markup": "markdown", "html": "<p>Fixed copy/paste bug, tested with basic experiment that only uses one pulseblaster DDS and one (real) digital flag</p>", "type": "rendered"}}, "hash": "af7ce7d60dfac5dd4a42f3e46270063cf41b698e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/af7ce7d60dfac5dd4a42f3e46270063cf41b698e.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/af7ce7d60dfac5dd4a42f3e46270063cf41b698e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/af7ce7d60dfac5dd4a42f3e46270063cf41b698e"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/af7ce7d60dfac5dd4a42f3e46270063cf41b698e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/af7ce7d60dfac5dd4a42f3e46270063cf41b698e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/af7ce7d60dfac5dd4a42f3e46270063cf41b698e/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/af7ce7d60dfac5dd4a42f3e46270063cf41b698e/statuses_page=1.json"}}, "author": {"raw": "shjohnst", "type": "author"}, "summary": {"raw": "Fixed copy/paste bug, tested with basic experiment that only uses one pulseblaster DDS and one (real) digital flag", "markup": "markdown", "html": "<p>Fixed copy/paste bug, tested with basic experiment that only uses one pulseblaster DDS and one (real) digital flag</p>", "type": "rendered"}, "parents": [{"hash": "bcf09e82ae3cb8794fde1671bede531fc3d44578", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/bcf09e82ae3cb8794fde1671bede531fc3d44578.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/bcf09e82ae3cb8794fde1671bede531fc3d44578"}}}], "date": "2019-03-28T03:59:36+00:00", "message": "Fixed copy/paste bug, tested with basic experiment that only uses one pulseblaster DDS and one (real) digital flag", "type": "commit"}, {"rendered": {"message": {"raw": "Initial changes to add a digital flag to control the internal \"phase reset\" line for each DDS on pulseblasters", "markup": "markdown", "html": "<p>Initial changes to add a digital flag to control the internal \"phase reset\" line for each DDS on pulseblasters</p>", "type": "rendered"}}, "hash": "bcf09e82ae3cb8794fde1671bede531fc3d44578", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/bcf09e82ae3cb8794fde1671bede531fc3d44578.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/bcf09e82ae3cb8794fde1671bede531fc3d44578/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/bcf09e82ae3cb8794fde1671bede531fc3d44578"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/bcf09e82ae3cb8794fde1671bede531fc3d44578"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/bcf09e82ae3cb8794fde1671bede531fc3d44578"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/bcf09e82ae3cb8794fde1671bede531fc3d44578/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/bcf09e82ae3cb8794fde1671bede531fc3d44578/statuses_page=1.json"}}, "author": {"raw": "shjohnst", "type": "author"}, "summary": {"raw": "Initial changes to add a digital flag to control the internal \"phase reset\" line for each DDS on pulseblasters", "markup": "markdown", "html": "<p>Initial changes to add a digital flag to control the internal \"phase reset\" line for each DDS on pulseblasters</p>", "type": "rendered"}, "parents": [{"hash": "a669226f0fbb82f2ec966581edd52bd23f1e8be1", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/a669226f0fbb82f2ec966581edd52bd23f1e8be1.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/a669226f0fbb82f2ec966581edd52bd23f1e8be1"}}}], "date": "2019-03-28T03:52:31+00:00", "message": "Initial changes to add a digital flag to control the internal \"phase reset\" line for each DDS on pulseblasters", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in cbillington/labscript_devices/IMAQdxCamera (pull request #66)\n\nFix memory leak in IMAQdxCamera", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/labscript_devices</a>/IMAQdxCamera (pull request #66)</p>\n<p>Fix memory leak in IMAQdxCamera</p>", "type": "rendered"}}, "hash": "49bf56369af4624bb692b7efc65ebd269f8b862b", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/49bf56369af4624bb692b7efc65ebd269f8b862b.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/49bf56369af4624bb692b7efc65ebd269f8b862b/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/49bf56369af4624bb692b7efc65ebd269f8b862b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/49bf56369af4624bb692b7efc65ebd269f8b862b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/49bf56369af4624bb692b7efc65ebd269f8b862b/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/49bf56369af4624bb692b7efc65ebd269f8b862b/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in cbillington/labscript_devices/IMAQdxCamera (pull request #66)\n\nFix memory leak in IMAQdxCamera", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/labscript_devices</a>/IMAQdxCamera (pull request #66)</p>\n<p>Fix memory leak in IMAQdxCamera</p>", "type": "rendered"}, "parents": [{"hash": "ab5dc8e458ac02df7745d297b0059c27353b3820", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/ab5dc8e458ac02df7745d297b0059c27353b3820.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/ab5dc8e458ac02df7745d297b0059c27353b3820"}}}, {"hash": "5c4919d3a7d4865d81fb7077db82b60d95ee5c28", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/5c4919d3a7d4865d81fb7077db82b60d95ee5c28.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/5c4919d3a7d4865d81fb7077db82b60d95ee5c28"}}}], "date": "2019-05-12T22:56:51+00:00", "message": "Merged in cbillington/labscript_devices/IMAQdxCamera (pull request #66)\n\nFix memory leak in IMAQdxCamera", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch IMAQdxCamera", "markup": "markdown", "html": "<p>Close branch IMAQdxCamera</p>", "type": "rendered"}}, "hash": "5c4919d3a7d4865d81fb7077db82b60d95ee5c28", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/5c4919d3a7d4865d81fb7077db82b60d95ee5c28.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/5c4919d3a7d4865d81fb7077db82b60d95ee5c28/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/5c4919d3a7d4865d81fb7077db82b60d95ee5c28"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/5c4919d3a7d4865d81fb7077db82b60d95ee5c28"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/5c4919d3a7d4865d81fb7077db82b60d95ee5c28"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/5c4919d3a7d4865d81fb7077db82b60d95ee5c28/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/5c4919d3a7d4865d81fb7077db82b60d95ee5c28/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch IMAQdxCamera", "markup": "markdown", "html": "<p>Close branch IMAQdxCamera</p>", "type": "rendered"}, "parents": [{"hash": "482c6248bb0dc55cab828c65c85ce3eb28df20d3", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/482c6248bb0dc55cab828c65c85ce3eb28df20d3.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/482c6248bb0dc55cab828c65c85ce3eb28df20d3"}}}], "date": "2019-05-12T22:56:51+00:00", "message": "Close branch IMAQdxCamera", "type": "commit"}, {"rendered": {"message": {"raw": "Apply the monkeypatch in imaqdx_server as well", "markup": "markdown", "html": "<p>Apply the monkeypatch in imaqdx_server as well</p>", "type": "rendered"}}, "hash": "482c6248bb0dc55cab828c65c85ce3eb28df20d3", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/482c6248bb0dc55cab828c65c85ce3eb28df20d3.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/482c6248bb0dc55cab828c65c85ce3eb28df20d3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/482c6248bb0dc55cab828c65c85ce3eb28df20d3"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/482c6248bb0dc55cab828c65c85ce3eb28df20d3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/482c6248bb0dc55cab828c65c85ce3eb28df20d3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/482c6248bb0dc55cab828c65c85ce3eb28df20d3/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/482c6248bb0dc55cab828c65c85ce3eb28df20d3/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Apply the monkeypatch in imaqdx_server as well", "markup": "markdown", "html": "<p>Apply the monkeypatch in imaqdx_server as well</p>", "type": "rendered"}, "parents": [{"hash": "23b4cdde0799232a1587063e5cdaffdf2026742e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/23b4cdde0799232a1587063e5cdaffdf2026742e.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/23b4cdde0799232a1587063e5cdaffdf2026742e"}}}], "date": "2019-05-07T23:57:43+00:00", "message": "Apply the monkeypatch in imaqdx_server as well", "type": "commit"}, {"rendered": {"message": {"raw": "Monkeypatch a bugfix for a memory leak in pynivision. This memory leak meant\nthe data for every image acquired would not be freed.", "markup": "markdown", "html": "<p>Monkeypatch a bugfix for a memory leak in pynivision. This memory leak meant<br />\nthe data for every image acquired would not be freed.</p>", "type": "rendered"}}, "hash": "23b4cdde0799232a1587063e5cdaffdf2026742e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/23b4cdde0799232a1587063e5cdaffdf2026742e.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/23b4cdde0799232a1587063e5cdaffdf2026742e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/23b4cdde0799232a1587063e5cdaffdf2026742e"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/23b4cdde0799232a1587063e5cdaffdf2026742e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/23b4cdde0799232a1587063e5cdaffdf2026742e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/23b4cdde0799232a1587063e5cdaffdf2026742e/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/23b4cdde0799232a1587063e5cdaffdf2026742e/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Monkeypatch a bugfix for a memory leak in pynivision. This memory leak meant\nthe data for every image acquired would not be freed.", "markup": "markdown", "html": "<p>Monkeypatch a bugfix for a memory leak in pynivision. This memory leak meant<br />\nthe data for every image acquired would not be freed.</p>", "type": "rendered"}, "parents": [{"hash": "ab5dc8e458ac02df7745d297b0059c27353b3820", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/ab5dc8e458ac02df7745d297b0059c27353b3820.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/ab5dc8e458ac02df7745d297b0059c27353b3820"}}}], "date": "2019-05-07T18:40:21+00:00", "message": "Monkeypatch a bugfix for a memory leak in pynivision. This memory leak meant\nthe data for every image acquired would not be freed.", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in IMAQdxCamera (pull request #63)\n\nIMAQdxCamera\n\nApproved-by: Russell Anderson", "markup": "markdown", "html": "<p>Merged in IMAQdxCamera (pull request #63)</p>\n<p>IMAQdxCamera</p>\n<p>Approved-by: Russell Anderson</p>", "type": "rendered"}}, "hash": "ab5dc8e458ac02df7745d297b0059c27353b3820", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/ab5dc8e458ac02df7745d297b0059c27353b3820.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/ab5dc8e458ac02df7745d297b0059c27353b3820/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/ab5dc8e458ac02df7745d297b0059c27353b3820"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/ab5dc8e458ac02df7745d297b0059c27353b3820"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/ab5dc8e458ac02df7745d297b0059c27353b3820/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/ab5dc8e458ac02df7745d297b0059c27353b3820/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in IMAQdxCamera (pull request #63)\n\nIMAQdxCamera\n\nApproved-by: Russell Anderson", "markup": "markdown", "html": "<p>Merged in IMAQdxCamera (pull request #63)</p>\n<p>IMAQdxCamera</p>\n<p>Approved-by: Russell Anderson</p>", "type": "rendered"}, "parents": [{"hash": "11f64baed78bbafd747736454b41ae351879e323", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/11f64baed78bbafd747736454b41ae351879e323.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/11f64baed78bbafd747736454b41ae351879e323"}}}, {"hash": "8baf291e03b60c41d0f8837313235b1bd773eb23", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/8baf291e03b60c41d0f8837313235b1bd773eb23.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/8baf291e03b60c41d0f8837313235b1bd773eb23"}}}], "date": "2019-05-01T19:53:45+00:00", "message": "Merged in IMAQdxCamera (pull request #63)\n\nIMAQdxCamera\n\nApproved-by: Russell Anderson", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch IMAQdxCamera", "markup": "markdown", "html": "<p>Close branch IMAQdxCamera</p>", "type": "rendered"}}, "hash": "8baf291e03b60c41d0f8837313235b1bd773eb23", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/8baf291e03b60c41d0f8837313235b1bd773eb23.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/8baf291e03b60c41d0f8837313235b1bd773eb23/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/8baf291e03b60c41d0f8837313235b1bd773eb23"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/8baf291e03b60c41d0f8837313235b1bd773eb23"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/8baf291e03b60c41d0f8837313235b1bd773eb23"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/8baf291e03b60c41d0f8837313235b1bd773eb23/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/8baf291e03b60c41d0f8837313235b1bd773eb23/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch IMAQdxCamera", "markup": "markdown", "html": "<p>Close branch IMAQdxCamera</p>", "type": "rendered"}, "parents": [{"hash": "71e45ceeda5c2de3f4eeba5f6a2e686ee62634df", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/71e45ceeda5c2de3f4eeba5f6a2e686ee62634df.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/71e45ceeda5c2de3f4eeba5f6a2e686ee62634df"}}}], "date": "2019-05-01T19:53:45+00:00", "message": "Close branch IMAQdxCamera", "type": "commit"}, {"rendered": {"message": {"raw": "Do not require new BLACS capable of remote devices, just assume local device\nif BLACS does not set the required attibute.", "markup": "markdown", "html": "<p>Do not require new BLACS capable of remote devices, just assume local device<br />\nif BLACS does not set the required attibute.</p>", "type": "rendered"}}, "hash": "71e45ceeda5c2de3f4eeba5f6a2e686ee62634df", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/71e45ceeda5c2de3f4eeba5f6a2e686ee62634df.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/71e45ceeda5c2de3f4eeba5f6a2e686ee62634df/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/71e45ceeda5c2de3f4eeba5f6a2e686ee62634df"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/71e45ceeda5c2de3f4eeba5f6a2e686ee62634df"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/71e45ceeda5c2de3f4eeba5f6a2e686ee62634df"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/71e45ceeda5c2de3f4eeba5f6a2e686ee62634df/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/71e45ceeda5c2de3f4eeba5f6a2e686ee62634df/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Do not require new BLACS capable of remote devices, just assume local device\nif BLACS does not set the required attibute.", "markup": "markdown", "html": "<p>Do not require new BLACS capable of remote devices, just assume local device<br />\nif BLACS does not set the required attibute.</p>", "type": "rendered"}, "parents": [{"hash": "2b604ad98cef4854524b82a91d807e948369087e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/2b604ad98cef4854524b82a91d807e948369087e.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/2b604ad98cef4854524b82a91d807e948369087e"}}}], "date": "2019-05-01T19:45:21+00:00", "message": "Do not require new BLACS capable of remote devices, just assume local device\nif BLACS does not set the required attibute.", "type": "commit"}, {"rendered": {"message": {"raw": "Bugfix: error checking manual mode attributes could modify the device name", "markup": "markdown", "html": "<p>Bugfix: error checking manual mode attributes could modify the device name</p>", "type": "rendered"}}, "hash": "2b604ad98cef4854524b82a91d807e948369087e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/2b604ad98cef4854524b82a91d807e948369087e.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/2b604ad98cef4854524b82a91d807e948369087e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/2b604ad98cef4854524b82a91d807e948369087e"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/2b604ad98cef4854524b82a91d807e948369087e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/2b604ad98cef4854524b82a91d807e948369087e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/2b604ad98cef4854524b82a91d807e948369087e/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/2b604ad98cef4854524b82a91d807e948369087e/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Bugfix: error checking manual mode attributes could modify the device name", "markup": "markdown", "html": "<p>Bugfix: error checking manual mode attributes could modify the device name</p>", "type": "rendered"}, "parents": [{"hash": "ec048f623999378d17a34c2461416bc6b96df048", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/ec048f623999378d17a34c2461416bc6b96df048.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/ec048f623999378d17a34c2461416bc6b96df048"}}}], "date": "2019-05-01T19:36:05+00:00", "message": "Bugfix: error checking manual mode attributes could modify the device name", "type": "commit"}, {"rendered": {"message": {"raw": "Added close method to MockCamera and made final character of print statements\nconsistent (add period where missing, remove wayward apostrophe).", "markup": "markdown", "html": "<p>Added close method to MockCamera and made final character of print statements<br />\nconsistent (add period where missing, remove wayward apostrophe).</p>", "type": "rendered"}}, "hash": "ec048f623999378d17a34c2461416bc6b96df048", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/ec048f623999378d17a34c2461416bc6b96df048.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/ec048f623999378d17a34c2461416bc6b96df048/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/ec048f623999378d17a34c2461416bc6b96df048"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/ec048f623999378d17a34c2461416bc6b96df048"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/ec048f623999378d17a34c2461416bc6b96df048"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/ec048f623999378d17a34c2461416bc6b96df048/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/ec048f623999378d17a34c2461416bc6b96df048/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "Added close method to MockCamera and made final character of print statements\nconsistent (add period where missing, remove wayward apostrophe).", "markup": "markdown", "html": "<p>Added close method to MockCamera and made final character of print statements<br />\nconsistent (add period where missing, remove wayward apostrophe).</p>", "type": "rendered"}, "parents": [{"hash": "09660d7c4d335988b3e65c279efd3810c0d4cd9d", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/09660d7c4d335988b3e65c279efd3810c0d4cd9d.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/09660d7c4d335988b3e65c279efd3810c0d4cd9d"}}}], "date": "2019-04-28T02:02:40+00:00", "message": "Added close method to MockCamera and made final character of print statements\nconsistent (add period where missing, remove wayward apostrophe).", "type": "commit"}, {"rendered": {"message": {"raw": "Use grab() instead of snap() for continuous acquistition.\nSave imageview's colourmap across restarts.\nFix bug where acqusition thread was not killed upon shutdown.", "markup": "markdown", "html": "<p>Use grab() instead of snap() for continuous acquistition.<br />\nSave imageview's colourmap across restarts.<br />\nFix bug where acqusition thread was not killed upon shutdown.</p>", "type": "rendered"}}, "hash": "09660d7c4d335988b3e65c279efd3810c0d4cd9d", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/09660d7c4d335988b3e65c279efd3810c0d4cd9d.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/09660d7c4d335988b3e65c279efd3810c0d4cd9d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/09660d7c4d335988b3e65c279efd3810c0d4cd9d"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/09660d7c4d335988b3e65c279efd3810c0d4cd9d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/09660d7c4d335988b3e65c279efd3810c0d4cd9d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/09660d7c4d335988b3e65c279efd3810c0d4cd9d/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/09660d7c4d335988b3e65c279efd3810c0d4cd9d/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Use grab() instead of snap() for continuous acquistition.\nSave imageview's colourmap across restarts.\nFix bug where acqusition thread was not killed upon shutdown.", "markup": "markdown", "html": "<p>Use grab() instead of snap() for continuous acquistition.<br />\nSave imageview's colourmap across restarts.<br />\nFix bug where acqusition thread was not killed upon shutdown.</p>", "type": "rendered"}, "parents": [{"hash": "50ef79f4269b1cff4d2f58a3f895253149661f3b", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/50ef79f4269b1cff4d2f58a3f895253149661f3b.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/50ef79f4269b1cff4d2f58a3f895253149661f3b"}}}], "date": "2019-04-26T19:20:09+00:00", "message": "Use grab() instead of snap() for continuous acquistition.\nSave imageview's colourmap across restarts.\nFix bug where acqusition thread was not killed upon shutdown.", "type": "commit"}, {"rendered": {"message": {"raw": "Write text on the fake image that says 'not real data'", "markup": "markdown", "html": "<p>Write text on the fake image that says 'not real data'</p>", "type": "rendered"}}, "hash": "50ef79f4269b1cff4d2f58a3f895253149661f3b", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/50ef79f4269b1cff4d2f58a3f895253149661f3b.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/50ef79f4269b1cff4d2f58a3f895253149661f3b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/50ef79f4269b1cff4d2f58a3f895253149661f3b"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/50ef79f4269b1cff4d2f58a3f895253149661f3b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/50ef79f4269b1cff4d2f58a3f895253149661f3b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/50ef79f4269b1cff4d2f58a3f895253149661f3b/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/50ef79f4269b1cff4d2f58a3f895253149661f3b/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Write text on the fake image that says 'not real data'", "markup": "markdown", "html": "<p>Write text on the fake image that says 'not real data'</p>", "type": "rendered"}, "parents": [{"hash": "31043a505e342c08326648feb472c99c1526b013", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/31043a505e342c08326648feb472c99c1526b013.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/31043a505e342c08326648feb472c99c1526b013"}}}], "date": "2019-04-25T20:46:36+00:00", "message": "Write text on the fake image that says 'not real data'", "type": "commit"}, {"rendered": {"message": {"raw": "* Implement feature of saving an array of images when expose() called multiple\ntimes with identical name and frame type.\n* Set default frame_type='frame'.\n* Add mock camera class, for testing without an actual camera present.\n* Fix bug in continuous acquisition\n* Fix bug whereby images were not correctly matched to frames in the case of\n  labscript expose() functions being called out-of-order with respect to the\n  time of each frame.\n*", "markup": "markdown", "html": "<ul>\n<li>Implement feature of saving an array of images when expose() called multiple<br />\ntimes with identical name and frame type.</li>\n<li>Set default frame_type='frame'.</li>\n<li>Add mock camera class, for testing without an actual camera present.</li>\n<li>Fix bug in continuous acquisition</li>\n<li>Fix bug whereby images were not correctly matched to frames in the case of<br />\n  labscript expose() functions being called out-of-order with respect to the<br />\n  time of each frame.<br />\n*</li>\n</ul>", "type": "rendered"}}, "hash": "31043a505e342c08326648feb472c99c1526b013", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/31043a505e342c08326648feb472c99c1526b013.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/31043a505e342c08326648feb472c99c1526b013/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/31043a505e342c08326648feb472c99c1526b013"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/31043a505e342c08326648feb472c99c1526b013"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/31043a505e342c08326648feb472c99c1526b013"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/31043a505e342c08326648feb472c99c1526b013/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/31043a505e342c08326648feb472c99c1526b013/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "* Implement feature of saving an array of images when expose() called multiple\ntimes with identical name and frame type.\n* Set default frame_type='frame'.\n* Add mock camera class, for testing without an actual camera present.\n* Fix bug in continuous acquisition\n* Fix bug whereby images were not correctly matched to frames in the case of\n  labscript expose() functions being called out-of-order with respect to the\n  time of each frame.\n*", "markup": "markdown", "html": "<ul>\n<li>Implement feature of saving an array of images when expose() called multiple<br />\ntimes with identical name and frame type.</li>\n<li>Set default frame_type='frame'.</li>\n<li>Add mock camera class, for testing without an actual camera present.</li>\n<li>Fix bug in continuous acquisition</li>\n<li>Fix bug whereby images were not correctly matched to frames in the case of<br />\n  labscript expose() functions being called out-of-order with respect to the<br />\n  time of each frame.<br />\n*</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "1e4410ffc10907dfdd0eb531ad19b3de304da321", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/1e4410ffc10907dfdd0eb531ad19b3de304da321.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/1e4410ffc10907dfdd0eb531ad19b3de304da321"}}}], "date": "2019-04-25T20:05:14+00:00", "message": "* Implement feature of saving an array of images when expose() called multiple\ntimes with identical name and frame type.\n* Set default frame_type='frame'.\n* Add mock camera class, for testing without an actual camera present.\n* Fix bug in continuous acquisition\n* Fix bug whereby images were not correctly matched to frames in the case of\n  labscript expose() functions being called out-of-order with respect to the\n  time of each frame.\n*", "type": "commit"}, {"rendered": {"message": {"raw": "Use time.perf_counter() instead of time.monotonic(), since time.monotonic has only\n~16ms resolution on Windows.", "markup": "markdown", "html": "<p>Use time.perf_counter() instead of time.monotonic(), since time.monotonic has only<br />\n~16ms resolution on Windows.</p>", "type": "rendered"}}, "hash": "1e4410ffc10907dfdd0eb531ad19b3de304da321", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/1e4410ffc10907dfdd0eb531ad19b3de304da321.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/1e4410ffc10907dfdd0eb531ad19b3de304da321/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/1e4410ffc10907dfdd0eb531ad19b3de304da321"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/1e4410ffc10907dfdd0eb531ad19b3de304da321"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/1e4410ffc10907dfdd0eb531ad19b3de304da321"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/1e4410ffc10907dfdd0eb531ad19b3de304da321/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/1e4410ffc10907dfdd0eb531ad19b3de304da321/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Use time.perf_counter() instead of time.monotonic(), since time.monotonic has only\n~16ms resolution on Windows.", "markup": "markdown", "html": "<p>Use time.perf_counter() instead of time.monotonic(), since time.monotonic has only<br />\n~16ms resolution on Windows.</p>", "type": "rendered"}, "parents": [{"hash": "4e1c9e7a8ccb13a85f6a6a328e4091986af8fc0c", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/4e1c9e7a8ccb13a85f6a6a328e4091986af8fc0c.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/4e1c9e7a8ccb13a85f6a6a328e4091986af8fc0c"}}}], "date": "2019-04-24T20:35:46+00:00", "message": "Use time.perf_counter() instead of time.monotonic(), since time.monotonic has only\n~16ms resolution on Windows.", "type": "commit"}, {"rendered": {"message": {"raw": "Require BLACS 2.5.1 for is_remote attribute of worker classes.\nHave IMAQdxCamera convert h5 path to local format if it is a remote device\nHave IMAQdxCamera use the hostname of the parent process to determine\nthe zmq connection for sending images.", "markup": "markdown", "html": "<p>Require BLACS 2.5.1 for is_remote attribute of worker classes.<br />\nHave IMAQdxCamera convert h5 path to local format if it is a remote device<br />\nHave IMAQdxCamera use the hostname of the parent process to determine<br />\nthe zmq connection for sending images.</p>", "type": "rendered"}}, "hash": "4e1c9e7a8ccb13a85f6a6a328e4091986af8fc0c", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/4e1c9e7a8ccb13a85f6a6a328e4091986af8fc0c.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/4e1c9e7a8ccb13a85f6a6a328e4091986af8fc0c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/4e1c9e7a8ccb13a85f6a6a328e4091986af8fc0c"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/4e1c9e7a8ccb13a85f6a6a328e4091986af8fc0c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/4e1c9e7a8ccb13a85f6a6a328e4091986af8fc0c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/4e1c9e7a8ccb13a85f6a6a328e4091986af8fc0c/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/4e1c9e7a8ccb13a85f6a6a328e4091986af8fc0c/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Require BLACS 2.5.1 for is_remote attribute of worker classes.\nHave IMAQdxCamera convert h5 path to local format if it is a remote device\nHave IMAQdxCamera use the hostname of the parent process to determine\nthe zmq connection for sending images.", "markup": "markdown", "html": "<p>Require BLACS 2.5.1 for is_remote attribute of worker classes.<br />\nHave IMAQdxCamera convert h5 path to local format if it is a remote device<br />\nHave IMAQdxCamera use the hostname of the parent process to determine<br />\nthe zmq connection for sending images.</p>", "type": "rendered"}, "parents": [{"hash": "460c1c1b7fa420e1151a954ad3111829294d8314", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/460c1c1b7fa420e1151a954ad3111829294d8314.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/460c1c1b7fa420e1151a954ad3111829294d8314"}}}], "date": "2019-04-23T18:54:14+00:00", "message": "Require BLACS 2.5.1 for is_remote attribute of worker classes.\nHave IMAQdxCamera convert h5 path to local format if it is a remote device\nHave IMAQdxCamera use the hostname of the parent process to determine\nthe zmq connection for sending images.", "type": "commit"}, {"rendered": {"message": {"raw": "Revert to identifying cameras by serial number\nBacked out changeset: fe4e758a33d4", "markup": "markdown", "html": "<p>Revert to identifying cameras by serial number<br />\nBacked out changeset: <a href=\"#!/cavitylab/labscript_devices/commits/fe4e758a33d4\" rel=\"nofollow\" class=\"ap-connect-link\">fe4e758a33d4</a></p>", "type": "rendered"}}, "hash": "460c1c1b7fa420e1151a954ad3111829294d8314", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/460c1c1b7fa420e1151a954ad3111829294d8314.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/460c1c1b7fa420e1151a954ad3111829294d8314/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/460c1c1b7fa420e1151a954ad3111829294d8314"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/460c1c1b7fa420e1151a954ad3111829294d8314"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/460c1c1b7fa420e1151a954ad3111829294d8314"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/460c1c1b7fa420e1151a954ad3111829294d8314/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/460c1c1b7fa420e1151a954ad3111829294d8314/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Revert to identifying cameras by serial number\nBacked out changeset: fe4e758a33d4", "markup": "markdown", "html": "<p>Revert to identifying cameras by serial number<br />\nBacked out changeset: <a href=\"#!/cavitylab/labscript_devices/commits/fe4e758a33d4\" rel=\"nofollow\" class=\"ap-connect-link\">fe4e758a33d4</a></p>", "type": "rendered"}, "parents": [{"hash": "9dfbc8ad2290a7b43345db88a75e8dbbe44fd53b", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/9dfbc8ad2290a7b43345db88a75e8dbbe44fd53b.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/9dfbc8ad2290a7b43345db88a75e8dbbe44fd53b"}}}], "date": "2019-04-16T20:34:29+00:00", "message": "Revert to identifying cameras by serial number\nBacked out changeset: fe4e758a33d4", "type": "commit"}, {"rendered": {"message": {"raw": "Use a dedicated zmq socket for sending image data from worker to parent\nrather than using state machine work requests for every frame. Otherwise the GUI\nflickers with state changes for every frame, more CPU is consumed per frame,\nand the data is serialised using pickle, which is less efficient that using\nnumpy buffers. This all wastes CPU, limits frame rate, and looks ugly.\n\nThis requires some care since the receiving thread must be cleaned up when the\ntab restarts. Therefore the tab restart() method is overridden to shutdown the\ncorresponding ZMQserver.", "markup": "markdown", "html": "<p>Use a dedicated zmq socket for sending image data from worker to parent<br />\nrather than using state machine work requests for every frame. Otherwise the GUI<br />\nflickers with state changes for every frame, more CPU is consumed per frame,<br />\nand the data is serialised using pickle, which is less efficient that using<br />\nnumpy buffers. This all wastes CPU, limits frame rate, and looks ugly.</p>\n<p>This requires some care since the receiving thread must be cleaned up when the<br />\ntab restarts. Therefore the tab restart() method is overridden to shutdown the<br />\ncorresponding ZMQserver.</p>", "type": "rendered"}}, "hash": "9dfbc8ad2290a7b43345db88a75e8dbbe44fd53b", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/9dfbc8ad2290a7b43345db88a75e8dbbe44fd53b.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/9dfbc8ad2290a7b43345db88a75e8dbbe44fd53b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/9dfbc8ad2290a7b43345db88a75e8dbbe44fd53b"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/9dfbc8ad2290a7b43345db88a75e8dbbe44fd53b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/9dfbc8ad2290a7b43345db88a75e8dbbe44fd53b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/9dfbc8ad2290a7b43345db88a75e8dbbe44fd53b/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/9dfbc8ad2290a7b43345db88a75e8dbbe44fd53b/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Use a dedicated zmq socket for sending image data from worker to parent\nrather than using state machine work requests for every frame. Otherwise the GUI\nflickers with state changes for every frame, more CPU is consumed per frame,\nand the data is serialised using pickle, which is less efficient that using\nnumpy buffers. This all wastes CPU, limits frame rate, and looks ugly.\n\nThis requires some care since the receiving thread must be cleaned up when the\ntab restarts. Therefore the tab restart() method is overridden to shutdown the\ncorresponding ZMQserver.", "markup": "markdown", "html": "<p>Use a dedicated zmq socket for sending image data from worker to parent<br />\nrather than using state machine work requests for every frame. Otherwise the GUI<br />\nflickers with state changes for every frame, more CPU is consumed per frame,<br />\nand the data is serialised using pickle, which is less efficient that using<br />\nnumpy buffers. This all wastes CPU, limits frame rate, and looks ugly.</p>\n<p>This requires some care since the receiving thread must be cleaned up when the<br />\ntab restarts. Therefore the tab restart() method is overridden to shutdown the<br />\ncorresponding ZMQserver.</p>", "type": "rendered"}, "parents": [{"hash": "6eb15f86133424f86ecd91ccc67bcbe91283e27a", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/6eb15f86133424f86ecd91ccc67bcbe91283e27a.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/6eb15f86133424f86ecd91ccc67bcbe91283e27a"}}}], "date": "2019-04-16T20:28:44+00:00", "message": "Use a dedicated zmq socket for sending image data from worker to parent\nrather than using state machine work requests for every frame. Otherwise the GUI\nflickers with state changes for every frame, more CPU is consumed per frame,\nand the data is serialised using pickle, which is less efficient that using\nnumpy buffers. This all wastes CPU, limits frame rate, and looks ugly.\n\nThis requires some care since the receiving thread must be cleaned up when the\ntab restarts. Therefore the tab restart() method is overridden to shutdown the\ncorresponding ZMQserver.", "type": "commit"}, {"rendered": {"message": {"raw": "Adding more options for controlling frame rate of continuous acquisition.", "markup": "markdown", "html": "<p>Adding more options for controlling frame rate of continuous acquisition.</p>", "type": "rendered"}}, "hash": "6eb15f86133424f86ecd91ccc67bcbe91283e27a", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/6eb15f86133424f86ecd91ccc67bcbe91283e27a.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/6eb15f86133424f86ecd91ccc67bcbe91283e27a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/6eb15f86133424f86ecd91ccc67bcbe91283e27a"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/6eb15f86133424f86ecd91ccc67bcbe91283e27a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/6eb15f86133424f86ecd91ccc67bcbe91283e27a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/6eb15f86133424f86ecd91ccc67bcbe91283e27a/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/6eb15f86133424f86ecd91ccc67bcbe91283e27a/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Adding more options for controlling frame rate of continuous acquisition.", "markup": "markdown", "html": "<p>Adding more options for controlling frame rate of continuous acquisition.</p>", "type": "rendered"}, "parents": [{"hash": "a2c334d59e60bdff299539fb5fb221292899314b", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/a2c334d59e60bdff299539fb5fb221292899314b.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/a2c334d59e60bdff299539fb5fb221292899314b"}}}], "date": "2019-04-15T20:45:11+00:00", "message": "Adding more options for controlling frame rate of continuous acquisition.", "type": "commit"}, {"rendered": {"message": {"raw": "Introduce manual_mode_imaqdx_attributes, for attributes that differ in manual\nmode to their value in buffered mode.\nRemove some unused connection table properties", "markup": "markdown", "html": "<p>Introduce manual_mode_imaqdx_attributes, for attributes that differ in manual<br />\nmode to their value in buffered mode.<br />\nRemove some unused connection table properties</p>", "type": "rendered"}}, "hash": "a2c334d59e60bdff299539fb5fb221292899314b", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/a2c334d59e60bdff299539fb5fb221292899314b.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/a2c334d59e60bdff299539fb5fb221292899314b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/a2c334d59e60bdff299539fb5fb221292899314b"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/a2c334d59e60bdff299539fb5fb221292899314b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/a2c334d59e60bdff299539fb5fb221292899314b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/a2c334d59e60bdff299539fb5fb221292899314b/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/a2c334d59e60bdff299539fb5fb221292899314b/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Introduce manual_mode_imaqdx_attributes, for attributes that differ in manual\nmode to their value in buffered mode.\nRemove some unused connection table properties", "markup": "markdown", "html": "<p>Introduce manual_mode_imaqdx_attributes, for attributes that differ in manual<br />\nmode to their value in buffered mode.<br />\nRemove some unused connection table properties</p>", "type": "rendered"}, "parents": [{"hash": "684511d965aa9a7e10fa5e0e35e77a8d123b5859", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/684511d965aa9a7e10fa5e0e35e77a8d123b5859.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/684511d965aa9a7e10fa5e0e35e77a8d123b5859"}}}], "date": "2019-04-12T20:18:53+00:00", "message": "Introduce manual_mode_imaqdx_attributes, for attributes that differ in manual\nmode to their value in buffered mode.\nRemove some unused connection table properties", "type": "commit"}, {"rendered": {"message": {"raw": "Better description of interaction between NI MAX and BLACS regarding attributes", "markup": "markdown", "html": "<p>Better description of interaction between NI MAX and BLACS regarding attributes</p>", "type": "rendered"}}, "hash": "684511d965aa9a7e10fa5e0e35e77a8d123b5859", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/684511d965aa9a7e10fa5e0e35e77a8d123b5859.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/684511d965aa9a7e10fa5e0e35e77a8d123b5859/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/684511d965aa9a7e10fa5e0e35e77a8d123b5859"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/684511d965aa9a7e10fa5e0e35e77a8d123b5859"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/684511d965aa9a7e10fa5e0e35e77a8d123b5859"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/684511d965aa9a7e10fa5e0e35e77a8d123b5859/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/684511d965aa9a7e10fa5e0e35e77a8d123b5859/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Better description of interaction between NI MAX and BLACS regarding attributes", "markup": "markdown", "html": "<p>Better description of interaction between NI MAX and BLACS regarding attributes</p>", "type": "rendered"}, "parents": [{"hash": "fe4e758a33d412079553b3fe11cf1ead95f77a84", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/fe4e758a33d412079553b3fe11cf1ead95f77a84.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/fe4e758a33d412079553b3fe11cf1ead95f77a84"}}}], "date": "2019-04-10T22:52:40+00:00", "message": "Better description of interaction between NI MAX and BLACS regarding attributes", "type": "commit"}, {"rendered": {"message": {"raw": "Identify cameras based on their MAX_name instead of serial number", "markup": "markdown", "html": "<p>Identify cameras based on their MAX_name instead of serial number</p>", "type": "rendered"}}, "hash": "fe4e758a33d412079553b3fe11cf1ead95f77a84", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/fe4e758a33d412079553b3fe11cf1ead95f77a84.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/fe4e758a33d412079553b3fe11cf1ead95f77a84/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/fe4e758a33d412079553b3fe11cf1ead95f77a84"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/fe4e758a33d412079553b3fe11cf1ead95f77a84"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/fe4e758a33d412079553b3fe11cf1ead95f77a84"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/fe4e758a33d412079553b3fe11cf1ead95f77a84/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/fe4e758a33d412079553b3fe11cf1ead95f77a84/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Identify cameras based on their MAX_name instead of serial number", "markup": "markdown", "html": "<p>Identify cameras based on their MAX_name instead of serial number</p>", "type": "rendered"}, "parents": [{"hash": "49297dd468f68e6ae6f90e15a50e97f1412f0916", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/49297dd468f68e6ae6f90e15a50e97f1412f0916.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/49297dd468f68e6ae6f90e15a50e97f1412f0916"}}}], "date": "2019-04-10T22:28:02+00:00", "message": "Identify cameras based on their MAX_name instead of serial number", "type": "commit"}, {"rendered": {"message": {"raw": "* Make BLACS connection (the serial number) be an upper-case hex string\n* Fix issue where timing out caused acquisition to not wait for enough images\n* Do not crash tab if worker has an exception calling snap()", "markup": "markdown", "html": "<ul>\n<li>Make BLACS connection (the serial number) be an upper-case hex string</li>\n<li>Fix issue where timing out caused acquisition to not wait for enough images</li>\n<li>Do not crash tab if worker has an exception calling snap()</li>\n</ul>", "type": "rendered"}}, "hash": "49297dd468f68e6ae6f90e15a50e97f1412f0916", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/49297dd468f68e6ae6f90e15a50e97f1412f0916.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/49297dd468f68e6ae6f90e15a50e97f1412f0916/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/49297dd468f68e6ae6f90e15a50e97f1412f0916"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/49297dd468f68e6ae6f90e15a50e97f1412f0916"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/49297dd468f68e6ae6f90e15a50e97f1412f0916"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/49297dd468f68e6ae6f90e15a50e97f1412f0916/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/49297dd468f68e6ae6f90e15a50e97f1412f0916/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "* Make BLACS connection (the serial number) be an upper-case hex string\n* Fix issue where timing out caused acquisition to not wait for enough images\n* Do not crash tab if worker has an exception calling snap()", "markup": "markdown", "html": "<ul>\n<li>Make BLACS connection (the serial number) be an upper-case hex string</li>\n<li>Fix issue where timing out caused acquisition to not wait for enough images</li>\n<li>Do not crash tab if worker has an exception calling snap()</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "27db3cebb11cba48f8e7b0b6acfec6a85147dc61", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/27db3cebb11cba48f8e7b0b6acfec6a85147dc61.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/27db3cebb11cba48f8e7b0b6acfec6a85147dc61"}}}], "date": "2019-04-10T16:55:23+00:00", "message": "* Make BLACS connection (the serial number) be an upper-case hex string\n* Fix issue where timing out caused acquisition to not wait for enough images\n* Do not crash tab if worker has an exception calling snap()", "type": "commit"}, {"rendered": {"message": {"raw": "Fix issue where attributes with commas in their values would be printed wrong", "markup": "markdown", "html": "<p>Fix issue where attributes with commas in their values would be printed wrong</p>", "type": "rendered"}}, "hash": "27db3cebb11cba48f8e7b0b6acfec6a85147dc61", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/27db3cebb11cba48f8e7b0b6acfec6a85147dc61.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/27db3cebb11cba48f8e7b0b6acfec6a85147dc61/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/27db3cebb11cba48f8e7b0b6acfec6a85147dc61"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/27db3cebb11cba48f8e7b0b6acfec6a85147dc61"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/27db3cebb11cba48f8e7b0b6acfec6a85147dc61"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/27db3cebb11cba48f8e7b0b6acfec6a85147dc61/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/27db3cebb11cba48f8e7b0b6acfec6a85147dc61/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Fix issue where attributes with commas in their values would be printed wrong", "markup": "markdown", "html": "<p>Fix issue where attributes with commas in their values would be printed wrong</p>", "type": "rendered"}, "parents": [{"hash": "c514a320184c0759db1151caa6b525ef64df9e5b", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/c514a320184c0759db1151caa6b525ef64df9e5b.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/c514a320184c0759db1151caa6b525ef64df9e5b"}}}], "date": "2019-04-10T00:30:37+00:00", "message": "Fix issue where attributes with commas in their values would be printed wrong", "type": "commit"}, {"rendered": {"message": {"raw": "Require Python 3.6, labscript 2.5.2", "markup": "markdown", "html": "<p>Require Python 3.6, labscript 2.5.2</p>", "type": "rendered"}}, "hash": "c514a320184c0759db1151caa6b525ef64df9e5b", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/c514a320184c0759db1151caa6b525ef64df9e5b.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/c514a320184c0759db1151caa6b525ef64df9e5b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/c514a320184c0759db1151caa6b525ef64df9e5b"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/c514a320184c0759db1151caa6b525ef64df9e5b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/c514a320184c0759db1151caa6b525ef64df9e5b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/c514a320184c0759db1151caa6b525ef64df9e5b/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/c514a320184c0759db1151caa6b525ef64df9e5b/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Require Python 3.6, labscript 2.5.2", "markup": "markdown", "html": "<p>Require Python 3.6, labscript 2.5.2</p>", "type": "rendered"}, "parents": [{"hash": "3bbf8e6a32b1e9212972c50b03a71fd12ef882de", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/3bbf8e6a32b1e9212972c50b03a71fd12ef882de.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/3bbf8e6a32b1e9212972c50b03a71fd12ef882de"}}}], "date": "2019-04-08T19:34:28+00:00", "message": "Require Python 3.6, labscript 2.5.2", "type": "commit"}, {"rendered": {"message": {"raw": "Better error messages when did not acquire all images.", "markup": "markdown", "html": "<p>Better error messages when did not acquire all images.</p>", "type": "rendered"}}, "hash": "3bbf8e6a32b1e9212972c50b03a71fd12ef882de", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/3bbf8e6a32b1e9212972c50b03a71fd12ef882de.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/3bbf8e6a32b1e9212972c50b03a71fd12ef882de/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/3bbf8e6a32b1e9212972c50b03a71fd12ef882de"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/3bbf8e6a32b1e9212972c50b03a71fd12ef882de"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/3bbf8e6a32b1e9212972c50b03a71fd12ef882de"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/3bbf8e6a32b1e9212972c50b03a71fd12ef882de/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/3bbf8e6a32b1e9212972c50b03a71fd12ef882de/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Better error messages when did not acquire all images.", "markup": "markdown", "html": "<p>Better error messages when did not acquire all images.</p>", "type": "rendered"}, "parents": [{"hash": "13ace45ea76e0c3cf995218af15f56ec6955d03c", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/13ace45ea76e0c3cf995218af15f56ec6955d03c.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/13ace45ea76e0c3cf995218af15f56ec6955d03c"}}}], "date": "2019-04-08T19:29:41+00:00", "message": "Better error messages when did not acquire all images.", "type": "commit"}, {"rendered": {"message": {"raw": "Remove setting of timeout. Raise error if cannot stop acquisition thread.\nDeprecation warning if expose() arguments are in the wrong order.", "markup": "markdown", "html": "<p>Remove setting of timeout. Raise error if cannot stop acquisition thread.<br />\nDeprecation warning if expose() arguments are in the wrong order.</p>", "type": "rendered"}}, "hash": "13ace45ea76e0c3cf995218af15f56ec6955d03c", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/13ace45ea76e0c3cf995218af15f56ec6955d03c.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/13ace45ea76e0c3cf995218af15f56ec6955d03c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/13ace45ea76e0c3cf995218af15f56ec6955d03c"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/13ace45ea76e0c3cf995218af15f56ec6955d03c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/13ace45ea76e0c3cf995218af15f56ec6955d03c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/13ace45ea76e0c3cf995218af15f56ec6955d03c/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/13ace45ea76e0c3cf995218af15f56ec6955d03c/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Remove setting of timeout. Raise error if cannot stop acquisition thread.\nDeprecation warning if expose() arguments are in the wrong order.", "markup": "markdown", "html": "<p>Remove setting of timeout. Raise error if cannot stop acquisition thread.<br />\nDeprecation warning if expose() arguments are in the wrong order.</p>", "type": "rendered"}, "parents": [{"hash": "1bd6bc1509e46884a4d481d10fe452632a6960f5", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/1bd6bc1509e46884a4d481d10fe452632a6960f5.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/1bd6bc1509e46884a4d481d10fe452632a6960f5"}}}], "date": "2019-04-08T19:19:11+00:00", "message": "Remove setting of timeout. Raise error if cannot stop acquisition thread.\nDeprecation warning if expose() arguments are in the wrong order.", "type": "commit"}, {"rendered": {"message": {"raw": "Tweak attriutes dialog so it doesn't get its own taskbar entry but stays on top.", "markup": "markdown", "html": "<p>Tweak attriutes dialog so it doesn't get its own taskbar entry but stays on top.</p>", "type": "rendered"}}, "hash": "1bd6bc1509e46884a4d481d10fe452632a6960f5", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/1bd6bc1509e46884a4d481d10fe452632a6960f5.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/1bd6bc1509e46884a4d481d10fe452632a6960f5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/1bd6bc1509e46884a4d481d10fe452632a6960f5"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/1bd6bc1509e46884a4d481d10fe452632a6960f5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/1bd6bc1509e46884a4d481d10fe452632a6960f5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/1bd6bc1509e46884a4d481d10fe452632a6960f5/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/1bd6bc1509e46884a4d481d10fe452632a6960f5/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Tweak attriutes dialog so it doesn't get its own taskbar entry but stays on top.", "markup": "markdown", "html": "<p>Tweak attriutes dialog so it doesn't get its own taskbar entry but stays on top.</p>", "type": "rendered"}, "parents": [{"hash": "efe4da7fd4490e7d3eecfdcd66ab9234e7222f7d", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/efe4da7fd4490e7d3eecfdcd66ab9234e7222f7d.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/efe4da7fd4490e7d3eecfdcd66ab9234e7222f7d"}}}], "date": "2019-04-06T19:35:51+00:00", "message": "Tweak attriutes dialog so it doesn't get its own taskbar entry but stays on top.", "type": "commit"}, {"rendered": {"message": {"raw": "Formatting, cleanups, docstrings.", "markup": "markdown", "html": "<p>Formatting, cleanups, docstrings.</p>", "type": "rendered"}}, "hash": "efe4da7fd4490e7d3eecfdcd66ab9234e7222f7d", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/efe4da7fd4490e7d3eecfdcd66ab9234e7222f7d.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/efe4da7fd4490e7d3eecfdcd66ab9234e7222f7d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/efe4da7fd4490e7d3eecfdcd66ab9234e7222f7d"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/efe4da7fd4490e7d3eecfdcd66ab9234e7222f7d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/efe4da7fd4490e7d3eecfdcd66ab9234e7222f7d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/efe4da7fd4490e7d3eecfdcd66ab9234e7222f7d/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/efe4da7fd4490e7d3eecfdcd66ab9234e7222f7d/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Formatting, cleanups, docstrings.", "markup": "markdown", "html": "<p>Formatting, cleanups, docstrings.</p>", "type": "rendered"}, "parents": [{"hash": "6cba865183edab25d067111b8779e0282bfeefb6", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/6cba865183edab25d067111b8779e0282bfeefb6.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/6cba865183edab25d067111b8779e0282bfeefb6"}}}], "date": "2019-04-06T18:48:51+00:00", "message": "Formatting, cleanups, docstrings.", "type": "commit"}, {"rendered": {"message": {"raw": "Copyright headers", "markup": "markdown", "html": "<p>Copyright headers</p>", "type": "rendered"}}, "hash": "6cba865183edab25d067111b8779e0282bfeefb6", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/6cba865183edab25d067111b8779e0282bfeefb6.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/6cba865183edab25d067111b8779e0282bfeefb6/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/6cba865183edab25d067111b8779e0282bfeefb6"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/6cba865183edab25d067111b8779e0282bfeefb6"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/6cba865183edab25d067111b8779e0282bfeefb6"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/6cba865183edab25d067111b8779e0282bfeefb6/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/6cba865183edab25d067111b8779e0282bfeefb6/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Copyright headers", "markup": "markdown", "html": "<p>Copyright headers</p>", "type": "rendered"}, "parents": [{"hash": "2535e500bcd0182c8fe3df755a5ae4852505ec5b", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/2535e500bcd0182c8fe3df755a5ae4852505ec5b.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/2535e500bcd0182c8fe3df755a5ae4852505ec5b"}}}], "date": "2019-04-06T04:19:21+00:00", "message": "Copyright headers", "type": "commit"}, {"rendered": {"message": {"raw": "Remove unused code for now, f strings, and 'raise from' for reraised exceptions.", "markup": "markdown", "html": "<p>Remove unused code for now, f strings, and 'raise from' for reraised exceptions.</p>", "type": "rendered"}}, "hash": "2535e500bcd0182c8fe3df755a5ae4852505ec5b", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/2535e500bcd0182c8fe3df755a5ae4852505ec5b.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/2535e500bcd0182c8fe3df755a5ae4852505ec5b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/2535e500bcd0182c8fe3df755a5ae4852505ec5b"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/2535e500bcd0182c8fe3df755a5ae4852505ec5b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/2535e500bcd0182c8fe3df755a5ae4852505ec5b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/2535e500bcd0182c8fe3df755a5ae4852505ec5b/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/2535e500bcd0182c8fe3df755a5ae4852505ec5b/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Remove unused code for now, f strings, and 'raise from' for reraised exceptions.", "markup": "markdown", "html": "<p>Remove unused code for now, f strings, and 'raise from' for reraised exceptions.</p>", "type": "rendered"}, "parents": [{"hash": "0b9444396cf74b4b34d7c89a08d795611829d234", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/0b9444396cf74b4b34d7c89a08d795611829d234.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/0b9444396cf74b4b34d7c89a08d795611829d234"}}}], "date": "2019-04-06T04:11:55+00:00", "message": "Remove unused code for now, f strings, and 'raise from' for reraised exceptions.", "type": "commit"}, {"rendered": {"message": {"raw": "Testing and implementing buffered run, copying functions from camera server.\nBasic shots work. Ready for testing.", "markup": "markdown", "html": "<p>Testing and implementing buffered run, copying functions from camera server.<br />\nBasic shots work. Ready for testing.</p>", "type": "rendered"}}, "hash": "0b9444396cf74b4b34d7c89a08d795611829d234", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/0b9444396cf74b4b34d7c89a08d795611829d234.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/0b9444396cf74b4b34d7c89a08d795611829d234/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/0b9444396cf74b4b34d7c89a08d795611829d234"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/0b9444396cf74b4b34d7c89a08d795611829d234"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/0b9444396cf74b4b34d7c89a08d795611829d234"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/0b9444396cf74b4b34d7c89a08d795611829d234/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/0b9444396cf74b4b34d7c89a08d795611829d234/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Testing and implementing buffered run, copying functions from camera server.\nBasic shots work. Ready for testing.", "markup": "markdown", "html": "<p>Testing and implementing buffered run, copying functions from camera server.<br />\nBasic shots work. Ready for testing.</p>", "type": "rendered"}, "parents": [{"hash": "f822387fc10c5ef16b85cce1607a71064fa2fa59", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/f822387fc10c5ef16b85cce1607a71064fa2fa59.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/f822387fc10c5ef16b85cce1607a71064fa2fa59"}}}], "date": "2019-04-05T20:57:16+00:00", "message": "Testing and implementing buffered run, copying functions from camera server.\nBasic shots work. Ready for testing.", "type": "commit"}, {"rendered": {"message": {"raw": "Attributes dialog has more options. Some functionality copied from imaqdx camera\nserver into worker class, not yet tested on hardware.", "markup": "markdown", "html": "<p>Attributes dialog has more options. Some functionality copied from imaqdx camera<br />\nserver into worker class, not yet tested on hardware.</p>", "type": "rendered"}}, "hash": "f822387fc10c5ef16b85cce1607a71064fa2fa59", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/f822387fc10c5ef16b85cce1607a71064fa2fa59.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/f822387fc10c5ef16b85cce1607a71064fa2fa59/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/f822387fc10c5ef16b85cce1607a71064fa2fa59"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/f822387fc10c5ef16b85cce1607a71064fa2fa59"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/f822387fc10c5ef16b85cce1607a71064fa2fa59"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/f822387fc10c5ef16b85cce1607a71064fa2fa59/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/f822387fc10c5ef16b85cce1607a71064fa2fa59/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Attributes dialog has more options. Some functionality copied from imaqdx camera\nserver into worker class, not yet tested on hardware.", "markup": "markdown", "html": "<p>Attributes dialog has more options. Some functionality copied from imaqdx camera<br />\nserver into worker class, not yet tested on hardware.</p>", "type": "rendered"}, "parents": [{"hash": "d2996784ebdfedad4b46febafcfcb09d6a8032e7", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/d2996784ebdfedad4b46febafcfcb09d6a8032e7.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/d2996784ebdfedad4b46febafcfcb09d6a8032e7"}}}], "date": "2019-04-05T02:02:03+00:00", "message": "Attributes dialog has more options. Some functionality copied from imaqdx camera\nserver into worker class, not yet tested on hardware.", "type": "commit"}, {"rendered": {"message": {"raw": "BLACS tab complete.", "markup": "markdown", "html": "<p>BLACS tab complete.</p>", "type": "rendered"}}, "hash": "d2996784ebdfedad4b46febafcfcb09d6a8032e7", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/d2996784ebdfedad4b46febafcfcb09d6a8032e7.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/d2996784ebdfedad4b46febafcfcb09d6a8032e7/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/d2996784ebdfedad4b46febafcfcb09d6a8032e7"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/d2996784ebdfedad4b46febafcfcb09d6a8032e7"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/d2996784ebdfedad4b46febafcfcb09d6a8032e7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/d2996784ebdfedad4b46febafcfcb09d6a8032e7/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/d2996784ebdfedad4b46febafcfcb09d6a8032e7/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "BLACS tab complete.", "markup": "markdown", "html": "<p>BLACS tab complete.</p>", "type": "rendered"}, "parents": [{"hash": "b84b8a6e8af06eaac1fb61e8f19531e71aee41f3", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/b84b8a6e8af06eaac1fb61e8f19531e71aee41f3.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/b84b8a6e8af06eaac1fb61e8f19531e71aee41f3"}}}], "date": "2019-04-04T18:54:40+00:00", "message": "BLACS tab complete.", "type": "commit"}, {"rendered": {"message": {"raw": "BLACS tab almost complete", "markup": "markdown", "html": "<p>BLACS tab almost complete</p>", "type": "rendered"}}, "hash": "b84b8a6e8af06eaac1fb61e8f19531e71aee41f3", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/b84b8a6e8af06eaac1fb61e8f19531e71aee41f3.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/b84b8a6e8af06eaac1fb61e8f19531e71aee41f3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/b84b8a6e8af06eaac1fb61e8f19531e71aee41f3"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/b84b8a6e8af06eaac1fb61e8f19531e71aee41f3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/b84b8a6e8af06eaac1fb61e8f19531e71aee41f3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/b84b8a6e8af06eaac1fb61e8f19531e71aee41f3/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/b84b8a6e8af06eaac1fb61e8f19531e71aee41f3/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "BLACS tab almost complete", "markup": "markdown", "html": "<p>BLACS tab almost complete</p>", "type": "rendered"}, "parents": [{"hash": "0fe6b33b0d6133b20971493ac0fa25eb85e8b3c3", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/0fe6b33b0d6133b20971493ac0fa25eb85e8b3c3.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/0fe6b33b0d6133b20971493ac0fa25eb85e8b3c3"}}}], "date": "2019-04-04T01:54:40+00:00", "message": "BLACS tab almost complete", "type": "commit"}, {"rendered": {"message": {"raw": "Gotten as far as a blank UI in BLACS", "markup": "markdown", "html": "<p>Gotten as far as a blank UI in BLACS</p>", "type": "rendered"}}, "hash": "0fe6b33b0d6133b20971493ac0fa25eb85e8b3c3", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/0fe6b33b0d6133b20971493ac0fa25eb85e8b3c3.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/0fe6b33b0d6133b20971493ac0fa25eb85e8b3c3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/0fe6b33b0d6133b20971493ac0fa25eb85e8b3c3"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/0fe6b33b0d6133b20971493ac0fa25eb85e8b3c3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/0fe6b33b0d6133b20971493ac0fa25eb85e8b3c3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/0fe6b33b0d6133b20971493ac0fa25eb85e8b3c3/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/0fe6b33b0d6133b20971493ac0fa25eb85e8b3c3/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Gotten as far as a blank UI in BLACS", "markup": "markdown", "html": "<p>Gotten as far as a blank UI in BLACS</p>", "type": "rendered"}, "parents": [{"hash": "06726e59d13c0c60900f0f17de62cb41cd1ab2af", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/06726e59d13c0c60900f0f17de62cb41cd1ab2af.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/06726e59d13c0c60900f0f17de62cb41cd1ab2af"}}}], "date": "2019-03-29T20:04:26+00:00", "message": "Gotten as far as a blank UI in BLACS", "type": "commit"}, {"rendered": {"message": {"raw": "Working on converting the IMAQdx implementation into a regular labscript driver.\n\nWith the in-progress remote devices functionality, there is no longer any reason\nfor the camera to have a separate 'server' just because it is connected to\na different computer.", "markup": "markdown", "html": "<p>Working on converting the IMAQdx implementation into a regular labscript driver.</p>\n<p>With the in-progress remote devices functionality, there is no longer any reason<br />\nfor the camera to have a separate 'server' just because it is connected to<br />\na different computer.</p>", "type": "rendered"}}, "hash": "06726e59d13c0c60900f0f17de62cb41cd1ab2af", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/06726e59d13c0c60900f0f17de62cb41cd1ab2af.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/06726e59d13c0c60900f0f17de62cb41cd1ab2af/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/06726e59d13c0c60900f0f17de62cb41cd1ab2af"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/06726e59d13c0c60900f0f17de62cb41cd1ab2af"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/06726e59d13c0c60900f0f17de62cb41cd1ab2af"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/06726e59d13c0c60900f0f17de62cb41cd1ab2af/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/06726e59d13c0c60900f0f17de62cb41cd1ab2af/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Working on converting the IMAQdx implementation into a regular labscript driver.\n\nWith the in-progress remote devices functionality, there is no longer any reason\nfor the camera to have a separate 'server' just because it is connected to\na different computer.", "markup": "markdown", "html": "<p>Working on converting the IMAQdx implementation into a regular labscript driver.</p>\n<p>With the in-progress remote devices functionality, there is no longer any reason<br />\nfor the camera to have a separate 'server' just because it is connected to<br />\na different computer.</p>", "type": "rendered"}, "parents": [{"hash": "a669226f0fbb82f2ec966581edd52bd23f1e8be1", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/a669226f0fbb82f2ec966581edd52bd23f1e8be1.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/a669226f0fbb82f2ec966581edd52bd23f1e8be1"}}}], "date": "2019-03-29T01:12:09+00:00", "message": "Working on converting the IMAQdx implementation into a regular labscript driver.\n\nWith the in-progress remote devices functionality, there is no longer any reason\nfor the camera to have a separate 'server' just because it is connected to\na different computer.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bug in CiceroOpalKellyXEM3001 device.\nThe OpalKelly library needs bytes on PY2 and strings on PY3.", "markup": "markdown", "html": "<p>Fixed bug in CiceroOpalKellyXEM3001 device.<br />\nThe OpalKelly library needs bytes on PY2 and strings on PY3.</p>", "type": "rendered"}}, "hash": "11f64baed78bbafd747736454b41ae351879e323", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/11f64baed78bbafd747736454b41ae351879e323.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/11f64baed78bbafd747736454b41ae351879e323/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/11f64baed78bbafd747736454b41ae351879e323"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/11f64baed78bbafd747736454b41ae351879e323"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/11f64baed78bbafd747736454b41ae351879e323"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/11f64baed78bbafd747736454b41ae351879e323/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/11f64baed78bbafd747736454b41ae351879e323/statuses_page=1.json"}}, "author": {"raw": "Philip Starkey <philip.starkey@gmail.com>", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}}, "summary": {"raw": "Fixed bug in CiceroOpalKellyXEM3001 device.\nThe OpalKelly library needs bytes on PY2 and strings on PY3.", "markup": "markdown", "html": "<p>Fixed bug in CiceroOpalKellyXEM3001 device.<br />\nThe OpalKelly library needs bytes on PY2 and strings on PY3.</p>", "type": "rendered"}, "parents": [{"hash": "19038d14e6cd23baf90f96211ac8e892c4b83046", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/19038d14e6cd23baf90f96211ac8e892c4b83046.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/19038d14e6cd23baf90f96211ac8e892c4b83046"}}}], "date": "2019-04-29T01:37:08+00:00", "message": "Fixed bug in CiceroOpalKellyXEM3001 device.\nThe OpalKelly library needs bytes on PY2 and strings on PY3.", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in DummyIntermediateDevice (pull request #64)\n\nminor DummyIntermediateDevice changes", "markup": "markdown", "html": "<p>Merged in DummyIntermediateDevice (pull request #64)</p>\n<p>minor DummyIntermediateDevice changes</p>", "type": "rendered"}}, "hash": "19038d14e6cd23baf90f96211ac8e892c4b83046", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/19038d14e6cd23baf90f96211ac8e892c4b83046.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/19038d14e6cd23baf90f96211ac8e892c4b83046/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/19038d14e6cd23baf90f96211ac8e892c4b83046"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/19038d14e6cd23baf90f96211ac8e892c4b83046"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/19038d14e6cd23baf90f96211ac8e892c4b83046/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/19038d14e6cd23baf90f96211ac8e892c4b83046/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in DummyIntermediateDevice (pull request #64)\n\nminor DummyIntermediateDevice changes", "markup": "markdown", "html": "<p>Merged in DummyIntermediateDevice (pull request #64)</p>\n<p>minor DummyIntermediateDevice changes</p>", "type": "rendered"}, "parents": [{"hash": "1e773740acf46aa44402ac55c7c424b444c636df", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/1e773740acf46aa44402ac55c7c424b444c636df.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/1e773740acf46aa44402ac55c7c424b444c636df"}}}, {"hash": "034258d5c1e0a30290e4339b216ca6506581a9f9", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/034258d5c1e0a30290e4339b216ca6506581a9f9.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/034258d5c1e0a30290e4339b216ca6506581a9f9"}}}], "date": "2019-04-28T15:25:57+00:00", "message": "Merged in DummyIntermediateDevice (pull request #64)\n\nminor DummyIntermediateDevice changes", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch DummyIntermediateDevice", "markup": "markdown", "html": "<p>Close branch DummyIntermediateDevice</p>", "type": "rendered"}}, "hash": "034258d5c1e0a30290e4339b216ca6506581a9f9", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/034258d5c1e0a30290e4339b216ca6506581a9f9.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/034258d5c1e0a30290e4339b216ca6506581a9f9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/034258d5c1e0a30290e4339b216ca6506581a9f9"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/034258d5c1e0a30290e4339b216ca6506581a9f9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/034258d5c1e0a30290e4339b216ca6506581a9f9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/034258d5c1e0a30290e4339b216ca6506581a9f9/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/034258d5c1e0a30290e4339b216ca6506581a9f9/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch DummyIntermediateDevice", "markup": "markdown", "html": "<p>Close branch DummyIntermediateDevice</p>", "type": "rendered"}, "parents": [{"hash": "a7cc8a8488e3e5f1b9f526e25b4ae0d0be63ee6e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/a7cc8a8488e3e5f1b9f526e25b4ae0d0be63ee6e.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/a7cc8a8488e3e5f1b9f526e25b4ae0d0be63ee6e"}}}], "date": "2019-04-28T15:25:57+00:00", "message": "Close branch DummyIntermediateDevice", "type": "commit"}, {"rendered": {"message": {"raw": "Remove unnecessary class decorators that produce warnings.", "markup": "markdown", "html": "<p>Remove unnecessary class decorators that produce warnings.</p>", "type": "rendered"}}, "hash": "a7cc8a8488e3e5f1b9f526e25b4ae0d0be63ee6e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/a7cc8a8488e3e5f1b9f526e25b4ae0d0be63ee6e.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/a7cc8a8488e3e5f1b9f526e25b4ae0d0be63ee6e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/a7cc8a8488e3e5f1b9f526e25b4ae0d0be63ee6e"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/a7cc8a8488e3e5f1b9f526e25b4ae0d0be63ee6e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/a7cc8a8488e3e5f1b9f526e25b4ae0d0be63ee6e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/a7cc8a8488e3e5f1b9f526e25b4ae0d0be63ee6e/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/a7cc8a8488e3e5f1b9f526e25b4ae0d0be63ee6e/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Remove unnecessary class decorators that produce warnings.", "markup": "markdown", "html": "<p>Remove unnecessary class decorators that produce warnings.</p>", "type": "rendered"}, "parents": [{"hash": "110503736aeba972dcfd5b93d507a1ed064ac013", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/110503736aeba972dcfd5b93d507a1ed064ac013.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/110503736aeba972dcfd5b93d507a1ed064ac013"}}}], "date": "2019-04-26T20:28:24+00:00", "message": "Remove unnecessary class decorators that produce warnings.", "type": "commit"}, {"rendered": {"message": {"raw": "Have DummyIntermediateDevice call parent class's generate_code so that any child\ndevices will have their generate_code methods called.\nRename parent argument to parent_device in line with other labscript devices.", "markup": "markdown", "html": "<p>Have DummyIntermediateDevice call parent class's generate_code so that any child<br />\ndevices will have their generate_code methods called.<br />\nRename parent argument to parent_device in line with other labscript devices.</p>", "type": "rendered"}}, "hash": "110503736aeba972dcfd5b93d507a1ed064ac013", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/110503736aeba972dcfd5b93d507a1ed064ac013.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/110503736aeba972dcfd5b93d507a1ed064ac013/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/110503736aeba972dcfd5b93d507a1ed064ac013"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/110503736aeba972dcfd5b93d507a1ed064ac013"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/110503736aeba972dcfd5b93d507a1ed064ac013"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/110503736aeba972dcfd5b93d507a1ed064ac013/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/110503736aeba972dcfd5b93d507a1ed064ac013/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Have DummyIntermediateDevice call parent class's generate_code so that any child\ndevices will have their generate_code methods called.\nRename parent argument to parent_device in line with other labscript devices.", "markup": "markdown", "html": "<p>Have DummyIntermediateDevice call parent class's generate_code so that any child<br />\ndevices will have their generate_code methods called.<br />\nRename parent argument to parent_device in line with other labscript devices.</p>", "type": "rendered"}, "parents": [{"hash": "a2d4d00960d561525fc52a60bee9370378f1cbda", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/a2d4d00960d561525fc52a60bee9370378f1cbda.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/a2d4d00960d561525fc52a60bee9370378f1cbda"}}}], "date": "2019-04-25T20:06:37+00:00", "message": "Have DummyIntermediateDevice call parent class's generate_code so that any child\ndevices will have their generate_code methods called.\nRename parent argument to parent_device in line with other labscript devices.", "type": "commit"}, {"rendered": {"message": {"raw": "Added tag 2.4.0 for changeset 2ce6985de087", "markup": "markdown", "html": "<p>Added tag 2.4.0 for changeset <a href=\"#!/cavitylab/labscript_devices/commits/2ce6985de087\" rel=\"nofollow\" class=\"ap-connect-link\">2ce6985de087</a></p>", "type": "rendered"}}, "hash": "1e773740acf46aa44402ac55c7c424b444c636df", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/1e773740acf46aa44402ac55c7c424b444c636df.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/1e773740acf46aa44402ac55c7c424b444c636df/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/1e773740acf46aa44402ac55c7c424b444c636df"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/1e773740acf46aa44402ac55c7c424b444c636df"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/1e773740acf46aa44402ac55c7c424b444c636df"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/1e773740acf46aa44402ac55c7c424b444c636df/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/1e773740acf46aa44402ac55c7c424b444c636df/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added tag 2.4.0 for changeset 2ce6985de087", "markup": "markdown", "html": "<p>Added tag 2.4.0 for changeset <a href=\"#!/cavitylab/labscript_devices/commits/2ce6985de087\" rel=\"nofollow\" class=\"ap-connect-link\">2ce6985de087</a></p>", "type": "rendered"}, "parents": [{"hash": "2ce6985de087400644a95bd5d46b4733e5a96ef9", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/2ce6985de087400644a95bd5d46b4733e5a96ef9.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/2ce6985de087400644a95bd5d46b4733e5a96ef9"}}}], "date": "2019-04-07T04:49:46+00:00", "message": "Added tag 2.4.0 for changeset 2ce6985de087", "type": "commit"}, {"rendered": {"message": {"raw": "Bumped minor version for release", "markup": "markdown", "html": "<p>Bumped minor version for release</p>", "type": "rendered"}}, "hash": "2ce6985de087400644a95bd5d46b4733e5a96ef9", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/2ce6985de087400644a95bd5d46b4733e5a96ef9.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/2ce6985de087400644a95bd5d46b4733e5a96ef9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/2ce6985de087400644a95bd5d46b4733e5a96ef9"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/2ce6985de087400644a95bd5d46b4733e5a96ef9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/2ce6985de087400644a95bd5d46b4733e5a96ef9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/2ce6985de087400644a95bd5d46b4733e5a96ef9/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/2ce6985de087400644a95bd5d46b4733e5a96ef9/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Bumped minor version for release", "markup": "markdown", "html": "<p>Bumped minor version for release</p>", "type": "rendered"}, "parents": [{"hash": "a2d4d00960d561525fc52a60bee9370378f1cbda", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/a2d4d00960d561525fc52a60bee9370378f1cbda.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/a2d4d00960d561525fc52a60bee9370378f1cbda"}}}], "date": "2019-04-07T04:49:39+00:00", "message": "Bumped minor version for release", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in novatech-default-baudrate (pull request #23)\n\nNovatech default baudrate", "markup": "markdown", "html": "<p>Merged in novatech-default-baudrate (pull request #23)</p>\n<p>Novatech default baudrate</p>", "type": "rendered"}}, "hash": "a2d4d00960d561525fc52a60bee9370378f1cbda", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/a2d4d00960d561525fc52a60bee9370378f1cbda.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/a2d4d00960d561525fc52a60bee9370378f1cbda/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/a2d4d00960d561525fc52a60bee9370378f1cbda"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/a2d4d00960d561525fc52a60bee9370378f1cbda"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/a2d4d00960d561525fc52a60bee9370378f1cbda/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/a2d4d00960d561525fc52a60bee9370378f1cbda/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in novatech-default-baudrate (pull request #23)\n\nNovatech default baudrate", "markup": "markdown", "html": "<p>Merged in novatech-default-baudrate (pull request #23)</p>\n<p>Novatech default baudrate</p>", "type": "rendered"}, "parents": [{"hash": "a669226f0fbb82f2ec966581edd52bd23f1e8be1", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/a669226f0fbb82f2ec966581edd52bd23f1e8be1.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/a669226f0fbb82f2ec966581edd52bd23f1e8be1"}}}, {"hash": "2b46c1b187f721d36c5e4abe63cd9e6a47a9a79c", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/2b46c1b187f721d36c5e4abe63cd9e6a47a9a79c.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/2b46c1b187f721d36c5e4abe63cd9e6a47a9a79c"}}}], "date": "2019-04-01T15:47:35+00:00", "message": "Merged in novatech-default-baudrate (pull request #23)\n\nNovatech default baudrate", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch novatech-default-baudrate", "markup": "markdown", "html": "<p>Close branch novatech-default-baudrate</p>", "type": "rendered"}}, "hash": "2b46c1b187f721d36c5e4abe63cd9e6a47a9a79c", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/2b46c1b187f721d36c5e4abe63cd9e6a47a9a79c.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/2b46c1b187f721d36c5e4abe63cd9e6a47a9a79c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/2b46c1b187f721d36c5e4abe63cd9e6a47a9a79c"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/2b46c1b187f721d36c5e4abe63cd9e6a47a9a79c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/2b46c1b187f721d36c5e4abe63cd9e6a47a9a79c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/2b46c1b187f721d36c5e4abe63cd9e6a47a9a79c/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/2b46c1b187f721d36c5e4abe63cd9e6a47a9a79c/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch novatech-default-baudrate", "markup": "markdown", "html": "<p>Close branch novatech-default-baudrate</p>", "type": "rendered"}, "parents": [{"hash": "89e87a60673e37bcb90ea16d3ad9adc1dcbc5fe3", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/89e87a60673e37bcb90ea16d3ad9adc1dcbc5fe3.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/89e87a60673e37bcb90ea16d3ad9adc1dcbc5fe3"}}}], "date": "2019-04-01T15:47:35+00:00", "message": "Close branch novatech-default-baudrate", "type": "commit"}, {"rendered": {"message": {"raw": "Fix incorrectly formatted error message on Python 3.", "markup": "markdown", "html": "<p>Fix incorrectly formatted error message on Python 3.</p>", "type": "rendered"}}, "hash": "89e87a60673e37bcb90ea16d3ad9adc1dcbc5fe3", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/89e87a60673e37bcb90ea16d3ad9adc1dcbc5fe3.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/89e87a60673e37bcb90ea16d3ad9adc1dcbc5fe3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/89e87a60673e37bcb90ea16d3ad9adc1dcbc5fe3"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/89e87a60673e37bcb90ea16d3ad9adc1dcbc5fe3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/89e87a60673e37bcb90ea16d3ad9adc1dcbc5fe3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/89e87a60673e37bcb90ea16d3ad9adc1dcbc5fe3/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/89e87a60673e37bcb90ea16d3ad9adc1dcbc5fe3/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Fix incorrectly formatted error message on Python 3.", "markup": "markdown", "html": "<p>Fix incorrectly formatted error message on Python 3.</p>", "type": "rendered"}, "parents": [{"hash": "2e22b9d36f6f3911f85073b1be1f427a6d371653", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/2e22b9d36f6f3911f85073b1be1f427a6d371653.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/2e22b9d36f6f3911f85073b1be1f427a6d371653"}}}], "date": "2019-03-14T00:58:51+00:00", "message": "Fix incorrectly formatted error message on Python 3.", "type": "commit"}, {"rendered": {"message": {"raw": "Use David Meyer's technique of iterating over all baud rates at startup if\ncommunication cannot be established at the current baud rate.\n\nThis resolves an issue whereby restarting a tab in BLACS does not cleanly shut\nit down, and so the Novatech's baud rate would not be reset to te default value\nupon restart. The startup code would then not be able to communicate with it.\n\nBLACS should try to cleanly shut down tabs upon restart, if possible, but\nthat is a separate issue.", "markup": "markdown", "html": "<p>Use David Meyer's technique of iterating over all baud rates at startup if<br />\ncommunication cannot be established at the current baud rate.</p>\n<p>This resolves an issue whereby restarting a tab in BLACS does not cleanly shut<br />\nit down, and so the Novatech's baud rate would not be reset to te default value<br />\nupon restart. The startup code would then not be able to communicate with it.</p>\n<p>BLACS should try to cleanly shut down tabs upon restart, if possible, but<br />\nthat is a separate issue.</p>", "type": "rendered"}}, "hash": "2e22b9d36f6f3911f85073b1be1f427a6d371653", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/2e22b9d36f6f3911f85073b1be1f427a6d371653.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/2e22b9d36f6f3911f85073b1be1f427a6d371653/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/2e22b9d36f6f3911f85073b1be1f427a6d371653"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/2e22b9d36f6f3911f85073b1be1f427a6d371653"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/2e22b9d36f6f3911f85073b1be1f427a6d371653"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/2e22b9d36f6f3911f85073b1be1f427a6d371653/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/2e22b9d36f6f3911f85073b1be1f427a6d371653/statuses_page=1.json"}}, "author": {"raw": "RbChip", "type": "author"}, "summary": {"raw": "Use David Meyer's technique of iterating over all baud rates at startup if\ncommunication cannot be established at the current baud rate.\n\nThis resolves an issue whereby restarting a tab in BLACS does not cleanly shut\nit down, and so the Novatech's baud rate would not be reset to te default value\nupon restart. The startup code would then not be able to communicate with it.\n\nBLACS should try to cleanly shut down tabs upon restart, if possible, but\nthat is a separate issue.", "markup": "markdown", "html": "<p>Use David Meyer's technique of iterating over all baud rates at startup if<br />\ncommunication cannot be established at the current baud rate.</p>\n<p>This resolves an issue whereby restarting a tab in BLACS does not cleanly shut<br />\nit down, and so the Novatech's baud rate would not be reset to te default value<br />\nupon restart. The startup code would then not be able to communicate with it.</p>\n<p>BLACS should try to cleanly shut down tabs upon restart, if possible, but<br />\nthat is a separate issue.</p>", "type": "rendered"}, "parents": [{"hash": "7e500081a89eaa288034c3f63c7ce2ac5b200c1f", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/7e500081a89eaa288034c3f63c7ce2ac5b200c1f.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/7e500081a89eaa288034c3f63c7ce2ac5b200c1f"}}}], "date": "2019-03-13T16:41:05+00:00", "message": "Use David Meyer's technique of iterating over all baud rates at startup if\ncommunication cannot be established at the current baud rate.\n\nThis resolves an issue whereby restarting a tab in BLACS does not cleanly shut\nit down, and so the Novatech's baud rate would not be reset to te default value\nupon restart. The startup code would then not be able to communicate with it.\n\nBLACS should try to cleanly shut down tabs upon restart, if possible, but\nthat is a separate issue.", "type": "commit"}, {"rendered": {"message": {"raw": "Python 3 bugfix and ensure we use CRLF newlines for the buad rate settings.", "markup": "markdown", "html": "<p>Python 3 bugfix and ensure we use CRLF newlines for the buad rate settings.</p>", "type": "rendered"}}, "hash": "7e500081a89eaa288034c3f63c7ce2ac5b200c1f", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/7e500081a89eaa288034c3f63c7ce2ac5b200c1f.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/7e500081a89eaa288034c3f63c7ce2ac5b200c1f/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/7e500081a89eaa288034c3f63c7ce2ac5b200c1f"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/7e500081a89eaa288034c3f63c7ce2ac5b200c1f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/7e500081a89eaa288034c3f63c7ce2ac5b200c1f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/7e500081a89eaa288034c3f63c7ce2ac5b200c1f/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/7e500081a89eaa288034c3f63c7ce2ac5b200c1f/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Python 3 bugfix and ensure we use CRLF newlines for the buad rate settings.", "markup": "markdown", "html": "<p>Python 3 bugfix and ensure we use CRLF newlines for the buad rate settings.</p>", "type": "rendered"}, "parents": [{"hash": "adc08bafe27ff17150ed7c5497f5a5a53304aafa", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/adc08bafe27ff17150ed7c5497f5a5a53304aafa.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/adc08bafe27ff17150ed7c5497f5a5a53304aafa"}}}], "date": "2019-03-13T00:34:42+00:00", "message": "Python 3 bugfix and ensure we use CRLF newlines for the buad rate settings.", "type": "commit"}, {"rendered": {"message": {"raw": "Merge with default", "markup": "markdown", "html": "<p>Merge with default</p>", "type": "rendered"}}, "hash": "adc08bafe27ff17150ed7c5497f5a5a53304aafa", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/adc08bafe27ff17150ed7c5497f5a5a53304aafa.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/adc08bafe27ff17150ed7c5497f5a5a53304aafa/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/adc08bafe27ff17150ed7c5497f5a5a53304aafa"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/adc08bafe27ff17150ed7c5497f5a5a53304aafa"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/adc08bafe27ff17150ed7c5497f5a5a53304aafa/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/adc08bafe27ff17150ed7c5497f5a5a53304aafa/statuses_page=1.json"}}, "author": {"raw": "Chris Billington", "type": "author"}, "summary": {"raw": "Merge with default", "markup": "markdown", "html": "<p>Merge with default</p>", "type": "rendered"}, "parents": [{"hash": "2b88b6a11ff115eb3735445ee5305b9dda45aa3a", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/2b88b6a11ff115eb3735445ee5305b9dda45aa3a.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/2b88b6a11ff115eb3735445ee5305b9dda45aa3a"}}}, {"hash": "8e33a9d5153269f8fe644837efe4f16b0e317e39", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/8e33a9d5153269f8fe644837efe4f16b0e317e39.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/8e33a9d5153269f8fe644837efe4f16b0e317e39"}}}], "date": "2019-02-05T16:30:22+00:00", "message": "Merge with default", "type": "commit"}, {"rendered": {"message": {"raw": "Merge with default", "markup": "markdown", "html": "<p>Merge with default</p>", "type": "rendered"}}, "hash": "2b88b6a11ff115eb3735445ee5305b9dda45aa3a", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/2b88b6a11ff115eb3735445ee5305b9dda45aa3a.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/2b88b6a11ff115eb3735445ee5305b9dda45aa3a/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/2b88b6a11ff115eb3735445ee5305b9dda45aa3a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/2b88b6a11ff115eb3735445ee5305b9dda45aa3a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/2b88b6a11ff115eb3735445ee5305b9dda45aa3a/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/2b88b6a11ff115eb3735445ee5305b9dda45aa3a/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Merge with default", "markup": "markdown", "html": "<p>Merge with default</p>", "type": "rendered"}, "parents": [{"hash": "64c27214d2a2494b3bd5ab6b44060b925112b664", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/64c27214d2a2494b3bd5ab6b44060b925112b664.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/64c27214d2a2494b3bd5ab6b44060b925112b664"}}}, {"hash": "d6170d7d27054535047229f320b5e7a10a8e4d2e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/d6170d7d27054535047229f320b5e7a10a8e4d2e.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/d6170d7d27054535047229f320b5e7a10a8e4d2e"}}}], "date": "2018-07-30T22:22:36+00:00", "message": "Merge with default", "type": "commit"}, {"rendered": {"message": {"raw": "Restored hgignore", "markup": "markdown", "html": "<p>Restored hgignore</p>", "type": "rendered"}}, "hash": "64c27214d2a2494b3bd5ab6b44060b925112b664", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/64c27214d2a2494b3bd5ab6b44060b925112b664.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/64c27214d2a2494b3bd5ab6b44060b925112b664/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/64c27214d2a2494b3bd5ab6b44060b925112b664"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/64c27214d2a2494b3bd5ab6b44060b925112b664"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/64c27214d2a2494b3bd5ab6b44060b925112b664"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/64c27214d2a2494b3bd5ab6b44060b925112b664/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/64c27214d2a2494b3bd5ab6b44060b925112b664/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Restored hgignore", "markup": "markdown", "html": "<p>Restored hgignore</p>", "type": "rendered"}, "parents": [{"hash": "cf9109a54a6c4aa28f889b7c6e37fdb68a597ea8", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/cf9109a54a6c4aa28f889b7c6e37fdb68a597ea8.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/cf9109a54a6c4aa28f889b7c6e37fdb68a597ea8"}}}], "date": "2018-03-13T02:40:52+00:00", "message": "Restored hgignore", "type": "commit"}, {"rendered": {"message": {"raw": "Merge with default", "markup": "markdown", "html": "<p>Merge with default</p>", "type": "rendered"}}, "hash": "cf9109a54a6c4aa28f889b7c6e37fdb68a597ea8", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/cf9109a54a6c4aa28f889b7c6e37fdb68a597ea8.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/cf9109a54a6c4aa28f889b7c6e37fdb68a597ea8/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/cf9109a54a6c4aa28f889b7c6e37fdb68a597ea8"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/cf9109a54a6c4aa28f889b7c6e37fdb68a597ea8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/cf9109a54a6c4aa28f889b7c6e37fdb68a597ea8/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/cf9109a54a6c4aa28f889b7c6e37fdb68a597ea8/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Merge with default", "markup": "markdown", "html": "<p>Merge with default</p>", "type": "rendered"}, "parents": [{"hash": "91a57c1f29800aa7e57b40735e4f3bfb5b2df3d6", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/91a57c1f29800aa7e57b40735e4f3bfb5b2df3d6.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/91a57c1f29800aa7e57b40735e4f3bfb5b2df3d6"}}}, {"hash": "959801ccfc8f2dc71f0a12e9542f5e0107c2807e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/959801ccfc8f2dc71f0a12e9542f5e0107c2807e.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/959801ccfc8f2dc71f0a12e9542f5e0107c2807e"}}}], "date": "2018-03-13T02:24:33+00:00", "message": "Merge with default", "type": "commit"}, {"rendered": {"message": {"raw": "Typo", "markup": "markdown", "html": "<p>Typo</p>", "type": "rendered"}}, "hash": "91a57c1f29800aa7e57b40735e4f3bfb5b2df3d6", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/91a57c1f29800aa7e57b40735e4f3bfb5b2df3d6.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/91a57c1f29800aa7e57b40735e4f3bfb5b2df3d6/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/91a57c1f29800aa7e57b40735e4f3bfb5b2df3d6"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/91a57c1f29800aa7e57b40735e4f3bfb5b2df3d6"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/91a57c1f29800aa7e57b40735e4f3bfb5b2df3d6"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/91a57c1f29800aa7e57b40735e4f3bfb5b2df3d6/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/91a57c1f29800aa7e57b40735e4f3bfb5b2df3d6/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Typo", "markup": "markdown", "html": "<p>Typo</p>", "type": "rendered"}, "parents": [{"hash": "e0bfe45cd6802b64d1a3673d03703af302ea31ff", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/e0bfe45cd6802b64d1a3673d03703af302ea31ff.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/e0bfe45cd6802b64d1a3673d03703af302ea31ff"}}}], "date": "2018-03-09T12:12:59+00:00", "message": "Typo", "type": "commit"}, {"rendered": {"message": {"raw": "Bugfix - left in a line from a different feature, left a string not as a\nbytestring, and forgot to change a default value of default_baud_rate to None", "markup": "markdown", "html": "<p>Bugfix - left in a line from a different feature, left a string not as a<br />\nbytestring, and forgot to change a default value of default_baud_rate to None</p>", "type": "rendered"}}, "hash": "e0bfe45cd6802b64d1a3673d03703af302ea31ff", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/e0bfe45cd6802b64d1a3673d03703af302ea31ff.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/e0bfe45cd6802b64d1a3673d03703af302ea31ff/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/e0bfe45cd6802b64d1a3673d03703af302ea31ff"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/e0bfe45cd6802b64d1a3673d03703af302ea31ff"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/e0bfe45cd6802b64d1a3673d03703af302ea31ff"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/e0bfe45cd6802b64d1a3673d03703af302ea31ff/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/e0bfe45cd6802b64d1a3673d03703af302ea31ff/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Bugfix - left in a line from a different feature, left a string not as a\nbytestring, and forgot to change a default value of default_baud_rate to None", "markup": "markdown", "html": "<p>Bugfix - left in a line from a different feature, left a string not as a<br />\nbytestring, and forgot to change a default value of default_baud_rate to None</p>", "type": "rendered"}, "parents": [{"hash": "47755a7fec4a78f8dcc6460081daec5e3511d3e5", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/47755a7fec4a78f8dcc6460081daec5e3511d3e5.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/47755a7fec4a78f8dcc6460081daec5e3511d3e5"}}}], "date": "2018-03-09T12:11:16+00:00", "message": "Bugfix - left in a line from a different feature, left a string not as a\nbytestring, and forgot to change a default value of default_baud_rate to None", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed speed changing programming of novatech!", "markup": "markdown", "html": "<p>Fixed speed changing programming of novatech!</p>", "type": "rendered"}}, "hash": "47755a7fec4a78f8dcc6460081daec5e3511d3e5", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/47755a7fec4a78f8dcc6460081daec5e3511d3e5.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/47755a7fec4a78f8dcc6460081daec5e3511d3e5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/47755a7fec4a78f8dcc6460081daec5e3511d3e5"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/47755a7fec4a78f8dcc6460081daec5e3511d3e5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/47755a7fec4a78f8dcc6460081daec5e3511d3e5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/47755a7fec4a78f8dcc6460081daec5e3511d3e5/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/47755a7fec4a78f8dcc6460081daec5e3511d3e5/statuses_page=1.json"}}, "author": {"raw": "spielman", "type": "author"}, "summary": {"raw": "Fixed speed changing programming of novatech!", "markup": "markdown", "html": "<p>Fixed speed changing programming of novatech!</p>", "type": "rendered"}, "parents": [{"hash": "128bb46b2987427d2e8ea1f4958074dae8b513b2", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/128bb46b2987427d2e8ea1f4958074dae8b513b2.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/128bb46b2987427d2e8ea1f4958074dae8b513b2"}}}], "date": "2018-03-06T16:05:39+00:00", "message": "Fixed speed changing programming of novatech!", "type": "commit"}, {"rendered": {"message": {"raw": "Restored missing line to initialise tab in BLACS.", "markup": "markdown", "html": "<p>Restored missing line to initialise tab in BLACS.</p>", "type": "rendered"}}, "hash": "128bb46b2987427d2e8ea1f4958074dae8b513b2", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/128bb46b2987427d2e8ea1f4958074dae8b513b2.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/128bb46b2987427d2e8ea1f4958074dae8b513b2/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/128bb46b2987427d2e8ea1f4958074dae8b513b2"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/128bb46b2987427d2e8ea1f4958074dae8b513b2"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/128bb46b2987427d2e8ea1f4958074dae8b513b2"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/128bb46b2987427d2e8ea1f4958074dae8b513b2/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/128bb46b2987427d2e8ea1f4958074dae8b513b2/statuses_page=1.json"}}, "author": {"raw": "RbChip", "type": "author"}, "summary": {"raw": "Restored missing line to initialise tab in BLACS.", "markup": "markdown", "html": "<p>Restored missing line to initialise tab in BLACS.</p>", "type": "rendered"}, "parents": [{"hash": "3bcf6684bca7107384d9655dbb8618c234215f2e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/3bcf6684bca7107384d9655dbb8618c234215f2e.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/3bcf6684bca7107384d9655dbb8618c234215f2e"}}}], "date": "2015-10-21T18:25:00+00:00", "message": "Restored missing line to initialise tab in BLACS.", "type": "commit"}, {"rendered": {"message": {"raw": "Updated novatech to use connection_table properties as it should.\nAdded a new option \"default_baud_rate\" which when set tells labscript that\nthe novatech will start with that baud rate and should be return to it when\nshut down.  We accept the possibility that the baud rate is already set, so\nerrors in setting the baud rate are ignored.", "markup": "markdown", "html": "<p>Updated novatech to use connection_table properties as it should.<br />\nAdded a new option \"default_baud_rate\" which when set tells labscript that<br />\nthe novatech will start with that baud rate and should be return to it when<br />\nshut down.  We accept the possibility that the baud rate is already set, so<br />\nerrors in setting the baud rate are ignored.</p>", "type": "rendered"}}, "hash": "3bcf6684bca7107384d9655dbb8618c234215f2e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/3bcf6684bca7107384d9655dbb8618c234215f2e.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/3bcf6684bca7107384d9655dbb8618c234215f2e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/3bcf6684bca7107384d9655dbb8618c234215f2e"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/3bcf6684bca7107384d9655dbb8618c234215f2e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/3bcf6684bca7107384d9655dbb8618c234215f2e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/3bcf6684bca7107384d9655dbb8618c234215f2e/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/3bcf6684bca7107384d9655dbb8618c234215f2e/statuses_page=1.json"}}, "author": {"raw": "spielman", "type": "author"}, "summary": {"raw": "Updated novatech to use connection_table properties as it should.\nAdded a new option \"default_baud_rate\" which when set tells labscript that\nthe novatech will start with that baud rate and should be return to it when\nshut down.  We accept the possibility that the baud rate is already set, so\nerrors in setting the baud rate are ignored.", "markup": "markdown", "html": "<p>Updated novatech to use connection_table properties as it should.<br />\nAdded a new option \"default_baud_rate\" which when set tells labscript that<br />\nthe novatech will start with that baud rate and should be return to it when<br />\nshut down.  We accept the possibility that the baud rate is already set, so<br />\nerrors in setting the baud rate are ignored.</p>", "type": "rendered"}, "parents": [{"hash": "ca70ec597aa339c4adf725f275ac2b9f842fb802", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/ca70ec597aa339c4adf725f275ac2b9f842fb802.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/ca70ec597aa339c4adf725f275ac2b9f842fb802"}}}], "date": "2015-07-08T21:07:52+00:00", "message": "Updated novatech to use connection_table properties as it should.\nAdded a new option \"default_baud_rate\" which when set tells labscript that\nthe novatech will start with that baud rate and should be return to it when\nshut down.  We accept the possibility that the baud rate is already set, so\nerrors in setting the baud rate are ignored.", "type": "commit"}, {"rendered": {"message": {"raw": "Fix incorrect deprecated import alias for dummy pseudoclock", "markup": "markdown", "html": "<p>Fix incorrect deprecated import alias for dummy pseudoclock</p>", "type": "rendered"}}, "hash": "a669226f0fbb82f2ec966581edd52bd23f1e8be1", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_devices.json"}, "html": {"href": "#!/cavitylab/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30b74b25-008f-4b6e-9aa6-e11636fda1b3}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cavitylab/labscript_devices", "uuid": "{30b74b25-008f-4b6e-9aa6-e11636fda1b3}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/a669226f0fbb82f2ec966581edd52bd23f1e8be1.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_devices/commit/a669226f0fbb82f2ec966581edd52bd23f1e8be1/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/patch/a669226f0fbb82f2ec966581edd52bd23f1e8be1"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/a669226f0fbb82f2ec966581edd52bd23f1e8be1"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/diff/a669226f0fbb82f2ec966581edd52bd23f1e8be1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_devices/commit/a669226f0fbb82f2ec966581edd52bd23f1e8be1/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_devices/commit/a669226f0fbb82f2ec966581edd52bd23f1e8be1/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Fix incorrect deprecated import alias for dummy pseudoclock", "markup": "markdown", "html": "<p>Fix incorrect deprecated import alias for dummy pseudoclock</p>", "type": "rendered"}, "parents": [{"hash": "66135a4f6547ac7c377d8eb3e00e200eceece7ae", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_devices/commit/66135a4f6547ac7c377d8eb3e00e200eceece7ae.json"}, "html": {"href": "#!/cavitylab/labscript_devices/commits/66135a4f6547ac7c377d8eb3e00e200eceece7ae"}}}], "date": "2019-03-14T00:56:53+00:00", "message": "Fix incorrect deprecated import alias for dummy pseudoclock", "type": "commit"}], "next": "data/repositories/cavitylab/labscript_devices/commits/RfBlasterPy3-bugfix_page=3.json"}