{"pagelen": 100, "previous": "data/repositories/cavitylab/labscript_utils/commits/2.1.0_page=1.json", "values": [{"rendered": {"message": {"raw": "Fixed a bug where the unit of an AO could not be programmatically changed because I forgot to index the list returned by model().findItems()", "markup": "markdown", "html": "<p>Fixed a bug where the unit of an AO could not be programmatically changed because I forgot to index the list returned by model().findItems()</p>", "type": "rendered"}}, "hash": "b548631c9cc75d1151887e0501adaa5921010052", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/b548631c9cc75d1151887e0501adaa5921010052.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/b548631c9cc75d1151887e0501adaa5921010052/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/b548631c9cc75d1151887e0501adaa5921010052"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/b548631c9cc75d1151887e0501adaa5921010052"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/b548631c9cc75d1151887e0501adaa5921010052"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/b548631c9cc75d1151887e0501adaa5921010052/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/b548631c9cc75d1151887e0501adaa5921010052/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed a bug where the unit of an AO could not be programmatically changed because I forgot to index the list returned by model().findItems()", "markup": "markdown", "html": "<p>Fixed a bug where the unit of an AO could not be programmatically changed because I forgot to index the list returned by model().findItems()</p>", "type": "rendered"}, "parents": [{"hash": "84dca685a43d1489d34143c70f665ccd118843a5", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/84dca685a43d1489d34143c70f665ccd118843a5.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/84dca685a43d1489d34143c70f665ccd118843a5"}}}], "date": "2013-08-16T10:22:33+00:00", "message": "Fixed a bug where the unit of an AO could not be programmatically changed because I forgot to index the list returned by model().findItems()", "type": "commit"}, {"rendered": {"message": {"raw": "Added some code (that I got from the internet, it is licensed under the MIT license) that modifies the behaviour of the QUiLoader\n\nThis code allows you to create the \"QMainWindow\" in Qt Designer, but override the QMainWindow class with your own when the UI is instantiated. This means you can subclass QMainWindow and override functions like closeEvent, while still designing the window in Qt Designer. See the BLACSWindow class in pythonlib/BLACS/main.pyw for an example implementation", "markup": "markdown", "html": "<p>Added some code (that I got from the internet, it is licensed under the MIT license) that modifies the behaviour of the QUiLoader</p>\n<p>This code allows you to create the \"QMainWindow\" in Qt Designer, but override the QMainWindow class with your own when the UI is instantiated. This means you can subclass QMainWindow and override functions like closeEvent, while still designing the window in Qt Designer. See the BLACSWindow class in pythonlib/BLACS/main.pyw for an example implementation</p>", "type": "rendered"}}, "hash": "84dca685a43d1489d34143c70f665ccd118843a5", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/84dca685a43d1489d34143c70f665ccd118843a5.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/84dca685a43d1489d34143c70f665ccd118843a5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/84dca685a43d1489d34143c70f665ccd118843a5"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/84dca685a43d1489d34143c70f665ccd118843a5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/84dca685a43d1489d34143c70f665ccd118843a5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/84dca685a43d1489d34143c70f665ccd118843a5/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/84dca685a43d1489d34143c70f665ccd118843a5/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added some code (that I got from the internet, it is licensed under the MIT license) that modifies the behaviour of the QUiLoader\n\nThis code allows you to create the \"QMainWindow\" in Qt Designer, but override the QMainWindow class with your own when the UI is instantiated. This means you can subclass QMainWindow and override functions like closeEvent, while still designing the window in Qt Designer. See the BLACSWindow class in pythonlib/BLACS/main.pyw for an example implementation", "markup": "markdown", "html": "<p>Added some code (that I got from the internet, it is licensed under the MIT license) that modifies the behaviour of the QUiLoader</p>\n<p>This code allows you to create the \"QMainWindow\" in Qt Designer, but override the QMainWindow class with your own when the UI is instantiated. This means you can subclass QMainWindow and override functions like closeEvent, while still designing the window in Qt Designer. See the BLACSWindow class in pythonlib/BLACS/main.pyw for an example implementation</p>", "type": "rendered"}, "parents": [{"hash": "673ee70916f96ecd4853597ec7728490e70d5528", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/673ee70916f96ecd4853597ec7728490e70d5528.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/673ee70916f96ecd4853597ec7728490e70d5528"}}}], "date": "2013-08-15T07:22:41+00:00", "message": "Added some code (that I got from the internet, it is licensed under the MIT license) that modifies the behaviour of the QUiLoader\n\nThis code allows you to create the \"QMainWindow\" in Qt Designer, but override the QMainWindow class with your own when the UI is instantiated. This means you can subclass QMainWindow and override functions like closeEvent, while still designing the window in Qt Designer. See the BLACSWindow class in pythonlib/BLACS/main.pyw for an example implementation", "type": "commit"}, {"rendered": {"message": {"raw": "Added ability to force relayout of objects (seemed to need to do this to make DDS channels show up for the novatechDDS9m BLACS tab)\nFixed some bugs in ddsoutput widget which prevented all freq/amp/phase widgets from being displayed (an exception was always raised)", "markup": "markdown", "html": "<p>Added ability to force relayout of objects (seemed to need to do this to make DDS channels show up for the novatechDDS9m BLACS tab)<br />\nFixed some bugs in ddsoutput widget which prevented all freq/amp/phase widgets from being displayed (an exception was always raised)</p>", "type": "rendered"}}, "hash": "673ee70916f96ecd4853597ec7728490e70d5528", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/673ee70916f96ecd4853597ec7728490e70d5528.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/673ee70916f96ecd4853597ec7728490e70d5528/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/673ee70916f96ecd4853597ec7728490e70d5528"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/673ee70916f96ecd4853597ec7728490e70d5528"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/673ee70916f96ecd4853597ec7728490e70d5528"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/673ee70916f96ecd4853597ec7728490e70d5528/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/673ee70916f96ecd4853597ec7728490e70d5528/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added ability to force relayout of objects (seemed to need to do this to make DDS channels show up for the novatechDDS9m BLACS tab)\nFixed some bugs in ddsoutput widget which prevented all freq/amp/phase widgets from being displayed (an exception was always raised)", "markup": "markdown", "html": "<p>Added ability to force relayout of objects (seemed to need to do this to make DDS channels show up for the novatechDDS9m BLACS tab)<br />\nFixed some bugs in ddsoutput widget which prevented all freq/amp/phase widgets from being displayed (an exception was always raised)</p>", "type": "rendered"}, "parents": [{"hash": "21fca10f641f88a3b3ce98d6984bd33140a663c1", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/21fca10f641f88a3b3ce98d6984bd33140a663c1.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/21fca10f641f88a3b3ce98d6984bd33140a663c1"}}}], "date": "2013-04-26T00:01:44+00:00", "message": "Added ability to force relayout of objects (seemed to need to do this to make DDS channels show up for the novatechDDS9m BLACS tab)\nFixed some bugs in ddsoutput widget which prevented all freq/amp/phase widgets from being displayed (an exception was always raised)", "type": "commit"}, {"rendered": {"message": {"raw": "Created a DDS widget from 3 AO widgets and one DO widget", "markup": "markdown", "html": "<p>Created a DDS widget from 3 AO widgets and one DO widget</p>", "type": "rendered"}}, "hash": "21fca10f641f88a3b3ce98d6984bd33140a663c1", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/21fca10f641f88a3b3ce98d6984bd33140a663c1.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/21fca10f641f88a3b3ce98d6984bd33140a663c1/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/21fca10f641f88a3b3ce98d6984bd33140a663c1"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/21fca10f641f88a3b3ce98d6984bd33140a663c1"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/21fca10f641f88a3b3ce98d6984bd33140a663c1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/21fca10f641f88a3b3ce98d6984bd33140a663c1/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/21fca10f641f88a3b3ce98d6984bd33140a663c1/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Created a DDS widget from 3 AO widgets and one DO widget", "markup": "markdown", "html": "<p>Created a DDS widget from 3 AO widgets and one DO widget</p>", "type": "rendered"}, "parents": [{"hash": "01326686be3884f6ccf342b3e92d1cad12e99f82", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/01326686be3884f6ccf342b3e92d1cad12e99f82.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/01326686be3884f6ccf342b3e92d1cad12e99f82"}}}], "date": "2013-04-14T23:24:33+00:00", "message": "Created a DDS widget from 3 AO widgets and one DO widget", "type": "commit"}, {"rendered": {"message": {"raw": "Removed a print line", "markup": "markdown", "html": "<p>Removed a print line</p>", "type": "rendered"}}, "hash": "01326686be3884f6ccf342b3e92d1cad12e99f82", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/01326686be3884f6ccf342b3e92d1cad12e99f82.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/01326686be3884f6ccf342b3e92d1cad12e99f82/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/01326686be3884f6ccf342b3e92d1cad12e99f82"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/01326686be3884f6ccf342b3e92d1cad12e99f82"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/01326686be3884f6ccf342b3e92d1cad12e99f82"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/01326686be3884f6ccf342b3e92d1cad12e99f82/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/01326686be3884f6ccf342b3e92d1cad12e99f82/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Removed a print line", "markup": "markdown", "html": "<p>Removed a print line</p>", "type": "rendered"}, "parents": [{"hash": "de61b50eeabfd1f6d75a50a50278cf0105834c2a", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/de61b50eeabfd1f6d75a50a50278cf0105834c2a.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/de61b50eeabfd1f6d75a50a50278cf0105834c2a"}}}], "date": "2013-02-20T03:14:16+00:00", "message": "Removed a print line", "type": "commit"}, {"rendered": {"message": {"raw": "fixed a typo in qtutils\nAdded a method to ToolPaletteGroup which checks for the existence of a group by name", "markup": "markdown", "html": "<p>fixed a typo in qtutils<br />\nAdded a method to ToolPaletteGroup which checks for the existence of a group by name</p>", "type": "rendered"}}, "hash": "de61b50eeabfd1f6d75a50a50278cf0105834c2a", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/de61b50eeabfd1f6d75a50a50278cf0105834c2a.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/de61b50eeabfd1f6d75a50a50278cf0105834c2a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/de61b50eeabfd1f6d75a50a50278cf0105834c2a"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/de61b50eeabfd1f6d75a50a50278cf0105834c2a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/de61b50eeabfd1f6d75a50a50278cf0105834c2a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/de61b50eeabfd1f6d75a50a50278cf0105834c2a/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/de61b50eeabfd1f6d75a50a50278cf0105834c2a/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "fixed a typo in qtutils\nAdded a method to ToolPaletteGroup which checks for the existence of a group by name", "markup": "markdown", "html": "<p>fixed a typo in qtutils<br />\nAdded a method to ToolPaletteGroup which checks for the existence of a group by name</p>", "type": "rendered"}, "parents": [{"hash": "35aa1a8d6817fc3449217442f973a533a845e954", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/35aa1a8d6817fc3449217442f973a533a845e954.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/35aa1a8d6817fc3449217442f973a533a845e954"}}}], "date": "2013-02-01T06:21:03+00:00", "message": "fixed a typo in qtutils\nAdded a method to ToolPaletteGroup which checks for the existence of a group by name", "type": "commit"}, {"rendered": {"message": {"raw": "Merge", "markup": "markdown", "html": "<p>Merge</p>", "type": "rendered"}}, "hash": "35aa1a8d6817fc3449217442f973a533a845e954", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/35aa1a8d6817fc3449217442f973a533a845e954.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/35aa1a8d6817fc3449217442f973a533a845e954/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/35aa1a8d6817fc3449217442f973a533a845e954"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/35aa1a8d6817fc3449217442f973a533a845e954"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/35aa1a8d6817fc3449217442f973a533a845e954/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/35aa1a8d6817fc3449217442f973a533a845e954/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merge", "markup": "markdown", "html": "<p>Merge</p>", "type": "rendered"}, "parents": [{"hash": "82b856c344bab9bf35990999733ee19c8d592c29", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/82b856c344bab9bf35990999733ee19c8d592c29.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/82b856c344bab9bf35990999733ee19c8d592c29"}}}, {"hash": "d79784cdeacc643534166e678f8b6ebb6ab8e3d6", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/d79784cdeacc643534166e678f8b6ebb6ab8e3d6.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/d79784cdeacc643534166e678f8b6ebb6ab8e3d6"}}}], "date": "2013-01-30T00:45:01+00:00", "message": "Merge", "type": "commit"}, {"rendered": {"message": {"raw": "Merge", "markup": "markdown", "html": "<p>Merge</p>", "type": "rendered"}}, "hash": "82b856c344bab9bf35990999733ee19c8d592c29", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/82b856c344bab9bf35990999733ee19c8d592c29.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/82b856c344bab9bf35990999733ee19c8d592c29/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/82b856c344bab9bf35990999733ee19c8d592c29"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/82b856c344bab9bf35990999733ee19c8d592c29"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/82b856c344bab9bf35990999733ee19c8d592c29/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/82b856c344bab9bf35990999733ee19c8d592c29/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merge", "markup": "markdown", "html": "<p>Merge</p>", "type": "rendered"}, "parents": [{"hash": "0921e9ce3eb40ef63c0909d83855d9550fce2259", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/0921e9ce3eb40ef63c0909d83855d9550fce2259.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/0921e9ce3eb40ef63c0909d83855d9550fce2259"}}}, {"hash": "49e01f79a7ce3046d07f5109cf438b72791aef71", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/49e01f79a7ce3046d07f5109cf438b72791aef71.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/49e01f79a7ce3046d07f5109cf438b72791aef71"}}}], "date": "2013-01-30T00:44:38+00:00", "message": "Merge", "type": "commit"}, {"rendered": {"message": {"raw": "Made invoke_in_main raise any exceptions in the callin thread, rather than the\nmain thread. This way the caller can catch them.", "markup": "markdown", "html": "<p>Made invoke_in_main raise any exceptions in the callin thread, rather than the<br />\nmain thread. This way the caller can catch them.</p>", "type": "rendered"}}, "hash": "0921e9ce3eb40ef63c0909d83855d9550fce2259", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/0921e9ce3eb40ef63c0909d83855d9550fce2259.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/0921e9ce3eb40ef63c0909d83855d9550fce2259/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/0921e9ce3eb40ef63c0909d83855d9550fce2259"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/0921e9ce3eb40ef63c0909d83855d9550fce2259"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/0921e9ce3eb40ef63c0909d83855d9550fce2259"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/0921e9ce3eb40ef63c0909d83855d9550fce2259/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/0921e9ce3eb40ef63c0909d83855d9550fce2259/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Made invoke_in_main raise any exceptions in the callin thread, rather than the\nmain thread. This way the caller can catch them.", "markup": "markdown", "html": "<p>Made invoke_in_main raise any exceptions in the callin thread, rather than the<br />\nmain thread. This way the caller can catch them.</p>", "type": "rendered"}, "parents": [{"hash": "b40f243071d95d70a16c46d40e97c5ec6f9ca0db", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/b40f243071d95d70a16c46d40e97c5ec6f9ca0db.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/b40f243071d95d70a16c46d40e97c5ec6f9ca0db"}}}], "date": "2013-01-30T00:44:29+00:00", "message": "Made invoke_in_main raise any exceptions in the callin thread, rather than the\nmain thread. This way the caller can catch them.", "type": "commit"}, {"rendered": {"message": {"raw": "Added change step size function to the Analog output (this was much easier in Qt than GTK!)", "markup": "markdown", "html": "<p>Added change step size function to the Analog output (this was much easier in Qt than GTK!)</p>", "type": "rendered"}}, "hash": "d79784cdeacc643534166e678f8b6ebb6ab8e3d6", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/d79784cdeacc643534166e678f8b6ebb6ab8e3d6.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/d79784cdeacc643534166e678f8b6ebb6ab8e3d6/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/d79784cdeacc643534166e678f8b6ebb6ab8e3d6"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/d79784cdeacc643534166e678f8b6ebb6ab8e3d6"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/d79784cdeacc643534166e678f8b6ebb6ab8e3d6"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/d79784cdeacc643534166e678f8b6ebb6ab8e3d6/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/d79784cdeacc643534166e678f8b6ebb6ab8e3d6/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added change step size function to the Analog output (this was much easier in Qt than GTK!)", "markup": "markdown", "html": "<p>Added change step size function to the Analog output (this was much easier in Qt than GTK!)</p>", "type": "rendered"}, "parents": [{"hash": "baf51efdc17b0ec2042059b7af28081049599c5d", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/baf51efdc17b0ec2042059b7af28081049599c5d.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/baf51efdc17b0ec2042059b7af28081049599c5d"}}}], "date": "2013-01-29T23:42:58+00:00", "message": "Added change step size function to the Analog output (this was much easier in Qt than GTK!)", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a typo in a function name", "markup": "markdown", "html": "<p>Fixed a typo in a function name</p>", "type": "rendered"}}, "hash": "baf51efdc17b0ec2042059b7af28081049599c5d", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/baf51efdc17b0ec2042059b7af28081049599c5d.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/baf51efdc17b0ec2042059b7af28081049599c5d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/baf51efdc17b0ec2042059b7af28081049599c5d"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/baf51efdc17b0ec2042059b7af28081049599c5d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/baf51efdc17b0ec2042059b7af28081049599c5d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/baf51efdc17b0ec2042059b7af28081049599c5d/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/baf51efdc17b0ec2042059b7af28081049599c5d/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed a typo in a function name", "markup": "markdown", "html": "<p>Fixed a typo in a function name</p>", "type": "rendered"}, "parents": [{"hash": "8a1d0d00ed2b7fe313ecabed3afd9a2b5cac91e5", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/8a1d0d00ed2b7fe313ecabed3afd9a2b5cac91e5.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/8a1d0d00ed2b7fe313ecabed3afd9a2b5cac91e5"}}}], "date": "2013-01-29T03:08:02+00:00", "message": "Fixed a typo in a function name", "type": "commit"}, {"rendered": {"message": {"raw": "disabled keyboard tracking. The valueCanged event should not be trigered until the user hits enter/etc", "markup": "markdown", "html": "<p>disabled keyboard tracking. The valueCanged event should not be trigered until the user hits enter/etc</p>", "type": "rendered"}}, "hash": "8a1d0d00ed2b7fe313ecabed3afd9a2b5cac91e5", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/8a1d0d00ed2b7fe313ecabed3afd9a2b5cac91e5.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/8a1d0d00ed2b7fe313ecabed3afd9a2b5cac91e5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/8a1d0d00ed2b7fe313ecabed3afd9a2b5cac91e5"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/8a1d0d00ed2b7fe313ecabed3afd9a2b5cac91e5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/8a1d0d00ed2b7fe313ecabed3afd9a2b5cac91e5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/8a1d0d00ed2b7fe313ecabed3afd9a2b5cac91e5/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/8a1d0d00ed2b7fe313ecabed3afd9a2b5cac91e5/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "disabled keyboard tracking. The valueCanged event should not be trigered until the user hits enter/etc", "markup": "markdown", "html": "<p>disabled keyboard tracking. The valueCanged event should not be trigered until the user hits enter/etc</p>", "type": "rendered"}, "parents": [{"hash": "d66c186b831b1e63f6dbd61be0aee489cb867073", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/d66c186b831b1e63f6dbd61be0aee489cb867073.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/d66c186b831b1e63f6dbd61be0aee489cb867073"}}}], "date": "2013-01-29T02:52:21+00:00", "message": "disabled keyboard tracking. The valueCanged event should not be trigered until the user hits enter/etc", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed the bug where clicking a combobox (that has an associated model) would freeze the program.\nIt turns out that Bilbo had written a message handler to promote Qt Warnings to exceptions (in qtutils/__init__.py). Clicking a combobox with a model throws a Qt Warning \"QAccessibleWidget::rect: This implementation does not support subelements! (ID 1 unknown for QWidget)\" which we might want to fix later.\nThe message handler raised an exception, which never showed and locked up the application. Apparently you can't raise exceptions there (maybe it is a pyside bug, who knows!)", "markup": "markdown", "html": "<p>Fixed the bug where clicking a combobox (that has an associated model) would freeze the program.<br />\nIt turns out that Bilbo had written a message handler to promote Qt Warnings to exceptions (in qtutils/<strong>init</strong>.py). Clicking a combobox with a model throws a Qt Warning \"QAccessibleWidget::rect: This implementation does not support subelements! (ID 1 unknown for QWidget)\" which we might want to fix later.<br />\nThe message handler raised an exception, which never showed and locked up the application. Apparently you can't raise exceptions there (maybe it is a pyside bug, who knows!)</p>", "type": "rendered"}}, "hash": "d66c186b831b1e63f6dbd61be0aee489cb867073", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/d66c186b831b1e63f6dbd61be0aee489cb867073.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/d66c186b831b1e63f6dbd61be0aee489cb867073/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/d66c186b831b1e63f6dbd61be0aee489cb867073"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/d66c186b831b1e63f6dbd61be0aee489cb867073"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/d66c186b831b1e63f6dbd61be0aee489cb867073"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/d66c186b831b1e63f6dbd61be0aee489cb867073/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/d66c186b831b1e63f6dbd61be0aee489cb867073/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed the bug where clicking a combobox (that has an associated model) would freeze the program.\nIt turns out that Bilbo had written a message handler to promote Qt Warnings to exceptions (in qtutils/__init__.py). Clicking a combobox with a model throws a Qt Warning \"QAccessibleWidget::rect: This implementation does not support subelements! (ID 1 unknown for QWidget)\" which we might want to fix later.\nThe message handler raised an exception, which never showed and locked up the application. Apparently you can't raise exceptions there (maybe it is a pyside bug, who knows!)", "markup": "markdown", "html": "<p>Fixed the bug where clicking a combobox (that has an associated model) would freeze the program.<br />\nIt turns out that Bilbo had written a message handler to promote Qt Warnings to exceptions (in qtutils/<strong>init</strong>.py). Clicking a combobox with a model throws a Qt Warning \"QAccessibleWidget::rect: This implementation does not support subelements! (ID 1 unknown for QWidget)\" which we might want to fix later.<br />\nThe message handler raised an exception, which never showed and locked up the application. Apparently you can't raise exceptions there (maybe it is a pyside bug, who knows!)</p>", "type": "rendered"}, "parents": [{"hash": "2f070de5b95fffe6ff4b48bf1aaa6ef6d1914172", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/2f070de5b95fffe6ff4b48bf1aaa6ef6d1914172.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/2f070de5b95fffe6ff4b48bf1aaa6ef6d1914172"}}}], "date": "2013-01-29T02:42:20+00:00", "message": "Fixed the bug where clicking a combobox (that has an associated model) would freeze the program.\nIt turns out that Bilbo had written a message handler to promote Qt Warnings to exceptions (in qtutils/__init__.py). Clicking a combobox with a model throws a Qt Warning \"QAccessibleWidget::rect: This implementation does not support subelements! (ID 1 unknown for QWidget)\" which we might want to fix later.\nThe message handler raised an exception, which never showed and locked up the application. Apparently you can't raise exceptions there (maybe it is a pyside bug, who knows!)", "type": "commit"}, {"rendered": {"message": {"raw": "Wrote a test to use these in BLACS/output_classes.py and thus fixed some bugs\n\nStill have a a weird bug where clicking a combobox with a model causes the application to stop responding...", "markup": "markdown", "html": "<p>Wrote a test to use these in BLACS/output_classes.py and thus fixed some bugs</p>\n<p>Still have a a weird bug where clicking a combobox with a model causes the application to stop responding...</p>", "type": "rendered"}}, "hash": "2f070de5b95fffe6ff4b48bf1aaa6ef6d1914172", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/2f070de5b95fffe6ff4b48bf1aaa6ef6d1914172.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/2f070de5b95fffe6ff4b48bf1aaa6ef6d1914172/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/2f070de5b95fffe6ff4b48bf1aaa6ef6d1914172"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/2f070de5b95fffe6ff4b48bf1aaa6ef6d1914172"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/2f070de5b95fffe6ff4b48bf1aaa6ef6d1914172"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/2f070de5b95fffe6ff4b48bf1aaa6ef6d1914172/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/2f070de5b95fffe6ff4b48bf1aaa6ef6d1914172/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Wrote a test to use these in BLACS/output_classes.py and thus fixed some bugs\n\nStill have a a weird bug where clicking a combobox with a model causes the application to stop responding...", "markup": "markdown", "html": "<p>Wrote a test to use these in BLACS/output_classes.py and thus fixed some bugs</p>\n<p>Still have a a weird bug where clicking a combobox with a model causes the application to stop responding...</p>", "type": "rendered"}, "parents": [{"hash": "259bf94ae3fc904ed63a4218da91508dd793856a", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/259bf94ae3fc904ed63a4218da91508dd793856a.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/259bf94ae3fc904ed63a4218da91508dd793856a"}}}], "date": "2013-01-28T10:33:33+00:00", "message": "Wrote a test to use these in BLACS/output_classes.py and thus fixed some bugs\n\nStill have a a weird bug where clicking a combobox with a model causes the application to stop responding...", "type": "commit"}, {"rendered": {"message": {"raw": "Modified the digital/analog out classes to stop recursion of lock states and to integrate with the new AO/DO output class in BLACS", "markup": "markdown", "html": "<p>Modified the digital/analog out classes to stop recursion of lock states and to integrate with the new AO/DO output class in BLACS</p>", "type": "rendered"}}, "hash": "259bf94ae3fc904ed63a4218da91508dd793856a", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/259bf94ae3fc904ed63a4218da91508dd793856a.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/259bf94ae3fc904ed63a4218da91508dd793856a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/259bf94ae3fc904ed63a4218da91508dd793856a"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/259bf94ae3fc904ed63a4218da91508dd793856a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/259bf94ae3fc904ed63a4218da91508dd793856a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/259bf94ae3fc904ed63a4218da91508dd793856a/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/259bf94ae3fc904ed63a4218da91508dd793856a/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Modified the digital/analog out classes to stop recursion of lock states and to integrate with the new AO/DO output class in BLACS", "markup": "markdown", "html": "<p>Modified the digital/analog out classes to stop recursion of lock states and to integrate with the new AO/DO output class in BLACS</p>", "type": "rendered"}, "parents": [{"hash": "0921d1f80bf0b8331ca2318541c531527150d287", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/0921d1f80bf0b8331ca2318541c531527150d287.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/0921d1f80bf0b8331ca2318541c531527150d287"}}}], "date": "2013-01-28T06:16:07+00:00", "message": "Modified the digital/analog out classes to stop recursion of lock states and to integrate with the new AO/DO output class in BLACS", "type": "commit"}, {"rendered": {"message": {"raw": "Created analogoutput widget that can be locked/unlocked. The combobox currently stays unlocked and you cannot get to the lock item in the contxt menu of the combobox.\n\nWill need some work to integrate with an AO class (eg linking comboboxes to a common model, etc)", "markup": "markdown", "html": "<p>Created analogoutput widget that can be locked/unlocked. The combobox currently stays unlocked and you cannot get to the lock item in the contxt menu of the combobox.</p>\n<p>Will need some work to integrate with an AO class (eg linking comboboxes to a common model, etc)</p>", "type": "rendered"}}, "hash": "0921d1f80bf0b8331ca2318541c531527150d287", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/0921d1f80bf0b8331ca2318541c531527150d287.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/0921d1f80bf0b8331ca2318541c531527150d287/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/0921d1f80bf0b8331ca2318541c531527150d287"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/0921d1f80bf0b8331ca2318541c531527150d287"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/0921d1f80bf0b8331ca2318541c531527150d287"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/0921d1f80bf0b8331ca2318541c531527150d287/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/0921d1f80bf0b8331ca2318541c531527150d287/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Created analogoutput widget that can be locked/unlocked. The combobox currently stays unlocked and you cannot get to the lock item in the contxt menu of the combobox.\n\nWill need some work to integrate with an AO class (eg linking comboboxes to a common model, etc)", "markup": "markdown", "html": "<p>Created analogoutput widget that can be locked/unlocked. The combobox currently stays unlocked and you cannot get to the lock item in the contxt menu of the combobox.</p>\n<p>Will need some work to integrate with an AO class (eg linking comboboxes to a common model, etc)</p>", "type": "rendered"}, "parents": [{"hash": "add978295111f423962dafdb95c6339e9bcb64a6", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/add978295111f423962dafdb95c6339e9bcb64a6.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/add978295111f423962dafdb95c6339e9bcb64a6"}}}], "date": "2013-01-25T00:27:55+00:00", "message": "Created analogoutput widget that can be locked/unlocked. The combobox currently stays unlocked and you cannot get to the lock item in the contxt menu of the combobox.\n\nWill need some work to integrate with an AO class (eg linking comboboxes to a common model, etc)", "type": "commit"}, {"rendered": {"message": {"raw": "Created a digital output widget that is effectively a checkable QPushButton that also has a right click menu to lock/unlock the widget (which works even if the widget is disabled via setEnabled(False), meaning we don't have to implement the horrible hack we did in GTK to change the widget theme and foribly set the button state back to what it was when someone clicked it!).\n\nMade the example toolpalette accept style arguments from the commandline (I like using -style cleanlooks)", "markup": "markdown", "html": "<p>Created a digital output widget that is effectively a checkable QPushButton that also has a right click menu to lock/unlock the widget (which works even if the widget is disabled via setEnabled(False), meaning we don't have to implement the horrible hack we did in GTK to change the widget theme and foribly set the button state back to what it was when someone clicked it!).</p>\n<p>Made the example toolpalette accept style arguments from the commandline (I like using -style cleanlooks)</p>", "type": "rendered"}}, "hash": "add978295111f423962dafdb95c6339e9bcb64a6", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/add978295111f423962dafdb95c6339e9bcb64a6.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/add978295111f423962dafdb95c6339e9bcb64a6/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/add978295111f423962dafdb95c6339e9bcb64a6"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/add978295111f423962dafdb95c6339e9bcb64a6"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/add978295111f423962dafdb95c6339e9bcb64a6"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/add978295111f423962dafdb95c6339e9bcb64a6/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/add978295111f423962dafdb95c6339e9bcb64a6/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Created a digital output widget that is effectively a checkable QPushButton that also has a right click menu to lock/unlock the widget (which works even if the widget is disabled via setEnabled(False), meaning we don't have to implement the horrible hack we did in GTK to change the widget theme and foribly set the button state back to what it was when someone clicked it!).\n\nMade the example toolpalette accept style arguments from the commandline (I like using -style cleanlooks)", "markup": "markdown", "html": "<p>Created a digital output widget that is effectively a checkable QPushButton that also has a right click menu to lock/unlock the widget (which works even if the widget is disabled via setEnabled(False), meaning we don't have to implement the horrible hack we did in GTK to change the widget theme and foribly set the button state back to what it was when someone clicked it!).</p>\n<p>Made the example toolpalette accept style arguments from the commandline (I like using -style cleanlooks)</p>", "type": "rendered"}, "parents": [{"hash": "5e366a98b873b7cd01b8ed95629d06e17e9a3e50", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/5e366a98b873b7cd01b8ed95629d06e17e9a3e50.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/5e366a98b873b7cd01b8ed95629d06e17e9a3e50"}}}], "date": "2013-01-20T04:57:49+00:00", "message": "Created a digital output widget that is effectively a checkable QPushButton that also has a right click menu to lock/unlock the widget (which works even if the widget is disabled via setEnabled(False), meaning we don't have to implement the horrible hack we did in GTK to change the widget theme and foribly set the button state back to what it was when someone clicked it!).\n\nMade the example toolpalette accept style arguments from the commandline (I like using -style cleanlooks)", "type": "commit"}, {"rendered": {"message": {"raw": "Made a toolpalettegroup class. This now puts hide/show buttons at the top of each ToolPalette\nYou can also link the widths of items across multiple toolpalettes so that they look nice!\nFixed a bug with the 'number of widgets in a row' calculation. This still needs a bit of work as there is a fudge factor in there still.\n\nStill need to implement an icon in the hide/show button to indicate the hide/show state (like an arrow)\nNeed to implement some reorder methods for the toolpalettegroup.\nNeed to implement remove methods for the toolpalettegroup and the linked width group\nPossibly should replace my complex dictionary/tuple structure with classes\nNeed to work out why the 'tab key' ordering is strange\n\nWould be cool if I could implement drag/drop for the toolpalletes with the toolpalette group!", "markup": "markdown", "html": "<p>Made a toolpalettegroup class. This now puts hide/show buttons at the top of each ToolPalette<br />\nYou can also link the widths of items across multiple toolpalettes so that they look nice!<br />\nFixed a bug with the 'number of widgets in a row' calculation. This still needs a bit of work as there is a fudge factor in there still.</p>\n<p>Still need to implement an icon in the hide/show button to indicate the hide/show state (like an arrow)<br />\nNeed to implement some reorder methods for the toolpalettegroup.<br />\nNeed to implement remove methods for the toolpalettegroup and the linked width group<br />\nPossibly should replace my complex dictionary/tuple structure with classes<br />\nNeed to work out why the 'tab key' ordering is strange</p>\n<p>Would be cool if I could implement drag/drop for the toolpalletes with the toolpalette group!</p>", "type": "rendered"}}, "hash": "5e366a98b873b7cd01b8ed95629d06e17e9a3e50", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/5e366a98b873b7cd01b8ed95629d06e17e9a3e50.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/5e366a98b873b7cd01b8ed95629d06e17e9a3e50/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/5e366a98b873b7cd01b8ed95629d06e17e9a3e50"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/5e366a98b873b7cd01b8ed95629d06e17e9a3e50"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/5e366a98b873b7cd01b8ed95629d06e17e9a3e50"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/5e366a98b873b7cd01b8ed95629d06e17e9a3e50/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/5e366a98b873b7cd01b8ed95629d06e17e9a3e50/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Made a toolpalettegroup class. This now puts hide/show buttons at the top of each ToolPalette\nYou can also link the widths of items across multiple toolpalettes so that they look nice!\nFixed a bug with the 'number of widgets in a row' calculation. This still needs a bit of work as there is a fudge factor in there still.\n\nStill need to implement an icon in the hide/show button to indicate the hide/show state (like an arrow)\nNeed to implement some reorder methods for the toolpalettegroup.\nNeed to implement remove methods for the toolpalettegroup and the linked width group\nPossibly should replace my complex dictionary/tuple structure with classes\nNeed to work out why the 'tab key' ordering is strange\n\nWould be cool if I could implement drag/drop for the toolpalletes with the toolpalette group!", "markup": "markdown", "html": "<p>Made a toolpalettegroup class. This now puts hide/show buttons at the top of each ToolPalette<br />\nYou can also link the widths of items across multiple toolpalettes so that they look nice!<br />\nFixed a bug with the 'number of widgets in a row' calculation. This still needs a bit of work as there is a fudge factor in there still.</p>\n<p>Still need to implement an icon in the hide/show button to indicate the hide/show state (like an arrow)<br />\nNeed to implement some reorder methods for the toolpalettegroup.<br />\nNeed to implement remove methods for the toolpalettegroup and the linked width group<br />\nPossibly should replace my complex dictionary/tuple structure with classes<br />\nNeed to work out why the 'tab key' ordering is strange</p>\n<p>Would be cool if I could implement drag/drop for the toolpalletes with the toolpalette group!</p>", "type": "rendered"}, "parents": [{"hash": "2dd8aff0eb67e0522440e3317ef938dda9a818f3", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/2dd8aff0eb67e0522440e3317ef938dda9a818f3.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/2dd8aff0eb67e0522440e3317ef938dda9a818f3"}}}], "date": "2013-01-19T06:05:00+00:00", "message": "Made a toolpalettegroup class. This now puts hide/show buttons at the top of each ToolPalette\nYou can also link the widths of items across multiple toolpalettes so that they look nice!\nFixed a bug with the 'number of widgets in a row' calculation. This still needs a bit of work as there is a fudge factor in there still.\n\nStill need to implement an icon in the hide/show button to indicate the hide/show state (like an arrow)\nNeed to implement some reorder methods for the toolpalettegroup.\nNeed to implement remove methods for the toolpalettegroup and the linked width group\nPossibly should replace my complex dictionary/tuple structure with classes\nNeed to work out why the 'tab key' ordering is strange\n\nWould be cool if I could implement drag/drop for the toolpalletes with the toolpalette group!", "type": "commit"}, {"rendered": {"message": {"raw": "Created a toolpalette widget in Qt to replace the GTK ToolPalette widget. Currently it will resize a grid layout so that you never need to scroll.\nWill now work on adding groups to the toolpalette which can be minimised\n\nAdded .hgignore file which now ignores all .pyc files", "markup": "markdown", "html": "<p>Created a toolpalette widget in Qt to replace the GTK ToolPalette widget. Currently it will resize a grid layout so that you never need to scroll.<br />\nWill now work on adding groups to the toolpalette which can be minimised</p>\n<p>Added .hgignore file which now ignores all .pyc files</p>", "type": "rendered"}}, "hash": "2dd8aff0eb67e0522440e3317ef938dda9a818f3", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/2dd8aff0eb67e0522440e3317ef938dda9a818f3.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/2dd8aff0eb67e0522440e3317ef938dda9a818f3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/2dd8aff0eb67e0522440e3317ef938dda9a818f3"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/2dd8aff0eb67e0522440e3317ef938dda9a818f3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/2dd8aff0eb67e0522440e3317ef938dda9a818f3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/2dd8aff0eb67e0522440e3317ef938dda9a818f3/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/2dd8aff0eb67e0522440e3317ef938dda9a818f3/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Created a toolpalette widget in Qt to replace the GTK ToolPalette widget. Currently it will resize a grid layout so that you never need to scroll.\nWill now work on adding groups to the toolpalette which can be minimised\n\nAdded .hgignore file which now ignores all .pyc files", "markup": "markdown", "html": "<p>Created a toolpalette widget in Qt to replace the GTK ToolPalette widget. Currently it will resize a grid layout so that you never need to scroll.<br />\nWill now work on adding groups to the toolpalette which can be minimised</p>\n<p>Added .hgignore file which now ignores all .pyc files</p>", "type": "rendered"}, "parents": [{"hash": "49e01f79a7ce3046d07f5109cf438b72791aef71", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/49e01f79a7ce3046d07f5109cf438b72791aef71.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/49e01f79a7ce3046d07f5109cf438b72791aef71"}}}], "date": "2013-01-18T23:48:17+00:00", "message": "Created a toolpalette widget in Qt to replace the GTK ToolPalette widget. Currently it will resize a grid layout so that you never need to scroll.\nWill now work on adding groups to the toolpalette which can be minimised\n\nAdded .hgignore file which now ignores all .pyc files", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed unclear variable name in invoke_in_main.py\nRenamed function in dragdroptab.py to match what it does\nRenamed dragdroptab.pyw -> dragdroptab.py", "markup": "markdown", "html": "<p>Fixed unclear variable name in invoke_in_main.py<br />\nRenamed function in dragdroptab.py to match what it does<br />\nRenamed dragdroptab.pyw -&gt; dragdroptab.py</p>", "type": "rendered"}}, "hash": "49e01f79a7ce3046d07f5109cf438b72791aef71", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/49e01f79a7ce3046d07f5109cf438b72791aef71.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/49e01f79a7ce3046d07f5109cf438b72791aef71/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/49e01f79a7ce3046d07f5109cf438b72791aef71"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/49e01f79a7ce3046d07f5109cf438b72791aef71"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/49e01f79a7ce3046d07f5109cf438b72791aef71"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/49e01f79a7ce3046d07f5109cf438b72791aef71/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/49e01f79a7ce3046d07f5109cf438b72791aef71/statuses_page=1.json"}}, "author": {"raw": "Phil@pinetab.staff.monash.edu.au", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed unclear variable name in invoke_in_main.py\nRenamed function in dragdroptab.py to match what it does\nRenamed dragdroptab.pyw -> dragdroptab.py", "markup": "markdown", "html": "<p>Fixed unclear variable name in invoke_in_main.py<br />\nRenamed function in dragdroptab.py to match what it does<br />\nRenamed dragdroptab.pyw -&gt; dragdroptab.py</p>", "type": "rendered"}, "parents": [{"hash": "9cc1ff363c04ec5f0e15d9b591664c71b6a1a3d1", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/9cc1ff363c04ec5f0e15d9b591664c71b6a1a3d1.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/9cc1ff363c04ec5f0e15d9b591664c71b6a1a3d1"}}}], "date": "2013-01-10T23:55:11+00:00", "message": "Fixed unclear variable name in invoke_in_main.py\nRenamed function in dragdroptab.py to match what it does\nRenamed dragdroptab.pyw -> dragdroptab.py", "type": "commit"}, {"rendered": {"message": {"raw": "Added the dragdroptab widget for Qt into the newly created widgets module", "markup": "markdown", "html": "<p>Added the dragdroptab widget for Qt into the newly created widgets module</p>", "type": "rendered"}}, "hash": "9cc1ff363c04ec5f0e15d9b591664c71b6a1a3d1", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/9cc1ff363c04ec5f0e15d9b591664c71b6a1a3d1.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/9cc1ff363c04ec5f0e15d9b591664c71b6a1a3d1/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/9cc1ff363c04ec5f0e15d9b591664c71b6a1a3d1"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/9cc1ff363c04ec5f0e15d9b591664c71b6a1a3d1"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/9cc1ff363c04ec5f0e15d9b591664c71b6a1a3d1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/9cc1ff363c04ec5f0e15d9b591664c71b6a1a3d1/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/9cc1ff363c04ec5f0e15d9b591664c71b6a1a3d1/statuses_page=1.json"}}, "author": {"raw": "Phil@pinetab.staff.monash.edu.au", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added the dragdroptab widget for Qt into the newly created widgets module", "markup": "markdown", "html": "<p>Added the dragdroptab widget for Qt into the newly created widgets module</p>", "type": "rendered"}, "parents": [{"hash": "9d3fffebe25b9b019a814d801eb9d1382e69c568", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/9d3fffebe25b9b019a814d801eb9d1382e69c568.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/9d3fffebe25b9b019a814d801eb9d1382e69c568"}}}], "date": "2013-01-10T23:17:43+00:00", "message": "Added the dragdroptab widget for Qt into the newly created widgets module", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a bug where you could not set wait=False when using @inmain_decorator because it threw an error about incorrect number of function arguments.", "markup": "markdown", "html": "<p>Fixed a bug where you could not set wait=False when using @inmain_decorator because it threw an error about incorrect number of function arguments.</p>", "type": "rendered"}}, "hash": "9d3fffebe25b9b019a814d801eb9d1382e69c568", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/9d3fffebe25b9b019a814d801eb9d1382e69c568.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/9d3fffebe25b9b019a814d801eb9d1382e69c568/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/9d3fffebe25b9b019a814d801eb9d1382e69c568"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/9d3fffebe25b9b019a814d801eb9d1382e69c568"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/9d3fffebe25b9b019a814d801eb9d1382e69c568"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/9d3fffebe25b9b019a814d801eb9d1382e69c568/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/9d3fffebe25b9b019a814d801eb9d1382e69c568/statuses_page=1.json"}}, "author": {"raw": "Phil@pinetab.staff.monash.edu.au", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed a bug where you could not set wait=False when using @inmain_decorator because it threw an error about incorrect number of function arguments.", "markup": "markdown", "html": "<p>Fixed a bug where you could not set wait=False when using @inmain_decorator because it threw an error about incorrect number of function arguments.</p>", "type": "rendered"}, "parents": [{"hash": "b40f243071d95d70a16c46d40e97c5ec6f9ca0db", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/b40f243071d95d70a16c46d40e97c5ec6f9ca0db.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/b40f243071d95d70a16c46d40e97c5ec6f9ca0db"}}}], "date": "2013-01-10T23:17:10+00:00", "message": "Fixed a bug where you could not set wait=False when using @inmain_decorator because it threw an error about incorrect number of function arguments.", "type": "commit"}, {"rendered": {"message": {"raw": "Added function inthread(fn, *args, **kwargs) for easily launching a function in a daemon thread.", "markup": "markdown", "html": "<p>Added function inthread(fn, <em>args, </em>*kwargs) for easily launching a function in a daemon thread.</p>", "type": "rendered"}}, "hash": "b40f243071d95d70a16c46d40e97c5ec6f9ca0db", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/b40f243071d95d70a16c46d40e97c5ec6f9ca0db.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/b40f243071d95d70a16c46d40e97c5ec6f9ca0db/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/b40f243071d95d70a16c46d40e97c5ec6f9ca0db"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/b40f243071d95d70a16c46d40e97c5ec6f9ca0db"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/b40f243071d95d70a16c46d40e97c5ec6f9ca0db"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/b40f243071d95d70a16c46d40e97c5ec6f9ca0db/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/b40f243071d95d70a16c46d40e97c5ec6f9ca0db/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added function inthread(fn, *args, **kwargs) for easily launching a function in a daemon thread.", "markup": "markdown", "html": "<p>Added function inthread(fn, <em>args, </em>*kwargs) for easily launching a function in a daemon thread.</p>", "type": "rendered"}, "parents": [{"hash": "73a9ddb98e4b54e3a6956af34c62cfcb837afade", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/73a9ddb98e4b54e3a6956af34c62cfcb837afade.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/73a9ddb98e4b54e3a6956af34c62cfcb837afade"}}}], "date": "2012-10-15T12:18:49+00:00", "message": "Added function inthread(fn, *args, **kwargs) for easily launching a function in a daemon thread.", "type": "commit"}, {"rendered": {"message": {"raw": "Added qtutils; a bunch of utilities for facilitating multithreaded programming in qt. They are:\nqtlock: a context manager which ensures the mainloop is blocked whilst it is held.\ninmain(fn,*args,**kwargs): runs a function in the mainloop, waiting on it and returning its result.\ninmain_later(fn,*args,**kwargs): ask for a function to be run in the mainloop, not waiting on it.\ninmain_decorator(wait=True): a decorator which causes decorated functions to be executed in the mainloop (and either waited on on to return or not).\n\nQt and Python are very hackable, and thanks to this the above utilities have functionality built in to protect from their misuse. Any deadlocks arising from their misuse ought to be raised as an exception, and any Qt method calls that aren't done in a threadsafe way ought to raise an exception too. Further, Qt normally spouts (contextless, impossible to see the origin of) warnings when threads are used incorrectly, these have been promoted to exceptions with full tracebacks.", "markup": "markdown", "html": "<p>Added qtutils; a bunch of utilities for facilitating multithreaded programming in qt. They are:<br />\nqtlock: a context manager which ensures the mainloop is blocked whilst it is held.<br />\ninmain(fn,*args,<strong>kwargs): runs a function in the mainloop, waiting on it and returning its result.<br />\ninmain_later(fn,*args,</strong>kwargs): ask for a function to be run in the mainloop, not waiting on it.<br />\ninmain_decorator(wait=True): a decorator which causes decorated functions to be executed in the mainloop (and either waited on on to return or not).</p>\n<p>Qt and Python are very hackable, and thanks to this the above utilities have functionality built in to protect from their misuse. Any deadlocks arising from their misuse ought to be raised as an exception, and any Qt method calls that aren't done in a threadsafe way ought to raise an exception too. Further, Qt normally spouts (contextless, impossible to see the origin of) warnings when threads are used incorrectly, these have been promoted to exceptions with full tracebacks.</p>", "type": "rendered"}}, "hash": "73a9ddb98e4b54e3a6956af34c62cfcb837afade", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/73a9ddb98e4b54e3a6956af34c62cfcb837afade.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/73a9ddb98e4b54e3a6956af34c62cfcb837afade/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/73a9ddb98e4b54e3a6956af34c62cfcb837afade"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/73a9ddb98e4b54e3a6956af34c62cfcb837afade"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/73a9ddb98e4b54e3a6956af34c62cfcb837afade"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/73a9ddb98e4b54e3a6956af34c62cfcb837afade/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/73a9ddb98e4b54e3a6956af34c62cfcb837afade/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added qtutils; a bunch of utilities for facilitating multithreaded programming in qt. They are:\nqtlock: a context manager which ensures the mainloop is blocked whilst it is held.\ninmain(fn,*args,**kwargs): runs a function in the mainloop, waiting on it and returning its result.\ninmain_later(fn,*args,**kwargs): ask for a function to be run in the mainloop, not waiting on it.\ninmain_decorator(wait=True): a decorator which causes decorated functions to be executed in the mainloop (and either waited on on to return or not).\n\nQt and Python are very hackable, and thanks to this the above utilities have functionality built in to protect from their misuse. Any deadlocks arising from their misuse ought to be raised as an exception, and any Qt method calls that aren't done in a threadsafe way ought to raise an exception too. Further, Qt normally spouts (contextless, impossible to see the origin of) warnings when threads are used incorrectly, these have been promoted to exceptions with full tracebacks.", "markup": "markdown", "html": "<p>Added qtutils; a bunch of utilities for facilitating multithreaded programming in qt. They are:<br />\nqtlock: a context manager which ensures the mainloop is blocked whilst it is held.<br />\ninmain(fn,*args,<strong>kwargs): runs a function in the mainloop, waiting on it and returning its result.<br />\ninmain_later(fn,*args,</strong>kwargs): ask for a function to be run in the mainloop, not waiting on it.<br />\ninmain_decorator(wait=True): a decorator which causes decorated functions to be executed in the mainloop (and either waited on on to return or not).</p>\n<p>Qt and Python are very hackable, and thanks to this the above utilities have functionality built in to protect from their misuse. Any deadlocks arising from their misuse ought to be raised as an exception, and any Qt method calls that aren't done in a threadsafe way ought to raise an exception too. Further, Qt normally spouts (contextless, impossible to see the origin of) warnings when threads are used incorrectly, these have been promoted to exceptions with full tracebacks.</p>", "type": "rendered"}, "parents": [], "date": "2012-10-14T12:16:22+00:00", "message": "Added qtutils; a bunch of utilities for facilitating multithreaded programming in qt. They are:\nqtlock: a context manager which ensures the mainloop is blocked whilst it is held.\ninmain(fn,*args,**kwargs): runs a function in the mainloop, waiting on it and returning its result.\ninmain_later(fn,*args,**kwargs): ask for a function to be run in the mainloop, not waiting on it.\ninmain_decorator(wait=True): a decorator which causes decorated functions to be executed in the mainloop (and either waited on on to return or not).\n\nQt and Python are very hackable, and thanks to this the above utilities have functionality built in to protect from their misuse. Any deadlocks arising from their misuse ought to be raised as an exception, and any Qt method calls that aren't done in a threadsafe way ought to raise an exception too. Further, Qt normally spouts (contextless, impossible to see the origin of) warnings when threads are used incorrectly, these have been promoted to exceptions with full tracebacks.", "type": "commit"}, {"rendered": {"message": {"raw": "added unitconversions as a subpackage", "markup": "markdown", "html": "<p>added unitconversions as a subpackage</p>", "type": "rendered"}}, "hash": "bc9ab3a54b577c8625cf13479847f1f3cf1a2629", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/bc9ab3a54b577c8625cf13479847f1f3cf1a2629.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/bc9ab3a54b577c8625cf13479847f1f3cf1a2629/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/bc9ab3a54b577c8625cf13479847f1f3cf1a2629"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/bc9ab3a54b577c8625cf13479847f1f3cf1a2629"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/bc9ab3a54b577c8625cf13479847f1f3cf1a2629"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/bc9ab3a54b577c8625cf13479847f1f3cf1a2629/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/bc9ab3a54b577c8625cf13479847f1f3cf1a2629/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "added unitconversions as a subpackage", "markup": "markdown", "html": "<p>added unitconversions as a subpackage</p>", "type": "rendered"}, "parents": [{"hash": "137c3ba033b7506fc63467f56f1580fc9ea97e11", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/137c3ba033b7506fc63467f56f1580fc9ea97e11.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/137c3ba033b7506fc63467f56f1580fc9ea97e11"}}}], "date": "2014-01-24T03:45:19+00:00", "message": "added unitconversions as a subpackage", "type": "commit"}, {"rendered": {"message": {"raw": "Added default Novatech DDS unit conversions and modified aom.py to subclass this.", "markup": "markdown", "html": "<p>Added default Novatech DDS unit conversions and modified aom.py to subclass this.</p>", "type": "rendered"}}, "hash": "137c3ba033b7506fc63467f56f1580fc9ea97e11", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/137c3ba033b7506fc63467f56f1580fc9ea97e11.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/137c3ba033b7506fc63467f56f1580fc9ea97e11/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/137c3ba033b7506fc63467f56f1580fc9ea97e11"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/137c3ba033b7506fc63467f56f1580fc9ea97e11"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/137c3ba033b7506fc63467f56f1580fc9ea97e11"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/137c3ba033b7506fc63467f56f1580fc9ea97e11/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/137c3ba033b7506fc63467f56f1580fc9ea97e11/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added default Novatech DDS unit conversions and modified aom.py to subclass this.", "markup": "markdown", "html": "<p>Added default Novatech DDS unit conversions and modified aom.py to subclass this.</p>", "type": "rendered"}, "parents": [{"hash": "936799ada71b9664d269fc5bb7d82e8b007c8a8c", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/936799ada71b9664d269fc5bb7d82e8b007c8a8c.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/936799ada71b9664d269fc5bb7d82e8b007c8a8c"}}}], "date": "2013-12-11T06:18:09+00:00", "message": "Added default Novatech DDS unit conversions and modified aom.py to subclass this.", "type": "commit"}, {"rendered": {"message": {"raw": "Phase unwrapping for cos", "markup": "markdown", "html": "<p>Phase unwrapping for cos</p>", "type": "rendered"}}, "hash": "936799ada71b9664d269fc5bb7d82e8b007c8a8c", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/936799ada71b9664d269fc5bb7d82e8b007c8a8c.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/936799ada71b9664d269fc5bb7d82e8b007c8a8c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/936799ada71b9664d269fc5bb7d82e8b007c8a8c"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/936799ada71b9664d269fc5bb7d82e8b007c8a8c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/936799ada71b9664d269fc5bb7d82e8b007c8a8c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/936799ada71b9664d269fc5bb7d82e8b007c8a8c/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/936799ada71b9664d269fc5bb7d82e8b007c8a8c/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Phase unwrapping for cos", "markup": "markdown", "html": "<p>Phase unwrapping for cos</p>", "type": "rendered"}, "parents": [{"hash": "b0cc80261b5d5a5fa904ea1fa2744e126ae314fc", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/b0cc80261b5d5a5fa904ea1fa2744e126ae314fc.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/b0cc80261b5d5a5fa904ea1fa2744e126ae314fc"}}}], "date": "2013-11-29T05:16:52+00:00", "message": "Phase unwrapping for cos", "type": "commit"}, {"rendered": {"message": {"raw": "Calibration updates.. Hopefully works now!", "markup": "markdown", "html": "<p>Calibration updates.. Hopefully works now!</p>", "type": "rendered"}}, "hash": "b0cc80261b5d5a5fa904ea1fa2744e126ae314fc", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/b0cc80261b5d5a5fa904ea1fa2744e126ae314fc.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/b0cc80261b5d5a5fa904ea1fa2744e126ae314fc/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/b0cc80261b5d5a5fa904ea1fa2744e126ae314fc"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/b0cc80261b5d5a5fa904ea1fa2744e126ae314fc"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/b0cc80261b5d5a5fa904ea1fa2744e126ae314fc"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/b0cc80261b5d5a5fa904ea1fa2744e126ae314fc/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/b0cc80261b5d5a5fa904ea1fa2744e126ae314fc/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Calibration updates.. Hopefully works now!", "markup": "markdown", "html": "<p>Calibration updates.. Hopefully works now!</p>", "type": "rendered"}, "parents": [{"hash": "196c4e8c2b80dfb4b9dd4b3f0c4a21f324d24a7b", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/196c4e8c2b80dfb4b9dd4b3f0c4a21f324d24a7b.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/196c4e8c2b80dfb4b9dd4b3f0c4a21f324d24a7b"}}}], "date": "2013-11-29T04:12:31+00:00", "message": "Calibration updates.. Hopefully works now!", "type": "commit"}, {"rendered": {"message": {"raw": "Default values", "markup": "markdown", "html": "<p>Default values</p>", "type": "rendered"}}, "hash": "196c4e8c2b80dfb4b9dd4b3f0c4a21f324d24a7b", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/196c4e8c2b80dfb4b9dd4b3f0c4a21f324d24a7b.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/196c4e8c2b80dfb4b9dd4b3f0c4a21f324d24a7b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/196c4e8c2b80dfb4b9dd4b3f0c4a21f324d24a7b"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/196c4e8c2b80dfb4b9dd4b3f0c4a21f324d24a7b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/196c4e8c2b80dfb4b9dd4b3f0c4a21f324d24a7b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/196c4e8c2b80dfb4b9dd4b3f0c4a21f324d24a7b/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/196c4e8c2b80dfb4b9dd4b3f0c4a21f324d24a7b/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Default values", "markup": "markdown", "html": "<p>Default values</p>", "type": "rendered"}, "parents": [{"hash": "2921c28cbdb4b3a0cda617ce84ae42ee7c53ae9d", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/2921c28cbdb4b3a0cda617ce84ae42ee7c53ae9d.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/2921c28cbdb4b3a0cda617ce84ae42ee7c53ae9d"}}}], "date": "2013-11-29T03:39:03+00:00", "message": "Default values", "type": "commit"}, {"rendered": {"message": {"raw": "Sine AOM calibration", "markup": "markdown", "html": "<p>Sine AOM calibration</p>", "type": "rendered"}}, "hash": "2921c28cbdb4b3a0cda617ce84ae42ee7c53ae9d", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/2921c28cbdb4b3a0cda617ce84ae42ee7c53ae9d.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/2921c28cbdb4b3a0cda617ce84ae42ee7c53ae9d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/2921c28cbdb4b3a0cda617ce84ae42ee7c53ae9d"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/2921c28cbdb4b3a0cda617ce84ae42ee7c53ae9d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/2921c28cbdb4b3a0cda617ce84ae42ee7c53ae9d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/2921c28cbdb4b3a0cda617ce84ae42ee7c53ae9d/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/2921c28cbdb4b3a0cda617ce84ae42ee7c53ae9d/statuses_page=1.json"}}, "author": {"raw": "mikhaile", "type": "author", "user": {"display_name": "Michael Egorov", "uuid": "{7a86d5f9-94e5-4e78-85c3-9a0b7449b521}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a86d5f9-94e5-4e78-85c3-9a0b7449b521%7D"}, "html": {"href": "https://bitbucket.org/%7B7a86d5f9-94e5-4e78-85c3-9a0b7449b521%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/02acafd08a78a15add6bb0a0d85dd025d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsME-2.png"}}, "nickname": "michwill", "type": "user", "account_id": "557058:05c8be1b-b456-4370-b558-873eadb01b99"}}, "summary": {"raw": "Sine AOM calibration", "markup": "markdown", "html": "<p>Sine AOM calibration</p>", "type": "rendered"}, "parents": [{"hash": "c4b342936f250c0865b474fcbeef290ce9ded4d9", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/c4b342936f250c0865b474fcbeef290ce9ded4d9.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/c4b342936f250c0865b474fcbeef290ce9ded4d9"}}}], "date": "2013-11-29T03:16:38+00:00", "message": "Sine AOM calibration", "type": "commit"}, {"rendered": {"message": {"raw": "Recent changes in unit conversions", "markup": "markdown", "html": "<p>Recent changes in unit conversions</p>", "type": "rendered"}}, "hash": "c4b342936f250c0865b474fcbeef290ce9ded4d9", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/c4b342936f250c0865b474fcbeef290ce9ded4d9.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/c4b342936f250c0865b474fcbeef290ce9ded4d9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/c4b342936f250c0865b474fcbeef290ce9ded4d9"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/c4b342936f250c0865b474fcbeef290ce9ded4d9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/c4b342936f250c0865b474fcbeef290ce9ded4d9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/c4b342936f250c0865b474fcbeef290ce9ded4d9/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/c4b342936f250c0865b474fcbeef290ce9ded4d9/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Recent changes in unit conversions", "markup": "markdown", "html": "<p>Recent changes in unit conversions</p>", "type": "rendered"}, "parents": [{"hash": "91fa9b7e6b6fda4431a49020fa713ee0a29b8160", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/91fa9b7e6b6fda4431a49020fa713ee0a29b8160.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/91fa9b7e6b6fda4431a49020fa713ee0a29b8160"}}}], "date": "2013-11-29T01:44:21+00:00", "message": "Recent changes in unit conversions", "type": "commit"}, {"rendered": {"message": {"raw": "Ignore filters for *.pyc", "markup": "markdown", "html": "<p>Ignore filters for *.pyc</p>", "type": "rendered"}}, "hash": "91fa9b7e6b6fda4431a49020fa713ee0a29b8160", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/91fa9b7e6b6fda4431a49020fa713ee0a29b8160.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/91fa9b7e6b6fda4431a49020fa713ee0a29b8160/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/91fa9b7e6b6fda4431a49020fa713ee0a29b8160"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/91fa9b7e6b6fda4431a49020fa713ee0a29b8160"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/91fa9b7e6b6fda4431a49020fa713ee0a29b8160"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/91fa9b7e6b6fda4431a49020fa713ee0a29b8160/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/91fa9b7e6b6fda4431a49020fa713ee0a29b8160/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Ignore filters for *.pyc", "markup": "markdown", "html": "<p>Ignore filters for *.pyc</p>", "type": "rendered"}, "parents": [{"hash": "0a39b22214d92ca8dd32d70d1d5aabc954146b3b", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/0a39b22214d92ca8dd32d70d1d5aabc954146b3b.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/0a39b22214d92ca8dd32d70d1d5aabc954146b3b"}}}], "date": "2013-10-22T00:53:58+00:00", "message": "Ignore filters for *.pyc", "type": "commit"}, {"rendered": {"message": {"raw": "Optotune lens units made numpy-compatible", "markup": "markdown", "html": "<p>Optotune lens units made numpy-compatible</p>", "type": "rendered"}}, "hash": "0a39b22214d92ca8dd32d70d1d5aabc954146b3b", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/0a39b22214d92ca8dd32d70d1d5aabc954146b3b.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/0a39b22214d92ca8dd32d70d1d5aabc954146b3b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/0a39b22214d92ca8dd32d70d1d5aabc954146b3b"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/0a39b22214d92ca8dd32d70d1d5aabc954146b3b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/0a39b22214d92ca8dd32d70d1d5aabc954146b3b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/0a39b22214d92ca8dd32d70d1d5aabc954146b3b/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/0a39b22214d92ca8dd32d70d1d5aabc954146b3b/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Optotune lens units made numpy-compatible", "markup": "markdown", "html": "<p>Optotune lens units made numpy-compatible</p>", "type": "rendered"}, "parents": [{"hash": "f85503a48c7fcecf7beca6f674c323fcea2f98e8", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/f85503a48c7fcecf7beca6f674c323fcea2f98e8.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/f85503a48c7fcecf7beca6f674c323fcea2f98e8"}}}], "date": "2013-10-22T00:53:18+00:00", "message": "Optotune lens units made numpy-compatible", "type": "commit"}, {"rendered": {"message": {"raw": "Shaun's code for optotune lens", "markup": "markdown", "html": "<p>Shaun's code for optotune lens</p>", "type": "rendered"}}, "hash": "f85503a48c7fcecf7beca6f674c323fcea2f98e8", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/f85503a48c7fcecf7beca6f674c323fcea2f98e8.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/f85503a48c7fcecf7beca6f674c323fcea2f98e8/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/f85503a48c7fcecf7beca6f674c323fcea2f98e8"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/f85503a48c7fcecf7beca6f674c323fcea2f98e8"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/f85503a48c7fcecf7beca6f674c323fcea2f98e8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/f85503a48c7fcecf7beca6f674c323fcea2f98e8/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/f85503a48c7fcecf7beca6f674c323fcea2f98e8/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Shaun's code for optotune lens", "markup": "markdown", "html": "<p>Shaun's code for optotune lens</p>", "type": "rendered"}, "parents": [{"hash": "0994010e348a56a6dfde24ca1500d2db36ada03c", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/0994010e348a56a6dfde24ca1500d2db36ada03c.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/0994010e348a56a6dfde24ca1500d2db36ada03c"}}}], "date": "2013-10-22T00:47:40+00:00", "message": "Shaun's code for optotune lens", "type": "commit"}, {"rendered": {"message": {"raw": "Trivial formatting.", "markup": "markdown", "html": "<p>Trivial formatting.</p>", "type": "rendered"}}, "hash": "0994010e348a56a6dfde24ca1500d2db36ada03c", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/0994010e348a56a6dfde24ca1500d2db36ada03c.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/0994010e348a56a6dfde24ca1500d2db36ada03c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/0994010e348a56a6dfde24ca1500d2db36ada03c"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/0994010e348a56a6dfde24ca1500d2db36ada03c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/0994010e348a56a6dfde24ca1500d2db36ada03c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/0994010e348a56a6dfde24ca1500d2db36ada03c/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/0994010e348a56a6dfde24ca1500d2db36ada03c/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Trivial formatting.", "markup": "markdown", "html": "<p>Trivial formatting.</p>", "type": "rendered"}, "parents": [{"hash": "230d24dd121c02a9ce5ad9db9d62027f8d7c81ec", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/230d24dd121c02a9ce5ad9db9d62027f8d7c81ec.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/230d24dd121c02a9ce5ad9db9d62027f8d7c81ec"}}}], "date": "2013-07-31T03:38:25+00:00", "message": "Trivial formatting.", "type": "commit"}, {"rendered": {"message": {"raw": "Added example.py unit conversion classes for use in labscript/example.py file", "markup": "markdown", "html": "<p>Added example.py unit conversion classes for use in labscript/example.py file</p>", "type": "rendered"}}, "hash": "230d24dd121c02a9ce5ad9db9d62027f8d7c81ec", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/230d24dd121c02a9ce5ad9db9d62027f8d7c81ec.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/230d24dd121c02a9ce5ad9db9d62027f8d7c81ec/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/230d24dd121c02a9ce5ad9db9d62027f8d7c81ec"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/230d24dd121c02a9ce5ad9db9d62027f8d7c81ec"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/230d24dd121c02a9ce5ad9db9d62027f8d7c81ec"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/230d24dd121c02a9ce5ad9db9d62027f8d7c81ec/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/230d24dd121c02a9ce5ad9db9d62027f8d7c81ec/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added example.py unit conversion classes for use in labscript/example.py file", "markup": "markdown", "html": "<p>Added example.py unit conversion classes for use in labscript/example.py file</p>", "type": "rendered"}, "parents": [{"hash": "7aec38835e9d340c8afdfd937859a02a5f0c21bd", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/7aec38835e9d340c8afdfd937859a02a5f0c21bd.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/7aec38835e9d340c8afdfd937859a02a5f0c21bd"}}}], "date": "2013-04-22T02:56:47+00:00", "message": "Added example.py unit conversion classes for use in labscript/example.py file", "type": "commit"}, {"rendered": {"message": {"raw": "Modified quad_driver calibration to force the control voltage to 0 when commanding 0 A or 0 G/cm. The conversions are no longer unitary, but it will help with getting the IGBT gate voltages low (-0.1V) and hence turning them off when we want zero current in the quad coils.", "markup": "markdown", "html": "<p>Modified quad_driver calibration to force the control voltage to 0 when commanding 0 A or 0 G/cm. The conversions are no longer unitary, but it will help with getting the IGBT gate voltages low (-0.1V) and hence turning them off when we want zero current in the quad coils.</p>", "type": "rendered"}}, "hash": "7aec38835e9d340c8afdfd937859a02a5f0c21bd", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/7aec38835e9d340c8afdfd937859a02a5f0c21bd.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/7aec38835e9d340c8afdfd937859a02a5f0c21bd/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/7aec38835e9d340c8afdfd937859a02a5f0c21bd"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/7aec38835e9d340c8afdfd937859a02a5f0c21bd"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/7aec38835e9d340c8afdfd937859a02a5f0c21bd"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/7aec38835e9d340c8afdfd937859a02a5f0c21bd/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/7aec38835e9d340c8afdfd937859a02a5f0c21bd/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Modified quad_driver calibration to force the control voltage to 0 when commanding 0 A or 0 G/cm. The conversions are no longer unitary, but it will help with getting the IGBT gate voltages low (-0.1V) and hence turning them off when we want zero current in the quad coils.", "markup": "markdown", "html": "<p>Modified quad_driver calibration to force the control voltage to 0 when commanding 0 A or 0 G/cm. The conversions are no longer unitary, but it will help with getting the IGBT gate voltages low (-0.1V) and hence turning them off when we want zero current in the quad coils.</p>", "type": "rendered"}, "parents": [{"hash": "18a280f4338d1657a18a9a7754c11669b65ca599", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/18a280f4338d1657a18a9a7754c11669b65ca599.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/18a280f4338d1657a18a9a7754c11669b65ca599"}}}], "date": "2012-08-30T00:25:07+00:00", "message": "Modified quad_driver calibration to force the control voltage to 0 when commanding 0 A or 0 G/cm. The conversions are no longer unitary, but it will help with getting the IGBT gate voltages low (-0.1V) and hence turning them off when we want zero current in the quad coils.", "type": "commit"}, {"rendered": {"message": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}}, "hash": "18a280f4338d1657a18a9a7754c11669b65ca599", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/18a280f4338d1657a18a9a7754c11669b65ca599.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/18a280f4338d1657a18a9a7754c11669b65ca599/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/18a280f4338d1657a18a9a7754c11669b65ca599"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/18a280f4338d1657a18a9a7754c11669b65ca599"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/18a280f4338d1657a18a9a7754c11669b65ca599"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/18a280f4338d1657a18a9a7754c11669b65ca599/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/18a280f4338d1657a18a9a7754c11669b65ca599/statuses_page=1.json"}}, "author": {"raw": "shjohnst", "type": "author", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}}, "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "parents": [{"hash": "6e6f65a2947cc33844b4eaedfac98fdde393d9d6", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/6e6f65a2947cc33844b4eaedfac98fdde393d9d6.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/6e6f65a2947cc33844b4eaedfac98fdde393d9d6"}}}], "date": "2012-06-28T01:21:09+00:00", "message": "", "type": "commit"}, {"rendered": {"message": {"raw": "Added vectorise decorator for when unitconversions need to be mapped over iterables.", "markup": "markdown", "html": "<p>Added vectorise decorator for when unitconversions need to be mapped over iterables.</p>", "type": "rendered"}}, "hash": "6e6f65a2947cc33844b4eaedfac98fdde393d9d6", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/6e6f65a2947cc33844b4eaedfac98fdde393d9d6.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/6e6f65a2947cc33844b4eaedfac98fdde393d9d6/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/6e6f65a2947cc33844b4eaedfac98fdde393d9d6"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/6e6f65a2947cc33844b4eaedfac98fdde393d9d6"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/6e6f65a2947cc33844b4eaedfac98fdde393d9d6"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/6e6f65a2947cc33844b4eaedfac98fdde393d9d6/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/6e6f65a2947cc33844b4eaedfac98fdde393d9d6/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Added vectorise decorator for when unitconversions need to be mapped over iterables.", "markup": "markdown", "html": "<p>Added vectorise decorator for when unitconversions need to be mapped over iterables.</p>", "type": "rendered"}, "parents": [{"hash": "0ee1e4b5d5324d6e6328331d5aea70b5a844ec5c", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/0ee1e4b5d5324d6e6328331d5aea70b5a844ec5c.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/0ee1e4b5d5324d6e6328331d5aea70b5a844ec5c"}}}], "date": "2012-05-10T07:40:30+00:00", "message": "Added vectorise decorator for when unitconversions need to be mapped over iterables.", "type": "commit"}, {"rendered": {"message": {"raw": "Added the mysterious 140mA back onto the monitor voltage calibration.", "markup": "markdown", "html": "<p>Added the mysterious 140mA back onto the monitor voltage calibration.</p>", "type": "rendered"}}, "hash": "0ee1e4b5d5324d6e6328331d5aea70b5a844ec5c", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/0ee1e4b5d5324d6e6328331d5aea70b5a844ec5c.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/0ee1e4b5d5324d6e6328331d5aea70b5a844ec5c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/0ee1e4b5d5324d6e6328331d5aea70b5a844ec5c"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/0ee1e4b5d5324d6e6328331d5aea70b5a844ec5c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/0ee1e4b5d5324d6e6328331d5aea70b5a844ec5c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/0ee1e4b5d5324d6e6328331d5aea70b5a844ec5c/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/0ee1e4b5d5324d6e6328331d5aea70b5a844ec5c/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Added the mysterious 140mA back onto the monitor voltage calibration.", "markup": "markdown", "html": "<p>Added the mysterious 140mA back onto the monitor voltage calibration.</p>", "type": "rendered"}, "parents": [{"hash": "3fc12aa44cadbe0739fe74e9e1772a0674494ec3", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/3fc12aa44cadbe0739fe74e9e1772a0674494ec3.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/3fc12aa44cadbe0739fe74e9e1772a0674494ec3"}}}], "date": "2012-05-07T08:12:51+00:00", "message": "Added the mysterious 140mA back onto the monitor voltage calibration.", "type": "commit"}, {"rendered": {"message": {"raw": "Reverted back to current offset of last week in unitconversions/quad_driver.py after finding bug in previous revision.", "markup": "markdown", "html": "<p>Reverted back to current offset of last week in unitconversions/quad_driver.py after finding bug in previous revision.</p>", "type": "rendered"}}, "hash": "3fc12aa44cadbe0739fe74e9e1772a0674494ec3", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/3fc12aa44cadbe0739fe74e9e1772a0674494ec3.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/3fc12aa44cadbe0739fe74e9e1772a0674494ec3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/3fc12aa44cadbe0739fe74e9e1772a0674494ec3"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/3fc12aa44cadbe0739fe74e9e1772a0674494ec3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/3fc12aa44cadbe0739fe74e9e1772a0674494ec3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/3fc12aa44cadbe0739fe74e9e1772a0674494ec3/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/3fc12aa44cadbe0739fe74e9e1772a0674494ec3/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Reverted back to current offset of last week in unitconversions/quad_driver.py after finding bug in previous revision.", "markup": "markdown", "html": "<p>Reverted back to current offset of last week in unitconversions/quad_driver.py after finding bug in previous revision.</p>", "type": "rendered"}, "parents": [{"hash": "7da39ba1144f72b4aa4d8c29600a90f262ee0a42", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/7da39ba1144f72b4aa4d8c29600a90f262ee0a42.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/7da39ba1144f72b4aa4d8c29600a90f262ee0a42"}}}], "date": "2012-05-07T07:03:47+00:00", "message": "Reverted back to current offset of last week in unitconversions/quad_driver.py after finding bug in previous revision.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed significant bug in unitconversions/quad_driver.py and unitconversions/quad_monitor.py whereby offsets were being ignored in conversion to/from G/cm.", "markup": "markdown", "html": "<p>Fixed significant bug in unitconversions/quad_driver.py and unitconversions/quad_monitor.py whereby offsets were being ignored in conversion to/from G/cm.</p>", "type": "rendered"}}, "hash": "7da39ba1144f72b4aa4d8c29600a90f262ee0a42", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/7da39ba1144f72b4aa4d8c29600a90f262ee0a42.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/7da39ba1144f72b4aa4d8c29600a90f262ee0a42/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/7da39ba1144f72b4aa4d8c29600a90f262ee0a42"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/7da39ba1144f72b4aa4d8c29600a90f262ee0a42"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/7da39ba1144f72b4aa4d8c29600a90f262ee0a42"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/7da39ba1144f72b4aa4d8c29600a90f262ee0a42/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/7da39ba1144f72b4aa4d8c29600a90f262ee0a42/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Fixed significant bug in unitconversions/quad_driver.py and unitconversions/quad_monitor.py whereby offsets were being ignored in conversion to/from G/cm.", "markup": "markdown", "html": "<p>Fixed significant bug in unitconversions/quad_driver.py and unitconversions/quad_monitor.py whereby offsets were being ignored in conversion to/from G/cm.</p>", "type": "rendered"}, "parents": [{"hash": "e804ee7e839fccc57291b0c80d6064dceb9234fd", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/e804ee7e839fccc57291b0c80d6064dceb9234fd.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/e804ee7e839fccc57291b0c80d6064dceb9234fd"}}}], "date": "2012-05-07T07:02:28+00:00", "message": "Fixed significant bug in unitconversions/quad_driver.py and unitconversions/quad_monitor.py whereby offsets were being ignored in conversion to/from G/cm.", "type": "commit"}, {"rendered": {"message": {"raw": "Modified quad_driver.py calibration to account for 140mA offset (varying?). Added quad_monitor.py unitconversion based on results of analysislib/spinorbec/quad_monitor_calibration.py.", "markup": "markdown", "html": "<p>Modified quad_driver.py calibration to account for 140mA offset (varying?). Added quad_monitor.py unitconversion based on results of analysislib/spinorbec/quad_monitor_calibration.py.</p>", "type": "rendered"}}, "hash": "e804ee7e839fccc57291b0c80d6064dceb9234fd", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/e804ee7e839fccc57291b0c80d6064dceb9234fd.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/e804ee7e839fccc57291b0c80d6064dceb9234fd/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/e804ee7e839fccc57291b0c80d6064dceb9234fd"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/e804ee7e839fccc57291b0c80d6064dceb9234fd"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/e804ee7e839fccc57291b0c80d6064dceb9234fd"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/e804ee7e839fccc57291b0c80d6064dceb9234fd/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/e804ee7e839fccc57291b0c80d6064dceb9234fd/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Modified quad_driver.py calibration to account for 140mA offset (varying?). Added quad_monitor.py unitconversion based on results of analysislib/spinorbec/quad_monitor_calibration.py.", "markup": "markdown", "html": "<p>Modified quad_driver.py calibration to account for 140mA offset (varying?). Added quad_monitor.py unitconversion based on results of analysislib/spinorbec/quad_monitor_calibration.py.</p>", "type": "rendered"}, "parents": [{"hash": "a96a89654e3d20e4be20c69e6b364066d8da6f82", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/a96a89654e3d20e4be20c69e6b364066d8da6f82.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/a96a89654e3d20e4be20c69e6b364066d8da6f82"}}}], "date": "2012-05-07T06:45:09+00:00", "message": "Modified quad_driver.py calibration to account for 140mA offset (varying?). Added quad_monitor.py unitconversion based on results of analysislib/spinorbec/quad_monitor_calibration.py.", "type": "commit"}, {"rendered": {"message": {"raw": "Modified quad driver unit conversion to account for linear offset and minimum current.", "markup": "markdown", "html": "<p>Modified quad driver unit conversion to account for linear offset and minimum current.</p>", "type": "rendered"}}, "hash": "a96a89654e3d20e4be20c69e6b364066d8da6f82", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/a96a89654e3d20e4be20c69e6b364066d8da6f82.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/a96a89654e3d20e4be20c69e6b364066d8da6f82/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/a96a89654e3d20e4be20c69e6b364066d8da6f82"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/a96a89654e3d20e4be20c69e6b364066d8da6f82"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/a96a89654e3d20e4be20c69e6b364066d8da6f82"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/a96a89654e3d20e4be20c69e6b364066d8da6f82/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/a96a89654e3d20e4be20c69e6b364066d8da6f82/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Modified quad driver unit conversion to account for linear offset and minimum current.", "markup": "markdown", "html": "<p>Modified quad driver unit conversion to account for linear offset and minimum current.</p>", "type": "rendered"}, "parents": [{"hash": "1d7445e30123c904dc716c842154fad0c3f0a2bf", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/1d7445e30123c904dc716c842154fad0c3f0a2bf.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/1d7445e30123c904dc716c842154fad0c3f0a2bf"}}}], "date": "2012-05-03T07:36:55+00:00", "message": "Modified quad driver unit conversion to account for linear offset and minimum current.", "type": "commit"}, {"rendered": {"message": {"raw": "Modified unit conversion detuning.py to account for change of base units from MHz to Hz. Now have a conversion to MHz also.", "markup": "markdown", "html": "<p>Modified unit conversion detuning.py to account for change of base units from MHz to Hz. Now have a conversion to MHz also.</p>", "type": "rendered"}}, "hash": "1d7445e30123c904dc716c842154fad0c3f0a2bf", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/1d7445e30123c904dc716c842154fad0c3f0a2bf.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/1d7445e30123c904dc716c842154fad0c3f0a2bf/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/1d7445e30123c904dc716c842154fad0c3f0a2bf"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/1d7445e30123c904dc716c842154fad0c3f0a2bf"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/1d7445e30123c904dc716c842154fad0c3f0a2bf"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/1d7445e30123c904dc716c842154fad0c3f0a2bf/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/1d7445e30123c904dc716c842154fad0c3f0a2bf/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Modified unit conversion detuning.py to account for change of base units from MHz to Hz. Now have a conversion to MHz also.", "markup": "markdown", "html": "<p>Modified unit conversion detuning.py to account for change of base units from MHz to Hz. Now have a conversion to MHz also.</p>", "type": "rendered"}, "parents": [{"hash": "be69b9a925edb96f55aa65685ed98685c627a266", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/be69b9a925edb96f55aa65685ed98685c627a266.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/be69b9a925edb96f55aa65685ed98685c627a266"}}}], "date": "2012-05-02T02:58:03+00:00", "message": "Modified unit conversion detuning.py to account for change of base units from MHz to Hz. Now have a conversion to MHz also.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bug in detuning.py - couldn't set default conversion parameter as nan (runmanager complained that nan wasn't a global - bug?). Now use False as default instead, used in conditionals that decide whether or not unit conversion has been defined in a certain way.", "markup": "markdown", "html": "<p>Fixed bug in detuning.py - couldn't set default conversion parameter as nan (runmanager complained that nan wasn't a global - bug?). Now use False as default instead, used in conditionals that decide whether or not unit conversion has been defined in a certain way.</p>", "type": "rendered"}}, "hash": "be69b9a925edb96f55aa65685ed98685c627a266", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/be69b9a925edb96f55aa65685ed98685c627a266.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/be69b9a925edb96f55aa65685ed98685c627a266/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/be69b9a925edb96f55aa65685ed98685c627a266"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/be69b9a925edb96f55aa65685ed98685c627a266"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/be69b9a925edb96f55aa65685ed98685c627a266"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/be69b9a925edb96f55aa65685ed98685c627a266/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/be69b9a925edb96f55aa65685ed98685c627a266/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Fixed bug in detuning.py - couldn't set default conversion parameter as nan (runmanager complained that nan wasn't a global - bug?). Now use False as default instead, used in conditionals that decide whether or not unit conversion has been defined in a certain way.", "markup": "markdown", "html": "<p>Fixed bug in detuning.py - couldn't set default conversion parameter as nan (runmanager complained that nan wasn't a global - bug?). Now use False as default instead, used in conditionals that decide whether or not unit conversion has been defined in a certain way.</p>", "type": "rendered"}, "parents": [{"hash": "a065c73a829fd2ac1ac58f53a095dafa2139a203", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/a065c73a829fd2ac1ac58f53a095dafa2139a203.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/a065c73a829fd2ac1ac58f53a095dafa2139a203"}}}], "date": "2012-04-24T14:21:30+00:00", "message": "Fixed bug in detuning.py - couldn't set default conversion parameter as nan (runmanager complained that nan wasn't a global - bug?). Now use False as default instead, used in conditionals that decide whether or not unit conversion has been defined in a certain way.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed typos where I hadn't referred to conversion parameters via the dictionary.", "markup": "markdown", "html": "<p>Fixed typos where I hadn't referred to conversion parameters via the dictionary.</p>", "type": "rendered"}}, "hash": "a065c73a829fd2ac1ac58f53a095dafa2139a203", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/a065c73a829fd2ac1ac58f53a095dafa2139a203.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/a065c73a829fd2ac1ac58f53a095dafa2139a203/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/a065c73a829fd2ac1ac58f53a095dafa2139a203"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/a065c73a829fd2ac1ac58f53a095dafa2139a203"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/a065c73a829fd2ac1ac58f53a095dafa2139a203"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/a065c73a829fd2ac1ac58f53a095dafa2139a203/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/a065c73a829fd2ac1ac58f53a095dafa2139a203/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Fixed typos where I hadn't referred to conversion parameters via the dictionary.", "markup": "markdown", "html": "<p>Fixed typos where I hadn't referred to conversion parameters via the dictionary.</p>", "type": "rendered"}, "parents": [{"hash": "240954a955be6ad3b0eb428a155f856eb1f72e3a", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/240954a955be6ad3b0eb428a155f856eb1f72e3a.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/240954a955be6ad3b0eb428a155f856eb1f72e3a"}}}], "date": "2012-04-24T13:56:57+00:00", "message": "Fixed typos where I hadn't referred to conversion parameters via the dictionary.", "type": "commit"}, {"rendered": {"message": {"raw": "Added:\n* detuning.py: to convert from DDS frequency  (driving an AOM) to detuning or linewidths from resonance, and\n* quad_driver.py: to convert from analog control volts to coil current and magnetic field gradient.", "markup": "markdown", "html": "<p>Added:<br />\n<em> detuning.py: to convert from DDS frequency  (driving an AOM) to detuning or linewidths from resonance, and<br />\n</em> quad_driver.py: to convert from analog control volts to coil current and magnetic field gradient.</p>", "type": "rendered"}}, "hash": "240954a955be6ad3b0eb428a155f856eb1f72e3a", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/240954a955be6ad3b0eb428a155f856eb1f72e3a.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/240954a955be6ad3b0eb428a155f856eb1f72e3a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/240954a955be6ad3b0eb428a155f856eb1f72e3a"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/240954a955be6ad3b0eb428a155f856eb1f72e3a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/240954a955be6ad3b0eb428a155f856eb1f72e3a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/240954a955be6ad3b0eb428a155f856eb1f72e3a/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/240954a955be6ad3b0eb428a155f856eb1f72e3a/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Added:\n* detuning.py: to convert from DDS frequency  (driving an AOM) to detuning or linewidths from resonance, and\n* quad_driver.py: to convert from analog control volts to coil current and magnetic field gradient.", "markup": "markdown", "html": "<p>Added:<br />\n<em> detuning.py: to convert from DDS frequency  (driving an AOM) to detuning or linewidths from resonance, and<br />\n</em> quad_driver.py: to convert from analog control volts to coil current and magnetic field gradient.</p>", "type": "rendered"}, "parents": [{"hash": "05e4193f1f915fbc87ebf9150e2fedad72c3038c", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/05e4193f1f915fbc87ebf9150e2fedad72c3038c.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/05e4193f1f915fbc87ebf9150e2fedad72c3038c"}}}], "date": "2012-04-24T11:57:25+00:00", "message": "Added:\n* detuning.py: to convert from DDS frequency  (driving an AOM) to detuning or linewidths from resonance, and\n* quad_driver.py: to convert from analog control volts to coil current and magnetic field gradient.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a bug where files ending with a p or y would not be correctly loaded as calibrations", "markup": "markdown", "html": "<p>Fixed a bug where files ending with a p or y would not be correctly loaded as calibrations</p>", "type": "rendered"}}, "hash": "05e4193f1f915fbc87ebf9150e2fedad72c3038c", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/05e4193f1f915fbc87ebf9150e2fedad72c3038c.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/05e4193f1f915fbc87ebf9150e2fedad72c3038c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/05e4193f1f915fbc87ebf9150e2fedad72c3038c"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/05e4193f1f915fbc87ebf9150e2fedad72c3038c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/05e4193f1f915fbc87ebf9150e2fedad72c3038c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/05e4193f1f915fbc87ebf9150e2fedad72c3038c/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/05e4193f1f915fbc87ebf9150e2fedad72c3038c/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed a bug where files ending with a p or y would not be correctly loaded as calibrations", "markup": "markdown", "html": "<p>Fixed a bug where files ending with a p or y would not be correctly loaded as calibrations</p>", "type": "rendered"}, "parents": [{"hash": "ce0798c2d58a9a97170c22ddc4c4aac944a74c02", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/ce0798c2d58a9a97170c22ddc4c4aac944a74c02.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/ce0798c2d58a9a97170c22ddc4c4aac944a74c02"}}}], "date": "2012-02-24T06:58:25+00:00", "message": "Fixed a bug where files ending with a p or y would not be correctly loaded as calibrations", "type": "commit"}, {"rendered": {"message": {"raw": "Moved all of python lib to the trunk", "markup": "markdown", "html": "<p>Moved all of python lib to the trunk</p>", "type": "rendered"}}, "hash": "ce0798c2d58a9a97170c22ddc4c4aac944a74c02", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/ce0798c2d58a9a97170c22ddc4c4aac944a74c02.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/ce0798c2d58a9a97170c22ddc4c4aac944a74c02/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/ce0798c2d58a9a97170c22ddc4c4aac944a74c02"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/ce0798c2d58a9a97170c22ddc4c4aac944a74c02"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/ce0798c2d58a9a97170c22ddc4c4aac944a74c02"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/ce0798c2d58a9a97170c22ddc4c4aac944a74c02/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/ce0798c2d58a9a97170c22ddc4c4aac944a74c02/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Moved all of python lib to the trunk", "markup": "markdown", "html": "<p>Moved all of python lib to the trunk</p>", "type": "rendered"}, "parents": [{"hash": "c8a9003dad9ece041942f60b59c520952140af0e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/c8a9003dad9ece041942f60b59c520952140af0e.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/c8a9003dad9ece041942f60b59c520952140af0e"}}}], "date": "2012-02-17T06:38:46+00:00", "message": "Moved all of python lib to the trunk", "type": "commit"}, {"rendered": {"message": {"raw": "Modified Calibrations name to Unit conversions\nRenamed \"connected to\" to \"parent port\" in connection table and related code\n\nAdded a UnitConversionBase class which handles order of magnitude conversions (eg to p,n,u,m,k,M,G,T SI-prefixes) automatically. Just make your conversion class a subclass of UniConversionBase and pass you conversion a 'magnitudes' dictionary key with the value containing a list of prefixes as strings (eg {'magnitudes':['k','G'],...})", "markup": "markdown", "html": "<p>Modified Calibrations name to Unit conversions<br />\nRenamed \"connected to\" to \"parent port\" in connection table and related code</p>\n<p>Added a UnitConversionBase class which handles order of magnitude conversions (eg to p,n,u,m,k,M,G,T SI-prefixes) automatically. Just make your conversion class a subclass of UniConversionBase and pass you conversion a 'magnitudes' dictionary key with the value containing a list of prefixes as strings (eg {'magnitudes':['k','G'],...})</p>", "type": "rendered"}}, "hash": "c8a9003dad9ece041942f60b59c520952140af0e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/c8a9003dad9ece041942f60b59c520952140af0e.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/c8a9003dad9ece041942f60b59c520952140af0e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/c8a9003dad9ece041942f60b59c520952140af0e"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/c8a9003dad9ece041942f60b59c520952140af0e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/c8a9003dad9ece041942f60b59c520952140af0e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/c8a9003dad9ece041942f60b59c520952140af0e/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/c8a9003dad9ece041942f60b59c520952140af0e/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Modified Calibrations name to Unit conversions\nRenamed \"connected to\" to \"parent port\" in connection table and related code\n\nAdded a UnitConversionBase class which handles order of magnitude conversions (eg to p,n,u,m,k,M,G,T SI-prefixes) automatically. Just make your conversion class a subclass of UniConversionBase and pass you conversion a 'magnitudes' dictionary key with the value containing a list of prefixes as strings (eg {'magnitudes':['k','G'],...})", "markup": "markdown", "html": "<p>Modified Calibrations name to Unit conversions<br />\nRenamed \"connected to\" to \"parent port\" in connection table and related code</p>\n<p>Added a UnitConversionBase class which handles order of magnitude conversions (eg to p,n,u,m,k,M,G,T SI-prefixes) automatically. Just make your conversion class a subclass of UniConversionBase and pass you conversion a 'magnitudes' dictionary key with the value containing a list of prefixes as strings (eg {'magnitudes':['k','G'],...})</p>", "type": "rendered"}, "parents": [], "date": "2012-02-16T05:05:21+00:00", "message": "Modified Calibrations name to Unit conversions\nRenamed \"connected to\" to \"parent port\" in connection table and related code\n\nAdded a UnitConversionBase class which handles order of magnitude conversions (eg to p,n,u,m,k,M,G,T SI-prefixes) automatically. Just make your conversion class a subclass of UniConversionBase and pass you conversion a 'magnitudes' dictionary key with the value containing a list of prefixes as strings (eg {'magnitudes':['k','G'],...})", "type": "commit"}, {"rendered": {"message": {"raw": "added tracelog, memprof and impprof submodules", "markup": "markdown", "html": "<p>added tracelog, memprof and impprof submodules</p>", "type": "rendered"}}, "hash": "e1f5af9bf3c7a27e5d2f2f3e9436d2338d4ab7b7", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/e1f5af9bf3c7a27e5d2f2f3e9436d2338d4ab7b7.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/e1f5af9bf3c7a27e5d2f2f3e9436d2338d4ab7b7/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/e1f5af9bf3c7a27e5d2f2f3e9436d2338d4ab7b7"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/e1f5af9bf3c7a27e5d2f2f3e9436d2338d4ab7b7"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/e1f5af9bf3c7a27e5d2f2f3e9436d2338d4ab7b7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/e1f5af9bf3c7a27e5d2f2f3e9436d2338d4ab7b7/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/e1f5af9bf3c7a27e5d2f2f3e9436d2338d4ab7b7/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "added tracelog, memprof and impprof submodules", "markup": "markdown", "html": "<p>added tracelog, memprof and impprof submodules</p>", "type": "rendered"}, "parents": [{"hash": "1f6123fc0038f53af3c9e5096a7dea0dfd43336b", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/1f6123fc0038f53af3c9e5096a7dea0dfd43336b.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/1f6123fc0038f53af3c9e5096a7dea0dfd43336b"}}}], "date": "2014-01-24T03:45:18+00:00", "message": "added tracelog, memprof and impprof submodules", "type": "commit"}, {"rendered": {"message": {"raw": "Merge", "markup": "markdown", "html": "<p>Merge</p>", "type": "rendered"}}, "hash": "1f6123fc0038f53af3c9e5096a7dea0dfd43336b", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/1f6123fc0038f53af3c9e5096a7dea0dfd43336b.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/1f6123fc0038f53af3c9e5096a7dea0dfd43336b/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/1f6123fc0038f53af3c9e5096a7dea0dfd43336b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/1f6123fc0038f53af3c9e5096a7dea0dfd43336b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/1f6123fc0038f53af3c9e5096a7dea0dfd43336b/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/1f6123fc0038f53af3c9e5096a7dea0dfd43336b/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merge", "markup": "markdown", "html": "<p>Merge</p>", "type": "rendered"}, "parents": [{"hash": "41d1036e28cb11957d6673e0206dd3a88966af18", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/41d1036e28cb11957d6673e0206dd3a88966af18.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/41d1036e28cb11957d6673e0206dd3a88966af18"}}}, {"hash": "494c65f8eb634ba097f893ffb7cbd6436258d1d8", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/494c65f8eb634ba097f893ffb7cbd6436258d1d8.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/494c65f8eb634ba097f893ffb7cbd6436258d1d8"}}}], "date": "2014-01-23T00:23:19+00:00", "message": "Merge", "type": "commit"}, {"rendered": {"message": {"raw": "Added option for terminal output rather than file. Set file to None for this.", "markup": "markdown", "html": "<p>Added option for terminal output rather than file. Set file to None for this.</p>", "type": "rendered"}}, "hash": "41d1036e28cb11957d6673e0206dd3a88966af18", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/41d1036e28cb11957d6673e0206dd3a88966af18.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/41d1036e28cb11957d6673e0206dd3a88966af18/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/41d1036e28cb11957d6673e0206dd3a88966af18"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/41d1036e28cb11957d6673e0206dd3a88966af18"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/41d1036e28cb11957d6673e0206dd3a88966af18"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/41d1036e28cb11957d6673e0206dd3a88966af18/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/41d1036e28cb11957d6673e0206dd3a88966af18/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added option for terminal output rather than file. Set file to None for this.", "markup": "markdown", "html": "<p>Added option for terminal output rather than file. Set file to None for this.</p>", "type": "rendered"}, "parents": [{"hash": "6be42b40dab1b42a9ba353490206f9e1347a0264", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/6be42b40dab1b42a9ba353490206f9e1347a0264.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/6be42b40dab1b42a9ba353490206f9e1347a0264"}}}], "date": "2014-01-23T00:23:11+00:00", "message": "Added option for terminal output rather than file. Set file to None for this.", "type": "commit"}, {"rendered": {"message": {"raw": "Modified the sub argument of tracelog.log to be a True/False flag. If true, any module that is a sub module of a module being logged, will also be logged.", "markup": "markdown", "html": "<p>Modified the sub argument of tracelog.log to be a True/False flag. If true, any module that is a sub module of a module being logged, will also be logged.</p>", "type": "rendered"}}, "hash": "494c65f8eb634ba097f893ffb7cbd6436258d1d8", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/494c65f8eb634ba097f893ffb7cbd6436258d1d8.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/494c65f8eb634ba097f893ffb7cbd6436258d1d8/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/494c65f8eb634ba097f893ffb7cbd6436258d1d8"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/494c65f8eb634ba097f893ffb7cbd6436258d1d8"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/494c65f8eb634ba097f893ffb7cbd6436258d1d8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/494c65f8eb634ba097f893ffb7cbd6436258d1d8/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/494c65f8eb634ba097f893ffb7cbd6436258d1d8/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Modified the sub argument of tracelog.log to be a True/False flag. If true, any module that is a sub module of a module being logged, will also be logged.", "markup": "markdown", "html": "<p>Modified the sub argument of tracelog.log to be a True/False flag. If true, any module that is a sub module of a module being logged, will also be logged.</p>", "type": "rendered"}, "parents": [{"hash": "6be42b40dab1b42a9ba353490206f9e1347a0264", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/6be42b40dab1b42a9ba353490206f9e1347a0264.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/6be42b40dab1b42a9ba353490206f9e1347a0264"}}}], "date": "2013-11-19T01:01:31+00:00", "message": "Modified the sub argument of tracelog.log to be a True/False flag. If true, any module that is a sub module of a module being logged, will also be logged.", "type": "commit"}, {"rendered": {"message": {"raw": "Modified import profiler. You now call enable(threshold) and disable to turn it on and off.\n\nAnd it doesn't have indentation issues due to not decrementing its depth counter\nwhen exceptions were raised in imports (as often happens, although they are expected and caught)", "markup": "markdown", "html": "<p>Modified import profiler. You now call enable(threshold) and disable to turn it on and off.</p>\n<p>And it doesn't have indentation issues due to not decrementing its depth counter<br />\nwhen exceptions were raised in imports (as often happens, although they are expected and caught)</p>", "type": "rendered"}}, "hash": "6be42b40dab1b42a9ba353490206f9e1347a0264", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/6be42b40dab1b42a9ba353490206f9e1347a0264.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/6be42b40dab1b42a9ba353490206f9e1347a0264/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/6be42b40dab1b42a9ba353490206f9e1347a0264"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/6be42b40dab1b42a9ba353490206f9e1347a0264"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/6be42b40dab1b42a9ba353490206f9e1347a0264"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/6be42b40dab1b42a9ba353490206f9e1347a0264/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/6be42b40dab1b42a9ba353490206f9e1347a0264/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Modified import profiler. You now call enable(threshold) and disable to turn it on and off.\n\nAnd it doesn't have indentation issues due to not decrementing its depth counter\nwhen exceptions were raised in imports (as often happens, although they are expected and caught)", "markup": "markdown", "html": "<p>Modified import profiler. You now call enable(threshold) and disable to turn it on and off.</p>\n<p>And it doesn't have indentation issues due to not decrementing its depth counter<br />\nwhen exceptions were raised in imports (as often happens, although they are expected and caught)</p>", "type": "rendered"}, "parents": [{"hash": "b865b6565c31a1a9ddb1936ea27e15409e32a7d0", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/b865b6565c31a1a9ddb1936ea27e15409e32a7d0.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/b865b6565c31a1a9ddb1936ea27e15409e32a7d0"}}}], "date": "2013-09-17T07:08:59+00:00", "message": "Modified import profiler. You now call enable(threshold) and disable to turn it on and off.\n\nAnd it doesn't have indentation issues due to not decrementing its depth counter\nwhen exceptions were raised in imports (as often happens, although they are expected and caught)", "type": "commit"}, {"rendered": {"message": {"raw": "Added a module with a function for profiling how long imports take.\n\nUse it like this:\nfrom tracelog.profile_imports import profile_imports\nprofile_imports(threshold=0.1) # only shows imports that take longer than 'threshold' seconds", "markup": "markdown", "html": "<p>Added a module with a function for profiling how long imports take.</p>\n<p>Use it like this:<br />\nfrom tracelog.profile_imports import profile_imports<br />\nprofile_imports(threshold=0.1) # only shows imports that take longer than 'threshold' seconds</p>", "type": "rendered"}}, "hash": "b865b6565c31a1a9ddb1936ea27e15409e32a7d0", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/b865b6565c31a1a9ddb1936ea27e15409e32a7d0.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/b865b6565c31a1a9ddb1936ea27e15409e32a7d0/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/b865b6565c31a1a9ddb1936ea27e15409e32a7d0"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/b865b6565c31a1a9ddb1936ea27e15409e32a7d0"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/b865b6565c31a1a9ddb1936ea27e15409e32a7d0"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/b865b6565c31a1a9ddb1936ea27e15409e32a7d0/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/b865b6565c31a1a9ddb1936ea27e15409e32a7d0/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added a module with a function for profiling how long imports take.\n\nUse it like this:\nfrom tracelog.profile_imports import profile_imports\nprofile_imports(threshold=0.1) # only shows imports that take longer than 'threshold' seconds", "markup": "markdown", "html": "<p>Added a module with a function for profiling how long imports take.</p>\n<p>Use it like this:<br />\nfrom tracelog.profile_imports import profile_imports<br />\nprofile_imports(threshold=0.1) # only shows imports that take longer than 'threshold' seconds</p>", "type": "rendered"}, "parents": [{"hash": "367129359232cbfa67334cf7f4cf9eb7619da7d6", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/367129359232cbfa67334cf7f4cf9eb7619da7d6.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/367129359232cbfa67334cf7f4cf9eb7619da7d6"}}}], "date": "2013-09-17T06:08:20+00:00", "message": "Added a module with a function for profiling how long imports take.\n\nUse it like this:\nfrom tracelog.profile_imports import profile_imports\nprofile_imports(threshold=0.1) # only shows imports that take longer than 'threshold' seconds", "type": "commit"}, {"rendered": {"message": {"raw": "moved imshow_irreg to analysislib.common, moved memprof into tracelog. This is so that there are no single files at the toplevel of pythonlib, in preparation of converting it to a mercurial repository full of subprepositories. Also removed bibfix...will add it again in a second, its being a little problematic not letting me commit while it exists. I just updated the version of subversion Im using, might have something to do with it", "markup": "markdown", "html": "<p>moved imshow_irreg to analysislib.common, moved memprof into tracelog. This is so that there are no single files at the toplevel of pythonlib, in preparation of converting it to a mercurial repository full of subprepositories. Also removed bibfix...will add it again in a second, its being a little problematic not letting me commit while it exists. I just updated the version of subversion Im using, might have something to do with it</p>", "type": "rendered"}}, "hash": "367129359232cbfa67334cf7f4cf9eb7619da7d6", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/367129359232cbfa67334cf7f4cf9eb7619da7d6.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/367129359232cbfa67334cf7f4cf9eb7619da7d6/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/367129359232cbfa67334cf7f4cf9eb7619da7d6"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/367129359232cbfa67334cf7f4cf9eb7619da7d6"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/367129359232cbfa67334cf7f4cf9eb7619da7d6"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/367129359232cbfa67334cf7f4cf9eb7619da7d6/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/367129359232cbfa67334cf7f4cf9eb7619da7d6/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "moved imshow_irreg to analysislib.common, moved memprof into tracelog. This is so that there are no single files at the toplevel of pythonlib, in preparation of converting it to a mercurial repository full of subprepositories. Also removed bibfix...will add it again in a second, its being a little problematic not letting me commit while it exists. I just updated the version of subversion Im using, might have something to do with it", "markup": "markdown", "html": "<p>moved imshow_irreg to analysislib.common, moved memprof into tracelog. This is so that there are no single files at the toplevel of pythonlib, in preparation of converting it to a mercurial repository full of subprepositories. Also removed bibfix...will add it again in a second, its being a little problematic not letting me commit while it exists. I just updated the version of subversion Im using, might have something to do with it</p>", "type": "rendered"}, "parents": [{"hash": "f130cfb3537f30278a1897477122ca2b2e9431cb", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/f130cfb3537f30278a1897477122ca2b2e9431cb.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/f130cfb3537f30278a1897477122ca2b2e9431cb"}}}], "date": "2012-10-10T06:36:15+00:00", "message": "moved imshow_irreg to analysislib.common, moved memprof into tracelog. This is so that there are no single files at the toplevel of pythonlib, in preparation of converting it to a mercurial repository full of subprepositories. Also removed bibfix...will add it again in a second, its being a little problematic not letting me commit while it exists. I just updated the version of subversion Im using, might have something to do with it", "type": "commit"}, {"rendered": {"message": {"raw": "Made tracelog provide the function name also", "markup": "markdown", "html": "<p>Made tracelog provide the function name also</p>", "type": "rendered"}}, "hash": "f130cfb3537f30278a1897477122ca2b2e9431cb", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/f130cfb3537f30278a1897477122ca2b2e9431cb.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/f130cfb3537f30278a1897477122ca2b2e9431cb/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/f130cfb3537f30278a1897477122ca2b2e9431cb"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/f130cfb3537f30278a1897477122ca2b2e9431cb"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/f130cfb3537f30278a1897477122ca2b2e9431cb"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/f130cfb3537f30278a1897477122ca2b2e9431cb/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/f130cfb3537f30278a1897477122ca2b2e9431cb/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Made tracelog provide the function name also", "markup": "markdown", "html": "<p>Made tracelog provide the function name also</p>", "type": "rendered"}, "parents": [{"hash": "d2e776f4e73405315b4885935cb61a58dc97fef2", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/d2e776f4e73405315b4885935cb61a58dc97fef2.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/d2e776f4e73405315b4885935cb61a58dc97fef2"}}}], "date": "2012-10-06T05:28:16+00:00", "message": "Made tracelog provide the function name also", "type": "commit"}, {"rendered": {"message": {"raw": "Made module names an optional argument", "markup": "markdown", "html": "<p>Made module names an optional argument</p>", "type": "rendered"}}, "hash": "d2e776f4e73405315b4885935cb61a58dc97fef2", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/d2e776f4e73405315b4885935cb61a58dc97fef2.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/d2e776f4e73405315b4885935cb61a58dc97fef2/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/d2e776f4e73405315b4885935cb61a58dc97fef2"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/d2e776f4e73405315b4885935cb61a58dc97fef2"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/d2e776f4e73405315b4885935cb61a58dc97fef2"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/d2e776f4e73405315b4885935cb61a58dc97fef2/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/d2e776f4e73405315b4885935cb61a58dc97fef2/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Made module names an optional argument", "markup": "markdown", "html": "<p>Made module names an optional argument</p>", "type": "rendered"}, "parents": [{"hash": "4f0b9863273d1fe71325f6131400aabc1327d58f", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/4f0b9863273d1fe71325f6131400aabc1327d58f.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/4f0b9863273d1fe71325f6131400aabc1327d58f"}}}], "date": "2012-10-02T02:12:56+00:00", "message": "Made module names an optional argument", "type": "commit"}, {"rendered": {"message": {"raw": "Added set_file function to change which file is being logged to after original setup.\n\nThis is so that all threads can be included in logging, even when you don't know what the log file should be called yet. So you can call log() as early as you want in your program, and then call set_file when you know what you want to rename the log file to.\nFor example in analysis_subprocess, we would like the log files to be named after the analysis routines of each process, but we don't know what the routine is until after some inititialisation code which starts some threads. These threads won't be logged unless we call log() before starting them.", "markup": "markdown", "html": "<p>Added set_file function to change which file is being logged to after original setup.</p>\n<p>This is so that all threads can be included in logging, even when you don't know what the log file should be called yet. So you can call log() as early as you want in your program, and then call set_file when you know what you want to rename the log file to.<br />\nFor example in analysis_subprocess, we would like the log files to be named after the analysis routines of each process, but we don't know what the routine is until after some inititialisation code which starts some threads. These threads won't be logged unless we call log() before starting them.</p>", "type": "rendered"}}, "hash": "4f0b9863273d1fe71325f6131400aabc1327d58f", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/4f0b9863273d1fe71325f6131400aabc1327d58f.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/4f0b9863273d1fe71325f6131400aabc1327d58f/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/4f0b9863273d1fe71325f6131400aabc1327d58f"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/4f0b9863273d1fe71325f6131400aabc1327d58f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/4f0b9863273d1fe71325f6131400aabc1327d58f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/4f0b9863273d1fe71325f6131400aabc1327d58f/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/4f0b9863273d1fe71325f6131400aabc1327d58f/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added set_file function to change which file is being logged to after original setup.\n\nThis is so that all threads can be included in logging, even when you don't know what the log file should be called yet. So you can call log() as early as you want in your program, and then call set_file when you know what you want to rename the log file to.\nFor example in analysis_subprocess, we would like the log files to be named after the analysis routines of each process, but we don't know what the routine is until after some inititialisation code which starts some threads. These threads won't be logged unless we call log() before starting them.", "markup": "markdown", "html": "<p>Added set_file function to change which file is being logged to after original setup.</p>\n<p>This is so that all threads can be included in logging, even when you don't know what the log file should be called yet. So you can call log() as early as you want in your program, and then call set_file when you know what you want to rename the log file to.<br />\nFor example in analysis_subprocess, we would like the log files to be named after the analysis routines of each process, but we don't know what the routine is until after some inititialisation code which starts some threads. These threads won't be logged unless we call log() before starting them.</p>", "type": "rendered"}, "parents": [{"hash": "56e8380c25eb9cb900f4243d61e8ea9a3962c471", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/56e8380c25eb9cb900f4243d61e8ea9a3962c471.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/56e8380c25eb9cb900f4243d61e8ea9a3962c471"}}}], "date": "2012-10-01T08:33:52+00:00", "message": "Added set_file function to change which file is being logged to after original setup.\n\nThis is so that all threads can be included in logging, even when you don't know what the log file should be called yet. So you can call log() as early as you want in your program, and then call set_file when you know what you want to rename the log file to.\nFor example in analysis_subprocess, we would like the log files to be named after the analysis routines of each process, but we don't know what the routine is until after some inititialisation code which starts some threads. These threads won't be logged unless we call log() before starting them.", "type": "commit"}, {"rendered": {"message": {"raw": "tracelog now writes unbuffered to a file, so we can see absolutely everything up to the moment a program dies.", "markup": "markdown", "html": "<p>tracelog now writes unbuffered to a file, so we can see absolutely everything up to the moment a program dies.</p>", "type": "rendered"}}, "hash": "56e8380c25eb9cb900f4243d61e8ea9a3962c471", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/56e8380c25eb9cb900f4243d61e8ea9a3962c471.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/56e8380c25eb9cb900f4243d61e8ea9a3962c471/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/56e8380c25eb9cb900f4243d61e8ea9a3962c471"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/56e8380c25eb9cb900f4243d61e8ea9a3962c471"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/56e8380c25eb9cb900f4243d61e8ea9a3962c471"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/56e8380c25eb9cb900f4243d61e8ea9a3962c471/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/56e8380c25eb9cb900f4243d61e8ea9a3962c471/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "tracelog now writes unbuffered to a file, so we can see absolutely everything up to the moment a program dies.", "markup": "markdown", "html": "<p>tracelog now writes unbuffered to a file, so we can see absolutely everything up to the moment a program dies.</p>", "type": "rendered"}, "parents": [{"hash": "d0c1d7519f3c1e4d6f8603e19c686c6f37b6ddb8", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/d0c1d7519f3c1e4d6f8603e19c686c6f37b6ddb8.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/d0c1d7519f3c1e4d6f8603e19c686c6f37b6ddb8"}}}], "date": "2012-10-01T08:09:46+00:00", "message": "tracelog now writes unbuffered to a file, so we can see absolutely everything up to the moment a program dies.", "type": "commit"}, {"rendered": {"message": {"raw": "Made slightly more robust against failure in different execution modes, ie, when __file__ is not defined because the code in in an eval() or exec() call.\nAdded some more options for what to log", "markup": "markdown", "html": "<p>Made slightly more robust against failure in different execution modes, ie, when <strong>file</strong> is not defined because the code in in an eval() or exec() call.<br />\nAdded some more options for what to log</p>", "type": "rendered"}}, "hash": "d0c1d7519f3c1e4d6f8603e19c686c6f37b6ddb8", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/d0c1d7519f3c1e4d6f8603e19c686c6f37b6ddb8.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/d0c1d7519f3c1e4d6f8603e19c686c6f37b6ddb8/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/d0c1d7519f3c1e4d6f8603e19c686c6f37b6ddb8"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/d0c1d7519f3c1e4d6f8603e19c686c6f37b6ddb8"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/d0c1d7519f3c1e4d6f8603e19c686c6f37b6ddb8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/d0c1d7519f3c1e4d6f8603e19c686c6f37b6ddb8/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/d0c1d7519f3c1e4d6f8603e19c686c6f37b6ddb8/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Made slightly more robust against failure in different execution modes, ie, when __file__ is not defined because the code in in an eval() or exec() call.\nAdded some more options for what to log", "markup": "markdown", "html": "<p>Made slightly more robust against failure in different execution modes, ie, when <strong>file</strong> is not defined because the code in in an eval() or exec() call.<br />\nAdded some more options for what to log</p>", "type": "rendered"}, "parents": [{"hash": "8f59f864013324813a84f52c9fead65b0cd73eca", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/8f59f864013324813a84f52c9fead65b0cd73eca.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/8f59f864013324813a84f52c9fead65b0cd73eca"}}}], "date": "2012-10-01T04:10:15+00:00", "message": "Made slightly more robust against failure in different execution modes, ie, when __file__ is not defined because the code in in an eval() or exec() call.\nAdded some more options for what to log", "type": "commit"}, {"rendered": {"message": {"raw": "Added a module which logs every execution line to a file. This can be useful for extremely fine-grained debugging, especially in multithreaded code and when a program crashes without giving an exception.", "markup": "markdown", "html": "<p>Added a module which logs every execution line to a file. This can be useful for extremely fine-grained debugging, especially in multithreaded code and when a program crashes without giving an exception.</p>", "type": "rendered"}}, "hash": "8f59f864013324813a84f52c9fead65b0cd73eca", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/8f59f864013324813a84f52c9fead65b0cd73eca.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/8f59f864013324813a84f52c9fead65b0cd73eca/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/8f59f864013324813a84f52c9fead65b0cd73eca"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/8f59f864013324813a84f52c9fead65b0cd73eca"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/8f59f864013324813a84f52c9fead65b0cd73eca"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/8f59f864013324813a84f52c9fead65b0cd73eca/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/8f59f864013324813a84f52c9fead65b0cd73eca/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added a module which logs every execution line to a file. This can be useful for extremely fine-grained debugging, especially in multithreaded code and when a program crashes without giving an exception.", "markup": "markdown", "html": "<p>Added a module which logs every execution line to a file. This can be useful for extremely fine-grained debugging, especially in multithreaded code and when a program crashes without giving an exception.</p>", "type": "rendered"}, "parents": [], "date": "2012-09-12T04:39:40+00:00", "message": "Added a module which logs every execution line to a file. This can be useful for extremely fine-grained debugging, especially in multithreaded code and when a program crashes without giving an exception.", "type": "commit"}, {"rendered": {"message": {"raw": "added shared_drive submodule", "markup": "markdown", "html": "<p>added shared_drive submodule</p>", "type": "rendered"}}, "hash": "ef63de0f90a29d82779adadf99ccc4f9d053daf0", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/ef63de0f90a29d82779adadf99ccc4f9d053daf0.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/ef63de0f90a29d82779adadf99ccc4f9d053daf0/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/ef63de0f90a29d82779adadf99ccc4f9d053daf0"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/ef63de0f90a29d82779adadf99ccc4f9d053daf0"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/ef63de0f90a29d82779adadf99ccc4f9d053daf0"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/ef63de0f90a29d82779adadf99ccc4f9d053daf0/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/ef63de0f90a29d82779adadf99ccc4f9d053daf0/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "added shared_drive submodule", "markup": "markdown", "html": "<p>added shared_drive submodule</p>", "type": "rendered"}, "parents": [{"hash": "74a477acb35a0ecfe6de298ca432f511a94dde4e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/74a477acb35a0ecfe6de298ca432f511a94dde4e.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/74a477acb35a0ecfe6de298ca432f511a94dde4e"}}}], "date": "2014-01-24T03:45:18+00:00", "message": "added shared_drive submodule", "type": "commit"}, {"rendered": {"message": {"raw": "Updated test so that it passes on both windows and linux", "markup": "markdown", "html": "<p>Updated test so that it passes on both windows and linux</p>", "type": "rendered"}}, "hash": "74a477acb35a0ecfe6de298ca432f511a94dde4e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/74a477acb35a0ecfe6de298ca432f511a94dde4e.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/74a477acb35a0ecfe6de298ca432f511a94dde4e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/74a477acb35a0ecfe6de298ca432f511a94dde4e"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/74a477acb35a0ecfe6de298ca432f511a94dde4e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/74a477acb35a0ecfe6de298ca432f511a94dde4e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/74a477acb35a0ecfe6de298ca432f511a94dde4e/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/74a477acb35a0ecfe6de298ca432f511a94dde4e/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Updated test so that it passes on both windows and linux", "markup": "markdown", "html": "<p>Updated test so that it passes on both windows and linux</p>", "type": "rendered"}, "parents": [{"hash": "f2ae031f3ad3cc9c9c2caf9223fd1c22b3de6d9b", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/f2ae031f3ad3cc9c9c2caf9223fd1c22b3de6d9b.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/f2ae031f3ad3cc9c9c2caf9223fd1c22b3de6d9b"}}}], "date": "2013-08-07T15:19:39+00:00", "message": "Updated test so that it passes on both windows and linux", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed incorrect joining of drive letter to path; see documentation of os.path.join which states this explicitly", "markup": "markdown", "html": "<p>Fixed incorrect joining of drive letter to path; see documentation of os.path.join which states this explicitly</p>", "type": "rendered"}}, "hash": "f2ae031f3ad3cc9c9c2caf9223fd1c22b3de6d9b", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/f2ae031f3ad3cc9c9c2caf9223fd1c22b3de6d9b.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/f2ae031f3ad3cc9c9c2caf9223fd1c22b3de6d9b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/f2ae031f3ad3cc9c9c2caf9223fd1c22b3de6d9b"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/f2ae031f3ad3cc9c9c2caf9223fd1c22b3de6d9b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/f2ae031f3ad3cc9c9c2caf9223fd1c22b3de6d9b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/f2ae031f3ad3cc9c9c2caf9223fd1c22b3de6d9b/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/f2ae031f3ad3cc9c9c2caf9223fd1c22b3de6d9b/statuses_page=1.json"}}, "author": {"raw": "martijnj", "type": "author"}, "summary": {"raw": "Fixed incorrect joining of drive letter to path; see documentation of os.path.join which states this explicitly", "markup": "markdown", "html": "<p>Fixed incorrect joining of drive letter to path; see documentation of os.path.join which states this explicitly</p>", "type": "rendered"}, "parents": [{"hash": "1852416e4e6f345e8d5fd5d2b629058065f7a54e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/1852416e4e6f345e8d5fd5d2b629058065f7a54e.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/1852416e4e6f345e8d5fd5d2b629058065f7a54e"}}}], "date": "2013-07-31T07:50:25+00:00", "message": "Fixed incorrect joining of drive letter to path; see documentation of os.path.join which states this explicitly", "type": "commit"}, {"rendered": {"message": {"raw": "Removed debug code that was left in. Ensured it still works if the shared drive prefix doesn't have a slash at the end", "markup": "markdown", "html": "<p>Removed debug code that was left in. Ensured it still works if the shared drive prefix doesn't have a slash at the end</p>", "type": "rendered"}}, "hash": "1852416e4e6f345e8d5fd5d2b629058065f7a54e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/1852416e4e6f345e8d5fd5d2b629058065f7a54e.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/1852416e4e6f345e8d5fd5d2b629058065f7a54e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/1852416e4e6f345e8d5fd5d2b629058065f7a54e"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/1852416e4e6f345e8d5fd5d2b629058065f7a54e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/1852416e4e6f345e8d5fd5d2b629058065f7a54e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/1852416e4e6f345e8d5fd5d2b629058065f7a54e/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/1852416e4e6f345e8d5fd5d2b629058065f7a54e/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Removed debug code that was left in. Ensured it still works if the shared drive prefix doesn't have a slash at the end", "markup": "markdown", "html": "<p>Removed debug code that was left in. Ensured it still works if the shared drive prefix doesn't have a slash at the end</p>", "type": "rendered"}, "parents": [{"hash": "630ec24f203b470d09c05f48ef3db30b84a0858e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/630ec24f203b470d09c05f48ef3db30b84a0858e.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/630ec24f203b470d09c05f48ef3db30b84a0858e"}}}], "date": "2013-02-17T13:14:14+00:00", "message": "Removed debug code that was left in. Ensured it still works if the shared drive prefix doesn't have a slash at the end", "type": "commit"}, {"rendered": {"message": {"raw": "Still had the wrong number of slashes. Another attempt.", "markup": "markdown", "html": "<p>Still had the wrong number of slashes. Another attempt.</p>", "type": "rendered"}}, "hash": "630ec24f203b470d09c05f48ef3db30b84a0858e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/630ec24f203b470d09c05f48ef3db30b84a0858e.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/630ec24f203b470d09c05f48ef3db30b84a0858e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/630ec24f203b470d09c05f48ef3db30b84a0858e"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/630ec24f203b470d09c05f48ef3db30b84a0858e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/630ec24f203b470d09c05f48ef3db30b84a0858e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/630ec24f203b470d09c05f48ef3db30b84a0858e/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/630ec24f203b470d09c05f48ef3db30b84a0858e/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Still had the wrong number of slashes. Another attempt.", "markup": "markdown", "html": "<p>Still had the wrong number of slashes. Another attempt.</p>", "type": "rendered"}, "parents": [{"hash": "428bb8e939b3997c1e9120b4084affb66413c3a7", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/428bb8e939b3997c1e9120b4084affb66413c3a7.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/428bb8e939b3997c1e9120b4084affb66413c3a7"}}}], "date": "2013-02-17T07:14:11+00:00", "message": "Still had the wrong number of slashes. Another attempt.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed the wrong number of slashes in path conversion.", "markup": "markdown", "html": "<p>Fixed the wrong number of slashes in path conversion.</p>", "type": "rendered"}}, "hash": "428bb8e939b3997c1e9120b4084affb66413c3a7", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/428bb8e939b3997c1e9120b4084affb66413c3a7.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/428bb8e939b3997c1e9120b4084affb66413c3a7/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/428bb8e939b3997c1e9120b4084affb66413c3a7"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/428bb8e939b3997c1e9120b4084affb66413c3a7"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/428bb8e939b3997c1e9120b4084affb66413c3a7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/428bb8e939b3997c1e9120b4084affb66413c3a7/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/428bb8e939b3997c1e9120b4084affb66413c3a7/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed the wrong number of slashes in path conversion.", "markup": "markdown", "html": "<p>Fixed the wrong number of slashes in path conversion.</p>", "type": "rendered"}, "parents": [{"hash": "db88b3d2c0dea088f4d1ffd6c81d019498c7e39a", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/db88b3d2c0dea088f4d1ffd6c81d019498c7e39a.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/db88b3d2c0dea088f4d1ffd6c81d019498c7e39a"}}}], "date": "2013-02-13T03:54:59+00:00", "message": "Fixed the wrong number of slashes in path conversion.", "type": "commit"}, {"rendered": {"message": {"raw": "Made prefix attribute public", "markup": "markdown", "html": "<p>Made prefix attribute public</p>", "type": "rendered"}}, "hash": "db88b3d2c0dea088f4d1ffd6c81d019498c7e39a", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/db88b3d2c0dea088f4d1ffd6c81d019498c7e39a.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/db88b3d2c0dea088f4d1ffd6c81d019498c7e39a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/db88b3d2c0dea088f4d1ffd6c81d019498c7e39a"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/db88b3d2c0dea088f4d1ffd6c81d019498c7e39a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/db88b3d2c0dea088f4d1ffd6c81d019498c7e39a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/db88b3d2c0dea088f4d1ffd6c81d019498c7e39a/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/db88b3d2c0dea088f4d1ffd6c81d019498c7e39a/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Made prefix attribute public", "markup": "markdown", "html": "<p>Made prefix attribute public</p>", "type": "rendered"}, "parents": [{"hash": "7161d4cd5501977f5b8133d4faeecd0a8b385241", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/7161d4cd5501977f5b8133d4faeecd0a8b385241.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/7161d4cd5501977f5b8133d4faeecd0a8b385241"}}}], "date": "2012-09-28T05:00:07+00:00", "message": "Made prefix attribute public", "type": "commit"}, {"rendered": {"message": {"raw": "Removed all shared drive mounting and finding functionality. Now all this module does is convert paths from local paths to platform agnostic ones and vice versa.\n\nSo if programs send paths over the network, they first call shared_drive.path_to_agnostic on it, and when programs receive paths, they call path_to_local before attempting to access the file.\n\nThis process is performed manually in many of our programs, they will slowly be migrated to use the same module, as is neater.", "markup": "markdown", "html": "<p>Removed all shared drive mounting and finding functionality. Now all this module does is convert paths from local paths to platform agnostic ones and vice versa.</p>\n<p>So if programs send paths over the network, they first call shared_drive.path_to_agnostic on it, and when programs receive paths, they call path_to_local before attempting to access the file.</p>\n<p>This process is performed manually in many of our programs, they will slowly be migrated to use the same module, as is neater.</p>", "type": "rendered"}}, "hash": "7161d4cd5501977f5b8133d4faeecd0a8b385241", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/7161d4cd5501977f5b8133d4faeecd0a8b385241.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/7161d4cd5501977f5b8133d4faeecd0a8b385241/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/7161d4cd5501977f5b8133d4faeecd0a8b385241"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/7161d4cd5501977f5b8133d4faeecd0a8b385241"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/7161d4cd5501977f5b8133d4faeecd0a8b385241"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/7161d4cd5501977f5b8133d4faeecd0a8b385241/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/7161d4cd5501977f5b8133d4faeecd0a8b385241/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Removed all shared drive mounting and finding functionality. Now all this module does is convert paths from local paths to platform agnostic ones and vice versa.\n\nSo if programs send paths over the network, they first call shared_drive.path_to_agnostic on it, and when programs receive paths, they call path_to_local before attempting to access the file.\n\nThis process is performed manually in many of our programs, they will slowly be migrated to use the same module, as is neater.", "markup": "markdown", "html": "<p>Removed all shared drive mounting and finding functionality. Now all this module does is convert paths from local paths to platform agnostic ones and vice versa.</p>\n<p>So if programs send paths over the network, they first call shared_drive.path_to_agnostic on it, and when programs receive paths, they call path_to_local before attempting to access the file.</p>\n<p>This process is performed manually in many of our programs, they will slowly be migrated to use the same module, as is neater.</p>", "type": "rendered"}, "parents": [{"hash": "fa3226c2e2957c1efe4402cf1083147ad45d5e6c", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/fa3226c2e2957c1efe4402cf1083147ad45d5e6c.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/fa3226c2e2957c1efe4402cf1083147ad45d5e6c"}}}], "date": "2012-09-27T12:31:19+00:00", "message": "Removed all shared drive mounting and finding functionality. Now all this module does is convert paths from local paths to platform agnostic ones and vice versa.\n\nSo if programs send paths over the network, they first call shared_drive.path_to_agnostic on it, and when programs receive paths, they call path_to_local before attempting to access the file.\n\nThis process is performed manually in many of our programs, they will slowly be migrated to use the same module, as is neater.", "type": "commit"}, {"rendered": {"message": {"raw": "Removed pointless comment", "markup": "markdown", "html": "<p>Removed pointless comment</p>", "type": "rendered"}}, "hash": "fa3226c2e2957c1efe4402cf1083147ad45d5e6c", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/fa3226c2e2957c1efe4402cf1083147ad45d5e6c.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/fa3226c2e2957c1efe4402cf1083147ad45d5e6c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/fa3226c2e2957c1efe4402cf1083147ad45d5e6c"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/fa3226c2e2957c1efe4402cf1083147ad45d5e6c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/fa3226c2e2957c1efe4402cf1083147ad45d5e6c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/fa3226c2e2957c1efe4402cf1083147ad45d5e6c/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/fa3226c2e2957c1efe4402cf1083147ad45d5e6c/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Removed pointless comment", "markup": "markdown", "html": "<p>Removed pointless comment</p>", "type": "rendered"}, "parents": [{"hash": "8648b902d6308cab34b798fd1002e56ea8d78719", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/8648b902d6308cab34b798fd1002e56ea8d78719.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/8648b902d6308cab34b798fd1002e56ea8d78719"}}}], "date": "2012-05-10T03:21:43+00:00", "message": "Removed pointless comment", "type": "commit"}, {"rendered": {"message": {"raw": "Added macos support", "markup": "markdown", "html": "<p>Added macos support</p>", "type": "rendered"}}, "hash": "8648b902d6308cab34b798fd1002e56ea8d78719", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/8648b902d6308cab34b798fd1002e56ea8d78719.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/8648b902d6308cab34b798fd1002e56ea8d78719/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/8648b902d6308cab34b798fd1002e56ea8d78719"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/8648b902d6308cab34b798fd1002e56ea8d78719"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/8648b902d6308cab34b798fd1002e56ea8d78719"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/8648b902d6308cab34b798fd1002e56ea8d78719/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/8648b902d6308cab34b798fd1002e56ea8d78719/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added macos support", "markup": "markdown", "html": "<p>Added macos support</p>", "type": "rendered"}, "parents": [{"hash": "1177a15b2edf880eb88ffa59b0dcbe07ef92c842", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/1177a15b2edf880eb88ffa59b0dcbe07ef92c842.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/1177a15b2edf880eb88ffa59b0dcbe07ef92c842"}}}], "date": "2012-05-10T03:20:39+00:00", "message": "Added macos support", "type": "commit"}, {"rendered": {"message": {"raw": "get_prefix_linux only worked for locations mounted using gvfs in the home directory of the user running the script. Mounted location might not use gvfs (e.g. on distributions where gvfs isn't  used, and/or those using etc/fstab).\nImplemented support for such mounts, used after checking existence/use of gvfs.\nAs this module returns the mount point of any mounted filesystem on Linux (using gvfs, /etc/fstab), consider rename of:\n* module \"shared_drive\" to \"mount_point\" or \"mountpoint\"\n* function \"get_prefix\" to \"get_mount_point\" or \"get_mountpoint\" or \"get_mtpt\"\nAlso added os.sep to output of get_prefix_win, such that:\nos.path.join( get_prefix( some_mount ), some_directory) works on Windows and Linux.", "markup": "markdown", "html": "<p>get_prefix_linux only worked for locations mounted using gvfs in the home directory of the user running the script. Mounted location might not use gvfs (e.g. on distributions where gvfs isn't  used, and/or those using etc/fstab).<br />\nImplemented support for such mounts, used after checking existence/use of gvfs.<br />\nAs this module returns the mount point of any mounted filesystem on Linux (using gvfs, /etc/fstab), consider rename of:<br />\n<em> module \"shared_drive\" to \"mount_point\" or \"mountpoint\"<br />\n</em> function \"get_prefix\" to \"get_mount_point\" or \"get_mountpoint\" or \"get_mtpt\"<br />\nAlso added os.sep to output of get_prefix_win, such that:<br />\nos.path.join( get_prefix( some_mount ), some_directory) works on Windows and Linux.</p>", "type": "rendered"}}, "hash": "1177a15b2edf880eb88ffa59b0dcbe07ef92c842", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/1177a15b2edf880eb88ffa59b0dcbe07ef92c842.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/1177a15b2edf880eb88ffa59b0dcbe07ef92c842/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/1177a15b2edf880eb88ffa59b0dcbe07ef92c842"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/1177a15b2edf880eb88ffa59b0dcbe07ef92c842"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/1177a15b2edf880eb88ffa59b0dcbe07ef92c842"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/1177a15b2edf880eb88ffa59b0dcbe07ef92c842/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/1177a15b2edf880eb88ffa59b0dcbe07ef92c842/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "get_prefix_linux only worked for locations mounted using gvfs in the home directory of the user running the script. Mounted location might not use gvfs (e.g. on distributions where gvfs isn't  used, and/or those using etc/fstab).\nImplemented support for such mounts, used after checking existence/use of gvfs.\nAs this module returns the mount point of any mounted filesystem on Linux (using gvfs, /etc/fstab), consider rename of:\n* module \"shared_drive\" to \"mount_point\" or \"mountpoint\"\n* function \"get_prefix\" to \"get_mount_point\" or \"get_mountpoint\" or \"get_mtpt\"\nAlso added os.sep to output of get_prefix_win, such that:\nos.path.join( get_prefix( some_mount ), some_directory) works on Windows and Linux.", "markup": "markdown", "html": "<p>get_prefix_linux only worked for locations mounted using gvfs in the home directory of the user running the script. Mounted location might not use gvfs (e.g. on distributions where gvfs isn't  used, and/or those using etc/fstab).<br />\nImplemented support for such mounts, used after checking existence/use of gvfs.<br />\nAs this module returns the mount point of any mounted filesystem on Linux (using gvfs, /etc/fstab), consider rename of:<br />\n<em> module \"shared_drive\" to \"mount_point\" or \"mountpoint\"<br />\n</em> function \"get_prefix\" to \"get_mount_point\" or \"get_mountpoint\" or \"get_mtpt\"<br />\nAlso added os.sep to output of get_prefix_win, such that:<br />\nos.path.join( get_prefix( some_mount ), some_directory) works on Windows and Linux.</p>", "type": "rendered"}, "parents": [{"hash": "a1076c890f3a5c7faec4e2988a1e71f18ec1a044", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/a1076c890f3a5c7faec4e2988a1e71f18ec1a044.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/a1076c890f3a5c7faec4e2988a1e71f18ec1a044"}}}], "date": "2012-04-10T10:59:43+00:00", "message": "get_prefix_linux only worked for locations mounted using gvfs in the home directory of the user running the script. Mounted location might not use gvfs (e.g. on distributions where gvfs isn't  used, and/or those using etc/fstab).\nImplemented support for such mounts, used after checking existence/use of gvfs.\nAs this module returns the mount point of any mounted filesystem on Linux (using gvfs, /etc/fstab), consider rename of:\n* module \"shared_drive\" to \"mount_point\" or \"mountpoint\"\n* function \"get_prefix\" to \"get_mount_point\" or \"get_mountpoint\" or \"get_mtpt\"\nAlso added os.sep to output of get_prefix_win, such that:\nos.path.join( get_prefix( some_mount ), some_directory) works on Windows and Linux.", "type": "commit"}, {"rendered": {"message": {"raw": "fixed strange bug on windows where the drive letter was an empty string, while the share contained the path to monash BEC. We now check for that, and ignore entries with empty strings as the drive letter!", "markup": "markdown", "html": "<p>fixed strange bug on windows where the drive letter was an empty string, while the share contained the path to monash BEC. We now check for that, and ignore entries with empty strings as the drive letter!</p>", "type": "rendered"}}, "hash": "a1076c890f3a5c7faec4e2988a1e71f18ec1a044", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/a1076c890f3a5c7faec4e2988a1e71f18ec1a044.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/a1076c890f3a5c7faec4e2988a1e71f18ec1a044/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/a1076c890f3a5c7faec4e2988a1e71f18ec1a044"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/a1076c890f3a5c7faec4e2988a1e71f18ec1a044"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/a1076c890f3a5c7faec4e2988a1e71f18ec1a044"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/a1076c890f3a5c7faec4e2988a1e71f18ec1a044/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/a1076c890f3a5c7faec4e2988a1e71f18ec1a044/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "fixed strange bug on windows where the drive letter was an empty string, while the share contained the path to monash BEC. We now check for that, and ignore entries with empty strings as the drive letter!", "markup": "markdown", "html": "<p>fixed strange bug on windows where the drive letter was an empty string, while the share contained the path to monash BEC. We now check for that, and ignore entries with empty strings as the drive letter!</p>", "type": "rendered"}, "parents": [{"hash": "1d128e320e64021fdd71362a7bce96b299137c59", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/1d128e320e64021fdd71362a7bce96b299137c59.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/1d128e320e64021fdd71362a7bce96b299137c59"}}}], "date": "2012-03-14T06:57:21+00:00", "message": "fixed strange bug on windows where the drive letter was an empty string, while the share contained the path to monash BEC. We now check for that, and ignore entries with empty strings as the drive letter!", "type": "commit"}, {"rendered": {"message": {"raw": "Made screenshotting and getting of the shareddrive prefix work in windows", "markup": "markdown", "html": "<p>Made screenshotting and getting of the shareddrive prefix work in windows</p>", "type": "rendered"}}, "hash": "1d128e320e64021fdd71362a7bce96b299137c59", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/1d128e320e64021fdd71362a7bce96b299137c59.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/1d128e320e64021fdd71362a7bce96b299137c59/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/1d128e320e64021fdd71362a7bce96b299137c59"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/1d128e320e64021fdd71362a7bce96b299137c59"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/1d128e320e64021fdd71362a7bce96b299137c59"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/1d128e320e64021fdd71362a7bce96b299137c59/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/1d128e320e64021fdd71362a7bce96b299137c59/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Made screenshotting and getting of the shareddrive prefix work in windows", "markup": "markdown", "html": "<p>Made screenshotting and getting of the shareddrive prefix work in windows</p>", "type": "rendered"}, "parents": [{"hash": "38fafa64bc94cb77f2460d7a8d93c43acd94921f", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/38fafa64bc94cb77f2460d7a8d93c43acd94921f.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/38fafa64bc94cb77f2460d7a8d93c43acd94921f"}}}], "date": "2012-03-09T04:49:29+00:00", "message": "Made screenshotting and getting of the shareddrive prefix work in windows", "type": "commit"}, {"rendered": {"message": {"raw": "Added screenshot and shared_drive modues. Screenshot takes screenshots, shared_drive works out what the prefix for the shared drive is on both windows and linux", "markup": "markdown", "html": "<p>Added screenshot and shared_drive modues. Screenshot takes screenshots, shared_drive works out what the prefix for the shared drive is on both windows and linux</p>", "type": "rendered"}}, "hash": "38fafa64bc94cb77f2460d7a8d93c43acd94921f", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/38fafa64bc94cb77f2460d7a8d93c43acd94921f.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/38fafa64bc94cb77f2460d7a8d93c43acd94921f/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/38fafa64bc94cb77f2460d7a8d93c43acd94921f"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/38fafa64bc94cb77f2460d7a8d93c43acd94921f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/38fafa64bc94cb77f2460d7a8d93c43acd94921f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/38fafa64bc94cb77f2460d7a8d93c43acd94921f/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/38fafa64bc94cb77f2460d7a8d93c43acd94921f/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added screenshot and shared_drive modues. Screenshot takes screenshots, shared_drive works out what the prefix for the shared drive is on both windows and linux", "markup": "markdown", "html": "<p>Added screenshot and shared_drive modues. Screenshot takes screenshots, shared_drive works out what the prefix for the shared drive is on both windows and linux</p>", "type": "rendered"}, "parents": [], "date": "2012-03-09T04:34:31+00:00", "message": "Added screenshot and shared_drive modues. Screenshot takes screenshots, shared_drive works out what the prefix for the shared drive is on both windows and linux", "type": "commit"}, {"rendered": {"message": {"raw": "added settings submodule", "markup": "markdown", "html": "<p>added settings submodule</p>", "type": "rendered"}}, "hash": "9c0061b6f1559e4f9bfdc5b73a17cbeca009e696", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/9c0061b6f1559e4f9bfdc5b73a17cbeca009e696.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/9c0061b6f1559e4f9bfdc5b73a17cbeca009e696/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/9c0061b6f1559e4f9bfdc5b73a17cbeca009e696"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/9c0061b6f1559e4f9bfdc5b73a17cbeca009e696"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/9c0061b6f1559e4f9bfdc5b73a17cbeca009e696"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/9c0061b6f1559e4f9bfdc5b73a17cbeca009e696/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/9c0061b6f1559e4f9bfdc5b73a17cbeca009e696/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "added settings submodule", "markup": "markdown", "html": "<p>added settings submodule</p>", "type": "rendered"}, "parents": [{"hash": "bf5046477c408ac73a5f09564ec7a34ed21734a8", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/bf5046477c408ac73a5f09564ec7a34ed21734a8.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/bf5046477c408ac73a5f09564ec7a34ed21734a8"}}}], "date": "2014-01-24T03:45:17+00:00", "message": "added settings submodule", "type": "commit"}, {"rendered": {"message": {"raw": "Deleted glade file from qt branch", "markup": "markdown", "html": "<p>Deleted glade file from qt branch</p>", "type": "rendered"}}, "hash": "bf5046477c408ac73a5f09564ec7a34ed21734a8", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/bf5046477c408ac73a5f09564ec7a34ed21734a8.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/bf5046477c408ac73a5f09564ec7a34ed21734a8/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/bf5046477c408ac73a5f09564ec7a34ed21734a8"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/bf5046477c408ac73a5f09564ec7a34ed21734a8"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/bf5046477c408ac73a5f09564ec7a34ed21734a8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/bf5046477c408ac73a5f09564ec7a34ed21734a8/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/bf5046477c408ac73a5f09564ec7a34ed21734a8/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Deleted glade file from qt branch", "markup": "markdown", "html": "<p>Deleted glade file from qt branch</p>", "type": "rendered"}, "parents": [{"hash": "2bcda7a9e84760c5d5687287e62fcb1f58e4f5d0", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/2bcda7a9e84760c5d5687287e62fcb1f58e4f5d0.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/2bcda7a9e84760c5d5687287e62fcb1f58e4f5d0"}}}], "date": "2014-01-23T00:17:27+00:00", "message": "Deleted glade file from qt branch", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed memory leak with dialogs.\n\nYou should either:\n* call dialog.setAttribute(Qt.WA_DeleteOnClose,True) if you don't need to access the dialog once the user closes the dialog, or\n* call dialog.deleteLater() once you have finished with the dialog\n\nIf you do not, the memory will not be cleared properly and your application will likely crash randomly after the dialog is closed.", "markup": "markdown", "html": "<p>Fixed memory leak with dialogs.</p>\n<p>You should either:<br />\n<em> call dialog.setAttribute(Qt.WA_DeleteOnClose,True) if you don't need to access the dialog once the user closes the dialog, or<br />\n</em> call dialog.deleteLater() once you have finished with the dialog</p>\n<p>If you do not, the memory will not be cleared properly and your application will likely crash randomly after the dialog is closed.</p>", "type": "rendered"}}, "hash": "2bcda7a9e84760c5d5687287e62fcb1f58e4f5d0", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/2bcda7a9e84760c5d5687287e62fcb1f58e4f5d0.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/2bcda7a9e84760c5d5687287e62fcb1f58e4f5d0/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/2bcda7a9e84760c5d5687287e62fcb1f58e4f5d0"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/2bcda7a9e84760c5d5687287e62fcb1f58e4f5d0"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/2bcda7a9e84760c5d5687287e62fcb1f58e4f5d0"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/2bcda7a9e84760c5d5687287e62fcb1f58e4f5d0/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/2bcda7a9e84760c5d5687287e62fcb1f58e4f5d0/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed memory leak with dialogs.\n\nYou should either:\n* call dialog.setAttribute(Qt.WA_DeleteOnClose,True) if you don't need to access the dialog once the user closes the dialog, or\n* call dialog.deleteLater() once you have finished with the dialog\n\nIf you do not, the memory will not be cleared properly and your application will likely crash randomly after the dialog is closed.", "markup": "markdown", "html": "<p>Fixed memory leak with dialogs.</p>\n<p>You should either:<br />\n<em> call dialog.setAttribute(Qt.WA_DeleteOnClose,True) if you don't need to access the dialog once the user closes the dialog, or<br />\n</em> call dialog.deleteLater() once you have finished with the dialog</p>\n<p>If you do not, the memory will not be cleared properly and your application will likely crash randomly after the dialog is closed.</p>", "type": "rendered"}, "parents": [{"hash": "661581b32f71e6ede4f614b3ddcb57c15872504c", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/661581b32f71e6ede4f614b3ddcb57c15872504c.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/661581b32f71e6ede4f614b3ddcb57c15872504c"}}}], "date": "2013-11-13T06:20:43+00:00", "message": "Fixed memory leak with dialogs.\n\nYou should either:\n* call dialog.setAttribute(Qt.WA_DeleteOnClose,True) if you don't need to access the dialog once the user closes the dialog, or\n* call dialog.deleteLater() once you have finished with the dialog\n\nIf you do not, the memory will not be cleared properly and your application will likely crash randomly after the dialog is closed.", "type": "commit"}, {"rendered": {"message": {"raw": "Switched the Settings system to use Qt (don't update to this revision if you are using GTK BLACS)", "markup": "markdown", "html": "<p>Switched the Settings system to use Qt (don't update to this revision if you are using GTK BLACS)</p>", "type": "rendered"}}, "hash": "661581b32f71e6ede4f614b3ddcb57c15872504c", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/661581b32f71e6ede4f614b3ddcb57c15872504c.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/661581b32f71e6ede4f614b3ddcb57c15872504c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/661581b32f71e6ede4f614b3ddcb57c15872504c"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/661581b32f71e6ede4f614b3ddcb57c15872504c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/661581b32f71e6ede4f614b3ddcb57c15872504c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/661581b32f71e6ede4f614b3ddcb57c15872504c/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/661581b32f71e6ede4f614b3ddcb57c15872504c/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Switched the Settings system to use Qt (don't update to this revision if you are using GTK BLACS)", "markup": "markdown", "html": "<p>Switched the Settings system to use Qt (don't update to this revision if you are using GTK BLACS)</p>", "type": "rendered"}, "parents": [{"hash": "efbf7b5ca62fd158e5f34ecd515de0e0f75717ce", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/efbf7b5ca62fd158e5f34ecd515de0e0f75717ce.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/efbf7b5ca62fd158e5f34ecd515de0e0f75717ce"}}}], "date": "2013-10-23T02:17:29+00:00", "message": "Switched the Settings system to use Qt (don't update to this revision if you are using GTK BLACS)", "type": "commit"}, {"rendered": {"message": {"raw": "a (hopefully temporary) fix for bug #610.\nThis is in the h5_lock module, which is where I was hacking things onto h5py anyway. I've disabled the actual h5_locking for the moment, until I make a few changes to pythonlib to accomodate it, such as BLACS worker processes not holding the file open for minutes at a time while they program a device (I'm looking at you, novatech) when they could easily close the file prior to programming.\n\nAdded imports everywhere needed throughout pythonlib", "markup": "markdown", "html": "<p>a (hopefully temporary) fix for bug #610.<br />\nThis is in the h5_lock module, which is where I was hacking things onto h5py anyway. I've disabled the actual h5_locking for the moment, until I make a few changes to pythonlib to accomodate it, such as BLACS worker processes not holding the file open for minutes at a time while they program a device (I'm looking at you, novatech) when they could easily close the file prior to programming.</p>\n<p>Added imports everywhere needed throughout pythonlib</p>", "type": "rendered"}}, "hash": "efbf7b5ca62fd158e5f34ecd515de0e0f75717ce", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/efbf7b5ca62fd158e5f34ecd515de0e0f75717ce.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/efbf7b5ca62fd158e5f34ecd515de0e0f75717ce/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/efbf7b5ca62fd158e5f34ecd515de0e0f75717ce"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/efbf7b5ca62fd158e5f34ecd515de0e0f75717ce"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/efbf7b5ca62fd158e5f34ecd515de0e0f75717ce"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/efbf7b5ca62fd158e5f34ecd515de0e0f75717ce/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/efbf7b5ca62fd158e5f34ecd515de0e0f75717ce/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "a (hopefully temporary) fix for bug #610.\nThis is in the h5_lock module, which is where I was hacking things onto h5py anyway. I've disabled the actual h5_locking for the moment, until I make a few changes to pythonlib to accomodate it, such as BLACS worker processes not holding the file open for minutes at a time while they program a device (I'm looking at you, novatech) when they could easily close the file prior to programming.\n\nAdded imports everywhere needed throughout pythonlib", "markup": "markdown", "html": "<p>a (hopefully temporary) fix for bug #610.<br />\nThis is in the h5_lock module, which is where I was hacking things onto h5py anyway. I've disabled the actual h5_locking for the moment, until I make a few changes to pythonlib to accomodate it, such as BLACS worker processes not holding the file open for minutes at a time while they program a device (I'm looking at you, novatech) when they could easily close the file prior to programming.</p>\n<p>Added imports everywhere needed throughout pythonlib</p>", "type": "rendered"}, "parents": [{"hash": "d91d02a6f9ce155441679f85fad833b98f860317", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/d91d02a6f9ce155441679f85fad833b98f860317.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/d91d02a6f9ce155441679f85fad833b98f860317"}}}], "date": "2012-10-05T10:45:17+00:00", "message": "a (hopefully temporary) fix for bug #610.\nThis is in the h5_lock module, which is where I was hacking things onto h5py anyway. I've disabled the actual h5_locking for the moment, until I make a few changes to pythonlib to accomodate it, such as BLACS worker processes not holding the file open for minutes at a time while they program a device (I'm looking at you, novatech) when they could easily close the file prior to programming.\n\nAdded imports everywhere needed throughout pythonlib", "type": "commit"}, {"rendered": {"message": {"raw": "implemented interface to save data to a hdf5 file\nimplemented interface to call callback functions when settings are changed/saved.", "markup": "markdown", "html": "<p>implemented interface to save data to a hdf5 file<br />\nimplemented interface to call callback functions when settings are changed/saved.</p>", "type": "rendered"}}, "hash": "d91d02a6f9ce155441679f85fad833b98f860317", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/d91d02a6f9ce155441679f85fad833b98f860317.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/d91d02a6f9ce155441679f85fad833b98f860317/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/d91d02a6f9ce155441679f85fad833b98f860317"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/d91d02a6f9ce155441679f85fad833b98f860317"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/d91d02a6f9ce155441679f85fad833b98f860317"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/d91d02a6f9ce155441679f85fad833b98f860317/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/d91d02a6f9ce155441679f85fad833b98f860317/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "implemented interface to save data to a hdf5 file\nimplemented interface to call callback functions when settings are changed/saved.", "markup": "markdown", "html": "<p>implemented interface to save data to a hdf5 file<br />\nimplemented interface to call callback functions when settings are changed/saved.</p>", "type": "rendered"}, "parents": [{"hash": "e72a0d6652d195b3041ce651cde0dbfa917f2afd", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/e72a0d6652d195b3041ce651cde0dbfa917f2afd.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/e72a0d6652d195b3041ce651cde0dbfa917f2afd"}}}], "date": "2012-06-08T05:37:19+00:00", "message": "implemented interface to save data to a hdf5 file\nimplemented interface to call callback functions when settings are changed/saved.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed some bugs in the untested code.\nModified the interface slightly!\n\nThis is now usable!", "markup": "markdown", "html": "<p>Fixed some bugs in the untested code.<br />\nModified the interface slightly!</p>\n<p>This is now usable!</p>", "type": "rendered"}}, "hash": "e72a0d6652d195b3041ce651cde0dbfa917f2afd", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/e72a0d6652d195b3041ce651cde0dbfa917f2afd.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/e72a0d6652d195b3041ce651cde0dbfa917f2afd/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/e72a0d6652d195b3041ce651cde0dbfa917f2afd"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/e72a0d6652d195b3041ce651cde0dbfa917f2afd"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/e72a0d6652d195b3041ce651cde0dbfa917f2afd"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/e72a0d6652d195b3041ce651cde0dbfa917f2afd/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/e72a0d6652d195b3041ce651cde0dbfa917f2afd/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed some bugs in the untested code.\nModified the interface slightly!\n\nThis is now usable!", "markup": "markdown", "html": "<p>Fixed some bugs in the untested code.<br />\nModified the interface slightly!</p>\n<p>This is now usable!</p>", "type": "rendered"}, "parents": [{"hash": "3ab27f48e781f4701961fa9dd080e5b1e30b8ac5", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/3ab27f48e781f4701961fa9dd080e5b1e30b8ac5.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/3ab27f48e781f4701961fa9dd080e5b1e30b8ac5"}}}], "date": "2012-06-08T01:33:17+00:00", "message": "Fixed some bugs in the untested code.\nModified the interface slightly!\n\nThis is now usable!", "type": "commit"}, {"rendered": {"message": {"raw": "Basic workings of a generic \"settings\" dialog that we can use across all our applications.\n\n** Untested **", "markup": "markdown", "html": "<p>Basic workings of a generic \"settings\" dialog that we can use across all our applications.</p>\n<p><strong> Untested </strong></p>", "type": "rendered"}}, "hash": "3ab27f48e781f4701961fa9dd080e5b1e30b8ac5", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/3ab27f48e781f4701961fa9dd080e5b1e30b8ac5.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/3ab27f48e781f4701961fa9dd080e5b1e30b8ac5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/3ab27f48e781f4701961fa9dd080e5b1e30b8ac5"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/3ab27f48e781f4701961fa9dd080e5b1e30b8ac5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/3ab27f48e781f4701961fa9dd080e5b1e30b8ac5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/3ab27f48e781f4701961fa9dd080e5b1e30b8ac5/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/3ab27f48e781f4701961fa9dd080e5b1e30b8ac5/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Basic workings of a generic \"settings\" dialog that we can use across all our applications.\n\n** Untested **", "markup": "markdown", "html": "<p>Basic workings of a generic \"settings\" dialog that we can use across all our applications.</p>\n<p><strong> Untested </strong></p>", "type": "rendered"}, "parents": [], "date": "2012-06-07T08:18:30+00:00", "message": "Basic workings of a generic \"settings\" dialog that we can use across all our applications.\n\n** Untested **", "type": "commit"}, {"rendered": {"message": {"raw": "added LabConfig submodule and renamed it to labconfig.py", "markup": "markdown", "html": "<p>added LabConfig submodule and renamed it to labconfig.py</p>", "type": "rendered"}}, "hash": "f0d125469e5430503325b8932a063cc329573a16", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/f0d125469e5430503325b8932a063cc329573a16.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/f0d125469e5430503325b8932a063cc329573a16/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/f0d125469e5430503325b8932a063cc329573a16"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/f0d125469e5430503325b8932a063cc329573a16"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/f0d125469e5430503325b8932a063cc329573a16"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/f0d125469e5430503325b8932a063cc329573a16/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/f0d125469e5430503325b8932a063cc329573a16/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "added LabConfig submodule and renamed it to labconfig.py", "markup": "markdown", "html": "<p>added LabConfig submodule and renamed it to labconfig.py</p>", "type": "rendered"}, "parents": [{"hash": "ce2c0102e406057a1107f573ec77a73cbc7d138f", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/ce2c0102e406057a1107f573ec77a73cbc7d138f.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/ce2c0102e406057a1107f573ec77a73cbc7d138f"}}}], "date": "2014-01-24T03:45:17+00:00", "message": "added LabConfig submodule and renamed it to labconfig.py", "type": "commit"}, {"rendered": {"message": {"raw": "Added support for the LabConfig class to open multiple files.\nThis functionality allows a *.ini file to use parameters (for instance common paths) that are located in another ini file", "markup": "markdown", "html": "<p>Added support for the LabConfig class to open multiple files.<br />\nThis functionality allows a *.ini file to use parameters (for instance common paths) that are located in another ini file</p>", "type": "rendered"}}, "hash": "ce2c0102e406057a1107f573ec77a73cbc7d138f", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/ce2c0102e406057a1107f573ec77a73cbc7d138f.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/ce2c0102e406057a1107f573ec77a73cbc7d138f/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/ce2c0102e406057a1107f573ec77a73cbc7d138f"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/ce2c0102e406057a1107f573ec77a73cbc7d138f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/ce2c0102e406057a1107f573ec77a73cbc7d138f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/ce2c0102e406057a1107f573ec77a73cbc7d138f/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/ce2c0102e406057a1107f573ec77a73cbc7d138f/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added support for the LabConfig class to open multiple files.\nThis functionality allows a *.ini file to use parameters (for instance common paths) that are located in another ini file", "markup": "markdown", "html": "<p>Added support for the LabConfig class to open multiple files.<br />\nThis functionality allows a *.ini file to use parameters (for instance common paths) that are located in another ini file</p>", "type": "rendered"}, "parents": [{"hash": "3730bc7868c4f44b1f75a538b6fa31808590db4f", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/3730bc7868c4f44b1f75a538b6fa31808590db4f.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/3730bc7868c4f44b1f75a538b6fa31808590db4f"}}}], "date": "2013-09-13T08:37:54+00:00", "message": "Added support for the LabConfig class to open multiple files.\nThis functionality allows a *.ini file to use parameters (for instance common paths) that are located in another ini file", "type": "commit"}, {"rendered": {"message": {"raw": "Merge", "markup": "markdown", "html": "<p>Merge</p>", "type": "rendered"}}, "hash": "3730bc7868c4f44b1f75a538b6fa31808590db4f", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/3730bc7868c4f44b1f75a538b6fa31808590db4f.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/3730bc7868c4f44b1f75a538b6fa31808590db4f/comments_page=1.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/3730bc7868c4f44b1f75a538b6fa31808590db4f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/3730bc7868c4f44b1f75a538b6fa31808590db4f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/3730bc7868c4f44b1f75a538b6fa31808590db4f/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/3730bc7868c4f44b1f75a538b6fa31808590db4f/statuses_page=1.json"}}, "author": {"raw": "test", "type": "author"}, "summary": {"raw": "Merge", "markup": "markdown", "html": "<p>Merge</p>", "type": "rendered"}, "parents": [{"hash": "b7816ae270bfc7f3817451353495db4934c79041", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/b7816ae270bfc7f3817451353495db4934c79041.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/b7816ae270bfc7f3817451353495db4934c79041"}}}, {"hash": "b7645934152dab4f1a35cadb039c0a94aa1df296", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/b7645934152dab4f1a35cadb039c0a94aa1df296.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/b7645934152dab4f1a35cadb039c0a94aa1df296"}}}], "date": "2013-07-23T01:54:28+00:00", "message": "Merge", "type": "commit"}, {"rendered": {"message": {"raw": "Added error variables from ConfigParser to allow catchig these exceptions\nin depenedent modules.", "markup": "markdown", "html": "<p>Added error variables from ConfigParser to allow catchig these exceptions<br />\nin depenedent modules.</p>", "type": "rendered"}}, "hash": "b7816ae270bfc7f3817451353495db4934c79041", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/b7816ae270bfc7f3817451353495db4934c79041.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/b7816ae270bfc7f3817451353495db4934c79041/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/b7816ae270bfc7f3817451353495db4934c79041"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/b7816ae270bfc7f3817451353495db4934c79041"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/b7816ae270bfc7f3817451353495db4934c79041"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/b7816ae270bfc7f3817451353495db4934c79041/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/b7816ae270bfc7f3817451353495db4934c79041/statuses_page=1.json"}}, "author": {"raw": "test", "type": "author"}, "summary": {"raw": "Added error variables from ConfigParser to allow catchig these exceptions\nin depenedent modules.", "markup": "markdown", "html": "<p>Added error variables from ConfigParser to allow catchig these exceptions<br />\nin depenedent modules.</p>", "type": "rendered"}, "parents": [{"hash": "9f01e3ce69bfd4dc911a61a66ed533602403f4cc", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/9f01e3ce69bfd4dc911a61a66ed533602403f4cc.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/9f01e3ce69bfd4dc911a61a66ed533602403f4cc"}}}], "date": "2013-07-23T01:53:50+00:00", "message": "Added error variables from ConfigParser to allow catchig these exceptions\nin depenedent modules.", "type": "commit"}, {"rendered": {"message": {"raw": "Another trivial edit to test push (added a space to a comment :)", "markup": "markdown", "html": "<p>Another trivial edit to test push (added a space to a comment :)</p>", "type": "rendered"}}, "hash": "b7645934152dab4f1a35cadb039c0a94aa1df296", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/b7645934152dab4f1a35cadb039c0a94aa1df296.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/b7645934152dab4f1a35cadb039c0a94aa1df296/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/b7645934152dab4f1a35cadb039c0a94aa1df296"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/b7645934152dab4f1a35cadb039c0a94aa1df296"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/b7645934152dab4f1a35cadb039c0a94aa1df296"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/b7645934152dab4f1a35cadb039c0a94aa1df296/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/b7645934152dab4f1a35cadb039c0a94aa1df296/statuses_page=1.json"}}, "author": {"raw": "Lincoln Turner <lincoln.turner@monash.edu>", "type": "author", "user": {"display_name": "Lincoln Turner", "uuid": "{dc6eefbb-6560-488e-bd24-b7cabe6e3fb2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdc6eefbb-6560-488e-bd24-b7cabe6e3fb2%7D"}, "html": {"href": "https://bitbucket.org/%7Bdc6eefbb-6560-488e-bd24-b7cabe6e3fb2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/26c040adc170a4ec90cd9bc4f7ab0479d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLT-2.png"}}, "nickname": "lincolnturner_monash", "type": "user", "account_id": "5ba47327653ec8726d2a0087"}}, "summary": {"raw": "Another trivial edit to test push (added a space to a comment :)", "markup": "markdown", "html": "<p>Another trivial edit to test push (added a space to a comment :)</p>", "type": "rendered"}, "parents": [{"hash": "9f01e3ce69bfd4dc911a61a66ed533602403f4cc", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/9f01e3ce69bfd4dc911a61a66ed533602403f4cc.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/9f01e3ce69bfd4dc911a61a66ed533602403f4cc"}}}], "date": "2013-01-13T12:29:07+00:00", "message": "Another trivial edit to test push (added a space to a comment :)", "type": "commit"}, {"rendered": {"message": {"raw": "Removed redundant printline", "markup": "markdown", "html": "<p>Removed redundant printline</p>", "type": "rendered"}}, "hash": "9f01e3ce69bfd4dc911a61a66ed533602403f4cc", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/9f01e3ce69bfd4dc911a61a66ed533602403f4cc.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/9f01e3ce69bfd4dc911a61a66ed533602403f4cc/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/9f01e3ce69bfd4dc911a61a66ed533602403f4cc"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/9f01e3ce69bfd4dc911a61a66ed533602403f4cc"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/9f01e3ce69bfd4dc911a61a66ed533602403f4cc"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/9f01e3ce69bfd4dc911a61a66ed533602403f4cc/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/9f01e3ce69bfd4dc911a61a66ed533602403f4cc/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Removed redundant printline", "markup": "markdown", "html": "<p>Removed redundant printline</p>", "type": "rendered"}, "parents": [{"hash": "464a675322b55dc19bbe9af18f01ca023de7b70a", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/464a675322b55dc19bbe9af18f01ca023de7b70a.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/464a675322b55dc19bbe9af18f01ca023de7b70a"}}}], "date": "2012-09-28T05:54:45+00:00", "message": "Removed redundant printline", "type": "commit"}, {"rendered": {"message": {"raw": "Updated to use /etc/labconfig/ if$HOME/labconfig/ does not exist.\nThis will be used on bec.physics.monash.edu.au", "markup": "markdown", "html": "<p>Updated to use /etc/labconfig/ if$HOME/labconfig/ does not exist.<br />\nThis will be used on bec.physics.monash.edu.au</p>", "type": "rendered"}}, "hash": "464a675322b55dc19bbe9af18f01ca023de7b70a", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/464a675322b55dc19bbe9af18f01ca023de7b70a.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/464a675322b55dc19bbe9af18f01ca023de7b70a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/464a675322b55dc19bbe9af18f01ca023de7b70a"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/464a675322b55dc19bbe9af18f01ca023de7b70a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/464a675322b55dc19bbe9af18f01ca023de7b70a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/464a675322b55dc19bbe9af18f01ca023de7b70a/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/464a675322b55dc19bbe9af18f01ca023de7b70a/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Updated to use /etc/labconfig/ if$HOME/labconfig/ does not exist.\nThis will be used on bec.physics.monash.edu.au", "markup": "markdown", "html": "<p>Updated to use /etc/labconfig/ if$HOME/labconfig/ does not exist.<br />\nThis will be used on bec.physics.monash.edu.au</p>", "type": "rendered"}, "parents": [{"hash": "4b03782e28a92a4e7508084de5cd0033827c6b4a", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/4b03782e28a92a4e7508084de5cd0033827c6b4a.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/4b03782e28a92a4e7508084de5cd0033827c6b4a"}}}], "date": "2012-09-28T05:27:45+00:00", "message": "Updated to use /etc/labconfig/ if$HOME/labconfig/ does not exist.\nThis will be used on bec.physics.monash.edu.au", "type": "commit"}, {"rendered": {"message": {"raw": "Made config_path optional. If nto provided, a platform-dependent default is assumed.", "markup": "markdown", "html": "<p>Made config_path optional. If nto provided, a platform-dependent default is assumed.</p>", "type": "rendered"}}, "hash": "4b03782e28a92a4e7508084de5cd0033827c6b4a", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/4b03782e28a92a4e7508084de5cd0033827c6b4a.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/4b03782e28a92a4e7508084de5cd0033827c6b4a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/4b03782e28a92a4e7508084de5cd0033827c6b4a"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/4b03782e28a92a4e7508084de5cd0033827c6b4a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/4b03782e28a92a4e7508084de5cd0033827c6b4a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/4b03782e28a92a4e7508084de5cd0033827c6b4a/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/4b03782e28a92a4e7508084de5cd0033827c6b4a/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Made config_path optional. If nto provided, a platform-dependent default is assumed.", "markup": "markdown", "html": "<p>Made config_path optional. If nto provided, a platform-dependent default is assumed.</p>", "type": "rendered"}, "parents": [{"hash": "8cadb9c515c47b953054f8df4d031cbb9b58ef8c", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/8cadb9c515c47b953054f8df4d031cbb9b58ef8c.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/8cadb9c515c47b953054f8df4d031cbb9b58ef8c"}}}], "date": "2012-09-28T04:57:22+00:00", "message": "Made config_path optional. If nto provided, a platform-dependent default is assumed.", "type": "commit"}, {"rendered": {"message": {"raw": "Attempt to create absent configuration file would fail if labconfig directory didn't exist. Now create the directory, too.\nWhen a configuration file is created, the contents of self.file_format are written to it as a template.", "markup": "markdown", "html": "<p>Attempt to create absent configuration file would fail if labconfig directory didn't exist. Now create the directory, too.<br />\nWhen a configuration file is created, the contents of self.file_format are written to it as a template.</p>", "type": "rendered"}}, "hash": "8cadb9c515c47b953054f8df4d031cbb9b58ef8c", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/8cadb9c515c47b953054f8df4d031cbb9b58ef8c.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/8cadb9c515c47b953054f8df4d031cbb9b58ef8c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/8cadb9c515c47b953054f8df4d031cbb9b58ef8c"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/8cadb9c515c47b953054f8df4d031cbb9b58ef8c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/8cadb9c515c47b953054f8df4d031cbb9b58ef8c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/8cadb9c515c47b953054f8df4d031cbb9b58ef8c/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/8cadb9c515c47b953054f8df4d031cbb9b58ef8c/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Attempt to create absent configuration file would fail if labconfig directory didn't exist. Now create the directory, too.\nWhen a configuration file is created, the contents of self.file_format are written to it as a template.", "markup": "markdown", "html": "<p>Attempt to create absent configuration file would fail if labconfig directory didn't exist. Now create the directory, too.<br />\nWhen a configuration file is created, the contents of self.file_format are written to it as a template.</p>", "type": "rendered"}, "parents": [{"hash": "210b48f06661a432f9ffc9ad7ef01200cc585ea7", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/210b48f06661a432f9ffc9ad7ef01200cc585ea7.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/210b48f06661a432f9ffc9ad7ef01200cc585ea7"}}}], "date": "2012-09-07T05:29:29+00:00", "message": "Attempt to create absent configuration file would fail if labconfig directory didn't exist. Now create the directory, too.\nWhen a configuration file is created, the contents of self.file_format are written to it as a template.", "type": "commit"}, {"rendered": {"message": {"raw": "Added config_prefix parameter, which allows the location of the config file to be determined on different platforms.", "markup": "markdown", "html": "<p>Added config_prefix parameter, which allows the location of the config file to be determined on different platforms.</p>", "type": "rendered"}}, "hash": "210b48f06661a432f9ffc9ad7ef01200cc585ea7", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/210b48f06661a432f9ffc9ad7ef01200cc585ea7.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/210b48f06661a432f9ffc9ad7ef01200cc585ea7/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/210b48f06661a432f9ffc9ad7ef01200cc585ea7"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/210b48f06661a432f9ffc9ad7ef01200cc585ea7"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/210b48f06661a432f9ffc9ad7ef01200cc585ea7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/210b48f06661a432f9ffc9ad7ef01200cc585ea7/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/210b48f06661a432f9ffc9ad7ef01200cc585ea7/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added config_prefix parameter, which allows the location of the config file to be determined on different platforms.", "markup": "markdown", "html": "<p>Added config_prefix parameter, which allows the location of the config file to be determined on different platforms.</p>", "type": "rendered"}, "parents": [{"hash": "55eb595a54ba9575bc98006b38a74359dce35777", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/55eb595a54ba9575bc98006b38a74359dce35777.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/55eb595a54ba9575bc98006b38a74359dce35777"}}}], "date": "2012-07-04T04:18:35+00:00", "message": "Added config_prefix parameter, which allows the location of the config file to be determined on different platforms.", "type": "commit"}, {"rendered": {"message": {"raw": "refs #534 (BIAS can read the connection table h5 file location from here)\n\nrefs #546\n\nModified BLACS to use a new labconfig file located in C:\\labconfig\\<hostname>.ini\n\nNote that you will need to configure the ini file, and place the connection table.py/.h5 and BLACS settings files in the correct places before starting BLACS or else you will run into undefined behaviour depending on which part you did not configure correctly.\n\nYou may also lose front panel state if you do not do it correctly!\n\nAdded required_params argument to LabConfig class instantiation so that an exception is raised if certain parameters are not defined in the config file that are required. Obviously does not check whether the paths actually point to useful files!!", "markup": "markdown", "html": "<p>refs #534 (BIAS can read the connection table h5 file location from here)</p>\n<p>refs #546</p>\n<p>Modified BLACS to use a new labconfig file located in C:\\labconfig\\&lt;hostname&gt;.ini</p>\n<p>Note that you will need to configure the ini file, and place the connection <a href=\"http://table.py/.h5\" rel=\"nofollow\" class=\"ap-connect-link\">table.py/.h5</a> and BLACS settings files in the correct places before starting BLACS or else you will run into undefined behaviour depending on which part you did not configure correctly.</p>\n<p>You may also lose front panel state if you do not do it correctly!</p>\n<p>Added required_params argument to LabConfig class instantiation so that an exception is raised if certain parameters are not defined in the config file that are required. Obviously does not check whether the paths actually point to useful files!!</p>", "type": "rendered"}}, "hash": "55eb595a54ba9575bc98006b38a74359dce35777", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/55eb595a54ba9575bc98006b38a74359dce35777.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/55eb595a54ba9575bc98006b38a74359dce35777/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/55eb595a54ba9575bc98006b38a74359dce35777"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/55eb595a54ba9575bc98006b38a74359dce35777"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/55eb595a54ba9575bc98006b38a74359dce35777"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/55eb595a54ba9575bc98006b38a74359dce35777/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/55eb595a54ba9575bc98006b38a74359dce35777/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "refs #534 (BIAS can read the connection table h5 file location from here)\n\nrefs #546\n\nModified BLACS to use a new labconfig file located in C:\\labconfig\\<hostname>.ini\n\nNote that you will need to configure the ini file, and place the connection table.py/.h5 and BLACS settings files in the correct places before starting BLACS or else you will run into undefined behaviour depending on which part you did not configure correctly.\n\nYou may also lose front panel state if you do not do it correctly!\n\nAdded required_params argument to LabConfig class instantiation so that an exception is raised if certain parameters are not defined in the config file that are required. Obviously does not check whether the paths actually point to useful files!!", "markup": "markdown", "html": "<p>refs #534 (BIAS can read the connection table h5 file location from here)</p>\n<p>refs #546</p>\n<p>Modified BLACS to use a new labconfig file located in C:\\labconfig\\&lt;hostname&gt;.ini</p>\n<p>Note that you will need to configure the ini file, and place the connection <a href=\"http://table.py/.h5\" rel=\"nofollow\" class=\"ap-connect-link\">table.py/.h5</a> and BLACS settings files in the correct places before starting BLACS or else you will run into undefined behaviour depending on which part you did not configure correctly.</p>\n<p>You may also lose front panel state if you do not do it correctly!</p>\n<p>Added required_params argument to LabConfig class instantiation so that an exception is raised if certain parameters are not defined in the config file that are required. Obviously does not check whether the paths actually point to useful files!!</p>", "type": "rendered"}, "parents": [{"hash": "57a933be5556e32445864a6b904e2d94760b1bc7", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/57a933be5556e32445864a6b904e2d94760b1bc7.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/57a933be5556e32445864a6b904e2d94760b1bc7"}}}], "date": "2012-06-22T06:41:14+00:00", "message": "refs #534 (BIAS can read the connection table h5 file location from here)\n\nrefs #546\n\nModified BLACS to use a new labconfig file located in C:\\labconfig\\<hostname>.ini\n\nNote that you will need to configure the ini file, and place the connection table.py/.h5 and BLACS settings files in the correct places before starting BLACS or else you will run into undefined behaviour depending on which part you did not configure correctly.\n\nYou may also lose front panel state if you do not do it correctly!\n\nAdded required_params argument to LabConfig class instantiation so that an exception is raised if certain parameters are not defined in the config file that are required. Obviously does not check whether the paths actually point to useful files!!", "type": "commit"}, {"rendered": {"message": {"raw": "Removed FileWatcher capability. We don't need it to be that clever!\n\nRemoved default path. You should have to specify one!", "markup": "markdown", "html": "<p>Removed FileWatcher capability. We don't need it to be that clever!</p>\n<p>Removed default path. You should have to specify one!</p>", "type": "rendered"}}, "hash": "57a933be5556e32445864a6b904e2d94760b1bc7", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/57a933be5556e32445864a6b904e2d94760b1bc7.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/57a933be5556e32445864a6b904e2d94760b1bc7/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/57a933be5556e32445864a6b904e2d94760b1bc7"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/57a933be5556e32445864a6b904e2d94760b1bc7"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/57a933be5556e32445864a6b904e2d94760b1bc7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/57a933be5556e32445864a6b904e2d94760b1bc7/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/57a933be5556e32445864a6b904e2d94760b1bc7/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Removed FileWatcher capability. We don't need it to be that clever!\n\nRemoved default path. You should have to specify one!", "markup": "markdown", "html": "<p>Removed FileWatcher capability. We don't need it to be that clever!</p>\n<p>Removed default path. You should have to specify one!</p>", "type": "rendered"}, "parents": [{"hash": "1a555842952e9c71c96f044de109175c094f22ce", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/1a555842952e9c71c96f044de109175c094f22ce.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/1a555842952e9c71c96f044de109175c094f22ce"}}}], "date": "2012-06-22T03:46:08+00:00", "message": "Removed FileWatcher capability. We don't need it to be that clever!\n\nRemoved default path. You should have to specify one!", "type": "commit"}, {"rendered": {"message": {"raw": "Created a LabConfig class that will read/load data from an .ini file\nThe class maintains its internal state by watching the file for changes and reloading\n\nWe should implement file locking for the .ini file through this class eventually, to avoid race conditions between multiple programs (unlikely to be an issue since the contents of the file will not be updated very often!)", "markup": "markdown", "html": "<p>Created a LabConfig class that will read/load data from an .ini file<br />\nThe class maintains its internal state by watching the file for changes and reloading</p>\n<p>We should implement file locking for the .ini file through this class eventually, to avoid race conditions between multiple programs (unlikely to be an issue since the contents of the file will not be updated very often!)</p>", "type": "rendered"}}, "hash": "1a555842952e9c71c96f044de109175c094f22ce", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/1a555842952e9c71c96f044de109175c094f22ce.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/1a555842952e9c71c96f044de109175c094f22ce/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/1a555842952e9c71c96f044de109175c094f22ce"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/1a555842952e9c71c96f044de109175c094f22ce"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/1a555842952e9c71c96f044de109175c094f22ce"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/1a555842952e9c71c96f044de109175c094f22ce/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/1a555842952e9c71c96f044de109175c094f22ce/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Created a LabConfig class that will read/load data from an .ini file\nThe class maintains its internal state by watching the file for changes and reloading\n\nWe should implement file locking for the .ini file through this class eventually, to avoid race conditions between multiple programs (unlikely to be an issue since the contents of the file will not be updated very often!)", "markup": "markdown", "html": "<p>Created a LabConfig class that will read/load data from an .ini file<br />\nThe class maintains its internal state by watching the file for changes and reloading</p>\n<p>We should implement file locking for the .ini file through this class eventually, to avoid race conditions between multiple programs (unlikely to be an issue since the contents of the file will not be updated very often!)</p>", "type": "rendered"}, "parents": [], "date": "2012-06-22T03:08:09+00:00", "message": "Created a LabConfig class that will read/load data from an .ini file\nThe class maintains its internal state by watching the file for changes and reloading\n\nWe should implement file locking for the .ini file through this class eventually, to avoid race conditions between multiple programs (unlikely to be an issue since the contents of the file will not be updated very often!)", "type": "commit"}, {"rendered": {"message": {"raw": "added h5_lock submodule (with string workaround as separate submodule)", "markup": "markdown", "html": "<p>added h5_lock submodule (with string workaround as separate submodule)</p>", "type": "rendered"}}, "hash": "8e3c06698fd82244d5811be21f594aa43f1e1e86", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/labscript_utils.json"}, "html": {"href": "#!/cavitylab/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a6245619-76c8-4d32-8247-a6d60cac7f17}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cavitylab/labscript_utils", "uuid": "{a6245619-76c8-4d32-8247-a6d60cac7f17}"}, "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/8e3c06698fd82244d5811be21f594aa43f1e1e86.json"}, "comments": {"href": "data/repositories/cavitylab/labscript_utils/commit/8e3c06698fd82244d5811be21f594aa43f1e1e86/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/patch/8e3c06698fd82244d5811be21f594aa43f1e1e86"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/8e3c06698fd82244d5811be21f594aa43f1e1e86"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/diff/8e3c06698fd82244d5811be21f594aa43f1e1e86"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/labscript_utils/commit/8e3c06698fd82244d5811be21f594aa43f1e1e86/approve"}, "statuses": {"href": "data/repositories/cavitylab/labscript_utils/commit/8e3c06698fd82244d5811be21f594aa43f1e1e86/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "added h5_lock submodule (with string workaround as separate submodule)", "markup": "markdown", "html": "<p>added h5_lock submodule (with string workaround as separate submodule)</p>", "type": "rendered"}, "parents": [{"hash": "b870b23a349b865896c2b7156fb867408fb41c1d", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/labscript_utils/commit/b870b23a349b865896c2b7156fb867408fb41c1d.json"}, "html": {"href": "#!/cavitylab/labscript_utils/commits/b870b23a349b865896c2b7156fb867408fb41c1d"}}}], "date": "2014-01-24T03:45:16+00:00", "message": "added h5_lock submodule (with string workaround as separate submodule)", "type": "commit"}], "next": "data/repositories/cavitylab/labscript_utils/commits/2.1.0_page=3.json"}