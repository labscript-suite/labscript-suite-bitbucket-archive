{"rendered": {"message": {"raw": "Added loops for compilation and reproduction. Both loops run independently in threads, waiting for when there is work to do.\n When the compile loop sees individuals that need compiling, it compiles them one by one. The 'compile_one_individual' function is a dummy right now, it just fakes progress.\nThe reproduction loop does nothing yet, but the idea is that it looks for when all individuals in the current generation have had their fitnesses reported, then it spawns a new generation. It doesn't have to do anything with the new generation, the compile_loop will notice and start compiling them.", "markup": "markdown", "html": "<p>Added loops for compilation and reproduction. Both loops run independently in threads, waiting for when there is work to do.<br />\n When the compile loop sees individuals that need compiling, it compiles them one by one. The 'compile_one_individual' function is a dummy right now, it just fakes progress.<br />\nThe reproduction loop does nothing yet, but the idea is that it looks for when all individuals in the current generation have had their fitnesses reported, then it spawns a new generation. It doesn't have to do anything with the new generation, the compile_loop will notice and start compiling them.</p>", "type": "rendered"}}, "hash": "6833f469c07f095b1f912c94a9233184a07b509b", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/mise.json"}, "html": {"href": "#!/cavitylab/mise"}, "avatar": {"href": "data/bytebucket.org/ravatar/{ae95589f-fb9c-40f9-a234-04d6d3d19939}ts=python"}}, "type": "repository", "name": "mise", "full_name": "cavitylab/mise", "uuid": "{ae95589f-fb9c-40f9-a234-04d6d3d19939}"}, "links": {"self": {"href": "data/repositories/cavitylab/mise/commit/6833f469c07f095b1f912c94a9233184a07b509b.json"}, "comments": {"href": "data/repositories/cavitylab/mise/commit/6833f469c07f095b1f912c94a9233184a07b509b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/mise/patch/6833f469c07f095b1f912c94a9233184a07b509b"}, "html": {"href": "#!/cavitylab/mise/commits/6833f469c07f095b1f912c94a9233184a07b509b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/mise/diff/6833f469c07f095b1f912c94a9233184a07b509b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/mise/commit/6833f469c07f095b1f912c94a9233184a07b509b/approve"}, "statuses": {"href": "data/repositories/cavitylab/mise/commit/6833f469c07f095b1f912c94a9233184a07b509b/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added loops for compilation and reproduction. Both loops run independently in threads, waiting for when there is work to do.\n When the compile loop sees individuals that need compiling, it compiles them one by one. The 'compile_one_individual' function is a dummy right now, it just fakes progress.\nThe reproduction loop does nothing yet, but the idea is that it looks for when all individuals in the current generation have had their fitnesses reported, then it spawns a new generation. It doesn't have to do anything with the new generation, the compile_loop will notice and start compiling them.", "markup": "markdown", "html": "<p>Added loops for compilation and reproduction. Both loops run independently in threads, waiting for when there is work to do.<br />\n When the compile loop sees individuals that need compiling, it compiles them one by one. The 'compile_one_individual' function is a dummy right now, it just fakes progress.<br />\nThe reproduction loop does nothing yet, but the idea is that it looks for when all individuals in the current generation have had their fitnesses reported, then it spawns a new generation. It doesn't have to do anything with the new generation, the compile_loop will notice and start compiling them.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "252d19a0446fde8a04b603943409a9c8ba0632e5", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/mise/commit/252d19a0446fde8a04b603943409a9c8ba0632e5.json"}, "html": {"href": "#!/cavitylab/mise/commits/252d19a0446fde8a04b603943409a9c8ba0632e5"}}}], "date": "2012-09-04T05:07:51+00:00", "message": "Added loops for compilation and reproduction. Both loops run independently in threads, waiting for when there is work to do.\n When the compile loop sees individuals that need compiling, it compiles them one by one. The 'compile_one_individual' function is a dummy right now, it just fakes progress.\nThe reproduction loop does nothing yet, but the idea is that it looks for when all individuals in the current generation have had their fitnesses reported, then it spawns a new generation. It doesn't have to do anything with the new generation, the compile_loop will notice and start compiling them.", "type": "commit", "git_hash": "09aba85e488327174417855bcf8e16aa72fc575f", "tags": null, "branches": "default"}