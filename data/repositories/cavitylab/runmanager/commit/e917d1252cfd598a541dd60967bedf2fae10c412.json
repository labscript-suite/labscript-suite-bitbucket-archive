{"rendered": {"message": {"raw": "Word-wrapping in treeviews and item views, adapted from David Meyer's implementation.\n\nSwapped the globals treeview for a tableview. This involved replacing the custom\ntreeview with a mixin class, so that it could be reused for both the new tableview\nand the existing treeviews.\n\nThis was because TableViews have automatic vertical resizing of rows to contents,\nwhereas treeviews do not.\n\nAdded a custom editor for globals that also has word wrapping and expands\nvertically when wrapping occurs. The editor is a QTextEdit instead of a QPlainTextEdit\nbecause QPlainTextEdit has worse resizing semantics, preferring to return sizes in\nnumber of lines instead of pixels, and always having one additional blank line\nof space reported in its size. QTextEdit is simple enough to use instead, we\njust have to explicitly say we want to set and get plain text only.\n\nDisabled resizing of all columns that were still possible to resize. All columns\nare not set to their minimum width except for one column in each view that is\nset to stretch, which in the case of the globals view is the value column.\n\nMost of the diff is noise of variable renamings due to changing the treeview\nfor a tableview, and boilerplate changes due to using a mixin. The changes of\nsubstance are the new TableView class definition, the new Editor class defintion,\nand some changes to the ItemDelegate (which I also simplified to not use\nfont metrics in its height calculation). The other meaningful changes are setting\na stretch section for the views and setting all other sections to minimum column\nwidth.", "markup": "markdown", "html": "<p>Word-wrapping in treeviews and item views, adapted from David Meyer's implementation.</p>\n<p>Swapped the globals treeview for a tableview. This involved replacing the custom<br />\ntreeview with a mixin class, so that it could be reused for both the new tableview<br />\nand the existing treeviews.</p>\n<p>This was because TableViews have automatic vertical resizing of rows to contents,<br />\nwhereas treeviews do not.</p>\n<p>Added a custom editor for globals that also has word wrapping and expands<br />\nvertically when wrapping occurs. The editor is a QTextEdit instead of a QPlainTextEdit<br />\nbecause QPlainTextEdit has worse resizing semantics, preferring to return sizes in<br />\nnumber of lines instead of pixels, and always having one additional blank line<br />\nof space reported in its size. QTextEdit is simple enough to use instead, we<br />\njust have to explicitly say we want to set and get plain text only.</p>\n<p>Disabled resizing of all columns that were still possible to resize. All columns<br />\nare not set to their minimum width except for one column in each view that is<br />\nset to stretch, which in the case of the globals view is the value column.</p>\n<p>Most of the diff is noise of variable renamings due to changing the treeview<br />\nfor a tableview, and boilerplate changes due to using a mixin. The changes of<br />\nsubstance are the new TableView class definition, the new Editor class defintion,<br />\nand some changes to the ItemDelegate (which I also simplified to not use<br />\nfont metrics in its height calculation). The other meaningful changes are setting<br />\na stretch section for the views and setting all other sections to minimum column<br />\nwidth.</p>", "type": "rendered"}}, "hash": "e917d1252cfd598a541dd60967bedf2fae10c412", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/e917d1252cfd598a541dd60967bedf2fae10c412.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/e917d1252cfd598a541dd60967bedf2fae10c412/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/e917d1252cfd598a541dd60967bedf2fae10c412"}, "html": {"href": "#!/cavitylab/runmanager/commits/e917d1252cfd598a541dd60967bedf2fae10c412"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/e917d1252cfd598a541dd60967bedf2fae10c412"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/e917d1252cfd598a541dd60967bedf2fae10c412/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/e917d1252cfd598a541dd60967bedf2fae10c412/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Word-wrapping in treeviews and item views, adapted from David Meyer's implementation.\n\nSwapped the globals treeview for a tableview. This involved replacing the custom\ntreeview with a mixin class, so that it could be reused for both the new tableview\nand the existing treeviews.\n\nThis was because TableViews have automatic vertical resizing of rows to contents,\nwhereas treeviews do not.\n\nAdded a custom editor for globals that also has word wrapping and expands\nvertically when wrapping occurs. The editor is a QTextEdit instead of a QPlainTextEdit\nbecause QPlainTextEdit has worse resizing semantics, preferring to return sizes in\nnumber of lines instead of pixels, and always having one additional blank line\nof space reported in its size. QTextEdit is simple enough to use instead, we\njust have to explicitly say we want to set and get plain text only.\n\nDisabled resizing of all columns that were still possible to resize. All columns\nare not set to their minimum width except for one column in each view that is\nset to stretch, which in the case of the globals view is the value column.\n\nMost of the diff is noise of variable renamings due to changing the treeview\nfor a tableview, and boilerplate changes due to using a mixin. The changes of\nsubstance are the new TableView class definition, the new Editor class defintion,\nand some changes to the ItemDelegate (which I also simplified to not use\nfont metrics in its height calculation). The other meaningful changes are setting\na stretch section for the views and setting all other sections to minimum column\nwidth.", "markup": "markdown", "html": "<p>Word-wrapping in treeviews and item views, adapted from David Meyer's implementation.</p>\n<p>Swapped the globals treeview for a tableview. This involved replacing the custom<br />\ntreeview with a mixin class, so that it could be reused for both the new tableview<br />\nand the existing treeviews.</p>\n<p>This was because TableViews have automatic vertical resizing of rows to contents,<br />\nwhereas treeviews do not.</p>\n<p>Added a custom editor for globals that also has word wrapping and expands<br />\nvertically when wrapping occurs. The editor is a QTextEdit instead of a QPlainTextEdit<br />\nbecause QPlainTextEdit has worse resizing semantics, preferring to return sizes in<br />\nnumber of lines instead of pixels, and always having one additional blank line<br />\nof space reported in its size. QTextEdit is simple enough to use instead, we<br />\njust have to explicitly say we want to set and get plain text only.</p>\n<p>Disabled resizing of all columns that were still possible to resize. All columns<br />\nare not set to their minimum width except for one column in each view that is<br />\nset to stretch, which in the case of the globals view is the value column.</p>\n<p>Most of the diff is noise of variable renamings due to changing the treeview<br />\nfor a tableview, and boilerplate changes due to using a mixin. The changes of<br />\nsubstance are the new TableView class definition, the new Editor class defintion,<br />\nand some changes to the ItemDelegate (which I also simplified to not use<br />\nfont metrics in its height calculation). The other meaningful changes are setting<br />\na stretch section for the views and setting all other sections to minimum column<br />\nwidth.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "e359aed6f4a183b9eab982eba01d779bdf4ded99", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/e359aed6f4a183b9eab982eba01d779bdf4ded99.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/e359aed6f4a183b9eab982eba01d779bdf4ded99"}}}], "date": "2019-04-18T04:13:24+00:00", "message": "Word-wrapping in treeviews and item views, adapted from David Meyer's implementation.\n\nSwapped the globals treeview for a tableview. This involved replacing the custom\ntreeview with a mixin class, so that it could be reused for both the new tableview\nand the existing treeviews.\n\nThis was because TableViews have automatic vertical resizing of rows to contents,\nwhereas treeviews do not.\n\nAdded a custom editor for globals that also has word wrapping and expands\nvertically when wrapping occurs. The editor is a QTextEdit instead of a QPlainTextEdit\nbecause QPlainTextEdit has worse resizing semantics, preferring to return sizes in\nnumber of lines instead of pixels, and always having one additional blank line\nof space reported in its size. QTextEdit is simple enough to use instead, we\njust have to explicitly say we want to set and get plain text only.\n\nDisabled resizing of all columns that were still possible to resize. All columns\nare not set to their minimum width except for one column in each view that is\nset to stretch, which in the case of the globals view is the value column.\n\nMost of the diff is noise of variable renamings due to changing the treeview\nfor a tableview, and boilerplate changes due to using a mixin. The changes of\nsubstance are the new TableView class definition, the new Editor class defintion,\nand some changes to the ItemDelegate (which I also simplified to not use\nfont metrics in its height calculation). The other meaningful changes are setting\na stretch section for the views and setting all other sections to minimum column\nwidth.", "type": "commit", "git_hash": "32cdcf1580f0d12fbb63bdc5b95b10c0da61b505", "tags": null, "branches": "word_wrap"}