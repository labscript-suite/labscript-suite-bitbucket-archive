{"pagelen": 100, "values": [{"rendered": {"message": {"raw": "Close branch runmanager-mono-font", "markup": "markdown", "html": "<p>Close branch runmanager-mono-font</p>", "type": "rendered"}}, "hash": "42b06c75449571d1e0109cd1061a89273d62dcb3", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/42b06c75449571d1e0109cd1061a89273d62dcb3.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/42b06c75449571d1e0109cd1061a89273d62dcb3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/42b06c75449571d1e0109cd1061a89273d62dcb3"}, "html": {"href": "#!/cavitylab/runmanager/commits/42b06c75449571d1e0109cd1061a89273d62dcb3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/42b06c75449571d1e0109cd1061a89273d62dcb3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/42b06c75449571d1e0109cd1061a89273d62dcb3/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/42b06c75449571d1e0109cd1061a89273d62dcb3/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch runmanager-mono-font", "markup": "markdown", "html": "<p>Close branch runmanager-mono-font</p>", "type": "rendered"}, "parents": [{"hash": "bd472223bd18ae7e5829a5434d956bb7a335d60d", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/bd472223bd18ae7e5829a5434d956bb7a335d60d.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/bd472223bd18ae7e5829a5434d956bb7a335d60d"}}}], "date": "2019-06-09T16:33:26+00:00", "message": "Close branch runmanager-mono-font", "type": "commit"}, {"rendered": {"message": {"raw": "If not on Windows, keep the font as Ubuntu Mono, not \"Ubuntu\"", "markup": "markdown", "html": "<p>If not on Windows, keep the font as Ubuntu Mono, not \"Ubuntu\"</p>", "type": "rendered"}}, "hash": "bd472223bd18ae7e5829a5434d956bb7a335d60d", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/bd472223bd18ae7e5829a5434d956bb7a335d60d.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/bd472223bd18ae7e5829a5434d956bb7a335d60d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/bd472223bd18ae7e5829a5434d956bb7a335d60d"}, "html": {"href": "#!/cavitylab/runmanager/commits/bd472223bd18ae7e5829a5434d956bb7a335d60d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/bd472223bd18ae7e5829a5434d956bb7a335d60d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/bd472223bd18ae7e5829a5434d956bb7a335d60d/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/bd472223bd18ae7e5829a5434d956bb7a335d60d/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "If not on Windows, keep the font as Ubuntu Mono, not \"Ubuntu\"", "markup": "markdown", "html": "<p>If not on Windows, keep the font as Ubuntu Mono, not \"Ubuntu\"</p>", "type": "rendered"}, "parents": [{"hash": "456fb76686179f82e37e947e5828e233393e641b", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/456fb76686179f82e37e947e5828e233393e641b.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/456fb76686179f82e37e947e5828e233393e641b"}}}], "date": "2019-06-01T20:08:17+00:00", "message": "If not on Windows, keep the font as Ubuntu Mono, not \"Ubuntu\"", "type": "commit"}, {"rendered": {"message": {"raw": "Use consolas as the small monospaced font on Windows rather than Ubuntu.\n\nQt's font rendering on windows'seems to be more variable, and at least on Windows 7,\nthe Ubuntu font at smaller sizes looks absolutely horrendous. On Windows 10\nit is a little better, but still with Qt and whatever settings I have, there\ndoesn't seem to be any sub-pixel smoothing.\n\nConsolas is wider at the same height and so more forgiving of bad font rendering.\nIt should be present on all Windows 7 and Windows 10 computers.", "markup": "markdown", "html": "<p>Use consolas as the small monospaced font on Windows rather than Ubuntu.</p>\n<p>Qt's font rendering on windows'seems to be more variable, and at least on Windows 7,<br />\nthe Ubuntu font at smaller sizes looks absolutely horrendous. On Windows 10<br />\nit is a little better, but still with Qt and whatever settings I have, there<br />\ndoesn't seem to be any sub-pixel smoothing.</p>\n<p>Consolas is wider at the same height and so more forgiving of bad font rendering.<br />\nIt should be present on all Windows 7 and Windows 10 computers.</p>", "type": "rendered"}}, "hash": "456fb76686179f82e37e947e5828e233393e641b", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/456fb76686179f82e37e947e5828e233393e641b.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/456fb76686179f82e37e947e5828e233393e641b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/456fb76686179f82e37e947e5828e233393e641b"}, "html": {"href": "#!/cavitylab/runmanager/commits/456fb76686179f82e37e947e5828e233393e641b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/456fb76686179f82e37e947e5828e233393e641b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/456fb76686179f82e37e947e5828e233393e641b/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/456fb76686179f82e37e947e5828e233393e641b/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Use consolas as the small monospaced font on Windows rather than Ubuntu.\n\nQt's font rendering on windows'seems to be more variable, and at least on Windows 7,\nthe Ubuntu font at smaller sizes looks absolutely horrendous. On Windows 10\nit is a little better, but still with Qt and whatever settings I have, there\ndoesn't seem to be any sub-pixel smoothing.\n\nConsolas is wider at the same height and so more forgiving of bad font rendering.\nIt should be present on all Windows 7 and Windows 10 computers.", "markup": "markdown", "html": "<p>Use consolas as the small monospaced font on Windows rather than Ubuntu.</p>\n<p>Qt's font rendering on windows'seems to be more variable, and at least on Windows 7,<br />\nthe Ubuntu font at smaller sizes looks absolutely horrendous. On Windows 10<br />\nit is a little better, but still with Qt and whatever settings I have, there<br />\ndoesn't seem to be any sub-pixel smoothing.</p>\n<p>Consolas is wider at the same height and so more forgiving of bad font rendering.<br />\nIt should be present on all Windows 7 and Windows 10 computers.</p>", "type": "rendered"}, "parents": [{"hash": "4d00199259631c57384ab6b51cbff7753f12f643", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/4d00199259631c57384ab6b51cbff7753f12f643.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/4d00199259631c57384ab6b51cbff7753f12f643"}}}], "date": "2019-06-01T19:12:34+00:00", "message": "Use consolas as the small monospaced font on Windows rather than Ubuntu.\n\nQt's font rendering on windows'seems to be more variable, and at least on Windows 7,\nthe Ubuntu font at smaller sizes looks absolutely horrendous. On Windows 10\nit is a little better, but still with Qt and whatever settings I have, there\ndoesn't seem to be any sub-pixel smoothing.\n\nConsolas is wider at the same height and so more forgiving of bad font rendering.\nIt should be present on all Windows 7 and Windows 10 computers.", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in cbillington/runmanager/remote-bugfix (pull request #39)\n\nRemote bugfix\n\nApproved-by: Russell Anderson <russrussruss@gmail.com>", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/runmanager\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/runmanager</a>/remote-bugfix (pull request #39)</p>\n<p>Remote bugfix</p>\n<p>Approved-by: Russell Anderson <a href=\"mailto:russrussruss@gmail.com\">&#114;&#117;&#115;&#115;&#114;&#117;&#115;&#115;&#114;&#117;&#115;&#115;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>", "type": "rendered"}}, "hash": "4d00199259631c57384ab6b51cbff7753f12f643", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/4d00199259631c57384ab6b51cbff7753f12f643.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/4d00199259631c57384ab6b51cbff7753f12f643/comments_page=1.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/4d00199259631c57384ab6b51cbff7753f12f643"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/4d00199259631c57384ab6b51cbff7753f12f643"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/4d00199259631c57384ab6b51cbff7753f12f643/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/4d00199259631c57384ab6b51cbff7753f12f643/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in cbillington/runmanager/remote-bugfix (pull request #39)\n\nRemote bugfix\n\nApproved-by: Russell Anderson <russrussruss@gmail.com>", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/runmanager\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/runmanager</a>/remote-bugfix (pull request #39)</p>\n<p>Remote bugfix</p>\n<p>Approved-by: Russell Anderson <a href=\"mailto:russrussruss@gmail.com\">&#114;&#117;&#115;&#115;&#114;&#117;&#115;&#115;&#114;&#117;&#115;&#115;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>", "type": "rendered"}, "parents": [{"hash": "1ae2f3b1b85d366bb1be67ac90c1473e063d80df", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/1ae2f3b1b85d366bb1be67ac90c1473e063d80df.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/1ae2f3b1b85d366bb1be67ac90c1473e063d80df"}}}, {"hash": "2f2bc7c18f1f44a0da1db3f449c53923ad21875f", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/2f2bc7c18f1f44a0da1db3f449c53923ad21875f.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/2f2bc7c18f1f44a0da1db3f449c53923ad21875f"}}}], "date": "2019-06-01T16:38:36+00:00", "message": "Merged in cbillington/runmanager/remote-bugfix (pull request #39)\n\nRemote bugfix\n\nApproved-by: Russell Anderson <russrussruss@gmail.com>", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch remote-bugfix", "markup": "markdown", "html": "<p>Close branch remote-bugfix</p>", "type": "rendered"}}, "hash": "2f2bc7c18f1f44a0da1db3f449c53923ad21875f", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/2f2bc7c18f1f44a0da1db3f449c53923ad21875f.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/2f2bc7c18f1f44a0da1db3f449c53923ad21875f/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/2f2bc7c18f1f44a0da1db3f449c53923ad21875f"}, "html": {"href": "#!/cavitylab/runmanager/commits/2f2bc7c18f1f44a0da1db3f449c53923ad21875f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/2f2bc7c18f1f44a0da1db3f449c53923ad21875f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/2f2bc7c18f1f44a0da1db3f449c53923ad21875f/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/2f2bc7c18f1f44a0da1db3f449c53923ad21875f/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch remote-bugfix", "markup": "markdown", "html": "<p>Close branch remote-bugfix</p>", "type": "rendered"}, "parents": [{"hash": "ed03697e1050b4cee628703baaa4dbbf96e360e2", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/ed03697e1050b4cee628703baaa4dbbf96e360e2.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/ed03697e1050b4cee628703baaa4dbbf96e360e2"}}}], "date": "2019-06-01T16:38:36+00:00", "message": "Close branch remote-bugfix", "type": "commit"}, {"rendered": {"message": {"raw": "Increase remote timeout duration to 15 seconds. Fix bug leading to unnecessary\nparsing of globals when multiple globals changed all at once.", "markup": "markdown", "html": "<p>Increase remote timeout duration to 15 seconds. Fix bug leading to unnecessary<br />\nparsing of globals when multiple globals changed all at once.</p>", "type": "rendered"}}, "hash": "ed03697e1050b4cee628703baaa4dbbf96e360e2", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/ed03697e1050b4cee628703baaa4dbbf96e360e2.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/ed03697e1050b4cee628703baaa4dbbf96e360e2/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/ed03697e1050b4cee628703baaa4dbbf96e360e2"}, "html": {"href": "#!/cavitylab/runmanager/commits/ed03697e1050b4cee628703baaa4dbbf96e360e2"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/ed03697e1050b4cee628703baaa4dbbf96e360e2"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/ed03697e1050b4cee628703baaa4dbbf96e360e2/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/ed03697e1050b4cee628703baaa4dbbf96e360e2/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Increase remote timeout duration to 15 seconds. Fix bug leading to unnecessary\nparsing of globals when multiple globals changed all at once.", "markup": "markdown", "html": "<p>Increase remote timeout duration to 15 seconds. Fix bug leading to unnecessary<br />\nparsing of globals when multiple globals changed all at once.</p>", "type": "rendered"}, "parents": [{"hash": "1ae2f3b1b85d366bb1be67ac90c1473e063d80df", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/1ae2f3b1b85d366bb1be67ac90c1473e063d80df.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/1ae2f3b1b85d366bb1be67ac90c1473e063d80df"}}}], "date": "2019-05-31T20:29:36+00:00", "message": "Increase remote timeout duration to 15 seconds. Fix bug leading to unnecessary\nparsing of globals when multiple globals changed all at once.", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in cbillington/runmanager/word_wrap (pull request #35)\n\nWord-wrapping in treeviews and item views, adapted from David Meyer's implementation.\n\nApproved-by: Russell Anderson <russrussruss@gmail.com>\nApproved-by: Lars Kohfahl <lars.kohfahl@physik.tu-darmstadt.de>\nApproved-by: David Meyer <dihm.meyer@gmail.com>", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/runmanager\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/runmanager</a>/word_wrap (pull request #35)</p>\n<p>Word-wrapping in treeviews and item views, adapted from David Meyer's implementation.</p>\n<p>Approved-by: Russell Anderson <a href=\"mailto:russrussruss@gmail.com\">&#114;&#117;&#115;&#115;&#114;&#117;&#115;&#115;&#114;&#117;&#115;&#115;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a><br />\nApproved-by: Lars Kohfahl <a href=\"mailto:lars.kohfahl@physik.tu-darmstadt.de\">&#108;&#97;&#114;&#115;&#46;&#107;&#111;&#104;&#102;&#97;&#104;&#108;&#64;&#112;&#104;&#121;&#115;&#105;&#107;&#46;&#116;&#117;&#45;&#100;&#97;&#114;&#109;&#115;&#116;&#97;&#100;&#116;&#46;&#100;&#101;</a><br />\nApproved-by: David Meyer <a href=\"mailto:dihm.meyer@gmail.com\">&#100;&#105;&#104;&#109;&#46;&#109;&#101;&#121;&#101;&#114;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>", "type": "rendered"}}, "hash": "1ae2f3b1b85d366bb1be67ac90c1473e063d80df", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/1ae2f3b1b85d366bb1be67ac90c1473e063d80df.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/1ae2f3b1b85d366bb1be67ac90c1473e063d80df/comments_page=1.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/1ae2f3b1b85d366bb1be67ac90c1473e063d80df"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/1ae2f3b1b85d366bb1be67ac90c1473e063d80df"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/1ae2f3b1b85d366bb1be67ac90c1473e063d80df/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/1ae2f3b1b85d366bb1be67ac90c1473e063d80df/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in cbillington/runmanager/word_wrap (pull request #35)\n\nWord-wrapping in treeviews and item views, adapted from David Meyer's implementation.\n\nApproved-by: Russell Anderson <russrussruss@gmail.com>\nApproved-by: Lars Kohfahl <lars.kohfahl@physik.tu-darmstadt.de>\nApproved-by: David Meyer <dihm.meyer@gmail.com>", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/runmanager\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/runmanager</a>/word_wrap (pull request #35)</p>\n<p>Word-wrapping in treeviews and item views, adapted from David Meyer's implementation.</p>\n<p>Approved-by: Russell Anderson <a href=\"mailto:russrussruss@gmail.com\">&#114;&#117;&#115;&#115;&#114;&#117;&#115;&#115;&#114;&#117;&#115;&#115;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a><br />\nApproved-by: Lars Kohfahl <a href=\"mailto:lars.kohfahl@physik.tu-darmstadt.de\">&#108;&#97;&#114;&#115;&#46;&#107;&#111;&#104;&#102;&#97;&#104;&#108;&#64;&#112;&#104;&#121;&#115;&#105;&#107;&#46;&#116;&#117;&#45;&#100;&#97;&#114;&#109;&#115;&#116;&#97;&#100;&#116;&#46;&#100;&#101;</a><br />\nApproved-by: David Meyer <a href=\"mailto:dihm.meyer@gmail.com\">&#100;&#105;&#104;&#109;&#46;&#109;&#101;&#121;&#101;&#114;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>", "type": "rendered"}, "parents": [{"hash": "1188efa40ea4710bd0d64ba9cb117b2b262f5d0e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/1188efa40ea4710bd0d64ba9cb117b2b262f5d0e.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/1188efa40ea4710bd0d64ba9cb117b2b262f5d0e"}}}, {"hash": "6a88da4991f254ea6d93256aba5715ef11ed29f5", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/6a88da4991f254ea6d93256aba5715ef11ed29f5.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/6a88da4991f254ea6d93256aba5715ef11ed29f5"}}}], "date": "2019-05-29T18:50:41+00:00", "message": "Merged in cbillington/runmanager/word_wrap (pull request #35)\n\nWord-wrapping in treeviews and item views, adapted from David Meyer's implementation.\n\nApproved-by: Russell Anderson <russrussruss@gmail.com>\nApproved-by: Lars Kohfahl <lars.kohfahl@physik.tu-darmstadt.de>\nApproved-by: David Meyer <dihm.meyer@gmail.com>", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch word_wrap", "markup": "markdown", "html": "<p>Close branch word_wrap</p>", "type": "rendered"}}, "hash": "6a88da4991f254ea6d93256aba5715ef11ed29f5", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/6a88da4991f254ea6d93256aba5715ef11ed29f5.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/6a88da4991f254ea6d93256aba5715ef11ed29f5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/6a88da4991f254ea6d93256aba5715ef11ed29f5"}, "html": {"href": "#!/cavitylab/runmanager/commits/6a88da4991f254ea6d93256aba5715ef11ed29f5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/6a88da4991f254ea6d93256aba5715ef11ed29f5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/6a88da4991f254ea6d93256aba5715ef11ed29f5/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/6a88da4991f254ea6d93256aba5715ef11ed29f5/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch word_wrap", "markup": "markdown", "html": "<p>Close branch word_wrap</p>", "type": "rendered"}, "parents": [{"hash": "51e205a9442924f47a0111fdcc5b6bcfbed269de", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/51e205a9442924f47a0111fdcc5b6bcfbed269de.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/51e205a9442924f47a0111fdcc5b6bcfbed269de"}}}], "date": "2019-05-29T18:50:41+00:00", "message": "Close branch word_wrap", "type": "commit"}, {"rendered": {"message": {"raw": "Set add new global item to monospace font.", "markup": "markdown", "html": "<p>Set add new global item to monospace font.</p>", "type": "rendered"}}, "hash": "51e205a9442924f47a0111fdcc5b6bcfbed269de", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/51e205a9442924f47a0111fdcc5b6bcfbed269de.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/51e205a9442924f47a0111fdcc5b6bcfbed269de/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/51e205a9442924f47a0111fdcc5b6bcfbed269de"}, "html": {"href": "#!/cavitylab/runmanager/commits/51e205a9442924f47a0111fdcc5b6bcfbed269de"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/51e205a9442924f47a0111fdcc5b6bcfbed269de"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/51e205a9442924f47a0111fdcc5b6bcfbed269de/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/51e205a9442924f47a0111fdcc5b6bcfbed269de/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Set add new global item to monospace font.", "markup": "markdown", "html": "<p>Set add new global item to monospace font.</p>", "type": "rendered"}, "parents": [{"hash": "16db2550c5a133a7082508b3b9f3bbcde06e3709", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/16db2550c5a133a7082508b3b9f3bbcde06e3709.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/16db2550c5a133a7082508b3b9f3bbcde06e3709"}}}], "date": "2019-04-30T20:55:27+00:00", "message": "Set add new global item to monospace font.", "type": "commit"}, {"rendered": {"message": {"raw": "Fix slightly incorrect editor padding calculation - can be a real number and\nshould exclude one pixel in between cells. Calculated this way, text does not\njump on either Windows or Linux.", "markup": "markdown", "html": "<p>Fix slightly incorrect editor padding calculation - can be a real number and<br />\nshould exclude one pixel in between cells. Calculated this way, text does not<br />\njump on either Windows or Linux.</p>", "type": "rendered"}}, "hash": "16db2550c5a133a7082508b3b9f3bbcde06e3709", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/16db2550c5a133a7082508b3b9f3bbcde06e3709.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/16db2550c5a133a7082508b3b9f3bbcde06e3709/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/16db2550c5a133a7082508b3b9f3bbcde06e3709"}, "html": {"href": "#!/cavitylab/runmanager/commits/16db2550c5a133a7082508b3b9f3bbcde06e3709"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/16db2550c5a133a7082508b3b9f3bbcde06e3709"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/16db2550c5a133a7082508b3b9f3bbcde06e3709/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/16db2550c5a133a7082508b3b9f3bbcde06e3709/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Fix slightly incorrect editor padding calculation - can be a real number and\nshould exclude one pixel in between cells. Calculated this way, text does not\njump on either Windows or Linux.", "markup": "markdown", "html": "<p>Fix slightly incorrect editor padding calculation - can be a real number and<br />\nshould exclude one pixel in between cells. Calculated this way, text does not<br />\njump on either Windows or Linux.</p>", "type": "rendered"}, "parents": [{"hash": "10ebbce713b06c86d71b78ba06e7b346669d4557", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/10ebbce713b06c86d71b78ba06e7b346669d4557.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/10ebbce713b06c86d71b78ba06e7b346669d4557"}}}], "date": "2019-04-30T19:53:50+00:00", "message": "Fix slightly incorrect editor padding calculation - can be a real number and\nshould exclude one pixel in between cells. Calculated this way, text does not\njump on either Windows or Linux.", "type": "commit"}, {"rendered": {"message": {"raw": "Ensure editor font size identical to tableview/treeview font size", "markup": "markdown", "html": "<p>Ensure editor font size identical to tableview/treeview font size</p>", "type": "rendered"}}, "hash": "10ebbce713b06c86d71b78ba06e7b346669d4557", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/10ebbce713b06c86d71b78ba06e7b346669d4557.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/10ebbce713b06c86d71b78ba06e7b346669d4557/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/10ebbce713b06c86d71b78ba06e7b346669d4557"}, "html": {"href": "#!/cavitylab/runmanager/commits/10ebbce713b06c86d71b78ba06e7b346669d4557"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/10ebbce713b06c86d71b78ba06e7b346669d4557"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/10ebbce713b06c86d71b78ba06e7b346669d4557/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/10ebbce713b06c86d71b78ba06e7b346669d4557/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Ensure editor font size identical to tableview/treeview font size", "markup": "markdown", "html": "<p>Ensure editor font size identical to tableview/treeview font size</p>", "type": "rendered"}, "parents": [{"hash": "b009d4453562b38a7efee075fee472c5a746726d", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/b009d4453562b38a7efee075fee472c5a746726d.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/b009d4453562b38a7efee075fee472c5a746726d"}}}], "date": "2019-04-30T19:32:31+00:00", "message": "Ensure editor font size identical to tableview/treeview font size", "type": "commit"}, {"rendered": {"message": {"raw": "Restore padding to globals when they have multiple lines, rather than just\nbeing their minimum height. Set margin of editor to stop the text from jumping\nwhen entering/exiting editing. (this does not fix the name jumping to the top\nwhen there is a multi-line value. It prevents single-line names/values and\nmultiline values from jumping.", "markup": "markdown", "html": "<p>Restore padding to globals when they have multiple lines, rather than just<br />\nbeing their minimum height. Set margin of editor to stop the text from jumping<br />\nwhen entering/exiting editing. (this does not fix the name jumping to the top<br />\nwhen there is a multi-line value. It prevents single-line names/values and<br />\nmultiline values from jumping.</p>", "type": "rendered"}}, "hash": "b009d4453562b38a7efee075fee472c5a746726d", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/b009d4453562b38a7efee075fee472c5a746726d.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/b009d4453562b38a7efee075fee472c5a746726d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/b009d4453562b38a7efee075fee472c5a746726d"}, "html": {"href": "#!/cavitylab/runmanager/commits/b009d4453562b38a7efee075fee472c5a746726d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/b009d4453562b38a7efee075fee472c5a746726d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/b009d4453562b38a7efee075fee472c5a746726d/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/b009d4453562b38a7efee075fee472c5a746726d/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Restore padding to globals when they have multiple lines, rather than just\nbeing their minimum height. Set margin of editor to stop the text from jumping\nwhen entering/exiting editing. (this does not fix the name jumping to the top\nwhen there is a multi-line value. It prevents single-line names/values and\nmultiline values from jumping.", "markup": "markdown", "html": "<p>Restore padding to globals when they have multiple lines, rather than just<br />\nbeing their minimum height. Set margin of editor to stop the text from jumping<br />\nwhen entering/exiting editing. (this does not fix the name jumping to the top<br />\nwhen there is a multi-line value. It prevents single-line names/values and<br />\nmultiline values from jumping.</p>", "type": "rendered"}, "parents": [{"hash": "1c27ccf1647a0844fe0b0b0822a25ad112b1c7e9", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/1c27ccf1647a0844fe0b0b0822a25ad112b1c7e9.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/1c27ccf1647a0844fe0b0b0822a25ad112b1c7e9"}}}], "date": "2019-04-30T19:03:16+00:00", "message": "Restore padding to globals when they have multiple lines, rather than just\nbeing their minimum height. Set margin of editor to stop the text from jumping\nwhen entering/exiting editing. (this does not fix the name jumping to the top\nwhen there is a multi-line value. It prevents single-line names/values and\nmultiline values from jumping.", "type": "commit"}, {"rendered": {"message": {"raw": "Do not set TableView font size, leave as style default.", "markup": "markdown", "html": "<p>Do not set TableView font size, leave as style default.</p>", "type": "rendered"}}, "hash": "1c27ccf1647a0844fe0b0b0822a25ad112b1c7e9", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/1c27ccf1647a0844fe0b0b0822a25ad112b1c7e9.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/1c27ccf1647a0844fe0b0b0822a25ad112b1c7e9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/1c27ccf1647a0844fe0b0b0822a25ad112b1c7e9"}, "html": {"href": "#!/cavitylab/runmanager/commits/1c27ccf1647a0844fe0b0b0822a25ad112b1c7e9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/1c27ccf1647a0844fe0b0b0822a25ad112b1c7e9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/1c27ccf1647a0844fe0b0b0822a25ad112b1c7e9/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/1c27ccf1647a0844fe0b0b0822a25ad112b1c7e9/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Do not set TableView font size, leave as style default.", "markup": "markdown", "html": "<p>Do not set TableView font size, leave as style default.</p>", "type": "rendered"}, "parents": [{"hash": "00caa07e241ab76af626d7028a1015badbe65f17", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/00caa07e241ab76af626d7028a1015badbe65f17.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/00caa07e241ab76af626d7028a1015badbe65f17"}}}], "date": "2019-04-30T18:35:47+00:00", "message": "Do not set TableView font size, leave as style default.", "type": "commit"}, {"rendered": {"message": {"raw": "Set minimum row height to 22px", "markup": "markdown", "html": "<p>Set minimum row height to 22px</p>", "type": "rendered"}}, "hash": "00caa07e241ab76af626d7028a1015badbe65f17", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/00caa07e241ab76af626d7028a1015badbe65f17.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/00caa07e241ab76af626d7028a1015badbe65f17/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/00caa07e241ab76af626d7028a1015badbe65f17"}, "html": {"href": "#!/cavitylab/runmanager/commits/00caa07e241ab76af626d7028a1015badbe65f17"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/00caa07e241ab76af626d7028a1015badbe65f17"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/00caa07e241ab76af626d7028a1015badbe65f17/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/00caa07e241ab76af626d7028a1015badbe65f17/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Set minimum row height to 22px", "markup": "markdown", "html": "<p>Set minimum row height to 22px</p>", "type": "rendered"}, "parents": [{"hash": "47b69426c279d73ff239461a301758ed9d7c121a", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/47b69426c279d73ff239461a301758ed9d7c121a.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/47b69426c279d73ff239461a301758ed9d7c121a"}}}], "date": "2019-04-30T18:06:09+00:00", "message": "Set minimum row height to 22px", "type": "commit"}, {"rendered": {"message": {"raw": "Reduce extra row width so that results match existing runmanager's row sizes.", "markup": "markdown", "html": "<p>Reduce extra row width so that results match existing runmanager's row sizes.</p>", "type": "rendered"}}, "hash": "47b69426c279d73ff239461a301758ed9d7c121a", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/47b69426c279d73ff239461a301758ed9d7c121a.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/47b69426c279d73ff239461a301758ed9d7c121a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/47b69426c279d73ff239461a301758ed9d7c121a"}, "html": {"href": "#!/cavitylab/runmanager/commits/47b69426c279d73ff239461a301758ed9d7c121a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/47b69426c279d73ff239461a301758ed9d7c121a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/47b69426c279d73ff239461a301758ed9d7c121a/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/47b69426c279d73ff239461a301758ed9d7c121a/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Reduce extra row width so that results match existing runmanager's row sizes.", "markup": "markdown", "html": "<p>Reduce extra row width so that results match existing runmanager's row sizes.</p>", "type": "rendered"}, "parents": [{"hash": "a92daf7bb5e174d90704a7fdd61c57f43dc025f5", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/a92daf7bb5e174d90704a7fdd61c57f43dc025f5.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/a92daf7bb5e174d90704a7fdd61c57f43dc025f5"}}}], "date": "2019-04-30T02:04:47+00:00", "message": "Reduce extra row width so that results match existing runmanager's row sizes.", "type": "commit"}, {"rendered": {"message": {"raw": "Merge with default", "markup": "markdown", "html": "<p>Merge with default</p>", "type": "rendered"}}, "hash": "a92daf7bb5e174d90704a7fdd61c57f43dc025f5", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/a92daf7bb5e174d90704a7fdd61c57f43dc025f5.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/a92daf7bb5e174d90704a7fdd61c57f43dc025f5/comments_page=1.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/a92daf7bb5e174d90704a7fdd61c57f43dc025f5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/a92daf7bb5e174d90704a7fdd61c57f43dc025f5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/a92daf7bb5e174d90704a7fdd61c57f43dc025f5/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/a92daf7bb5e174d90704a7fdd61c57f43dc025f5/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Merge with default", "markup": "markdown", "html": "<p>Merge with default</p>", "type": "rendered"}, "parents": [{"hash": "e56b3901468c7520a90f4de8542d8fe281bf953a", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/e56b3901468c7520a90f4de8542d8fe281bf953a.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/e56b3901468c7520a90f4de8542d8fe281bf953a"}}}, {"hash": "8d32f49f391c37d7f968afe84e92a86991270d7f", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/8d32f49f391c37d7f968afe84e92a86991270d7f.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/8d32f49f391c37d7f968afe84e92a86991270d7f"}}}], "date": "2019-04-29T23:01:18+00:00", "message": "Merge with default", "type": "commit"}, {"rendered": {"message": {"raw": "Changes to comments, removed unused function argument.", "markup": "markdown", "html": "<p>Changes to comments, removed unused function argument.</p>", "type": "rendered"}}, "hash": "e56b3901468c7520a90f4de8542d8fe281bf953a", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/e56b3901468c7520a90f4de8542d8fe281bf953a.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/e56b3901468c7520a90f4de8542d8fe281bf953a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/e56b3901468c7520a90f4de8542d8fe281bf953a"}, "html": {"href": "#!/cavitylab/runmanager/commits/e56b3901468c7520a90f4de8542d8fe281bf953a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/e56b3901468c7520a90f4de8542d8fe281bf953a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/e56b3901468c7520a90f4de8542d8fe281bf953a/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/e56b3901468c7520a90f4de8542d8fe281bf953a/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Changes to comments, removed unused function argument.", "markup": "markdown", "html": "<p>Changes to comments, removed unused function argument.</p>", "type": "rendered"}, "parents": [{"hash": "4bb25b1824b38c3d06e4c9a6a1d0e64c1c33b682", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/4bb25b1824b38c3d06e4c9a6a1d0e64c1c33b682.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/4bb25b1824b38c3d06e4c9a6a1d0e64c1c33b682"}}}], "date": "2019-04-21T17:10:43+00:00", "message": "Changes to comments, removed unused function argument.", "type": "commit"}, {"rendered": {"message": {"raw": "Disallow focus on tab close buttons so that keyboard events don't trigger them.", "markup": "markdown", "html": "<p>Disallow focus on tab close buttons so that keyboard events don't trigger them.</p>", "type": "rendered"}}, "hash": "4bb25b1824b38c3d06e4c9a6a1d0e64c1c33b682", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/4bb25b1824b38c3d06e4c9a6a1d0e64c1c33b682.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/4bb25b1824b38c3d06e4c9a6a1d0e64c1c33b682/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/4bb25b1824b38c3d06e4c9a6a1d0e64c1c33b682"}, "html": {"href": "#!/cavitylab/runmanager/commits/4bb25b1824b38c3d06e4c9a6a1d0e64c1c33b682"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/4bb25b1824b38c3d06e4c9a6a1d0e64c1c33b682"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/4bb25b1824b38c3d06e4c9a6a1d0e64c1c33b682/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/4bb25b1824b38c3d06e4c9a6a1d0e64c1c33b682/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Disallow focus on tab close buttons so that keyboard events don't trigger them.", "markup": "markdown", "html": "<p>Disallow focus on tab close buttons so that keyboard events don't trigger them.</p>", "type": "rendered"}, "parents": [{"hash": "15fc82126eeea15bba2003dc24a82a13ff4a5825", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/15fc82126eeea15bba2003dc24a82a13ff4a5825.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/15fc82126eeea15bba2003dc24a82a13ff4a5825"}}}], "date": "2019-04-20T02:01:15+00:00", "message": "Disallow focus on tab close buttons so that keyboard events don't trigger them.", "type": "commit"}, {"rendered": {"message": {"raw": "Get rid of the special casing of the expansion column for tab navigation\nIt didn't achieve much and was confusing.\nMake enter and space edit editable items (with space not erasing the contents)", "markup": "markdown", "html": "<p>Get rid of the special casing of the expansion column for tab navigation<br />\nIt didn't achieve much and was confusing.<br />\nMake enter and space edit editable items (with space not erasing the contents)</p>", "type": "rendered"}}, "hash": "15fc82126eeea15bba2003dc24a82a13ff4a5825", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/15fc82126eeea15bba2003dc24a82a13ff4a5825.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/15fc82126eeea15bba2003dc24a82a13ff4a5825/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/15fc82126eeea15bba2003dc24a82a13ff4a5825"}, "html": {"href": "#!/cavitylab/runmanager/commits/15fc82126eeea15bba2003dc24a82a13ff4a5825"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/15fc82126eeea15bba2003dc24a82a13ff4a5825"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/15fc82126eeea15bba2003dc24a82a13ff4a5825/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/15fc82126eeea15bba2003dc24a82a13ff4a5825/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Get rid of the special casing of the expansion column for tab navigation\nIt didn't achieve much and was confusing.\nMake enter and space edit editable items (with space not erasing the contents)", "markup": "markdown", "html": "<p>Get rid of the special casing of the expansion column for tab navigation<br />\nIt didn't achieve much and was confusing.<br />\nMake enter and space edit editable items (with space not erasing the contents)</p>", "type": "rendered"}, "parents": [{"hash": "02bdfd0834fdfb575e13fcd7f734490184a0c653", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/02bdfd0834fdfb575e13fcd7f734490184a0c653.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/02bdfd0834fdfb575e13fcd7f734490184a0c653"}}}], "date": "2019-04-20T01:55:34+00:00", "message": "Get rid of the special casing of the expansion column for tab navigation\nIt didn't achieve much and was confusing.\nMake enter and space edit editable items (with space not erasing the contents)", "type": "commit"}, {"rendered": {"message": {"raw": "Fix bug with spurious error being printed to the terminal\nwhen runmanager automatically goes into edit mode for the value or\nunits column because they are blank. The error was caused by the tableview\nalready being in edit mode, so it can't go into edit mode again.", "markup": "markdown", "html": "<p>Fix bug with spurious error being printed to the terminal<br />\nwhen runmanager automatically goes into edit mode for the value or<br />\nunits column because they are blank. The error was caused by the tableview<br />\nalready being in edit mode, so it can't go into edit mode again.</p>", "type": "rendered"}}, "hash": "02bdfd0834fdfb575e13fcd7f734490184a0c653", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/02bdfd0834fdfb575e13fcd7f734490184a0c653.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/02bdfd0834fdfb575e13fcd7f734490184a0c653/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/02bdfd0834fdfb575e13fcd7f734490184a0c653"}, "html": {"href": "#!/cavitylab/runmanager/commits/02bdfd0834fdfb575e13fcd7f734490184a0c653"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/02bdfd0834fdfb575e13fcd7f734490184a0c653"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/02bdfd0834fdfb575e13fcd7f734490184a0c653/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/02bdfd0834fdfb575e13fcd7f734490184a0c653/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Fix bug with spurious error being printed to the terminal\nwhen runmanager automatically goes into edit mode for the value or\nunits column because they are blank. The error was caused by the tableview\nalready being in edit mode, so it can't go into edit mode again.", "markup": "markdown", "html": "<p>Fix bug with spurious error being printed to the terminal<br />\nwhen runmanager automatically goes into edit mode for the value or<br />\nunits column because they are blank. The error was caused by the tableview<br />\nalready being in edit mode, so it can't go into edit mode again.</p>", "type": "rendered"}, "parents": [{"hash": "b1ce33eddbcbc3c7349eb36ce5e1921a1f15affe", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/b1ce33eddbcbc3c7349eb36ce5e1921a1f15affe.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/b1ce33eddbcbc3c7349eb36ce5e1921a1f15affe"}}}], "date": "2019-04-20T00:58:31+00:00", "message": "Fix bug with spurious error being printed to the terminal\nwhen runmanager automatically goes into edit mode for the value or\nunits column because they are blank. The error was caused by the tableview\nalready being in edit mode, so it can't go into edit mode again.", "type": "commit"}, {"rendered": {"message": {"raw": "Ensure colours used in globals tableview are dim enough not to clip when\nbrightened by alternate-row highlighting. This improves visiblity of\nrows.", "markup": "markdown", "html": "<p>Ensure colours used in globals tableview are dim enough not to clip when<br />\nbrightened by alternate-row highlighting. This improves visiblity of<br />\nrows.</p>", "type": "rendered"}}, "hash": "b1ce33eddbcbc3c7349eb36ce5e1921a1f15affe", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/b1ce33eddbcbc3c7349eb36ce5e1921a1f15affe.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/b1ce33eddbcbc3c7349eb36ce5e1921a1f15affe/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/b1ce33eddbcbc3c7349eb36ce5e1921a1f15affe"}, "html": {"href": "#!/cavitylab/runmanager/commits/b1ce33eddbcbc3c7349eb36ce5e1921a1f15affe"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/b1ce33eddbcbc3c7349eb36ce5e1921a1f15affe"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/b1ce33eddbcbc3c7349eb36ce5e1921a1f15affe/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/b1ce33eddbcbc3c7349eb36ce5e1921a1f15affe/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Ensure colours used in globals tableview are dim enough not to clip when\nbrightened by alternate-row highlighting. This improves visiblity of\nrows.", "markup": "markdown", "html": "<p>Ensure colours used in globals tableview are dim enough not to clip when<br />\nbrightened by alternate-row highlighting. This improves visiblity of<br />\nrows.</p>", "type": "rendered"}, "parents": [{"hash": "7ce085ef43098a00d47c0d88e897c0f71bc94b95", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/7ce085ef43098a00d47c0d88e897c0f71bc94b95.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/7ce085ef43098a00d47c0d88e897c0f71bc94b95"}}}], "date": "2019-04-20T00:49:22+00:00", "message": "Ensure colours used in globals tableview are dim enough not to clip when\nbrightened by alternate-row highlighting. This improves visiblity of\nrows.", "type": "commit"}, {"rendered": {"message": {"raw": "Monospaced globals and names", "markup": "markdown", "html": "<p>Monospaced globals and names</p>", "type": "rendered"}}, "hash": "7ce085ef43098a00d47c0d88e897c0f71bc94b95", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/7ce085ef43098a00d47c0d88e897c0f71bc94b95.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/7ce085ef43098a00d47c0d88e897c0f71bc94b95/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/7ce085ef43098a00d47c0d88e897c0f71bc94b95"}, "html": {"href": "#!/cavitylab/runmanager/commits/7ce085ef43098a00d47c0d88e897c0f71bc94b95"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/7ce085ef43098a00d47c0d88e897c0f71bc94b95"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/7ce085ef43098a00d47c0d88e897c0f71bc94b95/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/7ce085ef43098a00d47c0d88e897c0f71bc94b95/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Monospaced globals and names", "markup": "markdown", "html": "<p>Monospaced globals and names</p>", "type": "rendered"}, "parents": [{"hash": "4761e042972379cf41377413765b72bca7837ddb", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/4761e042972379cf41377413765b72bca7837ddb.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/4761e042972379cf41377413765b72bca7837ddb"}}}], "date": "2019-04-20T00:28:28+00:00", "message": "Monospaced globals and names", "type": "commit"}, {"rendered": {"message": {"raw": "Get rid of redundant scroll area - tableview already has its own scroll area.", "markup": "markdown", "html": "<p>Get rid of redundant scroll area - tableview already has its own scroll area.</p>", "type": "rendered"}}, "hash": "4761e042972379cf41377413765b72bca7837ddb", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/4761e042972379cf41377413765b72bca7837ddb.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/4761e042972379cf41377413765b72bca7837ddb/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/4761e042972379cf41377413765b72bca7837ddb"}, "html": {"href": "#!/cavitylab/runmanager/commits/4761e042972379cf41377413765b72bca7837ddb"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/4761e042972379cf41377413765b72bca7837ddb"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/4761e042972379cf41377413765b72bca7837ddb/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/4761e042972379cf41377413765b72bca7837ddb/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Get rid of redundant scroll area - tableview already has its own scroll area.", "markup": "markdown", "html": "<p>Get rid of redundant scroll area - tableview already has its own scroll area.</p>", "type": "rendered"}, "parents": [{"hash": "ec9fcce1243375fee0475be299a1d27656013e76", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/ec9fcce1243375fee0475be299a1d27656013e76.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/ec9fcce1243375fee0475be299a1d27656013e76"}}}], "date": "2019-04-19T23:37:19+00:00", "message": "Get rid of redundant scroll area - tableview already has its own scroll area.", "type": "commit"}, {"rendered": {"message": {"raw": "Lighter, semitransparent selection highlighting in globals tab.\nSame selection colour used in other treeviews.\nMake axes tab use alternating row colours and same treeview as groups tab.\nSet minimum size to rows to prevent flickering when icons come and go during evaluation", "markup": "markdown", "html": "<p>Lighter, semitransparent selection highlighting in globals tab.<br />\nSame selection colour used in other treeviews.<br />\nMake axes tab use alternating row colours and same treeview as groups tab.<br />\nSet minimum size to rows to prevent flickering when icons come and go during evaluation</p>", "type": "rendered"}}, "hash": "ec9fcce1243375fee0475be299a1d27656013e76", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/ec9fcce1243375fee0475be299a1d27656013e76.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/ec9fcce1243375fee0475be299a1d27656013e76/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/ec9fcce1243375fee0475be299a1d27656013e76"}, "html": {"href": "#!/cavitylab/runmanager/commits/ec9fcce1243375fee0475be299a1d27656013e76"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/ec9fcce1243375fee0475be299a1d27656013e76"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/ec9fcce1243375fee0475be299a1d27656013e76/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/ec9fcce1243375fee0475be299a1d27656013e76/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Lighter, semitransparent selection highlighting in globals tab.\nSame selection colour used in other treeviews.\nMake axes tab use alternating row colours and same treeview as groups tab.\nSet minimum size to rows to prevent flickering when icons come and go during evaluation", "markup": "markdown", "html": "<p>Lighter, semitransparent selection highlighting in globals tab.<br />\nSame selection colour used in other treeviews.<br />\nMake axes tab use alternating row colours and same treeview as groups tab.<br />\nSet minimum size to rows to prevent flickering when icons come and go during evaluation</p>", "type": "rendered"}, "parents": [{"hash": "04006acd0de195b642da20b4ad47d963577a0790", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/04006acd0de195b642da20b4ad47d963577a0790.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/04006acd0de195b642da20b4ad47d963577a0790"}}}], "date": "2019-04-19T23:29:47+00:00", "message": "Lighter, semitransparent selection highlighting in globals tab.\nSame selection colour used in other treeviews.\nMake axes tab use alternating row colours and same treeview as groups tab.\nSet minimum size to rows to prevent flickering when icons come and go during evaluation", "type": "commit"}, {"rendered": {"message": {"raw": "Ensure tab/shift+tab allows editing next/prev items, and allow shift+enter in editor", "markup": "markdown", "html": "<p>Ensure tab/shift+tab allows editing next/prev items, and allow shift+enter in editor</p>", "type": "rendered"}}, "hash": "04006acd0de195b642da20b4ad47d963577a0790", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/04006acd0de195b642da20b4ad47d963577a0790.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/04006acd0de195b642da20b4ad47d963577a0790/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/04006acd0de195b642da20b4ad47d963577a0790"}, "html": {"href": "#!/cavitylab/runmanager/commits/04006acd0de195b642da20b4ad47d963577a0790"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/04006acd0de195b642da20b4ad47d963577a0790"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/04006acd0de195b642da20b4ad47d963577a0790/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/04006acd0de195b642da20b4ad47d963577a0790/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Ensure tab/shift+tab allows editing next/prev items, and allow shift+enter in editor", "markup": "markdown", "html": "<p>Ensure tab/shift+tab allows editing next/prev items, and allow shift+enter in editor</p>", "type": "rendered"}, "parents": [{"hash": "c900e7c2d87b8c01ec29aa0f22b7bc14df603b5b", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/c900e7c2d87b8c01ec29aa0f22b7bc14df603b5b.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/c900e7c2d87b8c01ec29aa0f22b7bc14df603b5b"}}}], "date": "2019-04-19T17:31:11+00:00", "message": "Ensure tab/shift+tab allows editing next/prev items, and allow shift+enter in editor", "type": "commit"}, {"rendered": {"message": {"raw": "Set inactive highlight colours for globals to the same as active to prevent flickering", "markup": "markdown", "html": "<p>Set inactive highlight colours for globals to the same as active to prevent flickering</p>", "type": "rendered"}}, "hash": "c900e7c2d87b8c01ec29aa0f22b7bc14df603b5b", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/c900e7c2d87b8c01ec29aa0f22b7bc14df603b5b.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/c900e7c2d87b8c01ec29aa0f22b7bc14df603b5b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/c900e7c2d87b8c01ec29aa0f22b7bc14df603b5b"}, "html": {"href": "#!/cavitylab/runmanager/commits/c900e7c2d87b8c01ec29aa0f22b7bc14df603b5b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/c900e7c2d87b8c01ec29aa0f22b7bc14df603b5b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/c900e7c2d87b8c01ec29aa0f22b7bc14df603b5b/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/c900e7c2d87b8c01ec29aa0f22b7bc14df603b5b/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Set inactive highlight colours for globals to the same as active to prevent flickering", "markup": "markdown", "html": "<p>Set inactive highlight colours for globals to the same as active to prevent flickering</p>", "type": "rendered"}, "parents": [{"hash": "e1c713a823d0cafaf2da2296a87bd49eb7ef20b4", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/e1c713a823d0cafaf2da2296a87bd49eb7ef20b4.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/e1c713a823d0cafaf2da2296a87bd49eb7ef20b4"}}}], "date": "2019-04-18T22:18:14+00:00", "message": "Set inactive highlight colours for globals to the same as active to prevent flickering", "type": "commit"}, {"rendered": {"message": {"raw": "Allow shrinking of editor widget back to its initial size at minimum.\nRemove redundant sizeHintForRow method override.", "markup": "markdown", "html": "<p>Allow shrinking of editor widget back to its initial size at minimum.<br />\nRemove redundant sizeHintForRow method override.</p>", "type": "rendered"}}, "hash": "e1c713a823d0cafaf2da2296a87bd49eb7ef20b4", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/e1c713a823d0cafaf2da2296a87bd49eb7ef20b4.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/e1c713a823d0cafaf2da2296a87bd49eb7ef20b4/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/e1c713a823d0cafaf2da2296a87bd49eb7ef20b4"}, "html": {"href": "#!/cavitylab/runmanager/commits/e1c713a823d0cafaf2da2296a87bd49eb7ef20b4"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/e1c713a823d0cafaf2da2296a87bd49eb7ef20b4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/e1c713a823d0cafaf2da2296a87bd49eb7ef20b4/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/e1c713a823d0cafaf2da2296a87bd49eb7ef20b4/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Allow shrinking of editor widget back to its initial size at minimum.\nRemove redundant sizeHintForRow method override.", "markup": "markdown", "html": "<p>Allow shrinking of editor widget back to its initial size at minimum.<br />\nRemove redundant sizeHintForRow method override.</p>", "type": "rendered"}, "parents": [{"hash": "a1a6b29833ec290a38d8651392a33bdc953000bf", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/a1a6b29833ec290a38d8651392a33bdc953000bf.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/a1a6b29833ec290a38d8651392a33bdc953000bf"}}}], "date": "2019-04-18T21:21:04+00:00", "message": "Allow shrinking of editor widget back to its initial size at minimum.\nRemove redundant sizeHintForRow method override.", "type": "commit"}, {"rendered": {"message": {"raw": "Backed out changeset: 55f5f96927e1", "markup": "markdown", "html": "<p>Backed out changeset: <a href=\"#!/cavitylab/runmanager/commits/55f5f96927e1\" rel=\"nofollow\" class=\"ap-connect-link\">55f5f96927e1</a></p>", "type": "rendered"}}, "hash": "a1a6b29833ec290a38d8651392a33bdc953000bf", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/a1a6b29833ec290a38d8651392a33bdc953000bf.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/a1a6b29833ec290a38d8651392a33bdc953000bf/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/a1a6b29833ec290a38d8651392a33bdc953000bf"}, "html": {"href": "#!/cavitylab/runmanager/commits/a1a6b29833ec290a38d8651392a33bdc953000bf"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/a1a6b29833ec290a38d8651392a33bdc953000bf"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/a1a6b29833ec290a38d8651392a33bdc953000bf/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/a1a6b29833ec290a38d8651392a33bdc953000bf/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Backed out changeset: 55f5f96927e1", "markup": "markdown", "html": "<p>Backed out changeset: <a href=\"#!/cavitylab/runmanager/commits/55f5f96927e1\" rel=\"nofollow\" class=\"ap-connect-link\">55f5f96927e1</a></p>", "type": "rendered"}, "parents": [{"hash": "55f5f96927e1f969ac0b78b41ef5dd668006ffab", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/55f5f96927e1f969ac0b78b41ef5dd668006ffab.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/55f5f96927e1f969ac0b78b41ef5dd668006ffab"}}}], "date": "2019-04-18T20:04:50+00:00", "message": "Backed out changeset: 55f5f96927e1", "type": "commit"}, {"rendered": {"message": {"raw": "Set view widgets to Fusion style", "markup": "markdown", "html": "<p>Set view widgets to Fusion style</p>", "type": "rendered"}}, "hash": "55f5f96927e1f969ac0b78b41ef5dd668006ffab", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/55f5f96927e1f969ac0b78b41ef5dd668006ffab.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/55f5f96927e1f969ac0b78b41ef5dd668006ffab/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/55f5f96927e1f969ac0b78b41ef5dd668006ffab"}, "html": {"href": "#!/cavitylab/runmanager/commits/55f5f96927e1f969ac0b78b41ef5dd668006ffab"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/55f5f96927e1f969ac0b78b41ef5dd668006ffab"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/55f5f96927e1f969ac0b78b41ef5dd668006ffab/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/55f5f96927e1f969ac0b78b41ef5dd668006ffab/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Set view widgets to Fusion style", "markup": "markdown", "html": "<p>Set view widgets to Fusion style</p>", "type": "rendered"}, "parents": [{"hash": "9e7dd817f40f6b96d2d82a54403cc532871f808b", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/9e7dd817f40f6b96d2d82a54403cc532871f808b.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/9e7dd817f40f6b96d2d82a54403cc532871f808b"}}}], "date": "2019-04-18T18:54:24+00:00", "message": "Set view widgets to Fusion style", "type": "commit"}, {"rendered": {"message": {"raw": "Merge with default", "markup": "markdown", "html": "<p>Merge with default</p>", "type": "rendered"}}, "hash": "9e7dd817f40f6b96d2d82a54403cc532871f808b", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/9e7dd817f40f6b96d2d82a54403cc532871f808b.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/9e7dd817f40f6b96d2d82a54403cc532871f808b/comments_page=1.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/9e7dd817f40f6b96d2d82a54403cc532871f808b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/9e7dd817f40f6b96d2d82a54403cc532871f808b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/9e7dd817f40f6b96d2d82a54403cc532871f808b/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/9e7dd817f40f6b96d2d82a54403cc532871f808b/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Merge with default", "markup": "markdown", "html": "<p>Merge with default</p>", "type": "rendered"}, "parents": [{"hash": "8f1e745a731d5633a4c6459879f5c7805b8a31bf", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/8f1e745a731d5633a4c6459879f5c7805b8a31bf.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/8f1e745a731d5633a4c6459879f5c7805b8a31bf"}}}, {"hash": "3e0aa6e835249e67617b34f7fcae6f851e8f25d5", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/3e0aa6e835249e67617b34f7fcae6f851e8f25d5.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/3e0aa6e835249e67617b34f7fcae6f851e8f25d5"}}}], "date": "2019-04-18T16:35:28+00:00", "message": "Merge with default", "type": "commit"}, {"rendered": {"message": {"raw": "Remove debug code that supressed error catching during config file loading.", "markup": "markdown", "html": "<p>Remove debug code that supressed error catching during config file loading.</p>", "type": "rendered"}}, "hash": "8f1e745a731d5633a4c6459879f5c7805b8a31bf", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/8f1e745a731d5633a4c6459879f5c7805b8a31bf.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/8f1e745a731d5633a4c6459879f5c7805b8a31bf/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/8f1e745a731d5633a4c6459879f5c7805b8a31bf"}, "html": {"href": "#!/cavitylab/runmanager/commits/8f1e745a731d5633a4c6459879f5c7805b8a31bf"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/8f1e745a731d5633a4c6459879f5c7805b8a31bf"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/8f1e745a731d5633a4c6459879f5c7805b8a31bf/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/8f1e745a731d5633a4c6459879f5c7805b8a31bf/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Remove debug code that supressed error catching during config file loading.", "markup": "markdown", "html": "<p>Remove debug code that supressed error catching during config file loading.</p>", "type": "rendered"}, "parents": [{"hash": "d9356716c10b69980846691ec2ec8f11bcb11e9f", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/d9356716c10b69980846691ec2ec8f11bcb11e9f.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/d9356716c10b69980846691ec2ec8f11bcb11e9f"}}}], "date": "2019-04-18T16:25:45+00:00", "message": "Remove debug code that supressed error catching during config file loading.", "type": "commit"}, {"rendered": {"message": {"raw": "Pad minimum column sizes by 20px.", "markup": "markdown", "html": "<p>Pad minimum column sizes by 20px.</p>", "type": "rendered"}}, "hash": "d9356716c10b69980846691ec2ec8f11bcb11e9f", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/d9356716c10b69980846691ec2ec8f11bcb11e9f.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/d9356716c10b69980846691ec2ec8f11bcb11e9f/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/d9356716c10b69980846691ec2ec8f11bcb11e9f"}, "html": {"href": "#!/cavitylab/runmanager/commits/d9356716c10b69980846691ec2ec8f11bcb11e9f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/d9356716c10b69980846691ec2ec8f11bcb11e9f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/d9356716c10b69980846691ec2ec8f11bcb11e9f/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/d9356716c10b69980846691ec2ec8f11bcb11e9f/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Pad minimum column sizes by 20px.", "markup": "markdown", "html": "<p>Pad minimum column sizes by 20px.</p>", "type": "rendered"}, "parents": [{"hash": "3332191376a0ddf8524b6038fd4b7dabd4efca52", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/3332191376a0ddf8524b6038fd4b7dabd4efca52.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/3332191376a0ddf8524b6038fd4b7dabd4efca52"}}}], "date": "2019-04-18T16:14:49+00:00", "message": "Pad minimum column sizes by 20px.", "type": "commit"}, {"rendered": {"message": {"raw": "Highlight text when editing global values", "markup": "markdown", "html": "<p>Highlight text when editing global values</p>", "type": "rendered"}}, "hash": "3332191376a0ddf8524b6038fd4b7dabd4efca52", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/3332191376a0ddf8524b6038fd4b7dabd4efca52.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/3332191376a0ddf8524b6038fd4b7dabd4efca52/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/3332191376a0ddf8524b6038fd4b7dabd4efca52"}, "html": {"href": "#!/cavitylab/runmanager/commits/3332191376a0ddf8524b6038fd4b7dabd4efca52"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/3332191376a0ddf8524b6038fd4b7dabd4efca52"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/3332191376a0ddf8524b6038fd4b7dabd4efca52/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/3332191376a0ddf8524b6038fd4b7dabd4efca52/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Highlight text when editing global values", "markup": "markdown", "html": "<p>Highlight text when editing global values</p>", "type": "rendered"}, "parents": [{"hash": "e917d1252cfd598a541dd60967bedf2fae10c412", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/e917d1252cfd598a541dd60967bedf2fae10c412.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/e917d1252cfd598a541dd60967bedf2fae10c412"}}}], "date": "2019-04-18T15:26:39+00:00", "message": "Highlight text when editing global values", "type": "commit"}, {"rendered": {"message": {"raw": "Word-wrapping in treeviews and item views, adapted from David Meyer's implementation.\n\nSwapped the globals treeview for a tableview. This involved replacing the custom\ntreeview with a mixin class, so that it could be reused for both the new tableview\nand the existing treeviews.\n\nThis was because TableViews have automatic vertical resizing of rows to contents,\nwhereas treeviews do not.\n\nAdded a custom editor for globals that also has word wrapping and expands\nvertically when wrapping occurs. The editor is a QTextEdit instead of a QPlainTextEdit\nbecause QPlainTextEdit has worse resizing semantics, preferring to return sizes in\nnumber of lines instead of pixels, and always having one additional blank line\nof space reported in its size. QTextEdit is simple enough to use instead, we\njust have to explicitly say we want to set and get plain text only.\n\nDisabled resizing of all columns that were still possible to resize. All columns\nare not set to their minimum width except for one column in each view that is\nset to stretch, which in the case of the globals view is the value column.\n\nMost of the diff is noise of variable renamings due to changing the treeview\nfor a tableview, and boilerplate changes due to using a mixin. The changes of\nsubstance are the new TableView class definition, the new Editor class defintion,\nand some changes to the ItemDelegate (which I also simplified to not use\nfont metrics in its height calculation). The other meaningful changes are setting\na stretch section for the views and setting all other sections to minimum column\nwidth.", "markup": "markdown", "html": "<p>Word-wrapping in treeviews and item views, adapted from David Meyer's implementation.</p>\n<p>Swapped the globals treeview for a tableview. This involved replacing the custom<br />\ntreeview with a mixin class, so that it could be reused for both the new tableview<br />\nand the existing treeviews.</p>\n<p>This was because TableViews have automatic vertical resizing of rows to contents,<br />\nwhereas treeviews do not.</p>\n<p>Added a custom editor for globals that also has word wrapping and expands<br />\nvertically when wrapping occurs. The editor is a QTextEdit instead of a QPlainTextEdit<br />\nbecause QPlainTextEdit has worse resizing semantics, preferring to return sizes in<br />\nnumber of lines instead of pixels, and always having one additional blank line<br />\nof space reported in its size. QTextEdit is simple enough to use instead, we<br />\njust have to explicitly say we want to set and get plain text only.</p>\n<p>Disabled resizing of all columns that were still possible to resize. All columns<br />\nare not set to their minimum width except for one column in each view that is<br />\nset to stretch, which in the case of the globals view is the value column.</p>\n<p>Most of the diff is noise of variable renamings due to changing the treeview<br />\nfor a tableview, and boilerplate changes due to using a mixin. The changes of<br />\nsubstance are the new TableView class definition, the new Editor class defintion,<br />\nand some changes to the ItemDelegate (which I also simplified to not use<br />\nfont metrics in its height calculation). The other meaningful changes are setting<br />\na stretch section for the views and setting all other sections to minimum column<br />\nwidth.</p>", "type": "rendered"}}, "hash": "e917d1252cfd598a541dd60967bedf2fae10c412", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/e917d1252cfd598a541dd60967bedf2fae10c412.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/e917d1252cfd598a541dd60967bedf2fae10c412/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/e917d1252cfd598a541dd60967bedf2fae10c412"}, "html": {"href": "#!/cavitylab/runmanager/commits/e917d1252cfd598a541dd60967bedf2fae10c412"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/e917d1252cfd598a541dd60967bedf2fae10c412"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/e917d1252cfd598a541dd60967bedf2fae10c412/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/e917d1252cfd598a541dd60967bedf2fae10c412/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Word-wrapping in treeviews and item views, adapted from David Meyer's implementation.\n\nSwapped the globals treeview for a tableview. This involved replacing the custom\ntreeview with a mixin class, so that it could be reused for both the new tableview\nand the existing treeviews.\n\nThis was because TableViews have automatic vertical resizing of rows to contents,\nwhereas treeviews do not.\n\nAdded a custom editor for globals that also has word wrapping and expands\nvertically when wrapping occurs. The editor is a QTextEdit instead of a QPlainTextEdit\nbecause QPlainTextEdit has worse resizing semantics, preferring to return sizes in\nnumber of lines instead of pixels, and always having one additional blank line\nof space reported in its size. QTextEdit is simple enough to use instead, we\njust have to explicitly say we want to set and get plain text only.\n\nDisabled resizing of all columns that were still possible to resize. All columns\nare not set to their minimum width except for one column in each view that is\nset to stretch, which in the case of the globals view is the value column.\n\nMost of the diff is noise of variable renamings due to changing the treeview\nfor a tableview, and boilerplate changes due to using a mixin. The changes of\nsubstance are the new TableView class definition, the new Editor class defintion,\nand some changes to the ItemDelegate (which I also simplified to not use\nfont metrics in its height calculation). The other meaningful changes are setting\na stretch section for the views and setting all other sections to minimum column\nwidth.", "markup": "markdown", "html": "<p>Word-wrapping in treeviews and item views, adapted from David Meyer's implementation.</p>\n<p>Swapped the globals treeview for a tableview. This involved replacing the custom<br />\ntreeview with a mixin class, so that it could be reused for both the new tableview<br />\nand the existing treeviews.</p>\n<p>This was because TableViews have automatic vertical resizing of rows to contents,<br />\nwhereas treeviews do not.</p>\n<p>Added a custom editor for globals that also has word wrapping and expands<br />\nvertically when wrapping occurs. The editor is a QTextEdit instead of a QPlainTextEdit<br />\nbecause QPlainTextEdit has worse resizing semantics, preferring to return sizes in<br />\nnumber of lines instead of pixels, and always having one additional blank line<br />\nof space reported in its size. QTextEdit is simple enough to use instead, we<br />\njust have to explicitly say we want to set and get plain text only.</p>\n<p>Disabled resizing of all columns that were still possible to resize. All columns<br />\nare not set to their minimum width except for one column in each view that is<br />\nset to stretch, which in the case of the globals view is the value column.</p>\n<p>Most of the diff is noise of variable renamings due to changing the treeview<br />\nfor a tableview, and boilerplate changes due to using a mixin. The changes of<br />\nsubstance are the new TableView class definition, the new Editor class defintion,<br />\nand some changes to the ItemDelegate (which I also simplified to not use<br />\nfont metrics in its height calculation). The other meaningful changes are setting<br />\na stretch section for the views and setting all other sections to minimum column<br />\nwidth.</p>", "type": "rendered"}, "parents": [{"hash": "e359aed6f4a183b9eab982eba01d779bdf4ded99", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/e359aed6f4a183b9eab982eba01d779bdf4ded99.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/e359aed6f4a183b9eab982eba01d779bdf4ded99"}}}], "date": "2019-04-18T04:13:24+00:00", "message": "Word-wrapping in treeviews and item views, adapted from David Meyer's implementation.\n\nSwapped the globals treeview for a tableview. This involved replacing the custom\ntreeview with a mixin class, so that it could be reused for both the new tableview\nand the existing treeviews.\n\nThis was because TableViews have automatic vertical resizing of rows to contents,\nwhereas treeviews do not.\n\nAdded a custom editor for globals that also has word wrapping and expands\nvertically when wrapping occurs. The editor is a QTextEdit instead of a QPlainTextEdit\nbecause QPlainTextEdit has worse resizing semantics, preferring to return sizes in\nnumber of lines instead of pixels, and always having one additional blank line\nof space reported in its size. QTextEdit is simple enough to use instead, we\njust have to explicitly say we want to set and get plain text only.\n\nDisabled resizing of all columns that were still possible to resize. All columns\nare not set to their minimum width except for one column in each view that is\nset to stretch, which in the case of the globals view is the value column.\n\nMost of the diff is noise of variable renamings due to changing the treeview\nfor a tableview, and boilerplate changes due to using a mixin. The changes of\nsubstance are the new TableView class definition, the new Editor class defintion,\nand some changes to the ItemDelegate (which I also simplified to not use\nfont metrics in its height calculation). The other meaningful changes are setting\na stretch section for the views and setting all other sections to minimum column\nwidth.", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in cbillington/runmanager/sequence-index-bugfix (pull request #38)\n\nFix an issue with output folder updating when sequence index changes.", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/runmanager\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/runmanager</a>/sequence-index-bugfix (pull request #38)</p>\n<p>Fix an issue with output folder updating when sequence index changes.</p>", "type": "rendered"}}, "hash": "1188efa40ea4710bd0d64ba9cb117b2b262f5d0e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/1188efa40ea4710bd0d64ba9cb117b2b262f5d0e.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/1188efa40ea4710bd0d64ba9cb117b2b262f5d0e/comments_page=1.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/1188efa40ea4710bd0d64ba9cb117b2b262f5d0e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/1188efa40ea4710bd0d64ba9cb117b2b262f5d0e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/1188efa40ea4710bd0d64ba9cb117b2b262f5d0e/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/1188efa40ea4710bd0d64ba9cb117b2b262f5d0e/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in cbillington/runmanager/sequence-index-bugfix (pull request #38)\n\nFix an issue with output folder updating when sequence index changes.", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/runmanager\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/runmanager</a>/sequence-index-bugfix (pull request #38)</p>\n<p>Fix an issue with output folder updating when sequence index changes.</p>", "type": "rendered"}, "parents": [{"hash": "15bd52492e0c86d4f27c067f287166d49c3692c5", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/15bd52492e0c86d4f27c067f287166d49c3692c5.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/15bd52492e0c86d4f27c067f287166d49c3692c5"}}}, {"hash": "c6d1092060520c1fc1eb0e640b9d6dbf711ffcc9", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/c6d1092060520c1fc1eb0e640b9d6dbf711ffcc9.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/c6d1092060520c1fc1eb0e640b9d6dbf711ffcc9"}}}], "date": "2019-05-20T14:56:59+00:00", "message": "Merged in cbillington/runmanager/sequence-index-bugfix (pull request #38)\n\nFix an issue with output folder updating when sequence index changes.", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch sequence-index-bugfix", "markup": "markdown", "html": "<p>Close branch sequence-index-bugfix</p>", "type": "rendered"}}, "hash": "c6d1092060520c1fc1eb0e640b9d6dbf711ffcc9", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/c6d1092060520c1fc1eb0e640b9d6dbf711ffcc9.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/c6d1092060520c1fc1eb0e640b9d6dbf711ffcc9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/c6d1092060520c1fc1eb0e640b9d6dbf711ffcc9"}, "html": {"href": "#!/cavitylab/runmanager/commits/c6d1092060520c1fc1eb0e640b9d6dbf711ffcc9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/c6d1092060520c1fc1eb0e640b9d6dbf711ffcc9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/c6d1092060520c1fc1eb0e640b9d6dbf711ffcc9/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/c6d1092060520c1fc1eb0e640b9d6dbf711ffcc9/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch sequence-index-bugfix", "markup": "markdown", "html": "<p>Close branch sequence-index-bugfix</p>", "type": "rendered"}, "parents": [{"hash": "072bf2965b228a21a0c44bb5d957c329513bc555", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/072bf2965b228a21a0c44bb5d957c329513bc555.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/072bf2965b228a21a0c44bb5d957c329513bc555"}}}], "date": "2019-05-20T14:56:59+00:00", "message": "Close branch sequence-index-bugfix", "type": "commit"}, {"rendered": {"message": {"raw": "Fix an issue with output folder. Updating was asynchronous and so the wrong\nfolder could be used if engage clicked twice rapidly (even though the shots\nwould have the corect filenames). Further, the updating thread could crash\nif the zlock server goes down momentarily. Now it just prints a warning and\ndoesn't crash.", "markup": "markdown", "html": "<p>Fix an issue with output folder. Updating was asynchronous and so the wrong<br />\nfolder could be used if engage clicked twice rapidly (even though the shots<br />\nwould have the corect filenames). Further, the updating thread could crash<br />\nif the zlock server goes down momentarily. Now it just prints a warning and<br />\ndoesn't crash.</p>", "type": "rendered"}}, "hash": "072bf2965b228a21a0c44bb5d957c329513bc555", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/072bf2965b228a21a0c44bb5d957c329513bc555.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/072bf2965b228a21a0c44bb5d957c329513bc555/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/072bf2965b228a21a0c44bb5d957c329513bc555"}, "html": {"href": "#!/cavitylab/runmanager/commits/072bf2965b228a21a0c44bb5d957c329513bc555"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/072bf2965b228a21a0c44bb5d957c329513bc555"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/072bf2965b228a21a0c44bb5d957c329513bc555/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/072bf2965b228a21a0c44bb5d957c329513bc555/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Fix an issue with output folder. Updating was asynchronous and so the wrong\nfolder could be used if engage clicked twice rapidly (even though the shots\nwould have the corect filenames). Further, the updating thread could crash\nif the zlock server goes down momentarily. Now it just prints a warning and\ndoesn't crash.", "markup": "markdown", "html": "<p>Fix an issue with output folder. Updating was asynchronous and so the wrong<br />\nfolder could be used if engage clicked twice rapidly (even though the shots<br />\nwould have the corect filenames). Further, the updating thread could crash<br />\nif the zlock server goes down momentarily. Now it just prints a warning and<br />\ndoesn't crash.</p>", "type": "rendered"}, "parents": [{"hash": "8d32f49f391c37d7f968afe84e92a86991270d7f", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/8d32f49f391c37d7f968afe84e92a86991270d7f.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/8d32f49f391c37d7f968afe84e92a86991270d7f"}}}], "date": "2019-05-17T20:41:54+00:00", "message": "Fix an issue with output folder. Updating was asynchronous and so the wrong\nfolder could be used if engage clicked twice rapidly (even though the shots\nwould have the corect filenames). Further, the updating thread could crash\nif the zlock server goes down momentarily. Now it just prints a warning and\ndoesn't crash.", "type": "commit"}, {"rendered": {"message": {"raw": "Added tag 2.5.0 for changeset 681e0ba6be6c", "markup": "markdown", "html": "<p>Added tag 2.5.0 for changeset <a href=\"#!/cavitylab/runmanager/commits/681e0ba6be6c\" rel=\"nofollow\" class=\"ap-connect-link\">681e0ba6be6c</a></p>", "type": "rendered"}}, "hash": "15bd52492e0c86d4f27c067f287166d49c3692c5", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/15bd52492e0c86d4f27c067f287166d49c3692c5.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/15bd52492e0c86d4f27c067f287166d49c3692c5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/15bd52492e0c86d4f27c067f287166d49c3692c5"}, "html": {"href": "#!/cavitylab/runmanager/commits/15bd52492e0c86d4f27c067f287166d49c3692c5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/15bd52492e0c86d4f27c067f287166d49c3692c5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/15bd52492e0c86d4f27c067f287166d49c3692c5/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/15bd52492e0c86d4f27c067f287166d49c3692c5/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Added tag 2.5.0 for changeset 681e0ba6be6c", "markup": "markdown", "html": "<p>Added tag 2.5.0 for changeset <a href=\"#!/cavitylab/runmanager/commits/681e0ba6be6c\" rel=\"nofollow\" class=\"ap-connect-link\">681e0ba6be6c</a></p>", "type": "rendered"}, "parents": [{"hash": "681e0ba6be6c9289b62f0426a797430d734468cf", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/681e0ba6be6c9289b62f0426a797430d734468cf.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/681e0ba6be6c9289b62f0426a797430d734468cf"}}}], "date": "2019-05-20T14:54:03+00:00", "message": "Added tag 2.5.0 for changeset 681e0ba6be6c", "type": "commit"}, {"rendered": {"message": {"raw": "Minor version bump", "markup": "markdown", "html": "<p>Minor version bump</p>", "type": "rendered"}}, "hash": "681e0ba6be6c9289b62f0426a797430d734468cf", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/681e0ba6be6c9289b62f0426a797430d734468cf.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/681e0ba6be6c9289b62f0426a797430d734468cf/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/681e0ba6be6c9289b62f0426a797430d734468cf"}, "html": {"href": "#!/cavitylab/runmanager/commits/681e0ba6be6c9289b62f0426a797430d734468cf"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/681e0ba6be6c9289b62f0426a797430d734468cf"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/681e0ba6be6c9289b62f0426a797430d734468cf/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/681e0ba6be6c9289b62f0426a797430d734468cf/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Minor version bump", "markup": "markdown", "html": "<p>Minor version bump</p>", "type": "rendered"}, "parents": [{"hash": "9d9121194d63252d2a603ed4e9e81ed5462f1c75", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/9d9121194d63252d2a603ed4e9e81ed5462f1c75.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/9d9121194d63252d2a603ed4e9e81ed5462f1c75"}}}], "date": "2019-05-20T14:53:57+00:00", "message": "Minor version bump", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in cbillington/runmanager/remote (pull request #37)\n\nBasic remote control of runmanager.\n\nApproved-by: Russell Anderson <russrussruss@gmail.com>", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/runmanager\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/runmanager</a>/remote (pull request #37)</p>\n<p>Basic remote control of runmanager.</p>\n<p>Approved-by: Russell Anderson <a href=\"mailto:russrussruss@gmail.com\">&#114;&#117;&#115;&#115;&#114;&#117;&#115;&#115;&#114;&#117;&#115;&#115;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>", "type": "rendered"}}, "hash": "9d9121194d63252d2a603ed4e9e81ed5462f1c75", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/9d9121194d63252d2a603ed4e9e81ed5462f1c75.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/9d9121194d63252d2a603ed4e9e81ed5462f1c75/comments_page=1.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/9d9121194d63252d2a603ed4e9e81ed5462f1c75"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/9d9121194d63252d2a603ed4e9e81ed5462f1c75"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/9d9121194d63252d2a603ed4e9e81ed5462f1c75/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/9d9121194d63252d2a603ed4e9e81ed5462f1c75/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in cbillington/runmanager/remote (pull request #37)\n\nBasic remote control of runmanager.\n\nApproved-by: Russell Anderson <russrussruss@gmail.com>", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/runmanager\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/runmanager</a>/remote (pull request #37)</p>\n<p>Basic remote control of runmanager.</p>\n<p>Approved-by: Russell Anderson <a href=\"mailto:russrussruss@gmail.com\">&#114;&#117;&#115;&#115;&#114;&#117;&#115;&#115;&#114;&#117;&#115;&#115;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>", "type": "rendered"}, "parents": [{"hash": "8d32f49f391c37d7f968afe84e92a86991270d7f", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/8d32f49f391c37d7f968afe84e92a86991270d7f.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/8d32f49f391c37d7f968afe84e92a86991270d7f"}}}, {"hash": "d391a30fe9479efa7cd0d469fdf899cf7c3db1a9", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/d391a30fe9479efa7cd0d469fdf899cf7c3db1a9.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/d391a30fe9479efa7cd0d469fdf899cf7c3db1a9"}}}], "date": "2019-05-20T14:53:06+00:00", "message": "Merged in cbillington/runmanager/remote (pull request #37)\n\nBasic remote control of runmanager.\n\nApproved-by: Russell Anderson <russrussruss@gmail.com>", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch remote", "markup": "markdown", "html": "<p>Close branch remote</p>", "type": "rendered"}}, "hash": "d391a30fe9479efa7cd0d469fdf899cf7c3db1a9", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/d391a30fe9479efa7cd0d469fdf899cf7c3db1a9.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/d391a30fe9479efa7cd0d469fdf899cf7c3db1a9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/d391a30fe9479efa7cd0d469fdf899cf7c3db1a9"}, "html": {"href": "#!/cavitylab/runmanager/commits/d391a30fe9479efa7cd0d469fdf899cf7c3db1a9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/d391a30fe9479efa7cd0d469fdf899cf7c3db1a9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/d391a30fe9479efa7cd0d469fdf899cf7c3db1a9/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/d391a30fe9479efa7cd0d469fdf899cf7c3db1a9/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch remote", "markup": "markdown", "html": "<p>Close branch remote</p>", "type": "rendered"}, "parents": [{"hash": "5a8f7283597adbd82a17372e44b113438fabbf03", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/5a8f7283597adbd82a17372e44b113438fabbf03.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/5a8f7283597adbd82a17372e44b113438fabbf03"}}}], "date": "2019-05-20T14:53:06+00:00", "message": "Close branch remote", "type": "commit"}, {"rendered": {"message": {"raw": "* Trigger a preparse after remote set_globals()\n* Add `interactive` kwarg to Runmanager.get_active_groups so that it can raise\n  an exception for remote calls rather than show an error dialog.\n* Turn app.preparse_globals_required into a Queue instead of an Event so that\n  the number of times it is triggerd can be counted, in order that callers\n  can block until all preparsing is complete using .join()\n* Add method runmanager.wait_until_preparse_complete() that does this.\n* Call app.wait_until_preparse_complete.wait() in handle_n_shots so that the\n  result is not subject to a race condition w.r.t. previous remote calls.\n* Call app.wait_until_preparse_complete() in handle_engage(). I'm not sure\n  it's necessary, but it is strange to be (virtually) clicking engage when the\n  button is greyed out, and there may be code (present or future ) that assumes\n  you can't do this.\n* Do not run blocking remote code such as globals evaluation in the main thread.\n  have remote methods only hop into the main thread when required.\n* Modify remote handle_error_in_globals to take into account all globals, not\n  just those open in tabs.\n* remove inmain() call from the remote server's handler - apply inmain calls\n  only where they are required within individual handler methods, so that the\n  GUI is not blocked by globals parsing.\n* remove some unused imports", "markup": "markdown", "html": "<ul>\n<li>Trigger a preparse after remote set_globals()</li>\n<li>Add <code>interactive</code> kwarg to Runmanager.get_active_groups so that it can raise<br />\n  an exception for remote calls rather than show an error dialog.</li>\n<li>Turn app.preparse_globals_required into a Queue instead of an Event so that<br />\n  the number of times it is triggerd can be counted, in order that callers<br />\n  can block until all preparsing is complete using .join()</li>\n<li>Add method runmanager.wait_until_preparse_complete() that does this.</li>\n<li>Call app.wait_until_preparse_complete.wait() in handle_n_shots so that the<br />\n  result is not subject to a race condition w.r.t. previous remote calls.</li>\n<li>Call app.wait_until_preparse_complete() in handle_engage(). I'm not sure<br />\n  it's necessary, but it is strange to be (virtually) clicking engage when the<br />\n  button is greyed out, and there may be code (present or future ) that assumes<br />\n  you can't do this.</li>\n<li>Do not run blocking remote code such as globals evaluation in the main thread.<br />\n  have remote methods only hop into the main thread when required.</li>\n<li>Modify remote handle_error_in_globals to take into account all globals, not<br />\n  just those open in tabs.</li>\n<li>remove inmain() call from the remote server's handler - apply inmain calls<br />\n  only where they are required within individual handler methods, so that the<br />\n  GUI is not blocked by globals parsing.</li>\n<li>remove some unused imports</li>\n</ul>", "type": "rendered"}}, "hash": "5a8f7283597adbd82a17372e44b113438fabbf03", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/5a8f7283597adbd82a17372e44b113438fabbf03.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/5a8f7283597adbd82a17372e44b113438fabbf03/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/5a8f7283597adbd82a17372e44b113438fabbf03"}, "html": {"href": "#!/cavitylab/runmanager/commits/5a8f7283597adbd82a17372e44b113438fabbf03"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/5a8f7283597adbd82a17372e44b113438fabbf03"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/5a8f7283597adbd82a17372e44b113438fabbf03/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/5a8f7283597adbd82a17372e44b113438fabbf03/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "* Trigger a preparse after remote set_globals()\n* Add `interactive` kwarg to Runmanager.get_active_groups so that it can raise\n  an exception for remote calls rather than show an error dialog.\n* Turn app.preparse_globals_required into a Queue instead of an Event so that\n  the number of times it is triggerd can be counted, in order that callers\n  can block until all preparsing is complete using .join()\n* Add method runmanager.wait_until_preparse_complete() that does this.\n* Call app.wait_until_preparse_complete.wait() in handle_n_shots so that the\n  result is not subject to a race condition w.r.t. previous remote calls.\n* Call app.wait_until_preparse_complete() in handle_engage(). I'm not sure\n  it's necessary, but it is strange to be (virtually) clicking engage when the\n  button is greyed out, and there may be code (present or future ) that assumes\n  you can't do this.\n* Do not run blocking remote code such as globals evaluation in the main thread.\n  have remote methods only hop into the main thread when required.\n* Modify remote handle_error_in_globals to take into account all globals, not\n  just those open in tabs.\n* remove inmain() call from the remote server's handler - apply inmain calls\n  only where they are required within individual handler methods, so that the\n  GUI is not blocked by globals parsing.\n* remove some unused imports", "markup": "markdown", "html": "<ul>\n<li>Trigger a preparse after remote set_globals()</li>\n<li>Add <code>interactive</code> kwarg to Runmanager.get_active_groups so that it can raise<br />\n  an exception for remote calls rather than show an error dialog.</li>\n<li>Turn app.preparse_globals_required into a Queue instead of an Event so that<br />\n  the number of times it is triggerd can be counted, in order that callers<br />\n  can block until all preparsing is complete using .join()</li>\n<li>Add method runmanager.wait_until_preparse_complete() that does this.</li>\n<li>Call app.wait_until_preparse_complete.wait() in handle_n_shots so that the<br />\n  result is not subject to a race condition w.r.t. previous remote calls.</li>\n<li>Call app.wait_until_preparse_complete() in handle_engage(). I'm not sure<br />\n  it's necessary, but it is strange to be (virtually) clicking engage when the<br />\n  button is greyed out, and there may be code (present or future ) that assumes<br />\n  you can't do this.</li>\n<li>Do not run blocking remote code such as globals evaluation in the main thread.<br />\n  have remote methods only hop into the main thread when required.</li>\n<li>Modify remote handle_error_in_globals to take into account all globals, not<br />\n  just those open in tabs.</li>\n<li>remove inmain() call from the remote server's handler - apply inmain calls<br />\n  only where they are required within individual handler methods, so that the<br />\n  GUI is not blocked by globals parsing.</li>\n<li>remove some unused imports</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "b414a5fea450807a890fb923ee0c06cf6ee7b055", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/b414a5fea450807a890fb923ee0c06cf6ee7b055.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/b414a5fea450807a890fb923ee0c06cf6ee7b055"}}}], "date": "2019-05-13T23:51:40+00:00", "message": "* Trigger a preparse after remote set_globals()\n* Add `interactive` kwarg to Runmanager.get_active_groups so that it can raise\n  an exception for remote calls rather than show an error dialog.\n* Turn app.preparse_globals_required into a Queue instead of an Event so that\n  the number of times it is triggerd can be counted, in order that callers\n  can block until all preparsing is complete using .join()\n* Add method runmanager.wait_until_preparse_complete() that does this.\n* Call app.wait_until_preparse_complete.wait() in handle_n_shots so that the\n  result is not subject to a race condition w.r.t. previous remote calls.\n* Call app.wait_until_preparse_complete() in handle_engage(). I'm not sure\n  it's necessary, but it is strange to be (virtually) clicking engage when the\n  button is greyed out, and there may be code (present or future ) that assumes\n  you can't do this.\n* Do not run blocking remote code such as globals evaluation in the main thread.\n  have remote methods only hop into the main thread when required.\n* Modify remote handle_error_in_globals to take into account all globals, not\n  just those open in tabs.\n* remove inmain() call from the remote server's handler - apply inmain calls\n  only where they are required within individual handler methods, so that the\n  GUI is not blocked by globals parsing.\n* remove some unused imports", "type": "commit"}, {"rendered": {"message": {"raw": "Added the following remote methods:\n* get/set_labscript_file\n* get_set_shot_output_folder\n* error_in_globals (only considers open tabs of atcive groups)\n* is_output_folder_default\n* reset_shot_output_folder\n\nThis required the following new attributes:\n* GroupTab().tab_contains_errors\n* RunManager().non_default_folder", "markup": "markdown", "html": "<p>Added the following remote methods:<br />\n<em> get/set_labscript_file<br />\n</em> get_set_shot_output_folder<br />\n<em> error_in_globals (only considers open tabs of atcive groups)<br />\n</em> is_output_folder_default<br />\n* reset_shot_output_folder</p>\n<p>This required the following new attributes:<br />\n<em> GroupTab().tab_contains_errors<br />\n</em> RunManager().non_default_folder</p>", "type": "rendered"}}, "hash": "b414a5fea450807a890fb923ee0c06cf6ee7b055", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/b414a5fea450807a890fb923ee0c06cf6ee7b055.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/b414a5fea450807a890fb923ee0c06cf6ee7b055/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/b414a5fea450807a890fb923ee0c06cf6ee7b055"}, "html": {"href": "#!/cavitylab/runmanager/commits/b414a5fea450807a890fb923ee0c06cf6ee7b055"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/b414a5fea450807a890fb923ee0c06cf6ee7b055"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/b414a5fea450807a890fb923ee0c06cf6ee7b055/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/b414a5fea450807a890fb923ee0c06cf6ee7b055/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "Added the following remote methods:\n* get/set_labscript_file\n* get_set_shot_output_folder\n* error_in_globals (only considers open tabs of atcive groups)\n* is_output_folder_default\n* reset_shot_output_folder\n\nThis required the following new attributes:\n* GroupTab().tab_contains_errors\n* RunManager().non_default_folder", "markup": "markdown", "html": "<p>Added the following remote methods:<br />\n<em> get/set_labscript_file<br />\n</em> get_set_shot_output_folder<br />\n<em> error_in_globals (only considers open tabs of atcive groups)<br />\n</em> is_output_folder_default<br />\n* reset_shot_output_folder</p>\n<p>This required the following new attributes:<br />\n<em> GroupTab().tab_contains_errors<br />\n</em> RunManager().non_default_folder</p>", "type": "rendered"}, "parents": [{"hash": "672f8c85c741001207dff7162a1e787ead689586", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/672f8c85c741001207dff7162a1e787ead689586.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/672f8c85c741001207dff7162a1e787ead689586"}}}], "date": "2019-05-11T10:42:19+00:00", "message": "Added the following remote methods:\n* get/set_labscript_file\n* get_set_shot_output_folder\n* error_in_globals (only considers open tabs of atcive groups)\n* is_output_folder_default\n* reset_shot_output_folder\n\nThis required the following new attributes:\n* GroupTab().tab_contains_errors\n* RunManager().non_default_folder", "type": "commit"}, {"rendered": {"message": {"raw": "Added (get) n_shots, the prospective number of shots that appear on the engage\nbutton. This required a new RunManager attribute, as it has only ever been used\nto update the text of the engage button.\n\nAdded abort remote control.", "markup": "markdown", "html": "<p>Added (get) n_shots, the prospective number of shots that appear on the engage<br />\nbutton. This required a new RunManager attribute, as it has only ever been used<br />\nto update the text of the engage button.</p>\n<p>Added abort remote control.</p>", "type": "rendered"}}, "hash": "672f8c85c741001207dff7162a1e787ead689586", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/672f8c85c741001207dff7162a1e787ead689586.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/672f8c85c741001207dff7162a1e787ead689586/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/672f8c85c741001207dff7162a1e787ead689586"}, "html": {"href": "#!/cavitylab/runmanager/commits/672f8c85c741001207dff7162a1e787ead689586"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/672f8c85c741001207dff7162a1e787ead689586"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/672f8c85c741001207dff7162a1e787ead689586/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/672f8c85c741001207dff7162a1e787ead689586/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "Added (get) n_shots, the prospective number of shots that appear on the engage\nbutton. This required a new RunManager attribute, as it has only ever been used\nto update the text of the engage button.\n\nAdded abort remote control.", "markup": "markdown", "html": "<p>Added (get) n_shots, the prospective number of shots that appear on the engage<br />\nbutton. This required a new RunManager attribute, as it has only ever been used<br />\nto update the text of the engage button.</p>\n<p>Added abort remote control.</p>", "type": "rendered"}, "parents": [{"hash": "9e41137747866f1b83d674f26d7b7319ff3e9266", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/9e41137747866f1b83d674f26d7b7319ff3e9266.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/9e41137747866f1b83d674f26d7b7319ff3e9266"}}}], "date": "2019-05-10T11:40:19+00:00", "message": "Added (get) n_shots, the prospective number of shots that appear on the engage\nbutton. This required a new RunManager attribute, as it has only ever been used\nto update the text of the engage button.\n\nAdded abort remote control.", "type": "commit"}, {"rendered": {"message": {"raw": "Set/get for 'Run shot(s)', 'View shot(s)', and 'Shuffle' controls.", "markup": "markdown", "html": "<p>Set/get for 'Run shot(s)', 'View shot(s)', and 'Shuffle' controls.</p>", "type": "rendered"}}, "hash": "9e41137747866f1b83d674f26d7b7319ff3e9266", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/9e41137747866f1b83d674f26d7b7319ff3e9266.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/9e41137747866f1b83d674f26d7b7319ff3e9266/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/9e41137747866f1b83d674f26d7b7319ff3e9266"}, "html": {"href": "#!/cavitylab/runmanager/commits/9e41137747866f1b83d674f26d7b7319ff3e9266"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/9e41137747866f1b83d674f26d7b7319ff3e9266"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/9e41137747866f1b83d674f26d7b7319ff3e9266/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/9e41137747866f1b83d674f26d7b7319ff3e9266/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "Set/get for 'Run shot(s)', 'View shot(s)', and 'Shuffle' controls.", "markup": "markdown", "html": "<p>Set/get for 'Run shot(s)', 'View shot(s)', and 'Shuffle' controls.</p>", "type": "rendered"}, "parents": [{"hash": "dd03cd2111b2159712a6308d6f624a10cc2e1cf9", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/dd03cd2111b2159712a6308d6f624a10cc2e1cf9.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/dd03cd2111b2159712a6308d6f624a10cc2e1cf9"}}}], "date": "2019-05-10T11:17:38+00:00", "message": "Set/get for 'Run shot(s)', 'View shot(s)', and 'Shuffle' controls.", "type": "commit"}, {"rendered": {"message": {"raw": "Error if trying to set global that is defined in multiple active groups.\n\nNo attempt is made to ensure setting globals is an all-or-nothing affair. Globals\nset prior to the error will not be reverted, globals not yet set will not still\nbe attempted to be set.", "markup": "markdown", "html": "<p>Error if trying to set global that is defined in multiple active groups.</p>\n<p>No attempt is made to ensure setting globals is an all-or-nothing affair. Globals<br />\nset prior to the error will not be reverted, globals not yet set will not still<br />\nbe attempted to be set.</p>", "type": "rendered"}}, "hash": "dd03cd2111b2159712a6308d6f624a10cc2e1cf9", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/dd03cd2111b2159712a6308d6f624a10cc2e1cf9.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/dd03cd2111b2159712a6308d6f624a10cc2e1cf9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/dd03cd2111b2159712a6308d6f624a10cc2e1cf9"}, "html": {"href": "#!/cavitylab/runmanager/commits/dd03cd2111b2159712a6308d6f624a10cc2e1cf9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/dd03cd2111b2159712a6308d6f624a10cc2e1cf9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/dd03cd2111b2159712a6308d6f624a10cc2e1cf9/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/dd03cd2111b2159712a6308d6f624a10cc2e1cf9/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Error if trying to set global that is defined in multiple active groups.\n\nNo attempt is made to ensure setting globals is an all-or-nothing affair. Globals\nset prior to the error will not be reverted, globals not yet set will not still\nbe attempted to be set.", "markup": "markdown", "html": "<p>Error if trying to set global that is defined in multiple active groups.</p>\n<p>No attempt is made to ensure setting globals is an all-or-nothing affair. Globals<br />\nset prior to the error will not be reverted, globals not yet set will not still<br />\nbe attempted to be set.</p>", "type": "rendered"}, "parents": [{"hash": "354b4f92892db9d4e3f2a6b00873978f3643f2ec", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/354b4f92892db9d4e3f2a6b00873978f3643f2ec.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/354b4f92892db9d4e3f2a6b00873978f3643f2ec"}}}], "date": "2019-05-09T18:30:53+00:00", "message": "Error if trying to set global that is defined in multiple active groups.\n\nNo attempt is made to ensure setting globals is an all-or-nothing affair. Globals\nset prior to the error will not be reverted, globals not yet set will not still\nbe attempted to be set.", "type": "commit"}, {"rendered": {"message": {"raw": "Implement `raw` kwarg for `remote.set_globals()` and `remote.get_globals()`.\nif set to True (default is False), then globals values are accepted and returned\n as string expressions as stored in the HDF5 file and runmanager GUI.\nOtherwise they are treated as python objects, and are `repr()`'d before setting\nand `eval()`'d (by runmanager the usual way) upon getting.\n\nComment out `get_globals_full()` and `set_globals_full()` for now since I'm\nnot sure what they should do exactly, though obviously setting and getting more\nthings will need to be added to the remote API in some way.", "markup": "markdown", "html": "<p>Implement <code>raw</code> kwarg for <code>remote.set_globals()</code> and <code>remote.get_globals()</code>.<br />\nif set to True (default is False), then globals values are accepted and returned<br />\n as string expressions as stored in the HDF5 file and runmanager GUI.<br />\nOtherwise they are treated as python objects, and are <code>repr()</code>'d before setting<br />\nand <code>eval()</code>'d (by runmanager the usual way) upon getting.</p>\n<p>Comment out <code>get_globals_full()</code> and <code>set_globals_full()</code> for now since I'm<br />\nnot sure what they should do exactly, though obviously setting and getting more<br />\nthings will need to be added to the remote API in some way.</p>", "type": "rendered"}}, "hash": "354b4f92892db9d4e3f2a6b00873978f3643f2ec", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/354b4f92892db9d4e3f2a6b00873978f3643f2ec.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/354b4f92892db9d4e3f2a6b00873978f3643f2ec/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/354b4f92892db9d4e3f2a6b00873978f3643f2ec"}, "html": {"href": "#!/cavitylab/runmanager/commits/354b4f92892db9d4e3f2a6b00873978f3643f2ec"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/354b4f92892db9d4e3f2a6b00873978f3643f2ec"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/354b4f92892db9d4e3f2a6b00873978f3643f2ec/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/354b4f92892db9d4e3f2a6b00873978f3643f2ec/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Implement `raw` kwarg for `remote.set_globals()` and `remote.get_globals()`.\nif set to True (default is False), then globals values are accepted and returned\n as string expressions as stored in the HDF5 file and runmanager GUI.\nOtherwise they are treated as python objects, and are `repr()`'d before setting\nand `eval()`'d (by runmanager the usual way) upon getting.\n\nComment out `get_globals_full()` and `set_globals_full()` for now since I'm\nnot sure what they should do exactly, though obviously setting and getting more\nthings will need to be added to the remote API in some way.", "markup": "markdown", "html": "<p>Implement <code>raw</code> kwarg for <code>remote.set_globals()</code> and <code>remote.get_globals()</code>.<br />\nif set to True (default is False), then globals values are accepted and returned<br />\n as string expressions as stored in the HDF5 file and runmanager GUI.<br />\nOtherwise they are treated as python objects, and are <code>repr()</code>'d before setting<br />\nand <code>eval()</code>'d (by runmanager the usual way) upon getting.</p>\n<p>Comment out <code>get_globals_full()</code> and <code>set_globals_full()</code> for now since I'm<br />\nnot sure what they should do exactly, though obviously setting and getting more<br />\nthings will need to be added to the remote API in some way.</p>", "type": "rendered"}, "parents": [{"hash": "fed4c76930a43953d942ee6c246cb2a362e7ae87", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/fed4c76930a43953d942ee6c246cb2a362e7ae87.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/fed4c76930a43953d942ee6c246cb2a362e7ae87"}}}], "date": "2019-05-09T16:59:06+00:00", "message": "Implement `raw` kwarg for `remote.set_globals()` and `remote.get_globals()`.\nif set to True (default is False), then globals values are accepted and returned\n as string expressions as stored in the HDF5 file and runmanager GUI.\nOtherwise they are treated as python objects, and are `repr()`'d before setting\nand `eval()`'d (by runmanager the usual way) upon getting.\n\nComment out `get_globals_full()` and `set_globals_full()` for now since I'm\nnot sure what they should do exactly, though obviously setting and getting more\nthings will need to be added to the remote API in some way.", "type": "commit"}, {"rendered": {"message": {"raw": "Fix bug: wrong default port number\nFix bug: set text on item before setting other details, otherwise\non_globals_model_value_changed gets triggered multiple times and the value is\nin fact set back and forth three times instead of just once. This also had the\nside effect of the latter changes being treated as interactive and thus not\nsuppressing auto focusing of the units cell as intended.", "markup": "markdown", "html": "<p>Fix bug: wrong default port number<br />\nFix bug: set text on item before setting other details, otherwise<br />\non_globals_model_value_changed gets triggered multiple times and the value is<br />\nin fact set back and forth three times instead of just once. This also had the<br />\nside effect of the latter changes being treated as interactive and thus not<br />\nsuppressing auto focusing of the units cell as intended.</p>", "type": "rendered"}}, "hash": "fed4c76930a43953d942ee6c246cb2a362e7ae87", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/fed4c76930a43953d942ee6c246cb2a362e7ae87.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/fed4c76930a43953d942ee6c246cb2a362e7ae87/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/fed4c76930a43953d942ee6c246cb2a362e7ae87"}, "html": {"href": "#!/cavitylab/runmanager/commits/fed4c76930a43953d942ee6c246cb2a362e7ae87"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/fed4c76930a43953d942ee6c246cb2a362e7ae87"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/fed4c76930a43953d942ee6c246cb2a362e7ae87/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/fed4c76930a43953d942ee6c246cb2a362e7ae87/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Fix bug: wrong default port number\nFix bug: set text on item before setting other details, otherwise\non_globals_model_value_changed gets triggered multiple times and the value is\nin fact set back and forth three times instead of just once. This also had the\nside effect of the latter changes being treated as interactive and thus not\nsuppressing auto focusing of the units cell as intended.", "markup": "markdown", "html": "<p>Fix bug: wrong default port number<br />\nFix bug: set text on item before setting other details, otherwise<br />\non_globals_model_value_changed gets triggered multiple times and the value is<br />\nin fact set back and forth three times instead of just once. This also had the<br />\nside effect of the latter changes being treated as interactive and thus not<br />\nsuppressing auto focusing of the units cell as intended.</p>", "type": "rendered"}, "parents": [{"hash": "042f842324d7128c0f1e02cac47f6889df203ab4", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/042f842324d7128c0f1e02cac47f6889df203ab4.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/042f842324d7128c0f1e02cac47f6889df203ab4"}}}], "date": "2019-05-09T16:16:04+00:00", "message": "Fix bug: wrong default port number\nFix bug: set text on item before setting other details, otherwise\non_globals_model_value_changed gets triggered multiple times and the value is\nin fact set back and forth three times instead of just once. This also had the\nside effect of the latter changes being treated as interactive and thus not\nsuppressing auto focusing of the units cell as intended.", "type": "commit"}, {"rendered": {"message": {"raw": "Split functionality to find comments out of `remove_comments_and_tokenify()`,\ninto new function `get_comments()`, so that it can be used separately by code that\nwants the comments themselves and not just to remove them. This way the remote\nserver's `set_globals()` can preserve only an expression-final comment (or\ncomment block) in multi-line expressions.\n\nUse this functionality in RemoteServer.set_globals() to do the above.\n\nBoth `remote_comments_and_tokenify()` (used in diffing globals) and `get_comments()`\n(used to preserve comments in RemoteServer.set_globals())\nare now compatible with multi-line expressions, and so should work with\nthe word_wrap branch, though some testing would be good.\n\nExample of these two functions in action (with an intentional sytax error in\nthe code being tokenized):\n\n```python\nfrom runmanager import remove_comments_and_tokenify, find_comments\ns = \"\"\"\nfoo(a, # 123\n    b, # baz\n    c)! # qux\n    # foo\n    \"\"\"\n\nexpr, tokens = remove_comments_and_tokenify(s)\nprint(\"without comments:\")\nfor line in expr.splitlines():\n    print(repr(line))\n\nprint(\"tokens:\", tokens)\ncomments = find_comments(s)\nprint(\"comments only:\")\nfor start, end in comments:\n    print(repr(s[start:end]))\n```\nresult:\n```\nwithout comments:\n''\n'foo(a,'\n'    b,'\n'    c)!'\ntokens: ['\\n', 'foo', '(', 'a', ',', '\\n', 'b', ',', '\\n', 'c', ')', '!']\ncomments only:\n' # 123'\n' # baz'\n' # qux\\n    # foo\\n    '\n```", "markup": "markdown", "html": "<p>Split functionality to find comments out of <code>remove_comments_and_tokenify()</code>,<br />\ninto new function <code>get_comments()</code>, so that it can be used separately by code that<br />\nwants the comments themselves and not just to remove them. This way the remote<br />\nserver's <code>set_globals()</code> can preserve only an expression-final comment (or<br />\ncomment block) in multi-line expressions.</p>\n<p>Use this functionality in RemoteServer.set_globals() to do the above.</p>\n<p>Both <code>remote_comments_and_tokenify()</code> (used in diffing globals) and <code>get_comments()</code><br />\n(used to preserve comments in RemoteServer.set_globals())<br />\nare now compatible with multi-line expressions, and so should work with<br />\nthe word_wrap branch, though some testing would be good.</p>\n<p>Example of these two functions in action (with an intentional sytax error in<br />\nthe code being tokenized):</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">runmanager</span> <span class=\"kn\">import</span> <span class=\"n\">remove_comments_and_tokenify</span><span class=\"p\">,</span> <span class=\"n\">find_comments</span>\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"s2\">foo(a, # 123</span>\n<span class=\"s2\">    b, # baz</span>\n<span class=\"s2\">    c)! # qux</span>\n<span class=\"s2\">    # foo</span>\n<span class=\"s2\">    &quot;&quot;&quot;</span>\n\n<span class=\"n\">expr</span><span class=\"p\">,</span> <span class=\"n\">tokens</span> <span class=\"o\">=</span> <span class=\"n\">remove_comments_and_tokenify</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;without comments:&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">expr</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">():</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">))</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;tokens:&quot;</span><span class=\"p\">,</span> <span class=\"n\">tokens</span><span class=\"p\">)</span>\n<span class=\"n\">comments</span> <span class=\"o\">=</span> <span class=\"n\">find_comments</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;comments only:&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">end</span> <span class=\"ow\">in</span> <span class=\"n\">comments</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"n\">end</span><span class=\"p\">]))</span>\n</pre></div>\n\n\n<p>result:</p>\n<div class=\"codehilite\"><pre><span></span>without comments:\n&#39;&#39;\n&#39;foo(a,&#39;\n&#39;    b,&#39;\n&#39;    c)!&#39;\ntokens: [&#39;\\n&#39;, &#39;foo&#39;, &#39;(&#39;, &#39;a&#39;, &#39;,&#39;, &#39;\\n&#39;, &#39;b&#39;, &#39;,&#39;, &#39;\\n&#39;, &#39;c&#39;, &#39;)&#39;, &#39;!&#39;]\ncomments only:\n&#39; # 123&#39;\n&#39; # baz&#39;\n&#39; # qux\\n    # foo\\n    &#39;\n</pre></div>", "type": "rendered"}}, "hash": "042f842324d7128c0f1e02cac47f6889df203ab4", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/042f842324d7128c0f1e02cac47f6889df203ab4.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/042f842324d7128c0f1e02cac47f6889df203ab4/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/042f842324d7128c0f1e02cac47f6889df203ab4"}, "html": {"href": "#!/cavitylab/runmanager/commits/042f842324d7128c0f1e02cac47f6889df203ab4"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/042f842324d7128c0f1e02cac47f6889df203ab4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/042f842324d7128c0f1e02cac47f6889df203ab4/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/042f842324d7128c0f1e02cac47f6889df203ab4/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Split functionality to find comments out of `remove_comments_and_tokenify()`,\ninto new function `get_comments()`, so that it can be used separately by code that\nwants the comments themselves and not just to remove them. This way the remote\nserver's `set_globals()` can preserve only an expression-final comment (or\ncomment block) in multi-line expressions.\n\nUse this functionality in RemoteServer.set_globals() to do the above.\n\nBoth `remote_comments_and_tokenify()` (used in diffing globals) and `get_comments()`\n(used to preserve comments in RemoteServer.set_globals())\nare now compatible with multi-line expressions, and so should work with\nthe word_wrap branch, though some testing would be good.\n\nExample of these two functions in action (with an intentional sytax error in\nthe code being tokenized):\n\n```python\nfrom runmanager import remove_comments_and_tokenify, find_comments\ns = \"\"\"\nfoo(a, # 123\n    b, # baz\n    c)! # qux\n    # foo\n    \"\"\"\n\nexpr, tokens = remove_comments_and_tokenify(s)\nprint(\"without comments:\")\nfor line in expr.splitlines():\n    print(repr(line))\n\nprint(\"tokens:\", tokens)\ncomments = find_comments(s)\nprint(\"comments only:\")\nfor start, end in comments:\n    print(repr(s[start:end]))\n```\nresult:\n```\nwithout comments:\n''\n'foo(a,'\n'    b,'\n'    c)!'\ntokens: ['\\n', 'foo', '(', 'a', ',', '\\n', 'b', ',', '\\n', 'c', ')', '!']\ncomments only:\n' # 123'\n' # baz'\n' # qux\\n    # foo\\n    '\n```", "markup": "markdown", "html": "<p>Split functionality to find comments out of <code>remove_comments_and_tokenify()</code>,<br />\ninto new function <code>get_comments()</code>, so that it can be used separately by code that<br />\nwants the comments themselves and not just to remove them. This way the remote<br />\nserver's <code>set_globals()</code> can preserve only an expression-final comment (or<br />\ncomment block) in multi-line expressions.</p>\n<p>Use this functionality in RemoteServer.set_globals() to do the above.</p>\n<p>Both <code>remote_comments_and_tokenify()</code> (used in diffing globals) and <code>get_comments()</code><br />\n(used to preserve comments in RemoteServer.set_globals())<br />\nare now compatible with multi-line expressions, and so should work with<br />\nthe word_wrap branch, though some testing would be good.</p>\n<p>Example of these two functions in action (with an intentional sytax error in<br />\nthe code being tokenized):</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">runmanager</span> <span class=\"kn\">import</span> <span class=\"n\">remove_comments_and_tokenify</span><span class=\"p\">,</span> <span class=\"n\">find_comments</span>\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"s2\">foo(a, # 123</span>\n<span class=\"s2\">    b, # baz</span>\n<span class=\"s2\">    c)! # qux</span>\n<span class=\"s2\">    # foo</span>\n<span class=\"s2\">    &quot;&quot;&quot;</span>\n\n<span class=\"n\">expr</span><span class=\"p\">,</span> <span class=\"n\">tokens</span> <span class=\"o\">=</span> <span class=\"n\">remove_comments_and_tokenify</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;without comments:&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">expr</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">():</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">))</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;tokens:&quot;</span><span class=\"p\">,</span> <span class=\"n\">tokens</span><span class=\"p\">)</span>\n<span class=\"n\">comments</span> <span class=\"o\">=</span> <span class=\"n\">find_comments</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;comments only:&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">end</span> <span class=\"ow\">in</span> <span class=\"n\">comments</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"n\">end</span><span class=\"p\">]))</span>\n</pre></div>\n\n\n<p>result:</p>\n<div class=\"codehilite\"><pre><span></span>without comments:\n&#39;&#39;\n&#39;foo(a,&#39;\n&#39;    b,&#39;\n&#39;    c)!&#39;\ntokens: [&#39;\\n&#39;, &#39;foo&#39;, &#39;(&#39;, &#39;a&#39;, &#39;,&#39;, &#39;\\n&#39;, &#39;b&#39;, &#39;,&#39;, &#39;\\n&#39;, &#39;c&#39;, &#39;)&#39;, &#39;!&#39;]\ncomments only:\n&#39; # 123&#39;\n&#39; # baz&#39;\n&#39; # qux\\n    # foo\\n    &#39;\n</pre></div>", "type": "rendered"}, "parents": [{"hash": "bf39b5fb732c4674f30378e74987d1a0305c5ce7", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/bf39b5fb732c4674f30378e74987d1a0305c5ce7.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/bf39b5fb732c4674f30378e74987d1a0305c5ce7"}}}], "date": "2019-05-09T14:05:23+00:00", "message": "Split functionality to find comments out of `remove_comments_and_tokenify()`,\ninto new function `get_comments()`, so that it can be used separately by code that\nwants the comments themselves and not just to remove them. This way the remote\nserver's `set_globals()` can preserve only an expression-final comment (or\ncomment block) in multi-line expressions.\n\nUse this functionality in RemoteServer.set_globals() to do the above.\n\nBoth `remote_comments_and_tokenify()` (used in diffing globals) and `get_comments()`\n(used to preserve comments in RemoteServer.set_globals())\nare now compatible with multi-line expressions, and so should work with\nthe word_wrap branch, though some testing would be good.\n\nExample of these two functions in action (with an intentional sytax error in\nthe code being tokenized):\n\n```python\nfrom runmanager import remove_comments_and_tokenify, find_comments\ns = \"\"\"\nfoo(a, # 123\n    b, # baz\n    c)! # qux\n    # foo\n    \"\"\"\n\nexpr, tokens = remove_comments_and_tokenify(s)\nprint(\"without comments:\")\nfor line in expr.splitlines():\n    print(repr(line))\n\nprint(\"tokens:\", tokens)\ncomments = find_comments(s)\nprint(\"comments only:\")\nfor start, end in comments:\n    print(repr(s[start:end]))\n```\nresult:\n```\nwithout comments:\n''\n'foo(a,'\n'    b,'\n'    c)!'\ntokens: ['\\n', 'foo', '(', 'a', ',', '\\n', 'b', ',', '\\n', 'c', ')', '!']\ncomments only:\n' # 123'\n' # baz'\n' # qux\\n    # foo\\n    '\n```", "type": "commit"}, {"rendered": {"message": {"raw": "preserve comments when setting global values.\n\nNote: I don't expect this to work with multi-line expressions in the word-wrap\nbranch. But this can be fixed in the remove_comments_and_tokenify() function\nin that branch.", "markup": "markdown", "html": "<p>preserve comments when setting global values.</p>\n<p>Note: I don't expect this to work with multi-line expressions in the word-wrap<br />\nbranch. But this can be fixed in the remove_comments_and_tokenify() function<br />\nin that branch.</p>", "type": "rendered"}}, "hash": "bf39b5fb732c4674f30378e74987d1a0305c5ce7", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/bf39b5fb732c4674f30378e74987d1a0305c5ce7.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/bf39b5fb732c4674f30378e74987d1a0305c5ce7/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/bf39b5fb732c4674f30378e74987d1a0305c5ce7"}, "html": {"href": "#!/cavitylab/runmanager/commits/bf39b5fb732c4674f30378e74987d1a0305c5ce7"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/bf39b5fb732c4674f30378e74987d1a0305c5ce7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/bf39b5fb732c4674f30378e74987d1a0305c5ce7/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/bf39b5fb732c4674f30378e74987d1a0305c5ce7/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "preserve comments when setting global values.\n\nNote: I don't expect this to work with multi-line expressions in the word-wrap\nbranch. But this can be fixed in the remove_comments_and_tokenify() function\nin that branch.", "markup": "markdown", "html": "<p>preserve comments when setting global values.</p>\n<p>Note: I don't expect this to work with multi-line expressions in the word-wrap<br />\nbranch. But this can be fixed in the remove_comments_and_tokenify() function<br />\nin that branch.</p>", "type": "rendered"}, "parents": [{"hash": "1ace84a183fe66fdfcd53beee5333b760e547e04", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/1ace84a183fe66fdfcd53beee5333b760e547e04.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/1ace84a183fe66fdfcd53beee5333b760e547e04"}}}], "date": "2019-05-09T03:55:42+00:00", "message": "preserve comments when setting global values.\n\nNote: I don't expect this to work with multi-line expressions in the word-wrap\nbranch. But this can be fixed in the remove_comments_and_tokenify() function\nin that branch.", "type": "commit"}, {"rendered": {"message": {"raw": "Basic remote control of runmanager.\n\nGetting and setting of globals, clicking of engage button with:\n\n`runmanager.remote.get_globals()`\n`runmanager.remtote.set_globals()`\n`runmanager.remote.engage()`\n\nRequires a runmanager host and port to be set in labconfig, otherwise defaults\nused. One may also intantiate a runmanager.remote.Client manually to specify\nany host and port. The server uses the labconfig port, or a default if not\npresent.\n\nRequire labscript_utils 2.12.5 with a fix for the security-wrapped ZMQClient class", "markup": "markdown", "html": "<p>Basic remote control of runmanager.</p>\n<p>Getting and setting of globals, clicking of engage button with:</p>\n<p><code>runmanager.remote.get_globals()</code><br />\n<code>runmanager.remtote.set_globals()</code><br />\n<code>runmanager.remote.engage()</code></p>\n<p>Requires a runmanager host and port to be set in labconfig, otherwise defaults<br />\nused. One may also intantiate a runmanager.remote.Client manually to specify<br />\nany host and port. The server uses the labconfig port, or a default if not<br />\npresent.</p>\n<p>Require labscript_utils 2.12.5 with a fix for the security-wrapped ZMQClient class</p>", "type": "rendered"}}, "hash": "1ace84a183fe66fdfcd53beee5333b760e547e04", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/1ace84a183fe66fdfcd53beee5333b760e547e04.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/1ace84a183fe66fdfcd53beee5333b760e547e04/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/1ace84a183fe66fdfcd53beee5333b760e547e04"}, "html": {"href": "#!/cavitylab/runmanager/commits/1ace84a183fe66fdfcd53beee5333b760e547e04"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/1ace84a183fe66fdfcd53beee5333b760e547e04"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/1ace84a183fe66fdfcd53beee5333b760e547e04/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/1ace84a183fe66fdfcd53beee5333b760e547e04/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Basic remote control of runmanager.\n\nGetting and setting of globals, clicking of engage button with:\n\n`runmanager.remote.get_globals()`\n`runmanager.remtote.set_globals()`\n`runmanager.remote.engage()`\n\nRequires a runmanager host and port to be set in labconfig, otherwise defaults\nused. One may also intantiate a runmanager.remote.Client manually to specify\nany host and port. The server uses the labconfig port, or a default if not\npresent.\n\nRequire labscript_utils 2.12.5 with a fix for the security-wrapped ZMQClient class", "markup": "markdown", "html": "<p>Basic remote control of runmanager.</p>\n<p>Getting and setting of globals, clicking of engage button with:</p>\n<p><code>runmanager.remote.get_globals()</code><br />\n<code>runmanager.remtote.set_globals()</code><br />\n<code>runmanager.remote.engage()</code></p>\n<p>Requires a runmanager host and port to be set in labconfig, otherwise defaults<br />\nused. One may also intantiate a runmanager.remote.Client manually to specify<br />\nany host and port. The server uses the labconfig port, or a default if not<br />\npresent.</p>\n<p>Require labscript_utils 2.12.5 with a fix for the security-wrapped ZMQClient class</p>", "type": "rendered"}, "parents": [{"hash": "8d32f49f391c37d7f968afe84e92a86991270d7f", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/8d32f49f391c37d7f968afe84e92a86991270d7f.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/8d32f49f391c37d7f968afe84e92a86991270d7f"}}}], "date": "2019-05-08T22:24:15+00:00", "message": "Basic remote control of runmanager.\n\nGetting and setting of globals, clicking of engage button with:\n\n`runmanager.remote.get_globals()`\n`runmanager.remtote.set_globals()`\n`runmanager.remote.engage()`\n\nRequires a runmanager host and port to be set in labconfig, otherwise defaults\nused. One may also intantiate a runmanager.remote.Client manually to specify\nany host and port. The server uses the labconfig port, or a default if not\npresent.\n\nRequire labscript_utils 2.12.5 with a fix for the security-wrapped ZMQClient class", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in bugfix (pull request #36)\n\nUse encryption-friendly outputbox\n\nApproved-by: Russell Anderson", "markup": "markdown", "html": "<p>Merged in bugfix (pull request #36)</p>\n<p>Use encryption-friendly outputbox</p>\n<p>Approved-by: Russell Anderson</p>", "type": "rendered"}}, "hash": "8d32f49f391c37d7f968afe84e92a86991270d7f", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/8d32f49f391c37d7f968afe84e92a86991270d7f.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/8d32f49f391c37d7f968afe84e92a86991270d7f/comments_page=1.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/8d32f49f391c37d7f968afe84e92a86991270d7f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/8d32f49f391c37d7f968afe84e92a86991270d7f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/8d32f49f391c37d7f968afe84e92a86991270d7f/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/8d32f49f391c37d7f968afe84e92a86991270d7f/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in bugfix (pull request #36)\n\nUse encryption-friendly outputbox\n\nApproved-by: Russell Anderson", "markup": "markdown", "html": "<p>Merged in bugfix (pull request #36)</p>\n<p>Use encryption-friendly outputbox</p>\n<p>Approved-by: Russell Anderson</p>", "type": "rendered"}, "parents": [{"hash": "d02a1b0a8ac84c9ce336e5f2d7ebb1b83fbb60da", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/d02a1b0a8ac84c9ce336e5f2d7ebb1b83fbb60da.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/d02a1b0a8ac84c9ce336e5f2d7ebb1b83fbb60da"}}}, {"hash": "ac0026a5a0ca597f37c566f0da0532ae7bf80603", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/ac0026a5a0ca597f37c566f0da0532ae7bf80603.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/ac0026a5a0ca597f37c566f0da0532ae7bf80603"}}}], "date": "2019-04-28T15:25:18+00:00", "message": "Merged in bugfix (pull request #36)\n\nUse encryption-friendly outputbox\n\nApproved-by: Russell Anderson", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch bugfix", "markup": "markdown", "html": "<p>Close branch bugfix</p>", "type": "rendered"}}, "hash": "ac0026a5a0ca597f37c566f0da0532ae7bf80603", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/ac0026a5a0ca597f37c566f0da0532ae7bf80603.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/ac0026a5a0ca597f37c566f0da0532ae7bf80603/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/ac0026a5a0ca597f37c566f0da0532ae7bf80603"}, "html": {"href": "#!/cavitylab/runmanager/commits/ac0026a5a0ca597f37c566f0da0532ae7bf80603"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/ac0026a5a0ca597f37c566f0da0532ae7bf80603"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/ac0026a5a0ca597f37c566f0da0532ae7bf80603/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/ac0026a5a0ca597f37c566f0da0532ae7bf80603/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch bugfix", "markup": "markdown", "html": "<p>Close branch bugfix</p>", "type": "rendered"}, "parents": [{"hash": "6a6ff3d5df706ef7623b5bb4074685d2db14d520", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/6a6ff3d5df706ef7623b5bb4074685d2db14d520.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/6a6ff3d5df706ef7623b5bb4074685d2db14d520"}}}], "date": "2019-04-28T15:25:18+00:00", "message": "Close branch bugfix", "type": "commit"}, {"rendered": {"message": {"raw": "Incorrect import path", "markup": "markdown", "html": "<p>Incorrect import path</p>", "type": "rendered"}}, "hash": "6a6ff3d5df706ef7623b5bb4074685d2db14d520", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/6a6ff3d5df706ef7623b5bb4074685d2db14d520.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/6a6ff3d5df706ef7623b5bb4074685d2db14d520/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/6a6ff3d5df706ef7623b5bb4074685d2db14d520"}, "html": {"href": "#!/cavitylab/runmanager/commits/6a6ff3d5df706ef7623b5bb4074685d2db14d520"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/6a6ff3d5df706ef7623b5bb4074685d2db14d520"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/6a6ff3d5df706ef7623b5bb4074685d2db14d520/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/6a6ff3d5df706ef7623b5bb4074685d2db14d520/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Incorrect import path", "markup": "markdown", "html": "<p>Incorrect import path</p>", "type": "rendered"}, "parents": [{"hash": "3bc23df05c756184149d74f27108a38119406637", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/3bc23df05c756184149d74f27108a38119406637.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/3bc23df05c756184149d74f27108a38119406637"}}}], "date": "2019-04-26T19:51:46+00:00", "message": "Incorrect import path", "type": "commit"}, {"rendered": {"message": {"raw": "Fix bug: wrapped OutputBox was not being used, resulting in no output when\nencryption enabled.", "markup": "markdown", "html": "<p>Fix bug: wrapped OutputBox was not being used, resulting in no output when<br />\nencryption enabled.</p>", "type": "rendered"}}, "hash": "3bc23df05c756184149d74f27108a38119406637", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/3bc23df05c756184149d74f27108a38119406637.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/3bc23df05c756184149d74f27108a38119406637/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/3bc23df05c756184149d74f27108a38119406637"}, "html": {"href": "#!/cavitylab/runmanager/commits/3bc23df05c756184149d74f27108a38119406637"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/3bc23df05c756184149d74f27108a38119406637"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/3bc23df05c756184149d74f27108a38119406637/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/3bc23df05c756184149d74f27108a38119406637/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Fix bug: wrapped OutputBox was not being used, resulting in no output when\nencryption enabled.", "markup": "markdown", "html": "<p>Fix bug: wrapped OutputBox was not being used, resulting in no output when<br />\nencryption enabled.</p>", "type": "rendered"}, "parents": [{"hash": "d02a1b0a8ac84c9ce336e5f2d7ebb1b83fbb60da", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/d02a1b0a8ac84c9ce336e5f2d7ebb1b83fbb60da.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/d02a1b0a8ac84c9ce336e5f2d7ebb1b83fbb60da"}}}], "date": "2019-04-26T19:44:37+00:00", "message": "Fix bug: wrapped OutputBox was not being used, resulting in no output when\nencryption enabled.", "type": "commit"}, {"rendered": {"message": {"raw": "Added tag 2.4.1 for changeset 990e064cbf9f", "markup": "markdown", "html": "<p>Added tag 2.4.1 for changeset <a href=\"#!/cavitylab/runmanager/commits/990e064cbf9f\" rel=\"nofollow\" class=\"ap-connect-link\">990e064cbf9f</a></p>", "type": "rendered"}}, "hash": "d02a1b0a8ac84c9ce336e5f2d7ebb1b83fbb60da", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/d02a1b0a8ac84c9ce336e5f2d7ebb1b83fbb60da.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/d02a1b0a8ac84c9ce336e5f2d7ebb1b83fbb60da/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/d02a1b0a8ac84c9ce336e5f2d7ebb1b83fbb60da"}, "html": {"href": "#!/cavitylab/runmanager/commits/d02a1b0a8ac84c9ce336e5f2d7ebb1b83fbb60da"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/d02a1b0a8ac84c9ce336e5f2d7ebb1b83fbb60da"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/d02a1b0a8ac84c9ce336e5f2d7ebb1b83fbb60da/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/d02a1b0a8ac84c9ce336e5f2d7ebb1b83fbb60da/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Added tag 2.4.1 for changeset 990e064cbf9f", "markup": "markdown", "html": "<p>Added tag 2.4.1 for changeset <a href=\"#!/cavitylab/runmanager/commits/990e064cbf9f\" rel=\"nofollow\" class=\"ap-connect-link\">990e064cbf9f</a></p>", "type": "rendered"}, "parents": [{"hash": "990e064cbf9ffad2f5866d989466186827baacf6", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/990e064cbf9ffad2f5866d989466186827baacf6.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/990e064cbf9ffad2f5866d989466186827baacf6"}}}], "date": "2019-04-18T18:17:56+00:00", "message": "Added tag 2.4.1 for changeset 990e064cbf9f", "type": "commit"}, {"rendered": {"message": {"raw": "patch version bump", "markup": "markdown", "html": "<p>patch version bump</p>", "type": "rendered"}}, "hash": "990e064cbf9ffad2f5866d989466186827baacf6", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/990e064cbf9ffad2f5866d989466186827baacf6.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/990e064cbf9ffad2f5866d989466186827baacf6/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/990e064cbf9ffad2f5866d989466186827baacf6"}, "html": {"href": "#!/cavitylab/runmanager/commits/990e064cbf9ffad2f5866d989466186827baacf6"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/990e064cbf9ffad2f5866d989466186827baacf6"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/990e064cbf9ffad2f5866d989466186827baacf6/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/990e064cbf9ffad2f5866d989466186827baacf6/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "patch version bump", "markup": "markdown", "html": "<p>patch version bump</p>", "type": "rendered"}, "parents": [{"hash": "3e0aa6e835249e67617b34f7fcae6f851e8f25d5", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/3e0aa6e835249e67617b34f7fcae6f851e8f25d5.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/3e0aa6e835249e67617b34f7fcae6f851e8f25d5"}}}], "date": "2019-04-18T18:17:50+00:00", "message": "patch version bump", "type": "commit"}, {"rendered": {"message": {"raw": "Hotfix for issue #67 - sequence index file not found causes crash on python 2", "markup": "markdown", "html": "<p>Hotfix for issue #67 - sequence index file not found causes crash on python 2</p>", "type": "rendered"}}, "hash": "3e0aa6e835249e67617b34f7fcae6f851e8f25d5", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/3e0aa6e835249e67617b34f7fcae6f851e8f25d5.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/3e0aa6e835249e67617b34f7fcae6f851e8f25d5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/3e0aa6e835249e67617b34f7fcae6f851e8f25d5"}, "html": {"href": "#!/cavitylab/runmanager/commits/3e0aa6e835249e67617b34f7fcae6f851e8f25d5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/3e0aa6e835249e67617b34f7fcae6f851e8f25d5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/3e0aa6e835249e67617b34f7fcae6f851e8f25d5/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/3e0aa6e835249e67617b34f7fcae6f851e8f25d5/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Hotfix for issue #67 - sequence index file not found causes crash on python 2", "markup": "markdown", "html": "<p>Hotfix for issue #67 - sequence index file not found causes crash on python 2</p>", "type": "rendered"}, "parents": [{"hash": "f598b77f5b16d31330dbfd189d5be2358461aaad", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/f598b77f5b16d31330dbfd189d5be2358461aaad.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/f598b77f5b16d31330dbfd189d5be2358461aaad"}}}], "date": "2019-04-18T16:28:10+00:00", "message": "Hotfix for issue #67 - sequence index file not found causes crash on python 2", "type": "commit"}, {"rendered": {"message": {"raw": "Added tag 2.4.0 for changeset 3b3208854760", "markup": "markdown", "html": "<p>Added tag 2.4.0 for changeset <a href=\"#!/cavitylab/runmanager/commits/3b3208854760\" rel=\"nofollow\" class=\"ap-connect-link\">3b3208854760</a></p>", "type": "rendered"}}, "hash": "f598b77f5b16d31330dbfd189d5be2358461aaad", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/f598b77f5b16d31330dbfd189d5be2358461aaad.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/f598b77f5b16d31330dbfd189d5be2358461aaad/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/f598b77f5b16d31330dbfd189d5be2358461aaad"}, "html": {"href": "#!/cavitylab/runmanager/commits/f598b77f5b16d31330dbfd189d5be2358461aaad"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/f598b77f5b16d31330dbfd189d5be2358461aaad"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/f598b77f5b16d31330dbfd189d5be2358461aaad/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/f598b77f5b16d31330dbfd189d5be2358461aaad/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Added tag 2.4.0 for changeset 3b3208854760", "markup": "markdown", "html": "<p>Added tag 2.4.0 for changeset <a href=\"#!/cavitylab/runmanager/commits/3b3208854760\" rel=\"nofollow\" class=\"ap-connect-link\">3b3208854760</a></p>", "type": "rendered"}, "parents": [{"hash": "3b3208854760cfc0d0cb4235fc03b154518afcaf", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/3b3208854760cfc0d0cb4235fc03b154518afcaf.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/3b3208854760cfc0d0cb4235fc03b154518afcaf"}}}], "date": "2019-04-08T18:31:44+00:00", "message": "Added tag 2.4.0 for changeset 3b3208854760", "type": "commit"}, {"rendered": {"message": {"raw": "Minor version bump for sequence_index changes.", "markup": "markdown", "html": "<p>Minor version bump for sequence_index changes.</p>", "type": "rendered"}}, "hash": "3b3208854760cfc0d0cb4235fc03b154518afcaf", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/3b3208854760cfc0d0cb4235fc03b154518afcaf.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/3b3208854760cfc0d0cb4235fc03b154518afcaf/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/3b3208854760cfc0d0cb4235fc03b154518afcaf"}, "html": {"href": "#!/cavitylab/runmanager/commits/3b3208854760cfc0d0cb4235fc03b154518afcaf"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/3b3208854760cfc0d0cb4235fc03b154518afcaf"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/3b3208854760cfc0d0cb4235fc03b154518afcaf/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/3b3208854760cfc0d0cb4235fc03b154518afcaf/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Minor version bump for sequence_index changes.", "markup": "markdown", "html": "<p>Minor version bump for sequence_index changes.</p>", "type": "rendered"}, "parents": [{"hash": "e359aed6f4a183b9eab982eba01d779bdf4ded99", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/e359aed6f4a183b9eab982eba01d779bdf4ded99.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/e359aed6f4a183b9eab982eba01d779bdf4ded99"}}}], "date": "2019-04-08T18:31:37+00:00", "message": "Minor version bump for sequence_index changes.", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in sequence_index (pull request #30)\n\nAdd the concept of a sequence_index to runmanager.", "markup": "markdown", "html": "<p>Merged in sequence_index (pull request #30)</p>\n<p>Add the concept of a sequence_index to runmanager.</p>", "type": "rendered"}}, "hash": "e359aed6f4a183b9eab982eba01d779bdf4ded99", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/e359aed6f4a183b9eab982eba01d779bdf4ded99.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/e359aed6f4a183b9eab982eba01d779bdf4ded99/comments_page=1.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/e359aed6f4a183b9eab982eba01d779bdf4ded99"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/e359aed6f4a183b9eab982eba01d779bdf4ded99"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/e359aed6f4a183b9eab982eba01d779bdf4ded99/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/e359aed6f4a183b9eab982eba01d779bdf4ded99/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in sequence_index (pull request #30)\n\nAdd the concept of a sequence_index to runmanager.", "markup": "markdown", "html": "<p>Merged in sequence_index (pull request #30)</p>\n<p>Add the concept of a sequence_index to runmanager.</p>", "type": "rendered"}, "parents": [{"hash": "56dc84f4c7507ff91bd61131874e94baa8176fe4", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/56dc84f4c7507ff91bd61131874e94baa8176fe4.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/56dc84f4c7507ff91bd61131874e94baa8176fe4"}}}, {"hash": "a58d042550a417cddc82ec61ef7aba354b99ac80", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/a58d042550a417cddc82ec61ef7aba354b99ac80.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/a58d042550a417cddc82ec61ef7aba354b99ac80"}}}], "date": "2019-04-08T17:26:26+00:00", "message": "Merged in sequence_index (pull request #30)\n\nAdd the concept of a sequence_index to runmanager.", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch sequence_index", "markup": "markdown", "html": "<p>Close branch sequence_index</p>", "type": "rendered"}}, "hash": "a58d042550a417cddc82ec61ef7aba354b99ac80", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/a58d042550a417cddc82ec61ef7aba354b99ac80.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/a58d042550a417cddc82ec61ef7aba354b99ac80/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/a58d042550a417cddc82ec61ef7aba354b99ac80"}, "html": {"href": "#!/cavitylab/runmanager/commits/a58d042550a417cddc82ec61ef7aba354b99ac80"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/a58d042550a417cddc82ec61ef7aba354b99ac80"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/a58d042550a417cddc82ec61ef7aba354b99ac80/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/a58d042550a417cddc82ec61ef7aba354b99ac80/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch sequence_index", "markup": "markdown", "html": "<p>Close branch sequence_index</p>", "type": "rendered"}, "parents": [{"hash": "69854d456aa994846e7673d0f53ac56056dc024c", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/69854d456aa994846e7673d0f53ac56056dc024c.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/69854d456aa994846e7673d0f53ac56056dc024c"}}}], "date": "2019-04-08T17:26:26+00:00", "message": "Close branch sequence_index", "type": "commit"}, {"rendered": {"message": {"raw": "Add indication icon and tooltip to emphasise that a custom output folder is in use", "markup": "markdown", "html": "<p>Add indication icon and tooltip to emphasise that a custom output folder is in use</p>", "type": "rendered"}}, "hash": "69854d456aa994846e7673d0f53ac56056dc024c", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/69854d456aa994846e7673d0f53ac56056dc024c.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/69854d456aa994846e7673d0f53ac56056dc024c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/69854d456aa994846e7673d0f53ac56056dc024c"}, "html": {"href": "#!/cavitylab/runmanager/commits/69854d456aa994846e7673d0f53ac56056dc024c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/69854d456aa994846e7673d0f53ac56056dc024c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/69854d456aa994846e7673d0f53ac56056dc024c/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/69854d456aa994846e7673d0f53ac56056dc024c/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Add indication icon and tooltip to emphasise that a custom output folder is in use", "markup": "markdown", "html": "<p>Add indication icon and tooltip to emphasise that a custom output folder is in use</p>", "type": "rendered"}, "parents": [{"hash": "8bfaaf1b7627aa260a5b743b996a15f44e87d1ea", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/8bfaaf1b7627aa260a5b743b996a15f44e87d1ea.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/8bfaaf1b7627aa260a5b743b996a15f44e87d1ea"}}}], "date": "2019-03-29T19:52:46+00:00", "message": "Add indication icon and tooltip to emphasise that a custom output folder is in use", "type": "commit"}, {"rendered": {"message": {"raw": "Only update the GUI for the output folder every 30 seconds, instead of\nevery one second. This decreases needless network traffic and zlock log lines,\nwithout risking using the wrong otput folder since it is checked whenever the\nuser compiles a sequence.", "markup": "markdown", "html": "<p>Only update the GUI for the output folder every 30 seconds, instead of<br />\nevery one second. This decreases needless network traffic and zlock log lines,<br />\nwithout risking using the wrong otput folder since it is checked whenever the<br />\nuser compiles a sequence.</p>", "type": "rendered"}}, "hash": "8bfaaf1b7627aa260a5b743b996a15f44e87d1ea", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/8bfaaf1b7627aa260a5b743b996a15f44e87d1ea.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/8bfaaf1b7627aa260a5b743b996a15f44e87d1ea/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/8bfaaf1b7627aa260a5b743b996a15f44e87d1ea"}, "html": {"href": "#!/cavitylab/runmanager/commits/8bfaaf1b7627aa260a5b743b996a15f44e87d1ea"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/8bfaaf1b7627aa260a5b743b996a15f44e87d1ea"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/8bfaaf1b7627aa260a5b743b996a15f44e87d1ea/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/8bfaaf1b7627aa260a5b743b996a15f44e87d1ea/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Only update the GUI for the output folder every 30 seconds, instead of\nevery one second. This decreases needless network traffic and zlock log lines,\nwithout risking using the wrong otput folder since it is checked whenever the\nuser compiles a sequence.", "markup": "markdown", "html": "<p>Only update the GUI for the output folder every 30 seconds, instead of<br />\nevery one second. This decreases needless network traffic and zlock log lines,<br />\nwithout risking using the wrong otput folder since it is checked whenever the<br />\nuser compiles a sequence.</p>", "type": "rendered"}, "parents": [{"hash": "5a1ada39cd13a667e6b8d3e7af42a76a9b625e62", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/5a1ada39cd13a667e6b8d3e7af42a76a9b625e62.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/5a1ada39cd13a667e6b8d3e7af42a76a9b625e62"}}}], "date": "2019-03-19T21:24:21+00:00", "message": "Only update the GUI for the output folder every 30 seconds, instead of\nevery one second. This decreases needless network traffic and zlock log lines,\nwithout risking using the wrong otput folder since it is checked whenever the\nuser compiles a sequence.", "type": "commit"}, {"rendered": {"message": {"raw": "Require labscript_utils 2.12.0 for backward compat with old zlock servers", "markup": "markdown", "html": "<p>Require labscript_utils 2.12.0 for backward compat with old zlock servers</p>", "type": "rendered"}}, "hash": "5a1ada39cd13a667e6b8d3e7af42a76a9b625e62", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/5a1ada39cd13a667e6b8d3e7af42a76a9b625e62.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/5a1ada39cd13a667e6b8d3e7af42a76a9b625e62/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/5a1ada39cd13a667e6b8d3e7af42a76a9b625e62"}, "html": {"href": "#!/cavitylab/runmanager/commits/5a1ada39cd13a667e6b8d3e7af42a76a9b625e62"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/5a1ada39cd13a667e6b8d3e7af42a76a9b625e62"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/5a1ada39cd13a667e6b8d3e7af42a76a9b625e62/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/5a1ada39cd13a667e6b8d3e7af42a76a9b625e62/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Require labscript_utils 2.12.0 for backward compat with old zlock servers", "markup": "markdown", "html": "<p>Require labscript_utils 2.12.0 for backward compat with old zlock servers</p>", "type": "rendered"}, "parents": [{"hash": "27aaad2c7c32bf60c17cc69ffec7305e3a022483", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/27aaad2c7c32bf60c17cc69ffec7305e3a022483.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/27aaad2c7c32bf60c17cc69ffec7305e3a022483"}}}], "date": "2019-03-15T18:38:42+00:00", "message": "Require labscript_utils 2.12.0 for backward compat with old zlock servers", "type": "commit"}, {"rendered": {"message": {"raw": "Typo in comment", "markup": "markdown", "html": "<p>Typo in comment</p>", "type": "rendered"}}, "hash": "27aaad2c7c32bf60c17cc69ffec7305e3a022483", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/27aaad2c7c32bf60c17cc69ffec7305e3a022483.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/27aaad2c7c32bf60c17cc69ffec7305e3a022483/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/27aaad2c7c32bf60c17cc69ffec7305e3a022483"}, "html": {"href": "#!/cavitylab/runmanager/commits/27aaad2c7c32bf60c17cc69ffec7305e3a022483"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/27aaad2c7c32bf60c17cc69ffec7305e3a022483"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/27aaad2c7c32bf60c17cc69ffec7305e3a022483/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/27aaad2c7c32bf60c17cc69ffec7305e3a022483/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Typo in comment", "markup": "markdown", "html": "<p>Typo in comment</p>", "type": "rendered"}, "parents": [{"hash": "65e4b4fe4af27c000df687a86151bd937dd527b7", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/65e4b4fe4af27c000df687a86151bd937dd527b7.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/65e4b4fe4af27c000df687a86151bd937dd527b7"}}}], "date": "2019-03-14T23:06:22+00:00", "message": "Typo in comment", "type": "commit"}, {"rendered": {"message": {"raw": "Add the concept of a sequence_index to runmanager.\n\nThe sequence index is an incrementing integer starting from zero each day for\neach experiment script. It is stored on disk in\n<experiment_shot_storage>/<script_name>/.next_sequence_index and accessed using\nzlock so that it may be incremented atomically.\n\nThe sequence index may be used in the output folder format, which defaults to:\noutput_folder_format = %%Y/%%m/%%d/{sequence_index:05d}, resulting in output\nfolders like:\n<shared_drive>/Experiments/<experiment_name>/<script_name>/2019/03/14/00006\n\nThe format string will be fed first to strftime, then a call to .format()\nwith sequence_index and sequence_timestamp kwargs, where sequence_timestamp is\nthe time in format '%Y%m%dT%H%M%S', which is the existing format used in\nsequence_ids.\n\nAllow the shot filename to also have its format configured, such as:\nfilename_prefix_format = '%%Y-%%m-%%d_{sequence_index:05d}_{script_basename}',\nresulting in shot filenames like:\n2019-03-14_00006_myscript_1.h5\n\nThis is similarly passed through strftime and then .format with sequence_index,\nsequence_timestamp, and script_basename kwargs.\n\nThe pre-set output_folder_format if newly installed labconfigs will be:\n%%Y/%%m/%%d/{sequence_index:05d}\nwhich will also be the default if not present in the labconfig file.\n\nThe pre-set filename_prefix_format in newly installed labconfigs will be:\n%%Y-%%m-%%d_{sequence_index:05d}_{script_basename}\nbut if not present in labconfig files, {sequence_timestamp}_{script_basename}\nwill be used to preserve the present behaviour of using the sequence id.\n\nFor compatibility with lyse, the sequence_id is still saved to the h5 file, but\nother attributes are saved too. These are:\n\n'script_basename': the basename of the script, i.e. myscript\n'sequence_date': a string of the date only, i.e. 2019-03-14\n'sequence_index': the sequence_index as an integer,\n'sequence_id': the sequence_id, i.e. 20190314183955_myscript\n\nThe idea is that script_basename, sequence_date and sequence_id become an\nalternative to sequence_id as a way of uniquely identifying a shot. lyse\nalready has a labconfig setting where it uses the sequence_index if present to\nindex the dataframe (added for the  sake of Spielman fork shots which already\nhave sequence_index), but it has the issue that shots cannot be fully uniquely\ndetermined by that alone since the date and script name are needed too. So\nthe date and script name are added to the attrs for this purpose, but sequence_id\nis retained.\n\nRefactored runmanager functions to achieve this. There is now a fairly monolithic function\nnew_sequence_details(), which returns the attrs, folder and filepath prefix for\nthe given labconfig settings and current time. It's all in one function because\nthe different pieces all use timestamps, and so to avoid races it either has to be\na single function call or the caller would need to carry around a datetime object.\nSince it is not too complicated I made it a single function call, though the callers\nare often ignoring one or more of its return values.\n\nRemoved generate_sequence_id, since the functions that accept a sequence_id\nnow accept the sequence_attrs dict instead (one entry of which is the sequence_id).\nThis and the modifying of other function call signatures is a backward incompatible\nchange in the sense of the API that runmanager exposes, but is backward-compatible\nwith how other labscript programs use the runmanager API, i.e. BLACS. So I think\nthis is acceptable - code using the runmanager API directly may need to change.\nWe could do a major version bump to indicate this.", "markup": "markdown", "html": "<p>Add the concept of a sequence_index to runmanager.</p>\n<p>The sequence index is an incrementing integer starting from zero each day for<br />\neach experiment script. It is stored on disk in<br />\n&lt;experiment_shot_storage&gt;/&lt;script_name&gt;/.next_sequence_index and accessed using<br />\nzlock so that it may be incremented atomically.</p>\n<p>The sequence index may be used in the output folder format, which defaults to:<br />\noutput_folder_format = %%Y/%%m/%%d/{sequence_index:05d}, resulting in output<br />\nfolders like:<br />\n&lt;shared_drive&gt;/Experiments/&lt;experiment_name&gt;/&lt;script_name&gt;/2019/03/14/00006</p>\n<p>The format string will be fed first to strftime, then a call to .format()<br />\nwith sequence_index and sequence_timestamp kwargs, where sequence_timestamp is<br />\nthe time in format '%Y%m%dT%H%M%S', which is the existing format used in<br />\nsequence_ids.</p>\n<p>Allow the shot filename to also have its format configured, such as:<br />\nfilename_prefix_format = '%%Y-%%m-%%d_{sequence_index:05d}_{script_basename}',<br />\nresulting in shot filenames like:<br />\n2019-03-14_00006_myscript_1.h5</p>\n<p>This is similarly passed through strftime and then .format with sequence_index,<br />\nsequence_timestamp, and script_basename kwargs.</p>\n<p>The pre-set output_folder_format if newly installed labconfigs will be:<br />\n%%Y/%%m/%%d/{sequence_index:05d}<br />\nwhich will also be the default if not present in the labconfig file.</p>\n<p>The pre-set filename_prefix_format in newly installed labconfigs will be:<br />\n%%Y-%%m-%%d_{sequence_index:05d}<em>{script_basename}<br />\nbut if not present in labconfig files, {sequence_timestamp}</em>{script_basename}<br />\nwill be used to preserve the present behaviour of using the sequence id.</p>\n<p>For compatibility with lyse, the sequence_id is still saved to the h5 file, but<br />\nother attributes are saved too. These are:</p>\n<p>'script_basename': the basename of the script, i.e. myscript<br />\n'sequence_date': a string of the date only, i.e. 2019-03-14<br />\n'sequence_index': the sequence_index as an integer,<br />\n'sequence_id': the sequence_id, i.e. 20190314183955_myscript</p>\n<p>The idea is that script_basename, sequence_date and sequence_id become an<br />\nalternative to sequence_id as a way of uniquely identifying a shot. lyse<br />\nalready has a labconfig setting where it uses the sequence_index if present to<br />\nindex the dataframe (added for the  sake of Spielman fork shots which already<br />\nhave sequence_index), but it has the issue that shots cannot be fully uniquely<br />\ndetermined by that alone since the date and script name are needed too. So<br />\nthe date and script name are added to the attrs for this purpose, but sequence_id<br />\nis retained.</p>\n<p>Refactored runmanager functions to achieve this. There is now a fairly monolithic function<br />\nnew_sequence_details(), which returns the attrs, folder and filepath prefix for<br />\nthe given labconfig settings and current time. It's all in one function because<br />\nthe different pieces all use timestamps, and so to avoid races it either has to be<br />\na single function call or the caller would need to carry around a datetime object.<br />\nSince it is not too complicated I made it a single function call, though the callers<br />\nare often ignoring one or more of its return values.</p>\n<p>Removed generate_sequence_id, since the functions that accept a sequence_id<br />\nnow accept the sequence_attrs dict instead (one entry of which is the sequence_id).<br />\nThis and the modifying of other function call signatures is a backward incompatible<br />\nchange in the sense of the API that runmanager exposes, but is backward-compatible<br />\nwith how other labscript programs use the runmanager API, i.e. BLACS. So I think<br />\nthis is acceptable - code using the runmanager API directly may need to change.<br />\nWe could do a major version bump to indicate this.</p>", "type": "rendered"}}, "hash": "65e4b4fe4af27c000df687a86151bd937dd527b7", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/65e4b4fe4af27c000df687a86151bd937dd527b7.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/65e4b4fe4af27c000df687a86151bd937dd527b7/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/65e4b4fe4af27c000df687a86151bd937dd527b7"}, "html": {"href": "#!/cavitylab/runmanager/commits/65e4b4fe4af27c000df687a86151bd937dd527b7"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/65e4b4fe4af27c000df687a86151bd937dd527b7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/65e4b4fe4af27c000df687a86151bd937dd527b7/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/65e4b4fe4af27c000df687a86151bd937dd527b7/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Add the concept of a sequence_index to runmanager.\n\nThe sequence index is an incrementing integer starting from zero each day for\neach experiment script. It is stored on disk in\n<experiment_shot_storage>/<script_name>/.next_sequence_index and accessed using\nzlock so that it may be incremented atomically.\n\nThe sequence index may be used in the output folder format, which defaults to:\noutput_folder_format = %%Y/%%m/%%d/{sequence_index:05d}, resulting in output\nfolders like:\n<shared_drive>/Experiments/<experiment_name>/<script_name>/2019/03/14/00006\n\nThe format string will be fed first to strftime, then a call to .format()\nwith sequence_index and sequence_timestamp kwargs, where sequence_timestamp is\nthe time in format '%Y%m%dT%H%M%S', which is the existing format used in\nsequence_ids.\n\nAllow the shot filename to also have its format configured, such as:\nfilename_prefix_format = '%%Y-%%m-%%d_{sequence_index:05d}_{script_basename}',\nresulting in shot filenames like:\n2019-03-14_00006_myscript_1.h5\n\nThis is similarly passed through strftime and then .format with sequence_index,\nsequence_timestamp, and script_basename kwargs.\n\nThe pre-set output_folder_format if newly installed labconfigs will be:\n%%Y/%%m/%%d/{sequence_index:05d}\nwhich will also be the default if not present in the labconfig file.\n\nThe pre-set filename_prefix_format in newly installed labconfigs will be:\n%%Y-%%m-%%d_{sequence_index:05d}_{script_basename}\nbut if not present in labconfig files, {sequence_timestamp}_{script_basename}\nwill be used to preserve the present behaviour of using the sequence id.\n\nFor compatibility with lyse, the sequence_id is still saved to the h5 file, but\nother attributes are saved too. These are:\n\n'script_basename': the basename of the script, i.e. myscript\n'sequence_date': a string of the date only, i.e. 2019-03-14\n'sequence_index': the sequence_index as an integer,\n'sequence_id': the sequence_id, i.e. 20190314183955_myscript\n\nThe idea is that script_basename, sequence_date and sequence_id become an\nalternative to sequence_id as a way of uniquely identifying a shot. lyse\nalready has a labconfig setting where it uses the sequence_index if present to\nindex the dataframe (added for the  sake of Spielman fork shots which already\nhave sequence_index), but it has the issue that shots cannot be fully uniquely\ndetermined by that alone since the date and script name are needed too. So\nthe date and script name are added to the attrs for this purpose, but sequence_id\nis retained.\n\nRefactored runmanager functions to achieve this. There is now a fairly monolithic function\nnew_sequence_details(), which returns the attrs, folder and filepath prefix for\nthe given labconfig settings and current time. It's all in one function because\nthe different pieces all use timestamps, and so to avoid races it either has to be\na single function call or the caller would need to carry around a datetime object.\nSince it is not too complicated I made it a single function call, though the callers\nare often ignoring one or more of its return values.\n\nRemoved generate_sequence_id, since the functions that accept a sequence_id\nnow accept the sequence_attrs dict instead (one entry of which is the sequence_id).\nThis and the modifying of other function call signatures is a backward incompatible\nchange in the sense of the API that runmanager exposes, but is backward-compatible\nwith how other labscript programs use the runmanager API, i.e. BLACS. So I think\nthis is acceptable - code using the runmanager API directly may need to change.\nWe could do a major version bump to indicate this.", "markup": "markdown", "html": "<p>Add the concept of a sequence_index to runmanager.</p>\n<p>The sequence index is an incrementing integer starting from zero each day for<br />\neach experiment script. It is stored on disk in<br />\n&lt;experiment_shot_storage&gt;/&lt;script_name&gt;/.next_sequence_index and accessed using<br />\nzlock so that it may be incremented atomically.</p>\n<p>The sequence index may be used in the output folder format, which defaults to:<br />\noutput_folder_format = %%Y/%%m/%%d/{sequence_index:05d}, resulting in output<br />\nfolders like:<br />\n&lt;shared_drive&gt;/Experiments/&lt;experiment_name&gt;/&lt;script_name&gt;/2019/03/14/00006</p>\n<p>The format string will be fed first to strftime, then a call to .format()<br />\nwith sequence_index and sequence_timestamp kwargs, where sequence_timestamp is<br />\nthe time in format '%Y%m%dT%H%M%S', which is the existing format used in<br />\nsequence_ids.</p>\n<p>Allow the shot filename to also have its format configured, such as:<br />\nfilename_prefix_format = '%%Y-%%m-%%d_{sequence_index:05d}_{script_basename}',<br />\nresulting in shot filenames like:<br />\n2019-03-14_00006_myscript_1.h5</p>\n<p>This is similarly passed through strftime and then .format with sequence_index,<br />\nsequence_timestamp, and script_basename kwargs.</p>\n<p>The pre-set output_folder_format if newly installed labconfigs will be:<br />\n%%Y/%%m/%%d/{sequence_index:05d}<br />\nwhich will also be the default if not present in the labconfig file.</p>\n<p>The pre-set filename_prefix_format in newly installed labconfigs will be:<br />\n%%Y-%%m-%%d_{sequence_index:05d}<em>{script_basename}<br />\nbut if not present in labconfig files, {sequence_timestamp}</em>{script_basename}<br />\nwill be used to preserve the present behaviour of using the sequence id.</p>\n<p>For compatibility with lyse, the sequence_id is still saved to the h5 file, but<br />\nother attributes are saved too. These are:</p>\n<p>'script_basename': the basename of the script, i.e. myscript<br />\n'sequence_date': a string of the date only, i.e. 2019-03-14<br />\n'sequence_index': the sequence_index as an integer,<br />\n'sequence_id': the sequence_id, i.e. 20190314183955_myscript</p>\n<p>The idea is that script_basename, sequence_date and sequence_id become an<br />\nalternative to sequence_id as a way of uniquely identifying a shot. lyse<br />\nalready has a labconfig setting where it uses the sequence_index if present to<br />\nindex the dataframe (added for the  sake of Spielman fork shots which already<br />\nhave sequence_index), but it has the issue that shots cannot be fully uniquely<br />\ndetermined by that alone since the date and script name are needed too. So<br />\nthe date and script name are added to the attrs for this purpose, but sequence_id<br />\nis retained.</p>\n<p>Refactored runmanager functions to achieve this. There is now a fairly monolithic function<br />\nnew_sequence_details(), which returns the attrs, folder and filepath prefix for<br />\nthe given labconfig settings and current time. It's all in one function because<br />\nthe different pieces all use timestamps, and so to avoid races it either has to be<br />\na single function call or the caller would need to carry around a datetime object.<br />\nSince it is not too complicated I made it a single function call, though the callers<br />\nare often ignoring one or more of its return values.</p>\n<p>Removed generate_sequence_id, since the functions that accept a sequence_id<br />\nnow accept the sequence_attrs dict instead (one entry of which is the sequence_id).<br />\nThis and the modifying of other function call signatures is a backward incompatible<br />\nchange in the sense of the API that runmanager exposes, but is backward-compatible<br />\nwith how other labscript programs use the runmanager API, i.e. BLACS. So I think<br />\nthis is acceptable - code using the runmanager API directly may need to change.<br />\nWe could do a major version bump to indicate this.</p>", "type": "rendered"}, "parents": [{"hash": "8c5efc6565358f733315a4b4bb681e3010bba653", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/8c5efc6565358f733315a4b4bb681e3010bba653.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/8c5efc6565358f733315a4b4bb681e3010bba653"}}}], "date": "2019-03-14T22:53:33+00:00", "message": "Add the concept of a sequence_index to runmanager.\n\nThe sequence index is an incrementing integer starting from zero each day for\neach experiment script. It is stored on disk in\n<experiment_shot_storage>/<script_name>/.next_sequence_index and accessed using\nzlock so that it may be incremented atomically.\n\nThe sequence index may be used in the output folder format, which defaults to:\noutput_folder_format = %%Y/%%m/%%d/{sequence_index:05d}, resulting in output\nfolders like:\n<shared_drive>/Experiments/<experiment_name>/<script_name>/2019/03/14/00006\n\nThe format string will be fed first to strftime, then a call to .format()\nwith sequence_index and sequence_timestamp kwargs, where sequence_timestamp is\nthe time in format '%Y%m%dT%H%M%S', which is the existing format used in\nsequence_ids.\n\nAllow the shot filename to also have its format configured, such as:\nfilename_prefix_format = '%%Y-%%m-%%d_{sequence_index:05d}_{script_basename}',\nresulting in shot filenames like:\n2019-03-14_00006_myscript_1.h5\n\nThis is similarly passed through strftime and then .format with sequence_index,\nsequence_timestamp, and script_basename kwargs.\n\nThe pre-set output_folder_format if newly installed labconfigs will be:\n%%Y/%%m/%%d/{sequence_index:05d}\nwhich will also be the default if not present in the labconfig file.\n\nThe pre-set filename_prefix_format in newly installed labconfigs will be:\n%%Y-%%m-%%d_{sequence_index:05d}_{script_basename}\nbut if not present in labconfig files, {sequence_timestamp}_{script_basename}\nwill be used to preserve the present behaviour of using the sequence id.\n\nFor compatibility with lyse, the sequence_id is still saved to the h5 file, but\nother attributes are saved too. These are:\n\n'script_basename': the basename of the script, i.e. myscript\n'sequence_date': a string of the date only, i.e. 2019-03-14\n'sequence_index': the sequence_index as an integer,\n'sequence_id': the sequence_id, i.e. 20190314183955_myscript\n\nThe idea is that script_basename, sequence_date and sequence_id become an\nalternative to sequence_id as a way of uniquely identifying a shot. lyse\nalready has a labconfig setting where it uses the sequence_index if present to\nindex the dataframe (added for the  sake of Spielman fork shots which already\nhave sequence_index), but it has the issue that shots cannot be fully uniquely\ndetermined by that alone since the date and script name are needed too. So\nthe date and script name are added to the attrs for this purpose, but sequence_id\nis retained.\n\nRefactored runmanager functions to achieve this. There is now a fairly monolithic function\nnew_sequence_details(), which returns the attrs, folder and filepath prefix for\nthe given labconfig settings and current time. It's all in one function because\nthe different pieces all use timestamps, and so to avoid races it either has to be\na single function call or the caller would need to carry around a datetime object.\nSince it is not too complicated I made it a single function call, though the callers\nare often ignoring one or more of its return values.\n\nRemoved generate_sequence_id, since the functions that accept a sequence_id\nnow accept the sequence_attrs dict instead (one entry of which is the sequence_id).\nThis and the modifying of other function call signatures is a backward incompatible\nchange in the sense of the API that runmanager exposes, but is backward-compatible\nwith how other labscript programs use the runmanager API, i.e. BLACS. So I think\nthis is acceptable - code using the runmanager API directly may need to change.\nWe could do a major version bump to indicate this.", "type": "commit"}, {"rendered": {"message": {"raw": "Added tag 2.3.0 for changeset adfed525e9e2", "markup": "markdown", "html": "<p>Added tag 2.3.0 for changeset <a href=\"#!/cavitylab/runmanager/commits/adfed525e9e2\" rel=\"nofollow\" class=\"ap-connect-link\">adfed525e9e2</a></p>", "type": "rendered"}}, "hash": "56dc84f4c7507ff91bd61131874e94baa8176fe4", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/56dc84f4c7507ff91bd61131874e94baa8176fe4.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/56dc84f4c7507ff91bd61131874e94baa8176fe4/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/56dc84f4c7507ff91bd61131874e94baa8176fe4"}, "html": {"href": "#!/cavitylab/runmanager/commits/56dc84f4c7507ff91bd61131874e94baa8176fe4"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/56dc84f4c7507ff91bd61131874e94baa8176fe4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/56dc84f4c7507ff91bd61131874e94baa8176fe4/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/56dc84f4c7507ff91bd61131874e94baa8176fe4/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added tag 2.3.0 for changeset adfed525e9e2", "markup": "markdown", "html": "<p>Added tag 2.3.0 for changeset <a href=\"#!/cavitylab/runmanager/commits/adfed525e9e2\" rel=\"nofollow\" class=\"ap-connect-link\">adfed525e9e2</a></p>", "type": "rendered"}, "parents": [{"hash": "adfed525e9e2b91f3032c97837ac02dd05d17edb", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/adfed525e9e2b91f3032c97837ac02dd05d17edb.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/adfed525e9e2b91f3032c97837ac02dd05d17edb"}}}], "date": "2019-04-07T04:52:09+00:00", "message": "Added tag 2.3.0 for changeset adfed525e9e2", "type": "commit"}, {"rendered": {"message": {"raw": "Bumped minor version for release", "markup": "markdown", "html": "<p>Bumped minor version for release</p>", "type": "rendered"}}, "hash": "adfed525e9e2b91f3032c97837ac02dd05d17edb", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/adfed525e9e2b91f3032c97837ac02dd05d17edb.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/adfed525e9e2b91f3032c97837ac02dd05d17edb/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/adfed525e9e2b91f3032c97837ac02dd05d17edb"}, "html": {"href": "#!/cavitylab/runmanager/commits/adfed525e9e2b91f3032c97837ac02dd05d17edb"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/adfed525e9e2b91f3032c97837ac02dd05d17edb"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/adfed525e9e2b91f3032c97837ac02dd05d17edb/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/adfed525e9e2b91f3032c97837ac02dd05d17edb/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Bumped minor version for release", "markup": "markdown", "html": "<p>Bumped minor version for release</p>", "type": "rendered"}, "parents": [{"hash": "a830a0ae5e4e1016a67b1d3a032da6b3e4d92f22", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/a830a0ae5e4e1016a67b1d3a032da6b3e4d92f22.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/a830a0ae5e4e1016a67b1d3a032da6b3e4d92f22"}}}], "date": "2019-04-07T04:51:59+00:00", "message": "Bumped minor version for release", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in bugfix (pull request #33)\n\nRemove use of NetworkOnlyLock", "markup": "markdown", "html": "<p>Merged in bugfix (pull request #33)</p>\n<p>Remove use of NetworkOnlyLock</p>", "type": "rendered"}}, "hash": "a830a0ae5e4e1016a67b1d3a032da6b3e4d92f22", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/a830a0ae5e4e1016a67b1d3a032da6b3e4d92f22.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/a830a0ae5e4e1016a67b1d3a032da6b3e4d92f22/comments_page=1.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/a830a0ae5e4e1016a67b1d3a032da6b3e4d92f22"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/a830a0ae5e4e1016a67b1d3a032da6b3e4d92f22"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/a830a0ae5e4e1016a67b1d3a032da6b3e4d92f22/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/a830a0ae5e4e1016a67b1d3a032da6b3e4d92f22/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in bugfix (pull request #33)\n\nRemove use of NetworkOnlyLock", "markup": "markdown", "html": "<p>Merged in bugfix (pull request #33)</p>\n<p>Remove use of NetworkOnlyLock</p>", "type": "rendered"}, "parents": [{"hash": "0560265254083814421b08fbfcbcde4984c9d846", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/0560265254083814421b08fbfcbcde4984c9d846.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/0560265254083814421b08fbfcbcde4984c9d846"}}}, {"hash": "e52b7985a998680ee20bc09e5c6d455b48eae58e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/e52b7985a998680ee20bc09e5c6d455b48eae58e.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/e52b7985a998680ee20bc09e5c6d455b48eae58e"}}}], "date": "2019-04-01T15:45:49+00:00", "message": "Merged in bugfix (pull request #33)\n\nRemove use of NetworkOnlyLock", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch bugfix", "markup": "markdown", "html": "<p>Close branch bugfix</p>", "type": "rendered"}}, "hash": "e52b7985a998680ee20bc09e5c6d455b48eae58e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/e52b7985a998680ee20bc09e5c6d455b48eae58e.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/e52b7985a998680ee20bc09e5c6d455b48eae58e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/e52b7985a998680ee20bc09e5c6d455b48eae58e"}, "html": {"href": "#!/cavitylab/runmanager/commits/e52b7985a998680ee20bc09e5c6d455b48eae58e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/e52b7985a998680ee20bc09e5c6d455b48eae58e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/e52b7985a998680ee20bc09e5c6d455b48eae58e/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/e52b7985a998680ee20bc09e5c6d455b48eae58e/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch bugfix", "markup": "markdown", "html": "<p>Close branch bugfix</p>", "type": "rendered"}, "parents": [{"hash": "f7aa92be46188b094d611975108df53fc6d674c7", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/f7aa92be46188b094d611975108df53fc6d674c7.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/f7aa92be46188b094d611975108df53fc6d674c7"}}}], "date": "2019-04-01T15:45:49+00:00", "message": "Close branch bugfix", "type": "commit"}, {"rendered": {"message": {"raw": "Remove use of NetworkOnlyLock, which no longer exists in h5_lock.\nThis was an accidental break in backward compatibility.\n\nNetworkOnlyLocks worked by acquiring a zlock lock once before many openings\nand closings og a h5 file, and those openings and closings used regular in-process\nthreading.RLocks. This reduced network traffic.\n\nThe complexity of reimplementing NetworkOnlyLocks is not worth the slight\nperformance improvement in my opinion. It would be easier to refactor how\nrunmanager opens globals to pass around an already opened file instead. It is\nalways possible to refactor code in this way, so that should be the preferred\napproach if we encounter performance issues with repeated file openings in\nthe future.", "markup": "markdown", "html": "<p>Remove use of NetworkOnlyLock, which no longer exists in h5_lock.<br />\nThis was an accidental break in backward compatibility.</p>\n<p>NetworkOnlyLocks worked by acquiring a zlock lock once before many openings<br />\nand closings og a h5 file, and those openings and closings used regular in-process<br />\nthreading.RLocks. This reduced network traffic.</p>\n<p>The complexity of reimplementing NetworkOnlyLocks is not worth the slight<br />\nperformance improvement in my opinion. It would be easier to refactor how<br />\nrunmanager opens globals to pass around an already opened file instead. It is<br />\nalways possible to refactor code in this way, so that should be the preferred<br />\napproach if we encounter performance issues with repeated file openings in<br />\nthe future.</p>", "type": "rendered"}}, "hash": "f7aa92be46188b094d611975108df53fc6d674c7", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/f7aa92be46188b094d611975108df53fc6d674c7.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/f7aa92be46188b094d611975108df53fc6d674c7/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/f7aa92be46188b094d611975108df53fc6d674c7"}, "html": {"href": "#!/cavitylab/runmanager/commits/f7aa92be46188b094d611975108df53fc6d674c7"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/f7aa92be46188b094d611975108df53fc6d674c7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/f7aa92be46188b094d611975108df53fc6d674c7/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/f7aa92be46188b094d611975108df53fc6d674c7/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Remove use of NetworkOnlyLock, which no longer exists in h5_lock.\nThis was an accidental break in backward compatibility.\n\nNetworkOnlyLocks worked by acquiring a zlock lock once before many openings\nand closings og a h5 file, and those openings and closings used regular in-process\nthreading.RLocks. This reduced network traffic.\n\nThe complexity of reimplementing NetworkOnlyLocks is not worth the slight\nperformance improvement in my opinion. It would be easier to refactor how\nrunmanager opens globals to pass around an already opened file instead. It is\nalways possible to refactor code in this way, so that should be the preferred\napproach if we encounter performance issues with repeated file openings in\nthe future.", "markup": "markdown", "html": "<p>Remove use of NetworkOnlyLock, which no longer exists in h5_lock.<br />\nThis was an accidental break in backward compatibility.</p>\n<p>NetworkOnlyLocks worked by acquiring a zlock lock once before many openings<br />\nand closings og a h5 file, and those openings and closings used regular in-process<br />\nthreading.RLocks. This reduced network traffic.</p>\n<p>The complexity of reimplementing NetworkOnlyLocks is not worth the slight<br />\nperformance improvement in my opinion. It would be easier to refactor how<br />\nrunmanager opens globals to pass around an already opened file instead. It is<br />\nalways possible to refactor code in this way, so that should be the preferred<br />\napproach if we encounter performance issues with repeated file openings in<br />\nthe future.</p>", "type": "rendered"}, "parents": [{"hash": "0560265254083814421b08fbfcbcde4984c9d846", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/0560265254083814421b08fbfcbcde4984c9d846.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/0560265254083814421b08fbfcbcde4984c9d846"}}}], "date": "2019-03-28T21:45:54+00:00", "message": "Remove use of NetworkOnlyLock, which no longer exists in h5_lock.\nThis was an accidental break in backward compatibility.\n\nNetworkOnlyLocks worked by acquiring a zlock lock once before many openings\nand closings og a h5 file, and those openings and closings used regular in-process\nthreading.RLocks. This reduced network traffic.\n\nThe complexity of reimplementing NetworkOnlyLocks is not worth the slight\nperformance improvement in my opinion. It would be easier to refactor how\nrunmanager opens globals to pass around an already opened file instead. It is\nalways possible to refactor code in this way, so that should be the preferred\napproach if we encounter performance issues with repeated file openings in\nthe future.", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in bugfix2 (pull request #32)\n\nFix #64\n\nApproved-by: Russell Anderson", "markup": "markdown", "html": "<p>Merged in bugfix2 (pull request #32)</p>\n<p>Fix #64</p>\n<p>Approved-by: Russell Anderson</p>", "type": "rendered"}}, "hash": "0560265254083814421b08fbfcbcde4984c9d846", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/0560265254083814421b08fbfcbcde4984c9d846.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/0560265254083814421b08fbfcbcde4984c9d846/comments_page=1.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/0560265254083814421b08fbfcbcde4984c9d846"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/0560265254083814421b08fbfcbcde4984c9d846"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/0560265254083814421b08fbfcbcde4984c9d846/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/0560265254083814421b08fbfcbcde4984c9d846/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in bugfix2 (pull request #32)\n\nFix #64\n\nApproved-by: Russell Anderson", "markup": "markdown", "html": "<p>Merged in bugfix2 (pull request #32)</p>\n<p>Fix #64</p>\n<p>Approved-by: Russell Anderson</p>", "type": "rendered"}, "parents": [{"hash": "7efcbe795931968e1c50ec6994909af80cf60873", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/7efcbe795931968e1c50ec6994909af80cf60873.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/7efcbe795931968e1c50ec6994909af80cf60873"}}}, {"hash": "3552d65d4716cb0a0b6f90eebe9212314c1727c2", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/3552d65d4716cb0a0b6f90eebe9212314c1727c2.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/3552d65d4716cb0a0b6f90eebe9212314c1727c2"}}}], "date": "2019-03-27T23:40:16+00:00", "message": "Merged in bugfix2 (pull request #32)\n\nFix #64\n\nApproved-by: Russell Anderson", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch bugfix2", "markup": "markdown", "html": "<p>Close branch bugfix2</p>", "type": "rendered"}}, "hash": "3552d65d4716cb0a0b6f90eebe9212314c1727c2", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/3552d65d4716cb0a0b6f90eebe9212314c1727c2.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/3552d65d4716cb0a0b6f90eebe9212314c1727c2/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/3552d65d4716cb0a0b6f90eebe9212314c1727c2"}, "html": {"href": "#!/cavitylab/runmanager/commits/3552d65d4716cb0a0b6f90eebe9212314c1727c2"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/3552d65d4716cb0a0b6f90eebe9212314c1727c2"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/3552d65d4716cb0a0b6f90eebe9212314c1727c2/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/3552d65d4716cb0a0b6f90eebe9212314c1727c2/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch bugfix2", "markup": "markdown", "html": "<p>Close branch bugfix2</p>", "type": "rendered"}, "parents": [{"hash": "3ce904450f663a2ee88a2821ac35a14849224ceb", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/3ce904450f663a2ee88a2821ac35a14849224ceb.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/3ce904450f663a2ee88a2821ac35a14849224ceb"}}}], "date": "2019-03-27T23:40:16+00:00", "message": "Close branch bugfix2", "type": "commit"}, {"rendered": {"message": {"raw": "When expanding globals, don't make axes for values that are exceptions.\n\nShould fix issue #64", "markup": "markdown", "html": "<p>When expanding globals, don't make axes for values that are exceptions.</p>\n<p>Should fix issue #64</p>", "type": "rendered"}}, "hash": "3ce904450f663a2ee88a2821ac35a14849224ceb", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/3ce904450f663a2ee88a2821ac35a14849224ceb.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/3ce904450f663a2ee88a2821ac35a14849224ceb/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/3ce904450f663a2ee88a2821ac35a14849224ceb"}, "html": {"href": "#!/cavitylab/runmanager/commits/3ce904450f663a2ee88a2821ac35a14849224ceb"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/3ce904450f663a2ee88a2821ac35a14849224ceb"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/3ce904450f663a2ee88a2821ac35a14849224ceb/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/3ce904450f663a2ee88a2821ac35a14849224ceb/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "When expanding globals, don't make axes for values that are exceptions.\n\nShould fix issue #64", "markup": "markdown", "html": "<p>When expanding globals, don't make axes for values that are exceptions.</p>\n<p>Should fix issue #64</p>", "type": "rendered"}, "parents": [{"hash": "cf1091dc96c34b17f551af09167ac4df8a2f8ee9", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/cf1091dc96c34b17f551af09167ac4df8a2f8ee9.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/cf1091dc96c34b17f551af09167ac4df8a2f8ee9"}}}], "date": "2019-03-20T20:23:47+00:00", "message": "When expanding globals, don't make axes for values that are exceptions.\n\nShould fix issue #64", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in bugfix (pull request #31)\n\nFix issue #65 - cannot create globals in latest Python releases.", "markup": "markdown", "html": "<p>Merged in bugfix (pull request #31)</p>\n<p>Fix issue #65 - cannot create globals in latest Python releases.</p>", "type": "rendered"}}, "hash": "7efcbe795931968e1c50ec6994909af80cf60873", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/7efcbe795931968e1c50ec6994909af80cf60873.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/7efcbe795931968e1c50ec6994909af80cf60873/comments_page=1.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/7efcbe795931968e1c50ec6994909af80cf60873"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/7efcbe795931968e1c50ec6994909af80cf60873"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/7efcbe795931968e1c50ec6994909af80cf60873/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/7efcbe795931968e1c50ec6994909af80cf60873/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in bugfix (pull request #31)\n\nFix issue #65 - cannot create globals in latest Python releases.", "markup": "markdown", "html": "<p>Merged in bugfix (pull request #31)</p>\n<p>Fix issue #65 - cannot create globals in latest Python releases.</p>", "type": "rendered"}, "parents": [{"hash": "cf1091dc96c34b17f551af09167ac4df8a2f8ee9", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/cf1091dc96c34b17f551af09167ac4df8a2f8ee9.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/cf1091dc96c34b17f551af09167ac4df8a2f8ee9"}}}, {"hash": "3e68a02f3a2c675b760b8b25a6c5af14885124d8", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/3e68a02f3a2c675b760b8b25a6c5af14885124d8.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/3e68a02f3a2c675b760b8b25a6c5af14885124d8"}}}], "date": "2019-03-25T14:41:17+00:00", "message": "Merged in bugfix (pull request #31)\n\nFix issue #65 - cannot create globals in latest Python releases.", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch bugfix", "markup": "markdown", "html": "<p>Close branch bugfix</p>", "type": "rendered"}}, "hash": "3e68a02f3a2c675b760b8b25a6c5af14885124d8", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/3e68a02f3a2c675b760b8b25a6c5af14885124d8.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/3e68a02f3a2c675b760b8b25a6c5af14885124d8/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/3e68a02f3a2c675b760b8b25a6c5af14885124d8"}, "html": {"href": "#!/cavitylab/runmanager/commits/3e68a02f3a2c675b760b8b25a6c5af14885124d8"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/3e68a02f3a2c675b760b8b25a6c5af14885124d8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/3e68a02f3a2c675b760b8b25a6c5af14885124d8/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/3e68a02f3a2c675b760b8b25a6c5af14885124d8/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch bugfix", "markup": "markdown", "html": "<p>Close branch bugfix</p>", "type": "rendered"}, "parents": [{"hash": "ecbc226c7a617dc9fa9c6aa623fed4f1fb180956", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/ecbc226c7a617dc9fa9c6aa623fed4f1fb180956.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/ecbc226c7a617dc9fa9c6aa623fed4f1fb180956"}}}], "date": "2019-03-25T14:41:17+00:00", "message": "Close branch bugfix", "type": "commit"}, {"rendered": {"message": {"raw": "Fix issue #65 - cannot create globals in latest Python releases.\n\nThe issue was caused by a change in the behaviour of the tokenize module\nwhen the source being tokenized does not end in a newline character.\n\nSee https://bugs.python.org/issue33899", "markup": "markdown", "html": "<p>Fix issue #65 - cannot create globals in latest Python releases.</p>\n<p>The issue was caused by a change in the behaviour of the tokenize module<br />\nwhen the source being tokenized does not end in a newline character.</p>\n<p>See <a href=\"https://bugs.python.org/issue33899\" rel=\"nofollow\" class=\"ap-connect-link\">https://bugs.python.org/issue33899</a></p>", "type": "rendered"}}, "hash": "ecbc226c7a617dc9fa9c6aa623fed4f1fb180956", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/ecbc226c7a617dc9fa9c6aa623fed4f1fb180956.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/ecbc226c7a617dc9fa9c6aa623fed4f1fb180956/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/ecbc226c7a617dc9fa9c6aa623fed4f1fb180956"}, "html": {"href": "#!/cavitylab/runmanager/commits/ecbc226c7a617dc9fa9c6aa623fed4f1fb180956"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/ecbc226c7a617dc9fa9c6aa623fed4f1fb180956"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/ecbc226c7a617dc9fa9c6aa623fed4f1fb180956/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/ecbc226c7a617dc9fa9c6aa623fed4f1fb180956/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Fix issue #65 - cannot create globals in latest Python releases.\n\nThe issue was caused by a change in the behaviour of the tokenize module\nwhen the source being tokenized does not end in a newline character.\n\nSee https://bugs.python.org/issue33899", "markup": "markdown", "html": "<p>Fix issue #65 - cannot create globals in latest Python releases.</p>\n<p>The issue was caused by a change in the behaviour of the tokenize module<br />\nwhen the source being tokenized does not end in a newline character.</p>\n<p>See <a href=\"https://bugs.python.org/issue33899\" rel=\"nofollow\" class=\"ap-connect-link\">https://bugs.python.org/issue33899</a></p>", "type": "rendered"}, "parents": [{"hash": "cf1091dc96c34b17f551af09167ac4df8a2f8ee9", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/cf1091dc96c34b17f551af09167ac4df8a2f8ee9.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/cf1091dc96c34b17f551af09167ac4df8a2f8ee9"}}}], "date": "2019-03-20T19:01:49+00:00", "message": "Fix issue #65 - cannot create globals in latest Python releases.\n\nThe issue was caused by a change in the behaviour of the tokenize module\nwhen the source being tokenized does not end in a newline character.\n\nSee https://bugs.python.org/issue33899", "type": "commit"}, {"rendered": {"message": {"raw": "Fix regression: restore missing import zprocess.raise_exception_in_thread.\n\nFixes #63", "markup": "markdown", "html": "<p>Fix regression: restore missing import zprocess.raise_exception_in_thread.</p>\n<p>Fixes #63</p>", "type": "rendered"}}, "hash": "cf1091dc96c34b17f551af09167ac4df8a2f8ee9", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/cf1091dc96c34b17f551af09167ac4df8a2f8ee9.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/cf1091dc96c34b17f551af09167ac4df8a2f8ee9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/cf1091dc96c34b17f551af09167ac4df8a2f8ee9"}, "html": {"href": "#!/cavitylab/runmanager/commits/cf1091dc96c34b17f551af09167ac4df8a2f8ee9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/cf1091dc96c34b17f551af09167ac4df8a2f8ee9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/cf1091dc96c34b17f551af09167ac4df8a2f8ee9/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/cf1091dc96c34b17f551af09167ac4df8a2f8ee9/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Fix regression: restore missing import zprocess.raise_exception_in_thread.\n\nFixes #63", "markup": "markdown", "html": "<p>Fix regression: restore missing import zprocess.raise_exception_in_thread.</p>\n<p>Fixes #63</p>", "type": "rendered"}, "parents": [{"hash": "8c5efc6565358f733315a4b4bb681e3010bba653", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/8c5efc6565358f733315a4b4bb681e3010bba653.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/8c5efc6565358f733315a4b4bb681e3010bba653"}}}], "date": "2019-03-20T17:06:49+00:00", "message": "Fix regression: restore missing import zprocess.raise_exception_in_thread.\n\nFixes #63", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in zprocess_changes (pull request #28)\n\nUpdate to use new zprocess functionality", "markup": "markdown", "html": "<p>Merged in zprocess_changes (pull request #28)</p>\n<p>Update to use new zprocess functionality</p>", "type": "rendered"}}, "hash": "8c5efc6565358f733315a4b4bb681e3010bba653", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/8c5efc6565358f733315a4b4bb681e3010bba653.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/8c5efc6565358f733315a4b4bb681e3010bba653/comments_page=1.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/8c5efc6565358f733315a4b4bb681e3010bba653"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/8c5efc6565358f733315a4b4bb681e3010bba653"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/8c5efc6565358f733315a4b4bb681e3010bba653/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/8c5efc6565358f733315a4b4bb681e3010bba653/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in zprocess_changes (pull request #28)\n\nUpdate to use new zprocess functionality", "markup": "markdown", "html": "<p>Merged in zprocess_changes (pull request #28)</p>\n<p>Update to use new zprocess functionality</p>", "type": "rendered"}, "parents": [{"hash": "e4e664f44768b22b39295c15efa24d3f6ec4c699", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/e4e664f44768b22b39295c15efa24d3f6ec4c699.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/e4e664f44768b22b39295c15efa24d3f6ec4c699"}}}, {"hash": "96f94c34f6ecd613eb67ec334f0c6896355f160c", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/96f94c34f6ecd613eb67ec334f0c6896355f160c.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/96f94c34f6ecd613eb67ec334f0c6896355f160c"}}}], "date": "2019-02-22T16:00:06+00:00", "message": "Merged in zprocess_changes (pull request #28)\n\nUpdate to use new zprocess functionality", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch zprocess_changes", "markup": "markdown", "html": "<p>Close branch zprocess_changes</p>", "type": "rendered"}}, "hash": "96f94c34f6ecd613eb67ec334f0c6896355f160c", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/96f94c34f6ecd613eb67ec334f0c6896355f160c.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/96f94c34f6ecd613eb67ec334f0c6896355f160c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/96f94c34f6ecd613eb67ec334f0c6896355f160c"}, "html": {"href": "#!/cavitylab/runmanager/commits/96f94c34f6ecd613eb67ec334f0c6896355f160c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/96f94c34f6ecd613eb67ec334f0c6896355f160c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/96f94c34f6ecd613eb67ec334f0c6896355f160c/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/96f94c34f6ecd613eb67ec334f0c6896355f160c/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch zprocess_changes", "markup": "markdown", "html": "<p>Close branch zprocess_changes</p>", "type": "rendered"}, "parents": [{"hash": "df0dee77c3ea6d05b73ca7b0888cfe97c1fb4a0d", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/df0dee77c3ea6d05b73ca7b0888cfe97c1fb4a0d.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/df0dee77c3ea6d05b73ca7b0888cfe97c1fb4a0d"}}}], "date": "2019-02-22T16:00:06+00:00", "message": "Close branch zprocess_changes", "type": "commit"}, {"rendered": {"message": {"raw": "Update to use new zprocess functionality as wrapped by labscipt_utils.ls_zprocess.", "markup": "markdown", "html": "<p>Update to use new zprocess functionality as wrapped by labscipt_utils.ls_zprocess.</p>", "type": "rendered"}}, "hash": "df0dee77c3ea6d05b73ca7b0888cfe97c1fb4a0d", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/df0dee77c3ea6d05b73ca7b0888cfe97c1fb4a0d.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/df0dee77c3ea6d05b73ca7b0888cfe97c1fb4a0d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/df0dee77c3ea6d05b73ca7b0888cfe97c1fb4a0d"}, "html": {"href": "#!/cavitylab/runmanager/commits/df0dee77c3ea6d05b73ca7b0888cfe97c1fb4a0d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/df0dee77c3ea6d05b73ca7b0888cfe97c1fb4a0d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/df0dee77c3ea6d05b73ca7b0888cfe97c1fb4a0d/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/df0dee77c3ea6d05b73ca7b0888cfe97c1fb4a0d/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Update to use new zprocess functionality as wrapped by labscipt_utils.ls_zprocess.", "markup": "markdown", "html": "<p>Update to use new zprocess functionality as wrapped by labscipt_utils.ls_zprocess.</p>", "type": "rendered"}, "parents": [{"hash": "e4e664f44768b22b39295c15efa24d3f6ec4c699", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/e4e664f44768b22b39295c15efa24d3f6ec4c699.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/e4e664f44768b22b39295c15efa24d3f6ec4c699"}}}], "date": "2019-02-07T04:16:30+00:00", "message": "Update to use new zprocess functionality as wrapped by labscipt_utils.ls_zprocess.", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in cbillington/runmanager/splash (pull request #27)\n\nSplash screen", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/runmanager\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/runmanager</a>/splash (pull request #27)</p>\n<p>Splash screen</p>", "type": "rendered"}}, "hash": "e4e664f44768b22b39295c15efa24d3f6ec4c699", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/e4e664f44768b22b39295c15efa24d3f6ec4c699.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/e4e664f44768b22b39295c15efa24d3f6ec4c699/comments_page=1.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/e4e664f44768b22b39295c15efa24d3f6ec4c699"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/e4e664f44768b22b39295c15efa24d3f6ec4c699"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/e4e664f44768b22b39295c15efa24d3f6ec4c699/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/e4e664f44768b22b39295c15efa24d3f6ec4c699/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in cbillington/runmanager/splash (pull request #27)\n\nSplash screen", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/runmanager\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/runmanager</a>/splash (pull request #27)</p>\n<p>Splash screen</p>", "type": "rendered"}, "parents": [{"hash": "222f5553549de3f5e801ca6226186230a5184fee", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/222f5553549de3f5e801ca6226186230a5184fee.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/222f5553549de3f5e801ca6226186230a5184fee"}}}, {"hash": "84518c87e05e88010cb73cecb6946e91e14d6a99", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/84518c87e05e88010cb73cecb6946e91e14d6a99.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/84518c87e05e88010cb73cecb6946e91e14d6a99"}}}], "date": "2019-02-04T20:01:54+00:00", "message": "Merged in cbillington/runmanager/splash (pull request #27)\n\nSplash screen", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch splash", "markup": "markdown", "html": "<p>Close branch splash</p>", "type": "rendered"}}, "hash": "84518c87e05e88010cb73cecb6946e91e14d6a99", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/84518c87e05e88010cb73cecb6946e91e14d6a99.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/84518c87e05e88010cb73cecb6946e91e14d6a99/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/84518c87e05e88010cb73cecb6946e91e14d6a99"}, "html": {"href": "#!/cavitylab/runmanager/commits/84518c87e05e88010cb73cecb6946e91e14d6a99"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/84518c87e05e88010cb73cecb6946e91e14d6a99"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/84518c87e05e88010cb73cecb6946e91e14d6a99/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/84518c87e05e88010cb73cecb6946e91e14d6a99/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch splash", "markup": "markdown", "html": "<p>Close branch splash</p>", "type": "rendered"}, "parents": [{"hash": "86b23c767ceaa6b73e067a6aedceb5a2c13c65fc", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/86b23c767ceaa6b73e067a6aedceb5a2c13c65fc.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/86b23c767ceaa6b73e067a6aedceb5a2c13c65fc"}}}], "date": "2019-02-04T20:01:54+00:00", "message": "Close branch splash", "type": "commit"}, {"rendered": {"message": {"raw": "Use svg icon in splash screen", "markup": "markdown", "html": "<p>Use svg icon in splash screen</p>", "type": "rendered"}}, "hash": "86b23c767ceaa6b73e067a6aedceb5a2c13c65fc", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/86b23c767ceaa6b73e067a6aedceb5a2c13c65fc.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/86b23c767ceaa6b73e067a6aedceb5a2c13c65fc/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/86b23c767ceaa6b73e067a6aedceb5a2c13c65fc"}, "html": {"href": "#!/cavitylab/runmanager/commits/86b23c767ceaa6b73e067a6aedceb5a2c13c65fc"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/86b23c767ceaa6b73e067a6aedceb5a2c13c65fc"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/86b23c767ceaa6b73e067a6aedceb5a2c13c65fc/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/86b23c767ceaa6b73e067a6aedceb5a2c13c65fc/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Use svg icon in splash screen", "markup": "markdown", "html": "<p>Use svg icon in splash screen</p>", "type": "rendered"}, "parents": [{"hash": "a30beaf919150278f3eb8e896c0e58be3706b42e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/a30beaf919150278f3eb8e896c0e58be3706b42e.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/a30beaf919150278f3eb8e896c0e58be3706b42e"}}}], "date": "2019-01-31T00:14:23+00:00", "message": "Use svg icon in splash screen", "type": "commit"}, {"rendered": {"message": {"raw": "Add messages to splash screen", "markup": "markdown", "html": "<p>Add messages to splash screen</p>", "type": "rendered"}}, "hash": "a30beaf919150278f3eb8e896c0e58be3706b42e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/a30beaf919150278f3eb8e896c0e58be3706b42e.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/a30beaf919150278f3eb8e896c0e58be3706b42e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/a30beaf919150278f3eb8e896c0e58be3706b42e"}, "html": {"href": "#!/cavitylab/runmanager/commits/a30beaf919150278f3eb8e896c0e58be3706b42e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/a30beaf919150278f3eb8e896c0e58be3706b42e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/a30beaf919150278f3eb8e896c0e58be3706b42e/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/a30beaf919150278f3eb8e896c0e58be3706b42e/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Add messages to splash screen", "markup": "markdown", "html": "<p>Add messages to splash screen</p>", "type": "rendered"}, "parents": [{"hash": "4aa6d921629135db0792a067f33041d0188ee0b9", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/4aa6d921629135db0792a067f33041d0188ee0b9.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/4aa6d921629135db0792a067f33041d0188ee0b9"}}}], "date": "2019-01-29T03:24:41+00:00", "message": "Add messages to splash screen", "type": "commit"}, {"rendered": {"message": {"raw": "Use new labscript_utils submodule to display a splash screen during startup.", "markup": "markdown", "html": "<p>Use new labscript_utils submodule to display a splash screen during startup.</p>", "type": "rendered"}}, "hash": "4aa6d921629135db0792a067f33041d0188ee0b9", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/4aa6d921629135db0792a067f33041d0188ee0b9.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/4aa6d921629135db0792a067f33041d0188ee0b9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/4aa6d921629135db0792a067f33041d0188ee0b9"}, "html": {"href": "#!/cavitylab/runmanager/commits/4aa6d921629135db0792a067f33041d0188ee0b9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/4aa6d921629135db0792a067f33041d0188ee0b9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/4aa6d921629135db0792a067f33041d0188ee0b9/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/4aa6d921629135db0792a067f33041d0188ee0b9/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Use new labscript_utils submodule to display a splash screen during startup.", "markup": "markdown", "html": "<p>Use new labscript_utils submodule to display a splash screen during startup.</p>", "type": "rendered"}, "parents": [{"hash": "222f5553549de3f5e801ca6226186230a5184fee", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/222f5553549de3f5e801ca6226186230a5184fee.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/222f5553549de3f5e801ca6226186230a5184fee"}}}], "date": "2019-01-29T00:36:20+00:00", "message": "Use new labscript_utils submodule to display a splash screen during startup.", "type": "commit"}, {"rendered": {"message": {"raw": "Added tag 2.2.0 for changeset 52df25d430c5", "markup": "markdown", "html": "<p>Added tag 2.2.0 for changeset <a href=\"#!/cavitylab/runmanager/commits/52df25d430c5\" rel=\"nofollow\" class=\"ap-connect-link\">52df25d430c5</a></p>", "type": "rendered"}}, "hash": "222f5553549de3f5e801ca6226186230a5184fee", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/222f5553549de3f5e801ca6226186230a5184fee.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/222f5553549de3f5e801ca6226186230a5184fee/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/222f5553549de3f5e801ca6226186230a5184fee"}, "html": {"href": "#!/cavitylab/runmanager/commits/222f5553549de3f5e801ca6226186230a5184fee"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/222f5553549de3f5e801ca6226186230a5184fee"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/222f5553549de3f5e801ca6226186230a5184fee/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/222f5553549de3f5e801ca6226186230a5184fee/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Added tag 2.2.0 for changeset 52df25d430c5", "markup": "markdown", "html": "<p>Added tag 2.2.0 for changeset <a href=\"#!/cavitylab/runmanager/commits/52df25d430c5\" rel=\"nofollow\" class=\"ap-connect-link\">52df25d430c5</a></p>", "type": "rendered"}, "parents": [{"hash": "52df25d430c5a7d1f7522762ba17a9576a444b5b", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/52df25d430c5a7d1f7522762ba17a9576a444b5b.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/52df25d430c5a7d1f7522762ba17a9576a444b5b"}}}], "date": "2019-01-27T16:32:32+00:00", "message": "Added tag 2.2.0 for changeset 52df25d430c5", "type": "commit"}, {"rendered": {"message": {"raw": "Minor version bump for Python 3 compatible release", "markup": "markdown", "html": "<p>Minor version bump for Python 3 compatible release</p>", "type": "rendered"}}, "hash": "52df25d430c5a7d1f7522762ba17a9576a444b5b", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/52df25d430c5a7d1f7522762ba17a9576a444b5b.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/52df25d430c5a7d1f7522762ba17a9576a444b5b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/52df25d430c5a7d1f7522762ba17a9576a444b5b"}, "html": {"href": "#!/cavitylab/runmanager/commits/52df25d430c5a7d1f7522762ba17a9576a444b5b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/52df25d430c5a7d1f7522762ba17a9576a444b5b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/52df25d430c5a7d1f7522762ba17a9576a444b5b/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/52df25d430c5a7d1f7522762ba17a9576a444b5b/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Minor version bump for Python 3 compatible release", "markup": "markdown", "html": "<p>Minor version bump for Python 3 compatible release</p>", "type": "rendered"}, "parents": [{"hash": "51923e1afeb3f4b8878aa25f554dfb8ec8f4e1f1", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/51923e1afeb3f4b8878aa25f554dfb8ec8f4e1f1.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/51923e1afeb3f4b8878aa25f554dfb8ec8f4e1f1"}}}], "date": "2019-01-27T16:32:25+00:00", "message": "Minor version bump for Python 3 compatible release", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in cbillington/runmanager/future_globals (pull request #26)\n\nTurn on `__future__` imports in the globals evaluation context.", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/runmanager\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/runmanager</a>/future_globals (pull request #26)</p>\n<p>Turn on <code>__future__</code> imports in the globals evaluation context.</p>", "type": "rendered"}}, "hash": "51923e1afeb3f4b8878aa25f554dfb8ec8f4e1f1", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/51923e1afeb3f4b8878aa25f554dfb8ec8f4e1f1.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/51923e1afeb3f4b8878aa25f554dfb8ec8f4e1f1/comments_page=1.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/51923e1afeb3f4b8878aa25f554dfb8ec8f4e1f1"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/51923e1afeb3f4b8878aa25f554dfb8ec8f4e1f1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/51923e1afeb3f4b8878aa25f554dfb8ec8f4e1f1/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/51923e1afeb3f4b8878aa25f554dfb8ec8f4e1f1/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in cbillington/runmanager/future_globals (pull request #26)\n\nTurn on `__future__` imports in the globals evaluation context.", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/runmanager\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/runmanager</a>/future_globals (pull request #26)</p>\n<p>Turn on <code>__future__</code> imports in the globals evaluation context.</p>", "type": "rendered"}, "parents": [{"hash": "ade64c333f8bec6d1ebe38173f8ebd894e99e6de", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/ade64c333f8bec6d1ebe38173f8ebd894e99e6de.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/ade64c333f8bec6d1ebe38173f8ebd894e99e6de"}}}, {"hash": "27cd15014402d49ea5a6df559502a8a4b7dc902e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/27cd15014402d49ea5a6df559502a8a4b7dc902e.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/27cd15014402d49ea5a6df559502a8a4b7dc902e"}}}], "date": "2018-11-05T18:30:24+00:00", "message": "Merged in cbillington/runmanager/future_globals (pull request #26)\n\nTurn on `__future__` imports in the globals evaluation context.", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch future_globals", "markup": "markdown", "html": "<p>Close branch future_globals</p>", "type": "rendered"}}, "hash": "27cd15014402d49ea5a6df559502a8a4b7dc902e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/27cd15014402d49ea5a6df559502a8a4b7dc902e.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/27cd15014402d49ea5a6df559502a8a4b7dc902e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/27cd15014402d49ea5a6df559502a8a4b7dc902e"}, "html": {"href": "#!/cavitylab/runmanager/commits/27cd15014402d49ea5a6df559502a8a4b7dc902e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/27cd15014402d49ea5a6df559502a8a4b7dc902e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/27cd15014402d49ea5a6df559502a8a4b7dc902e/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/27cd15014402d49ea5a6df559502a8a4b7dc902e/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch future_globals", "markup": "markdown", "html": "<p>Close branch future_globals</p>", "type": "rendered"}, "parents": [{"hash": "ad11cf1bbb2b53425ea62d26bf0fe2456a8eba27", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/ad11cf1bbb2b53425ea62d26bf0fe2456a8eba27.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/ad11cf1bbb2b53425ea62d26bf0fe2456a8eba27"}}}], "date": "2018-11-05T18:30:24+00:00", "message": "Close branch future_globals", "type": "commit"}, {"rendered": {"message": {"raw": "Turn on `__future__` imports in the globals evaluation context.\nThis means unicode string literals and float division will apply to globals.", "markup": "markdown", "html": "<p>Turn on <code>__future__</code> imports in the globals evaluation context.<br />\nThis means unicode string literals and float division will apply to globals.</p>", "type": "rendered"}}, "hash": "ad11cf1bbb2b53425ea62d26bf0fe2456a8eba27", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/ad11cf1bbb2b53425ea62d26bf0fe2456a8eba27.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/ad11cf1bbb2b53425ea62d26bf0fe2456a8eba27/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/ad11cf1bbb2b53425ea62d26bf0fe2456a8eba27"}, "html": {"href": "#!/cavitylab/runmanager/commits/ad11cf1bbb2b53425ea62d26bf0fe2456a8eba27"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/ad11cf1bbb2b53425ea62d26bf0fe2456a8eba27"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/ad11cf1bbb2b53425ea62d26bf0fe2456a8eba27/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/ad11cf1bbb2b53425ea62d26bf0fe2456a8eba27/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Turn on `__future__` imports in the globals evaluation context.\nThis means unicode string literals and float division will apply to globals.", "markup": "markdown", "html": "<p>Turn on <code>__future__</code> imports in the globals evaluation context.<br />\nThis means unicode string literals and float division will apply to globals.</p>", "type": "rendered"}, "parents": [{"hash": "64befa11a8f4b4f793000e38a1ead4eff268f85e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/64befa11a8f4b4f793000e38a1ead4eff268f85e.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/64befa11a8f4b4f793000e38a1ead4eff268f85e"}}}], "date": "2018-11-01T01:27:03+00:00", "message": "Turn on `__future__` imports in the globals evaluation context.\nThis means unicode string literals and float division will apply to globals.", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in cbillington/runmanager/bugfix (pull request #25)\n\nAdd `__file__` to compilation sandbox", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/runmanager\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/runmanager</a>/bugfix (pull request #25)</p>\n<p>Add <code>__file__</code> to compilation sandbox</p>", "type": "rendered"}}, "hash": "ade64c333f8bec6d1ebe38173f8ebd894e99e6de", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/ade64c333f8bec6d1ebe38173f8ebd894e99e6de.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/ade64c333f8bec6d1ebe38173f8ebd894e99e6de/comments_page=1.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/ade64c333f8bec6d1ebe38173f8ebd894e99e6de"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/ade64c333f8bec6d1ebe38173f8ebd894e99e6de"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/ade64c333f8bec6d1ebe38173f8ebd894e99e6de/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/ade64c333f8bec6d1ebe38173f8ebd894e99e6de/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in cbillington/runmanager/bugfix (pull request #25)\n\nAdd `__file__` to compilation sandbox", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/runmanager\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/runmanager</a>/bugfix (pull request #25)</p>\n<p>Add <code>__file__</code> to compilation sandbox</p>", "type": "rendered"}, "parents": [{"hash": "64befa11a8f4b4f793000e38a1ead4eff268f85e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/64befa11a8f4b4f793000e38a1ead4eff268f85e.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/64befa11a8f4b4f793000e38a1ead4eff268f85e"}}}, {"hash": "13ae84536b0ac3fbf4c529dec8134d8f7e3c355b", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/13ae84536b0ac3fbf4c529dec8134d8f7e3c355b.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/13ae84536b0ac3fbf4c529dec8134d8f7e3c355b"}}}], "date": "2018-10-03T14:44:44+00:00", "message": "Merged in cbillington/runmanager/bugfix (pull request #25)\n\nAdd `__file__` to compilation sandbox", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch bugfix", "markup": "markdown", "html": "<p>Close branch bugfix</p>", "type": "rendered"}}, "hash": "13ae84536b0ac3fbf4c529dec8134d8f7e3c355b", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/13ae84536b0ac3fbf4c529dec8134d8f7e3c355b.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/13ae84536b0ac3fbf4c529dec8134d8f7e3c355b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/13ae84536b0ac3fbf4c529dec8134d8f7e3c355b"}, "html": {"href": "#!/cavitylab/runmanager/commits/13ae84536b0ac3fbf4c529dec8134d8f7e3c355b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/13ae84536b0ac3fbf4c529dec8134d8f7e3c355b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/13ae84536b0ac3fbf4c529dec8134d8f7e3c355b/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/13ae84536b0ac3fbf4c529dec8134d8f7e3c355b/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch bugfix", "markup": "markdown", "html": "<p>Close branch bugfix</p>", "type": "rendered"}, "parents": [{"hash": "9301e164e19af860cad2f6ba891536808005a57e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/9301e164e19af860cad2f6ba891536808005a57e.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/9301e164e19af860cad2f6ba891536808005a57e"}}}], "date": "2018-10-03T14:44:44+00:00", "message": "Close branch bugfix", "type": "commit"}, {"rendered": {"message": {"raw": "Fix bug that prevented correct line numbers in warnings during compilation.", "markup": "markdown", "html": "<p>Fix bug that prevented correct line numbers in warnings during compilation.</p>", "type": "rendered"}}, "hash": "9301e164e19af860cad2f6ba891536808005a57e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/9301e164e19af860cad2f6ba891536808005a57e.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/9301e164e19af860cad2f6ba891536808005a57e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/9301e164e19af860cad2f6ba891536808005a57e"}, "html": {"href": "#!/cavitylab/runmanager/commits/9301e164e19af860cad2f6ba891536808005a57e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/9301e164e19af860cad2f6ba891536808005a57e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/9301e164e19af860cad2f6ba891536808005a57e/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/9301e164e19af860cad2f6ba891536808005a57e/statuses_page=1.json"}}, "author": {"raw": "Chris Billington", "type": "author"}, "summary": {"raw": "Fix bug that prevented correct line numbers in warnings during compilation.", "markup": "markdown", "html": "<p>Fix bug that prevented correct line numbers in warnings during compilation.</p>", "type": "rendered"}, "parents": [{"hash": "64befa11a8f4b4f793000e38a1ead4eff268f85e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/64befa11a8f4b4f793000e38a1ead4eff268f85e.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/64befa11a8f4b4f793000e38a1ead4eff268f85e"}}}], "date": "2018-10-02T21:16:24+00:00", "message": "Fix bug that prevented correct line numbers in warnings during compilation.", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in pstarkey/bugfix (pull request #24)\n\nFixed bug where compilation of single shot (aka connection table recompilation) using a globals file that contained globals of lists/arrays resulted in a confusing error.\n\nApproved-by: Chris Billington <chrisjbillington@gmail.com>", "markup": "markdown", "html": "<p>Merged in pstarkey/bugfix (pull request #24)</p>\n<p>Fixed bug where compilation of single shot (aka connection table recompilation) using a globals file that contained globals of lists/arrays resulted in a confusing error.</p>\n<p>Approved-by: Chris Billington <a href=\"mailto:chrisjbillington@gmail.com\">&#99;&#104;&#114;&#105;&#115;&#106;&#98;&#105;&#108;&#108;&#105;&#110;&#103;&#116;&#111;&#110;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>", "type": "rendered"}}, "hash": "64befa11a8f4b4f793000e38a1ead4eff268f85e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/64befa11a8f4b4f793000e38a1ead4eff268f85e.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/64befa11a8f4b4f793000e38a1ead4eff268f85e/comments_page=1.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/64befa11a8f4b4f793000e38a1ead4eff268f85e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/64befa11a8f4b4f793000e38a1ead4eff268f85e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/64befa11a8f4b4f793000e38a1ead4eff268f85e/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/64befa11a8f4b4f793000e38a1ead4eff268f85e/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in pstarkey/bugfix (pull request #24)\n\nFixed bug where compilation of single shot (aka connection table recompilation) using a globals file that contained globals of lists/arrays resulted in a confusing error.\n\nApproved-by: Chris Billington <chrisjbillington@gmail.com>", "markup": "markdown", "html": "<p>Merged in pstarkey/bugfix (pull request #24)</p>\n<p>Fixed bug where compilation of single shot (aka connection table recompilation) using a globals file that contained globals of lists/arrays resulted in a confusing error.</p>\n<p>Approved-by: Chris Billington <a href=\"mailto:chrisjbillington@gmail.com\">&#99;&#104;&#114;&#105;&#115;&#106;&#98;&#105;&#108;&#108;&#105;&#110;&#103;&#116;&#111;&#110;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>", "type": "rendered"}, "parents": [{"hash": "e5e96dc53619ac8fd2130971a1a4709c3093bd3f", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/e5e96dc53619ac8fd2130971a1a4709c3093bd3f.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/e5e96dc53619ac8fd2130971a1a4709c3093bd3f"}}}, {"hash": "510c5e44405d34805f06f2318062f769d04e959e", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/510c5e44405d34805f06f2318062f769d04e959e.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/510c5e44405d34805f06f2318062f769d04e959e"}}}], "date": "2018-06-19T05:42:23+00:00", "message": "Merged in pstarkey/bugfix (pull request #24)\n\nFixed bug where compilation of single shot (aka connection table recompilation) using a globals file that contained globals of lists/arrays resulted in a confusing error.\n\nApproved-by: Chris Billington <chrisjbillington@gmail.com>", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch pstarkey/bugfix", "markup": "markdown", "html": "<p>Close branch pstarkey/bugfix</p>", "type": "rendered"}}, "hash": "510c5e44405d34805f06f2318062f769d04e959e", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/510c5e44405d34805f06f2318062f769d04e959e.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/510c5e44405d34805f06f2318062f769d04e959e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/510c5e44405d34805f06f2318062f769d04e959e"}, "html": {"href": "#!/cavitylab/runmanager/commits/510c5e44405d34805f06f2318062f769d04e959e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/510c5e44405d34805f06f2318062f769d04e959e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/510c5e44405d34805f06f2318062f769d04e959e/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/510c5e44405d34805f06f2318062f769d04e959e/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch pstarkey/bugfix", "markup": "markdown", "html": "<p>Close branch pstarkey/bugfix</p>", "type": "rendered"}, "parents": [{"hash": "f5b16f91816f4826d4c90df35159d4b5a3247316", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/f5b16f91816f4826d4c90df35159d4b5a3247316.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/f5b16f91816f4826d4c90df35159d4b5a3247316"}}}], "date": "2018-06-19T05:42:23+00:00", "message": "Close branch pstarkey/bugfix", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bug where compilation of single shot (aka connection table recompilation) using a globals file that contained globals of lists/arrays resulted in a confusing error.\n\nPreviously, the error listed the names of every global group provided that group contains more than one global. This is because we changed the return result of `evaluate_globals` without updating this code.\n\nNow we return the names of globals where the \"expansion\" column is set. I think this might ignore automatic zip groups, but that probably makes sense as you really only care about the globals that you need to edit, which would still be listed as 'outer' since we don't run the automatic zip group checking code in the API (in fact that code (`guess_expansion_modes`) only exists in the GUI part of runmanager, which means the API/GUI are not actually equivalent when compiling a sequence of shots. Not relevant here....but I'll log an issue about it anyway!)", "markup": "markdown", "html": "<p>Fixed bug where compilation of single shot (aka connection table recompilation) using a globals file that contained globals of lists/arrays resulted in a confusing error.</p>\n<p>Previously, the error listed the names of every global group provided that group contains more than one global. This is because we changed the return result of <code>evaluate_globals</code> without updating this code.</p>\n<p>Now we return the names of globals where the \"expansion\" column is set. I think this might ignore automatic zip groups, but that probably makes sense as you really only care about the globals that you need to edit, which would still be listed as 'outer' since we don't run the automatic zip group checking code in the API (in fact that code (<code>guess_expansion_modes</code>) only exists in the GUI part of runmanager, which means the API/GUI are not actually equivalent when compiling a sequence of shots. Not relevant here....but I'll log an issue about it anyway!)</p>", "type": "rendered"}}, "hash": "f5b16f91816f4826d4c90df35159d4b5a3247316", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/f5b16f91816f4826d4c90df35159d4b5a3247316.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/f5b16f91816f4826d4c90df35159d4b5a3247316/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/f5b16f91816f4826d4c90df35159d4b5a3247316"}, "html": {"href": "#!/cavitylab/runmanager/commits/f5b16f91816f4826d4c90df35159d4b5a3247316"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/f5b16f91816f4826d4c90df35159d4b5a3247316"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/f5b16f91816f4826d4c90df35159d4b5a3247316/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/f5b16f91816f4826d4c90df35159d4b5a3247316/statuses_page=1.json"}}, "author": {"raw": "Philip Starkey <philip.starkey@monash.edu>", "type": "author", "user": {"display_name": "Phil Starkey", "uuid": "{bf2034f3-ffd1-49fb-9bf4-e900788cfbff}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbf2034f3-ffd1-49fb-9bf4-e900788cfbff%7D"}, "html": {"href": "https://bitbucket.org/%7Bbf2034f3-ffd1-49fb-9bf4-e900788cfbff%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a5d16233c76364a4acbdc83e9ee02d96d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-3.png"}}, "nickname": "Philip Starkey", "type": "user", "account_id": "5e2d536c52522c0e6fe716ed"}}, "summary": {"raw": "Fixed bug where compilation of single shot (aka connection table recompilation) using a globals file that contained globals of lists/arrays resulted in a confusing error.\n\nPreviously, the error listed the names of every global group provided that group contains more than one global. This is because we changed the return result of `evaluate_globals` without updating this code.\n\nNow we return the names of globals where the \"expansion\" column is set. I think this might ignore automatic zip groups, but that probably makes sense as you really only care about the globals that you need to edit, which would still be listed as 'outer' since we don't run the automatic zip group checking code in the API (in fact that code (`guess_expansion_modes`) only exists in the GUI part of runmanager, which means the API/GUI are not actually equivalent when compiling a sequence of shots. Not relevant here....but I'll log an issue about it anyway!)", "markup": "markdown", "html": "<p>Fixed bug where compilation of single shot (aka connection table recompilation) using a globals file that contained globals of lists/arrays resulted in a confusing error.</p>\n<p>Previously, the error listed the names of every global group provided that group contains more than one global. This is because we changed the return result of <code>evaluate_globals</code> without updating this code.</p>\n<p>Now we return the names of globals where the \"expansion\" column is set. I think this might ignore automatic zip groups, but that probably makes sense as you really only care about the globals that you need to edit, which would still be listed as 'outer' since we don't run the automatic zip group checking code in the API (in fact that code (<code>guess_expansion_modes</code>) only exists in the GUI part of runmanager, which means the API/GUI are not actually equivalent when compiling a sequence of shots. Not relevant here....but I'll log an issue about it anyway!)</p>", "type": "rendered"}, "parents": [{"hash": "e5e96dc53619ac8fd2130971a1a4709c3093bd3f", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/e5e96dc53619ac8fd2130971a1a4709c3093bd3f.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/e5e96dc53619ac8fd2130971a1a4709c3093bd3f"}}}], "date": "2018-06-19T05:33:20+00:00", "message": "Fixed bug where compilation of single shot (aka connection table recompilation) using a globals file that contained globals of lists/arrays resulted in a confusing error.\n\nPreviously, the error listed the names of every global group provided that group contains more than one global. This is because we changed the return result of `evaluate_globals` without updating this code.\n\nNow we return the names of globals where the \"expansion\" column is set. I think this might ignore automatic zip groups, but that probably makes sense as you really only care about the globals that you need to edit, which would still be listed as 'outer' since we don't run the automatic zip group checking code in the API (in fact that code (`guess_expansion_modes`) only exists in the GUI part of runmanager, which means the API/GUI are not actually equivalent when compiling a sequence of shots. Not relevant here....but I'll log an issue about it anyway!)", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in cbillington/runmanager/QShortcuts (pull request #23)\n\nUse QShortcuts for keyboard shortcuts, resolving issue #59\n\nApproved-by: Russell Anderson <russell.anderson@monash.edu>", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/runmanager\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/runmanager</a>/QShortcuts (pull request #23)</p>\n<p>Use QShortcuts for keyboard shortcuts, resolving issue #59</p>\n<p>Approved-by: Russell Anderson <a href=\"mailto:russell.anderson@monash.edu\">&#114;&#117;&#115;&#115;&#101;&#108;&#108;&#46;&#97;&#110;&#100;&#101;&#114;&#115;&#111;&#110;&#64;&#109;&#111;&#110;&#97;&#115;&#104;&#46;&#101;&#100;&#117;</a></p>", "type": "rendered"}}, "hash": "e5e96dc53619ac8fd2130971a1a4709c3093bd3f", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/e5e96dc53619ac8fd2130971a1a4709c3093bd3f.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/e5e96dc53619ac8fd2130971a1a4709c3093bd3f/comments_page=1.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/e5e96dc53619ac8fd2130971a1a4709c3093bd3f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/e5e96dc53619ac8fd2130971a1a4709c3093bd3f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/e5e96dc53619ac8fd2130971a1a4709c3093bd3f/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/e5e96dc53619ac8fd2130971a1a4709c3093bd3f/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in cbillington/runmanager/QShortcuts (pull request #23)\n\nUse QShortcuts for keyboard shortcuts, resolving issue #59\n\nApproved-by: Russell Anderson <russell.anderson@monash.edu>", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/runmanager\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/runmanager</a>/QShortcuts (pull request #23)</p>\n<p>Use QShortcuts for keyboard shortcuts, resolving issue #59</p>\n<p>Approved-by: Russell Anderson <a href=\"mailto:russell.anderson@monash.edu\">&#114;&#117;&#115;&#115;&#101;&#108;&#108;&#46;&#97;&#110;&#100;&#101;&#114;&#115;&#111;&#110;&#64;&#109;&#111;&#110;&#97;&#115;&#104;&#46;&#101;&#100;&#117;</a></p>", "type": "rendered"}, "parents": [{"hash": "2e28d04ef4e5c7d2022a490c75809acd1a3770a5", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/2e28d04ef4e5c7d2022a490c75809acd1a3770a5.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/2e28d04ef4e5c7d2022a490c75809acd1a3770a5"}}}, {"hash": "51fdbe708b0272552c807bcbda8e04ef66fc4ebd", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/51fdbe708b0272552c807bcbda8e04ef66fc4ebd.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/51fdbe708b0272552c807bcbda8e04ef66fc4ebd"}}}], "date": "2018-05-30T11:50:57+00:00", "message": "Merged in cbillington/runmanager/QShortcuts (pull request #23)\n\nUse QShortcuts for keyboard shortcuts, resolving issue #59\n\nApproved-by: Russell Anderson <russell.anderson@monash.edu>", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch QShortcuts", "markup": "markdown", "html": "<p>Close branch QShortcuts</p>", "type": "rendered"}}, "hash": "51fdbe708b0272552c807bcbda8e04ef66fc4ebd", "repository": {"links": {"self": {"href": "data/repositories/cavitylab/runmanager.json"}, "html": {"href": "#!/cavitylab/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{843babfe-b196-447a-b035-9a0b89171be6}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cavitylab/runmanager", "uuid": "{843babfe-b196-447a-b035-9a0b89171be6}"}, "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/51fdbe708b0272552c807bcbda8e04ef66fc4ebd.json"}, "comments": {"href": "data/repositories/cavitylab/runmanager/commit/51fdbe708b0272552c807bcbda8e04ef66fc4ebd/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/patch/51fdbe708b0272552c807bcbda8e04ef66fc4ebd"}, "html": {"href": "#!/cavitylab/runmanager/commits/51fdbe708b0272552c807bcbda8e04ef66fc4ebd"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/diff/51fdbe708b0272552c807bcbda8e04ef66fc4ebd"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cavitylab/runmanager/commit/51fdbe708b0272552c807bcbda8e04ef66fc4ebd/approve"}, "statuses": {"href": "data/repositories/cavitylab/runmanager/commit/51fdbe708b0272552c807bcbda8e04ef66fc4ebd/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch QShortcuts", "markup": "markdown", "html": "<p>Close branch QShortcuts</p>", "type": "rendered"}, "parents": [{"hash": "28c71ebe663f9255d0dbc33715f9fb93c004e721", "type": "commit", "links": {"self": {"href": "data/repositories/cavitylab/runmanager/commit/28c71ebe663f9255d0dbc33715f9fb93c004e721.json"}, "html": {"href": "#!/cavitylab/runmanager/commits/28c71ebe663f9255d0dbc33715f9fb93c004e721"}}}], "date": "2018-05-30T11:50:57+00:00", "message": "Close branch QShortcuts", "type": "commit"}], "next": "data/repositories/cavitylab/runmanager/commits/runmanager-mono-font_page=2.json"}