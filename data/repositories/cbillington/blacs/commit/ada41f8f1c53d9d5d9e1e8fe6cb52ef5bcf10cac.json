{"rendered": {"message": {"raw": "On close_tab, call `worker.terminate()` unconditionally, even if the worker has\napparantly not started yet. Otherwise the worker may yet start.\n\nRely on zprocess 3.13.3 which makes terminate() race-free such that this\nactually works.\n\nPreviously, one could still hang BLACS for some seconds by clicking restart very\nquickly, and worse, leave child processes running.\n\nRelying on a newer zprocess also resolves a regression due to a bug in zprocess,\nreported here (though the symptoms appear to be specific to that lab, the same\nissue could crash BLACS in other ways):\n\nhttps://bitbucket.org/cbillington/zprocess/issues/11/error-being-thrown-when-updating-from", "markup": "markdown", "html": "<p>On close_tab, call <code>worker.terminate()</code> unconditionally, even if the worker has<br />\napparantly not started yet. Otherwise the worker may yet start.</p>\n<p>Rely on zprocess 3.13.3 which makes terminate() race-free such that this<br />\nactually works.</p>\n<p>Previously, one could still hang BLACS for some seconds by clicking restart very<br />\nquickly, and worse, leave child processes running.</p>\n<p>Relying on a newer zprocess also resolves a regression due to a bug in zprocess,<br />\nreported here (though the symptoms appear to be specific to that lab, the same<br />\nissue could crash BLACS in other ways):</p>\n<p><a href=\"https://bitbucket.org/cbillington/zprocess/issues/11/error-being-thrown-when-updating-from\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/cbillington/zprocess/issues/11/error-being-thrown-when-updating-from</a></p>", "type": "rendered"}}, "hash": "ada41f8f1c53d9d5d9e1e8fe6cb52ef5bcf10cac", "repository": {"links": {"self": {"href": "data/repositories/cbillington/blacs.json"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "links": {"self": {"href": "data/repositories/cbillington/blacs/commit/ada41f8f1c53d9d5d9e1e8fe6cb52ef5bcf10cac.json"}, "comments": {"href": "data/repositories/cbillington/blacs/commit/ada41f8f1c53d9d5d9e1e8fe6cb52ef5bcf10cac/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/patch/ada41f8f1c53d9d5d9e1e8fe6cb52ef5bcf10cac"}, "html": {"href": "#!/cbillington/blacs/commits/ada41f8f1c53d9d5d9e1e8fe6cb52ef5bcf10cac"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/diff/ada41f8f1c53d9d5d9e1e8fe6cb52ef5bcf10cac"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/ada41f8f1c53d9d5d9e1e8fe6cb52ef5bcf10cac/approve"}, "statuses": {"href": "data/repositories/cbillington/blacs/commit/ada41f8f1c53d9d5d9e1e8fe6cb52ef5bcf10cac/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "On close_tab, call `worker.terminate()` unconditionally, even if the worker has\napparantly not started yet. Otherwise the worker may yet start.\n\nRely on zprocess 3.13.3 which makes terminate() race-free such that this\nactually works.\n\nPreviously, one could still hang BLACS for some seconds by clicking restart very\nquickly, and worse, leave child processes running.\n\nRelying on a newer zprocess also resolves a regression due to a bug in zprocess,\nreported here (though the symptoms appear to be specific to that lab, the same\nissue could crash BLACS in other ways):\n\nhttps://bitbucket.org/cbillington/zprocess/issues/11/error-being-thrown-when-updating-from", "markup": "markdown", "html": "<p>On close_tab, call <code>worker.terminate()</code> unconditionally, even if the worker has<br />\napparantly not started yet. Otherwise the worker may yet start.</p>\n<p>Rely on zprocess 3.13.3 which makes terminate() race-free such that this<br />\nactually works.</p>\n<p>Previously, one could still hang BLACS for some seconds by clicking restart very<br />\nquickly, and worse, leave child processes running.</p>\n<p>Relying on a newer zprocess also resolves a regression due to a bug in zprocess,<br />\nreported here (though the symptoms appear to be specific to that lab, the same<br />\nissue could crash BLACS in other ways):</p>\n<p><a href=\"https://bitbucket.org/cbillington/zprocess/issues/11/error-being-thrown-when-updating-from\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/cbillington/zprocess/issues/11/error-being-thrown-when-updating-from</a></p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "73d3ef0fde33e8027d4bb0bcee8210f8a2c4aaed", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/blacs/commit/73d3ef0fde33e8027d4bb0bcee8210f8a2c4aaed.json"}, "html": {"href": "#!/cbillington/blacs/commits/73d3ef0fde33e8027d4bb0bcee8210f8a2c4aaed"}}}], "date": "2019-05-09T21:04:05+00:00", "message": "On close_tab, call `worker.terminate()` unconditionally, even if the worker has\napparantly not started yet. Otherwise the worker may yet start.\n\nRely on zprocess 3.13.3 which makes terminate() race-free such that this\nactually works.\n\nPreviously, one could still hang BLACS for some seconds by clicking restart very\nquickly, and worse, leave child processes running.\n\nRelying on a newer zprocess also resolves a regression due to a bug in zprocess,\nreported here (though the symptoms appear to be specific to that lab, the same\nissue could crash BLACS in other ways):\n\nhttps://bitbucket.org/cbillington/zprocess/issues/11/error-being-thrown-when-updating-from", "type": "commit", "git_hash": "601e0b6f38a5eac6aa9cfdf83959e1dcb6adafbf", "tags": null, "branches": "bugfix2"}