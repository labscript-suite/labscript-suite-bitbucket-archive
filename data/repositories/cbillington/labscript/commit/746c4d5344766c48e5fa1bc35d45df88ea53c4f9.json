{"rendered": {"message": {"raw": "Fixed a bug.\n\nPreviously, if the ramp rate was so low that the time between instructions was greater than 55s (a rate of less than (1/110) Hz), the length between instructions would be out by half the remainder of the instruction length when divided by 55.\n\nThis is because we incremented the instruction counter j for the added LONG_DELAY instruction before making the END_LOOP instruction. We thus branched back to the LONG_DELAY instruction instead of the LOOP instruction defining the beginning of the loop. The length of time between the LOOP instruction and LONG_DELAY instruction was half the remainder of the instruction length when divided by 55 (where the instruction length is half the time between rising edges on the clock)", "markup": "markdown", "html": "<p>Fixed a bug.</p>\n<p>Previously, if the ramp rate was so low that the time between instructions was greater than 55s (a rate of less than (1/110) Hz), the length between instructions would be out by half the remainder of the instruction length when divided by 55.</p>\n<p>This is because we incremented the instruction counter j for the added LONG_DELAY instruction before making the END_LOOP instruction. We thus branched back to the LONG_DELAY instruction instead of the LOOP instruction defining the beginning of the loop. The length of time between the LOOP instruction and LONG_DELAY instruction was half the remainder of the instruction length when divided by 55 (where the instruction length is half the time between rising edges on the clock)</p>", "type": "rendered"}}, "hash": "746c4d5344766c48e5fa1bc35d45df88ea53c4f9", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/746c4d5344766c48e5fa1bc35d45df88ea53c4f9.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/746c4d5344766c48e5fa1bc35d45df88ea53c4f9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/746c4d5344766c48e5fa1bc35d45df88ea53c4f9"}, "html": {"href": "#!/cbillington/labscript/commits/746c4d5344766c48e5fa1bc35d45df88ea53c4f9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/746c4d5344766c48e5fa1bc35d45df88ea53c4f9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/746c4d5344766c48e5fa1bc35d45df88ea53c4f9/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/746c4d5344766c48e5fa1bc35d45df88ea53c4f9/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed a bug.\n\nPreviously, if the ramp rate was so low that the time between instructions was greater than 55s (a rate of less than (1/110) Hz), the length between instructions would be out by half the remainder of the instruction length when divided by 55.\n\nThis is because we incremented the instruction counter j for the added LONG_DELAY instruction before making the END_LOOP instruction. We thus branched back to the LONG_DELAY instruction instead of the LOOP instruction defining the beginning of the loop. The length of time between the LOOP instruction and LONG_DELAY instruction was half the remainder of the instruction length when divided by 55 (where the instruction length is half the time between rising edges on the clock)", "markup": "markdown", "html": "<p>Fixed a bug.</p>\n<p>Previously, if the ramp rate was so low that the time between instructions was greater than 55s (a rate of less than (1/110) Hz), the length between instructions would be out by half the remainder of the instruction length when divided by 55.</p>\n<p>This is because we incremented the instruction counter j for the added LONG_DELAY instruction before making the END_LOOP instruction. We thus branched back to the LONG_DELAY instruction instead of the LOOP instruction defining the beginning of the loop. The length of time between the LOOP instruction and LONG_DELAY instruction was half the remainder of the instruction length when divided by 55 (where the instruction length is half the time between rising edges on the clock)</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "30ad0c18991ddf864dbe892a7823c560a6781e7f", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/30ad0c18991ddf864dbe892a7823c560a6781e7f.json"}, "html": {"href": "#!/cbillington/labscript/commits/30ad0c18991ddf864dbe892a7823c560a6781e7f"}}}], "date": "2012-05-28T02:36:23+00:00", "message": "Fixed a bug.\n\nPreviously, if the ramp rate was so low that the time between instructions was greater than 55s (a rate of less than (1/110) Hz), the length between instructions would be out by half the remainder of the instruction length when divided by 55.\n\nThis is because we incremented the instruction counter j for the added LONG_DELAY instruction before making the END_LOOP instruction. We thus branched back to the LONG_DELAY instruction instead of the LOOP instruction defining the beginning of the loop. The length of time between the LOOP instruction and LONG_DELAY instruction was half the remainder of the instruction length when divided by 55 (where the instruction length is half the time between rising edges on the clock)", "type": "commit", "git_hash": "26838b59d5fc5e04fdc66251938e5112ab2a89de", "tags": null, "branches": "default"}