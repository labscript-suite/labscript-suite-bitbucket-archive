{"pagelen": 100, "previous": "data/repositories/cbillington/labscript/commits/missing_wait_bugfix_page=4.json", "values": [{"rendered": {"message": {"raw": "Fixed bugs with NI PCI 6733 and 6363. Turns out if there wasn't any buffered digital output, the clock signal wouldn't be used properly for the analogue output. This was because the static-mode DO had ownership of the PFI which was being used for clocking.\n\nSo now when there is no DO, some empty DO is created. We can make this better in the future by having the task not take ownership of the PFI in the first place. In fact I'll do that soon, it's just complicated by the fact that the port/line syntax and PFI refer to the same terminals, so I have to work out which to skip over.", "markup": "markdown", "html": "<p>Fixed bugs with NI PCI 6733 and 6363. Turns out if there wasn't any buffered digital output, the clock signal wouldn't be used properly for the analogue output. This was because the static-mode DO had ownership of the PFI which was being used for clocking.</p>\n<p>So now when there is no DO, some empty DO is created. We can make this better in the future by having the task not take ownership of the PFI in the first place. In fact I'll do that soon, it's just complicated by the fact that the port/line syntax and PFI refer to the same terminals, so I have to work out which to skip over.</p>", "type": "rendered"}}, "hash": "4f9518003ccef0cf5c87f22640c2802b28f52f81", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/4f9518003ccef0cf5c87f22640c2802b28f52f81.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/4f9518003ccef0cf5c87f22640c2802b28f52f81/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/4f9518003ccef0cf5c87f22640c2802b28f52f81"}, "html": {"href": "#!/cbillington/labscript/commits/4f9518003ccef0cf5c87f22640c2802b28f52f81"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/4f9518003ccef0cf5c87f22640c2802b28f52f81"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/4f9518003ccef0cf5c87f22640c2802b28f52f81/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/4f9518003ccef0cf5c87f22640c2802b28f52f81/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed bugs with NI PCI 6733 and 6363. Turns out if there wasn't any buffered digital output, the clock signal wouldn't be used properly for the analogue output. This was because the static-mode DO had ownership of the PFI which was being used for clocking.\n\nSo now when there is no DO, some empty DO is created. We can make this better in the future by having the task not take ownership of the PFI in the first place. In fact I'll do that soon, it's just complicated by the fact that the port/line syntax and PFI refer to the same terminals, so I have to work out which to skip over.", "markup": "markdown", "html": "<p>Fixed bugs with NI PCI 6733 and 6363. Turns out if there wasn't any buffered digital output, the clock signal wouldn't be used properly for the analogue output. This was because the static-mode DO had ownership of the PFI which was being used for clocking.</p>\n<p>So now when there is no DO, some empty DO is created. We can make this better in the future by having the task not take ownership of the PFI in the first place. In fact I'll do that soon, it's just complicated by the fact that the port/line syntax and PFI refer to the same terminals, so I have to work out which to skip over.</p>", "type": "rendered"}, "parents": [{"hash": "06b9088527fde855057aa1b293e77f11dfdb1b2a", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/06b9088527fde855057aa1b293e77f11dfdb1b2a.json"}, "html": {"href": "#!/cbillington/labscript/commits/06b9088527fde855057aa1b293e77f11dfdb1b2a"}}}], "date": "2011-12-13T05:52:27+00:00", "message": "Fixed bugs with NI PCI 6733 and 6363. Turns out if there wasn't any buffered digital output, the clock signal wouldn't be used properly for the analogue output. This was because the static-mode DO had ownership of the PFI which was being used for clocking.\n\nSo now when there is no DO, some empty DO is created. We can make this better in the future by having the task not take ownership of the PFI in the first place. In fact I'll do that soon, it's just complicated by the fact that the port/line syntax and PFI refer to the same terminals, so I have to work out which to skip over.", "type": "commit"}, {"rendered": {"message": {"raw": "The NI PCI 6733 now checks to see that is has an even number of outputs, and throws an error if it doesn't.\nNI cards now take an initialisation parameter saying what PFI terminal they are getting the clock on. This need not be on the same device, if its on another NI device linked by an RTSI cable, that's fine too.\nAlso there is now always a clock tick at stop_time, but this cannot have new values -- the stop time must be after the final values of all devices and there is error checking for this. This final clock tick will be used when we implement the 'waits' feature, and will also be used to give the NI PCI 6733 it's one extra clock tick as required by bug #357.\nNI cards also now only create groups for analog and digital output and acquisition if they in fact have some data to put in that group. If there is no digital output for example, they don't even create a group for it. The hardware programming modules may have to implement some checking so that they don't crash if there is no data (they should simply skip that type of programming if there is no group)", "markup": "markdown", "html": "<p>The NI PCI 6733 now checks to see that is has an even number of outputs, and throws an error if it doesn't.<br />\nNI cards now take an initialisation parameter saying what PFI terminal they are getting the clock on. This need not be on the same device, if its on another NI device linked by an RTSI cable, that's fine too.<br />\nAlso there is now always a clock tick at stop_time, but this cannot have new values -- the stop time must be after the final values of all devices and there is error checking for this. This final clock tick will be used when we implement the 'waits' feature, and will also be used to give the NI PCI 6733 it's one extra clock tick as required by bug #357.<br />\nNI cards also now only create groups for analog and digital output and acquisition if they in fact have some data to put in that group. If there is no digital output for example, they don't even create a group for it. The hardware programming modules may have to implement some checking so that they don't crash if there is no data (they should simply skip that type of programming if there is no group)</p>", "type": "rendered"}}, "hash": "06b9088527fde855057aa1b293e77f11dfdb1b2a", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/06b9088527fde855057aa1b293e77f11dfdb1b2a.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/06b9088527fde855057aa1b293e77f11dfdb1b2a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/06b9088527fde855057aa1b293e77f11dfdb1b2a"}, "html": {"href": "#!/cbillington/labscript/commits/06b9088527fde855057aa1b293e77f11dfdb1b2a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/06b9088527fde855057aa1b293e77f11dfdb1b2a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/06b9088527fde855057aa1b293e77f11dfdb1b2a/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/06b9088527fde855057aa1b293e77f11dfdb1b2a/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "The NI PCI 6733 now checks to see that is has an even number of outputs, and throws an error if it doesn't.\nNI cards now take an initialisation parameter saying what PFI terminal they are getting the clock on. This need not be on the same device, if its on another NI device linked by an RTSI cable, that's fine too.\nAlso there is now always a clock tick at stop_time, but this cannot have new values -- the stop time must be after the final values of all devices and there is error checking for this. This final clock tick will be used when we implement the 'waits' feature, and will also be used to give the NI PCI 6733 it's one extra clock tick as required by bug #357.\nNI cards also now only create groups for analog and digital output and acquisition if they in fact have some data to put in that group. If there is no digital output for example, they don't even create a group for it. The hardware programming modules may have to implement some checking so that they don't crash if there is no data (they should simply skip that type of programming if there is no group)", "markup": "markdown", "html": "<p>The NI PCI 6733 now checks to see that is has an even number of outputs, and throws an error if it doesn't.<br />\nNI cards now take an initialisation parameter saying what PFI terminal they are getting the clock on. This need not be on the same device, if its on another NI device linked by an RTSI cable, that's fine too.<br />\nAlso there is now always a clock tick at stop_time, but this cannot have new values -- the stop time must be after the final values of all devices and there is error checking for this. This final clock tick will be used when we implement the 'waits' feature, and will also be used to give the NI PCI 6733 it's one extra clock tick as required by bug #357.<br />\nNI cards also now only create groups for analog and digital output and acquisition if they in fact have some data to put in that group. If there is no digital output for example, they don't even create a group for it. The hardware programming modules may have to implement some checking so that they don't crash if there is no data (they should simply skip that type of programming if there is no group)</p>", "type": "rendered"}, "parents": [{"hash": "70b30db494b546d27864e9792df13467d82df778", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/70b30db494b546d27864e9792df13467d82df778.json"}, "html": {"href": "#!/cbillington/labscript/commits/70b30db494b546d27864e9792df13467d82df778"}}}], "date": "2011-12-13T03:49:00+00:00", "message": "The NI PCI 6733 now checks to see that is has an even number of outputs, and throws an error if it doesn't.\nNI cards now take an initialisation parameter saying what PFI terminal they are getting the clock on. This need not be on the same device, if its on another NI device linked by an RTSI cable, that's fine too.\nAlso there is now always a clock tick at stop_time, but this cannot have new values -- the stop time must be after the final values of all devices and there is error checking for this. This final clock tick will be used when we implement the 'waits' feature, and will also be used to give the NI PCI 6733 it's one extra clock tick as required by bug #357.\nNI cards also now only create groups for analog and digital output and acquisition if they in fact have some data to put in that group. If there is no digital output for example, they don't even create a group for it. The hardware programming modules may have to implement some checking so that they don't crash if there is no data (they should simply skip that type of programming if there is no group)", "type": "commit"}, {"rendered": {"message": {"raw": "Fixes in labscript and BLACS for the NI PCI 6733. Appears to be working for static mode, still requires testing for buffered mode.", "markup": "markdown", "html": "<p>Fixes in labscript and BLACS for the NI PCI 6733. Appears to be working for static mode, still requires testing for buffered mode.</p>", "type": "rendered"}}, "hash": "70b30db494b546d27864e9792df13467d82df778", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/70b30db494b546d27864e9792df13467d82df778.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/70b30db494b546d27864e9792df13467d82df778/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/70b30db494b546d27864e9792df13467d82df778"}, "html": {"href": "#!/cbillington/labscript/commits/70b30db494b546d27864e9792df13467d82df778"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/70b30db494b546d27864e9792df13467d82df778"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/70b30db494b546d27864e9792df13467d82df778/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/70b30db494b546d27864e9792df13467d82df778/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixes in labscript and BLACS for the NI PCI 6733. Appears to be working for static mode, still requires testing for buffered mode.", "markup": "markdown", "html": "<p>Fixes in labscript and BLACS for the NI PCI 6733. Appears to be working for static mode, still requires testing for buffered mode.</p>", "type": "rendered"}, "parents": [{"hash": "151c3a2aeca07811e33ad71a9328dc9cbafe8df6", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/151c3a2aeca07811e33ad71a9328dc9cbafe8df6.json"}, "html": {"href": "#!/cbillington/labscript/commits/151c3a2aeca07811e33ad71a9328dc9cbafe8df6"}}}], "date": "2011-12-09T03:12:16+00:00", "message": "Fixes in labscript and BLACS for the NI PCI 6733. Appears to be working for static mode, still requires testing for buffered mode.", "type": "commit"}, {"rendered": {"message": {"raw": "Added BLACS tab and hardware programming file for the NI PCI 6733", "markup": "markdown", "html": "<p>Added BLACS tab and hardware programming file for the NI PCI 6733</p>", "type": "rendered"}}, "hash": "151c3a2aeca07811e33ad71a9328dc9cbafe8df6", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/151c3a2aeca07811e33ad71a9328dc9cbafe8df6.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/151c3a2aeca07811e33ad71a9328dc9cbafe8df6/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/151c3a2aeca07811e33ad71a9328dc9cbafe8df6"}, "html": {"href": "#!/cbillington/labscript/commits/151c3a2aeca07811e33ad71a9328dc9cbafe8df6"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/151c3a2aeca07811e33ad71a9328dc9cbafe8df6"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/151c3a2aeca07811e33ad71a9328dc9cbafe8df6/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/151c3a2aeca07811e33ad71a9328dc9cbafe8df6/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added BLACS tab and hardware programming file for the NI PCI 6733", "markup": "markdown", "html": "<p>Added BLACS tab and hardware programming file for the NI PCI 6733</p>", "type": "rendered"}, "parents": [{"hash": "1f5505e8ae64aa91d60770e5c9333a73454b6634", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/1f5505e8ae64aa91d60770e5c9333a73454b6634.json"}, "html": {"href": "#!/cbillington/labscript/commits/1f5505e8ae64aa91d60770e5c9333a73454b6634"}}}], "date": "2011-12-09T01:30:54+00:00", "message": "Added BLACS tab and hardware programming file for the NI PCI 6733", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed some bugs in the camera tab for BLACS. Still need to get save/load working or at the very least, skipped over.", "markup": "markdown", "html": "<p>Fixed some bugs in the camera tab for BLACS. Still need to get save/load working or at the very least, skipped over.</p>", "type": "rendered"}}, "hash": "1f5505e8ae64aa91d60770e5c9333a73454b6634", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/1f5505e8ae64aa91d60770e5c9333a73454b6634.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/1f5505e8ae64aa91d60770e5c9333a73454b6634/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/1f5505e8ae64aa91d60770e5c9333a73454b6634"}, "html": {"href": "#!/cbillington/labscript/commits/1f5505e8ae64aa91d60770e5c9333a73454b6634"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/1f5505e8ae64aa91d60770e5c9333a73454b6634"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/1f5505e8ae64aa91d60770e5c9333a73454b6634/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/1f5505e8ae64aa91d60770e5c9333a73454b6634/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed some bugs in the camera tab for BLACS. Still need to get save/load working or at the very least, skipped over.", "markup": "markdown", "html": "<p>Fixed some bugs in the camera tab for BLACS. Still need to get save/load working or at the very least, skipped over.</p>", "type": "rendered"}, "parents": [{"hash": "13b54fed629e0f70f922dd3e107055c974bf51f2", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/13b54fed629e0f70f922dd3e107055c974bf51f2.json"}, "html": {"href": "#!/cbillington/labscript/commits/13b54fed629e0f70f922dd3e107055c974bf51f2"}}}], "date": "2011-12-07T06:20:41+00:00", "message": "Fixed some bugs in the camera tab for BLACS. Still need to get save/load working or at the very least, skipped over.", "type": "commit"}, {"rendered": {"message": {"raw": "Got rid of camera subclass for specific model of camera. We'll keep just a single class, and a single BLACS tab for cameras in general. The imaging system will take care of the differences, and say no if you try to do something the connected camera can't do.", "markup": "markdown", "html": "<p>Got rid of camera subclass for specific model of camera. We'll keep just a single class, and a single BLACS tab for cameras in general. The imaging system will take care of the differences, and say no if you try to do something the connected camera can't do.</p>", "type": "rendered"}}, "hash": "13b54fed629e0f70f922dd3e107055c974bf51f2", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/13b54fed629e0f70f922dd3e107055c974bf51f2.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/13b54fed629e0f70f922dd3e107055c974bf51f2/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/13b54fed629e0f70f922dd3e107055c974bf51f2"}, "html": {"href": "#!/cbillington/labscript/commits/13b54fed629e0f70f922dd3e107055c974bf51f2"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/13b54fed629e0f70f922dd3e107055c974bf51f2"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/13b54fed629e0f70f922dd3e107055c974bf51f2/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/13b54fed629e0f70f922dd3e107055c974bf51f2/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Got rid of camera subclass for specific model of camera. We'll keep just a single class, and a single BLACS tab for cameras in general. The imaging system will take care of the differences, and say no if you try to do something the connected camera can't do.", "markup": "markdown", "html": "<p>Got rid of camera subclass for specific model of camera. We'll keep just a single class, and a single BLACS tab for cameras in general. The imaging system will take care of the differences, and say no if you try to do something the connected camera can't do.</p>", "type": "rendered"}, "parents": [{"hash": "2cb83f25a3d7710a71ab01cfea0ef8c44014d9ef", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/2cb83f25a3d7710a71ab01cfea0ef8c44014d9ef.json"}, "html": {"href": "#!/cbillington/labscript/commits/2cb83f25a3d7710a71ab01cfea0ef8c44014d9ef"}}}], "date": "2011-12-07T00:58:16+00:00", "message": "Got rid of camera subclass for specific model of camera. We'll keep just a single class, and a single BLACS tab for cameras in general. The imaging system will take care of the differences, and say no if you try to do something the connected camera can't do.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a bug with the changes to the camera class I just commited.", "markup": "markdown", "html": "<p>Fixed a bug with the changes to the camera class I just commited.</p>", "type": "rendered"}}, "hash": "2cb83f25a3d7710a71ab01cfea0ef8c44014d9ef", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/2cb83f25a3d7710a71ab01cfea0ef8c44014d9ef.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/2cb83f25a3d7710a71ab01cfea0ef8c44014d9ef/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/2cb83f25a3d7710a71ab01cfea0ef8c44014d9ef"}, "html": {"href": "#!/cbillington/labscript/commits/2cb83f25a3d7710a71ab01cfea0ef8c44014d9ef"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/2cb83f25a3d7710a71ab01cfea0ef8c44014d9ef"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/2cb83f25a3d7710a71ab01cfea0ef8c44014d9ef/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/2cb83f25a3d7710a71ab01cfea0ef8c44014d9ef/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed a bug with the changes to the camera class I just commited.", "markup": "markdown", "html": "<p>Fixed a bug with the changes to the camera class I just commited.</p>", "type": "rendered"}, "parents": [{"hash": "c9a54528064bc0872adf2fbe38466cdc2e6e96c9", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/c9a54528064bc0872adf2fbe38466cdc2e6e96c9.json"}, "html": {"href": "#!/cbillington/labscript/commits/c9a54528064bc0872adf2fbe38466cdc2e6e96c9"}}}], "date": "2011-12-06T06:07:25+00:00", "message": "Fixed a bug with the changes to the camera class I just commited.", "type": "commit"}, {"rendered": {"message": {"raw": "Exposure time is now stored as an attribute to the camera group, rather than being in the list of exposures.", "markup": "markdown", "html": "<p>Exposure time is now stored as an attribute to the camera group, rather than being in the list of exposures.</p>", "type": "rendered"}}, "hash": "c9a54528064bc0872adf2fbe38466cdc2e6e96c9", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/c9a54528064bc0872adf2fbe38466cdc2e6e96c9.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/c9a54528064bc0872adf2fbe38466cdc2e6e96c9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/c9a54528064bc0872adf2fbe38466cdc2e6e96c9"}, "html": {"href": "#!/cbillington/labscript/commits/c9a54528064bc0872adf2fbe38466cdc2e6e96c9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/c9a54528064bc0872adf2fbe38466cdc2e6e96c9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/c9a54528064bc0872adf2fbe38466cdc2e6e96c9/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/c9a54528064bc0872adf2fbe38466cdc2e6e96c9/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Exposure time is now stored as an attribute to the camera group, rather than being in the list of exposures.", "markup": "markdown", "html": "<p>Exposure time is now stored as an attribute to the camera group, rather than being in the list of exposures.</p>", "type": "rendered"}, "parents": [{"hash": "361b7c830d107194fad9db447c4e9e2e683bfbf4", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/361b7c830d107194fad9db447c4e9e2e683bfbf4.json"}, "html": {"href": "#!/cbillington/labscript/commits/361b7c830d107194fad9db447c4e9e2e683bfbf4"}}}], "date": "2011-12-06T06:03:47+00:00", "message": "Exposure time is now stored as an attribute to the camera group, rather than being in the list of exposures.", "type": "commit"}, {"rendered": {"message": {"raw": "Camera class now requires a constant exposure time, rather than allowing for one each exposure. This must be set when the camera object is initialised.", "markup": "markdown", "html": "<p>Camera class now requires a constant exposure time, rather than allowing for one each exposure. This must be set when the camera object is initialised.</p>", "type": "rendered"}}, "hash": "361b7c830d107194fad9db447c4e9e2e683bfbf4", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/361b7c830d107194fad9db447c4e9e2e683bfbf4.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/361b7c830d107194fad9db447c4e9e2e683bfbf4/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/361b7c830d107194fad9db447c4e9e2e683bfbf4"}, "html": {"href": "#!/cbillington/labscript/commits/361b7c830d107194fad9db447c4e9e2e683bfbf4"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/361b7c830d107194fad9db447c4e9e2e683bfbf4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/361b7c830d107194fad9db447c4e9e2e683bfbf4/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/361b7c830d107194fad9db447c4e9e2e683bfbf4/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Camera class now requires a constant exposure time, rather than allowing for one each exposure. This must be set when the camera object is initialised.", "markup": "markdown", "html": "<p>Camera class now requires a constant exposure time, rather than allowing for one each exposure. This must be set when the camera object is initialised.</p>", "type": "rendered"}, "parents": [{"hash": "affcd6e3eb6d9219215fd91bbbd0ca3deb9022b4", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/affcd6e3eb6d9219215fd91bbbd0ca3deb9022b4.json"}, "html": {"href": "#!/cbillington/labscript/commits/affcd6e3eb6d9219215fd91bbbd0ca3deb9022b4"}}}], "date": "2011-12-06T06:02:02+00:00", "message": "Camera class now requires a constant exposure time, rather than allowing for one each exposure. This must be set when the camera object is initialised.", "type": "commit"}, {"rendered": {"message": {"raw": "Incorrect unpack statement in Camera class (line 881)", "markup": "markdown", "html": "<p>Incorrect unpack statement in Camera class (line 881)</p>", "type": "rendered"}}, "hash": "affcd6e3eb6d9219215fd91bbbd0ca3deb9022b4", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/affcd6e3eb6d9219215fd91bbbd0ca3deb9022b4.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/affcd6e3eb6d9219215fd91bbbd0ca3deb9022b4/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/affcd6e3eb6d9219215fd91bbbd0ca3deb9022b4"}, "html": {"href": "#!/cbillington/labscript/commits/affcd6e3eb6d9219215fd91bbbd0ca3deb9022b4"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/affcd6e3eb6d9219215fd91bbbd0ca3deb9022b4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/affcd6e3eb6d9219215fd91bbbd0ca3deb9022b4/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/affcd6e3eb6d9219215fd91bbbd0ca3deb9022b4/statuses_page=1.json"}}, "author": {"raw": "martijnj", "type": "author"}, "summary": {"raw": "Incorrect unpack statement in Camera class (line 881)", "markup": "markdown", "html": "<p>Incorrect unpack statement in Camera class (line 881)</p>", "type": "rendered"}, "parents": [{"hash": "37368cfdb31a54ea2a3109b2b0a7012941de135d", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/37368cfdb31a54ea2a3109b2b0a7012941de135d.json"}, "html": {"href": "#!/cbillington/labscript/commits/37368cfdb31a54ea2a3109b2b0a7012941de135d"}}}], "date": "2011-11-25T00:38:57+00:00", "message": "Incorrect unpack statement in Camera class (line 881)", "type": "commit"}, {"rendered": {"message": {"raw": "Implemented a camera class which takes care of multiple exposures and the digital triggering for said exposures. It records the exposure times and a string name for each exposure, as well as the frame type (frame_types = ['atoms','flat','dark','fluoro','clean']) into its group in the devices section of the hdf5 file.\nCompile example.py for an example!", "markup": "markdown", "html": "<p>Implemented a camera class which takes care of multiple exposures and the digital triggering for said exposures. It records the exposure times and a string name for each exposure, as well as the frame type (frame_types = ['atoms','flat','dark','fluoro','clean']) into its group in the devices section of the hdf5 file.<br />\nCompile example.py for an example!</p>", "type": "rendered"}}, "hash": "37368cfdb31a54ea2a3109b2b0a7012941de135d", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/37368cfdb31a54ea2a3109b2b0a7012941de135d.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/37368cfdb31a54ea2a3109b2b0a7012941de135d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/37368cfdb31a54ea2a3109b2b0a7012941de135d"}, "html": {"href": "#!/cbillington/labscript/commits/37368cfdb31a54ea2a3109b2b0a7012941de135d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/37368cfdb31a54ea2a3109b2b0a7012941de135d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/37368cfdb31a54ea2a3109b2b0a7012941de135d/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/37368cfdb31a54ea2a3109b2b0a7012941de135d/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Implemented a camera class which takes care of multiple exposures and the digital triggering for said exposures. It records the exposure times and a string name for each exposure, as well as the frame type (frame_types = ['atoms','flat','dark','fluoro','clean']) into its group in the devices section of the hdf5 file.\nCompile example.py for an example!", "markup": "markdown", "html": "<p>Implemented a camera class which takes care of multiple exposures and the digital triggering for said exposures. It records the exposure times and a string name for each exposure, as well as the frame type (frame_types = ['atoms','flat','dark','fluoro','clean']) into its group in the devices section of the hdf5 file.<br />\nCompile example.py for an example!</p>", "type": "rendered"}, "parents": [{"hash": "bbba8b6f9022576515d82599618f2a2b2c978ccd", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/bbba8b6f9022576515d82599618f2a2b2c978ccd.json"}, "html": {"href": "#!/cbillington/labscript/commits/bbba8b6f9022576515d82599618f2a2b2c978ccd"}}}], "date": "2011-11-24T04:01:09+00:00", "message": "Implemented a camera class which takes care of multiple exposures and the digital triggering for said exposures. It records the exposure times and a string name for each exposure, as well as the frame type (frame_types = ['atoms','flat','dark','fluoro','clean']) into its group in the devices section of the hdf5 file.\nCompile example.py for an example!", "type": "commit"}, {"rendered": {"message": {"raw": "Novatechs now have only one dummy instruction at the end.", "markup": "markdown", "html": "<p>Novatechs now have only one dummy instruction at the end.</p>", "type": "rendered"}}, "hash": "bbba8b6f9022576515d82599618f2a2b2c978ccd", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/bbba8b6f9022576515d82599618f2a2b2c978ccd.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/bbba8b6f9022576515d82599618f2a2b2c978ccd/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/bbba8b6f9022576515d82599618f2a2b2c978ccd"}, "html": {"href": "#!/cbillington/labscript/commits/bbba8b6f9022576515d82599618f2a2b2c978ccd"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/bbba8b6f9022576515d82599618f2a2b2c978ccd"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/bbba8b6f9022576515d82599618f2a2b2c978ccd/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/bbba8b6f9022576515d82599618f2a2b2c978ccd/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Novatechs now have only one dummy instruction at the end.", "markup": "markdown", "html": "<p>Novatechs now have only one dummy instruction at the end.</p>", "type": "rendered"}, "parents": [{"hash": "0e6bdad502d650fb48da41343c2e63640cd14f39", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/0e6bdad502d650fb48da41343c2e63640cd14f39.json"}, "html": {"href": "#!/cbillington/labscript/commits/0e6bdad502d650fb48da41343c2e63640cd14f39"}}}], "date": "2011-11-23T02:45:04+00:00", "message": "Novatechs now have only one dummy instruction at the end.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixes #319 slighly better (previous commit message said it was bug #307, this was a typo).\nNow throws an error if the experiment is not finite duration.", "markup": "markdown", "html": "<p>Fixes #319 slighly better (previous commit message said it was bug #307, this was a typo).<br />\nNow throws an error if the experiment is not finite duration.</p>", "type": "rendered"}}, "hash": "0e6bdad502d650fb48da41343c2e63640cd14f39", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/0e6bdad502d650fb48da41343c2e63640cd14f39.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/0e6bdad502d650fb48da41343c2e63640cd14f39/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/0e6bdad502d650fb48da41343c2e63640cd14f39"}, "html": {"href": "#!/cbillington/labscript/commits/0e6bdad502d650fb48da41343c2e63640cd14f39"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/0e6bdad502d650fb48da41343c2e63640cd14f39"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/0e6bdad502d650fb48da41343c2e63640cd14f39/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/0e6bdad502d650fb48da41343c2e63640cd14f39/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixes #319 slighly better (previous commit message said it was bug #307, this was a typo).\nNow throws an error if the experiment is not finite duration.", "markup": "markdown", "html": "<p>Fixes #319 slighly better (previous commit message said it was bug #307, this was a typo).<br />\nNow throws an error if the experiment is not finite duration.</p>", "type": "rendered"}, "parents": [{"hash": "55626ae9ac2304b308fb459e432a3e0aeb7fd413", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/55626ae9ac2304b308fb459e432a3e0aeb7fd413.json"}, "html": {"href": "#!/cbillington/labscript/commits/55626ae9ac2304b308fb459e432a3e0aeb7fd413"}}}], "date": "2011-11-22T10:14:29+00:00", "message": "Fixes #319 slighly better (previous commit message said it was bug #307, this was a typo).\nNow throws an error if the experiment is not finite duration.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixes bug #307. Pulseblasters now have a minimum of one clock tick (at t = 0), and if the experiment is of nonzero duration, a minimum of two (one at t=0 and another at the stop time).", "markup": "markdown", "html": "<p>Fixes bug #307. Pulseblasters now have a minimum of one clock tick (at t = 0), and if the experiment is of nonzero duration, a minimum of two (one at t=0 and another at the stop time).</p>", "type": "rendered"}}, "hash": "55626ae9ac2304b308fb459e432a3e0aeb7fd413", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/55626ae9ac2304b308fb459e432a3e0aeb7fd413.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/55626ae9ac2304b308fb459e432a3e0aeb7fd413/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/55626ae9ac2304b308fb459e432a3e0aeb7fd413"}, "html": {"href": "#!/cbillington/labscript/commits/55626ae9ac2304b308fb459e432a3e0aeb7fd413"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/55626ae9ac2304b308fb459e432a3e0aeb7fd413"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/55626ae9ac2304b308fb459e432a3e0aeb7fd413/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/55626ae9ac2304b308fb459e432a3e0aeb7fd413/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixes bug #307. Pulseblasters now have a minimum of one clock tick (at t = 0), and if the experiment is of nonzero duration, a minimum of two (one at t=0 and another at the stop time).", "markup": "markdown", "html": "<p>Fixes bug #307. Pulseblasters now have a minimum of one clock tick (at t = 0), and if the experiment is of nonzero duration, a minimum of two (one at t=0 and another at the stop time).</p>", "type": "rendered"}, "parents": [{"hash": "48f5c190967309a7a9c4f155e673142fa0f0c889", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/48f5c190967309a7a9c4f155e673142fa0f0c889.json"}, "html": {"href": "#!/cbillington/labscript/commits/48f5c190967309a7a9c4f155e673142fa0f0c889"}}}], "date": "2011-11-22T09:55:00+00:00", "message": "Fixes bug #307. Pulseblasters now have a minimum of one clock tick (at t = 0), and if the experiment is of nonzero duration, a minimum of two (one at t=0 and another at the stop time).", "type": "commit"}, {"rendered": {"message": {"raw": "Changed slow clock to a rising edge", "markup": "markdown", "html": "<p>Changed slow clock to a rising edge</p>", "type": "rendered"}}, "hash": "48f5c190967309a7a9c4f155e673142fa0f0c889", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/48f5c190967309a7a9c4f155e673142fa0f0c889.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/48f5c190967309a7a9c4f155e673142fa0f0c889/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/48f5c190967309a7a9c4f155e673142fa0f0c889"}, "html": {"href": "#!/cbillington/labscript/commits/48f5c190967309a7a9c4f155e673142fa0f0c889"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/48f5c190967309a7a9c4f155e673142fa0f0c889"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/48f5c190967309a7a9c4f155e673142fa0f0c889/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/48f5c190967309a7a9c4f155e673142fa0f0c889/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Changed slow clock to a rising edge", "markup": "markdown", "html": "<p>Changed slow clock to a rising edge</p>", "type": "rendered"}, "parents": [{"hash": "5869a0721cbec6b26434e91ae560a06a67599f24", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/5869a0721cbec6b26434e91ae560a06a67599f24.json"}, "html": {"href": "#!/cbillington/labscript/commits/5869a0721cbec6b26434e91ae560a06a67599f24"}}}], "date": "2011-11-21T00:45:36+00:00", "message": "Changed slow clock to a rising edge", "type": "commit"}, {"rendered": {"message": {"raw": "(hopefully )fixed silly mistake in previous commit.", "markup": "markdown", "html": "<p>(hopefully )fixed silly mistake in previous commit.</p>", "type": "rendered"}}, "hash": "5869a0721cbec6b26434e91ae560a06a67599f24", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/5869a0721cbec6b26434e91ae560a06a67599f24.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/5869a0721cbec6b26434e91ae560a06a67599f24/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/5869a0721cbec6b26434e91ae560a06a67599f24"}, "html": {"href": "#!/cbillington/labscript/commits/5869a0721cbec6b26434e91ae560a06a67599f24"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/5869a0721cbec6b26434e91ae560a06a67599f24"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/5869a0721cbec6b26434e91ae560a06a67599f24/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/5869a0721cbec6b26434e91ae560a06a67599f24/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "(hopefully )fixed silly mistake in previous commit.", "markup": "markdown", "html": "<p>(hopefully )fixed silly mistake in previous commit.</p>", "type": "rendered"}, "parents": [{"hash": "0f1476dcc64865490f151d38b895223c3b48f21b", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/0f1476dcc64865490f151d38b895223c3b48f21b.json"}, "html": {"href": "#!/cbillington/labscript/commits/0f1476dcc64865490f151d38b895223c3b48f21b"}}}], "date": "2011-11-10T07:08:22+00:00", "message": "(hopefully )fixed silly mistake in previous commit.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a bug where PulseBlasters with no children wouldn't generate_code. Now we can compile connection tables where PulseBlasters have no children.", "markup": "markdown", "html": "<p>Fixed a bug where PulseBlasters with no children wouldn't generate_code. Now we can compile connection tables where PulseBlasters have no children.</p>", "type": "rendered"}}, "hash": "0f1476dcc64865490f151d38b895223c3b48f21b", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/0f1476dcc64865490f151d38b895223c3b48f21b.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/0f1476dcc64865490f151d38b895223c3b48f21b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/0f1476dcc64865490f151d38b895223c3b48f21b"}, "html": {"href": "#!/cbillington/labscript/commits/0f1476dcc64865490f151d38b895223c3b48f21b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/0f1476dcc64865490f151d38b895223c3b48f21b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/0f1476dcc64865490f151d38b895223c3b48f21b/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/0f1476dcc64865490f151d38b895223c3b48f21b/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed a bug where PulseBlasters with no children wouldn't generate_code. Now we can compile connection tables where PulseBlasters have no children.", "markup": "markdown", "html": "<p>Fixed a bug where PulseBlasters with no children wouldn't generate_code. Now we can compile connection tables where PulseBlasters have no children.</p>", "type": "rendered"}, "parents": [{"hash": "1270ee891124894e64143fdb11254c40b7257fc3", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/1270ee891124894e64143fdb11254c40b7257fc3.json"}, "html": {"href": "#!/cbillington/labscript/commits/1270ee891124894e64143fdb11254c40b7257fc3"}}}], "date": "2011-11-10T07:06:07+00:00", "message": "Fixed a bug where PulseBlasters with no children wouldn't generate_code. Now we can compile connection tables where PulseBlasters have no children.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bug where Andor camera didn't work when its parent was not a PulseBlaster.\n\nThis was due to NI Cards not calling Device.generate_code after overriding that method. Device.generate_code simply calls generate_code on all child devices -- so since it wasn't being called, the Andor camera wasn't having its generate_code method called, and wasn't writing anything to the h5 file!", "markup": "markdown", "html": "<p>Fixed bug where Andor camera didn't work when its parent was not a PulseBlaster.</p>\n<p>This was due to NI Cards not calling Device.generate_code after overriding that method. Device.generate_code simply calls generate_code on all child devices -- so since it wasn't being called, the Andor camera wasn't having its generate_code method called, and wasn't writing anything to the h5 file!</p>", "type": "rendered"}}, "hash": "1270ee891124894e64143fdb11254c40b7257fc3", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/1270ee891124894e64143fdb11254c40b7257fc3.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/1270ee891124894e64143fdb11254c40b7257fc3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/1270ee891124894e64143fdb11254c40b7257fc3"}, "html": {"href": "#!/cbillington/labscript/commits/1270ee891124894e64143fdb11254c40b7257fc3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/1270ee891124894e64143fdb11254c40b7257fc3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/1270ee891124894e64143fdb11254c40b7257fc3/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/1270ee891124894e64143fdb11254c40b7257fc3/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed bug where Andor camera didn't work when its parent was not a PulseBlaster.\n\nThis was due to NI Cards not calling Device.generate_code after overriding that method. Device.generate_code simply calls generate_code on all child devices -- so since it wasn't being called, the Andor camera wasn't having its generate_code method called, and wasn't writing anything to the h5 file!", "markup": "markdown", "html": "<p>Fixed bug where Andor camera didn't work when its parent was not a PulseBlaster.</p>\n<p>This was due to NI Cards not calling Device.generate_code after overriding that method. Device.generate_code simply calls generate_code on all child devices -- so since it wasn't being called, the Andor camera wasn't having its generate_code method called, and wasn't writing anything to the h5 file!</p>", "type": "rendered"}, "parents": [{"hash": "6a9990d6ba3035da50bba22fcb85622098f081a6", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/6a9990d6ba3035da50bba22fcb85622098f081a6.json"}, "html": {"href": "#!/cbillington/labscript/commits/6a9990d6ba3035da50bba22fcb85622098f081a6"}}}], "date": "2011-11-04T00:50:31+00:00", "message": "Fixed bug where Andor camera didn't work when its parent was not a PulseBlaster.\n\nThis was due to NI Cards not calling Device.generate_code after overriding that method. Device.generate_code simply calls generate_code on all child devices -- so since it wasn't being called, the Andor camera wasn't having its generate_code method called, and wasn't writing anything to the h5 file!", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed small bugs in AndoriXon", "markup": "markdown", "html": "<p>Fixed small bugs in AndoriXon</p>", "type": "rendered"}}, "hash": "6a9990d6ba3035da50bba22fcb85622098f081a6", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/6a9990d6ba3035da50bba22fcb85622098f081a6.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/6a9990d6ba3035da50bba22fcb85622098f081a6/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/6a9990d6ba3035da50bba22fcb85622098f081a6"}, "html": {"href": "#!/cbillington/labscript/commits/6a9990d6ba3035da50bba22fcb85622098f081a6"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/6a9990d6ba3035da50bba22fcb85622098f081a6"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/6a9990d6ba3035da50bba22fcb85622098f081a6/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/6a9990d6ba3035da50bba22fcb85622098f081a6/statuses_page=1.json"}}, "author": {"raw": "shjohnst", "type": "author", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}}, "summary": {"raw": "Fixed small bugs in AndoriXon", "markup": "markdown", "html": "<p>Fixed small bugs in AndoriXon</p>", "type": "rendered"}, "parents": [{"hash": "61801e189a7f5c2588d3809c3a7f72849a410f01", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/61801e189a7f5c2588d3809c3a7f72849a410f01.json"}, "html": {"href": "#!/cbillington/labscript/commits/61801e189a7f5c2588d3809c3a7f72849a410f01"}}}], "date": "2011-11-04T00:43:46+00:00", "message": "Fixed small bugs in AndoriXon", "type": "commit"}, {"rendered": {"message": {"raw": "Now supports Andor iXon cameras. The AndoriXon class is a subclass of DigitalOut, and is instantiated with the same arguments. The parent device and connection should be  the device and connection for the digital output that triggers the camera's acquisition.\nThe class has a method trigger(t) which specifies that you want the digital line to go high at time t to trigger the acquisition.\nThe class has a bunch of methods set_SomeParameter for setting all the cameras settings.\nIf any of them aren't set, a warning is thrown and the default value is used.\nThe camera has its own group in the devices group of the h5 file, and its group contains a single dataset with its settings. There is no information stored here for what the digital line does, that info is contained in the group for whichever Pulseblaster or NI card the digital line is connected to.", "markup": "markdown", "html": "<p>Now supports Andor iXon cameras. The AndoriXon class is a subclass of DigitalOut, and is instantiated with the same arguments. The parent device and connection should be  the device and connection for the digital output that triggers the camera's acquisition.<br />\nThe class has a method trigger(t) which specifies that you want the digital line to go high at time t to trigger the acquisition.<br />\nThe class has a bunch of methods set_SomeParameter for setting all the cameras settings.<br />\nIf any of them aren't set, a warning is thrown and the default value is used.<br />\nThe camera has its own group in the devices group of the h5 file, and its group contains a single dataset with its settings. There is no information stored here for what the digital line does, that info is contained in the group for whichever Pulseblaster or NI card the digital line is connected to.</p>", "type": "rendered"}}, "hash": "61801e189a7f5c2588d3809c3a7f72849a410f01", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/61801e189a7f5c2588d3809c3a7f72849a410f01.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/61801e189a7f5c2588d3809c3a7f72849a410f01/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/61801e189a7f5c2588d3809c3a7f72849a410f01"}, "html": {"href": "#!/cbillington/labscript/commits/61801e189a7f5c2588d3809c3a7f72849a410f01"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/61801e189a7f5c2588d3809c3a7f72849a410f01"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/61801e189a7f5c2588d3809c3a7f72849a410f01/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/61801e189a7f5c2588d3809c3a7f72849a410f01/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Now supports Andor iXon cameras. The AndoriXon class is a subclass of DigitalOut, and is instantiated with the same arguments. The parent device and connection should be  the device and connection for the digital output that triggers the camera's acquisition.\nThe class has a method trigger(t) which specifies that you want the digital line to go high at time t to trigger the acquisition.\nThe class has a bunch of methods set_SomeParameter for setting all the cameras settings.\nIf any of them aren't set, a warning is thrown and the default value is used.\nThe camera has its own group in the devices group of the h5 file, and its group contains a single dataset with its settings. There is no information stored here for what the digital line does, that info is contained in the group for whichever Pulseblaster or NI card the digital line is connected to.", "markup": "markdown", "html": "<p>Now supports Andor iXon cameras. The AndoriXon class is a subclass of DigitalOut, and is instantiated with the same arguments. The parent device and connection should be  the device and connection for the digital output that triggers the camera's acquisition.<br />\nThe class has a method trigger(t) which specifies that you want the digital line to go high at time t to trigger the acquisition.<br />\nThe class has a bunch of methods set_SomeParameter for setting all the cameras settings.<br />\nIf any of them aren't set, a warning is thrown and the default value is used.<br />\nThe camera has its own group in the devices group of the h5 file, and its group contains a single dataset with its settings. There is no information stored here for what the digital line does, that info is contained in the group for whichever Pulseblaster or NI card the digital line is connected to.</p>", "type": "rendered"}, "parents": [{"hash": "4348aeab3c6580b6b678b2629c7270acbdd2ef93", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/4348aeab3c6580b6b678b2629c7270acbdd2ef93.json"}, "html": {"href": "#!/cbillington/labscript/commits/4348aeab3c6580b6b678b2629c7270acbdd2ef93"}}}], "date": "2011-11-02T06:08:23+00:00", "message": "Now supports Andor iXon cameras. The AndoriXon class is a subclass of DigitalOut, and is instantiated with the same arguments. The parent device and connection should be  the device and connection for the digital output that triggers the camera's acquisition.\nThe class has a method trigger(t) which specifies that you want the digital line to go high at time t to trigger the acquisition.\nThe class has a bunch of methods set_SomeParameter for setting all the cameras settings.\nIf any of them aren't set, a warning is thrown and the default value is used.\nThe camera has its own group in the devices group of the h5 file, and its group contains a single dataset with its settings. There is no information stored here for what the digital line does, that info is contained in the group for whichever Pulseblaster or NI card the digital line is connected to.", "type": "commit"}, {"rendered": {"message": {"raw": "Shutters now store their calibrations in a top level group called 'calibrations', then a subgroup called 'Shutter' (ie, the name of the class for shutter objects). This is how we should store all calibrations for devices, so that runviewer can use them to translate between hardware programming numbers and human written/readable numbers.\n\nWhilst the calibrations will almost certainly be stored in global variables most of the time, we don't want to define a naming convention or place any restrictions on how you should use globals, so this storing of calibrations is the final say on what calibrations actually got used at compile time.", "markup": "markdown", "html": "<p>Shutters now store their calibrations in a top level group called 'calibrations', then a subgroup called 'Shutter' (ie, the name of the class for shutter objects). This is how we should store all calibrations for devices, so that runviewer can use them to translate between hardware programming numbers and human written/readable numbers.</p>\n<p>Whilst the calibrations will almost certainly be stored in global variables most of the time, we don't want to define a naming convention or place any restrictions on how you should use globals, so this storing of calibrations is the final say on what calibrations actually got used at compile time.</p>", "type": "rendered"}}, "hash": "4348aeab3c6580b6b678b2629c7270acbdd2ef93", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/4348aeab3c6580b6b678b2629c7270acbdd2ef93.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/4348aeab3c6580b6b678b2629c7270acbdd2ef93/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/4348aeab3c6580b6b678b2629c7270acbdd2ef93"}, "html": {"href": "#!/cbillington/labscript/commits/4348aeab3c6580b6b678b2629c7270acbdd2ef93"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/4348aeab3c6580b6b678b2629c7270acbdd2ef93"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/4348aeab3c6580b6b678b2629c7270acbdd2ef93/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/4348aeab3c6580b6b678b2629c7270acbdd2ef93/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Shutters now store their calibrations in a top level group called 'calibrations', then a subgroup called 'Shutter' (ie, the name of the class for shutter objects). This is how we should store all calibrations for devices, so that runviewer can use them to translate between hardware programming numbers and human written/readable numbers.\n\nWhilst the calibrations will almost certainly be stored in global variables most of the time, we don't want to define a naming convention or place any restrictions on how you should use globals, so this storing of calibrations is the final say on what calibrations actually got used at compile time.", "markup": "markdown", "html": "<p>Shutters now store their calibrations in a top level group called 'calibrations', then a subgroup called 'Shutter' (ie, the name of the class for shutter objects). This is how we should store all calibrations for devices, so that runviewer can use them to translate between hardware programming numbers and human written/readable numbers.</p>\n<p>Whilst the calibrations will almost certainly be stored in global variables most of the time, we don't want to define a naming convention or place any restrictions on how you should use globals, so this storing of calibrations is the final say on what calibrations actually got used at compile time.</p>", "type": "rendered"}, "parents": [{"hash": "046029e2663f97d4671b876c85ec60b170afb2e1", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/046029e2663f97d4671b876c85ec60b170afb2e1.json"}, "html": {"href": "#!/cbillington/labscript/commits/046029e2663f97d4671b876c85ec60b170afb2e1"}}}], "date": "2011-10-18T03:36:29+00:00", "message": "Shutters now store their calibrations in a top level group called 'calibrations', then a subgroup called 'Shutter' (ie, the name of the class for shutter objects). This is how we should store all calibrations for devices, so that runviewer can use them to translate between hardware programming numbers and human written/readable numbers.\n\nWhilst the calibrations will almost certainly be stored in global variables most of the time, we don't want to define a naming convention or place any restrictions on how you should use globals, so this storing of calibrations is the final say on what calibrations actually got used at compile time.", "type": "commit"}, {"rendered": {"message": {"raw": "Runviewer now plots all the way to stop_time, rather than stopping on the last data point. This is possible because labscript now stores the stop_time as an attribute to the pulseblasters.", "markup": "markdown", "html": "<p>Runviewer now plots all the way to stop_time, rather than stopping on the last data point. This is possible because labscript now stores the stop_time as an attribute to the pulseblasters.</p>", "type": "rendered"}}, "hash": "046029e2663f97d4671b876c85ec60b170afb2e1", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/046029e2663f97d4671b876c85ec60b170afb2e1.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/046029e2663f97d4671b876c85ec60b170afb2e1/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/046029e2663f97d4671b876c85ec60b170afb2e1"}, "html": {"href": "#!/cbillington/labscript/commits/046029e2663f97d4671b876c85ec60b170afb2e1"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/046029e2663f97d4671b876c85ec60b170afb2e1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/046029e2663f97d4671b876c85ec60b170afb2e1/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/046029e2663f97d4671b876c85ec60b170afb2e1/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Runviewer now plots all the way to stop_time, rather than stopping on the last data point. This is possible because labscript now stores the stop_time as an attribute to the pulseblasters.", "markup": "markdown", "html": "<p>Runviewer now plots all the way to stop_time, rather than stopping on the last data point. This is possible because labscript now stores the stop_time as an attribute to the pulseblasters.</p>", "type": "rendered"}, "parents": [{"hash": "e8e10b57919ad68bd855c000ff3c5553a153106f", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/e8e10b57919ad68bd855c000ff3c5553a153106f.json"}, "html": {"href": "#!/cbillington/labscript/commits/e8e10b57919ad68bd855c000ff3c5553a153106f"}}}], "date": "2011-10-17T23:36:50+00:00", "message": "Runviewer now plots all the way to stop_time, rather than stopping on the last data point. This is possible because labscript now stores the stop_time as an attribute to the pulseblasters.", "type": "commit"}, {"rendered": {"message": {"raw": "Now supports nothing happening for longer than 2^32 clock cycles (about 57 seconds) through use of LONG_DELAY PulseBlaster instructions.", "markup": "markdown", "html": "<p>Now supports nothing happening for longer than 2^32 clock cycles (about 57 seconds) through use of LONG_DELAY PulseBlaster instructions.</p>", "type": "rendered"}}, "hash": "e8e10b57919ad68bd855c000ff3c5553a153106f", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/e8e10b57919ad68bd855c000ff3c5553a153106f.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/e8e10b57919ad68bd855c000ff3c5553a153106f/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/e8e10b57919ad68bd855c000ff3c5553a153106f"}, "html": {"href": "#!/cbillington/labscript/commits/e8e10b57919ad68bd855c000ff3c5553a153106f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/e8e10b57919ad68bd855c000ff3c5553a153106f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/e8e10b57919ad68bd855c000ff3c5553a153106f/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/e8e10b57919ad68bd855c000ff3c5553a153106f/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Now supports nothing happening for longer than 2^32 clock cycles (about 57 seconds) through use of LONG_DELAY PulseBlaster instructions.", "markup": "markdown", "html": "<p>Now supports nothing happening for longer than 2^32 clock cycles (about 57 seconds) through use of LONG_DELAY PulseBlaster instructions.</p>", "type": "rendered"}, "parents": [{"hash": "878798ca1b0ea60e84bb215bddbfd0bb326b9855", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/878798ca1b0ea60e84bb215bddbfd0bb326b9855.json"}, "html": {"href": "#!/cbillington/labscript/commits/878798ca1b0ea60e84bb215bddbfd0bb326b9855"}}}], "date": "2011-10-17T09:14:08+00:00", "message": "Now supports nothing happening for longer than 2^32 clock cycles (about 57 seconds) through use of LONG_DELAY PulseBlaster instructions.", "type": "commit"}, {"rendered": {"message": {"raw": "Novatech DDSs can now use static mode too -- the two DDS outputs that don't support table mode. A new device class was made called StaticDDS, with methods to set phase, amp and freq. These should be instantiated as normal, as a child of the Novatech device, and with connection being set to 'channel 2' or 3.", "markup": "markdown", "html": "<p>Novatech DDSs can now use static mode too -- the two DDS outputs that don't support table mode. A new device class was made called StaticDDS, with methods to set phase, amp and freq. These should be instantiated as normal, as a child of the Novatech device, and with connection being set to 'channel 2' or 3.</p>", "type": "rendered"}}, "hash": "878798ca1b0ea60e84bb215bddbfd0bb326b9855", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/878798ca1b0ea60e84bb215bddbfd0bb326b9855.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/878798ca1b0ea60e84bb215bddbfd0bb326b9855/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/878798ca1b0ea60e84bb215bddbfd0bb326b9855"}, "html": {"href": "#!/cbillington/labscript/commits/878798ca1b0ea60e84bb215bddbfd0bb326b9855"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/878798ca1b0ea60e84bb215bddbfd0bb326b9855"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/878798ca1b0ea60e84bb215bddbfd0bb326b9855/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/878798ca1b0ea60e84bb215bddbfd0bb326b9855/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Novatech DDSs can now use static mode too -- the two DDS outputs that don't support table mode. A new device class was made called StaticDDS, with methods to set phase, amp and freq. These should be instantiated as normal, as a child of the Novatech device, and with connection being set to 'channel 2' or 3.", "markup": "markdown", "html": "<p>Novatech DDSs can now use static mode too -- the two DDS outputs that don't support table mode. A new device class was made called StaticDDS, with methods to set phase, amp and freq. These should be instantiated as normal, as a child of the Novatech device, and with connection being set to 'channel 2' or 3.</p>", "type": "rendered"}, "parents": [{"hash": "7485bffd30f59cca1b58e4b0d4684f39d9d6c3cd", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/7485bffd30f59cca1b58e4b0d4684f39d9d6c3cd.json"}, "html": {"href": "#!/cbillington/labscript/commits/7485bffd30f59cca1b58e4b0d4684f39d9d6c3cd"}}}], "date": "2011-10-14T06:51:20+00:00", "message": "Novatech DDSs can now use static mode too -- the two DDS outputs that don't support table mode. A new device class was made called StaticDDS, with methods to set phase, amp and freq. These should be instantiated as normal, as a child of the Novatech device, and with connection being set to 'channel 2' or 3.", "type": "commit"}, {"rendered": {"message": {"raw": "Now creates both DDS groups for pulseblasters, regardless of whether the DDS is used.", "markup": "markdown", "html": "<p>Now creates both DDS groups for pulseblasters, regardless of whether the DDS is used.</p>", "type": "rendered"}}, "hash": "7485bffd30f59cca1b58e4b0d4684f39d9d6c3cd", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/7485bffd30f59cca1b58e4b0d4684f39d9d6c3cd.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/7485bffd30f59cca1b58e4b0d4684f39d9d6c3cd/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/7485bffd30f59cca1b58e4b0d4684f39d9d6c3cd"}, "html": {"href": "#!/cbillington/labscript/commits/7485bffd30f59cca1b58e4b0d4684f39d9d6c3cd"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/7485bffd30f59cca1b58e4b0d4684f39d9d6c3cd"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/7485bffd30f59cca1b58e4b0d4684f39d9d6c3cd/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/7485bffd30f59cca1b58e4b0d4684f39d9d6c3cd/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Now creates both DDS groups for pulseblasters, regardless of whether the DDS is used.", "markup": "markdown", "html": "<p>Now creates both DDS groups for pulseblasters, regardless of whether the DDS is used.</p>", "type": "rendered"}, "parents": [{"hash": "fdab2f0458b4c0879ee95a71a0de26f16c62a26b", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/fdab2f0458b4c0879ee95a71a0de26f16c62a26b.json"}, "html": {"href": "#!/cbillington/labscript/commits/fdab2f0458b4c0879ee95a71a0de26f16c62a26b"}}}], "date": "2011-10-12T00:43:13+00:00", "message": "Now creates both DDS groups for pulseblasters, regardless of whether the DDS is used.", "type": "commit"}, {"rendered": {"message": {"raw": "Runmanager starting to support launching runviewer. Runviewer now supports pulseblasters (flags only so far). This support required a change in labscript, so won't work for plotting h5 files compiled before this change.", "markup": "markdown", "html": "<p>Runmanager starting to support launching runviewer. Runviewer now supports pulseblasters (flags only so far). This support required a change in labscript, so won't work for plotting h5 files compiled before this change.</p>", "type": "rendered"}}, "hash": "fdab2f0458b4c0879ee95a71a0de26f16c62a26b", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/fdab2f0458b4c0879ee95a71a0de26f16c62a26b.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/fdab2f0458b4c0879ee95a71a0de26f16c62a26b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/fdab2f0458b4c0879ee95a71a0de26f16c62a26b"}, "html": {"href": "#!/cbillington/labscript/commits/fdab2f0458b4c0879ee95a71a0de26f16c62a26b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/fdab2f0458b4c0879ee95a71a0de26f16c62a26b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/fdab2f0458b4c0879ee95a71a0de26f16c62a26b/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/fdab2f0458b4c0879ee95a71a0de26f16c62a26b/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Runmanager starting to support launching runviewer. Runviewer now supports pulseblasters (flags only so far). This support required a change in labscript, so won't work for plotting h5 files compiled before this change.", "markup": "markdown", "html": "<p>Runmanager starting to support launching runviewer. Runviewer now supports pulseblasters (flags only so far). This support required a change in labscript, so won't work for plotting h5 files compiled before this change.</p>", "type": "rendered"}, "parents": [{"hash": "1bedbe6047590ffd20bfa7ad9cbafe26c140ea6a", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/1bedbe6047590ffd20bfa7ad9cbafe26c140ea6a.json"}, "html": {"href": "#!/cbillington/labscript/commits/1bedbe6047590ffd20bfa7ad9cbafe26c140ea6a"}}}], "date": "2011-10-12T00:19:05+00:00", "message": "Runmanager starting to support launching runviewer. Runviewer now supports pulseblasters (flags only so far). This support required a change in labscript, so won't work for plotting h5 files compiled before this change.", "type": "commit"}, {"rendered": {"message": {"raw": "Implements feature #298", "markup": "markdown", "html": "<p>Implements feature #298</p>", "type": "rendered"}}, "hash": "1bedbe6047590ffd20bfa7ad9cbafe26c140ea6a", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/1bedbe6047590ffd20bfa7ad9cbafe26c140ea6a.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/1bedbe6047590ffd20bfa7ad9cbafe26c140ea6a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/1bedbe6047590ffd20bfa7ad9cbafe26c140ea6a"}, "html": {"href": "#!/cbillington/labscript/commits/1bedbe6047590ffd20bfa7ad9cbafe26c140ea6a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/1bedbe6047590ffd20bfa7ad9cbafe26c140ea6a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/1bedbe6047590ffd20bfa7ad9cbafe26c140ea6a/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/1bedbe6047590ffd20bfa7ad9cbafe26c140ea6a/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Implements feature #298", "markup": "markdown", "html": "<p>Implements feature #298</p>", "type": "rendered"}, "parents": [{"hash": "cf1cc3d9fe7f33c3dc17aea7b01e46101f062917", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/cf1cc3d9fe7f33c3dc17aea7b01e46101f062917.json"}, "html": {"href": "#!/cbillington/labscript/commits/cf1cc3d9fe7f33c3dc17aea7b01e46101f062917"}}}], "date": "2011-10-10T00:50:31+00:00", "message": "Implements feature #298", "type": "commit"}, {"rendered": {"message": {"raw": "updated path within h5 file", "markup": "markdown", "html": "<p>updated path within h5 file</p>", "type": "rendered"}}, "hash": "cf1cc3d9fe7f33c3dc17aea7b01e46101f062917", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/cf1cc3d9fe7f33c3dc17aea7b01e46101f062917.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/cf1cc3d9fe7f33c3dc17aea7b01e46101f062917/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/cf1cc3d9fe7f33c3dc17aea7b01e46101f062917"}, "html": {"href": "#!/cbillington/labscript/commits/cf1cc3d9fe7f33c3dc17aea7b01e46101f062917"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/cf1cc3d9fe7f33c3dc17aea7b01e46101f062917"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/cf1cc3d9fe7f33c3dc17aea7b01e46101f062917/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/cf1cc3d9fe7f33c3dc17aea7b01e46101f062917/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "updated path within h5 file", "markup": "markdown", "html": "<p>updated path within h5 file</p>", "type": "rendered"}, "parents": [{"hash": "c9a9db9e95643070d4d8542b9a87a06a5eb2cda3", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/c9a9db9e95643070d4d8542b9a87a06a5eb2cda3.json"}, "html": {"href": "#!/cbillington/labscript/commits/c9a9db9e95643070d4d8542b9a87a06a5eb2cda3"}}}], "date": "2011-10-05T00:06:04+00:00", "message": "updated path within h5 file", "type": "commit"}, {"rendered": {"message": {"raw": "Moved Pulsblaster Programming API to the hardware_programming folder. We now have a hardware_programming module!\n\nAdded a function to the pulseblaster code to program from a H5 file and a pulseblaster number. Added phase and enable code to all functions!\n\nChanged the way spinapi is imported.", "markup": "markdown", "html": "<p>Moved Pulsblaster Programming API to the hardware_programming folder. We now have a hardware_programming module!</p>\n<p>Added a function to the pulseblaster code to program from a H5 file and a pulseblaster number. Added phase and enable code to all functions!</p>\n<p>Changed the way spinapi is imported.</p>", "type": "rendered"}}, "hash": "c9a9db9e95643070d4d8542b9a87a06a5eb2cda3", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/c9a9db9e95643070d4d8542b9a87a06a5eb2cda3.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/c9a9db9e95643070d4d8542b9a87a06a5eb2cda3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/c9a9db9e95643070d4d8542b9a87a06a5eb2cda3"}, "html": {"href": "#!/cbillington/labscript/commits/c9a9db9e95643070d4d8542b9a87a06a5eb2cda3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/c9a9db9e95643070d4d8542b9a87a06a5eb2cda3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/c9a9db9e95643070d4d8542b9a87a06a5eb2cda3/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/c9a9db9e95643070d4d8542b9a87a06a5eb2cda3/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Moved Pulsblaster Programming API to the hardware_programming folder. We now have a hardware_programming module!\n\nAdded a function to the pulseblaster code to program from a H5 file and a pulseblaster number. Added phase and enable code to all functions!\n\nChanged the way spinapi is imported.", "markup": "markdown", "html": "<p>Moved Pulsblaster Programming API to the hardware_programming folder. We now have a hardware_programming module!</p>\n<p>Added a function to the pulseblaster code to program from a H5 file and a pulseblaster number. Added phase and enable code to all functions!</p>\n<p>Changed the way spinapi is imported.</p>", "type": "rendered"}, "parents": [{"hash": "55899fa823999d568ed3fa8d5e78b7bc8437bc86", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/55899fa823999d568ed3fa8d5e78b7bc8437bc86.json"}, "html": {"href": "#!/cbillington/labscript/commits/55899fa823999d568ed3fa8d5e78b7bc8437bc86"}}}], "date": "2011-10-03T07:23:10+00:00", "message": "Moved Pulsblaster Programming API to the hardware_programming folder. We now have a hardware_programming module!\n\nAdded a function to the pulseblaster code to program from a H5 file and a pulseblaster number. Added phase and enable code to all functions!\n\nChanged the way spinapi is imported.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bug where digital outputs on lines >= 8 were ignored. This was due to the fact than when a uint8 is shifted by more than 8 bits, python gives zero, rather than typecasting. So now the raw ones and zeros are stored as 32 bit ints, so they can be bitshifted further.", "markup": "markdown", "html": "<p>Fixed bug where digital outputs on lines &gt;= 8 were ignored. This was due to the fact than when a uint8 is shifted by more than 8 bits, python gives zero, rather than typecasting. So now the raw ones and zeros are stored as 32 bit ints, so they can be bitshifted further.</p>", "type": "rendered"}}, "hash": "55899fa823999d568ed3fa8d5e78b7bc8437bc86", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/55899fa823999d568ed3fa8d5e78b7bc8437bc86.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/55899fa823999d568ed3fa8d5e78b7bc8437bc86/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/55899fa823999d568ed3fa8d5e78b7bc8437bc86"}, "html": {"href": "#!/cbillington/labscript/commits/55899fa823999d568ed3fa8d5e78b7bc8437bc86"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/55899fa823999d568ed3fa8d5e78b7bc8437bc86"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/55899fa823999d568ed3fa8d5e78b7bc8437bc86/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/55899fa823999d568ed3fa8d5e78b7bc8437bc86/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed bug where digital outputs on lines >= 8 were ignored. This was due to the fact than when a uint8 is shifted by more than 8 bits, python gives zero, rather than typecasting. So now the raw ones and zeros are stored as 32 bit ints, so they can be bitshifted further.", "markup": "markdown", "html": "<p>Fixed bug where digital outputs on lines &gt;= 8 were ignored. This was due to the fact than when a uint8 is shifted by more than 8 bits, python gives zero, rather than typecasting. So now the raw ones and zeros are stored as 32 bit ints, so they can be bitshifted further.</p>", "type": "rendered"}, "parents": [{"hash": "c41468993b2aec1cea034442c11d6978e626fd8b", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/c41468993b2aec1cea034442c11d6978e626fd8b.json"}, "html": {"href": "#!/cbillington/labscript/commits/c41468993b2aec1cea034442c11d6978e626fd8b"}}}], "date": "2011-09-30T05:17:25+00:00", "message": "Fixed bug where digital outputs on lines >= 8 were ignored. This was due to the fact than when a uint8 is shifted by more than 8 bits, python gives zero, rather than typecasting. So now the raw ones and zeros are stored as 32 bit ints, so they can be bitshifted further.", "type": "commit"}, {"rendered": {"message": {"raw": "Created the RCP package, containing the moduleserver module. This is just a short script that takes a module name and port number as an argument. The script starts an XML RCP server which serves all the functions in that module, on the given port.\nFor example\npython -m RCP.moduleserver spinapi 8000\nwill serve all the functions in the spinapi module on port 8000.", "markup": "markdown", "html": "<p>Created the RCP package, containing the moduleserver module. This is just a short script that takes a module name and port number as an argument. The script starts an XML RCP server which serves all the functions in that module, on the given port.<br />\nFor example<br />\npython -m RCP.moduleserver spinapi 8000<br />\nwill serve all the functions in the spinapi module on port 8000.</p>", "type": "rendered"}}, "hash": "c41468993b2aec1cea034442c11d6978e626fd8b", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/c41468993b2aec1cea034442c11d6978e626fd8b.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/c41468993b2aec1cea034442c11d6978e626fd8b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/c41468993b2aec1cea034442c11d6978e626fd8b"}, "html": {"href": "#!/cbillington/labscript/commits/c41468993b2aec1cea034442c11d6978e626fd8b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/c41468993b2aec1cea034442c11d6978e626fd8b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/c41468993b2aec1cea034442c11d6978e626fd8b/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/c41468993b2aec1cea034442c11d6978e626fd8b/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Created the RCP package, containing the moduleserver module. This is just a short script that takes a module name and port number as an argument. The script starts an XML RCP server which serves all the functions in that module, on the given port.\nFor example\npython -m RCP.moduleserver spinapi 8000\nwill serve all the functions in the spinapi module on port 8000.", "markup": "markdown", "html": "<p>Created the RCP package, containing the moduleserver module. This is just a short script that takes a module name and port number as an argument. The script starts an XML RCP server which serves all the functions in that module, on the given port.<br />\nFor example<br />\npython -m RCP.moduleserver spinapi 8000<br />\nwill serve all the functions in the spinapi module on port 8000.</p>", "type": "rendered"}, "parents": [{"hash": "a274966f90acbd87de77495887ba40dc61ad7d70", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/a274966f90acbd87de77495887ba40dc61ad7d70.json"}, "html": {"href": "#!/cbillington/labscript/commits/a274966f90acbd87de77495887ba40dc61ad7d70"}}}], "date": "2011-09-14T11:29:52+00:00", "message": "Created the RCP package, containing the moduleserver module. This is just a short script that takes a module name and port number as an argument. The script starts an XML RCP server which serves all the functions in that module, on the given port.\nFor example\npython -m RCP.moduleserver spinapi 8000\nwill serve all the functions in the spinapi module on port 8000.", "type": "commit"}, {"rendered": {"message": {"raw": "pulseblaster programming moved into its own module. Also modified so that the main function is called as a Python function instead of taking input from command line args and outputting to stdout. This way we can use the script from a LabVIEW script node, like:\nimport pulseblaster\nfinal states = pulseblaster.program_all_pulseblasters(h5_file, initial_states)", "markup": "markdown", "html": "<p>pulseblaster programming moved into its own module. Also modified so that the main function is called as a Python function instead of taking input from command line args and outputting to stdout. This way we can use the script from a LabVIEW script node, like:<br />\nimport pulseblaster<br />\nfinal states = pulseblaster.program_all_pulseblasters(h5_file, initial_states)</p>", "type": "rendered"}}, "hash": "a274966f90acbd87de77495887ba40dc61ad7d70", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/a274966f90acbd87de77495887ba40dc61ad7d70.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/a274966f90acbd87de77495887ba40dc61ad7d70/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/a274966f90acbd87de77495887ba40dc61ad7d70"}, "html": {"href": "#!/cbillington/labscript/commits/a274966f90acbd87de77495887ba40dc61ad7d70"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/a274966f90acbd87de77495887ba40dc61ad7d70"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/a274966f90acbd87de77495887ba40dc61ad7d70/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/a274966f90acbd87de77495887ba40dc61ad7d70/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "pulseblaster programming moved into its own module. Also modified so that the main function is called as a Python function instead of taking input from command line args and outputting to stdout. This way we can use the script from a LabVIEW script node, like:\nimport pulseblaster\nfinal states = pulseblaster.program_all_pulseblasters(h5_file, initial_states)", "markup": "markdown", "html": "<p>pulseblaster programming moved into its own module. Also modified so that the main function is called as a Python function instead of taking input from command line args and outputting to stdout. This way we can use the script from a LabVIEW script node, like:<br />\nimport pulseblaster<br />\nfinal states = pulseblaster.program_all_pulseblasters(h5_file, initial_states)</p>", "type": "rendered"}, "parents": [{"hash": "17297e96ab008051403ec01dfc5e78cf860c9cec", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/17297e96ab008051403ec01dfc5e78cf860c9cec.json"}, "html": {"href": "#!/cbillington/labscript/commits/17297e96ab008051403ec01dfc5e78cf860c9cec"}}}], "date": "2011-09-12T02:14:36+00:00", "message": "pulseblaster programming moved into its own module. Also modified so that the main function is called as a Python function instead of taking input from command line args and outputting to stdout. This way we can use the script from a LabVIEW script node, like:\nimport pulseblaster\nfinal states = pulseblaster.program_all_pulseblasters(h5_file, initial_states)", "type": "commit"}, {"rendered": {"message": {"raw": "deleted calibrations.h5", "markup": "markdown", "html": "<p>deleted calibrations.h5</p>", "type": "rendered"}}, "hash": "17297e96ab008051403ec01dfc5e78cf860c9cec", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/17297e96ab008051403ec01dfc5e78cf860c9cec.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/17297e96ab008051403ec01dfc5e78cf860c9cec/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/17297e96ab008051403ec01dfc5e78cf860c9cec"}, "html": {"href": "#!/cbillington/labscript/commits/17297e96ab008051403ec01dfc5e78cf860c9cec"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/17297e96ab008051403ec01dfc5e78cf860c9cec"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/17297e96ab008051403ec01dfc5e78cf860c9cec/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/17297e96ab008051403ec01dfc5e78cf860c9cec/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "deleted calibrations.h5", "markup": "markdown", "html": "<p>deleted calibrations.h5</p>", "type": "rendered"}, "parents": [{"hash": "1349d3740f00433101bef4d6cba6674ad6fc5b6a", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/1349d3740f00433101bef4d6cba6674ad6fc5b6a.json"}, "html": {"href": "#!/cbillington/labscript/commits/1349d3740f00433101bef4d6cba6674ad6fc5b6a"}}}], "date": "2011-09-08T08:58:49+00:00", "message": "deleted calibrations.h5", "type": "commit"}, {"rendered": {"message": {"raw": "pulseblaster.py fixed up -- appears to work now. It takes as command line arguments the initial amplitudes and frequencies of the DDSs of all pulseblasters, and it prints to stdout the final frequencies and amplitudes for use by LabVIEW in maintaining output continuity.\n\nusege:\n\npython pulseblaster.py dds0initamp dds0initfreq dds1initamp dds1initfreq runfile.h5\n\nThis will return:\n\ndds0finalamp dds0finalfreq dds1finalamp dds1finalfreq.\n\nIf there is more than one pulesblaster, simply add another four arguments for each one, before the h5 file.\n\nFrequencies in MHz, amplitudes from 0 to 1.", "markup": "markdown", "html": "<p>pulseblaster.py fixed up -- appears to work now. It takes as command line arguments the initial amplitudes and frequencies of the DDSs of all pulseblasters, and it prints to stdout the final frequencies and amplitudes for use by LabVIEW in maintaining output continuity.</p>\n<p>usege:</p>\n<p>python pulseblaster.py dds0initamp dds0initfreq dds1initamp dds1initfreq runfile.h5</p>\n<p>This will return:</p>\n<p>dds0finalamp dds0finalfreq dds1finalamp dds1finalfreq.</p>\n<p>If there is more than one pulesblaster, simply add another four arguments for each one, before the h5 file.</p>\n<p>Frequencies in MHz, amplitudes from 0 to 1.</p>", "type": "rendered"}}, "hash": "1349d3740f00433101bef4d6cba6674ad6fc5b6a", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/1349d3740f00433101bef4d6cba6674ad6fc5b6a.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/1349d3740f00433101bef4d6cba6674ad6fc5b6a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/1349d3740f00433101bef4d6cba6674ad6fc5b6a"}, "html": {"href": "#!/cbillington/labscript/commits/1349d3740f00433101bef4d6cba6674ad6fc5b6a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/1349d3740f00433101bef4d6cba6674ad6fc5b6a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/1349d3740f00433101bef4d6cba6674ad6fc5b6a/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/1349d3740f00433101bef4d6cba6674ad6fc5b6a/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "pulseblaster.py fixed up -- appears to work now. It takes as command line arguments the initial amplitudes and frequencies of the DDSs of all pulseblasters, and it prints to stdout the final frequencies and amplitudes for use by LabVIEW in maintaining output continuity.\n\nusege:\n\npython pulseblaster.py dds0initamp dds0initfreq dds1initamp dds1initfreq runfile.h5\n\nThis will return:\n\ndds0finalamp dds0finalfreq dds1finalamp dds1finalfreq.\n\nIf there is more than one pulesblaster, simply add another four arguments for each one, before the h5 file.\n\nFrequencies in MHz, amplitudes from 0 to 1.", "markup": "markdown", "html": "<p>pulseblaster.py fixed up -- appears to work now. It takes as command line arguments the initial amplitudes and frequencies of the DDSs of all pulseblasters, and it prints to stdout the final frequencies and amplitudes for use by LabVIEW in maintaining output continuity.</p>\n<p>usege:</p>\n<p>python pulseblaster.py dds0initamp dds0initfreq dds1initamp dds1initfreq runfile.h5</p>\n<p>This will return:</p>\n<p>dds0finalamp dds0finalfreq dds1finalamp dds1finalfreq.</p>\n<p>If there is more than one pulesblaster, simply add another four arguments for each one, before the h5 file.</p>\n<p>Frequencies in MHz, amplitudes from 0 to 1.</p>", "type": "rendered"}, "parents": [{"hash": "5c96d081bb86b18e931ba913e5b7be8d32e0047a", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/5c96d081bb86b18e931ba913e5b7be8d32e0047a.json"}, "html": {"href": "#!/cbillington/labscript/commits/5c96d081bb86b18e931ba913e5b7be8d32e0047a"}}}], "date": "2011-09-08T08:55:21+00:00", "message": "pulseblaster.py fixed up -- appears to work now. It takes as command line arguments the initial amplitudes and frequencies of the DDSs of all pulseblasters, and it prints to stdout the final frequencies and amplitudes for use by LabVIEW in maintaining output continuity.\n\nusege:\n\npython pulseblaster.py dds0initamp dds0initfreq dds1initamp dds1initfreq runfile.h5\n\nThis will return:\n\ndds0finalamp dds0finalfreq dds1finalamp dds1finalfreq.\n\nIf there is more than one pulesblaster, simply add another four arguments for each one, before the h5 file.\n\nFrequencies in MHz, amplitudes from 0 to 1.", "type": "commit"}, {"rendered": {"message": {"raw": "pulseblaster.py should now program all the DDS functionality for an arbitrary number of pulseblasters. It hasn't been tested though, and probably needs much work still.", "markup": "markdown", "html": "<p>pulseblaster.py should now program all the DDS functionality for an arbitrary number of pulseblasters. It hasn't been tested though, and probably needs much work still.</p>", "type": "rendered"}}, "hash": "5c96d081bb86b18e931ba913e5b7be8d32e0047a", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/5c96d081bb86b18e931ba913e5b7be8d32e0047a.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/5c96d081bb86b18e931ba913e5b7be8d32e0047a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/5c96d081bb86b18e931ba913e5b7be8d32e0047a"}, "html": {"href": "#!/cbillington/labscript/commits/5c96d081bb86b18e931ba913e5b7be8d32e0047a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/5c96d081bb86b18e931ba913e5b7be8d32e0047a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/5c96d081bb86b18e931ba913e5b7be8d32e0047a/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/5c96d081bb86b18e931ba913e5b7be8d32e0047a/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "pulseblaster.py should now program all the DDS functionality for an arbitrary number of pulseblasters. It hasn't been tested though, and probably needs much work still.", "markup": "markdown", "html": "<p>pulseblaster.py should now program all the DDS functionality for an arbitrary number of pulseblasters. It hasn't been tested though, and probably needs much work still.</p>", "type": "rendered"}, "parents": [{"hash": "aaec9b541b04e95d28d361a026109c6a59602a57", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/aaec9b541b04e95d28d361a026109c6a59602a57.json"}, "html": {"href": "#!/cbillington/labscript/commits/aaec9b541b04e95d28d361a026109c6a59602a57"}}}], "date": "2011-09-08T07:40:16+00:00", "message": "pulseblaster.py should now program all the DDS functionality for an arbitrary number of pulseblasters. It hasn't been tested though, and probably needs much work still.", "type": "commit"}, {"rendered": {"message": {"raw": "Removed spinconfig and spinapi. These will now have their own system wide install so that pypulse and labscript don't have to bundle them.", "markup": "markdown", "html": "<p>Removed spinconfig and spinapi. These will now have their own system wide install so that pypulse and labscript don't have to bundle them.</p>", "type": "rendered"}}, "hash": "aaec9b541b04e95d28d361a026109c6a59602a57", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/aaec9b541b04e95d28d361a026109c6a59602a57.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/aaec9b541b04e95d28d361a026109c6a59602a57/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/aaec9b541b04e95d28d361a026109c6a59602a57"}, "html": {"href": "#!/cbillington/labscript/commits/aaec9b541b04e95d28d361a026109c6a59602a57"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/aaec9b541b04e95d28d361a026109c6a59602a57"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/aaec9b541b04e95d28d361a026109c6a59602a57/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/aaec9b541b04e95d28d361a026109c6a59602a57/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Removed spinconfig and spinapi. These will now have their own system wide install so that pypulse and labscript don't have to bundle them.", "markup": "markdown", "html": "<p>Removed spinconfig and spinapi. These will now have their own system wide install so that pypulse and labscript don't have to bundle them.</p>", "type": "rendered"}, "parents": [{"hash": "6b8e76b9fbb0ac86b84bf92313fcb45e55d1850c", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/6b8e76b9fbb0ac86b84bf92313fcb45e55d1850c.json"}, "html": {"href": "#!/cbillington/labscript/commits/6b8e76b9fbb0ac86b84bf92313fcb45e55d1850c"}}}], "date": "2011-09-08T05:21:31+00:00", "message": "Removed spinconfig and spinapi. These will now have their own system wide install so that pypulse and labscript don't have to bundle them.", "type": "commit"}, {"rendered": {"message": {"raw": "Oooh just realised a bug after the last commit. I added the dummy values to the *sets* of amp, phase and freq registers, and the dummy values were all equal to zero. So if zero was already in there, this did nothing. And then when LabVIEW overwrote the dummy instructions with the state of the front panel, it would have caused all subsequent references to that register to be possibly nonzero.\n\nSo later parts of the pulse program requesting a zero value would point to these registers and the result could be any value at all. Bad.\n\nSo I've changed it now so that the zero gets added in explicitly.", "markup": "markdown", "html": "<p>Oooh just realised a bug after the last commit. I added the dummy values to the <em>sets</em> of amp, phase and freq registers, and the dummy values were all equal to zero. So if zero was already in there, this did nothing. And then when LabVIEW overwrote the dummy instructions with the state of the front panel, it would have caused all subsequent references to that register to be possibly nonzero.</p>\n<p>So later parts of the pulse program requesting a zero value would point to these registers and the result could be any value at all. Bad.</p>\n<p>So I've changed it now so that the zero gets added in explicitly.</p>", "type": "rendered"}}, "hash": "6b8e76b9fbb0ac86b84bf92313fcb45e55d1850c", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/6b8e76b9fbb0ac86b84bf92313fcb45e55d1850c.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/6b8e76b9fbb0ac86b84bf92313fcb45e55d1850c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/6b8e76b9fbb0ac86b84bf92313fcb45e55d1850c"}, "html": {"href": "#!/cbillington/labscript/commits/6b8e76b9fbb0ac86b84bf92313fcb45e55d1850c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/6b8e76b9fbb0ac86b84bf92313fcb45e55d1850c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/6b8e76b9fbb0ac86b84bf92313fcb45e55d1850c/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/6b8e76b9fbb0ac86b84bf92313fcb45e55d1850c/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Oooh just realised a bug after the last commit. I added the dummy values to the *sets* of amp, phase and freq registers, and the dummy values were all equal to zero. So if zero was already in there, this did nothing. And then when LabVIEW overwrote the dummy instructions with the state of the front panel, it would have caused all subsequent references to that register to be possibly nonzero.\n\nSo later parts of the pulse program requesting a zero value would point to these registers and the result could be any value at all. Bad.\n\nSo I've changed it now so that the zero gets added in explicitly.", "markup": "markdown", "html": "<p>Oooh just realised a bug after the last commit. I added the dummy values to the <em>sets</em> of amp, phase and freq registers, and the dummy values were all equal to zero. So if zero was already in there, this did nothing. And then when LabVIEW overwrote the dummy instructions with the state of the front panel, it would have caused all subsequent references to that register to be possibly nonzero.</p>\n<p>So later parts of the pulse program requesting a zero value would point to these registers and the result could be any value at all. Bad.</p>\n<p>So I've changed it now so that the zero gets added in explicitly.</p>", "type": "rendered"}, "parents": [{"hash": "6d5b1f9789381b58bce4158157d8ed48fac473be", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/6d5b1f9789381b58bce4158157d8ed48fac473be.json"}, "html": {"href": "#!/cbillington/labscript/commits/6d5b1f9789381b58bce4158157d8ed48fac473be"}}}], "date": "2011-09-06T13:52:33+00:00", "message": "Oooh just realised a bug after the last commit. I added the dummy values to the *sets* of amp, phase and freq registers, and the dummy values were all equal to zero. So if zero was already in there, this did nothing. And then when LabVIEW overwrote the dummy instructions with the state of the front panel, it would have caused all subsequent references to that register to be possibly nonzero.\n\nSo later parts of the pulse program requesting a zero value would point to these registers and the result could be any value at all. Bad.\n\nSo I've changed it now so that the zero gets added in explicitly.", "type": "commit"}, {"rendered": {"message": {"raw": "PulseBlaster DDSs now work. You can create a DDS object, declare its parent to be a pulseblaster, and set its amplitude, freq and phase as with the existing DDS objects.\n\nThe ranges are checked, and the number of registers are checked such that labscript will throw an error if an out of bounds value is requested or the allowed number of registers is exceeded. Note that I've hardcoded the register limits for the new firmware -- the old firmware has much lower limits and labscript will not throw an error if they are exceeded.\n\nIf anyone is actually going to use one of the old boards for its DDS output, I can put the error checking in easily enough, and maybe make the firmware version an argument to the creation of a PulseBlaster object. But I won't bother unless they're actually in use.", "markup": "markdown", "html": "<p>PulseBlaster DDSs now work. You can create a DDS object, declare its parent to be a pulseblaster, and set its amplitude, freq and phase as with the existing DDS objects.</p>\n<p>The ranges are checked, and the number of registers are checked such that labscript will throw an error if an out of bounds value is requested or the allowed number of registers is exceeded. Note that I've hardcoded the register limits for the new firmware -- the old firmware has much lower limits and labscript will not throw an error if they are exceeded.</p>\n<p>If anyone is actually going to use one of the old boards for its DDS output, I can put the error checking in easily enough, and maybe make the firmware version an argument to the creation of a PulseBlaster object. But I won't bother unless they're actually in use.</p>", "type": "rendered"}}, "hash": "6d5b1f9789381b58bce4158157d8ed48fac473be", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/6d5b1f9789381b58bce4158157d8ed48fac473be.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/6d5b1f9789381b58bce4158157d8ed48fac473be/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/6d5b1f9789381b58bce4158157d8ed48fac473be"}, "html": {"href": "#!/cbillington/labscript/commits/6d5b1f9789381b58bce4158157d8ed48fac473be"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/6d5b1f9789381b58bce4158157d8ed48fac473be"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/6d5b1f9789381b58bce4158157d8ed48fac473be/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/6d5b1f9789381b58bce4158157d8ed48fac473be/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "PulseBlaster DDSs now work. You can create a DDS object, declare its parent to be a pulseblaster, and set its amplitude, freq and phase as with the existing DDS objects.\n\nThe ranges are checked, and the number of registers are checked such that labscript will throw an error if an out of bounds value is requested or the allowed number of registers is exceeded. Note that I've hardcoded the register limits for the new firmware -- the old firmware has much lower limits and labscript will not throw an error if they are exceeded.\n\nIf anyone is actually going to use one of the old boards for its DDS output, I can put the error checking in easily enough, and maybe make the firmware version an argument to the creation of a PulseBlaster object. But I won't bother unless they're actually in use.", "markup": "markdown", "html": "<p>PulseBlaster DDSs now work. You can create a DDS object, declare its parent to be a pulseblaster, and set its amplitude, freq and phase as with the existing DDS objects.</p>\n<p>The ranges are checked, and the number of registers are checked such that labscript will throw an error if an out of bounds value is requested or the allowed number of registers is exceeded. Note that I've hardcoded the register limits for the new firmware -- the old firmware has much lower limits and labscript will not throw an error if they are exceeded.</p>\n<p>If anyone is actually going to use one of the old boards for its DDS output, I can put the error checking in easily enough, and maybe make the firmware version an argument to the creation of a PulseBlaster object. But I won't bother unless they're actually in use.</p>", "type": "rendered"}, "parents": [{"hash": "0e862ec09f11144c3406b0578446dd1f76d7e373", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/0e862ec09f11144c3406b0578446dd1f76d7e373.json"}, "html": {"href": "#!/cbillington/labscript/commits/0e862ec09f11144c3406b0578446dd1f76d7e373"}}}], "date": "2011-09-06T13:42:53+00:00", "message": "PulseBlaster DDSs now work. You can create a DDS object, declare its parent to be a pulseblaster, and set its amplitude, freq and phase as with the existing DDS objects.\n\nThe ranges are checked, and the number of registers are checked such that labscript will throw an error if an out of bounds value is requested or the allowed number of registers is exceeded. Note that I've hardcoded the register limits for the new firmware -- the old firmware has much lower limits and labscript will not throw an error if they are exceeded.\n\nIf anyone is actually going to use one of the old boards for its DDS output, I can put the error checking in easily enough, and maybe make the firmware version an argument to the creation of a PulseBlaster object. But I won't bother unless they're actually in use.", "type": "commit"}, {"rendered": {"message": {"raw": "Removed references to a calibration file. Calibrations will now be handled via global variables.", "markup": "markdown", "html": "<p>Removed references to a calibration file. Calibrations will now be handled via global variables.</p>", "type": "rendered"}}, "hash": "0e862ec09f11144c3406b0578446dd1f76d7e373", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/0e862ec09f11144c3406b0578446dd1f76d7e373.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/0e862ec09f11144c3406b0578446dd1f76d7e373/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/0e862ec09f11144c3406b0578446dd1f76d7e373"}, "html": {"href": "#!/cbillington/labscript/commits/0e862ec09f11144c3406b0578446dd1f76d7e373"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/0e862ec09f11144c3406b0578446dd1f76d7e373"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/0e862ec09f11144c3406b0578446dd1f76d7e373/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/0e862ec09f11144c3406b0578446dd1f76d7e373/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Removed references to a calibration file. Calibrations will now be handled via global variables.", "markup": "markdown", "html": "<p>Removed references to a calibration file. Calibrations will now be handled via global variables.</p>", "type": "rendered"}, "parents": [{"hash": "07b22fea6ea85737556304bff85ffea2edf15fbb", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/07b22fea6ea85737556304bff85ffea2edf15fbb.json"}, "html": {"href": "#!/cbillington/labscript/commits/07b22fea6ea85737556304bff85ffea2edf15fbb"}}}], "date": "2011-09-06T01:18:07+00:00", "message": "Removed references to a calibration file. Calibrations will now be handled via global variables.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a bug where when running a labscript without an h5 file, the one created still had its globals group called 'params'. Now it's called 'globals' like it should be.", "markup": "markdown", "html": "<p>Fixed a bug where when running a labscript without an h5 file, the one created still had its globals group called 'params'. Now it's called 'globals' like it should be.</p>", "type": "rendered"}}, "hash": "07b22fea6ea85737556304bff85ffea2edf15fbb", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/07b22fea6ea85737556304bff85ffea2edf15fbb.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/07b22fea6ea85737556304bff85ffea2edf15fbb/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/07b22fea6ea85737556304bff85ffea2edf15fbb"}, "html": {"href": "#!/cbillington/labscript/commits/07b22fea6ea85737556304bff85ffea2edf15fbb"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/07b22fea6ea85737556304bff85ffea2edf15fbb"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/07b22fea6ea85737556304bff85ffea2edf15fbb/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/07b22fea6ea85737556304bff85ffea2edf15fbb/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed a bug where when running a labscript without an h5 file, the one created still had its globals group called 'params'. Now it's called 'globals' like it should be.", "markup": "markdown", "html": "<p>Fixed a bug where when running a labscript without an h5 file, the one created still had its globals group called 'params'. Now it's called 'globals' like it should be.</p>", "type": "rendered"}, "parents": [{"hash": "679a97f731a03eeebec1de501ff6c532cbe853f1", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/679a97f731a03eeebec1de501ff6c532cbe853f1.json"}, "html": {"href": "#!/cbillington/labscript/commits/679a97f731a03eeebec1de501ff6c532cbe853f1"}}}], "date": "2011-09-02T06:43:41+00:00", "message": "Fixed a bug where when running a labscript without an h5 file, the one created still had its globals group called 'params'. Now it's called 'globals' like it should be.", "type": "commit"}, {"rendered": {"message": {"raw": "Changed 'params' to 'globals' in looking up the group in the run file from which to pull out global variables.", "markup": "markdown", "html": "<p>Changed 'params' to 'globals' in looking up the group in the run file from which to pull out global variables.</p>", "type": "rendered"}}, "hash": "679a97f731a03eeebec1de501ff6c532cbe853f1", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/679a97f731a03eeebec1de501ff6c532cbe853f1.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/679a97f731a03eeebec1de501ff6c532cbe853f1/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/679a97f731a03eeebec1de501ff6c532cbe853f1"}, "html": {"href": "#!/cbillington/labscript/commits/679a97f731a03eeebec1de501ff6c532cbe853f1"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/679a97f731a03eeebec1de501ff6c532cbe853f1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/679a97f731a03eeebec1de501ff6c532cbe853f1/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/679a97f731a03eeebec1de501ff6c532cbe853f1/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Changed 'params' to 'globals' in looking up the group in the run file from which to pull out global variables.", "markup": "markdown", "html": "<p>Changed 'params' to 'globals' in looking up the group in the run file from which to pull out global variables.</p>", "type": "rendered"}, "parents": [{"hash": "197ab0c69d2624548073f31494f2f1986937656a", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/197ab0c69d2624548073f31494f2f1986937656a.json"}, "html": {"href": "#!/cbillington/labscript/commits/197ab0c69d2624548073f31494f2f1986937656a"}}}], "date": "2011-09-01T07:15:56+00:00", "message": "Changed 'params' to 'globals' in looking up the group in the run file from which to pull out global variables.", "type": "commit"}, {"rendered": {"message": {"raw": "removed h5_from_globals.py, it will now live under the runmanager project.", "markup": "markdown", "html": "<p>removed h5_from_globals.py, it will now live under the runmanager project.</p>", "type": "rendered"}}, "hash": "197ab0c69d2624548073f31494f2f1986937656a", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/197ab0c69d2624548073f31494f2f1986937656a.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/197ab0c69d2624548073f31494f2f1986937656a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/197ab0c69d2624548073f31494f2f1986937656a"}, "html": {"href": "#!/cbillington/labscript/commits/197ab0c69d2624548073f31494f2f1986937656a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/197ab0c69d2624548073f31494f2f1986937656a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/197ab0c69d2624548073f31494f2f1986937656a/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/197ab0c69d2624548073f31494f2f1986937656a/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "removed h5_from_globals.py, it will now live under the runmanager project.", "markup": "markdown", "html": "<p>removed h5_from_globals.py, it will now live under the runmanager project.</p>", "type": "rendered"}, "parents": [{"hash": "7ef6e45ffa8a2276c1718e4dd336d4963d4712db", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/7ef6e45ffa8a2276c1718e4dd336d4963d4712db.json"}, "html": {"href": "#!/cbillington/labscript/commits/7ef6e45ffa8a2276c1718e4dd336d4963d4712db"}}}], "date": "2011-08-29T09:19:35+00:00", "message": "removed h5_from_globals.py, it will now live under the runmanager project.", "type": "commit"}, {"rendered": {"message": {"raw": "added dialog.present() to the confirm-overwrite dialogue. Hopefully this will make it pop over the top of labview when it runs minimised from the state machine. Requires testing still.", "markup": "markdown", "html": "<p>added dialog.present() to the confirm-overwrite dialogue. Hopefully this will make it pop over the top of labview when it runs minimised from the state machine. Requires testing still.</p>", "type": "rendered"}}, "hash": "7ef6e45ffa8a2276c1718e4dd336d4963d4712db", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/7ef6e45ffa8a2276c1718e4dd336d4963d4712db.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/7ef6e45ffa8a2276c1718e4dd336d4963d4712db/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/7ef6e45ffa8a2276c1718e4dd336d4963d4712db"}, "html": {"href": "#!/cbillington/labscript/commits/7ef6e45ffa8a2276c1718e4dd336d4963d4712db"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/7ef6e45ffa8a2276c1718e4dd336d4963d4712db"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/7ef6e45ffa8a2276c1718e4dd336d4963d4712db/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/7ef6e45ffa8a2276c1718e4dd336d4963d4712db/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "added dialog.present() to the confirm-overwrite dialogue. Hopefully this will make it pop over the top of labview when it runs minimised from the state machine. Requires testing still.", "markup": "markdown", "html": "<p>added dialog.present() to the confirm-overwrite dialogue. Hopefully this will make it pop over the top of labview when it runs minimised from the state machine. Requires testing still.</p>", "type": "rendered"}, "parents": [{"hash": "d4cf27f71107b362d2b79896c01e8717418e44b0", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/d4cf27f71107b362d2b79896c01e8717418e44b0.json"}, "html": {"href": "#!/cbillington/labscript/commits/d4cf27f71107b362d2b79896c01e8717418e44b0"}}}], "date": "2011-08-28T23:35:47+00:00", "message": "added dialog.present() to the confirm-overwrite dialogue. Hopefully this will make it pop over the top of labview when it runs minimised from the state machine. Requires testing still.", "type": "commit"}, {"rendered": {"message": {"raw": "Removed the scale factor for NI boards. Each individual output still has its scale factor in the connection table, I think, which we can use for plotting. Still undecided as to what to do about cases where there are multiple units an output could be viewed in. For example, magnetic field outputs can be viewed in Gauss, or in amps in the coils, or in volts on the input line.", "markup": "markdown", "html": "<p>Removed the scale factor for NI boards. Each individual output still has its scale factor in the connection table, I think, which we can use for plotting. Still undecided as to what to do about cases where there are multiple units an output could be viewed in. For example, magnetic field outputs can be viewed in Gauss, or in amps in the coils, or in volts on the input line.</p>", "type": "rendered"}}, "hash": "d4cf27f71107b362d2b79896c01e8717418e44b0", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/d4cf27f71107b362d2b79896c01e8717418e44b0.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/d4cf27f71107b362d2b79896c01e8717418e44b0/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/d4cf27f71107b362d2b79896c01e8717418e44b0"}, "html": {"href": "#!/cbillington/labscript/commits/d4cf27f71107b362d2b79896c01e8717418e44b0"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/d4cf27f71107b362d2b79896c01e8717418e44b0"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/d4cf27f71107b362d2b79896c01e8717418e44b0/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/d4cf27f71107b362d2b79896c01e8717418e44b0/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Removed the scale factor for NI boards. Each individual output still has its scale factor in the connection table, I think, which we can use for plotting. Still undecided as to what to do about cases where there are multiple units an output could be viewed in. For example, magnetic field outputs can be viewed in Gauss, or in amps in the coils, or in volts on the input line.", "markup": "markdown", "html": "<p>Removed the scale factor for NI boards. Each individual output still has its scale factor in the connection table, I think, which we can use for plotting. Still undecided as to what to do about cases where there are multiple units an output could be viewed in. For example, magnetic field outputs can be viewed in Gauss, or in amps in the coils, or in volts on the input line.</p>", "type": "rendered"}, "parents": [{"hash": "f87cd4c1d244f3a0216015df70246c127defd244", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/f87cd4c1d244f3a0216015df70246c127defd244.json"}, "html": {"href": "#!/cbillington/labscript/commits/f87cd4c1d244f3a0216015df70246c127defd244"}}}], "date": "2011-08-26T10:17:08+00:00", "message": "Removed the scale factor for NI boards. Each individual output still has its scale factor in the connection table, I think, which we can use for plotting. Still undecided as to what to do about cases where there are multiple units an output could be viewed in. For example, magnetic field outputs can be viewed in Gauss, or in amps in the coils, or in volts on the input line.", "type": "commit"}, {"rendered": {"message": {"raw": "added a script for making h5 files out of a command line list of globals. Also can be imported as a module and used to make h5 files out of a dictionary of globals.", "markup": "markdown", "html": "<p>added a script for making h5 files out of a command line list of globals. Also can be imported as a module and used to make h5 files out of a dictionary of globals.</p>", "type": "rendered"}}, "hash": "f87cd4c1d244f3a0216015df70246c127defd244", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/f87cd4c1d244f3a0216015df70246c127defd244.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/f87cd4c1d244f3a0216015df70246c127defd244/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/f87cd4c1d244f3a0216015df70246c127defd244"}, "html": {"href": "#!/cbillington/labscript/commits/f87cd4c1d244f3a0216015df70246c127defd244"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/f87cd4c1d244f3a0216015df70246c127defd244"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/f87cd4c1d244f3a0216015df70246c127defd244/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/f87cd4c1d244f3a0216015df70246c127defd244/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "added a script for making h5 files out of a command line list of globals. Also can be imported as a module and used to make h5 files out of a dictionary of globals.", "markup": "markdown", "html": "<p>added a script for making h5 files out of a command line list of globals. Also can be imported as a module and used to make h5 files out of a dictionary of globals.</p>", "type": "rendered"}, "parents": [{"hash": "237aa83b5e638c3234026f67f0506fed7e51c401", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/237aa83b5e638c3234026f67f0506fed7e51c401.json"}, "html": {"href": "#!/cbillington/labscript/commits/237aa83b5e638c3234026f67f0506fed7e51c401"}}}], "date": "2011-08-26T10:10:14+00:00", "message": "added a script for making h5 files out of a command line list of globals. Also can be imported as a module and used to make h5 files out of a dictionary of globals.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bug where maximum-clock-rate-exceeded error did not display properly.", "markup": "markdown", "html": "<p>Fixed bug where maximum-clock-rate-exceeded error did not display properly.</p>", "type": "rendered"}}, "hash": "237aa83b5e638c3234026f67f0506fed7e51c401", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/237aa83b5e638c3234026f67f0506fed7e51c401.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/237aa83b5e638c3234026f67f0506fed7e51c401/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/237aa83b5e638c3234026f67f0506fed7e51c401"}, "html": {"href": "#!/cbillington/labscript/commits/237aa83b5e638c3234026f67f0506fed7e51c401"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/237aa83b5e638c3234026f67f0506fed7e51c401"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/237aa83b5e638c3234026f67f0506fed7e51c401/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/237aa83b5e638c3234026f67f0506fed7e51c401/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed bug where maximum-clock-rate-exceeded error did not display properly.", "markup": "markdown", "html": "<p>Fixed bug where maximum-clock-rate-exceeded error did not display properly.</p>", "type": "rendered"}, "parents": [{"hash": "7d301cf19d0eedb67f51ebed9f986b16146cc7dc", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/7d301cf19d0eedb67f51ebed9f986b16146cc7dc.json"}, "html": {"href": "#!/cbillington/labscript/commits/7d301cf19d0eedb67f51ebed9f986b16146cc7dc"}}}], "date": "2011-08-26T08:28:44+00:00", "message": "Fixed bug where maximum-clock-rate-exceeded error did not display properly.", "type": "commit"}, {"rendered": {"message": {"raw": "fixed bug where globals were't parsed  correctly.", "markup": "markdown", "html": "<p>fixed bug where globals were't parsed  correctly.</p>", "type": "rendered"}}, "hash": "7d301cf19d0eedb67f51ebed9f986b16146cc7dc", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/7d301cf19d0eedb67f51ebed9f986b16146cc7dc.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/7d301cf19d0eedb67f51ebed9f986b16146cc7dc/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/7d301cf19d0eedb67f51ebed9f986b16146cc7dc"}, "html": {"href": "#!/cbillington/labscript/commits/7d301cf19d0eedb67f51ebed9f986b16146cc7dc"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/7d301cf19d0eedb67f51ebed9f986b16146cc7dc"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/7d301cf19d0eedb67f51ebed9f986b16146cc7dc/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/7d301cf19d0eedb67f51ebed9f986b16146cc7dc/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "fixed bug where globals were't parsed  correctly.", "markup": "markdown", "html": "<p>fixed bug where globals were't parsed  correctly.</p>", "type": "rendered"}, "parents": [{"hash": "fb67e710d877841f0d176d84fc34045347597bf3", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/fb67e710d877841f0d176d84fc34045347597bf3.json"}, "html": {"href": "#!/cbillington/labscript/commits/fb67e710d877841f0d176d84fc34045347597bf3"}}}], "date": "2011-08-26T07:57:04+00:00", "message": "fixed bug where globals were't parsed  correctly.", "type": "commit"}, {"rendered": {"message": {"raw": "Analogue output values are no longer stored as ints, they are instead 32 bit floats. Was probably premature optimisation to have not used floats int he first place.\n\nAlso the script name and path are stored as attributes to the script dataset.", "markup": "markdown", "html": "<p>Analogue output values are no longer stored as ints, they are instead 32 bit floats. Was probably premature optimisation to have not used floats int he first place.</p>\n<p>Also the script name and path are stored as attributes to the script dataset.</p>", "type": "rendered"}}, "hash": "fb67e710d877841f0d176d84fc34045347597bf3", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/fb67e710d877841f0d176d84fc34045347597bf3.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/fb67e710d877841f0d176d84fc34045347597bf3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/fb67e710d877841f0d176d84fc34045347597bf3"}, "html": {"href": "#!/cbillington/labscript/commits/fb67e710d877841f0d176d84fc34045347597bf3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/fb67e710d877841f0d176d84fc34045347597bf3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/fb67e710d877841f0d176d84fc34045347597bf3/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/fb67e710d877841f0d176d84fc34045347597bf3/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Analogue output values are no longer stored as ints, they are instead 32 bit floats. Was probably premature optimisation to have not used floats int he first place.\n\nAlso the script name and path are stored as attributes to the script dataset.", "markup": "markdown", "html": "<p>Analogue output values are no longer stored as ints, they are instead 32 bit floats. Was probably premature optimisation to have not used floats int he first place.</p>\n<p>Also the script name and path are stored as attributes to the script dataset.</p>", "type": "rendered"}, "parents": [{"hash": "94b4b01f84542710bc0aeac249729a9cbfb55dd3", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/94b4b01f84542710bc0aeac249729a9cbfb55dd3.json"}, "html": {"href": "#!/cbillington/labscript/commits/94b4b01f84542710bc0aeac249729a9cbfb55dd3"}}}], "date": "2011-08-26T04:33:31+00:00", "message": "Analogue output values are no longer stored as ints, they are instead 32 bit floats. Was probably premature optimisation to have not used floats int he first place.\n\nAlso the script name and path are stored as attributes to the script dataset.", "type": "commit"}, {"rendered": {"message": {"raw": "Now doesn't allow intereactive imports (since labscript relies on there being an actual script file). Also, doesn't create a calibrations file if it doesn't exist.\nMight ditch calibrations altogether depending on whether we end up using globals for that functionality.\n\nSystem wide install should now work so long as labscript's parent directory is in the PYTHONPATH. This is probably how we should do things. On the master image I've added C:\\pythonlib to the %PYTHONPATH% system variable,\nand put labscript in C:\\pythonlib\\labscript. labscript should now be importable from anywhere on the system.", "markup": "markdown", "html": "<p>Now doesn't allow intereactive imports (since labscript relies on there being an actual script file). Also, doesn't create a calibrations file if it doesn't exist.<br />\nMight ditch calibrations altogether depending on whether we end up using globals for that functionality.</p>\n<p>System wide install should now work so long as labscript's parent directory is in the PYTHONPATH. This is probably how we should do things. On the master image I've added C:\\pythonlib to the %PYTHONPATH% system variable,<br />\nand put labscript in C:\\pythonlib\\labscript. labscript should now be importable from anywhere on the system.</p>", "type": "rendered"}}, "hash": "94b4b01f84542710bc0aeac249729a9cbfb55dd3", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/94b4b01f84542710bc0aeac249729a9cbfb55dd3.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/94b4b01f84542710bc0aeac249729a9cbfb55dd3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/94b4b01f84542710bc0aeac249729a9cbfb55dd3"}, "html": {"href": "#!/cbillington/labscript/commits/94b4b01f84542710bc0aeac249729a9cbfb55dd3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/94b4b01f84542710bc0aeac249729a9cbfb55dd3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/94b4b01f84542710bc0aeac249729a9cbfb55dd3/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/94b4b01f84542710bc0aeac249729a9cbfb55dd3/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Now doesn't allow intereactive imports (since labscript relies on there being an actual script file). Also, doesn't create a calibrations file if it doesn't exist.\nMight ditch calibrations altogether depending on whether we end up using globals for that functionality.\n\nSystem wide install should now work so long as labscript's parent directory is in the PYTHONPATH. This is probably how we should do things. On the master image I've added C:\\pythonlib to the %PYTHONPATH% system variable,\nand put labscript in C:\\pythonlib\\labscript. labscript should now be importable from anywhere on the system.", "markup": "markdown", "html": "<p>Now doesn't allow intereactive imports (since labscript relies on there being an actual script file). Also, doesn't create a calibrations file if it doesn't exist.<br />\nMight ditch calibrations altogether depending on whether we end up using globals for that functionality.</p>\n<p>System wide install should now work so long as labscript's parent directory is in the PYTHONPATH. This is probably how we should do things. On the master image I've added C:\\pythonlib to the %PYTHONPATH% system variable,<br />\nand put labscript in C:\\pythonlib\\labscript. labscript should now be importable from anywhere on the system.</p>", "type": "rendered"}, "parents": [{"hash": "9f46960757b872e7e10264fba5d841b0c25288ca", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/9f46960757b872e7e10264fba5d841b0c25288ca.json"}, "html": {"href": "#!/cbillington/labscript/commits/9f46960757b872e7e10264fba5d841b0c25288ca"}}}], "date": "2011-08-22T06:15:20+00:00", "message": "Now doesn't allow intereactive imports (since labscript relies on there being an actual script file). Also, doesn't create a calibrations file if it doesn't exist.\nMight ditch calibrations altogether depending on whether we end up using globals for that functionality.\n\nSystem wide install should now work so long as labscript's parent directory is in the PYTHONPATH. This is probably how we should do things. On the master image I've added C:\\pythonlib to the %PYTHONPATH% system variable,\nand put labscript in C:\\pythonlib\\labscript. labscript should now be importable from anywhere on the system.", "type": "commit"}, {"rendered": {"message": {"raw": "added __init__.py so that the labscript folder will be recognised as a module if it is in the PYTHONPATH", "markup": "markdown", "html": "<p>added <strong>init</strong>.py so that the labscript folder will be recognised as a module if it is in the PYTHONPATH</p>", "type": "rendered"}}, "hash": "9f46960757b872e7e10264fba5d841b0c25288ca", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/9f46960757b872e7e10264fba5d841b0c25288ca.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/9f46960757b872e7e10264fba5d841b0c25288ca/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/9f46960757b872e7e10264fba5d841b0c25288ca"}, "html": {"href": "#!/cbillington/labscript/commits/9f46960757b872e7e10264fba5d841b0c25288ca"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/9f46960757b872e7e10264fba5d841b0c25288ca"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/9f46960757b872e7e10264fba5d841b0c25288ca/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/9f46960757b872e7e10264fba5d841b0c25288ca/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "added __init__.py so that the labscript folder will be recognised as a module if it is in the PYTHONPATH", "markup": "markdown", "html": "<p>added <strong>init</strong>.py so that the labscript folder will be recognised as a module if it is in the PYTHONPATH</p>", "type": "rendered"}, "parents": [{"hash": "9749461a4aaf64003c2ffe448e94e5ecf007f737", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/9749461a4aaf64003c2ffe448e94e5ecf007f737.json"}, "html": {"href": "#!/cbillington/labscript/commits/9749461a4aaf64003c2ffe448e94e5ecf007f737"}}}], "date": "2011-08-22T05:30:38+00:00", "message": "added __init__.py so that the labscript folder will be recognised as a module if it is in the PYTHONPATH", "type": "commit"}, {"rendered": {"message": {"raw": "Resolves issue #259. If no hdf5 file is provided, labscript creates one with the same name as the labscript file. So for example coils.py will create coils.h5.\nIf coils.h5 exists,the user is prompted as to whether the existing file should be overwritten. This prompt is graphical so that it will be seen whether a terminal is present or not (as is the case when the labscript is run from LabVIEW).\nIf the command line flag '-replace' is used, the prompt is supressed and the existing file is automatically overwritten.", "markup": "markdown", "html": "<p>Resolves issue #259. If no hdf5 file is provided, labscript creates one with the same name as the labscript file. So for example coils.py will create coils.h5.<br />\nIf coils.h5 exists,the user is prompted as to whether the existing file should be overwritten. This prompt is graphical so that it will be seen whether a terminal is present or not (as is the case when the labscript is run from LabVIEW).<br />\nIf the command line flag '-replace' is used, the prompt is supressed and the existing file is automatically overwritten.</p>", "type": "rendered"}}, "hash": "9749461a4aaf64003c2ffe448e94e5ecf007f737", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/9749461a4aaf64003c2ffe448e94e5ecf007f737.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/9749461a4aaf64003c2ffe448e94e5ecf007f737/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/9749461a4aaf64003c2ffe448e94e5ecf007f737"}, "html": {"href": "#!/cbillington/labscript/commits/9749461a4aaf64003c2ffe448e94e5ecf007f737"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/9749461a4aaf64003c2ffe448e94e5ecf007f737"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/9749461a4aaf64003c2ffe448e94e5ecf007f737/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/9749461a4aaf64003c2ffe448e94e5ecf007f737/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Resolves issue #259. If no hdf5 file is provided, labscript creates one with the same name as the labscript file. So for example coils.py will create coils.h5.\nIf coils.h5 exists,the user is prompted as to whether the existing file should be overwritten. This prompt is graphical so that it will be seen whether a terminal is present or not (as is the case when the labscript is run from LabVIEW).\nIf the command line flag '-replace' is used, the prompt is supressed and the existing file is automatically overwritten.", "markup": "markdown", "html": "<p>Resolves issue #259. If no hdf5 file is provided, labscript creates one with the same name as the labscript file. So for example coils.py will create coils.h5.<br />\nIf coils.h5 exists,the user is prompted as to whether the existing file should be overwritten. This prompt is graphical so that it will be seen whether a terminal is present or not (as is the case when the labscript is run from LabVIEW).<br />\nIf the command line flag '-replace' is used, the prompt is supressed and the existing file is automatically overwritten.</p>", "type": "rendered"}, "parents": [{"hash": "d2f72c38371b395e3d202d36533ff31f54ad0b95", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/d2f72c38371b395e3d202d36533ff31f54ad0b95.json"}, "html": {"href": "#!/cbillington/labscript/commits/d2f72c38371b395e3d202d36533ff31f54ad0b95"}}}], "date": "2011-08-20T06:20:09+00:00", "message": "Resolves issue #259. If no hdf5 file is provided, labscript creates one with the same name as the labscript file. So for example coils.py will create coils.h5.\nIf coils.h5 exists,the user is prompted as to whether the existing file should be overwritten. This prompt is graphical so that it will be seen whether a terminal is present or not (as is the case when the labscript is run from LabVIEW).\nIf the command line flag '-replace' is used, the prompt is supressed and the existing file is automatically overwritten.", "type": "commit"}, {"rendered": {"message": {"raw": "Fast clock is now hard coded as flag 0 of the PulseBlaster. Flag 1 is the slow clock. This is due to some of the boards not providing output on flags 4-11.", "markup": "markdown", "html": "<p>Fast clock is now hard coded as flag 0 of the PulseBlaster. Flag 1 is the slow clock. This is due to some of the boards not providing output on flags 4-11.</p>", "type": "rendered"}}, "hash": "d2f72c38371b395e3d202d36533ff31f54ad0b95", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/d2f72c38371b395e3d202d36533ff31f54ad0b95.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/d2f72c38371b395e3d202d36533ff31f54ad0b95/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/d2f72c38371b395e3d202d36533ff31f54ad0b95"}, "html": {"href": "#!/cbillington/labscript/commits/d2f72c38371b395e3d202d36533ff31f54ad0b95"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/d2f72c38371b395e3d202d36533ff31f54ad0b95"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/d2f72c38371b395e3d202d36533ff31f54ad0b95/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/d2f72c38371b395e3d202d36533ff31f54ad0b95/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fast clock is now hard coded as flag 0 of the PulseBlaster. Flag 1 is the slow clock. This is due to some of the boards not providing output on flags 4-11.", "markup": "markdown", "html": "<p>Fast clock is now hard coded as flag 0 of the PulseBlaster. Flag 1 is the slow clock. This is due to some of the boards not providing output on flags 4-11.</p>", "type": "rendered"}, "parents": [{"hash": "5344f8b64df3ea6661e39521ed1bebfe270c745e", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/5344f8b64df3ea6661e39521ed1bebfe270c745e.json"}, "html": {"href": "#!/cbillington/labscript/commits/5344f8b64df3ea6661e39521ed1bebfe270c745e"}}}], "date": "2011-08-19T05:28:00+00:00", "message": "Fast clock is now hard coded as flag 0 of the PulseBlaster. Flag 1 is the slow clock. This is due to some of the boards not providing output on flags 4-11.", "type": "commit"}, {"rendered": {"message": {"raw": "stop() no longer does sys.exit(0), so that subsequent commands in the labscript file (like plotting) will still execute. Any changes made to the output objects after stop() has been called however, will not be written to the hdf5 file.", "markup": "markdown", "html": "<p>stop() no longer does sys.exit(0), so that subsequent commands in the labscript file (like plotting) will still execute. Any changes made to the output objects after stop() has been called however, will not be written to the hdf5 file.</p>", "type": "rendered"}}, "hash": "5344f8b64df3ea6661e39521ed1bebfe270c745e", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/5344f8b64df3ea6661e39521ed1bebfe270c745e.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/5344f8b64df3ea6661e39521ed1bebfe270c745e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/5344f8b64df3ea6661e39521ed1bebfe270c745e"}, "html": {"href": "#!/cbillington/labscript/commits/5344f8b64df3ea6661e39521ed1bebfe270c745e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/5344f8b64df3ea6661e39521ed1bebfe270c745e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/5344f8b64df3ea6661e39521ed1bebfe270c745e/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/5344f8b64df3ea6661e39521ed1bebfe270c745e/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "stop() no longer does sys.exit(0), so that subsequent commands in the labscript file (like plotting) will still execute. Any changes made to the output objects after stop() has been called however, will not be written to the hdf5 file.", "markup": "markdown", "html": "<p>stop() no longer does sys.exit(0), so that subsequent commands in the labscript file (like plotting) will still execute. Any changes made to the output objects after stop() has been called however, will not be written to the hdf5 file.</p>", "type": "rendered"}, "parents": [{"hash": "0f2542eca2a0222070356abde310daab84b4f51b", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/0f2542eca2a0222070356abde310daab84b4f51b.json"}, "html": {"href": "#!/cbillington/labscript/commits/0f2542eca2a0222070356abde310daab84b4f51b"}}}], "date": "2011-08-19T04:19:42+00:00", "message": "stop() no longer does sys.exit(0), so that subsequent commands in the labscript file (like plotting) will still execute. Any changes made to the output objects after stop() has been called however, will not be written to the hdf5 file.", "type": "commit"}, {"rendered": {"message": {"raw": "added edit_connections.py. This script generates a minimalistic labscript from the connection table in an hdf5 file. I previously forgot to add to version control and had deleted it...thank you recycle bin!", "markup": "markdown", "html": "<p>added edit_connections.py. This script generates a minimalistic labscript from the connection table in an hdf5 file. I previously forgot to add to version control and had deleted it...thank you recycle bin!</p>", "type": "rendered"}}, "hash": "0f2542eca2a0222070356abde310daab84b4f51b", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/0f2542eca2a0222070356abde310daab84b4f51b.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/0f2542eca2a0222070356abde310daab84b4f51b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/0f2542eca2a0222070356abde310daab84b4f51b"}, "html": {"href": "#!/cbillington/labscript/commits/0f2542eca2a0222070356abde310daab84b4f51b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/0f2542eca2a0222070356abde310daab84b4f51b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/0f2542eca2a0222070356abde310daab84b4f51b/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/0f2542eca2a0222070356abde310daab84b4f51b/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "added edit_connections.py. This script generates a minimalistic labscript from the connection table in an hdf5 file. I previously forgot to add to version control and had deleted it...thank you recycle bin!", "markup": "markdown", "html": "<p>added edit_connections.py. This script generates a minimalistic labscript from the connection table in an hdf5 file. I previously forgot to add to version control and had deleted it...thank you recycle bin!</p>", "type": "rendered"}, "parents": [{"hash": "4234f859acddf29bb1805f7e8863e6b4bc3ef905", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/4234f859acddf29bb1805f7e8863e6b4bc3ef905.json"}, "html": {"href": "#!/cbillington/labscript/commits/4234f859acddf29bb1805f7e8863e6b4bc3ef905"}}}], "date": "2011-07-04T04:08:05+00:00", "message": "added edit_connections.py. This script generates a minimalistic labscript from the connection table in an hdf5 file. I previously forgot to add to version control and had deleted it...thank you recycle bin!", "type": "commit"}, {"rendered": {"message": {"raw": "small change for debugging with labVIEW", "markup": "markdown", "html": "<p>small change for debugging with labVIEW</p>", "type": "rendered"}}, "hash": "4234f859acddf29bb1805f7e8863e6b4bc3ef905", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/4234f859acddf29bb1805f7e8863e6b4bc3ef905.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/4234f859acddf29bb1805f7e8863e6b4bc3ef905/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/4234f859acddf29bb1805f7e8863e6b4bc3ef905"}, "html": {"href": "#!/cbillington/labscript/commits/4234f859acddf29bb1805f7e8863e6b4bc3ef905"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/4234f859acddf29bb1805f7e8863e6b4bc3ef905"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/4234f859acddf29bb1805f7e8863e6b4bc3ef905/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/4234f859acddf29bb1805f7e8863e6b4bc3ef905/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "small change for debugging with labVIEW", "markup": "markdown", "html": "<p>small change for debugging with labVIEW</p>", "type": "rendered"}, "parents": [{"hash": "77556402f8bbc9f43c6e335cec46c05f72ecfd5e", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/77556402f8bbc9f43c6e335cec46c05f72ecfd5e.json"}, "html": {"href": "#!/cbillington/labscript/commits/77556402f8bbc9f43c6e335cec46c05f72ecfd5e"}}}], "date": "2011-04-18T07:12:51+00:00", "message": "small change for debugging with labVIEW", "type": "commit"}, {"rendered": {"message": {"raw": "Pulse program now follow the spec of having an initial dummy instruction and a wait then branch to 0 at the end.", "markup": "markdown", "html": "<p>Pulse program now follow the spec of having an initial dummy instruction and a wait then branch to 0 at the end.</p>", "type": "rendered"}}, "hash": "77556402f8bbc9f43c6e335cec46c05f72ecfd5e", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/77556402f8bbc9f43c6e335cec46c05f72ecfd5e.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/77556402f8bbc9f43c6e335cec46c05f72ecfd5e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/77556402f8bbc9f43c6e335cec46c05f72ecfd5e"}, "html": {"href": "#!/cbillington/labscript/commits/77556402f8bbc9f43c6e335cec46c05f72ecfd5e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/77556402f8bbc9f43c6e335cec46c05f72ecfd5e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/77556402f8bbc9f43c6e335cec46c05f72ecfd5e/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/77556402f8bbc9f43c6e335cec46c05f72ecfd5e/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Pulse program now follow the spec of having an initial dummy instruction and a wait then branch to 0 at the end.", "markup": "markdown", "html": "<p>Pulse program now follow the spec of having an initial dummy instruction and a wait then branch to 0 at the end.</p>", "type": "rendered"}, "parents": [{"hash": "7364388ac7d3bb74e8a04ffc39f4996611a8af8a", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/7364388ac7d3bb74e8a04ffc39f4996611a8af8a.json"}, "html": {"href": "#!/cbillington/labscript/commits/7364388ac7d3bb74e8a04ffc39f4996611a8af8a"}}}], "date": "2011-04-18T06:05:18+00:00", "message": "Pulse program now follow the spec of having an initial dummy instruction and a wait then branch to 0 at the end.", "type": "commit"}, {"rendered": {"message": {"raw": "Made some changes as discussed today with the Phil and Russ, regarding interactions with the LabVIEW control system.\n\n1. Numbering of devices now starts from zero.\n\n2. No initial pulse program instruction is issued putting the clock flags into the correct state to start ticking. Instead, LabVIEW will\n   program this instruction, as it can keep all the other flags in the state they are in the front panel. Previously labscript just set them to zero.\n   This should avoid accidental triggering and closing of shutters etc. A smooth transition from state-of-the-front-panel to labscript's initial instruction\n   is important for avoiding these problems.\n\n3. In the same vein, the end of the pulse program is now handled differently. The second last instruction is a WAIT instruction, and LabVIEW will know that the\n   program is finished by polling the pulseblaster's status to see if it's waiting (and if there is more than one WAIT instruction in the program, LabVIEW can count them.)\n   Then LabVIEW programs instruction zero with the front panel state, and then sends a software trigger telling the pulse program to resume. The program moves to its\n   final instruction, which is to brach to line zero. Then the system ends up in the state of the front panel without missing a beat. Again, this is important so that there\n   are no intermediate states between buffered output and front panel states. There should always be a direct transition from one to the other with nothing in between.\n\n4. Code generation now works. Run:\n\n         utils/edit_connections.py infile.h5 outfile.py\n\n   to generate a minimalistic labscript from the connection table in the already-compiled infile.h5. Still needing to be done is to make this automatically open in a text editor,\n   and then when the text editor is closed to make it compile and generate a hdf5 file with the new connection table. In that case I should probably make the intermediate .py file just\n   a temporary file, and have the user instead specify the desired output hdf5 file to compile the minimalistic labscript to.", "markup": "markdown", "html": "<p>Made some changes as discussed today with the Phil and Russ, regarding interactions with the LabVIEW control system.</p>\n<ol>\n<li>\n<p>Numbering of devices now starts from zero.</p>\n</li>\n<li>\n<p>No initial pulse program instruction is issued putting the clock flags into the correct state to start ticking. Instead, LabVIEW will<br />\n   program this instruction, as it can keep all the other flags in the state they are in the front panel. Previously labscript just set them to zero.<br />\n   This should avoid accidental triggering and closing of shutters etc. A smooth transition from state-of-the-front-panel to labscript's initial instruction<br />\n   is important for avoiding these problems.</p>\n</li>\n<li>\n<p>In the same vein, the end of the pulse program is now handled differently. The second last instruction is a WAIT instruction, and LabVIEW will know that the<br />\n   program is finished by polling the pulseblaster's status to see if it's waiting (and if there is more than one WAIT instruction in the program, LabVIEW can count them.)<br />\n   Then LabVIEW programs instruction zero with the front panel state, and then sends a software trigger telling the pulse program to resume. The program moves to its<br />\n   final instruction, which is to brach to line zero. Then the system ends up in the state of the front panel without missing a beat. Again, this is important so that there<br />\n   are no intermediate states between buffered output and front panel states. There should always be a direct transition from one to the other with nothing in between.</p>\n</li>\n<li>\n<p>Code generation now works. Run:</p>\n<div class=\"codehilite\"><pre><span></span> utils/edit_connections.py infile.h5 outfile.py\n</pre></div>\n\n\n</li>\n</ol>\n<p>to generate a minimalistic labscript from the connection table in the already-compiled infile.h5. Still needing to be done is to make this automatically open in a text editor,<br />\n   and then when the text editor is closed to make it compile and generate a hdf5 file with the new connection table. In that case I should probably make the intermediate .py file just<br />\n   a temporary file, and have the user instead specify the desired output hdf5 file to compile the minimalistic labscript to.</p>", "type": "rendered"}}, "hash": "7364388ac7d3bb74e8a04ffc39f4996611a8af8a", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/7364388ac7d3bb74e8a04ffc39f4996611a8af8a.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/7364388ac7d3bb74e8a04ffc39f4996611a8af8a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/7364388ac7d3bb74e8a04ffc39f4996611a8af8a"}, "html": {"href": "#!/cbillington/labscript/commits/7364388ac7d3bb74e8a04ffc39f4996611a8af8a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/7364388ac7d3bb74e8a04ffc39f4996611a8af8a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/7364388ac7d3bb74e8a04ffc39f4996611a8af8a/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/7364388ac7d3bb74e8a04ffc39f4996611a8af8a/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Made some changes as discussed today with the Phil and Russ, regarding interactions with the LabVIEW control system.\n\n1. Numbering of devices now starts from zero.\n\n2. No initial pulse program instruction is issued putting the clock flags into the correct state to start ticking. Instead, LabVIEW will\n   program this instruction, as it can keep all the other flags in the state they are in the front panel. Previously labscript just set them to zero.\n   This should avoid accidental triggering and closing of shutters etc. A smooth transition from state-of-the-front-panel to labscript's initial instruction\n   is important for avoiding these problems.\n\n3. In the same vein, the end of the pulse program is now handled differently. The second last instruction is a WAIT instruction, and LabVIEW will know that the\n   program is finished by polling the pulseblaster's status to see if it's waiting (and if there is more than one WAIT instruction in the program, LabVIEW can count them.)\n   Then LabVIEW programs instruction zero with the front panel state, and then sends a software trigger telling the pulse program to resume. The program moves to its\n   final instruction, which is to brach to line zero. Then the system ends up in the state of the front panel without missing a beat. Again, this is important so that there\n   are no intermediate states between buffered output and front panel states. There should always be a direct transition from one to the other with nothing in between.\n\n4. Code generation now works. Run:\n\n         utils/edit_connections.py infile.h5 outfile.py\n\n   to generate a minimalistic labscript from the connection table in the already-compiled infile.h5. Still needing to be done is to make this automatically open in a text editor,\n   and then when the text editor is closed to make it compile and generate a hdf5 file with the new connection table. In that case I should probably make the intermediate .py file just\n   a temporary file, and have the user instead specify the desired output hdf5 file to compile the minimalistic labscript to.", "markup": "markdown", "html": "<p>Made some changes as discussed today with the Phil and Russ, regarding interactions with the LabVIEW control system.</p>\n<ol>\n<li>\n<p>Numbering of devices now starts from zero.</p>\n</li>\n<li>\n<p>No initial pulse program instruction is issued putting the clock flags into the correct state to start ticking. Instead, LabVIEW will<br />\n   program this instruction, as it can keep all the other flags in the state they are in the front panel. Previously labscript just set them to zero.<br />\n   This should avoid accidental triggering and closing of shutters etc. A smooth transition from state-of-the-front-panel to labscript's initial instruction<br />\n   is important for avoiding these problems.</p>\n</li>\n<li>\n<p>In the same vein, the end of the pulse program is now handled differently. The second last instruction is a WAIT instruction, and LabVIEW will know that the<br />\n   program is finished by polling the pulseblaster's status to see if it's waiting (and if there is more than one WAIT instruction in the program, LabVIEW can count them.)<br />\n   Then LabVIEW programs instruction zero with the front panel state, and then sends a software trigger telling the pulse program to resume. The program moves to its<br />\n   final instruction, which is to brach to line zero. Then the system ends up in the state of the front panel without missing a beat. Again, this is important so that there<br />\n   are no intermediate states between buffered output and front panel states. There should always be a direct transition from one to the other with nothing in between.</p>\n</li>\n<li>\n<p>Code generation now works. Run:</p>\n<div class=\"codehilite\"><pre><span></span> utils/edit_connections.py infile.h5 outfile.py\n</pre></div>\n\n\n</li>\n</ol>\n<p>to generate a minimalistic labscript from the connection table in the already-compiled infile.h5. Still needing to be done is to make this automatically open in a text editor,<br />\n   and then when the text editor is closed to make it compile and generate a hdf5 file with the new connection table. In that case I should probably make the intermediate .py file just<br />\n   a temporary file, and have the user instead specify the desired output hdf5 file to compile the minimalistic labscript to.</p>", "type": "rendered"}, "parents": [{"hash": "a84deec20212bd8049e6e6b1b4b513a8430d8713", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/a84deec20212bd8049e6e6b1b4b513a8430d8713.json"}, "html": {"href": "#!/cbillington/labscript/commits/a84deec20212bd8049e6e6b1b4b513a8430d8713"}}}], "date": "2011-04-14T05:24:43+00:00", "message": "Made some changes as discussed today with the Phil and Russ, regarding interactions with the LabVIEW control system.\n\n1. Numbering of devices now starts from zero.\n\n2. No initial pulse program instruction is issued putting the clock flags into the correct state to start ticking. Instead, LabVIEW will\n   program this instruction, as it can keep all the other flags in the state they are in the front panel. Previously labscript just set them to zero.\n   This should avoid accidental triggering and closing of shutters etc. A smooth transition from state-of-the-front-panel to labscript's initial instruction\n   is important for avoiding these problems.\n\n3. In the same vein, the end of the pulse program is now handled differently. The second last instruction is a WAIT instruction, and LabVIEW will know that the\n   program is finished by polling the pulseblaster's status to see if it's waiting (and if there is more than one WAIT instruction in the program, LabVIEW can count them.)\n   Then LabVIEW programs instruction zero with the front panel state, and then sends a software trigger telling the pulse program to resume. The program moves to its\n   final instruction, which is to brach to line zero. Then the system ends up in the state of the front panel without missing a beat. Again, this is important so that there\n   are no intermediate states between buffered output and front panel states. There should always be a direct transition from one to the other with nothing in between.\n\n4. Code generation now works. Run:\n\n         utils/edit_connections.py infile.h5 outfile.py\n\n   to generate a minimalistic labscript from the connection table in the already-compiled infile.h5. Still needing to be done is to make this automatically open in a text editor,\n   and then when the text editor is closed to make it compile and generate a hdf5 file with the new connection table. In that case I should probably make the intermediate .py file just\n   a temporary file, and have the user instead specify the desired output hdf5 file to compile the minimalistic labscript to.", "type": "commit"}, {"rendered": {"message": {"raw": "hopefully fixed a bug where the version of h5py on windows insists that one creates groups before creating sub-groups, ie:\n\n    h5file.create_group('/devices')\n    h5file.create_group('/devices/mydevice')\n\nas opposed to the version which I've got on my laptop, which allows for:\n\n    h5file.create_group('/devices/mydevice')\n\nin one hit.", "markup": "markdown", "html": "<p>hopefully fixed a bug where the version of h5py on windows insists that one creates groups before creating sub-groups, ie:</p>\n<div class=\"codehilite\"><pre><span></span>h5file.create_group(&#39;/devices&#39;)\nh5file.create_group(&#39;/devices/mydevice&#39;)\n</pre></div>\n\n\n<p>as opposed to the version which I've got on my laptop, which allows for:</p>\n<div class=\"codehilite\"><pre><span></span>h5file.create_group(&#39;/devices/mydevice&#39;)\n</pre></div>\n\n\n<p>in one hit.</p>", "type": "rendered"}}, "hash": "a84deec20212bd8049e6e6b1b4b513a8430d8713", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/a84deec20212bd8049e6e6b1b4b513a8430d8713.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/a84deec20212bd8049e6e6b1b4b513a8430d8713/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/a84deec20212bd8049e6e6b1b4b513a8430d8713"}, "html": {"href": "#!/cbillington/labscript/commits/a84deec20212bd8049e6e6b1b4b513a8430d8713"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/a84deec20212bd8049e6e6b1b4b513a8430d8713"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/a84deec20212bd8049e6e6b1b4b513a8430d8713/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/a84deec20212bd8049e6e6b1b4b513a8430d8713/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "hopefully fixed a bug where the version of h5py on windows insists that one creates groups before creating sub-groups, ie:\n\n    h5file.create_group('/devices')\n    h5file.create_group('/devices/mydevice')\n\nas opposed to the version which I've got on my laptop, which allows for:\n\n    h5file.create_group('/devices/mydevice')\n\nin one hit.", "markup": "markdown", "html": "<p>hopefully fixed a bug where the version of h5py on windows insists that one creates groups before creating sub-groups, ie:</p>\n<div class=\"codehilite\"><pre><span></span>h5file.create_group(&#39;/devices&#39;)\nh5file.create_group(&#39;/devices/mydevice&#39;)\n</pre></div>\n\n\n<p>as opposed to the version which I've got on my laptop, which allows for:</p>\n<div class=\"codehilite\"><pre><span></span>h5file.create_group(&#39;/devices/mydevice&#39;)\n</pre></div>\n\n\n<p>in one hit.</p>", "type": "rendered"}, "parents": [{"hash": "3e68ce95adaa88e627039459d8da0796b6ab5798", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/3e68ce95adaa88e627039459d8da0796b6ab5798.json"}, "html": {"href": "#!/cbillington/labscript/commits/3e68ce95adaa88e627039459d8da0796b6ab5798"}}}], "date": "2011-04-13T08:07:52+00:00", "message": "hopefully fixed a bug where the version of h5py on windows insists that one creates groups before creating sub-groups, ie:\n\n    h5file.create_group('/devices')\n    h5file.create_group('/devices/mydevice')\n\nas opposed to the version which I've got on my laptop, which allows for:\n\n    h5file.create_group('/devices/mydevice')\n\nin one hit.", "type": "commit"}, {"rendered": {"message": {"raw": "corrected accidental use of '/' instead of os.path.join for a filepath", "markup": "markdown", "html": "<p>corrected accidental use of '/' instead of os.path.join for a filepath</p>", "type": "rendered"}}, "hash": "3e68ce95adaa88e627039459d8da0796b6ab5798", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/3e68ce95adaa88e627039459d8da0796b6ab5798.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/3e68ce95adaa88e627039459d8da0796b6ab5798/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/3e68ce95adaa88e627039459d8da0796b6ab5798"}, "html": {"href": "#!/cbillington/labscript/commits/3e68ce95adaa88e627039459d8da0796b6ab5798"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/3e68ce95adaa88e627039459d8da0796b6ab5798"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/3e68ce95adaa88e627039459d8da0796b6ab5798/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/3e68ce95adaa88e627039459d8da0796b6ab5798/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "corrected accidental use of '/' instead of os.path.join for a filepath", "markup": "markdown", "html": "<p>corrected accidental use of '/' instead of os.path.join for a filepath</p>", "type": "rendered"}, "parents": [{"hash": "a0bb60df0645cba87217d2c8646a607fdc9c05b7", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/a0bb60df0645cba87217d2c8646a607fdc9c05b7.json"}, "html": {"href": "#!/cbillington/labscript/commits/a0bb60df0645cba87217d2c8646a607fdc9c05b7"}}}], "date": "2011-04-13T07:53:15+00:00", "message": "corrected accidental use of '/' instead of os.path.join for a filepath", "type": "commit"}, {"rendered": {"message": {"raw": "Code generation almost working. The connection table needs to be sorted from parent devices to child devices, as the initialisation of child devices requires\nthat the parents already be initialised. At the moment the table is sorted alphabetically, so I'll make it sort by device 'generation' first, then alphabetically.\nThis sorting is important so that a trivial change in code doesn't result in the connection table being different. We want to be able to diff connection tables against\neach other to see if there has actually been a change in the connections, and we're not interested in false positives from the user simply typing things in a different order.", "markup": "markdown", "html": "<p>Code generation almost working. The connection table needs to be sorted from parent devices to child devices, as the initialisation of child devices requires<br />\nthat the parents already be initialised. At the moment the table is sorted alphabetically, so I'll make it sort by device 'generation' first, then alphabetically.<br />\nThis sorting is important so that a trivial change in code doesn't result in the connection table being different. We want to be able to diff connection tables against<br />\neach other to see if there has actually been a change in the connections, and we're not interested in false positives from the user simply typing things in a different order.</p>", "type": "rendered"}}, "hash": "a0bb60df0645cba87217d2c8646a607fdc9c05b7", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/a0bb60df0645cba87217d2c8646a607fdc9c05b7.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/a0bb60df0645cba87217d2c8646a607fdc9c05b7/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/a0bb60df0645cba87217d2c8646a607fdc9c05b7"}, "html": {"href": "#!/cbillington/labscript/commits/a0bb60df0645cba87217d2c8646a607fdc9c05b7"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/a0bb60df0645cba87217d2c8646a607fdc9c05b7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/a0bb60df0645cba87217d2c8646a607fdc9c05b7/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/a0bb60df0645cba87217d2c8646a607fdc9c05b7/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Code generation almost working. The connection table needs to be sorted from parent devices to child devices, as the initialisation of child devices requires\nthat the parents already be initialised. At the moment the table is sorted alphabetically, so I'll make it sort by device 'generation' first, then alphabetically.\nThis sorting is important so that a trivial change in code doesn't result in the connection table being different. We want to be able to diff connection tables against\neach other to see if there has actually been a change in the connections, and we're not interested in false positives from the user simply typing things in a different order.", "markup": "markdown", "html": "<p>Code generation almost working. The connection table needs to be sorted from parent devices to child devices, as the initialisation of child devices requires<br />\nthat the parents already be initialised. At the moment the table is sorted alphabetically, so I'll make it sort by device 'generation' first, then alphabetically.<br />\nThis sorting is important so that a trivial change in code doesn't result in the connection table being different. We want to be able to diff connection tables against<br />\neach other to see if there has actually been a change in the connections, and we're not interested in false positives from the user simply typing things in a different order.</p>", "type": "rendered"}, "parents": [{"hash": "edc14e7b0994868593a1f3357618c2ad726b9b07", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/edc14e7b0994868593a1f3357618c2ad726b9b07.json"}, "html": {"href": "#!/cbillington/labscript/commits/edc14e7b0994868593a1f3357618c2ad726b9b07"}}}], "date": "2011-04-13T07:11:13+00:00", "message": "Code generation almost working. The connection table needs to be sorted from parent devices to child devices, as the initialisation of child devices requires\nthat the parents already be initialised. At the moment the table is sorted alphabetically, so I'll make it sort by device 'generation' first, then alphabetically.\nThis sorting is important so that a trivial change in code doesn't result in the connection table being different. We want to be able to diff connection tables against\neach other to see if there has actually been a change in the connections, and we're not interested in false positives from the user simply typing things in a different order.", "type": "commit"}, {"rendered": {"message": {"raw": "last commit had a hard coded filepath for a file which had moved. This commit changes the path to match the file restructuring done in the last commit.", "markup": "markdown", "html": "<p>last commit had a hard coded filepath for a file which had moved. This commit changes the path to match the file restructuring done in the last commit.</p>", "type": "rendered"}}, "hash": "edc14e7b0994868593a1f3357618c2ad726b9b07", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/edc14e7b0994868593a1f3357618c2ad726b9b07.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/edc14e7b0994868593a1f3357618c2ad726b9b07/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/edc14e7b0994868593a1f3357618c2ad726b9b07"}, "html": {"href": "#!/cbillington/labscript/commits/edc14e7b0994868593a1f3357618c2ad726b9b07"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/edc14e7b0994868593a1f3357618c2ad726b9b07"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/edc14e7b0994868593a1f3357618c2ad726b9b07/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/edc14e7b0994868593a1f3357618c2ad726b9b07/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "last commit had a hard coded filepath for a file which had moved. This commit changes the path to match the file restructuring done in the last commit.", "markup": "markdown", "html": "<p>last commit had a hard coded filepath for a file which had moved. This commit changes the path to match the file restructuring done in the last commit.</p>", "type": "rendered"}, "parents": [{"hash": "894580013f1d349fbcbf6a63cb2b0f32e6caadef", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/894580013f1d349fbcbf6a63cb2b0f32e6caadef.json"}, "html": {"href": "#!/cbillington/labscript/commits/894580013f1d349fbcbf6a63cb2b0f32e6caadef"}}}], "date": "2011-04-13T06:24:50+00:00", "message": "last commit had a hard coded filepath for a file which had moved. This commit changes the path to match the file restructuring done in the last commit.", "type": "commit"}, {"rendered": {"message": {"raw": "more cleaning of the folder structure", "markup": "markdown", "html": "<p>more cleaning of the folder structure</p>", "type": "rendered"}}, "hash": "894580013f1d349fbcbf6a63cb2b0f32e6caadef", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/894580013f1d349fbcbf6a63cb2b0f32e6caadef.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/894580013f1d349fbcbf6a63cb2b0f32e6caadef/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/894580013f1d349fbcbf6a63cb2b0f32e6caadef"}, "html": {"href": "#!/cbillington/labscript/commits/894580013f1d349fbcbf6a63cb2b0f32e6caadef"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/894580013f1d349fbcbf6a63cb2b0f32e6caadef"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/894580013f1d349fbcbf6a63cb2b0f32e6caadef/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/894580013f1d349fbcbf6a63cb2b0f32e6caadef/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "more cleaning of the folder structure", "markup": "markdown", "html": "<p>more cleaning of the folder structure</p>", "type": "rendered"}, "parents": [{"hash": "8cb3a0164ee1ba5be8e1d6d4b475f81e4c0cb5f0", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/8cb3a0164ee1ba5be8e1d6d4b475f81e4c0cb5f0.json"}, "html": {"href": "#!/cbillington/labscript/commits/8cb3a0164ee1ba5be8e1d6d4b475f81e4c0cb5f0"}}}], "date": "2011-04-13T06:21:32+00:00", "message": "more cleaning of the folder structure", "type": "commit"}, {"rendered": {"message": {"raw": "minor change to how params and device references are put into the global namespace. Now one can do:\n\n        import labscript\n        labscript.Device('device1', *otherargs)\n        device1.do_something(t=7)\n        print param1, param2\n\tlabscript.stop(t=10)\n\nrather than having to import * (which is generally frowned upon in production code), or reference the params\n(which are the experimental run's 'global' arguments, as read from the hdf5 file) with labsript.param1 or similar.\n\nI've left example.py as having 'import *' for the moment, which also imports * from pylab. I can't really see this\nbecoming an issue, but if it does we can just import labscript instead. Or maybe when I package labscript properly\nI'll make an __all__ list that will only import the bits that the user is supposed to use. But it doesn't matter,\nwe're all grown ups here and don't have to have the code hidden from us to make sure we don't break things.\n\nIf it turns out people slip into the habit of breaking things (making names that conflict with what labscript uses etc),\nthen we'll work out what should be hidden based on that.", "markup": "markdown", "html": "<p>minor change to how params and device references are put into the global namespace. Now one can do:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"kn\">import</span> <span class=\"nn\">labscript</span>\n    <span class=\"n\">labscript</span><span class=\"o\">.</span><span class=\"n\">Device</span><span class=\"p\">(</span><span class=\"s1\">&#39;device1&#39;</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">otherargs</span><span class=\"p\">)</span>\n    <span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">do_something</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n    <span class=\"k\">print</span> <span class=\"n\">param1</span><span class=\"p\">,</span> <span class=\"n\">param2</span>\n<span class=\"n\">labscript</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>rather than having to import * (which is generally frowned upon in production code), or reference the params<br />\n(which are the experimental run's 'global' arguments, as read from the hdf5 file) with labsript.param1 or similar.</p>\n<p>I've left example.py as having 'import *' for the moment, which also imports * from pylab. I can't really see this<br />\nbecoming an issue, but if it does we can just import labscript instead. Or maybe when I package labscript properly<br />\nI'll make an <strong>all</strong> list that will only import the bits that the user is supposed to use. But it doesn't matter,<br />\nwe're all grown ups here and don't have to have the code hidden from us to make sure we don't break things.</p>\n<p>If it turns out people slip into the habit of breaking things (making names that conflict with what labscript uses etc),<br />\nthen we'll work out what should be hidden based on that.</p>", "type": "rendered"}}, "hash": "8cb3a0164ee1ba5be8e1d6d4b475f81e4c0cb5f0", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/8cb3a0164ee1ba5be8e1d6d4b475f81e4c0cb5f0.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/8cb3a0164ee1ba5be8e1d6d4b475f81e4c0cb5f0/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/8cb3a0164ee1ba5be8e1d6d4b475f81e4c0cb5f0"}, "html": {"href": "#!/cbillington/labscript/commits/8cb3a0164ee1ba5be8e1d6d4b475f81e4c0cb5f0"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/8cb3a0164ee1ba5be8e1d6d4b475f81e4c0cb5f0"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/8cb3a0164ee1ba5be8e1d6d4b475f81e4c0cb5f0/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/8cb3a0164ee1ba5be8e1d6d4b475f81e4c0cb5f0/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "minor change to how params and device references are put into the global namespace. Now one can do:\n\n        import labscript\n        labscript.Device('device1', *otherargs)\n        device1.do_something(t=7)\n        print param1, param2\n\tlabscript.stop(t=10)\n\nrather than having to import * (which is generally frowned upon in production code), or reference the params\n(which are the experimental run's 'global' arguments, as read from the hdf5 file) with labsript.param1 or similar.\n\nI've left example.py as having 'import *' for the moment, which also imports * from pylab. I can't really see this\nbecoming an issue, but if it does we can just import labscript instead. Or maybe when I package labscript properly\nI'll make an __all__ list that will only import the bits that the user is supposed to use. But it doesn't matter,\nwe're all grown ups here and don't have to have the code hidden from us to make sure we don't break things.\n\nIf it turns out people slip into the habit of breaking things (making names that conflict with what labscript uses etc),\nthen we'll work out what should be hidden based on that.", "markup": "markdown", "html": "<p>minor change to how params and device references are put into the global namespace. Now one can do:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"kn\">import</span> <span class=\"nn\">labscript</span>\n    <span class=\"n\">labscript</span><span class=\"o\">.</span><span class=\"n\">Device</span><span class=\"p\">(</span><span class=\"s1\">&#39;device1&#39;</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">otherargs</span><span class=\"p\">)</span>\n    <span class=\"n\">device1</span><span class=\"o\">.</span><span class=\"n\">do_something</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n    <span class=\"k\">print</span> <span class=\"n\">param1</span><span class=\"p\">,</span> <span class=\"n\">param2</span>\n<span class=\"n\">labscript</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>rather than having to import * (which is generally frowned upon in production code), or reference the params<br />\n(which are the experimental run's 'global' arguments, as read from the hdf5 file) with labsript.param1 or similar.</p>\n<p>I've left example.py as having 'import *' for the moment, which also imports * from pylab. I can't really see this<br />\nbecoming an issue, but if it does we can just import labscript instead. Or maybe when I package labscript properly<br />\nI'll make an <strong>all</strong> list that will only import the bits that the user is supposed to use. But it doesn't matter,<br />\nwe're all grown ups here and don't have to have the code hidden from us to make sure we don't break things.</p>\n<p>If it turns out people slip into the habit of breaking things (making names that conflict with what labscript uses etc),<br />\nthen we'll work out what should be hidden based on that.</p>", "type": "rendered"}, "parents": [{"hash": "7fa19d7d851663762febf9e038314fb235842211", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/7fa19d7d851663762febf9e038314fb235842211.json"}, "html": {"href": "#!/cbillington/labscript/commits/7fa19d7d851663762febf9e038314fb235842211"}}}], "date": "2011-04-13T06:18:37+00:00", "message": "minor change to how params and device references are put into the global namespace. Now one can do:\n\n        import labscript\n        labscript.Device('device1', *otherargs)\n        device1.do_something(t=7)\n        print param1, param2\n\tlabscript.stop(t=10)\n\nrather than having to import * (which is generally frowned upon in production code), or reference the params\n(which are the experimental run's 'global' arguments, as read from the hdf5 file) with labsript.param1 or similar.\n\nI've left example.py as having 'import *' for the moment, which also imports * from pylab. I can't really see this\nbecoming an issue, but if it does we can just import labscript instead. Or maybe when I package labscript properly\nI'll make an __all__ list that will only import the bits that the user is supposed to use. But it doesn't matter,\nwe're all grown ups here and don't have to have the code hidden from us to make sure we don't break things.\n\nIf it turns out people slip into the habit of breaking things (making names that conflict with what labscript uses etc),\nthen we'll work out what should be hidden based on that.", "type": "commit"}, {"rendered": {"message": {"raw": "cleaning up", "markup": "markdown", "html": "<p>cleaning up</p>", "type": "rendered"}}, "hash": "7fa19d7d851663762febf9e038314fb235842211", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/7fa19d7d851663762febf9e038314fb235842211.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/7fa19d7d851663762febf9e038314fb235842211/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/7fa19d7d851663762febf9e038314fb235842211"}, "html": {"href": "#!/cbillington/labscript/commits/7fa19d7d851663762febf9e038314fb235842211"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/7fa19d7d851663762febf9e038314fb235842211"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/7fa19d7d851663762febf9e038314fb235842211/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/7fa19d7d851663762febf9e038314fb235842211/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "cleaning up", "markup": "markdown", "html": "<p>cleaning up</p>", "type": "rendered"}, "parents": [{"hash": "f38c7c1ffbdb0430dc0e0a59085be745c8f3b4eb", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/f38c7c1ffbdb0430dc0e0a59085be745c8f3b4eb.json"}, "html": {"href": "#!/cbillington/labscript/commits/f38c7c1ffbdb0430dc0e0a59085be745c8f3b4eb"}}}], "date": "2011-04-13T06:02:32+00:00", "message": "cleaning up", "type": "commit"}, {"rendered": {"message": {"raw": "Device initialisation now requires only one name for each object, rather than two.\n\nPreviously, you had to both give the object a name as a string argument, and you had to specify a python variable name to reference it:\n\n\tname_1 = Device('name_2', *otherargs)\n\nNow you only provide one name, as a string argument, and the initialisation will automatically place a reference to the device object in the\nglobal namespace:\n\n>>> Device('name_1', *otherargs)\n>>> print name_1\n<__main__.Device object at 0x7f0ca4a64e50>\n\nOf course, the name must be a valid Python variable name -- else a ValueError will be raised.\n\nThis also means that you now have to explicitly give the full name of all the IntermediateDevices, such as NovatechDDS9ms, NIBoards, and also\nPulseBlasters. Previously these objects made their own names from a fixed string, and just appended a number to it. We'll have to ensure that these\nnames match what LabVIEW expects -- so that it can match these devices to the actual hardware it programs.\n\nThis should be pretty easy to enforce, especially since I'm about to implement code generation for the device initialisation part of labscripts.\n\nStay tuned for that!", "markup": "markdown", "html": "<p>Device initialisation now requires only one name for each object, rather than two.</p>\n<p>Previously, you had to both give the object a name as a string argument, and you had to specify a python variable name to reference it:</p>\n<div class=\"codehilite\"><pre><span></span>name_1 = Device(&#39;name_2&#39;, *otherargs)\n</pre></div>\n\n\n<p>Now you only provide one name, as a string argument, and the initialisation will automatically place a reference to the device object in the<br />\nglobal namespace:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>Device('name_1', *otherargs)<br />\nprint name_1<br />\n&lt;<strong>main</strong>.Device object at 0x7f0ca4a64e50&gt;</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>Of course, the name must be a valid Python variable name -- else a ValueError will be raised.</p>\n<p>This also means that you now have to explicitly give the full name of all the IntermediateDevices, such as NovatechDDS9ms, NIBoards, and also<br />\nPulseBlasters. Previously these objects made their own names from a fixed string, and just appended a number to it. We'll have to ensure that these<br />\nnames match what LabVIEW expects -- so that it can match these devices to the actual hardware it programs.</p>\n<p>This should be pretty easy to enforce, especially since I'm about to implement code generation for the device initialisation part of labscripts.</p>\n<p>Stay tuned for that!</p>", "type": "rendered"}}, "hash": "f38c7c1ffbdb0430dc0e0a59085be745c8f3b4eb", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/f38c7c1ffbdb0430dc0e0a59085be745c8f3b4eb.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/f38c7c1ffbdb0430dc0e0a59085be745c8f3b4eb/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/f38c7c1ffbdb0430dc0e0a59085be745c8f3b4eb"}, "html": {"href": "#!/cbillington/labscript/commits/f38c7c1ffbdb0430dc0e0a59085be745c8f3b4eb"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/f38c7c1ffbdb0430dc0e0a59085be745c8f3b4eb"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/f38c7c1ffbdb0430dc0e0a59085be745c8f3b4eb/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/f38c7c1ffbdb0430dc0e0a59085be745c8f3b4eb/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Device initialisation now requires only one name for each object, rather than two.\n\nPreviously, you had to both give the object a name as a string argument, and you had to specify a python variable name to reference it:\n\n\tname_1 = Device('name_2', *otherargs)\n\nNow you only provide one name, as a string argument, and the initialisation will automatically place a reference to the device object in the\nglobal namespace:\n\n>>> Device('name_1', *otherargs)\n>>> print name_1\n<__main__.Device object at 0x7f0ca4a64e50>\n\nOf course, the name must be a valid Python variable name -- else a ValueError will be raised.\n\nThis also means that you now have to explicitly give the full name of all the IntermediateDevices, such as NovatechDDS9ms, NIBoards, and also\nPulseBlasters. Previously these objects made their own names from a fixed string, and just appended a number to it. We'll have to ensure that these\nnames match what LabVIEW expects -- so that it can match these devices to the actual hardware it programs.\n\nThis should be pretty easy to enforce, especially since I'm about to implement code generation for the device initialisation part of labscripts.\n\nStay tuned for that!", "markup": "markdown", "html": "<p>Device initialisation now requires only one name for each object, rather than two.</p>\n<p>Previously, you had to both give the object a name as a string argument, and you had to specify a python variable name to reference it:</p>\n<div class=\"codehilite\"><pre><span></span>name_1 = Device(&#39;name_2&#39;, *otherargs)\n</pre></div>\n\n\n<p>Now you only provide one name, as a string argument, and the initialisation will automatically place a reference to the device object in the<br />\nglobal namespace:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>Device('name_1', *otherargs)<br />\nprint name_1<br />\n&lt;<strong>main</strong>.Device object at 0x7f0ca4a64e50&gt;</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>Of course, the name must be a valid Python variable name -- else a ValueError will be raised.</p>\n<p>This also means that you now have to explicitly give the full name of all the IntermediateDevices, such as NovatechDDS9ms, NIBoards, and also<br />\nPulseBlasters. Previously these objects made their own names from a fixed string, and just appended a number to it. We'll have to ensure that these<br />\nnames match what LabVIEW expects -- so that it can match these devices to the actual hardware it programs.</p>\n<p>This should be pretty easy to enforce, especially since I'm about to implement code generation for the device initialisation part of labscripts.</p>\n<p>Stay tuned for that!</p>", "type": "rendered"}, "parents": [{"hash": "897fe3f4d690f605325d4df7d13be0bafd202876", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/897fe3f4d690f605325d4df7d13be0bafd202876.json"}, "html": {"href": "#!/cbillington/labscript/commits/897fe3f4d690f605325d4df7d13be0bafd202876"}}}], "date": "2011-04-13T05:38:08+00:00", "message": "Device initialisation now requires only one name for each object, rather than two.\n\nPreviously, you had to both give the object a name as a string argument, and you had to specify a python variable name to reference it:\n\n\tname_1 = Device('name_2', *otherargs)\n\nNow you only provide one name, as a string argument, and the initialisation will automatically place a reference to the device object in the\nglobal namespace:\n\n>>> Device('name_1', *otherargs)\n>>> print name_1\n<__main__.Device object at 0x7f0ca4a64e50>\n\nOf course, the name must be a valid Python variable name -- else a ValueError will be raised.\n\nThis also means that you now have to explicitly give the full name of all the IntermediateDevices, such as NovatechDDS9ms, NIBoards, and also\nPulseBlasters. Previously these objects made their own names from a fixed string, and just appended a number to it. We'll have to ensure that these\nnames match what LabVIEW expects -- so that it can match these devices to the actual hardware it programs.\n\nThis should be pretty easy to enforce, especially since I'm about to implement code generation for the device initialisation part of labscripts.\n\nStay tuned for that!", "type": "commit"}, {"rendered": {"message": {"raw": "Pulseblaster clock flags are now the last two rather than the first two.", "markup": "markdown", "html": "<p>Pulseblaster clock flags are now the last two rather than the first two.</p>", "type": "rendered"}}, "hash": "897fe3f4d690f605325d4df7d13be0bafd202876", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/897fe3f4d690f605325d4df7d13be0bafd202876.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/897fe3f4d690f605325d4df7d13be0bafd202876/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/897fe3f4d690f605325d4df7d13be0bafd202876"}, "html": {"href": "#!/cbillington/labscript/commits/897fe3f4d690f605325d4df7d13be0bafd202876"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/897fe3f4d690f605325d4df7d13be0bafd202876"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/897fe3f4d690f605325d4df7d13be0bafd202876/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/897fe3f4d690f605325d4df7d13be0bafd202876/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Pulseblaster clock flags are now the last two rather than the first two.", "markup": "markdown", "html": "<p>Pulseblaster clock flags are now the last two rather than the first two.</p>", "type": "rendered"}, "parents": [{"hash": "303a5110ef7dddf26ad1e8d1a1796e0245eb5817", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/303a5110ef7dddf26ad1e8d1a1796e0245eb5817.json"}, "html": {"href": "#!/cbillington/labscript/commits/303a5110ef7dddf26ad1e8d1a1796e0245eb5817"}}}], "date": "2011-04-13T00:14:46+00:00", "message": "Pulseblaster clock flags are now the last two rather than the first two.", "type": "commit"}, {"rendered": {"message": {"raw": "Several fairly big changes.\n\n1. Devices are now all in a group called 'devices' in the hdf5 file.\n\n2. A device connection table is now stored to a dataset called 'connection table' at the top level of the hdf5 file.\n\n3. Connections to all parent devices are now more descriptive, ie 'flag 2' for a connection to a PulseBlaster rather than just 2,\n   and 'channel 0' for a device connected to a Novatech DDS rather than just 0.\n\n4. The stop(t=stop_time) function now calls generate_code(), so a separate call is not needed. stop() also does sys.exit(0) when its done,\n   so any python code following it will not be executed. This will be useful for setting 'breakpoints' in experimental runs.\n\n5. Bit of refactoring, with a new class called IntermediateDevice, which both Novatech DDSs and NI cards are subclasses of.\n   Their __init__() functions were becoming pretty similar, so this avoids code duplication.\n\n6. example.py was simplified, with profiling code removed. We can do more profiling later if we see poor performance.", "markup": "markdown", "html": "<p>Several fairly big changes.</p>\n<ol>\n<li>\n<p>Devices are now all in a group called 'devices' in the hdf5 file.</p>\n</li>\n<li>\n<p>A device connection table is now stored to a dataset called 'connection table' at the top level of the hdf5 file.</p>\n</li>\n<li>\n<p>Connections to all parent devices are now more descriptive, ie 'flag 2' for a connection to a PulseBlaster rather than just 2,<br />\n   and 'channel 0' for a device connected to a Novatech DDS rather than just 0.</p>\n</li>\n<li>\n<p>The stop(t=stop_time) function now calls generate_code(), so a separate call is not needed. stop() also does sys.exit(0) when its done,<br />\n   so any python code following it will not be executed. This will be useful for setting 'breakpoints' in experimental runs.</p>\n</li>\n<li>\n<p>Bit of refactoring, with a new class called IntermediateDevice, which both Novatech DDSs and NI cards are subclasses of.<br />\n   Their <strong>init</strong>() functions were becoming pretty similar, so this avoids code duplication.</p>\n</li>\n<li>\n<p>example.py was simplified, with profiling code removed. We can do more profiling later if we see poor performance.</p>\n</li>\n</ol>", "type": "rendered"}}, "hash": "303a5110ef7dddf26ad1e8d1a1796e0245eb5817", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/303a5110ef7dddf26ad1e8d1a1796e0245eb5817.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/303a5110ef7dddf26ad1e8d1a1796e0245eb5817/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/303a5110ef7dddf26ad1e8d1a1796e0245eb5817"}, "html": {"href": "#!/cbillington/labscript/commits/303a5110ef7dddf26ad1e8d1a1796e0245eb5817"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/303a5110ef7dddf26ad1e8d1a1796e0245eb5817"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/303a5110ef7dddf26ad1e8d1a1796e0245eb5817/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/303a5110ef7dddf26ad1e8d1a1796e0245eb5817/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Several fairly big changes.\n\n1. Devices are now all in a group called 'devices' in the hdf5 file.\n\n2. A device connection table is now stored to a dataset called 'connection table' at the top level of the hdf5 file.\n\n3. Connections to all parent devices are now more descriptive, ie 'flag 2' for a connection to a PulseBlaster rather than just 2,\n   and 'channel 0' for a device connected to a Novatech DDS rather than just 0.\n\n4. The stop(t=stop_time) function now calls generate_code(), so a separate call is not needed. stop() also does sys.exit(0) when its done,\n   so any python code following it will not be executed. This will be useful for setting 'breakpoints' in experimental runs.\n\n5. Bit of refactoring, with a new class called IntermediateDevice, which both Novatech DDSs and NI cards are subclasses of.\n   Their __init__() functions were becoming pretty similar, so this avoids code duplication.\n\n6. example.py was simplified, with profiling code removed. We can do more profiling later if we see poor performance.", "markup": "markdown", "html": "<p>Several fairly big changes.</p>\n<ol>\n<li>\n<p>Devices are now all in a group called 'devices' in the hdf5 file.</p>\n</li>\n<li>\n<p>A device connection table is now stored to a dataset called 'connection table' at the top level of the hdf5 file.</p>\n</li>\n<li>\n<p>Connections to all parent devices are now more descriptive, ie 'flag 2' for a connection to a PulseBlaster rather than just 2,<br />\n   and 'channel 0' for a device connected to a Novatech DDS rather than just 0.</p>\n</li>\n<li>\n<p>The stop(t=stop_time) function now calls generate_code(), so a separate call is not needed. stop() also does sys.exit(0) when its done,<br />\n   so any python code following it will not be executed. This will be useful for setting 'breakpoints' in experimental runs.</p>\n</li>\n<li>\n<p>Bit of refactoring, with a new class called IntermediateDevice, which both Novatech DDSs and NI cards are subclasses of.<br />\n   Their <strong>init</strong>() functions were becoming pretty similar, so this avoids code duplication.</p>\n</li>\n<li>\n<p>example.py was simplified, with profiling code removed. We can do more profiling later if we see poor performance.</p>\n</li>\n</ol>", "type": "rendered"}, "parents": [{"hash": "af480e94fb8460d3a825ca400ea9619ba082e5c0", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/af480e94fb8460d3a825ca400ea9619ba082e5c0.json"}, "html": {"href": "#!/cbillington/labscript/commits/af480e94fb8460d3a825ca400ea9619ba082e5c0"}}}], "date": "2011-04-12T02:25:57+00:00", "message": "Several fairly big changes.\n\n1. Devices are now all in a group called 'devices' in the hdf5 file.\n\n2. A device connection table is now stored to a dataset called 'connection table' at the top level of the hdf5 file.\n\n3. Connections to all parent devices are now more descriptive, ie 'flag 2' for a connection to a PulseBlaster rather than just 2,\n   and 'channel 0' for a device connected to a Novatech DDS rather than just 0.\n\n4. The stop(t=stop_time) function now calls generate_code(), so a separate call is not needed. stop() also does sys.exit(0) when its done,\n   so any python code following it will not be executed. This will be useful for setting 'breakpoints' in experimental runs.\n\n5. Bit of refactoring, with a new class called IntermediateDevice, which both Novatech DDSs and NI cards are subclasses of.\n   Their __init__() functions were becoming pretty similar, so this avoids code duplication.\n\n6. example.py was simplified, with profiling code removed. We can do more profiling later if we see poor performance.", "type": "commit"}, {"rendered": {"message": {"raw": "The experimental script text is now stored to a dataset called SCRIPT, at the top level of the hdf5 file", "markup": "markdown", "html": "<p>The experimental script text is now stored to a dataset called SCRIPT, at the top level of the hdf5 file</p>", "type": "rendered"}}, "hash": "af480e94fb8460d3a825ca400ea9619ba082e5c0", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/af480e94fb8460d3a825ca400ea9619ba082e5c0.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/af480e94fb8460d3a825ca400ea9619ba082e5c0/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/af480e94fb8460d3a825ca400ea9619ba082e5c0"}, "html": {"href": "#!/cbillington/labscript/commits/af480e94fb8460d3a825ca400ea9619ba082e5c0"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/af480e94fb8460d3a825ca400ea9619ba082e5c0"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/af480e94fb8460d3a825ca400ea9619ba082e5c0/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/af480e94fb8460d3a825ca400ea9619ba082e5c0/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "The experimental script text is now stored to a dataset called SCRIPT, at the top level of the hdf5 file", "markup": "markdown", "html": "<p>The experimental script text is now stored to a dataset called SCRIPT, at the top level of the hdf5 file</p>", "type": "rendered"}, "parents": [{"hash": "8a944cb3c51fa021c5c03efc3457cec1859255e5", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/8a944cb3c51fa021c5c03efc3457cec1859255e5.json"}, "html": {"href": "#!/cbillington/labscript/commits/8a944cb3c51fa021c5c03efc3457cec1859255e5"}}}], "date": "2011-04-08T14:10:43+00:00", "message": "The experimental script text is now stored to a dataset called SCRIPT, at the top level of the hdf5 file", "type": "commit"}, {"rendered": {"message": {"raw": "Analog inputs implemented with a class called AnalogIn, which is to be a child device of an NIBoard object. The list of analog inputs used is stored as an attribute\nto the group for the NI Card in the hdf5 file.\n\nAcquisitions can be programmed with calls to AnalogIn.acquire(label,start_time,stop_time), with an optional scale factor and units string. These can be used later duting analysis.\nThe NIBoard class now takes an acquisition_rate argument when initialised, which is stored as an attribute as well. The LabVIEW control system will use this clock rate and the list\nof analog inputs to program the boards to acquire data for the entirety of the experiment. The acquired data will have the same number of points for each input channel, and so can be\nstored as a single array under the NI card's group in the hdf5 file.\n\nA post-processing script will take this acquired data and split it up into separate measurements (corresponding to single calls to AnalogIn.acquire), using data for the start and stop\ntimes of each call, stored as a table called ACQUISITIONS in the hdf5 file.\n\nA couple of attributes changed name in this revision (to avoid ambiguities), so unless they were hardcoded in LabVIEW, things might break!", "markup": "markdown", "html": "<p>Analog inputs implemented with a class called AnalogIn, which is to be a child device of an NIBoard object. The list of analog inputs used is stored as an attribute<br />\nto the group for the NI Card in the hdf5 file.</p>\n<p>Acquisitions can be programmed with calls to AnalogIn.acquire(label,start_time,stop_time), with an optional scale factor and units string. These can be used later duting analysis.<br />\nThe NIBoard class now takes an acquisition_rate argument when initialised, which is stored as an attribute as well. The LabVIEW control system will use this clock rate and the list<br />\nof analog inputs to program the boards to acquire data for the entirety of the experiment. The acquired data will have the same number of points for each input channel, and so can be<br />\nstored as a single array under the NI card's group in the hdf5 file.</p>\n<p>A post-processing script will take this acquired data and split it up into separate measurements (corresponding to single calls to AnalogIn.acquire), using data for the start and stop<br />\ntimes of each call, stored as a table called ACQUISITIONS in the hdf5 file.</p>\n<p>A couple of attributes changed name in this revision (to avoid ambiguities), so unless they were hardcoded in LabVIEW, things might break!</p>", "type": "rendered"}}, "hash": "8a944cb3c51fa021c5c03efc3457cec1859255e5", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/8a944cb3c51fa021c5c03efc3457cec1859255e5.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/8a944cb3c51fa021c5c03efc3457cec1859255e5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/8a944cb3c51fa021c5c03efc3457cec1859255e5"}, "html": {"href": "#!/cbillington/labscript/commits/8a944cb3c51fa021c5c03efc3457cec1859255e5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/8a944cb3c51fa021c5c03efc3457cec1859255e5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/8a944cb3c51fa021c5c03efc3457cec1859255e5/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/8a944cb3c51fa021c5c03efc3457cec1859255e5/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Analog inputs implemented with a class called AnalogIn, which is to be a child device of an NIBoard object. The list of analog inputs used is stored as an attribute\nto the group for the NI Card in the hdf5 file.\n\nAcquisitions can be programmed with calls to AnalogIn.acquire(label,start_time,stop_time), with an optional scale factor and units string. These can be used later duting analysis.\nThe NIBoard class now takes an acquisition_rate argument when initialised, which is stored as an attribute as well. The LabVIEW control system will use this clock rate and the list\nof analog inputs to program the boards to acquire data for the entirety of the experiment. The acquired data will have the same number of points for each input channel, and so can be\nstored as a single array under the NI card's group in the hdf5 file.\n\nA post-processing script will take this acquired data and split it up into separate measurements (corresponding to single calls to AnalogIn.acquire), using data for the start and stop\ntimes of each call, stored as a table called ACQUISITIONS in the hdf5 file.\n\nA couple of attributes changed name in this revision (to avoid ambiguities), so unless they were hardcoded in LabVIEW, things might break!", "markup": "markdown", "html": "<p>Analog inputs implemented with a class called AnalogIn, which is to be a child device of an NIBoard object. The list of analog inputs used is stored as an attribute<br />\nto the group for the NI Card in the hdf5 file.</p>\n<p>Acquisitions can be programmed with calls to AnalogIn.acquire(label,start_time,stop_time), with an optional scale factor and units string. These can be used later duting analysis.<br />\nThe NIBoard class now takes an acquisition_rate argument when initialised, which is stored as an attribute as well. The LabVIEW control system will use this clock rate and the list<br />\nof analog inputs to program the boards to acquire data for the entirety of the experiment. The acquired data will have the same number of points for each input channel, and so can be<br />\nstored as a single array under the NI card's group in the hdf5 file.</p>\n<p>A post-processing script will take this acquired data and split it up into separate measurements (corresponding to single calls to AnalogIn.acquire), using data for the start and stop<br />\ntimes of each call, stored as a table called ACQUISITIONS in the hdf5 file.</p>\n<p>A couple of attributes changed name in this revision (to avoid ambiguities), so unless they were hardcoded in LabVIEW, things might break!</p>", "type": "rendered"}, "parents": [{"hash": "23c0a099711c93a8211c865a812f988bcefedb32", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/23c0a099711c93a8211c865a812f988bcefedb32.json"}, "html": {"href": "#!/cbillington/labscript/commits/23c0a099711c93a8211c865a812f988bcefedb32"}}}], "date": "2011-04-08T13:31:28+00:00", "message": "Analog inputs implemented with a class called AnalogIn, which is to be a child device of an NIBoard object. The list of analog inputs used is stored as an attribute\nto the group for the NI Card in the hdf5 file.\n\nAcquisitions can be programmed with calls to AnalogIn.acquire(label,start_time,stop_time), with an optional scale factor and units string. These can be used later duting analysis.\nThe NIBoard class now takes an acquisition_rate argument when initialised, which is stored as an attribute as well. The LabVIEW control system will use this clock rate and the list\nof analog inputs to program the boards to acquire data for the entirety of the experiment. The acquired data will have the same number of points for each input channel, and so can be\nstored as a single array under the NI card's group in the hdf5 file.\n\nA post-processing script will take this acquired data and split it up into separate measurements (corresponding to single calls to AnalogIn.acquire), using data for the start and stop\ntimes of each call, stored as a table called ACQUISITIONS in the hdf5 file.\n\nA couple of attributes changed name in this revision (to avoid ambiguities), so unless they were hardcoded in LabVIEW, things might break!", "type": "commit"}, {"rendered": {"message": {"raw": "Added initial support for shutter calibration. At the moment a calibration file is simply produced by calibrate_shutters.py, and a comment in that file\ndescribes the future plans for how this will be produced. Calibrations are stored as attributes in a hdf5 file calibrations.h5.\n\nWhen instantiating a shutter, a labscript user can add an argument: delay=(open_delay,close_delay), to specify the delays in the script, or can set delay='calibrated' to instruct labscript\nto find the delays in the calibrations.h5 file. They are attributes to the group /shutters/shuttername, where shuttername is the name of the shutter object, given\nto it as the first argument when the user instantiates it.\n\nAlso this commit makes devices attached to pulseblaster flags processed as being on the slow clock. There can be no constant clock rate ramps for such devices, since the pulseblaster\nitself does not output buffered values when it gets a clock tick. Rather, a separate instruction is required every time an output changes state. The output produced is identical, but\ninternally labscript no longer expands the pulseblaster flags to their values at every time in the fast clock.\n\nIf this change hadn't been made, then we would have run into problems with the pulseblaster DDS outputs, once functionality for them is implemented.* It is nonsensical to ask one of them\nto do a ramp on the fast clock, since every update requires a new pulseblaster instruction, and the fast clock is implemented with loops. Ramps will have to be done with repeated calls to\nDDS.set_amp(t, value) etc. This can still be abstracted away to perform fast ramps (or ones with a non constant update rate), but there is a risk that these instructions will collide with\ninstructions on the devices attached to the flags, exceeding their maximum update rate. In this case labscript throws an error. Really the slow clock shouldn't be used that way, and if we\nneed pulseblaster or novatech boards to do ramps like that we should make sure nothing else on the pulseblaster flags needs to change state at the same time.\n\nThese are the sorts of things we should consider when deciding what thing to plug into what pulseblaster!", "markup": "markdown", "html": "<p>Added initial support for shutter calibration. At the moment a calibration file is simply produced by calibrate_shutters.py, and a comment in that file<br />\ndescribes the future plans for how this will be produced. Calibrations are stored as attributes in a hdf5 file calibrations.h5.</p>\n<p>When instantiating a shutter, a labscript user can add an argument: delay=(open_delay,close_delay), to specify the delays in the script, or can set delay='calibrated' to instruct labscript<br />\nto find the delays in the calibrations.h5 file. They are attributes to the group /shutters/shuttername, where shuttername is the name of the shutter object, given<br />\nto it as the first argument when the user instantiates it.</p>\n<p>Also this commit makes devices attached to pulseblaster flags processed as being on the slow clock. There can be no constant clock rate ramps for such devices, since the pulseblaster<br />\nitself does not output buffered values when it gets a clock tick. Rather, a separate instruction is required every time an output changes state. The output produced is identical, but<br />\ninternally labscript no longer expands the pulseblaster flags to their values at every time in the fast clock.</p>\n<p>If this change hadn't been made, then we would have run into problems with the pulseblaster DDS outputs, once functionality for them is implemented.* It is nonsensical to ask one of them<br />\nto do a ramp on the fast clock, since every update requires a new pulseblaster instruction, and the fast clock is implemented with loops. Ramps will have to be done with repeated calls to<br />\nDDS.set_amp(t, value) etc. This can still be abstracted away to perform fast ramps (or ones with a non constant update rate), but there is a risk that these instructions will collide with<br />\ninstructions on the devices attached to the flags, exceeding their maximum update rate. In this case labscript throws an error. Really the slow clock shouldn't be used that way, and if we<br />\nneed pulseblaster or novatech boards to do ramps like that we should make sure nothing else on the pulseblaster flags needs to change state at the same time.</p>\n<p>These are the sorts of things we should consider when deciding what thing to plug into what pulseblaster!</p>", "type": "rendered"}}, "hash": "23c0a099711c93a8211c865a812f988bcefedb32", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/23c0a099711c93a8211c865a812f988bcefedb32.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/23c0a099711c93a8211c865a812f988bcefedb32/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/23c0a099711c93a8211c865a812f988bcefedb32"}, "html": {"href": "#!/cbillington/labscript/commits/23c0a099711c93a8211c865a812f988bcefedb32"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/23c0a099711c93a8211c865a812f988bcefedb32"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/23c0a099711c93a8211c865a812f988bcefedb32/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/23c0a099711c93a8211c865a812f988bcefedb32/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added initial support for shutter calibration. At the moment a calibration file is simply produced by calibrate_shutters.py, and a comment in that file\ndescribes the future plans for how this will be produced. Calibrations are stored as attributes in a hdf5 file calibrations.h5.\n\nWhen instantiating a shutter, a labscript user can add an argument: delay=(open_delay,close_delay), to specify the delays in the script, or can set delay='calibrated' to instruct labscript\nto find the delays in the calibrations.h5 file. They are attributes to the group /shutters/shuttername, where shuttername is the name of the shutter object, given\nto it as the first argument when the user instantiates it.\n\nAlso this commit makes devices attached to pulseblaster flags processed as being on the slow clock. There can be no constant clock rate ramps for such devices, since the pulseblaster\nitself does not output buffered values when it gets a clock tick. Rather, a separate instruction is required every time an output changes state. The output produced is identical, but\ninternally labscript no longer expands the pulseblaster flags to their values at every time in the fast clock.\n\nIf this change hadn't been made, then we would have run into problems with the pulseblaster DDS outputs, once functionality for them is implemented.* It is nonsensical to ask one of them\nto do a ramp on the fast clock, since every update requires a new pulseblaster instruction, and the fast clock is implemented with loops. Ramps will have to be done with repeated calls to\nDDS.set_amp(t, value) etc. This can still be abstracted away to perform fast ramps (or ones with a non constant update rate), but there is a risk that these instructions will collide with\ninstructions on the devices attached to the flags, exceeding their maximum update rate. In this case labscript throws an error. Really the slow clock shouldn't be used that way, and if we\nneed pulseblaster or novatech boards to do ramps like that we should make sure nothing else on the pulseblaster flags needs to change state at the same time.\n\nThese are the sorts of things we should consider when deciding what thing to plug into what pulseblaster!", "markup": "markdown", "html": "<p>Added initial support for shutter calibration. At the moment a calibration file is simply produced by calibrate_shutters.py, and a comment in that file<br />\ndescribes the future plans for how this will be produced. Calibrations are stored as attributes in a hdf5 file calibrations.h5.</p>\n<p>When instantiating a shutter, a labscript user can add an argument: delay=(open_delay,close_delay), to specify the delays in the script, or can set delay='calibrated' to instruct labscript<br />\nto find the delays in the calibrations.h5 file. They are attributes to the group /shutters/shuttername, where shuttername is the name of the shutter object, given<br />\nto it as the first argument when the user instantiates it.</p>\n<p>Also this commit makes devices attached to pulseblaster flags processed as being on the slow clock. There can be no constant clock rate ramps for such devices, since the pulseblaster<br />\nitself does not output buffered values when it gets a clock tick. Rather, a separate instruction is required every time an output changes state. The output produced is identical, but<br />\ninternally labscript no longer expands the pulseblaster flags to their values at every time in the fast clock.</p>\n<p>If this change hadn't been made, then we would have run into problems with the pulseblaster DDS outputs, once functionality for them is implemented.* It is nonsensical to ask one of them<br />\nto do a ramp on the fast clock, since every update requires a new pulseblaster instruction, and the fast clock is implemented with loops. Ramps will have to be done with repeated calls to<br />\nDDS.set_amp(t, value) etc. This can still be abstracted away to perform fast ramps (or ones with a non constant update rate), but there is a risk that these instructions will collide with<br />\ninstructions on the devices attached to the flags, exceeding their maximum update rate. In this case labscript throws an error. Really the slow clock shouldn't be used that way, and if we<br />\nneed pulseblaster or novatech boards to do ramps like that we should make sure nothing else on the pulseblaster flags needs to change state at the same time.</p>\n<p>These are the sorts of things we should consider when deciding what thing to plug into what pulseblaster!</p>", "type": "rendered"}, "parents": [{"hash": "3f3b22915cc004442a73ecc761581d27754f2afb", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/3f3b22915cc004442a73ecc761581d27754f2afb.json"}, "html": {"href": "#!/cbillington/labscript/commits/3f3b22915cc004442a73ecc761581d27754f2afb"}}}], "date": "2011-03-31T07:39:15+00:00", "message": "Added initial support for shutter calibration. At the moment a calibration file is simply produced by calibrate_shutters.py, and a comment in that file\ndescribes the future plans for how this will be produced. Calibrations are stored as attributes in a hdf5 file calibrations.h5.\n\nWhen instantiating a shutter, a labscript user can add an argument: delay=(open_delay,close_delay), to specify the delays in the script, or can set delay='calibrated' to instruct labscript\nto find the delays in the calibrations.h5 file. They are attributes to the group /shutters/shuttername, where shuttername is the name of the shutter object, given\nto it as the first argument when the user instantiates it.\n\nAlso this commit makes devices attached to pulseblaster flags processed as being on the slow clock. There can be no constant clock rate ramps for such devices, since the pulseblaster\nitself does not output buffered values when it gets a clock tick. Rather, a separate instruction is required every time an output changes state. The output produced is identical, but\ninternally labscript no longer expands the pulseblaster flags to their values at every time in the fast clock.\n\nIf this change hadn't been made, then we would have run into problems with the pulseblaster DDS outputs, once functionality for them is implemented.* It is nonsensical to ask one of them\nto do a ramp on the fast clock, since every update requires a new pulseblaster instruction, and the fast clock is implemented with loops. Ramps will have to be done with repeated calls to\nDDS.set_amp(t, value) etc. This can still be abstracted away to perform fast ramps (or ones with a non constant update rate), but there is a risk that these instructions will collide with\ninstructions on the devices attached to the flags, exceeding their maximum update rate. In this case labscript throws an error. Really the slow clock shouldn't be used that way, and if we\nneed pulseblaster or novatech boards to do ramps like that we should make sure nothing else on the pulseblaster flags needs to change state at the same time.\n\nThese are the sorts of things we should consider when deciding what thing to plug into what pulseblaster!", "type": "commit"}, {"rendered": {"message": {"raw": "added error checking for negative times. Labscript now throws a error if a negative time is requested.", "markup": "markdown", "html": "<p>added error checking for negative times. Labscript now throws a error if a negative time is requested.</p>", "type": "rendered"}}, "hash": "3f3b22915cc004442a73ecc761581d27754f2afb", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/3f3b22915cc004442a73ecc761581d27754f2afb.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/3f3b22915cc004442a73ecc761581d27754f2afb/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/3f3b22915cc004442a73ecc761581d27754f2afb"}, "html": {"href": "#!/cbillington/labscript/commits/3f3b22915cc004442a73ecc761581d27754f2afb"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/3f3b22915cc004442a73ecc761581d27754f2afb"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/3f3b22915cc004442a73ecc761581d27754f2afb/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/3f3b22915cc004442a73ecc761581d27754f2afb/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "added error checking for negative times. Labscript now throws a error if a negative time is requested.", "markup": "markdown", "html": "<p>added error checking for negative times. Labscript now throws a error if a negative time is requested.</p>", "type": "rendered"}, "parents": [{"hash": "e571768404026307a9be6d640f8b38372a7ce2b8", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/e571768404026307a9be6d640f8b38372a7ce2b8.json"}, "html": {"href": "#!/cbillington/labscript/commits/e571768404026307a9be6d640f8b38372a7ce2b8"}}}], "date": "2011-03-31T01:21:08+00:00", "message": "added error checking for negative times. Labscript now throws a error if a negative time is requested.", "type": "commit"}, {"rendered": {"message": {"raw": "small changes to novatech.py", "markup": "markdown", "html": "<p>small changes to novatech.py</p>", "type": "rendered"}}, "hash": "e571768404026307a9be6d640f8b38372a7ce2b8", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/e571768404026307a9be6d640f8b38372a7ce2b8.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/e571768404026307a9be6d640f8b38372a7ce2b8/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/e571768404026307a9be6d640f8b38372a7ce2b8"}, "html": {"href": "#!/cbillington/labscript/commits/e571768404026307a9be6d640f8b38372a7ce2b8"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/e571768404026307a9be6d640f8b38372a7ce2b8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/e571768404026307a9be6d640f8b38372a7ce2b8/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/e571768404026307a9be6d640f8b38372a7ce2b8/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "small changes to novatech.py", "markup": "markdown", "html": "<p>small changes to novatech.py</p>", "type": "rendered"}, "parents": [{"hash": "10d741c546b70cd15716c7c9073a0a7fddaaeedd", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/10d741c546b70cd15716c7c9073a0a7fddaaeedd.json"}, "html": {"href": "#!/cbillington/labscript/commits/10d741c546b70cd15716c7c9073a0a7fddaaeedd"}}}], "date": "2011-03-31T01:02:03+00:00", "message": "small changes to novatech.py", "type": "commit"}, {"rendered": {"message": {"raw": "novatech.py now takes board number as a command line argument, and reads the hdf5 file according to our new naming conventions. novatech.py is now ready for use!\n\nUSAGE:  python novatech.py [-serial=com1 | -tcp=192.168.1.10:10001] [-program] [-verify] -boardnumber=1 infile.h5", "markup": "markdown", "html": "<p>novatech.py now takes board number as a command line argument, and reads the hdf5 file according to our new naming conventions. novatech.py is now ready for use!</p>\n<p>USAGE:  python novatech.py [-serial=com1 | -tcp=192.168.1.10:10001] [-program] [-verify] -boardnumber=1 infile.h5</p>", "type": "rendered"}}, "hash": "10d741c546b70cd15716c7c9073a0a7fddaaeedd", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/10d741c546b70cd15716c7c9073a0a7fddaaeedd.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/10d741c546b70cd15716c7c9073a0a7fddaaeedd/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/10d741c546b70cd15716c7c9073a0a7fddaaeedd"}, "html": {"href": "#!/cbillington/labscript/commits/10d741c546b70cd15716c7c9073a0a7fddaaeedd"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/10d741c546b70cd15716c7c9073a0a7fddaaeedd"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/10d741c546b70cd15716c7c9073a0a7fddaaeedd/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/10d741c546b70cd15716c7c9073a0a7fddaaeedd/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "novatech.py now takes board number as a command line argument, and reads the hdf5 file according to our new naming conventions. novatech.py is now ready for use!\n\nUSAGE:  python novatech.py [-serial=com1 | -tcp=192.168.1.10:10001] [-program] [-verify] -boardnumber=1 infile.h5", "markup": "markdown", "html": "<p>novatech.py now takes board number as a command line argument, and reads the hdf5 file according to our new naming conventions. novatech.py is now ready for use!</p>\n<p>USAGE:  python novatech.py [-serial=com1 | -tcp=192.168.1.10:10001] [-program] [-verify] -boardnumber=1 infile.h5</p>", "type": "rendered"}, "parents": [{"hash": "c5422dc0c4860ac5c2ff774173f7260fb411dd14", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/c5422dc0c4860ac5c2ff774173f7260fb411dd14.json"}, "html": {"href": "#!/cbillington/labscript/commits/c5422dc0c4860ac5c2ff774173f7260fb411dd14"}}}], "date": "2011-03-31T00:54:15+00:00", "message": "novatech.py now takes board number as a command line argument, and reads the hdf5 file according to our new naming conventions. novatech.py is now ready for use!\n\nUSAGE:  python novatech.py [-serial=com1 | -tcp=192.168.1.10:10001] [-program] [-verify] -boardnumber=1 infile.h5", "type": "commit"}, {"rendered": {"message": {"raw": "fixed a dumb typo in novatech.py", "markup": "markdown", "html": "<p>fixed a dumb typo in novatech.py</p>", "type": "rendered"}}, "hash": "c5422dc0c4860ac5c2ff774173f7260fb411dd14", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/c5422dc0c4860ac5c2ff774173f7260fb411dd14.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/c5422dc0c4860ac5c2ff774173f7260fb411dd14/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/c5422dc0c4860ac5c2ff774173f7260fb411dd14"}, "html": {"href": "#!/cbillington/labscript/commits/c5422dc0c4860ac5c2ff774173f7260fb411dd14"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/c5422dc0c4860ac5c2ff774173f7260fb411dd14"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/c5422dc0c4860ac5c2ff774173f7260fb411dd14/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/c5422dc0c4860ac5c2ff774173f7260fb411dd14/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "fixed a dumb typo in novatech.py", "markup": "markdown", "html": "<p>fixed a dumb typo in novatech.py</p>", "type": "rendered"}, "parents": [{"hash": "1b4232c53c1d85e90a5d91517590bda6c645bc6b", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/1b4232c53c1d85e90a5d91517590bda6c645bc6b.json"}, "html": {"href": "#!/cbillington/labscript/commits/1b4232c53c1d85e90a5d91517590bda6c645bc6b"}}}], "date": "2011-03-29T02:44:44+00:00", "message": "fixed a dumb typo in novatech.py", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed inconsistency where digital outputs connected to the PulseBlaster didn't keep their programmed state for the final PulseBlaster instruction.\nThey were being reset to zero, wheras all other outputs in labscript aren't reset. PulseBlaster flags now are not reset to zero. It is up to the\nLabVIEW state machine and the user's settings there to choose whether to reset outputs to zero or not when an experimental run completes.", "markup": "markdown", "html": "<p>Fixed inconsistency where digital outputs connected to the PulseBlaster didn't keep their programmed state for the final PulseBlaster instruction.<br />\nThey were being reset to zero, wheras all other outputs in labscript aren't reset. PulseBlaster flags now are not reset to zero. It is up to the<br />\nLabVIEW state machine and the user's settings there to choose whether to reset outputs to zero or not when an experimental run completes.</p>", "type": "rendered"}}, "hash": "1b4232c53c1d85e90a5d91517590bda6c645bc6b", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/1b4232c53c1d85e90a5d91517590bda6c645bc6b.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/1b4232c53c1d85e90a5d91517590bda6c645bc6b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/1b4232c53c1d85e90a5d91517590bda6c645bc6b"}, "html": {"href": "#!/cbillington/labscript/commits/1b4232c53c1d85e90a5d91517590bda6c645bc6b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/1b4232c53c1d85e90a5d91517590bda6c645bc6b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/1b4232c53c1d85e90a5d91517590bda6c645bc6b/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/1b4232c53c1d85e90a5d91517590bda6c645bc6b/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed inconsistency where digital outputs connected to the PulseBlaster didn't keep their programmed state for the final PulseBlaster instruction.\nThey were being reset to zero, wheras all other outputs in labscript aren't reset. PulseBlaster flags now are not reset to zero. It is up to the\nLabVIEW state machine and the user's settings there to choose whether to reset outputs to zero or not when an experimental run completes.", "markup": "markdown", "html": "<p>Fixed inconsistency where digital outputs connected to the PulseBlaster didn't keep their programmed state for the final PulseBlaster instruction.<br />\nThey were being reset to zero, wheras all other outputs in labscript aren't reset. PulseBlaster flags now are not reset to zero. It is up to the<br />\nLabVIEW state machine and the user's settings there to choose whether to reset outputs to zero or not when an experimental run completes.</p>", "type": "rendered"}, "parents": [{"hash": "c0c8956173049b2f63d3aff610fe0753e754e7da", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/c0c8956173049b2f63d3aff610fe0753e754e7da.json"}, "html": {"href": "#!/cbillington/labscript/commits/c0c8956173049b2f63d3aff610fe0753e754e7da"}}}], "date": "2011-03-17T12:37:46+00:00", "message": "Fixed inconsistency where digital outputs connected to the PulseBlaster didn't keep their programmed state for the final PulseBlaster instruction.\nThey were being reset to zero, wheras all other outputs in labscript aren't reset. PulseBlaster flags now are not reset to zero. It is up to the\nLabVIEW state machine and the user's settings there to choose whether to reset outputs to zero or not when an experimental run completes.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a bug where generate_code() would crash when instructions were requested at certain times. The problem turned out to be\nthat I relied on the order of a list of times without having sorted it. The list was obtained from the keys of a dictionary,\nwhich everyone knows come back in a seemingly random order (they're ordered by their hashes). The reason this bug wasn't picked\nup on sooner is that I'd used integers for the instruction times in most of my tests. A great video I watched the other day:\n\nhttp://blip.tv/file/3332763\n\npointed out that the hash for an integer (and anything that equates to an integer with '==') *is that integer itself*.\nSo my keys were coming back in order most of the time, and I didn't realise til now that the list wasn't sorted. Thanks\nto Russ for the bug report.", "markup": "markdown", "html": "<p>Fixed a bug where generate_code() would crash when instructions were requested at certain times. The problem turned out to be<br />\nthat I relied on the order of a list of times without having sorted it. The list was obtained from the keys of a dictionary,<br />\nwhich everyone knows come back in a seemingly random order (they're ordered by their hashes). The reason this bug wasn't picked<br />\nup on sooner is that I'd used integers for the instruction times in most of my tests. A great video I watched the other day:</p>\n<p><a href=\"http://blip.tv/file/3332763\" rel=\"nofollow\" class=\"ap-connect-link\">http://blip.tv/file/3332763</a></p>\n<p>pointed out that the hash for an integer (and anything that equates to an integer with '==') <em>is that integer itself</em>.<br />\nSo my keys were coming back in order most of the time, and I didn't realise til now that the list wasn't sorted. Thanks<br />\nto Russ for the bug report.</p>", "type": "rendered"}}, "hash": "c0c8956173049b2f63d3aff610fe0753e754e7da", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/c0c8956173049b2f63d3aff610fe0753e754e7da.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/c0c8956173049b2f63d3aff610fe0753e754e7da/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/c0c8956173049b2f63d3aff610fe0753e754e7da"}, "html": {"href": "#!/cbillington/labscript/commits/c0c8956173049b2f63d3aff610fe0753e754e7da"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/c0c8956173049b2f63d3aff610fe0753e754e7da"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/c0c8956173049b2f63d3aff610fe0753e754e7da/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/c0c8956173049b2f63d3aff610fe0753e754e7da/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed a bug where generate_code() would crash when instructions were requested at certain times. The problem turned out to be\nthat I relied on the order of a list of times without having sorted it. The list was obtained from the keys of a dictionary,\nwhich everyone knows come back in a seemingly random order (they're ordered by their hashes). The reason this bug wasn't picked\nup on sooner is that I'd used integers for the instruction times in most of my tests. A great video I watched the other day:\n\nhttp://blip.tv/file/3332763\n\npointed out that the hash for an integer (and anything that equates to an integer with '==') *is that integer itself*.\nSo my keys were coming back in order most of the time, and I didn't realise til now that the list wasn't sorted. Thanks\nto Russ for the bug report.", "markup": "markdown", "html": "<p>Fixed a bug where generate_code() would crash when instructions were requested at certain times. The problem turned out to be<br />\nthat I relied on the order of a list of times without having sorted it. The list was obtained from the keys of a dictionary,<br />\nwhich everyone knows come back in a seemingly random order (they're ordered by their hashes). The reason this bug wasn't picked<br />\nup on sooner is that I'd used integers for the instruction times in most of my tests. A great video I watched the other day:</p>\n<p><a href=\"http://blip.tv/file/3332763\" rel=\"nofollow\" class=\"ap-connect-link\">http://blip.tv/file/3332763</a></p>\n<p>pointed out that the hash for an integer (and anything that equates to an integer with '==') <em>is that integer itself</em>.<br />\nSo my keys were coming back in order most of the time, and I didn't realise til now that the list wasn't sorted. Thanks<br />\nto Russ for the bug report.</p>", "type": "rendered"}, "parents": [{"hash": "452f33f84850252668c5c927522e50c934f26427", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/452f33f84850252668c5c927522e50c934f26427.json"}, "html": {"href": "#!/cbillington/labscript/commits/452f33f84850252668c5c927522e50c934f26427"}}}], "date": "2011-03-17T12:20:40+00:00", "message": "Fixed a bug where generate_code() would crash when instructions were requested at certain times. The problem turned out to be\nthat I relied on the order of a list of times without having sorted it. The list was obtained from the keys of a dictionary,\nwhich everyone knows come back in a seemingly random order (they're ordered by their hashes). The reason this bug wasn't picked\nup on sooner is that I'd used integers for the instruction times in most of my tests. A great video I watched the other day:\n\nhttp://blip.tv/file/3332763\n\npointed out that the hash for an integer (and anything that equates to an integer with '==') *is that integer itself*.\nSo my keys were coming back in order most of the time, and I didn't realise til now that the list wasn't sorted. Thanks\nto Russ for the bug report.", "type": "commit"}, {"rendered": {"message": {"raw": "fixed bug where sometimes the slow clock would be excluded from the final clock tick.", "markup": "markdown", "html": "<p>fixed bug where sometimes the slow clock would be excluded from the final clock tick.</p>", "type": "rendered"}}, "hash": "452f33f84850252668c5c927522e50c934f26427", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/452f33f84850252668c5c927522e50c934f26427.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/452f33f84850252668c5c927522e50c934f26427/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/452f33f84850252668c5c927522e50c934f26427"}, "html": {"href": "#!/cbillington/labscript/commits/452f33f84850252668c5c927522e50c934f26427"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/452f33f84850252668c5c927522e50c934f26427"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/452f33f84850252668c5c927522e50c934f26427/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/452f33f84850252668c5c927522e50c934f26427/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "fixed bug where sometimes the slow clock would be excluded from the final clock tick.", "markup": "markdown", "html": "<p>fixed bug where sometimes the slow clock would be excluded from the final clock tick.</p>", "type": "rendered"}, "parents": [{"hash": "bafaa965f038a518a3f458a938aa8f54dd32b3fc", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/bafaa965f038a518a3f458a938aa8f54dd32b3fc.json"}, "html": {"href": "#!/cbillington/labscript/commits/bafaa965f038a518a3f458a938aa8f54dd32b3fc"}}}], "date": "2011-03-17T11:17:21+00:00", "message": "fixed bug where sometimes the slow clock would be excluded from the final clock tick.", "type": "commit"}, {"rendered": {"message": {"raw": "* changed fast_clock_flag and slow_clock_flag in labscript.py, and made requisite change to example.py (can't use pseudoclock flag as digital control).\n* included scale factor (time domain) in example.py. generate_code() throws error when scale < 0.25, even for slow sample rates.", "markup": "markdown", "html": "<ul>\n<li>changed fast_clock_flag and slow_clock_flag in labscript.py, and made requisite change to example.py (can't use pseudoclock flag as digital control).</li>\n<li>included scale factor (time domain) in example.py. generate_code() throws error when scale &lt; 0.25, even for slow sample rates.</li>\n</ul>", "type": "rendered"}}, "hash": "bafaa965f038a518a3f458a938aa8f54dd32b3fc", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/bafaa965f038a518a3f458a938aa8f54dd32b3fc.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/bafaa965f038a518a3f458a938aa8f54dd32b3fc/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/bafaa965f038a518a3f458a938aa8f54dd32b3fc"}, "html": {"href": "#!/cbillington/labscript/commits/bafaa965f038a518a3f458a938aa8f54dd32b3fc"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/bafaa965f038a518a3f458a938aa8f54dd32b3fc"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/bafaa965f038a518a3f458a938aa8f54dd32b3fc/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/bafaa965f038a518a3f458a938aa8f54dd32b3fc/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "* changed fast_clock_flag and slow_clock_flag in labscript.py, and made requisite change to example.py (can't use pseudoclock flag as digital control).\n* included scale factor (time domain) in example.py. generate_code() throws error when scale < 0.25, even for slow sample rates.", "markup": "markdown", "html": "<ul>\n<li>changed fast_clock_flag and slow_clock_flag in labscript.py, and made requisite change to example.py (can't use pseudoclock flag as digital control).</li>\n<li>included scale factor (time domain) in example.py. generate_code() throws error when scale &lt; 0.25, even for slow sample rates.</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "034ae34659087eda06875443ed18a7dc8cdf1404", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/034ae34659087eda06875443ed18a7dc8cdf1404.json"}, "html": {"href": "#!/cbillington/labscript/commits/034ae34659087eda06875443ed18a7dc8cdf1404"}}}], "date": "2011-03-17T09:56:10+00:00", "message": "* changed fast_clock_flag and slow_clock_flag in labscript.py, and made requisite change to example.py (can't use pseudoclock flag as digital control).\n* included scale factor (time domain) in example.py. generate_code() throws error when scale < 0.25, even for slow sample rates.", "type": "commit"}, {"rendered": {"message": {"raw": "* Changed association of attributes for NI hardware. Now stored at the Group (rather than Dataset) level, in an attempt to get attributes functionality of LVH5 to work.\n* Replaced all instances of \"analogue\" with \"analog\". (Case was preserved.)\n* Zeroth ordering of analog channel names in example.py.", "markup": "markdown", "html": "<ul>\n<li>Changed association of attributes for NI hardware. Now stored at the Group (rather than Dataset) level, in an attempt to get attributes functionality of LVH5 to work.</li>\n<li>Replaced all instances of \"analogue\" with \"analog\". (Case was preserved.)</li>\n<li>Zeroth ordering of analog channel names in example.py.</li>\n</ul>", "type": "rendered"}}, "hash": "034ae34659087eda06875443ed18a7dc8cdf1404", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/034ae34659087eda06875443ed18a7dc8cdf1404.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/034ae34659087eda06875443ed18a7dc8cdf1404/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/034ae34659087eda06875443ed18a7dc8cdf1404"}, "html": {"href": "#!/cbillington/labscript/commits/034ae34659087eda06875443ed18a7dc8cdf1404"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/034ae34659087eda06875443ed18a7dc8cdf1404"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/034ae34659087eda06875443ed18a7dc8cdf1404/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/034ae34659087eda06875443ed18a7dc8cdf1404/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "* Changed association of attributes for NI hardware. Now stored at the Group (rather than Dataset) level, in an attempt to get attributes functionality of LVH5 to work.\n* Replaced all instances of \"analogue\" with \"analog\". (Case was preserved.)\n* Zeroth ordering of analog channel names in example.py.", "markup": "markdown", "html": "<ul>\n<li>Changed association of attributes for NI hardware. Now stored at the Group (rather than Dataset) level, in an attempt to get attributes functionality of LVH5 to work.</li>\n<li>Replaced all instances of \"analogue\" with \"analog\". (Case was preserved.)</li>\n<li>Zeroth ordering of analog channel names in example.py.</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "d9ad7bdec9a376dace2eda179a3028825840a75f", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/d9ad7bdec9a376dace2eda179a3028825840a75f.json"}, "html": {"href": "#!/cbillington/labscript/commits/d9ad7bdec9a376dace2eda179a3028825840a75f"}}}], "date": "2011-03-16T11:49:58+00:00", "message": "* Changed association of attributes for NI hardware. Now stored at the Group (rather than Dataset) level, in an attempt to get attributes functionality of LVH5 to work.\n* Replaced all instances of \"analogue\" with \"analog\". (Case was preserved.)\n* Zeroth ordering of analog channel names in example.py.", "type": "commit"}, {"rendered": {"message": {"raw": "Many changes. Analogue and digital outputs on NI cards are now stored using homogenous datatypes. Which outputs the columns correspond to are stored as an attribute for each dataset,\nas a comma delimited list of channels that LabVIEW wants, ie: NI-PCIe-6363_1/port0/line0:31 for a bunch of digitals. Digital outs are now stored as a single number,\nwith as many bits as required for the number of digital outputs the device has. Device objects now take a number, instead of a name, when initialised, which will be\nappended to their description for the name of their group in the hdf5 file. So an NI_PCIe_6363 will have a group in the hdf5 file called NI-PCIe-6363_1, if it is initialised\nwith number one. Output objects still take a name when initialised, which we might use to make plots or something later on.", "markup": "markdown", "html": "<p>Many changes. Analogue and digital outputs on NI cards are now stored using homogenous datatypes. Which outputs the columns correspond to are stored as an attribute for each dataset,<br />\nas a comma delimited list of channels that LabVIEW wants, ie: NI-PCIe-6363_1/port0/line0:31 for a bunch of digitals. Digital outs are now stored as a single number,<br />\nwith as many bits as required for the number of digital outputs the device has. Device objects now take a number, instead of a name, when initialised, which will be<br />\nappended to their description for the name of their group in the hdf5 file. So an NI_PCIe_6363 will have a group in the hdf5 file called NI-PCIe-6363_1, if it is initialised<br />\nwith number one. Output objects still take a name when initialised, which we might use to make plots or something later on.</p>", "type": "rendered"}}, "hash": "d9ad7bdec9a376dace2eda179a3028825840a75f", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/d9ad7bdec9a376dace2eda179a3028825840a75f.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/d9ad7bdec9a376dace2eda179a3028825840a75f/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/d9ad7bdec9a376dace2eda179a3028825840a75f"}, "html": {"href": "#!/cbillington/labscript/commits/d9ad7bdec9a376dace2eda179a3028825840a75f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/d9ad7bdec9a376dace2eda179a3028825840a75f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/d9ad7bdec9a376dace2eda179a3028825840a75f/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/d9ad7bdec9a376dace2eda179a3028825840a75f/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Many changes. Analogue and digital outputs on NI cards are now stored using homogenous datatypes. Which outputs the columns correspond to are stored as an attribute for each dataset,\nas a comma delimited list of channels that LabVIEW wants, ie: NI-PCIe-6363_1/port0/line0:31 for a bunch of digitals. Digital outs are now stored as a single number,\nwith as many bits as required for the number of digital outputs the device has. Device objects now take a number, instead of a name, when initialised, which will be\nappended to their description for the name of their group in the hdf5 file. So an NI_PCIe_6363 will have a group in the hdf5 file called NI-PCIe-6363_1, if it is initialised\nwith number one. Output objects still take a name when initialised, which we might use to make plots or something later on.", "markup": "markdown", "html": "<p>Many changes. Analogue and digital outputs on NI cards are now stored using homogenous datatypes. Which outputs the columns correspond to are stored as an attribute for each dataset,<br />\nas a comma delimited list of channels that LabVIEW wants, ie: NI-PCIe-6363_1/port0/line0:31 for a bunch of digitals. Digital outs are now stored as a single number,<br />\nwith as many bits as required for the number of digital outputs the device has. Device objects now take a number, instead of a name, when initialised, which will be<br />\nappended to their description for the name of their group in the hdf5 file. So an NI_PCIe_6363 will have a group in the hdf5 file called NI-PCIe-6363_1, if it is initialised<br />\nwith number one. Output objects still take a name when initialised, which we might use to make plots or something later on.</p>", "type": "rendered"}, "parents": [{"hash": "010ee6f95a8716aca39fea43e7b7b7d85b88f00a", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/010ee6f95a8716aca39fea43e7b7b7d85b88f00a.json"}, "html": {"href": "#!/cbillington/labscript/commits/010ee6f95a8716aca39fea43e7b7b7d85b88f00a"}}}], "date": "2011-03-16T02:14:31+00:00", "message": "Many changes. Analogue and digital outputs on NI cards are now stored using homogenous datatypes. Which outputs the columns correspond to are stored as an attribute for each dataset,\nas a comma delimited list of channels that LabVIEW wants, ie: NI-PCIe-6363_1/port0/line0:31 for a bunch of digitals. Digital outs are now stored as a single number,\nwith as many bits as required for the number of digital outputs the device has. Device objects now take a number, instead of a name, when initialised, which will be\nappended to their description for the name of their group in the hdf5 file. So an NI_PCIe_6363 will have a group in the hdf5 file called NI-PCIe-6363_1, if it is initialised\nwith number one. Output objects still take a name when initialised, which we might use to make plots or something later on.", "type": "commit"}, {"rendered": {"message": {"raw": "clock times now stored to hdf5 file under PulseBlaster/SLOW_CLOCK and PulseBlaster/FAST_CLOCK", "markup": "markdown", "html": "<p>clock times now stored to hdf5 file under PulseBlaster/SLOW_CLOCK and PulseBlaster/FAST_CLOCK</p>", "type": "rendered"}}, "hash": "010ee6f95a8716aca39fea43e7b7b7d85b88f00a", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/010ee6f95a8716aca39fea43e7b7b7d85b88f00a.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/010ee6f95a8716aca39fea43e7b7b7d85b88f00a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/010ee6f95a8716aca39fea43e7b7b7d85b88f00a"}, "html": {"href": "#!/cbillington/labscript/commits/010ee6f95a8716aca39fea43e7b7b7d85b88f00a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/010ee6f95a8716aca39fea43e7b7b7d85b88f00a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/010ee6f95a8716aca39fea43e7b7b7d85b88f00a/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/010ee6f95a8716aca39fea43e7b7b7d85b88f00a/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "clock times now stored to hdf5 file under PulseBlaster/SLOW_CLOCK and PulseBlaster/FAST_CLOCK", "markup": "markdown", "html": "<p>clock times now stored to hdf5 file under PulseBlaster/SLOW_CLOCK and PulseBlaster/FAST_CLOCK</p>", "type": "rendered"}, "parents": [{"hash": "d6d26e70f0db3cf5faff319f36ae182b675dd33b", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/d6d26e70f0db3cf5faff319f36ae182b675dd33b.json"}, "html": {"href": "#!/cbillington/labscript/commits/d6d26e70f0db3cf5faff319f36ae182b675dd33b"}}}], "date": "2011-03-14T02:01:30+00:00", "message": "clock times now stored to hdf5 file under PulseBlaster/SLOW_CLOCK and PulseBlaster/FAST_CLOCK", "type": "commit"}, {"rendered": {"message": {"raw": "minor changes to a variable name and the profiling code", "markup": "markdown", "html": "<p>minor changes to a variable name and the profiling code</p>", "type": "rendered"}}, "hash": "d6d26e70f0db3cf5faff319f36ae182b675dd33b", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/d6d26e70f0db3cf5faff319f36ae182b675dd33b.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/d6d26e70f0db3cf5faff319f36ae182b675dd33b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/d6d26e70f0db3cf5faff319f36ae182b675dd33b"}, "html": {"href": "#!/cbillington/labscript/commits/d6d26e70f0db3cf5faff319f36ae182b675dd33b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/d6d26e70f0db3cf5faff319f36ae182b675dd33b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/d6d26e70f0db3cf5faff319f36ae182b675dd33b/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/d6d26e70f0db3cf5faff319f36ae182b675dd33b/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "minor changes to a variable name and the profiling code", "markup": "markdown", "html": "<p>minor changes to a variable name and the profiling code</p>", "type": "rendered"}, "parents": [{"hash": "942fe098dcf8030a3073b52ab7d2f5f6670ea835", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/942fe098dcf8030a3073b52ab7d2f5f6670ea835.json"}, "html": {"href": "#!/cbillington/labscript/commits/942fe098dcf8030a3073b52ab7d2f5f6670ea835"}}}], "date": "2011-03-12T09:59:42+00:00", "message": "minor changes to a variable name and the profiling code", "type": "commit"}, {"rendered": {"message": {"raw": "'Slow clock' implemented.\nFlag 10 of the PulseBlaster now ticks once only at the beginning of each ramp, and not every time flag 11 ticks.\nDevices attached to the slow clock can now have far fewer instructions, at the cost of not being able to do constant-clock-rate ramps.\nThis was put in mainly for the Novatech DDSs to save on time programming them (which is about 100 instructions per sec at the moment).\nAs such the slow clock ticks with a falling TTL edge, which is what triggers the NovaTech DDSs to move to the next instruction in table mode.\n'Slow clock' is perhaps a misnomer, as there is nothing stopping this clock from ticking quickly if two instructions are close together.\nSo on a slow clock, the NovaTech DDSs can still be used for non-constant-clock-rate ramps, even if the clock rate is high.\nThis could be programmed in labscript using a loop around calls to DDS.setfreq(t,f) for example. So if the number of timesteps isn't prohibitive,\nwe may be able to still use the NovaTechs to do the non-constant-rate frequency sweep for RF evaporative cooling.", "markup": "markdown", "html": "<p>'Slow clock' implemented.<br />\nFlag 10 of the PulseBlaster now ticks once only at the beginning of each ramp, and not every time flag 11 ticks.<br />\nDevices attached to the slow clock can now have far fewer instructions, at the cost of not being able to do constant-clock-rate ramps.<br />\nThis was put in mainly for the Novatech DDSs to save on time programming them (which is about 100 instructions per sec at the moment).<br />\nAs such the slow clock ticks with a falling TTL edge, which is what triggers the NovaTech DDSs to move to the next instruction in table mode.<br />\n'Slow clock' is perhaps a misnomer, as there is nothing stopping this clock from ticking quickly if two instructions are close together.<br />\nSo on a slow clock, the NovaTech DDSs can still be used for non-constant-clock-rate ramps, even if the clock rate is high.<br />\nThis could be programmed in labscript using a loop around calls to DDS.setfreq(t,f) for example. So if the number of timesteps isn't prohibitive,<br />\nwe may be able to still use the NovaTechs to do the non-constant-rate frequency sweep for RF evaporative cooling.</p>", "type": "rendered"}}, "hash": "942fe098dcf8030a3073b52ab7d2f5f6670ea835", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/942fe098dcf8030a3073b52ab7d2f5f6670ea835.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/942fe098dcf8030a3073b52ab7d2f5f6670ea835/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/942fe098dcf8030a3073b52ab7d2f5f6670ea835"}, "html": {"href": "#!/cbillington/labscript/commits/942fe098dcf8030a3073b52ab7d2f5f6670ea835"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/942fe098dcf8030a3073b52ab7d2f5f6670ea835"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/942fe098dcf8030a3073b52ab7d2f5f6670ea835/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/942fe098dcf8030a3073b52ab7d2f5f6670ea835/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "'Slow clock' implemented.\nFlag 10 of the PulseBlaster now ticks once only at the beginning of each ramp, and not every time flag 11 ticks.\nDevices attached to the slow clock can now have far fewer instructions, at the cost of not being able to do constant-clock-rate ramps.\nThis was put in mainly for the Novatech DDSs to save on time programming them (which is about 100 instructions per sec at the moment).\nAs such the slow clock ticks with a falling TTL edge, which is what triggers the NovaTech DDSs to move to the next instruction in table mode.\n'Slow clock' is perhaps a misnomer, as there is nothing stopping this clock from ticking quickly if two instructions are close together.\nSo on a slow clock, the NovaTech DDSs can still be used for non-constant-clock-rate ramps, even if the clock rate is high.\nThis could be programmed in labscript using a loop around calls to DDS.setfreq(t,f) for example. So if the number of timesteps isn't prohibitive,\nwe may be able to still use the NovaTechs to do the non-constant-rate frequency sweep for RF evaporative cooling.", "markup": "markdown", "html": "<p>'Slow clock' implemented.<br />\nFlag 10 of the PulseBlaster now ticks once only at the beginning of each ramp, and not every time flag 11 ticks.<br />\nDevices attached to the slow clock can now have far fewer instructions, at the cost of not being able to do constant-clock-rate ramps.<br />\nThis was put in mainly for the Novatech DDSs to save on time programming them (which is about 100 instructions per sec at the moment).<br />\nAs such the slow clock ticks with a falling TTL edge, which is what triggers the NovaTech DDSs to move to the next instruction in table mode.<br />\n'Slow clock' is perhaps a misnomer, as there is nothing stopping this clock from ticking quickly if two instructions are close together.<br />\nSo on a slow clock, the NovaTech DDSs can still be used for non-constant-clock-rate ramps, even if the clock rate is high.<br />\nThis could be programmed in labscript using a loop around calls to DDS.setfreq(t,f) for example. So if the number of timesteps isn't prohibitive,<br />\nwe may be able to still use the NovaTechs to do the non-constant-rate frequency sweep for RF evaporative cooling.</p>", "type": "rendered"}, "parents": [{"hash": "a796e1b6b317fef9501a09fce04a16699097587c", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/a796e1b6b317fef9501a09fce04a16699097587c.json"}, "html": {"href": "#!/cbillington/labscript/commits/a796e1b6b317fef9501a09fce04a16699097587c"}}}], "date": "2011-03-12T09:40:21+00:00", "message": "'Slow clock' implemented.\nFlag 10 of the PulseBlaster now ticks once only at the beginning of each ramp, and not every time flag 11 ticks.\nDevices attached to the slow clock can now have far fewer instructions, at the cost of not being able to do constant-clock-rate ramps.\nThis was put in mainly for the Novatech DDSs to save on time programming them (which is about 100 instructions per sec at the moment).\nAs such the slow clock ticks with a falling TTL edge, which is what triggers the NovaTech DDSs to move to the next instruction in table mode.\n'Slow clock' is perhaps a misnomer, as there is nothing stopping this clock from ticking quickly if two instructions are close together.\nSo on a slow clock, the NovaTech DDSs can still be used for non-constant-clock-rate ramps, even if the clock rate is high.\nThis could be programmed in labscript using a loop around calls to DDS.setfreq(t,f) for example. So if the number of timesteps isn't prohibitive,\nwe may be able to still use the NovaTechs to do the non-constant-rate frequency sweep for RF evaporative cooling.", "type": "commit"}, {"rendered": {"message": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}}, "hash": "a796e1b6b317fef9501a09fce04a16699097587c", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/a796e1b6b317fef9501a09fce04a16699097587c.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/a796e1b6b317fef9501a09fce04a16699097587c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/a796e1b6b317fef9501a09fce04a16699097587c"}, "html": {"href": "#!/cbillington/labscript/commits/a796e1b6b317fef9501a09fce04a16699097587c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/a796e1b6b317fef9501a09fce04a16699097587c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/a796e1b6b317fef9501a09fce04a16699097587c/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/a796e1b6b317fef9501a09fce04a16699097587c/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "parents": [{"hash": "e908cfddab4e21965f5efa0f2dfea279ce6cd545", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/e908cfddab4e21965f5efa0f2dfea279ce6cd545.json"}, "html": {"href": "#!/cbillington/labscript/commits/e908cfddab4e21965f5efa0f2dfea279ce6cd545"}}}], "date": "2011-03-11T04:11:06+00:00", "message": "", "type": "commit"}, {"rendered": {"message": {"raw": "novatech.py now in working order. It can program the NovaTech DDS over TCP or serial, and can verify that existing instructions are correct. These options can be controlled by command line args.", "markup": "markdown", "html": "<p>novatech.py now in working order. It can program the NovaTech DDS over TCP or serial, and can verify that existing instructions are correct. These options can be controlled by command line args.</p>", "type": "rendered"}}, "hash": "e908cfddab4e21965f5efa0f2dfea279ce6cd545", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/e908cfddab4e21965f5efa0f2dfea279ce6cd545.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/e908cfddab4e21965f5efa0f2dfea279ce6cd545/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/e908cfddab4e21965f5efa0f2dfea279ce6cd545"}, "html": {"href": "#!/cbillington/labscript/commits/e908cfddab4e21965f5efa0f2dfea279ce6cd545"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/e908cfddab4e21965f5efa0f2dfea279ce6cd545"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/e908cfddab4e21965f5efa0f2dfea279ce6cd545/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/e908cfddab4e21965f5efa0f2dfea279ce6cd545/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "novatech.py now in working order. It can program the NovaTech DDS over TCP or serial, and can verify that existing instructions are correct. These options can be controlled by command line args.", "markup": "markdown", "html": "<p>novatech.py now in working order. It can program the NovaTech DDS over TCP or serial, and can verify that existing instructions are correct. These options can be controlled by command line args.</p>", "type": "rendered"}, "parents": [{"hash": "8749176daad0debab5dd502a4e7cc12909404ca9", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/8749176daad0debab5dd502a4e7cc12909404ca9.json"}, "html": {"href": "#!/cbillington/labscript/commits/8749176daad0debab5dd502a4e7cc12909404ca9"}}}], "date": "2011-03-11T00:59:26+00:00", "message": "novatech.py now in working order. It can program the NovaTech DDS over TCP or serial, and can verify that existing instructions are correct. These options can be controlled by command line args.", "type": "commit"}, {"rendered": {"message": {"raw": "updated novatechserial.py", "markup": "markdown", "html": "<p>updated novatechserial.py</p>", "type": "rendered"}}, "hash": "8749176daad0debab5dd502a4e7cc12909404ca9", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/8749176daad0debab5dd502a4e7cc12909404ca9.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/8749176daad0debab5dd502a4e7cc12909404ca9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/8749176daad0debab5dd502a4e7cc12909404ca9"}, "html": {"href": "#!/cbillington/labscript/commits/8749176daad0debab5dd502a4e7cc12909404ca9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/8749176daad0debab5dd502a4e7cc12909404ca9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/8749176daad0debab5dd502a4e7cc12909404ca9/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/8749176daad0debab5dd502a4e7cc12909404ca9/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "updated novatechserial.py", "markup": "markdown", "html": "<p>updated novatechserial.py</p>", "type": "rendered"}, "parents": [{"hash": "316145aeec793386b18a1dbb241111dc0a48560e", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/316145aeec793386b18a1dbb241111dc0a48560e.json"}, "html": {"href": "#!/cbillington/labscript/commits/316145aeec793386b18a1dbb241111dc0a48560e"}}}], "date": "2011-03-10T06:51:37+00:00", "message": "updated novatechserial.py", "type": "commit"}, {"rendered": {"message": {"raw": "added more error checking to novatechserial.py", "markup": "markdown", "html": "<p>added more error checking to novatechserial.py</p>", "type": "rendered"}}, "hash": "316145aeec793386b18a1dbb241111dc0a48560e", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/316145aeec793386b18a1dbb241111dc0a48560e.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/316145aeec793386b18a1dbb241111dc0a48560e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/316145aeec793386b18a1dbb241111dc0a48560e"}, "html": {"href": "#!/cbillington/labscript/commits/316145aeec793386b18a1dbb241111dc0a48560e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/316145aeec793386b18a1dbb241111dc0a48560e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/316145aeec793386b18a1dbb241111dc0a48560e/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/316145aeec793386b18a1dbb241111dc0a48560e/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "added more error checking to novatechserial.py", "markup": "markdown", "html": "<p>added more error checking to novatechserial.py</p>", "type": "rendered"}, "parents": [{"hash": "a20731eee4d95368696ccc8be204e636eb2d35dd", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/a20731eee4d95368696ccc8be204e636eb2d35dd.json"}, "html": {"href": "#!/cbillington/labscript/commits/a20731eee4d95368696ccc8be204e636eb2d35dd"}}}], "date": "2011-03-10T01:59:47+00:00", "message": "added more error checking to novatechserial.py", "type": "commit"}, {"rendered": {"message": {"raw": "added novatechserial.py", "markup": "markdown", "html": "<p>added novatechserial.py</p>", "type": "rendered"}}, "hash": "a20731eee4d95368696ccc8be204e636eb2d35dd", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/a20731eee4d95368696ccc8be204e636eb2d35dd.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/a20731eee4d95368696ccc8be204e636eb2d35dd/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/a20731eee4d95368696ccc8be204e636eb2d35dd"}, "html": {"href": "#!/cbillington/labscript/commits/a20731eee4d95368696ccc8be204e636eb2d35dd"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/a20731eee4d95368696ccc8be204e636eb2d35dd"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/a20731eee4d95368696ccc8be204e636eb2d35dd/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/a20731eee4d95368696ccc8be204e636eb2d35dd/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "added novatechserial.py", "markup": "markdown", "html": "<p>added novatechserial.py</p>", "type": "rendered"}, "parents": [{"hash": "793767223340903d7fd4587627dc6ab0d851aff7", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/793767223340903d7fd4587627dc6ab0d851aff7.json"}, "html": {"href": "#!/cbillington/labscript/commits/793767223340903d7fd4587627dc6ab0d851aff7"}}}], "date": "2011-03-10T01:17:01+00:00", "message": "added novatechserial.py", "type": "commit"}, {"rendered": {"message": {"raw": "comparing serial vs sockets for programming the novatech DDSs", "markup": "markdown", "html": "<p>comparing serial vs sockets for programming the novatech DDSs</p>", "type": "rendered"}}, "hash": "793767223340903d7fd4587627dc6ab0d851aff7", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/793767223340903d7fd4587627dc6ab0d851aff7.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/793767223340903d7fd4587627dc6ab0d851aff7/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/793767223340903d7fd4587627dc6ab0d851aff7"}, "html": {"href": "#!/cbillington/labscript/commits/793767223340903d7fd4587627dc6ab0d851aff7"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/793767223340903d7fd4587627dc6ab0d851aff7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/793767223340903d7fd4587627dc6ab0d851aff7/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/793767223340903d7fd4587627dc6ab0d851aff7/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "comparing serial vs sockets for programming the novatech DDSs", "markup": "markdown", "html": "<p>comparing serial vs sockets for programming the novatech DDSs</p>", "type": "rendered"}, "parents": [{"hash": "36fdb9ec379c006147cdb2d107edf2f5c1e63eab", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/36fdb9ec379c006147cdb2d107edf2f5c1e63eab.json"}, "html": {"href": "#!/cbillington/labscript/commits/36fdb9ec379c006147cdb2d107edf2f5c1e63eab"}}}], "date": "2011-03-10T01:06:42+00:00", "message": "comparing serial vs sockets for programming the novatech DDSs", "type": "commit"}, {"rendered": {"message": {"raw": "uploading to test novatech.py on another computer", "markup": "markdown", "html": "<p>uploading to test novatech.py on another computer</p>", "type": "rendered"}}, "hash": "36fdb9ec379c006147cdb2d107edf2f5c1e63eab", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/36fdb9ec379c006147cdb2d107edf2f5c1e63eab.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/36fdb9ec379c006147cdb2d107edf2f5c1e63eab/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/36fdb9ec379c006147cdb2d107edf2f5c1e63eab"}, "html": {"href": "#!/cbillington/labscript/commits/36fdb9ec379c006147cdb2d107edf2f5c1e63eab"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/36fdb9ec379c006147cdb2d107edf2f5c1e63eab"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/36fdb9ec379c006147cdb2d107edf2f5c1e63eab/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/36fdb9ec379c006147cdb2d107edf2f5c1e63eab/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "uploading to test novatech.py on another computer", "markup": "markdown", "html": "<p>uploading to test novatech.py on another computer</p>", "type": "rendered"}, "parents": [{"hash": "de2b326d4bf563230e58d059190a6405c665d4e4", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/de2b326d4bf563230e58d059190a6405c665d4e4.json"}, "html": {"href": "#!/cbillington/labscript/commits/de2b326d4bf563230e58d059190a6405c665d4e4"}}}], "date": "2011-03-09T23:45:29+00:00", "message": "uploading to test novatech.py on another computer", "type": "commit"}, {"rendered": {"message": {"raw": "added a script for programming the novatech DDSs from a hdf5 file", "markup": "markdown", "html": "<p>added a script for programming the novatech DDSs from a hdf5 file</p>", "type": "rendered"}}, "hash": "de2b326d4bf563230e58d059190a6405c665d4e4", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/de2b326d4bf563230e58d059190a6405c665d4e4.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/de2b326d4bf563230e58d059190a6405c665d4e4/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/de2b326d4bf563230e58d059190a6405c665d4e4"}, "html": {"href": "#!/cbillington/labscript/commits/de2b326d4bf563230e58d059190a6405c665d4e4"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/de2b326d4bf563230e58d059190a6405c665d4e4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/de2b326d4bf563230e58d059190a6405c665d4e4/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/de2b326d4bf563230e58d059190a6405c665d4e4/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "added a script for programming the novatech DDSs from a hdf5 file", "markup": "markdown", "html": "<p>added a script for programming the novatech DDSs from a hdf5 file</p>", "type": "rendered"}, "parents": [{"hash": "7ad0f369284527e0c6a8eef3d63eac8d7dfa8aea", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/7ad0f369284527e0c6a8eef3d63eac8d7dfa8aea.json"}, "html": {"href": "#!/cbillington/labscript/commits/7ad0f369284527e0c6a8eef3d63eac8d7dfa8aea"}}}], "date": "2011-03-08T12:32:16+00:00", "message": "added a script for programming the novatech DDSs from a hdf5 file", "type": "commit"}, {"rendered": {"message": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}}, "hash": "7ad0f369284527e0c6a8eef3d63eac8d7dfa8aea", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/7ad0f369284527e0c6a8eef3d63eac8d7dfa8aea.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/7ad0f369284527e0c6a8eef3d63eac8d7dfa8aea/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/7ad0f369284527e0c6a8eef3d63eac8d7dfa8aea"}, "html": {"href": "#!/cbillington/labscript/commits/7ad0f369284527e0c6a8eef3d63eac8d7dfa8aea"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/7ad0f369284527e0c6a8eef3d63eac8d7dfa8aea"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/7ad0f369284527e0c6a8eef3d63eac8d7dfa8aea/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/7ad0f369284527e0c6a8eef3d63eac8d7dfa8aea/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "parents": [{"hash": "e1f9f7f408743119346c34b3e6c35721771ff4ad", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/e1f9f7f408743119346c34b3e6c35721771ff4ad.json"}, "html": {"href": "#!/cbillington/labscript/commits/e1f9f7f408743119346c34b3e6c35721771ff4ad"}}}], "date": "2011-03-08T05:38:49+00:00", "message": "", "type": "commit"}, {"rendered": {"message": {"raw": "added spinconfig.py", "markup": "markdown", "html": "<p>added spinconfig.py</p>", "type": "rendered"}}, "hash": "e1f9f7f408743119346c34b3e6c35721771ff4ad", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/e1f9f7f408743119346c34b3e6c35721771ff4ad.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/e1f9f7f408743119346c34b3e6c35721771ff4ad/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/e1f9f7f408743119346c34b3e6c35721771ff4ad"}, "html": {"href": "#!/cbillington/labscript/commits/e1f9f7f408743119346c34b3e6c35721771ff4ad"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/e1f9f7f408743119346c34b3e6c35721771ff4ad"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/e1f9f7f408743119346c34b3e6c35721771ff4ad/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/e1f9f7f408743119346c34b3e6c35721771ff4ad/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "added spinconfig.py", "markup": "markdown", "html": "<p>added spinconfig.py</p>", "type": "rendered"}, "parents": [{"hash": "7d0ace7381925e552017ce033d3289452a337e8a", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/7d0ace7381925e552017ce033d3289452a337e8a.json"}, "html": {"href": "#!/cbillington/labscript/commits/7d0ace7381925e552017ce033d3289452a337e8a"}}}], "date": "2011-03-08T05:29:08+00:00", "message": "added spinconfig.py", "type": "commit"}, {"rendered": {"message": {"raw": "added a python script for programming the pulseblaster from a hdf5 file.", "markup": "markdown", "html": "<p>added a python script for programming the pulseblaster from a hdf5 file.</p>", "type": "rendered"}}, "hash": "7d0ace7381925e552017ce033d3289452a337e8a", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/7d0ace7381925e552017ce033d3289452a337e8a.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/7d0ace7381925e552017ce033d3289452a337e8a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/7d0ace7381925e552017ce033d3289452a337e8a"}, "html": {"href": "#!/cbillington/labscript/commits/7d0ace7381925e552017ce033d3289452a337e8a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/7d0ace7381925e552017ce033d3289452a337e8a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/7d0ace7381925e552017ce033d3289452a337e8a/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/7d0ace7381925e552017ce033d3289452a337e8a/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "added a python script for programming the pulseblaster from a hdf5 file.", "markup": "markdown", "html": "<p>added a python script for programming the pulseblaster from a hdf5 file.</p>", "type": "rendered"}, "parents": [{"hash": "00a084d121481468830878e908a94eb69c44e34e", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/00a084d121481468830878e908a94eb69c44e34e.json"}, "html": {"href": "#!/cbillington/labscript/commits/00a084d121481468830878e908a94eb69c44e34e"}}}], "date": "2011-03-08T05:26:49+00:00", "message": "added a python script for programming the pulseblaster from a hdf5 file.", "type": "commit"}, {"rendered": {"message": {"raw": "conversion to uint16 for analogue outs on the NI boards no longer optional", "markup": "markdown", "html": "<p>conversion to uint16 for analogue outs on the NI boards no longer optional</p>", "type": "rendered"}}, "hash": "00a084d121481468830878e908a94eb69c44e34e", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/00a084d121481468830878e908a94eb69c44e34e.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/00a084d121481468830878e908a94eb69c44e34e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/00a084d121481468830878e908a94eb69c44e34e"}, "html": {"href": "#!/cbillington/labscript/commits/00a084d121481468830878e908a94eb69c44e34e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/00a084d121481468830878e908a94eb69c44e34e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/00a084d121481468830878e908a94eb69c44e34e/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/00a084d121481468830878e908a94eb69c44e34e/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "conversion to uint16 for analogue outs on the NI boards no longer optional", "markup": "markdown", "html": "<p>conversion to uint16 for analogue outs on the NI boards no longer optional</p>", "type": "rendered"}, "parents": [{"hash": "d8f7177788f185033769f5718ef8fde006907546", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/d8f7177788f185033769f5718ef8fde006907546.json"}, "html": {"href": "#!/cbillington/labscript/commits/d8f7177788f185033769f5718ef8fde006907546"}}}], "date": "2011-03-08T03:42:11+00:00", "message": "conversion to uint16 for analogue outs on the NI boards no longer optional", "type": "commit"}, {"rendered": {"message": {"raw": "Now produces instructions for the NovaTech DDS9m in table mode. All outputs now have a scale_factor attribute so that they can be plotted in the right units after being converted from floats to integers or something like that", "markup": "markdown", "html": "<p>Now produces instructions for the NovaTech DDS9m in table mode. All outputs now have a scale_factor attribute so that they can be plotted in the right units after being converted from floats to integers or something like that</p>", "type": "rendered"}}, "hash": "d8f7177788f185033769f5718ef8fde006907546", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/d8f7177788f185033769f5718ef8fde006907546.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/d8f7177788f185033769f5718ef8fde006907546/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/d8f7177788f185033769f5718ef8fde006907546"}, "html": {"href": "#!/cbillington/labscript/commits/d8f7177788f185033769f5718ef8fde006907546"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/d8f7177788f185033769f5718ef8fde006907546"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/d8f7177788f185033769f5718ef8fde006907546/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/d8f7177788f185033769f5718ef8fde006907546/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Now produces instructions for the NovaTech DDS9m in table mode. All outputs now have a scale_factor attribute so that they can be plotted in the right units after being converted from floats to integers or something like that", "markup": "markdown", "html": "<p>Now produces instructions for the NovaTech DDS9m in table mode. All outputs now have a scale_factor attribute so that they can be plotted in the right units after being converted from floats to integers or something like that</p>", "type": "rendered"}, "parents": [{"hash": "6145134d2248fba116d020ce2d8ded4f78ac1b12", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/6145134d2248fba116d020ce2d8ded4f78ac1b12.json"}, "html": {"href": "#!/cbillington/labscript/commits/6145134d2248fba116d020ce2d8ded4f78ac1b12"}}}], "date": "2011-03-08T03:36:03+00:00", "message": "Now produces instructions for the NovaTech DDS9m in table mode. All outputs now have a scale_factor attribute so that they can be plotted in the right units after being converted from floats to integers or something like that", "type": "commit"}, {"rendered": {"message": {"raw": "added a DDS output and a Novatech device. The DDS is just a container for three analogue outputs, one each for the phase, amplitude and frequency.", "markup": "markdown", "html": "<p>added a DDS output and a Novatech device. The DDS is just a container for three analogue outputs, one each for the phase, amplitude and frequency.</p>", "type": "rendered"}}, "hash": "6145134d2248fba116d020ce2d8ded4f78ac1b12", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/6145134d2248fba116d020ce2d8ded4f78ac1b12.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/6145134d2248fba116d020ce2d8ded4f78ac1b12/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/6145134d2248fba116d020ce2d8ded4f78ac1b12"}, "html": {"href": "#!/cbillington/labscript/commits/6145134d2248fba116d020ce2d8ded4f78ac1b12"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/6145134d2248fba116d020ce2d8ded4f78ac1b12"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/6145134d2248fba116d020ce2d8ded4f78ac1b12/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/6145134d2248fba116d020ce2d8ded4f78ac1b12/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "added a DDS output and a Novatech device. The DDS is just a container for three analogue outputs, one each for the phase, amplitude and frequency.", "markup": "markdown", "html": "<p>added a DDS output and a Novatech device. The DDS is just a container for three analogue outputs, one each for the phase, amplitude and frequency.</p>", "type": "rendered"}, "parents": [{"hash": "09b9383acf794f2a98fa592b96051175c743241d", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/09b9383acf794f2a98fa592b96051175c743241d.json"}, "html": {"href": "#!/cbillington/labscript/commits/09b9383acf794f2a98fa592b96051175c743241d"}}}], "date": "2011-03-07T13:46:03+00:00", "message": "added a DDS output and a Novatech device. The DDS is just a container for three analogue outputs, one each for the phase, amplitude and frequency.", "type": "commit"}, {"rendered": {"message": {"raw": "bitfields for digital outputs now computed ten times faster", "markup": "markdown", "html": "<p>bitfields for digital outputs now computed ten times faster</p>", "type": "rendered"}}, "hash": "09b9383acf794f2a98fa592b96051175c743241d", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/09b9383acf794f2a98fa592b96051175c743241d.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/09b9383acf794f2a98fa592b96051175c743241d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/09b9383acf794f2a98fa592b96051175c743241d"}, "html": {"href": "#!/cbillington/labscript/commits/09b9383acf794f2a98fa592b96051175c743241d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/09b9383acf794f2a98fa592b96051175c743241d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/09b9383acf794f2a98fa592b96051175c743241d/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/09b9383acf794f2a98fa592b96051175c743241d/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "bitfields for digital outputs now computed ten times faster", "markup": "markdown", "html": "<p>bitfields for digital outputs now computed ten times faster</p>", "type": "rendered"}, "parents": [{"hash": "fdfc5ea095112b08fd48bab96f7c66a9522f83fa", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/fdfc5ea095112b08fd48bab96f7c66a9522f83fa.json"}, "html": {"href": "#!/cbillington/labscript/commits/fdfc5ea095112b08fd48bab96f7c66a9522f83fa"}}}], "date": "2011-03-07T11:11:00+00:00", "message": "bitfields for digital outputs now computed ten times faster", "type": "commit"}, {"rendered": {"message": {"raw": "NI boards now fill in unused analogue outs with zeros, and output digital outs as a uint8 for each 'port' (group of 8 outputs). It also fills in unused digital outs with zeros.", "markup": "markdown", "html": "<p>NI boards now fill in unused analogue outs with zeros, and output digital outs as a uint8 for each 'port' (group of 8 outputs). It also fills in unused digital outs with zeros.</p>", "type": "rendered"}}, "hash": "fdfc5ea095112b08fd48bab96f7c66a9522f83fa", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/fdfc5ea095112b08fd48bab96f7c66a9522f83fa.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/fdfc5ea095112b08fd48bab96f7c66a9522f83fa/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/fdfc5ea095112b08fd48bab96f7c66a9522f83fa"}, "html": {"href": "#!/cbillington/labscript/commits/fdfc5ea095112b08fd48bab96f7c66a9522f83fa"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/fdfc5ea095112b08fd48bab96f7c66a9522f83fa"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/fdfc5ea095112b08fd48bab96f7c66a9522f83fa/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/fdfc5ea095112b08fd48bab96f7c66a9522f83fa/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "NI boards now fill in unused analogue outs with zeros, and output digital outs as a uint8 for each 'port' (group of 8 outputs). It also fills in unused digital outs with zeros.", "markup": "markdown", "html": "<p>NI boards now fill in unused analogue outs with zeros, and output digital outs as a uint8 for each 'port' (group of 8 outputs). It also fills in unused digital outs with zeros.</p>", "type": "rendered"}, "parents": [{"hash": "07c26d8e2cb825af81c4b45bd88d02168b2422b5", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/07c26d8e2cb825af81c4b45bd88d02168b2422b5.json"}, "html": {"href": "#!/cbillington/labscript/commits/07c26d8e2cb825af81c4b45bd88d02168b2422b5"}}}], "date": "2011-03-07T05:54:27+00:00", "message": "NI boards now fill in unused analogue outs with zeros, and output digital outs as a uint8 for each 'port' (group of 8 outputs). It also fills in unused digital outs with zeros.", "type": "commit"}, {"rendered": {"message": {"raw": "fixed mistake from last commit", "markup": "markdown", "html": "<p>fixed mistake from last commit</p>", "type": "rendered"}}, "hash": "07c26d8e2cb825af81c4b45bd88d02168b2422b5", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript.json"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/07c26d8e2cb825af81c4b45bd88d02168b2422b5.json"}, "comments": {"href": "data/repositories/cbillington/labscript/commit/07c26d8e2cb825af81c4b45bd88d02168b2422b5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/patch/07c26d8e2cb825af81c4b45bd88d02168b2422b5"}, "html": {"href": "#!/cbillington/labscript/commits/07c26d8e2cb825af81c4b45bd88d02168b2422b5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/diff/07c26d8e2cb825af81c4b45bd88d02168b2422b5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/07c26d8e2cb825af81c4b45bd88d02168b2422b5/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript/commit/07c26d8e2cb825af81c4b45bd88d02168b2422b5/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "fixed mistake from last commit", "markup": "markdown", "html": "<p>fixed mistake from last commit</p>", "type": "rendered"}, "parents": [{"hash": "7465aa9740880cd3cc529503c0056f3b09802ff5", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript/commit/7465aa9740880cd3cc529503c0056f3b09802ff5.json"}, "html": {"href": "#!/cbillington/labscript/commits/7465aa9740880cd3cc529503c0056f3b09802ff5"}}}], "date": "2011-03-07T02:12:57+00:00", "message": "fixed mistake from last commit", "type": "commit"}], "next": "data/repositories/cbillington/labscript/commits/missing_wait_bugfix_page=6.json"}