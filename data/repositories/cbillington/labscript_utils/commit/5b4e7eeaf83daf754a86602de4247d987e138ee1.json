{"rendered": {"message": {"raw": "Move functionality from the installer into winshell module for consistent\napp descriptions (app descriptions in the taskbar vs start menu differed\npreviously), and to allow apps to know at run time what the command\nto launch them is, since they need to set it as their relaunch command.\n\nAdd launcher that runs apps in a conda environment, and that if run with pythonw\nruns apps in python.exe without a console window. This solves a number of issues\nrelating to pythonw and makes zprocess's output redirection more comprehensive.\nFor example, C/cython extensions or non-python subprocess output cannot be\nredirected to output boxes when running under pythonw. Starting the launcher\nwith pythonw.exe and then having it run the target with python.exe allows for\nno console window to be visible, even for a moment.\n\nUsing this launcher instead of cwp.py from the menuinst project is also required\nbecause our apps need more environment variables pertaining to conda than are\nset by cwp.py. Further, cwp.py unconditionally sets the working directory\nto the user's documents directory, whereas we have configured out own working\ndirectories that we would prefer our apps to run in.", "markup": "markdown", "html": "<p>Move functionality from the installer into winshell module for consistent<br />\napp descriptions (app descriptions in the taskbar vs start menu differed<br />\npreviously), and to allow apps to know at run time what the command<br />\nto launch them is, since they need to set it as their relaunch command.</p>\n<p>Add launcher that runs apps in a conda environment, and that if run with pythonw<br />\nruns apps in python.exe without a console window. This solves a number of issues<br />\nrelating to pythonw and makes zprocess's output redirection more comprehensive.<br />\nFor example, C/cython extensions or non-python subprocess output cannot be<br />\nredirected to output boxes when running under pythonw. Starting the launcher<br />\nwith pythonw.exe and then having it run the target with python.exe allows for<br />\nno console window to be visible, even for a moment.</p>\n<p>Using this launcher instead of cwp.py from the menuinst project is also required<br />\nbecause our apps need more environment variables pertaining to conda than are<br />\nset by cwp.py. Further, cwp.py unconditionally sets the working directory<br />\nto the user's documents directory, whereas we have configured out own working<br />\ndirectories that we would prefer our apps to run in.</p>", "type": "rendered"}}, "hash": "5b4e7eeaf83daf754a86602de4247d987e138ee1", "repository": {"links": {"self": {"href": "data/repositories/cbillington/labscript_utils.json"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "links": {"self": {"href": "data/repositories/cbillington/labscript_utils/commit/5b4e7eeaf83daf754a86602de4247d987e138ee1.json"}, "comments": {"href": "data/repositories/cbillington/labscript_utils/commit/5b4e7eeaf83daf754a86602de4247d987e138ee1/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/patch/5b4e7eeaf83daf754a86602de4247d987e138ee1"}, "html": {"href": "#!/cbillington/labscript_utils/commits/5b4e7eeaf83daf754a86602de4247d987e138ee1"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/diff/5b4e7eeaf83daf754a86602de4247d987e138ee1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/5b4e7eeaf83daf754a86602de4247d987e138ee1/approve"}, "statuses": {"href": "data/repositories/cbillington/labscript_utils/commit/5b4e7eeaf83daf754a86602de4247d987e138ee1/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Move functionality from the installer into winshell module for consistent\napp descriptions (app descriptions in the taskbar vs start menu differed\npreviously), and to allow apps to know at run time what the command\nto launch them is, since they need to set it as their relaunch command.\n\nAdd launcher that runs apps in a conda environment, and that if run with pythonw\nruns apps in python.exe without a console window. This solves a number of issues\nrelating to pythonw and makes zprocess's output redirection more comprehensive.\nFor example, C/cython extensions or non-python subprocess output cannot be\nredirected to output boxes when running under pythonw. Starting the launcher\nwith pythonw.exe and then having it run the target with python.exe allows for\nno console window to be visible, even for a moment.\n\nUsing this launcher instead of cwp.py from the menuinst project is also required\nbecause our apps need more environment variables pertaining to conda than are\nset by cwp.py. Further, cwp.py unconditionally sets the working directory\nto the user's documents directory, whereas we have configured out own working\ndirectories that we would prefer our apps to run in.", "markup": "markdown", "html": "<p>Move functionality from the installer into winshell module for consistent<br />\napp descriptions (app descriptions in the taskbar vs start menu differed<br />\npreviously), and to allow apps to know at run time what the command<br />\nto launch them is, since they need to set it as their relaunch command.</p>\n<p>Add launcher that runs apps in a conda environment, and that if run with pythonw<br />\nruns apps in python.exe without a console window. This solves a number of issues<br />\nrelating to pythonw and makes zprocess's output redirection more comprehensive.<br />\nFor example, C/cython extensions or non-python subprocess output cannot be<br />\nredirected to output boxes when running under pythonw. Starting the launcher<br />\nwith pythonw.exe and then having it run the target with python.exe allows for<br />\nno console window to be visible, even for a moment.</p>\n<p>Using this launcher instead of cwp.py from the menuinst project is also required<br />\nbecause our apps need more environment variables pertaining to conda than are<br />\nset by cwp.py. Further, cwp.py unconditionally sets the working directory<br />\nto the user's documents directory, whereas we have configured out own working<br />\ndirectories that we would prefer our apps to run in.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "3604a14d9bc577c5346c101d24826226fcb20a57", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/labscript_utils/commit/3604a14d9bc577c5346c101d24826226fcb20a57.json"}, "html": {"href": "#!/cbillington/labscript_utils/commits/3604a14d9bc577c5346c101d24826226fcb20a57"}}}], "date": "2019-05-07T01:06:47+00:00", "message": "Move functionality from the installer into winshell module for consistent\napp descriptions (app descriptions in the taskbar vs start menu differed\npreviously), and to allow apps to know at run time what the command\nto launch them is, since they need to set it as their relaunch command.\n\nAdd launcher that runs apps in a conda environment, and that if run with pythonw\nruns apps in python.exe without a console window. This solves a number of issues\nrelating to pythonw and makes zprocess's output redirection more comprehensive.\nFor example, C/cython extensions or non-python subprocess output cannot be\nredirected to output boxes when running under pythonw. Starting the launcher\nwith pythonw.exe and then having it run the target with python.exe allows for\nno console window to be visible, even for a moment.\n\nUsing this launcher instead of cwp.py from the menuinst project is also required\nbecause our apps need more environment variables pertaining to conda than are\nset by cwp.py. Further, cwp.py unconditionally sets the working directory\nto the user's documents directory, whereas we have configured out own working\ndirectories that we would prefer our apps to run in.", "type": "commit", "git_hash": "4fa31cf39efd87d82201fcc10fdaca120b2e9c69", "tags": null, "branches": "winlauncher"}