{"rendered": {"message": {"raw": "Modified RemoteBLACS and SecondaryControlSystem classes to use a device hierarchy to represent network connections, allowing a flatter interface for use with Devices (now passwed in as optional keyword arguments worker and gui)\n\nOther relevant points:\n* worker and gui kwargs are only allowed if the device has a BLACS_connection saved (check done at connection table write stage)\n* we instantiate an object representing the \"Primary BLACS\" instance which is stored in compiler, and is the parent of all remote connections\n* the worker and gui kwargs exist in connection_table_properties for relevant devices (if missing, assume primary BLACS) and store the name of the \"device\" that represents the remote connection. This negates the need for separate classes for remote workers and remote GUIs\n* the specified worker must be equal to, or a child of, the gui (if gui=None, then gui is set to the primary BLACS instance, and all remote devices are children of this)\n* the\n* As before, RemoteBLACS implies that the GUI/worker will be launched/managed/restarted by the forthcoming zprocess command server where as SecondaryControlSystem is for standalone applications that must be managed by the user (in a similar vain to how we treat BIAS)", "markup": "markdown", "html": "<p>Modified RemoteBLACS and SecondaryControlSystem classes to use a device hierarchy to represent network connections, allowing a flatter interface for use with Devices (now passwed in as optional keyword arguments worker and gui)</p>\n<p>Other relevant points:<br />\n<em> worker and gui kwargs are only allowed if the device has a BLACS_connection saved (check done at connection table write stage)<br />\n</em> we instantiate an object representing the \"Primary BLACS\" instance which is stored in compiler, and is the parent of all remote connections<br />\n<em> the worker and gui kwargs exist in connection_table_properties for relevant devices (if missing, assume primary BLACS) and store the name of the \"device\" that represents the remote connection. This negates the need for separate classes for remote workers and remote GUIs<br />\n</em> the specified worker must be equal to, or a child of, the gui (if gui=None, then gui is set to the primary BLACS instance, and all remote devices are children of this)<br />\n<em> the<br />\n</em> As before, RemoteBLACS implies that the GUI/worker will be launched/managed/restarted by the forthcoming zprocess command server where as SecondaryControlSystem is for standalone applications that must be managed by the user (in a similar vain to how we treat BIAS)</p>", "type": "rendered"}}, "hash": "2c3324d181310d77024484141fec45d8a2832f63", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript.json"}, "html": {"href": "#!/dsbarker/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0047ba54-700a-4cb6-81a9-9a5b7f6dd900}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "dsbarker/labscript", "uuid": "{0047ba54-700a-4cb6-81a9-9a5b7f6dd900}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript/commit/2c3324d181310d77024484141fec45d8a2832f63.json"}, "comments": {"href": "data/repositories/dsbarker/labscript/commit/2c3324d181310d77024484141fec45d8a2832f63/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript/patch/2c3324d181310d77024484141fec45d8a2832f63"}, "html": {"href": "#!/dsbarker/labscript/commits/2c3324d181310d77024484141fec45d8a2832f63"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript/diff/2c3324d181310d77024484141fec45d8a2832f63"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript/commit/2c3324d181310d77024484141fec45d8a2832f63/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript/commit/2c3324d181310d77024484141fec45d8a2832f63/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Modified RemoteBLACS and SecondaryControlSystem classes to use a device hierarchy to represent network connections, allowing a flatter interface for use with Devices (now passwed in as optional keyword arguments worker and gui)\n\nOther relevant points:\n* worker and gui kwargs are only allowed if the device has a BLACS_connection saved (check done at connection table write stage)\n* we instantiate an object representing the \"Primary BLACS\" instance which is stored in compiler, and is the parent of all remote connections\n* the worker and gui kwargs exist in connection_table_properties for relevant devices (if missing, assume primary BLACS) and store the name of the \"device\" that represents the remote connection. This negates the need for separate classes for remote workers and remote GUIs\n* the specified worker must be equal to, or a child of, the gui (if gui=None, then gui is set to the primary BLACS instance, and all remote devices are children of this)\n* the\n* As before, RemoteBLACS implies that the GUI/worker will be launched/managed/restarted by the forthcoming zprocess command server where as SecondaryControlSystem is for standalone applications that must be managed by the user (in a similar vain to how we treat BIAS)", "markup": "markdown", "html": "<p>Modified RemoteBLACS and SecondaryControlSystem classes to use a device hierarchy to represent network connections, allowing a flatter interface for use with Devices (now passwed in as optional keyword arguments worker and gui)</p>\n<p>Other relevant points:<br />\n<em> worker and gui kwargs are only allowed if the device has a BLACS_connection saved (check done at connection table write stage)<br />\n</em> we instantiate an object representing the \"Primary BLACS\" instance which is stored in compiler, and is the parent of all remote connections<br />\n<em> the worker and gui kwargs exist in connection_table_properties for relevant devices (if missing, assume primary BLACS) and store the name of the \"device\" that represents the remote connection. This negates the need for separate classes for remote workers and remote GUIs<br />\n</em> the specified worker must be equal to, or a child of, the gui (if gui=None, then gui is set to the primary BLACS instance, and all remote devices are children of this)<br />\n<em> the<br />\n</em> As before, RemoteBLACS implies that the GUI/worker will be launched/managed/restarted by the forthcoming zprocess command server where as SecondaryControlSystem is for standalone applications that must be managed by the user (in a similar vain to how we treat BIAS)</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "835339570e8945e83f8af5c4b744f19f2ae547c3", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript/commit/835339570e8945e83f8af5c4b744f19f2ae547c3.json"}, "html": {"href": "#!/dsbarker/labscript/commits/835339570e8945e83f8af5c4b744f19f2ae547c3"}}}], "date": "2018-03-19T23:25:53+00:00", "message": "Modified RemoteBLACS and SecondaryControlSystem classes to use a device hierarchy to represent network connections, allowing a flatter interface for use with Devices (now passwed in as optional keyword arguments worker and gui)\n\nOther relevant points:\n* worker and gui kwargs are only allowed if the device has a BLACS_connection saved (check done at connection table write stage)\n* we instantiate an object representing the \"Primary BLACS\" instance which is stored in compiler, and is the parent of all remote connections\n* the worker and gui kwargs exist in connection_table_properties for relevant devices (if missing, assume primary BLACS) and store the name of the \"device\" that represents the remote connection. This negates the need for separate classes for remote workers and remote GUIs\n* the specified worker must be equal to, or a child of, the gui (if gui=None, then gui is set to the primary BLACS instance, and all remote devices are children of this)\n* the\n* As before, RemoteBLACS implies that the GUI/worker will be launched/managed/restarted by the forthcoming zprocess command server where as SecondaryControlSystem is for standalone applications that must be managed by the user (in a similar vain to how we treat BIAS)", "type": "commit", "git_hash": "8193633f6817d2cfa6560403e7547e9b1b11dc6f", "tags": null, "branches": "remote-device-connections"}