{"rendered": {"message": {"raw": "Uniformity in how AO and DO tables are checked for being all zero.\n\nnot np.any(A) is more memory efficient than np.all(A==0), as it doesn't have to\nconstruct the intermediate array of bools.", "markup": "markdown", "html": "<p>Uniformity in how AO and DO tables are checked for being all zero.</p>\n<p>not np.any(A) is more memory efficient than np.all(A==0), as it doesn't have to<br />\nconstruct the intermediate array of bools.</p>", "type": "rendered"}}, "hash": "34fe6a458dbfc8f91166b2a4cdfd630a5e6152e0", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/34fe6a458dbfc8f91166b2a4cdfd630a5e6152e0.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/34fe6a458dbfc8f91166b2a4cdfd630a5e6152e0/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/34fe6a458dbfc8f91166b2a4cdfd630a5e6152e0"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/34fe6a458dbfc8f91166b2a4cdfd630a5e6152e0"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/34fe6a458dbfc8f91166b2a4cdfd630a5e6152e0"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/34fe6a458dbfc8f91166b2a4cdfd630a5e6152e0/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/34fe6a458dbfc8f91166b2a4cdfd630a5e6152e0/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Uniformity in how AO and DO tables are checked for being all zero.\n\nnot np.any(A) is more memory efficient than np.all(A==0), as it doesn't have to\nconstruct the intermediate array of bools.", "markup": "markdown", "html": "<p>Uniformity in how AO and DO tables are checked for being all zero.</p>\n<p>not np.any(A) is more memory efficient than np.all(A==0), as it doesn't have to<br />\nconstruct the intermediate array of bools.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "1335ad99b022da2d9b86cf5277ea984495f20cfc", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/1335ad99b022da2d9b86cf5277ea984495f20cfc.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/1335ad99b022da2d9b86cf5277ea984495f20cfc"}}}], "date": "2019-11-16T22:53:41+00:00", "message": "Uniformity in how AO and DO tables are checked for being all zero.\n\nnot np.any(A) is more memory efficient than np.all(A==0), as it doesn't have to\nconstruct the intermediate array of bools.", "type": "commit", "git_hash": "1a235aa1f24e8142398c461d473895ec75c8db7d", "tags": null, "branches": "NI_DAQmx"}