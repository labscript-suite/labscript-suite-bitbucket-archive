{"pagelen": 100, "previous": "data/repositories/dsbarker/labscript_devices/commits/2.5.0_page=1.json", "values": [{"rendered": {"message": {"raw": "Added PCIe-6738 and USB-6229", "markup": "markdown", "html": "<p>Added PCIe-6738 and USB-6229</p>", "type": "rendered"}}, "hash": "ce9764f23e20d6df92c903b4f6d11ac979290dfa", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/ce9764f23e20d6df92c903b4f6d11ac979290dfa.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/ce9764f23e20d6df92c903b4f6d11ac979290dfa/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/ce9764f23e20d6df92c903b4f6d11ac979290dfa"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/ce9764f23e20d6df92c903b4f6d11ac979290dfa"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/ce9764f23e20d6df92c903b4f6d11ac979290dfa"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/ce9764f23e20d6df92c903b4f6d11ac979290dfa/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/ce9764f23e20d6df92c903b4f6d11ac979290dfa/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Added PCIe-6738 and USB-6229", "markup": "markdown", "html": "<p>Added PCIe-6738 and USB-6229</p>", "type": "rendered"}, "parents": [{"hash": "55ee9afbb9e61462d3d56b9045b664a1ee28e195", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/55ee9afbb9e61462d3d56b9045b664a1ee28e195.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/55ee9afbb9e61462d3d56b9045b664a1ee28e195"}}}], "date": "2019-01-25T22:04:36+00:00", "message": "Added PCIe-6738 and USB-6229", "type": "commit"}, {"rendered": {"message": {"raw": "* Simplification to digital writing in program manual. Write all data at once\n  instead of separate calls.\n\n* Remove some unused variables and make AO_data a local variable in\nprogram_manual instead of instance attribute, in line with DO_data.", "markup": "markdown", "html": "<ul>\n<li>\n<p>Simplification to digital writing in program manual. Write all data at once<br />\n  instead of separate calls.</p>\n</li>\n<li>\n<p>Remove some unused variables and make AO_data a local variable in<br />\nprogram_manual instead of instance attribute, in line with DO_data.</p>\n</li>\n</ul>", "type": "rendered"}}, "hash": "55ee9afbb9e61462d3d56b9045b664a1ee28e195", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/55ee9afbb9e61462d3d56b9045b664a1ee28e195.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/55ee9afbb9e61462d3d56b9045b664a1ee28e195/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/55ee9afbb9e61462d3d56b9045b664a1ee28e195"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/55ee9afbb9e61462d3d56b9045b664a1ee28e195"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/55ee9afbb9e61462d3d56b9045b664a1ee28e195"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/55ee9afbb9e61462d3d56b9045b664a1ee28e195/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/55ee9afbb9e61462d3d56b9045b664a1ee28e195/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "* Simplification to digital writing in program manual. Write all data at once\n  instead of separate calls.\n\n* Remove some unused variables and make AO_data a local variable in\nprogram_manual instead of instance attribute, in line with DO_data.", "markup": "markdown", "html": "<ul>\n<li>\n<p>Simplification to digital writing in program manual. Write all data at once<br />\n  instead of separate calls.</p>\n</li>\n<li>\n<p>Remove some unused variables and make AO_data a local variable in<br />\nprogram_manual instead of instance attribute, in line with DO_data.</p>\n</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "ead375317906aacefbb4ea4276362e3941b7777a", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/ead375317906aacefbb4ea4276362e3941b7777a.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/ead375317906aacefbb4ea4276362e3941b7777a"}}}], "date": "2019-01-25T17:55:11+00:00", "message": "* Simplification to digital writing in program manual. Write all data at once\n  instead of separate calls.\n\n* Remove some unused variables and make AO_data a local variable in\nprogram_manual instead of instance attribute, in line with DO_data.", "type": "commit"}, {"rendered": {"message": {"raw": "Fix bug in which the acquisition worker's transition_to_manual method would deadlock\nwaiting for the wait durations to be processed, because the wait monitor worker\nwould not even run its transition_to_manual method until after the acquisition\nworker had finished transitioning to manual.", "markup": "markdown", "html": "<p>Fix bug in which the acquisition worker's transition_to_manual method would deadlock<br />\nwaiting for the wait durations to be processed, because the wait monitor worker<br />\nwould not even run its transition_to_manual method until after the acquisition<br />\nworker had finished transitioning to manual.</p>", "type": "rendered"}}, "hash": "ead375317906aacefbb4ea4276362e3941b7777a", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/ead375317906aacefbb4ea4276362e3941b7777a.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/ead375317906aacefbb4ea4276362e3941b7777a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/ead375317906aacefbb4ea4276362e3941b7777a"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/ead375317906aacefbb4ea4276362e3941b7777a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/ead375317906aacefbb4ea4276362e3941b7777a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/ead375317906aacefbb4ea4276362e3941b7777a/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/ead375317906aacefbb4ea4276362e3941b7777a/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Fix bug in which the acquisition worker's transition_to_manual method would deadlock\nwaiting for the wait durations to be processed, because the wait monitor worker\nwould not even run its transition_to_manual method until after the acquisition\nworker had finished transitioning to manual.", "markup": "markdown", "html": "<p>Fix bug in which the acquisition worker's transition_to_manual method would deadlock<br />\nwaiting for the wait durations to be processed, because the wait monitor worker<br />\nwould not even run its transition_to_manual method until after the acquisition<br />\nworker had finished transitioning to manual.</p>", "type": "rendered"}, "parents": [{"hash": "29a0df595b06f55a02ab6864117628d274723058", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/29a0df595b06f55a02ab6864117628d274723058.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/29a0df595b06f55a02ab6864117628d274723058"}}}], "date": "2019-01-25T17:34:18+00:00", "message": "Fix bug in which the acquisition worker's transition_to_manual method would deadlock\nwaiting for the wait durations to be processed, because the wait monitor worker\nwould not even run its transition_to_manual method until after the acquisition\nworker had finished transitioning to manual.", "type": "commit"}, {"rendered": {"message": {"raw": "Fix bug in which NI_DAQmxAcquisitionWorker.transition_to_manual did not return\nTrue to indicate success when there are no acquisitions.", "markup": "markdown", "html": "<p>Fix bug in which NI_DAQmxAcquisitionWorker.transition_to_manual did not return<br />\nTrue to indicate success when there are no acquisitions.</p>", "type": "rendered"}}, "hash": "29a0df595b06f55a02ab6864117628d274723058", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/29a0df595b06f55a02ab6864117628d274723058.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/29a0df595b06f55a02ab6864117628d274723058/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/29a0df595b06f55a02ab6864117628d274723058"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/29a0df595b06f55a02ab6864117628d274723058"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/29a0df595b06f55a02ab6864117628d274723058"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/29a0df595b06f55a02ab6864117628d274723058/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/29a0df595b06f55a02ab6864117628d274723058/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Fix bug in which NI_DAQmxAcquisitionWorker.transition_to_manual did not return\nTrue to indicate success when there are no acquisitions.", "markup": "markdown", "html": "<p>Fix bug in which NI_DAQmxAcquisitionWorker.transition_to_manual did not return<br />\nTrue to indicate success when there are no acquisitions.</p>", "type": "rendered"}, "parents": [{"hash": "792e78a74e4bdeabf2bf6c1ad71c4c177ae5bde5", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/792e78a74e4bdeabf2bf6c1ad71c4c177ae5bde5.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/792e78a74e4bdeabf2bf6c1ad71c4c177ae5bde5"}}}], "date": "2019-01-25T16:58:13+00:00", "message": "Fix bug in which NI_DAQmxAcquisitionWorker.transition_to_manual did not return\nTrue to indicate success when there are no acquisitions.", "type": "commit"}, {"rendered": {"message": {"raw": "Always write using WriteDigitalU32 regardless of port size.\nThis works around both a bug in WriteDigitalLines, see:\n  #!/labscript_suite/labscript_devices/pull-requests/56/#comment-83671312\nas well as a bug where with some boards smaller integer write methods throw an\nerror even though they are the correct size for the port, see here:\n https://forums.ni.com/t5/Multifunction-DAQ/problem-with-correlated-DIO-on-USB-6341/td-p/3344066", "markup": "markdown", "html": "<p>Always write using WriteDigitalU32 regardless of port size.<br />\nThis works around both a bug in WriteDigitalLines, see:<br />\n  <a href=\"#!/labscript_suite/labscript_devices/pull-requests/56/#comment-83671312\" rel=\"nofollow\" class=\"ap-connect-link\">#!/labscript_suite/labscript_devices/pull-requests/56/#comment-83671312</a><br />\nas well as a bug where with some boards smaller integer write methods throw an<br />\nerror even though they are the correct size for the port, see here:<br />\n <a href=\"https://forums.ni.com/t5/Multifunction-DAQ/problem-with-correlated-DIO-on-USB-6341/td-p/3344066\" rel=\"nofollow\" class=\"ap-connect-link\">https://forums.ni.com/t5/Multifunction-DAQ/problem-with-correlated-DIO-on-USB-6341/td-p/3344066</a></p>", "type": "rendered"}}, "hash": "792e78a74e4bdeabf2bf6c1ad71c4c177ae5bde5", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/792e78a74e4bdeabf2bf6c1ad71c4c177ae5bde5.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/792e78a74e4bdeabf2bf6c1ad71c4c177ae5bde5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/792e78a74e4bdeabf2bf6c1ad71c4c177ae5bde5"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/792e78a74e4bdeabf2bf6c1ad71c4c177ae5bde5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/792e78a74e4bdeabf2bf6c1ad71c4c177ae5bde5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/792e78a74e4bdeabf2bf6c1ad71c4c177ae5bde5/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/792e78a74e4bdeabf2bf6c1ad71c4c177ae5bde5/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Always write using WriteDigitalU32 regardless of port size.\nThis works around both a bug in WriteDigitalLines, see:\n  #!/labscript_suite/labscript_devices/pull-requests/56/#comment-83671312\nas well as a bug where with some boards smaller integer write methods throw an\nerror even though they are the correct size for the port, see here:\n https://forums.ni.com/t5/Multifunction-DAQ/problem-with-correlated-DIO-on-USB-6341/td-p/3344066", "markup": "markdown", "html": "<p>Always write using WriteDigitalU32 regardless of port size.<br />\nThis works around both a bug in WriteDigitalLines, see:<br />\n  <a href=\"#!/labscript_suite/labscript_devices/pull-requests/56/#comment-83671312\" rel=\"nofollow\" class=\"ap-connect-link\">#!/labscript_suite/labscript_devices/pull-requests/56/#comment-83671312</a><br />\nas well as a bug where with some boards smaller integer write methods throw an<br />\nerror even though they are the correct size for the port, see here:<br />\n <a href=\"https://forums.ni.com/t5/Multifunction-DAQ/problem-with-correlated-DIO-on-USB-6341/td-p/3344066\" rel=\"nofollow\" class=\"ap-connect-link\">https://forums.ni.com/t5/Multifunction-DAQ/problem-with-correlated-DIO-on-USB-6341/td-p/3344066</a></p>", "type": "rendered"}, "parents": [{"hash": "e16f8b8ede5afe68d87756b5db48648de7d9456e", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/e16f8b8ede5afe68d87756b5db48648de7d9456e.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/e16f8b8ede5afe68d87756b5db48648de7d9456e"}}}], "date": "2019-01-25T16:40:31+00:00", "message": "Always write using WriteDigitalU32 regardless of port size.\nThis works around both a bug in WriteDigitalLines, see:\n  #!/labscript_suite/labscript_devices/pull-requests/56/#comment-83671312\nas well as a bug where with some boards smaller integer write methods throw an\nerror even though they are the correct size for the port, see here:\n https://forums.ni.com/t5/Multifunction-DAQ/problem-with-correlated-DIO-on-USB-6341/td-p/3344066", "type": "commit"}, {"rendered": {"message": {"raw": "* Copy sliced arrays before writing to ensure they are C contiguous as required.\n* Explicit CfgOutputBuffer for DO_task as DAQmx gets confused by the multiple\n  writes otherwise, even though they all have the same npts.", "markup": "markdown", "html": "<ul>\n<li>Copy sliced arrays before writing to ensure they are C contiguous as required.</li>\n<li>Explicit CfgOutputBuffer for DO_task as DAQmx gets confused by the multiple<br />\n  writes otherwise, even though they all have the same npts.</li>\n</ul>", "type": "rendered"}}, "hash": "e16f8b8ede5afe68d87756b5db48648de7d9456e", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/e16f8b8ede5afe68d87756b5db48648de7d9456e.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/e16f8b8ede5afe68d87756b5db48648de7d9456e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/e16f8b8ede5afe68d87756b5db48648de7d9456e"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/e16f8b8ede5afe68d87756b5db48648de7d9456e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/e16f8b8ede5afe68d87756b5db48648de7d9456e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/e16f8b8ede5afe68d87756b5db48648de7d9456e/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/e16f8b8ede5afe68d87756b5db48648de7d9456e/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "* Copy sliced arrays before writing to ensure they are C contiguous as required.\n* Explicit CfgOutputBuffer for DO_task as DAQmx gets confused by the multiple\n  writes otherwise, even though they all have the same npts.", "markup": "markdown", "html": "<ul>\n<li>Copy sliced arrays before writing to ensure they are C contiguous as required.</li>\n<li>Explicit CfgOutputBuffer for DO_task as DAQmx gets confused by the multiple<br />\n  writes otherwise, even though they all have the same npts.</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "4003ba433385a3864c1bdbbe527a58c167644cc3", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/4003ba433385a3864c1bdbbe527a58c167644cc3.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/4003ba433385a3864c1bdbbe527a58c167644cc3"}}}], "date": "2019-01-25T02:56:58+00:00", "message": "* Copy sliced arrays before writing to ensure they are C contiguous as required.\n* Explicit CfgOutputBuffer for DO_task as DAQmx gets confused by the multiple\n  writes otherwise, even though they all have the same npts.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed spelling mistakes in messages.", "markup": "markdown", "html": "<p>Fixed spelling mistakes in messages.</p>", "type": "rendered"}}, "hash": "4003ba433385a3864c1bdbbe527a58c167644cc3", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/4003ba433385a3864c1bdbbe527a58c167644cc3.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/4003ba433385a3864c1bdbbe527a58c167644cc3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/4003ba433385a3864c1bdbbe527a58c167644cc3"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/4003ba433385a3864c1bdbbe527a58c167644cc3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/4003ba433385a3864c1bdbbe527a58c167644cc3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/4003ba433385a3864c1bdbbe527a58c167644cc3/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/4003ba433385a3864c1bdbbe527a58c167644cc3/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "Fixed spelling mistakes in messages.", "markup": "markdown", "html": "<p>Fixed spelling mistakes in messages.</p>", "type": "rendered"}, "parents": [{"hash": "e9e6bfc27bbd95d3e7eb73b73b88c4ae0c227e07", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/e9e6bfc27bbd95d3e7eb73b73b88c4ae0c227e07.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/e9e6bfc27bbd95d3e7eb73b73b88c4ae0c227e07"}}}], "date": "2018-11-27T06:25:22+00:00", "message": "Fixed spelling mistakes in messages.", "type": "commit"}, {"rendered": {"message": {"raw": "Accomodate no analog acquisitions (requires conditional changes in start_task,\nstop_task, and transition_to_manual).", "markup": "markdown", "html": "<p>Accomodate no analog acquisitions (requires conditional changes in start_task,<br />\nstop_task, and transition_to_manual).</p>", "type": "rendered"}}, "hash": "e9e6bfc27bbd95d3e7eb73b73b88c4ae0c227e07", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/e9e6bfc27bbd95d3e7eb73b73b88c4ae0c227e07.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/e9e6bfc27bbd95d3e7eb73b73b88c4ae0c227e07/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/e9e6bfc27bbd95d3e7eb73b73b88c4ae0c227e07"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/e9e6bfc27bbd95d3e7eb73b73b88c4ae0c227e07"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/e9e6bfc27bbd95d3e7eb73b73b88c4ae0c227e07"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/e9e6bfc27bbd95d3e7eb73b73b88c4ae0c227e07/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/e9e6bfc27bbd95d3e7eb73b73b88c4ae0c227e07/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "Accomodate no analog acquisitions (requires conditional changes in start_task,\nstop_task, and transition_to_manual).", "markup": "markdown", "html": "<p>Accomodate no analog acquisitions (requires conditional changes in start_task,<br />\nstop_task, and transition_to_manual).</p>", "type": "rendered"}, "parents": [{"hash": "86152a592eeec0c647087ec0f881843113427e5e", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/86152a592eeec0c647087ec0f881843113427e5e.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/86152a592eeec0c647087ec0f881843113427e5e"}}}], "date": "2018-11-27T06:24:10+00:00", "message": "Accomodate no analog acquisitions (requires conditional changes in start_task,\nstop_task, and transition_to_manual).", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed typo in LabscriptError message.", "markup": "markdown", "html": "<p>Fixed typo in LabscriptError message.</p>", "type": "rendered"}}, "hash": "86152a592eeec0c647087ec0f881843113427e5e", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/86152a592eeec0c647087ec0f881843113427e5e.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/86152a592eeec0c647087ec0f881843113427e5e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/86152a592eeec0c647087ec0f881843113427e5e"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/86152a592eeec0c647087ec0f881843113427e5e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/86152a592eeec0c647087ec0f881843113427e5e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/86152a592eeec0c647087ec0f881843113427e5e/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/86152a592eeec0c647087ec0f881843113427e5e/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "Fixed typo in LabscriptError message.", "markup": "markdown", "html": "<p>Fixed typo in LabscriptError message.</p>", "type": "rendered"}, "parents": [{"hash": "2159560805b5e203530d157059692112e02b6353", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/2159560805b5e203530d157059692112e02b6353.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/2159560805b5e203530d157059692112e02b6353"}}}], "date": "2018-11-25T03:07:58+00:00", "message": "Fixed typo in LabscriptError message.", "type": "commit"}, {"rendered": {"message": {"raw": "Fix TypeError if compiling with no analog outputs.", "markup": "markdown", "html": "<p>Fix TypeError if compiling with no analog outputs.</p>", "type": "rendered"}}, "hash": "2159560805b5e203530d157059692112e02b6353", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/2159560805b5e203530d157059692112e02b6353.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/2159560805b5e203530d157059692112e02b6353/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/2159560805b5e203530d157059692112e02b6353"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/2159560805b5e203530d157059692112e02b6353"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/2159560805b5e203530d157059692112e02b6353"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/2159560805b5e203530d157059692112e02b6353/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/2159560805b5e203530d157059692112e02b6353/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Fix TypeError if compiling with no analog outputs.", "markup": "markdown", "html": "<p>Fix TypeError if compiling with no analog outputs.</p>", "type": "rendered"}, "parents": [{"hash": "c93a9cec48cb3498af5430b6b30a3c840f54196b", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/c93a9cec48cb3498af5430b6b30a3c840f54196b.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/c93a9cec48cb3498af5430b6b30a3c840f54196b"}}}], "date": "2018-11-24T05:13:57+00:00", "message": "Fix TypeError if compiling with no analog outputs.", "type": "commit"}, {"rendered": {"message": {"raw": "Remove PyDAQmx version checking workaround and rely on PyDAQmx 1.4.2\nwhich fixes the issue.", "markup": "markdown", "html": "<p>Remove PyDAQmx version checking workaround and rely on PyDAQmx 1.4.2<br />\nwhich fixes the issue.</p>", "type": "rendered"}}, "hash": "c93a9cec48cb3498af5430b6b30a3c840f54196b", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/c93a9cec48cb3498af5430b6b30a3c840f54196b.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/c93a9cec48cb3498af5430b6b30a3c840f54196b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/c93a9cec48cb3498af5430b6b30a3c840f54196b"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/c93a9cec48cb3498af5430b6b30a3c840f54196b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/c93a9cec48cb3498af5430b6b30a3c840f54196b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/c93a9cec48cb3498af5430b6b30a3c840f54196b/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/c93a9cec48cb3498af5430b6b30a3c840f54196b/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Remove PyDAQmx version checking workaround and rely on PyDAQmx 1.4.2\nwhich fixes the issue.", "markup": "markdown", "html": "<p>Remove PyDAQmx version checking workaround and rely on PyDAQmx 1.4.2<br />\nwhich fixes the issue.</p>", "type": "rendered"}, "parents": [{"hash": "9ab7d7ee13b10eda8ba586537d051aec4d54a65e", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/9ab7d7ee13b10eda8ba586537d051aec4d54a65e.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/9ab7d7ee13b10eda8ba586537d051aec4d54a65e"}}}], "date": "2018-11-13T21:13:47+00:00", "message": "Remove PyDAQmx version checking workaround and rely on PyDAQmx 1.4.2\nwhich fixes the issue.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bug in get_capabilties in port_supports_buffered().\nThe function previously did not correctly retry different clocking terminals\nif the first one it tried did not support being used as an external clock.\n\nReran get_capabilties.py and generate_subclasses.py to fix incorrectly detected\ncapabiltiies of NI-PXIe_6535 resulting from the bug.", "markup": "markdown", "html": "<p>Fixed bug in get_capabilties in port_supports_buffered().<br />\nThe function previously did not correctly retry different clocking terminals<br />\nif the first one it tried did not support being used as an external clock.</p>\n<p>Reran get_capabilties.py and generate_subclasses.py to fix incorrectly detected<br />\ncapabiltiies of NI-PXIe_6535 resulting from the bug.</p>", "type": "rendered"}}, "hash": "9ab7d7ee13b10eda8ba586537d051aec4d54a65e", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/9ab7d7ee13b10eda8ba586537d051aec4d54a65e.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/9ab7d7ee13b10eda8ba586537d051aec4d54a65e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/9ab7d7ee13b10eda8ba586537d051aec4d54a65e"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/9ab7d7ee13b10eda8ba586537d051aec4d54a65e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/9ab7d7ee13b10eda8ba586537d051aec4d54a65e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/9ab7d7ee13b10eda8ba586537d051aec4d54a65e/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/9ab7d7ee13b10eda8ba586537d051aec4d54a65e/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed bug in get_capabilties in port_supports_buffered().\nThe function previously did not correctly retry different clocking terminals\nif the first one it tried did not support being used as an external clock.\n\nReran get_capabilties.py and generate_subclasses.py to fix incorrectly detected\ncapabiltiies of NI-PXIe_6535 resulting from the bug.", "markup": "markdown", "html": "<p>Fixed bug in get_capabilties in port_supports_buffered().<br />\nThe function previously did not correctly retry different clocking terminals<br />\nif the first one it tried did not support being used as an external clock.</p>\n<p>Reran get_capabilties.py and generate_subclasses.py to fix incorrectly detected<br />\ncapabiltiies of NI-PXIe_6535 resulting from the bug.</p>", "type": "rendered"}, "parents": [{"hash": "bf8b52ee0d43877520ccc6bc8ead7c467744c5c3", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/bf8b52ee0d43877520ccc6bc8ead7c467744c5c3.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/bf8b52ee0d43877520ccc6bc8ead7c467744c5c3"}}}], "date": "2018-11-13T20:33:57+00:00", "message": "Fixed bug in get_capabilties in port_supports_buffered().\nThe function previously did not correctly retry different clocking terminals\nif the first one it tried did not support being used as an external clock.\n\nReran get_capabilties.py and generate_subclasses.py to fix incorrectly detected\ncapabiltiies of NI-PXIe_6535 resulting from the bug.", "type": "commit"}, {"rendered": {"message": {"raw": "Workaround for PyDAQmx not reporting its version correctly.", "markup": "markdown", "html": "<p>Workaround for PyDAQmx not reporting its version correctly.</p>", "type": "rendered"}}, "hash": "bf8b52ee0d43877520ccc6bc8ead7c467744c5c3", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/bf8b52ee0d43877520ccc6bc8ead7c467744c5c3.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/bf8b52ee0d43877520ccc6bc8ead7c467744c5c3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/bf8b52ee0d43877520ccc6bc8ead7c467744c5c3"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/bf8b52ee0d43877520ccc6bc8ead7c467744c5c3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/bf8b52ee0d43877520ccc6bc8ead7c467744c5c3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/bf8b52ee0d43877520ccc6bc8ead7c467744c5c3/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/bf8b52ee0d43877520ccc6bc8ead7c467744c5c3/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Workaround for PyDAQmx not reporting its version correctly.", "markup": "markdown", "html": "<p>Workaround for PyDAQmx not reporting its version correctly.</p>", "type": "rendered"}, "parents": [{"hash": "fad10f884e82a1fe97b9068997f954ad6a3ddbee", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/fad10f884e82a1fe97b9068997f954ad6a3ddbee.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/fad10f884e82a1fe97b9068997f954ad6a3ddbee"}}}], "date": "2018-11-13T20:03:01+00:00", "message": "Workaround for PyDAQmx not reporting its version correctly.", "type": "commit"}, {"rendered": {"message": {"raw": "Wait monitor bugfix: do not timeout reading the pulse after a timeout-trigger\nwas sent.\nTesting code: testing interaction with progress bar with markers.", "markup": "markdown", "html": "<p>Wait monitor bugfix: do not timeout reading the pulse after a timeout-trigger<br />\nwas sent.<br />\nTesting code: testing interaction with progress bar with markers.</p>", "type": "rendered"}}, "hash": "fad10f884e82a1fe97b9068997f954ad6a3ddbee", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/fad10f884e82a1fe97b9068997f954ad6a3ddbee.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/fad10f884e82a1fe97b9068997f954ad6a3ddbee/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/fad10f884e82a1fe97b9068997f954ad6a3ddbee"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/fad10f884e82a1fe97b9068997f954ad6a3ddbee"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/fad10f884e82a1fe97b9068997f954ad6a3ddbee"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/fad10f884e82a1fe97b9068997f954ad6a3ddbee/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/fad10f884e82a1fe97b9068997f954ad6a3ddbee/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Wait monitor bugfix: do not timeout reading the pulse after a timeout-trigger\nwas sent.\nTesting code: testing interaction with progress bar with markers.", "markup": "markdown", "html": "<p>Wait monitor bugfix: do not timeout reading the pulse after a timeout-trigger<br />\nwas sent.<br />\nTesting code: testing interaction with progress bar with markers.</p>", "type": "rendered"}, "parents": [{"hash": "4c3e2621ed7b0853dd8263fa1e83f46e52d808e8", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/4c3e2621ed7b0853dd8263fa1e83f46e52d808e8.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/4c3e2621ed7b0853dd8263fa1e83f46e52d808e8"}}}], "date": "2018-11-13T19:38:26+00:00", "message": "Wait monitor bugfix: do not timeout reading the pulse after a timeout-trigger\nwas sent.\nTesting code: testing interaction with progress bar with markers.", "type": "commit"}, {"rendered": {"message": {"raw": "Remove numpy dtype workaround, which is no longer necessary.", "markup": "markdown", "html": "<p>Remove numpy dtype workaround, which is no longer necessary.</p>", "type": "rendered"}}, "hash": "4c3e2621ed7b0853dd8263fa1e83f46e52d808e8", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/4c3e2621ed7b0853dd8263fa1e83f46e52d808e8.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/4c3e2621ed7b0853dd8263fa1e83f46e52d808e8/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/4c3e2621ed7b0853dd8263fa1e83f46e52d808e8"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/4c3e2621ed7b0853dd8263fa1e83f46e52d808e8"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/4c3e2621ed7b0853dd8263fa1e83f46e52d808e8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/4c3e2621ed7b0853dd8263fa1e83f46e52d808e8/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/4c3e2621ed7b0853dd8263fa1e83f46e52d808e8/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Remove numpy dtype workaround, which is no longer necessary.", "markup": "markdown", "html": "<p>Remove numpy dtype workaround, which is no longer necessary.</p>", "type": "rendered"}, "parents": [{"hash": "2d1261c03d38db01e684f8637f04e87955a2a03a", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/2d1261c03d38db01e684f8637f04e87955a2a03a.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/2d1261c03d38db01e684f8637f04e87955a2a03a"}}}], "date": "2018-11-10T17:34:21+00:00", "message": "Remove numpy dtype workaround, which is no longer necessary.", "type": "commit"}, {"rendered": {"message": {"raw": "Completed runviewer parser.\nRemoved unused import from BLACS tab.", "markup": "markdown", "html": "<p>Completed runviewer parser.<br />\nRemoved unused import from BLACS tab.</p>", "type": "rendered"}}, "hash": "2d1261c03d38db01e684f8637f04e87955a2a03a", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/2d1261c03d38db01e684f8637f04e87955a2a03a.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/2d1261c03d38db01e684f8637f04e87955a2a03a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/2d1261c03d38db01e684f8637f04e87955a2a03a"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/2d1261c03d38db01e684f8637f04e87955a2a03a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/2d1261c03d38db01e684f8637f04e87955a2a03a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/2d1261c03d38db01e684f8637f04e87955a2a03a/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/2d1261c03d38db01e684f8637f04e87955a2a03a/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Completed runviewer parser.\nRemoved unused import from BLACS tab.", "markup": "markdown", "html": "<p>Completed runviewer parser.<br />\nRemoved unused import from BLACS tab.</p>", "type": "rendered"}, "parents": [{"hash": "b603b740284fee7785447a699000bc00fa6c9a16", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/b603b740284fee7785447a699000bc00fa6c9a16.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/b603b740284fee7785447a699000bc00fa6c9a16"}}}], "date": "2018-11-10T16:23:59+00:00", "message": "Completed runviewer parser.\nRemoved unused import from BLACS tab.", "type": "commit"}, {"rendered": {"message": {"raw": "Working on runviewer parser.", "markup": "markdown", "html": "<p>Working on runviewer parser.</p>", "type": "rendered"}}, "hash": "b603b740284fee7785447a699000bc00fa6c9a16", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/b603b740284fee7785447a699000bc00fa6c9a16.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/b603b740284fee7785447a699000bc00fa6c9a16/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/b603b740284fee7785447a699000bc00fa6c9a16"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/b603b740284fee7785447a699000bc00fa6c9a16"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/b603b740284fee7785447a699000bc00fa6c9a16"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/b603b740284fee7785447a699000bc00fa6c9a16/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/b603b740284fee7785447a699000bc00fa6c9a16/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Working on runviewer parser.", "markup": "markdown", "html": "<p>Working on runviewer parser.</p>", "type": "rendered"}, "parents": [{"hash": "c5c04c3a3d4398c134c835272bc72f90a27722f7", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/c5c04c3a3d4398c134c835272bc72f90a27722f7.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/c5c04c3a3d4398c134c835272bc72f90a27722f7"}}}], "date": "2018-10-26T20:13:51+00:00", "message": "Working on runviewer parser.", "type": "commit"}, {"rendered": {"message": {"raw": "Check PyDAQmx > 1.4.1, since earlier versions raise an error when DAQmx\ncalls return a positive integer, but actually this is how some functions\nwork when you pass them a null pointer to tell you how large a buffer\nthey need to return the actual result. We use these functions a few times.", "markup": "markdown", "html": "<p>Check PyDAQmx &gt; 1.4.1, since earlier versions raise an error when DAQmx<br />\ncalls return a positive integer, but actually this is how some functions<br />\nwork when you pass them a null pointer to tell you how large a buffer<br />\nthey need to return the actual result. We use these functions a few times.</p>", "type": "rendered"}}, "hash": "c5c04c3a3d4398c134c835272bc72f90a27722f7", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/c5c04c3a3d4398c134c835272bc72f90a27722f7.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/c5c04c3a3d4398c134c835272bc72f90a27722f7/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/c5c04c3a3d4398c134c835272bc72f90a27722f7"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/c5c04c3a3d4398c134c835272bc72f90a27722f7"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/c5c04c3a3d4398c134c835272bc72f90a27722f7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/c5c04c3a3d4398c134c835272bc72f90a27722f7/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/c5c04c3a3d4398c134c835272bc72f90a27722f7/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Check PyDAQmx > 1.4.1, since earlier versions raise an error when DAQmx\ncalls return a positive integer, but actually this is how some functions\nwork when you pass them a null pointer to tell you how large a buffer\nthey need to return the actual result. We use these functions a few times.", "markup": "markdown", "html": "<p>Check PyDAQmx &gt; 1.4.1, since earlier versions raise an error when DAQmx<br />\ncalls return a positive integer, but actually this is how some functions<br />\nwork when you pass them a null pointer to tell you how large a buffer<br />\nthey need to return the actual result. We use these functions a few times.</p>", "type": "rendered"}, "parents": [{"hash": "cb5a86b05d4c1a6c8e15e797ec909c3eb7d4e291", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/cb5a86b05d4c1a6c8e15e797ec909c3eb7d4e291.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/cb5a86b05d4c1a6c8e15e797ec909c3eb7d4e291"}}}], "date": "2018-10-19T15:35:08+00:00", "message": "Check PyDAQmx > 1.4.1, since earlier versions raise an error when DAQmx\ncalls return a positive integer, but actually this is how some functions\nwork when you pass them a null pointer to tell you how large a buffer\nthey need to return the actual result. We use these functions a few times.", "type": "commit"}, {"rendered": {"message": {"raw": "Bump version of labscript_devices to 2.3.\nAdd version check so that BLACS starting up with an old connection table\nraises an exception telling you to recompile the connection table.", "markup": "markdown", "html": "<p>Bump version of labscript_devices to 2.3.<br />\nAdd version check so that BLACS starting up with an old connection table<br />\nraises an exception telling you to recompile the connection table.</p>", "type": "rendered"}}, "hash": "cb5a86b05d4c1a6c8e15e797ec909c3eb7d4e291", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/cb5a86b05d4c1a6c8e15e797ec909c3eb7d4e291.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/cb5a86b05d4c1a6c8e15e797ec909c3eb7d4e291/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/cb5a86b05d4c1a6c8e15e797ec909c3eb7d4e291"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/cb5a86b05d4c1a6c8e15e797ec909c3eb7d4e291"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/cb5a86b05d4c1a6c8e15e797ec909c3eb7d4e291"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/cb5a86b05d4c1a6c8e15e797ec909c3eb7d4e291/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/cb5a86b05d4c1a6c8e15e797ec909c3eb7d4e291/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Bump version of labscript_devices to 2.3.\nAdd version check so that BLACS starting up with an old connection table\nraises an exception telling you to recompile the connection table.", "markup": "markdown", "html": "<p>Bump version of labscript_devices to 2.3.<br />\nAdd version check so that BLACS starting up with an old connection table<br />\nraises an exception telling you to recompile the connection table.</p>", "type": "rendered"}, "parents": [{"hash": "b29fe957a41e8d541e343e62e24a72607d539ed8", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/b29fe957a41e8d541e343e62e24a72607d539ed8.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/b29fe957a41e8d541e343e62e24a72607d539ed8"}}}], "date": "2018-10-19T15:28:12+00:00", "message": "Bump version of labscript_devices to 2.3.\nAdd version check so that BLACS starting up with an old connection table\nraises an exception telling you to recompile the connection table.", "type": "commit"}, {"rendered": {"message": {"raw": "Replace existing labscript device classes with deprecated_import_alias\npointing to the new location.", "markup": "markdown", "html": "<p>Replace existing labscript device classes with deprecated_import_alias<br />\npointing to the new location.</p>", "type": "rendered"}}, "hash": "b29fe957a41e8d541e343e62e24a72607d539ed8", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/b29fe957a41e8d541e343e62e24a72607d539ed8.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/b29fe957a41e8d541e343e62e24a72607d539ed8/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/b29fe957a41e8d541e343e62e24a72607d539ed8"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/b29fe957a41e8d541e343e62e24a72607d539ed8"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/b29fe957a41e8d541e343e62e24a72607d539ed8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/b29fe957a41e8d541e343e62e24a72607d539ed8/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/b29fe957a41e8d541e343e62e24a72607d539ed8/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Replace existing labscript device classes with deprecated_import_alias\npointing to the new location.", "markup": "markdown", "html": "<p>Replace existing labscript device classes with deprecated_import_alias<br />\npointing to the new location.</p>", "type": "rendered"}, "parents": [{"hash": "1aa53cdb5851bc05f66a6c2e5ef5eb2c6f8ebd8d", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/1aa53cdb5851bc05f66a6c2e5ef5eb2c6f8ebd8d.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/1aa53cdb5851bc05f66a6c2e5ef5eb2c6f8ebd8d"}}}], "date": "2018-10-19T14:49:03+00:00", "message": "Replace existing labscript device classes with deprecated_import_alias\npointing to the new location.", "type": "commit"}, {"rendered": {"message": {"raw": "Add \"wait_monitor_supports_wait_completed_events=True\" class attribute,\nso that other components (I'm thinking the BLACS progress bar plugin) can know\nwhether to expect wait completed events from this device when used as a wait\nmonitor.", "markup": "markdown", "html": "<p>Add \"wait_monitor_supports_wait_completed_events=True\" class attribute,<br />\nso that other components (I'm thinking the BLACS progress bar plugin) can know<br />\nwhether to expect wait completed events from this device when used as a wait<br />\nmonitor.</p>", "type": "rendered"}}, "hash": "1aa53cdb5851bc05f66a6c2e5ef5eb2c6f8ebd8d", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/1aa53cdb5851bc05f66a6c2e5ef5eb2c6f8ebd8d.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/1aa53cdb5851bc05f66a6c2e5ef5eb2c6f8ebd8d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/1aa53cdb5851bc05f66a6c2e5ef5eb2c6f8ebd8d"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/1aa53cdb5851bc05f66a6c2e5ef5eb2c6f8ebd8d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/1aa53cdb5851bc05f66a6c2e5ef5eb2c6f8ebd8d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/1aa53cdb5851bc05f66a6c2e5ef5eb2c6f8ebd8d/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/1aa53cdb5851bc05f66a6c2e5ef5eb2c6f8ebd8d/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Add \"wait_monitor_supports_wait_completed_events=True\" class attribute,\nso that other components (I'm thinking the BLACS progress bar plugin) can know\nwhether to expect wait completed events from this device when used as a wait\nmonitor.", "markup": "markdown", "html": "<p>Add \"wait_monitor_supports_wait_completed_events=True\" class attribute,<br />\nso that other components (I'm thinking the BLACS progress bar plugin) can know<br />\nwhether to expect wait completed events from this device when used as a wait<br />\nmonitor.</p>", "type": "rendered"}, "parents": [{"hash": "db08c39f754bf9db84ae938a5f0fe28e0db1e7d0", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/db08c39f754bf9db84ae938a5f0fe28e0db1e7d0.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/db08c39f754bf9db84ae938a5f0fe28e0db1e7d0"}}}], "date": "2018-10-17T16:23:16+00:00", "message": "Add \"wait_monitor_supports_wait_completed_events=True\" class attribute,\nso that other components (I'm thinking the BLACS progress bar plugin) can know\nwhether to expect wait completed events from this device when used as a wait\nmonitor.", "type": "commit"}, {"rendered": {"message": {"raw": "Use introspected min semiperiod measurements.\nSimplify wait monitor worker process, since it can assume it is not\nbeing run if the device is not both the wait monitor and timeout device\n(the BLACS tab checks before starting the process).\nUpdate capabilities and subclasses.", "markup": "markdown", "html": "<p>Use introspected min semiperiod measurements.<br />\nSimplify wait monitor worker process, since it can assume it is not<br />\nbeing run if the device is not both the wait monitor and timeout device<br />\n(the BLACS tab checks before starting the process).<br />\nUpdate capabilities and subclasses.</p>", "type": "rendered"}}, "hash": "db08c39f754bf9db84ae938a5f0fe28e0db1e7d0", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/db08c39f754bf9db84ae938a5f0fe28e0db1e7d0.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/db08c39f754bf9db84ae938a5f0fe28e0db1e7d0/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/db08c39f754bf9db84ae938a5f0fe28e0db1e7d0"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/db08c39f754bf9db84ae938a5f0fe28e0db1e7d0"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/db08c39f754bf9db84ae938a5f0fe28e0db1e7d0"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/db08c39f754bf9db84ae938a5f0fe28e0db1e7d0/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/db08c39f754bf9db84ae938a5f0fe28e0db1e7d0/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Use introspected min semiperiod measurements.\nSimplify wait monitor worker process, since it can assume it is not\nbeing run if the device is not both the wait monitor and timeout device\n(the BLACS tab checks before starting the process).\nUpdate capabilities and subclasses.", "markup": "markdown", "html": "<p>Use introspected min semiperiod measurements.<br />\nSimplify wait monitor worker process, since it can assume it is not<br />\nbeing run if the device is not both the wait monitor and timeout device<br />\n(the BLACS tab checks before starting the process).<br />\nUpdate capabilities and subclasses.</p>", "type": "rendered"}, "parents": [{"hash": "c250735384b108681c128cb8e7c05b37591b9bb5", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/c250735384b108681c128cb8e7c05b37591b9bb5.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/c250735384b108681c128cb8e7c05b37591b9bb5"}}}], "date": "2018-10-16T18:45:00+00:00", "message": "Use introspected min semiperiod measurements.\nSimplify wait monitor worker process, since it can assume it is not\nbeing run if the device is not both the wait monitor and timeout device\n(the BLACS tab checks before starting the process).\nUpdate capabilities and subclasses.", "type": "commit"}, {"rendered": {"message": {"raw": "Added min_semiperiod_measurement and supports_semiperiod_measurement to\nintrospected capabilities", "markup": "markdown", "html": "<p>Added min_semiperiod_measurement and supports_semiperiod_measurement to<br />\nintrospected capabilities</p>", "type": "rendered"}}, "hash": "c250735384b108681c128cb8e7c05b37591b9bb5", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/c250735384b108681c128cb8e7c05b37591b9bb5.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/c250735384b108681c128cb8e7c05b37591b9bb5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/c250735384b108681c128cb8e7c05b37591b9bb5"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/c250735384b108681c128cb8e7c05b37591b9bb5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/c250735384b108681c128cb8e7c05b37591b9bb5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/c250735384b108681c128cb8e7c05b37591b9bb5/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/c250735384b108681c128cb8e7c05b37591b9bb5/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added min_semiperiod_measurement and supports_semiperiod_measurement to\nintrospected capabilities", "markup": "markdown", "html": "<p>Added min_semiperiod_measurement and supports_semiperiod_measurement to<br />\nintrospected capabilities</p>", "type": "rendered"}, "parents": [{"hash": "e89e1ac82a4095d7016e42f31e577e9069f6df72", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/e89e1ac82a4095d7016e42f31e577e9069f6df72.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/e89e1ac82a4095d7016e42f31e577e9069f6df72"}}}], "date": "2018-10-16T16:01:20+00:00", "message": "Added min_semiperiod_measurement and supports_semiperiod_measurement to\nintrospected capabilities", "type": "commit"}, {"rendered": {"message": {"raw": "Fix more bugs in wait monitor implementation. Current problem is the range\nof measurable pulses of a given device. Some cannot measure small pulses.\nThis would be fine if we were doing period measurement, but we are doing\nsemiperiod measurement...We don't actually care about the falling edges,\nbut the incomplete sample detection means we can't just measure rising edges\notherwise we won't know when we are at the start of the experiment and thus\ncan't compute a timeout time for the first wait. This is a major inconvenience!", "markup": "markdown", "html": "<p>Fix more bugs in wait monitor implementation. Current problem is the range<br />\nof measurable pulses of a given device. Some cannot measure small pulses.<br />\nThis would be fine if we were doing period measurement, but we are doing<br />\nsemiperiod measurement...We don't actually care about the falling edges,<br />\nbut the incomplete sample detection means we can't just measure rising edges<br />\notherwise we won't know when we are at the start of the experiment and thus<br />\ncan't compute a timeout time for the first wait. This is a major inconvenience!</p>", "type": "rendered"}}, "hash": "e89e1ac82a4095d7016e42f31e577e9069f6df72", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/e89e1ac82a4095d7016e42f31e577e9069f6df72.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/e89e1ac82a4095d7016e42f31e577e9069f6df72/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/e89e1ac82a4095d7016e42f31e577e9069f6df72"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/e89e1ac82a4095d7016e42f31e577e9069f6df72"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/e89e1ac82a4095d7016e42f31e577e9069f6df72"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/e89e1ac82a4095d7016e42f31e577e9069f6df72/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/e89e1ac82a4095d7016e42f31e577e9069f6df72/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fix more bugs in wait monitor implementation. Current problem is the range\nof measurable pulses of a given device. Some cannot measure small pulses.\nThis would be fine if we were doing period measurement, but we are doing\nsemiperiod measurement...We don't actually care about the falling edges,\nbut the incomplete sample detection means we can't just measure rising edges\notherwise we won't know when we are at the start of the experiment and thus\ncan't compute a timeout time for the first wait. This is a major inconvenience!", "markup": "markdown", "html": "<p>Fix more bugs in wait monitor implementation. Current problem is the range<br />\nof measurable pulses of a given device. Some cannot measure small pulses.<br />\nThis would be fine if we were doing period measurement, but we are doing<br />\nsemiperiod measurement...We don't actually care about the falling edges,<br />\nbut the incomplete sample detection means we can't just measure rising edges<br />\notherwise we won't know when we are at the start of the experiment and thus<br />\ncan't compute a timeout time for the first wait. This is a major inconvenience!</p>", "type": "rendered"}, "parents": [{"hash": "b63edaca42b39a7378dead65239e437cea78b820", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/b63edaca42b39a7378dead65239e437cea78b820.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/b63edaca42b39a7378dead65239e437cea78b820"}}}], "date": "2018-10-15T21:48:09+00:00", "message": "Fix more bugs in wait monitor implementation. Current problem is the range\nof measurable pulses of a given device. Some cannot measure small pulses.\nThis would be fine if we were doing period measurement, but we are doing\nsemiperiod measurement...We don't actually care about the falling edges,\nbut the incomplete sample detection means we can't just measure rising edges\notherwise we won't know when we are at the start of the experiment and thus\ncan't compute a timeout time for the first wait. This is a major inconvenience!", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a number of bugs in wait monitor implementation.", "markup": "markdown", "html": "<p>Fixed a number of bugs in wait monitor implementation.</p>", "type": "rendered"}}, "hash": "b63edaca42b39a7378dead65239e437cea78b820", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/b63edaca42b39a7378dead65239e437cea78b820.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/b63edaca42b39a7378dead65239e437cea78b820/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/b63edaca42b39a7378dead65239e437cea78b820"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/b63edaca42b39a7378dead65239e437cea78b820"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/b63edaca42b39a7378dead65239e437cea78b820"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/b63edaca42b39a7378dead65239e437cea78b820/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/b63edaca42b39a7378dead65239e437cea78b820/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed a number of bugs in wait monitor implementation.", "markup": "markdown", "html": "<p>Fixed a number of bugs in wait monitor implementation.</p>", "type": "rendered"}, "parents": [{"hash": "0d2fd9eebb0c5b295002db35e40ede9fb93e93e5", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/0d2fd9eebb0c5b295002db35e40ede9fb93e93e5.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/0d2fd9eebb0c5b295002db35e40ede9fb93e93e5"}}}], "date": "2018-10-15T21:08:08+00:00", "message": "Fixed a number of bugs in wait monitor implementation.", "type": "commit"}, {"rendered": {"message": {"raw": "Implementation of wait monitor complete, pending testing.", "markup": "markdown", "html": "<p>Implementation of wait monitor complete, pending testing.</p>", "type": "rendered"}}, "hash": "0d2fd9eebb0c5b295002db35e40ede9fb93e93e5", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/0d2fd9eebb0c5b295002db35e40ede9fb93e93e5.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/0d2fd9eebb0c5b295002db35e40ede9fb93e93e5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/0d2fd9eebb0c5b295002db35e40ede9fb93e93e5"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/0d2fd9eebb0c5b295002db35e40ede9fb93e93e5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/0d2fd9eebb0c5b295002db35e40ede9fb93e93e5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/0d2fd9eebb0c5b295002db35e40ede9fb93e93e5/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/0d2fd9eebb0c5b295002db35e40ede9fb93e93e5/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Implementation of wait monitor complete, pending testing.", "markup": "markdown", "html": "<p>Implementation of wait monitor complete, pending testing.</p>", "type": "rendered"}, "parents": [{"hash": "17412f2e80825e86b2c790ca464d4a7071d825bd", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/17412f2e80825e86b2c790ca464d4a7071d825bd.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/17412f2e80825e86b2c790ca464d4a7071d825bd"}}}], "date": "2018-10-15T19:36:57+00:00", "message": "Implementation of wait monitor complete, pending testing.", "type": "commit"}, {"rendered": {"message": {"raw": "Tweak to daqmx_utils.py", "markup": "markdown", "html": "<p>Tweak to daqmx_utils.py</p>", "type": "rendered"}}, "hash": "17412f2e80825e86b2c790ca464d4a7071d825bd", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/17412f2e80825e86b2c790ca464d4a7071d825bd.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/17412f2e80825e86b2c790ca464d4a7071d825bd/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/17412f2e80825e86b2c790ca464d4a7071d825bd"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/17412f2e80825e86b2c790ca464d4a7071d825bd"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/17412f2e80825e86b2c790ca464d4a7071d825bd"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/17412f2e80825e86b2c790ca464d4a7071d825bd/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/17412f2e80825e86b2c790ca464d4a7071d825bd/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Tweak to daqmx_utils.py", "markup": "markdown", "html": "<p>Tweak to daqmx_utils.py</p>", "type": "rendered"}, "parents": [{"hash": "edf70320b17a88ae3e70bb1db9b0a2748fcafed8", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/edf70320b17a88ae3e70bb1db9b0a2748fcafed8.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/edf70320b17a88ae3e70bb1db9b0a2748fcafed8"}}}], "date": "2018-10-12T21:34:50+00:00", "message": "Tweak to daqmx_utils.py", "type": "commit"}, {"rendered": {"message": {"raw": "add daqmx_utils.py, which contains a function that introspects whether a device\nhas incomplete sample detection.", "markup": "markdown", "html": "<p>add daqmx_utils.py, which contains a function that introspects whether a device<br />\nhas incomplete sample detection.</p>", "type": "rendered"}}, "hash": "edf70320b17a88ae3e70bb1db9b0a2748fcafed8", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/edf70320b17a88ae3e70bb1db9b0a2748fcafed8.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/edf70320b17a88ae3e70bb1db9b0a2748fcafed8/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/edf70320b17a88ae3e70bb1db9b0a2748fcafed8"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/edf70320b17a88ae3e70bb1db9b0a2748fcafed8"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/edf70320b17a88ae3e70bb1db9b0a2748fcafed8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/edf70320b17a88ae3e70bb1db9b0a2748fcafed8/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/edf70320b17a88ae3e70bb1db9b0a2748fcafed8/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "add daqmx_utils.py, which contains a function that introspects whether a device\nhas incomplete sample detection.", "markup": "markdown", "html": "<p>add daqmx_utils.py, which contains a function that introspects whether a device<br />\nhas incomplete sample detection.</p>", "type": "rendered"}, "parents": [{"hash": "f285c4c0488ac07bf805074250efad18dd1262f1", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/f285c4c0488ac07bf805074250efad18dd1262f1.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/f285c4c0488ac07bf805074250efad18dd1262f1"}}}], "date": "2018-10-12T21:07:47+00:00", "message": "add daqmx_utils.py, which contains a function that introspects whether a device\nhas incomplete sample detection.", "type": "commit"}, {"rendered": {"message": {"raw": "hacking on wait monitor. Not yet functional, some issues to iron out with\nincomplete sample detection and small buffers.\n\nPlan is to\n\n* acquire pulse width instead of semiperiod, this will entail\nonly one read event per pulse rather than two, solving the issue of data\ncoming faster than it can be read and filling the buffer. Or maybe we will\nstill do semiperiod, but will read 2 samples at a time as David Meyer has had\nsucess with. The advantage of this latter approach is that we do not need to\nstore the pulse duration in the h5 file in order to take it into account -\nwe can measure it.\n\n* Determine whether a device has incomplete sample detection empirically.\n  In get_capabilities.py we can create a task that outputs on a DO and reads in\n  a counter, and we can see what we get and store whether it looks like\n  incomplete sample detection. This should be achievable without asking the user\n  to connect back any cables physically, as we should be able to configure\n  them to be connected internally. This will not work if there are any devices\n  out there with counters but no digital outs!", "markup": "markdown", "html": "<p>hacking on wait monitor. Not yet functional, some issues to iron out with<br />\nincomplete sample detection and small buffers.</p>\n<p>Plan is to</p>\n<ul>\n<li>\n<p>acquire pulse width instead of semiperiod, this will entail<br />\nonly one read event per pulse rather than two, solving the issue of data<br />\ncoming faster than it can be read and filling the buffer. Or maybe we will<br />\nstill do semiperiod, but will read 2 samples at a time as David Meyer has had<br />\nsucess with. The advantage of this latter approach is that we do not need to<br />\nstore the pulse duration in the h5 file in order to take it into account -<br />\nwe can measure it.</p>\n</li>\n<li>\n<p>Determine whether a device has incomplete sample detection empirically.<br />\n  In get_capabilities.py we can create a task that outputs on a DO and reads in<br />\n  a counter, and we can see what we get and store whether it looks like<br />\n  incomplete sample detection. This should be achievable without asking the user<br />\n  to connect back any cables physically, as we should be able to configure<br />\n  them to be connected internally. This will not work if there are any devices<br />\n  out there with counters but no digital outs!</p>\n</li>\n</ul>", "type": "rendered"}}, "hash": "f285c4c0488ac07bf805074250efad18dd1262f1", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/f285c4c0488ac07bf805074250efad18dd1262f1.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/f285c4c0488ac07bf805074250efad18dd1262f1/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/f285c4c0488ac07bf805074250efad18dd1262f1"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/f285c4c0488ac07bf805074250efad18dd1262f1"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/f285c4c0488ac07bf805074250efad18dd1262f1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/f285c4c0488ac07bf805074250efad18dd1262f1/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/f285c4c0488ac07bf805074250efad18dd1262f1/statuses_page=1.json"}}, "author": {"raw": "Chris Billington", "type": "author"}, "summary": {"raw": "hacking on wait monitor. Not yet functional, some issues to iron out with\nincomplete sample detection and small buffers.\n\nPlan is to\n\n* acquire pulse width instead of semiperiod, this will entail\nonly one read event per pulse rather than two, solving the issue of data\ncoming faster than it can be read and filling the buffer. Or maybe we will\nstill do semiperiod, but will read 2 samples at a time as David Meyer has had\nsucess with. The advantage of this latter approach is that we do not need to\nstore the pulse duration in the h5 file in order to take it into account -\nwe can measure it.\n\n* Determine whether a device has incomplete sample detection empirically.\n  In get_capabilities.py we can create a task that outputs on a DO and reads in\n  a counter, and we can see what we get and store whether it looks like\n  incomplete sample detection. This should be achievable without asking the user\n  to connect back any cables physically, as we should be able to configure\n  them to be connected internally. This will not work if there are any devices\n  out there with counters but no digital outs!", "markup": "markdown", "html": "<p>hacking on wait monitor. Not yet functional, some issues to iron out with<br />\nincomplete sample detection and small buffers.</p>\n<p>Plan is to</p>\n<ul>\n<li>\n<p>acquire pulse width instead of semiperiod, this will entail<br />\nonly one read event per pulse rather than two, solving the issue of data<br />\ncoming faster than it can be read and filling the buffer. Or maybe we will<br />\nstill do semiperiod, but will read 2 samples at a time as David Meyer has had<br />\nsucess with. The advantage of this latter approach is that we do not need to<br />\nstore the pulse duration in the h5 file in order to take it into account -<br />\nwe can measure it.</p>\n</li>\n<li>\n<p>Determine whether a device has incomplete sample detection empirically.<br />\n  In get_capabilities.py we can create a task that outputs on a DO and reads in<br />\n  a counter, and we can see what we get and store whether it looks like<br />\n  incomplete sample detection. This should be achievable without asking the user<br />\n  to connect back any cables physically, as we should be able to configure<br />\n  them to be connected internally. This will not work if there are any devices<br />\n  out there with counters but no digital outs!</p>\n</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "c7e2538e0da8152fe41a8d66d237a5748f133f42", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/c7e2538e0da8152fe41a8d66d237a5748f133f42.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/c7e2538e0da8152fe41a8d66d237a5748f133f42"}}}], "date": "2018-10-10T21:20:25+00:00", "message": "hacking on wait monitor. Not yet functional, some issues to iron out with\nincomplete sample detection and small buffers.\n\nPlan is to\n\n* acquire pulse width instead of semiperiod, this will entail\nonly one read event per pulse rather than two, solving the issue of data\ncoming faster than it can be read and filling the buffer. Or maybe we will\nstill do semiperiod, but will read 2 samples at a time as David Meyer has had\nsucess with. The advantage of this latter approach is that we do not need to\nstore the pulse duration in the h5 file in order to take it into account -\nwe can measure it.\n\n* Determine whether a device has incomplete sample detection empirically.\n  In get_capabilities.py we can create a task that outputs on a DO and reads in\n  a counter, and we can see what we get and store whether it looks like\n  incomplete sample detection. This should be achievable without asking the user\n  to connect back any cables physically, as we should be able to configure\n  them to be connected internally. This will not work if there are any devices\n  out there with counters but no digital outs!", "type": "commit"}, {"rendered": {"message": {"raw": "Ensure any callbacks still running from a previous task take no action.", "markup": "markdown", "html": "<p>Ensure any callbacks still running from a previous task take no action.</p>", "type": "rendered"}}, "hash": "c7e2538e0da8152fe41a8d66d237a5748f133f42", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/c7e2538e0da8152fe41a8d66d237a5748f133f42.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/c7e2538e0da8152fe41a8d66d237a5748f133f42/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/c7e2538e0da8152fe41a8d66d237a5748f133f42"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/c7e2538e0da8152fe41a8d66d237a5748f133f42"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/c7e2538e0da8152fe41a8d66d237a5748f133f42"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/c7e2538e0da8152fe41a8d66d237a5748f133f42/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/c7e2538e0da8152fe41a8d66d237a5748f133f42/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Ensure any callbacks still running from a previous task take no action.", "markup": "markdown", "html": "<p>Ensure any callbacks still running from a previous task take no action.</p>", "type": "rendered"}, "parents": [{"hash": "aff76b9ac8b29a454c290f53de0d83e552c7fc8a", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/aff76b9ac8b29a454c290f53de0d83e552c7fc8a.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/aff76b9ac8b29a454c290f53de0d83e552c7fc8a"}}}], "date": "2018-10-09T22:37:23+00:00", "message": "Ensure any callbacks still running from a previous task take no action.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bugs in acquisition. Removed reset device for now, it was clearing\ntasks in other subprocesses!", "markup": "markdown", "html": "<p>Fixed bugs in acquisition. Removed reset device for now, it was clearing<br />\ntasks in other subprocesses!</p>", "type": "rendered"}}, "hash": "aff76b9ac8b29a454c290f53de0d83e552c7fc8a", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/aff76b9ac8b29a454c290f53de0d83e552c7fc8a.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/aff76b9ac8b29a454c290f53de0d83e552c7fc8a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/aff76b9ac8b29a454c290f53de0d83e552c7fc8a"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/aff76b9ac8b29a454c290f53de0d83e552c7fc8a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/aff76b9ac8b29a454c290f53de0d83e552c7fc8a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/aff76b9ac8b29a454c290f53de0d83e552c7fc8a/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/aff76b9ac8b29a454c290f53de0d83e552c7fc8a/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed bugs in acquisition. Removed reset device for now, it was clearing\ntasks in other subprocesses!", "markup": "markdown", "html": "<p>Fixed bugs in acquisition. Removed reset device for now, it was clearing<br />\ntasks in other subprocesses!</p>", "type": "rendered"}, "parents": [{"hash": "6b16614386e0491f5aa683893adfc19cff87991e", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/6b16614386e0491f5aa683893adfc19cff87991e.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/6b16614386e0491f5aa683893adfc19cff87991e"}}}], "date": "2018-10-09T22:31:44+00:00", "message": "Fixed bugs in acquisition. Removed reset device for now, it was clearing\ntasks in other subprocesses!", "type": "commit"}, {"rendered": {"message": {"raw": "Restrict AI input range only to that supported for a non-differential\nmeasurement.\n\nFix bugs in AI: Start task for manual mode, workaround inability to pass\nbuffered setting to the read callback by using an instance variable instead.", "markup": "markdown", "html": "<p>Restrict AI input range only to that supported for a non-differential<br />\nmeasurement.</p>\n<p>Fix bugs in AI: Start task for manual mode, workaround inability to pass<br />\nbuffered setting to the read callback by using an instance variable instead.</p>", "type": "rendered"}}, "hash": "6b16614386e0491f5aa683893adfc19cff87991e", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/6b16614386e0491f5aa683893adfc19cff87991e.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/6b16614386e0491f5aa683893adfc19cff87991e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/6b16614386e0491f5aa683893adfc19cff87991e"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/6b16614386e0491f5aa683893adfc19cff87991e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/6b16614386e0491f5aa683893adfc19cff87991e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/6b16614386e0491f5aa683893adfc19cff87991e/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/6b16614386e0491f5aa683893adfc19cff87991e/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Restrict AI input range only to that supported for a non-differential\nmeasurement.\n\nFix bugs in AI: Start task for manual mode, workaround inability to pass\nbuffered setting to the read callback by using an instance variable instead.", "markup": "markdown", "html": "<p>Restrict AI input range only to that supported for a non-differential<br />\nmeasurement.</p>\n<p>Fix bugs in AI: Start task for manual mode, workaround inability to pass<br />\nbuffered setting to the read callback by using an instance variable instead.</p>", "type": "rendered"}, "parents": [{"hash": "23422b6e162ea56a93f471a923b298b60237764f", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/23422b6e162ea56a93f471a923b298b60237764f.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/23422b6e162ea56a93f471a923b298b60237764f"}}}], "date": "2018-10-09T19:56:50+00:00", "message": "Restrict AI input range only to that supported for a non-differential\nmeasurement.\n\nFix bugs in AI: Start task for manual mode, workaround inability to pass\nbuffered setting to the read callback by using an instance variable instead.", "type": "commit"}, {"rendered": {"message": {"raw": "* Fixed bug in update_capabilities.py and rename to get_capabilities.py.\n* Move base class into labscript_devices.py (updated subclass template accordingly).\n* Fix import * behaviour on Python 2 for the modules submodule - not allowed\n  to put unicode names in the globals dict.\n* Readme fixes", "markup": "markdown", "html": "<ul>\n<li>Fixed bug in update_capabilities.py and rename to get_capabilities.py.</li>\n<li>Move base class into labscript_devices.py (updated subclass template accordingly).</li>\n<li>Fix import * behaviour on Python 2 for the modules submodule - not allowed<br />\n  to put unicode names in the globals dict.</li>\n<li>Readme fixes</li>\n</ul>", "type": "rendered"}}, "hash": "23422b6e162ea56a93f471a923b298b60237764f", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/23422b6e162ea56a93f471a923b298b60237764f.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/23422b6e162ea56a93f471a923b298b60237764f/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/23422b6e162ea56a93f471a923b298b60237764f"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/23422b6e162ea56a93f471a923b298b60237764f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/23422b6e162ea56a93f471a923b298b60237764f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/23422b6e162ea56a93f471a923b298b60237764f/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/23422b6e162ea56a93f471a923b298b60237764f/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "* Fixed bug in update_capabilities.py and rename to get_capabilities.py.\n* Move base class into labscript_devices.py (updated subclass template accordingly).\n* Fix import * behaviour on Python 2 for the modules submodule - not allowed\n  to put unicode names in the globals dict.\n* Readme fixes", "markup": "markdown", "html": "<ul>\n<li>Fixed bug in update_capabilities.py and rename to get_capabilities.py.</li>\n<li>Move base class into labscript_devices.py (updated subclass template accordingly).</li>\n<li>Fix import * behaviour on Python 2 for the modules submodule - not allowed<br />\n  to put unicode names in the globals dict.</li>\n<li>Readme fixes</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "ef1c51593114defe187473ed0e08436e7c33984a", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/ef1c51593114defe187473ed0e08436e7c33984a.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/ef1c51593114defe187473ed0e08436e7c33984a"}}}], "date": "2018-10-06T21:18:52+00:00", "message": "* Fixed bug in update_capabilities.py and rename to get_capabilities.py.\n* Move base class into labscript_devices.py (updated subclass template accordingly).\n* Fix import * behaviour on Python 2 for the modules submodule - not allowed\n  to put unicode names in the globals dict.\n* Readme fixes", "type": "commit"}, {"rendered": {"message": {"raw": "* Added two new models.\n* Fixed issue in getting capabilities of some models.\n* Added introspected AI_start_delay capability.\n* Fixed Py2 incompatibility in generate_subclasses.py\n* Restore use of AI_start_delay in extract_measurements using model-dependent value.", "markup": "markdown", "html": "<ul>\n<li>Added two new models.</li>\n<li>Fixed issue in getting capabilities of some models.</li>\n<li>Added introspected AI_start_delay capability.</li>\n<li>Fixed Py2 incompatibility in generate_subclasses.py</li>\n<li>Restore use of AI_start_delay in extract_measurements using model-dependent value.</li>\n</ul>", "type": "rendered"}}, "hash": "ef1c51593114defe187473ed0e08436e7c33984a", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/ef1c51593114defe187473ed0e08436e7c33984a.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/ef1c51593114defe187473ed0e08436e7c33984a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/ef1c51593114defe187473ed0e08436e7c33984a"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/ef1c51593114defe187473ed0e08436e7c33984a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/ef1c51593114defe187473ed0e08436e7c33984a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/ef1c51593114defe187473ed0e08436e7c33984a/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/ef1c51593114defe187473ed0e08436e7c33984a/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "* Added two new models.\n* Fixed issue in getting capabilities of some models.\n* Added introspected AI_start_delay capability.\n* Fixed Py2 incompatibility in generate_subclasses.py\n* Restore use of AI_start_delay in extract_measurements using model-dependent value.", "markup": "markdown", "html": "<ul>\n<li>Added two new models.</li>\n<li>Fixed issue in getting capabilities of some models.</li>\n<li>Added introspected AI_start_delay capability.</li>\n<li>Fixed Py2 incompatibility in generate_subclasses.py</li>\n<li>Restore use of AI_start_delay in extract_measurements using model-dependent value.</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "1c58d302ab8f426a52cf4adfffeb440afb67acae", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/1c58d302ab8f426a52cf4adfffeb440afb67acae.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/1c58d302ab8f426a52cf4adfffeb440afb67acae"}}}], "date": "2018-10-06T21:13:57+00:00", "message": "* Added two new models.\n* Fixed issue in getting capabilities of some models.\n* Added introspected AI_start_delay capability.\n* Fixed Py2 incompatibility in generate_subclasses.py\n* Restore use of AI_start_delay in extract_measurements using model-dependent value.", "type": "commit"}, {"rendered": {"message": {"raw": "Hacking on analog input complete - now implemented with a callback, should\nbe faster to transition to static mode. Also have it acuqiring in static mode,\nbut not doing anything with the data as of yet. These changes untested for now.", "markup": "markdown", "html": "<p>Hacking on analog input complete - now implemented with a callback, should<br />\nbe faster to transition to static mode. Also have it acuqiring in static mode,<br />\nbut not doing anything with the data as of yet. These changes untested for now.</p>", "type": "rendered"}}, "hash": "1c58d302ab8f426a52cf4adfffeb440afb67acae", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/1c58d302ab8f426a52cf4adfffeb440afb67acae.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/1c58d302ab8f426a52cf4adfffeb440afb67acae/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/1c58d302ab8f426a52cf4adfffeb440afb67acae"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/1c58d302ab8f426a52cf4adfffeb440afb67acae"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/1c58d302ab8f426a52cf4adfffeb440afb67acae"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/1c58d302ab8f426a52cf4adfffeb440afb67acae/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/1c58d302ab8f426a52cf4adfffeb440afb67acae/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Hacking on analog input complete - now implemented with a callback, should\nbe faster to transition to static mode. Also have it acuqiring in static mode,\nbut not doing anything with the data as of yet. These changes untested for now.", "markup": "markdown", "html": "<p>Hacking on analog input complete - now implemented with a callback, should<br />\nbe faster to transition to static mode. Also have it acuqiring in static mode,<br />\nbut not doing anything with the data as of yet. These changes untested for now.</p>", "type": "rendered"}, "parents": [{"hash": "197aabd26300a66607703196bc1cf546b5083735", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/197aabd26300a66607703196bc1cf546b5083735.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/197aabd26300a66607703196bc1cf546b5083735"}}}], "date": "2018-10-06T06:01:27+00:00", "message": "Hacking on analog input complete - now implemented with a callback, should\nbe faster to transition to static mode. Also have it acuqiring in static mode,\nbut not doing anything with the data as of yet. These changes untested for now.", "type": "commit"}, {"rendered": {"message": {"raw": "Hacking on analog input to simplify and incorporate manual mode analog input.", "markup": "markdown", "html": "<p>Hacking on analog input to simplify and incorporate manual mode analog input.</p>", "type": "rendered"}}, "hash": "197aabd26300a66607703196bc1cf546b5083735", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/197aabd26300a66607703196bc1cf546b5083735.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/197aabd26300a66607703196bc1cf546b5083735/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/197aabd26300a66607703196bc1cf546b5083735"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/197aabd26300a66607703196bc1cf546b5083735"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/197aabd26300a66607703196bc1cf546b5083735"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/197aabd26300a66607703196bc1cf546b5083735/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/197aabd26300a66607703196bc1cf546b5083735/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Hacking on analog input to simplify and incorporate manual mode analog input.", "markup": "markdown", "html": "<p>Hacking on analog input to simplify and incorporate manual mode analog input.</p>", "type": "rendered"}, "parents": [{"hash": "04d05471ad062d9047228618fe786485a00dbbcb", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/04d05471ad062d9047228618fe786485a00dbbcb.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/04d05471ad062d9047228618fe786485a00dbbcb"}}}], "date": "2018-10-05T21:29:41+00:00", "message": "Hacking on analog input to simplify and incorporate manual mode analog input.", "type": "commit"}, {"rendered": {"message": {"raw": "Analog acquisition working.", "markup": "markdown", "html": "<p>Analog acquisition working.</p>", "type": "rendered"}}, "hash": "04d05471ad062d9047228618fe786485a00dbbcb", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/04d05471ad062d9047228618fe786485a00dbbcb.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/04d05471ad062d9047228618fe786485a00dbbcb/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/04d05471ad062d9047228618fe786485a00dbbcb"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/04d05471ad062d9047228618fe786485a00dbbcb"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/04d05471ad062d9047228618fe786485a00dbbcb"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/04d05471ad062d9047228618fe786485a00dbbcb/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/04d05471ad062d9047228618fe786485a00dbbcb/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Analog acquisition working.", "markup": "markdown", "html": "<p>Analog acquisition working.</p>", "type": "rendered"}, "parents": [{"hash": "a4d604e2cf9b9e5a1a14a1fef7df15694e50f293", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/a4d604e2cf9b9e5a1a14a1fef7df15694e50f293.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/a4d604e2cf9b9e5a1a14a1fef7df15694e50f293"}}}], "date": "2018-10-05T20:08:32+00:00", "message": "Analog acquisition working.", "type": "commit"}, {"rendered": {"message": {"raw": "Added acquisition worker, untested.", "markup": "markdown", "html": "<p>Added acquisition worker, untested.</p>", "type": "rendered"}}, "hash": "a4d604e2cf9b9e5a1a14a1fef7df15694e50f293", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/a4d604e2cf9b9e5a1a14a1fef7df15694e50f293.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/a4d604e2cf9b9e5a1a14a1fef7df15694e50f293/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/a4d604e2cf9b9e5a1a14a1fef7df15694e50f293"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/a4d604e2cf9b9e5a1a14a1fef7df15694e50f293"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/a4d604e2cf9b9e5a1a14a1fef7df15694e50f293"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/a4d604e2cf9b9e5a1a14a1fef7df15694e50f293/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/a4d604e2cf9b9e5a1a14a1fef7df15694e50f293/statuses_page=1.json"}}, "author": {"raw": "Chris Billington", "type": "author"}, "summary": {"raw": "Added acquisition worker, untested.", "markup": "markdown", "html": "<p>Added acquisition worker, untested.</p>", "type": "rendered"}, "parents": [{"hash": "0a5853c0f140649cbbf625043c00e7661050ab53", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/0a5853c0f140649cbbf625043c00e7661050ab53.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/0a5853c0f140649cbbf625043c00e7661050ab53"}}}], "date": "2018-10-05T17:06:18+00:00", "message": "Added acquisition worker, untested.", "type": "commit"}, {"rendered": {"message": {"raw": "Rename worker to be more specific", "markup": "markdown", "html": "<p>Rename worker to be more specific</p>", "type": "rendered"}}, "hash": "0a5853c0f140649cbbf625043c00e7661050ab53", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/0a5853c0f140649cbbf625043c00e7661050ab53.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/0a5853c0f140649cbbf625043c00e7661050ab53/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/0a5853c0f140649cbbf625043c00e7661050ab53"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/0a5853c0f140649cbbf625043c00e7661050ab53"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/0a5853c0f140649cbbf625043c00e7661050ab53"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/0a5853c0f140649cbbf625043c00e7661050ab53/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/0a5853c0f140649cbbf625043c00e7661050ab53/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Rename worker to be more specific", "markup": "markdown", "html": "<p>Rename worker to be more specific</p>", "type": "rendered"}, "parents": [{"hash": "8b9a9ffb766cacec7a44ee7d4f318529c5573b6c", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/8b9a9ffb766cacec7a44ee7d4f318529c5573b6c.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/8b9a9ffb766cacec7a44ee7d4f318529c5573b6c"}}}], "date": "2018-10-05T15:42:02+00:00", "message": "Rename worker to be more specific", "type": "commit"}, {"rendered": {"message": {"raw": "Assumption about PFI numbering was incorrect.\nThere is no systematic way to work out how the PFIs correspond to\nports and lines. Give up on trying to do this.", "markup": "markdown", "html": "<p>Assumption about PFI numbering was incorrect.<br />\nThere is no systematic way to work out how the PFIs correspond to<br />\nports and lines. Give up on trying to do this.</p>", "type": "rendered"}}, "hash": "8b9a9ffb766cacec7a44ee7d4f318529c5573b6c", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/8b9a9ffb766cacec7a44ee7d4f318529c5573b6c.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/8b9a9ffb766cacec7a44ee7d4f318529c5573b6c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/8b9a9ffb766cacec7a44ee7d4f318529c5573b6c"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/8b9a9ffb766cacec7a44ee7d4f318529c5573b6c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/8b9a9ffb766cacec7a44ee7d4f318529c5573b6c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/8b9a9ffb766cacec7a44ee7d4f318529c5573b6c/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/8b9a9ffb766cacec7a44ee7d4f318529c5573b6c/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Assumption about PFI numbering was incorrect.\nThere is no systematic way to work out how the PFIs correspond to\nports and lines. Give up on trying to do this.", "markup": "markdown", "html": "<p>Assumption about PFI numbering was incorrect.<br />\nThere is no systematic way to work out how the PFIs correspond to<br />\nports and lines. Give up on trying to do this.</p>", "type": "rendered"}, "parents": [{"hash": "944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee"}}}], "date": "2018-10-05T15:32:57+00:00", "message": "Assumption about PFI numbering was incorrect.\nThere is no systematic way to work out how the PFIs correspond to\nports and lines. Give up on trying to do this.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixes for compilation with static outputs.\nFix in BLACs worker in manual mode for ports with non-multiple-of-8 number of lines.\nFix in BLACS worker for writing to static digital out task.", "markup": "markdown", "html": "<p>Fixes for compilation with static outputs.<br />\nFix in BLACs worker in manual mode for ports with non-multiple-of-8 number of lines.<br />\nFix in BLACS worker for writing to static digital out task.</p>", "type": "rendered"}}, "hash": "944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/944ca0f54629fa2a624dbb4c5a7b69b85ccfb2ee/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixes for compilation with static outputs.\nFix in BLACs worker in manual mode for ports with non-multiple-of-8 number of lines.\nFix in BLACS worker for writing to static digital out task.", "markup": "markdown", "html": "<p>Fixes for compilation with static outputs.<br />\nFix in BLACs worker in manual mode for ports with non-multiple-of-8 number of lines.<br />\nFix in BLACS worker for writing to static digital out task.</p>", "type": "rendered"}, "parents": [{"hash": "807f8cbbe4ca0e11db0c657c1e3d419584e67711", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/807f8cbbe4ca0e11db0c657c1e3d419584e67711.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/807f8cbbe4ca0e11db0c657c1e3d419584e67711"}}}], "date": "2018-10-04T21:08:12+00:00", "message": "Fixes for compilation with static outputs.\nFix in BLACs worker in manual mode for ports with non-multiple-of-8 number of lines.\nFix in BLACS worker for writing to static digital out task.", "type": "commit"}, {"rendered": {"message": {"raw": "Fig bugs in AO buffered output, and include WaitUntilTaskDone, which prevents\na race condition when the driver is not aware yet that the device has\nproduced all its samples even though it has. Log the sample position as INFO\nunconditionally.", "markup": "markdown", "html": "<p>Fig bugs in AO buffered output, and include WaitUntilTaskDone, which prevents<br />\na race condition when the driver is not aware yet that the device has<br />\nproduced all its samples even though it has. Log the sample position as INFO<br />\nunconditionally.</p>", "type": "rendered"}}, "hash": "807f8cbbe4ca0e11db0c657c1e3d419584e67711", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/807f8cbbe4ca0e11db0c657c1e3d419584e67711.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/807f8cbbe4ca0e11db0c657c1e3d419584e67711/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/807f8cbbe4ca0e11db0c657c1e3d419584e67711"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/807f8cbbe4ca0e11db0c657c1e3d419584e67711"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/807f8cbbe4ca0e11db0c657c1e3d419584e67711"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/807f8cbbe4ca0e11db0c657c1e3d419584e67711/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/807f8cbbe4ca0e11db0c657c1e3d419584e67711/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fig bugs in AO buffered output, and include WaitUntilTaskDone, which prevents\na race condition when the driver is not aware yet that the device has\nproduced all its samples even though it has. Log the sample position as INFO\nunconditionally.", "markup": "markdown", "html": "<p>Fig bugs in AO buffered output, and include WaitUntilTaskDone, which prevents<br />\na race condition when the driver is not aware yet that the device has<br />\nproduced all its samples even though it has. Log the sample position as INFO<br />\nunconditionally.</p>", "type": "rendered"}, "parents": [{"hash": "bb506553f550130d272ebd5cfbab5e8c2bf5d24d", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/bb506553f550130d272ebd5cfbab5e8c2bf5d24d.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/bb506553f550130d272ebd5cfbab5e8c2bf5d24d"}}}], "date": "2018-10-04T19:32:41+00:00", "message": "Fig bugs in AO buffered output, and include WaitUntilTaskDone, which prevents\na race condition when the driver is not aware yet that the device has\nproduced all its samples even though it has. Log the sample position as INFO\nunconditionally.", "type": "commit"}, {"rendered": {"message": {"raw": "Testing and fixing bugs to the point where a shot can run.\n\nRename workers.py -> blacs_workers.py", "markup": "markdown", "html": "<p>Testing and fixing bugs to the point where a shot can run.</p>\n<p>Rename workers.py -&gt; blacs_workers.py</p>", "type": "rendered"}}, "hash": "bb506553f550130d272ebd5cfbab5e8c2bf5d24d", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/bb506553f550130d272ebd5cfbab5e8c2bf5d24d.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/bb506553f550130d272ebd5cfbab5e8c2bf5d24d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/bb506553f550130d272ebd5cfbab5e8c2bf5d24d"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/bb506553f550130d272ebd5cfbab5e8c2bf5d24d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/bb506553f550130d272ebd5cfbab5e8c2bf5d24d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/bb506553f550130d272ebd5cfbab5e8c2bf5d24d/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/bb506553f550130d272ebd5cfbab5e8c2bf5d24d/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Testing and fixing bugs to the point where a shot can run.\n\nRename workers.py -> blacs_workers.py", "markup": "markdown", "html": "<p>Testing and fixing bugs to the point where a shot can run.</p>\n<p>Rename workers.py -&gt; blacs_workers.py</p>", "type": "rendered"}, "parents": [{"hash": "9009d8bab4efadd207edf0d30bc02fac92e885e9", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/9009d8bab4efadd207edf0d30bc02fac92e885e9.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/9009d8bab4efadd207edf0d30bc02fac92e885e9"}}}], "date": "2018-10-04T18:20:12+00:00", "message": "Testing and fixing bugs to the point where a shot can run.\n\nRename workers.py -> blacs_workers.py", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bug in getting AO range, fixed platform-dependent line endings in written\nfiles, fixed bug caused by black using multiprocessing to do its work -\nneeded to guard with if __name__ == '__main__' to prevent infinite recursion\non Windows.", "markup": "markdown", "html": "<p>Fixed bug in getting AO range, fixed platform-dependent line endings in written<br />\nfiles, fixed bug caused by black using multiprocessing to do its work -<br />\nneeded to guard with if <strong>name</strong> == '<strong>main</strong>' to prevent infinite recursion<br />\non Windows.</p>", "type": "rendered"}}, "hash": "9009d8bab4efadd207edf0d30bc02fac92e885e9", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/9009d8bab4efadd207edf0d30bc02fac92e885e9.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/9009d8bab4efadd207edf0d30bc02fac92e885e9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/9009d8bab4efadd207edf0d30bc02fac92e885e9"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/9009d8bab4efadd207edf0d30bc02fac92e885e9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/9009d8bab4efadd207edf0d30bc02fac92e885e9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/9009d8bab4efadd207edf0d30bc02fac92e885e9/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/9009d8bab4efadd207edf0d30bc02fac92e885e9/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed bug in getting AO range, fixed platform-dependent line endings in written\nfiles, fixed bug caused by black using multiprocessing to do its work -\nneeded to guard with if __name__ == '__main__' to prevent infinite recursion\non Windows.", "markup": "markdown", "html": "<p>Fixed bug in getting AO range, fixed platform-dependent line endings in written<br />\nfiles, fixed bug caused by black using multiprocessing to do its work -<br />\nneeded to guard with if <strong>name</strong> == '<strong>main</strong>' to prevent infinite recursion<br />\non Windows.</p>", "type": "rendered"}, "parents": [{"hash": "abcbb0c946f0984ed2dd6b63ab75271985615f18", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/abcbb0c946f0984ed2dd6b63ab75271985615f18.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/abcbb0c946f0984ed2dd6b63ab75271985615f18"}}}], "date": "2018-10-03T20:34:00+00:00", "message": "Fixed bug in getting AO range, fixed platform-dependent line endings in written\nfiles, fixed bug caused by black using multiprocessing to do its work -\nneeded to guard with if __name__ == '__main__' to prevent infinite recursion\non Windows.", "type": "commit"}, {"rendered": {"message": {"raw": "Testing and fixing bugs. BLACS can start. Moved utility functions into separate\nsubmodule for use by other submodules. Only save the largest AO_range rather\nthan all possible AO_ranges.", "markup": "markdown", "html": "<p>Testing and fixing bugs. BLACS can start. Moved utility functions into separate<br />\nsubmodule for use by other submodules. Only save the largest AO_range rather<br />\nthan all possible AO_ranges.</p>", "type": "rendered"}}, "hash": "abcbb0c946f0984ed2dd6b63ab75271985615f18", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/abcbb0c946f0984ed2dd6b63ab75271985615f18.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/abcbb0c946f0984ed2dd6b63ab75271985615f18/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/abcbb0c946f0984ed2dd6b63ab75271985615f18"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/abcbb0c946f0984ed2dd6b63ab75271985615f18"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/abcbb0c946f0984ed2dd6b63ab75271985615f18"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/abcbb0c946f0984ed2dd6b63ab75271985615f18/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/abcbb0c946f0984ed2dd6b63ab75271985615f18/statuses_page=1.json"}}, "author": {"raw": "Chris Billington", "type": "author"}, "summary": {"raw": "Testing and fixing bugs. BLACS can start. Moved utility functions into separate\nsubmodule for use by other submodules. Only save the largest AO_range rather\nthan all possible AO_ranges.", "markup": "markdown", "html": "<p>Testing and fixing bugs. BLACS can start. Moved utility functions into separate<br />\nsubmodule for use by other submodules. Only save the largest AO_range rather<br />\nthan all possible AO_ranges.</p>", "type": "rendered"}, "parents": [{"hash": "77187e7645f4e599d04982682e3ac6b58376a739", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/77187e7645f4e599d04982682e3ac6b58376a739.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/77187e7645f4e599d04982682e3ac6b58376a739"}}}], "date": "2018-10-03T18:07:47+00:00", "message": "Testing and fixing bugs. BLACS can start. Moved utility functions into separate\nsubmodule for use by other submodules. Only save the largest AO_range rather\nthan all possible AO_ranges.", "type": "commit"}, {"rendered": {"message": {"raw": "Add subfolder for (work-in-progress) NI_DAQmx devices, including generic base\nclass and auto-generated subclasses based on introspected device capabilities.", "markup": "markdown", "html": "<p>Add subfolder for (work-in-progress) NI_DAQmx devices, including generic base<br />\nclass and auto-generated subclasses based on introspected device capabilities.</p>", "type": "rendered"}}, "hash": "77187e7645f4e599d04982682e3ac6b58376a739", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/77187e7645f4e599d04982682e3ac6b58376a739.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/77187e7645f4e599d04982682e3ac6b58376a739/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/77187e7645f4e599d04982682e3ac6b58376a739"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/77187e7645f4e599d04982682e3ac6b58376a739"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/77187e7645f4e599d04982682e3ac6b58376a739"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/77187e7645f4e599d04982682e3ac6b58376a739/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/77187e7645f4e599d04982682e3ac6b58376a739/statuses_page=1.json"}}, "author": {"raw": "Chris Billington", "type": "author"}, "summary": {"raw": "Add subfolder for (work-in-progress) NI_DAQmx devices, including generic base\nclass and auto-generated subclasses based on introspected device capabilities.", "markup": "markdown", "html": "<p>Add subfolder for (work-in-progress) NI_DAQmx devices, including generic base<br />\nclass and auto-generated subclasses based on introspected device capabilities.</p>", "type": "rendered"}, "parents": [{"hash": "2f2fd7b5772c535b43ed06c47de6ba40e1a633bd", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/2f2fd7b5772c535b43ed06c47de6ba40e1a633bd.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/2f2fd7b5772c535b43ed06c47de6ba40e1a633bd"}}}], "date": "2018-10-03T14:58:26+00:00", "message": "Add subfolder for (work-in-progress) NI_DAQmx devices, including generic base\nclass and auto-generated subclasses based on introspected device capabilities.", "type": "commit"}, {"rendered": {"message": {"raw": "Fix incorrect deprecated import alias for dummy pseudoclock", "markup": "markdown", "html": "<p>Fix incorrect deprecated import alias for dummy pseudoclock</p>", "type": "rendered"}}, "hash": "a669226f0fbb82f2ec966581edd52bd23f1e8be1", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/a669226f0fbb82f2ec966581edd52bd23f1e8be1.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/a669226f0fbb82f2ec966581edd52bd23f1e8be1/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/a669226f0fbb82f2ec966581edd52bd23f1e8be1"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/a669226f0fbb82f2ec966581edd52bd23f1e8be1"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/a669226f0fbb82f2ec966581edd52bd23f1e8be1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/a669226f0fbb82f2ec966581edd52bd23f1e8be1/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/a669226f0fbb82f2ec966581edd52bd23f1e8be1/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Fix incorrect deprecated import alias for dummy pseudoclock", "markup": "markdown", "html": "<p>Fix incorrect deprecated import alias for dummy pseudoclock</p>", "type": "rendered"}, "parents": [{"hash": "66135a4f6547ac7c377d8eb3e00e200eceece7ae", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/66135a4f6547ac7c377d8eb3e00e200eceece7ae.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/66135a4f6547ac7c377d8eb3e00e200eceece7ae"}}}], "date": "2019-03-14T00:56:53+00:00", "message": "Fix incorrect deprecated import alias for dummy pseudoclock", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in pb_no_dds_bugfix (pull request #57)\n\nFix broken pb_no_dds class in pb_stop_programming/STOP mode", "markup": "markdown", "html": "<p>Merged in pb_no_dds_bugfix (pull request #57)</p>\n<p>Fix broken pb_no_dds class in pb_stop_programming/STOP mode</p>", "type": "rendered"}}, "hash": "66135a4f6547ac7c377d8eb3e00e200eceece7ae", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/66135a4f6547ac7c377d8eb3e00e200eceece7ae.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/66135a4f6547ac7c377d8eb3e00e200eceece7ae/comments_page=1.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/66135a4f6547ac7c377d8eb3e00e200eceece7ae"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/66135a4f6547ac7c377d8eb3e00e200eceece7ae"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/66135a4f6547ac7c377d8eb3e00e200eceece7ae/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/66135a4f6547ac7c377d8eb3e00e200eceece7ae/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in pb_no_dds_bugfix (pull request #57)\n\nFix broken pb_no_dds class in pb_stop_programming/STOP mode", "markup": "markdown", "html": "<p>Merged in pb_no_dds_bugfix (pull request #57)</p>\n<p>Fix broken pb_no_dds class in pb_stop_programming/STOP mode</p>", "type": "rendered"}, "parents": [{"hash": "0db03d1ac302a57aee5a2309a4d60b6626ee0da5", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/0db03d1ac302a57aee5a2309a4d60b6626ee0da5.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/0db03d1ac302a57aee5a2309a4d60b6626ee0da5"}}}, {"hash": "fb11cef9c5f42d8420fc8ec4e55b981c75993b56", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/fb11cef9c5f42d8420fc8ec4e55b981c75993b56.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/fb11cef9c5f42d8420fc8ec4e55b981c75993b56"}}}], "date": "2019-02-11T16:18:08+00:00", "message": "Merged in pb_no_dds_bugfix (pull request #57)\n\nFix broken pb_no_dds class in pb_stop_programming/STOP mode", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch pb_no_dds_bugfix", "markup": "markdown", "html": "<p>Close branch pb_no_dds_bugfix</p>", "type": "rendered"}}, "hash": "fb11cef9c5f42d8420fc8ec4e55b981c75993b56", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/fb11cef9c5f42d8420fc8ec4e55b981c75993b56.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/fb11cef9c5f42d8420fc8ec4e55b981c75993b56/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/fb11cef9c5f42d8420fc8ec4e55b981c75993b56"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/fb11cef9c5f42d8420fc8ec4e55b981c75993b56"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/fb11cef9c5f42d8420fc8ec4e55b981c75993b56"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/fb11cef9c5f42d8420fc8ec4e55b981c75993b56/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/fb11cef9c5f42d8420fc8ec4e55b981c75993b56/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch pb_no_dds_bugfix", "markup": "markdown", "html": "<p>Close branch pb_no_dds_bugfix</p>", "type": "rendered"}, "parents": [{"hash": "5b3f6e368d5a749c5eebecc12d3a5e58e5f4ca00", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/5b3f6e368d5a749c5eebecc12d3a5e58e5f4ca00.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/5b3f6e368d5a749c5eebecc12d3a5e58e5f4ca00"}}}], "date": "2019-02-11T16:18:08+00:00", "message": "Close branch pb_no_dds_bugfix", "type": "commit"}, {"rendered": {"message": {"raw": "Apply same fix to the the PulseBlaster class (the one with DDSs)", "markup": "markdown", "html": "<p>Apply same fix to the the PulseBlaster class (the one with DDSs)</p>", "type": "rendered"}}, "hash": "5b3f6e368d5a749c5eebecc12d3a5e58e5f4ca00", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/5b3f6e368d5a749c5eebecc12d3a5e58e5f4ca00.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/5b3f6e368d5a749c5eebecc12d3a5e58e5f4ca00/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/5b3f6e368d5a749c5eebecc12d3a5e58e5f4ca00"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/5b3f6e368d5a749c5eebecc12d3a5e58e5f4ca00"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/5b3f6e368d5a749c5eebecc12d3a5e58e5f4ca00"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/5b3f6e368d5a749c5eebecc12d3a5e58e5f4ca00/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/5b3f6e368d5a749c5eebecc12d3a5e58e5f4ca00/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Apply same fix to the the PulseBlaster class (the one with DDSs)", "markup": "markdown", "html": "<p>Apply same fix to the the PulseBlaster class (the one with DDSs)</p>", "type": "rendered"}, "parents": [{"hash": "e84bd5d28c54e6a269b7f88a70255c6889f14697", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/e84bd5d28c54e6a269b7f88a70255c6889f14697.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/e84bd5d28c54e6a269b7f88a70255c6889f14697"}}}], "date": "2018-12-03T15:20:20+00:00", "message": "Apply same fix to the the PulseBlaster class (the one with DDSs)", "type": "commit"}, {"rendered": {"message": {"raw": "Make first line of pulseblaster programming conditional on programming/starting\nscheme, otherwise the pulseblaster doesn't start in pb_stop_programming/STOP mode.", "markup": "markdown", "html": "<p>Make first line of pulseblaster programming conditional on programming/starting<br />\nscheme, otherwise the pulseblaster doesn't start in pb_stop_programming/STOP mode.</p>", "type": "rendered"}}, "hash": "e84bd5d28c54e6a269b7f88a70255c6889f14697", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/e84bd5d28c54e6a269b7f88a70255c6889f14697.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/e84bd5d28c54e6a269b7f88a70255c6889f14697/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/e84bd5d28c54e6a269b7f88a70255c6889f14697"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/e84bd5d28c54e6a269b7f88a70255c6889f14697"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/e84bd5d28c54e6a269b7f88a70255c6889f14697"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/e84bd5d28c54e6a269b7f88a70255c6889f14697/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/e84bd5d28c54e6a269b7f88a70255c6889f14697/statuses_page=1.json"}}, "author": {"raw": "RbChip", "type": "author"}, "summary": {"raw": "Make first line of pulseblaster programming conditional on programming/starting\nscheme, otherwise the pulseblaster doesn't start in pb_stop_programming/STOP mode.", "markup": "markdown", "html": "<p>Make first line of pulseblaster programming conditional on programming/starting<br />\nscheme, otherwise the pulseblaster doesn't start in pb_stop_programming/STOP mode.</p>", "type": "rendered"}, "parents": [{"hash": "2c27ac1e2bc0d62e44c632a91f8cbee339082c10", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/2c27ac1e2bc0d62e44c632a91f8cbee339082c10.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/2c27ac1e2bc0d62e44c632a91f8cbee339082c10"}}}], "date": "2018-09-07T15:42:42+00:00", "message": "Make first line of pulseblaster programming conditional on programming/starting\nscheme, otherwise the pulseblaster doesn't start in pb_stop_programming/STOP mode.", "type": "commit"}, {"rendered": {"message": {"raw": "Did not update references to dummy pseudoclock classes.\n(stray .pyc files prevented me from noticing this. Old .pyc files continue to\n cause issues like this when the package dir is also a mercurial repo.)", "markup": "markdown", "html": "<p>Did not update references to dummy pseudoclock classes.<br />\n(stray .pyc files prevented me from noticing this. Old .pyc files continue to<br />\n cause issues like this when the package dir is also a mercurial repo.)</p>", "type": "rendered"}}, "hash": "0db03d1ac302a57aee5a2309a4d60b6626ee0da5", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/0db03d1ac302a57aee5a2309a4d60b6626ee0da5.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/0db03d1ac302a57aee5a2309a4d60b6626ee0da5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/0db03d1ac302a57aee5a2309a4d60b6626ee0da5"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/0db03d1ac302a57aee5a2309a4d60b6626ee0da5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/0db03d1ac302a57aee5a2309a4d60b6626ee0da5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/0db03d1ac302a57aee5a2309a4d60b6626ee0da5/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/0db03d1ac302a57aee5a2309a4d60b6626ee0da5/statuses_page=1.json"}}, "author": {"raw": "Chris Billington", "type": "author"}, "summary": {"raw": "Did not update references to dummy pseudoclock classes.\n(stray .pyc files prevented me from noticing this. Old .pyc files continue to\n cause issues like this when the package dir is also a mercurial repo.)", "markup": "markdown", "html": "<p>Did not update references to dummy pseudoclock classes.<br />\n(stray .pyc files prevented me from noticing this. Old .pyc files continue to<br />\n cause issues like this when the package dir is also a mercurial repo.)</p>", "type": "rendered"}, "parents": [{"hash": "8e33a9d5153269f8fe644837efe4f16b0e317e39", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/8e33a9d5153269f8fe644837efe4f16b0e317e39.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/8e33a9d5153269f8fe644837efe4f16b0e317e39"}}}], "date": "2019-02-05T16:57:54+00:00", "message": "Did not update references to dummy pseudoclock classes.\n(stray .pyc files prevented me from noticing this. Old .pyc files continue to\n cause issues like this when the package dir is also a mercurial repo.)", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in cbillington/labscript_devices/dummy_pseudoclock (pull request #59)\n\nDummy Pseudoclock more functionality, rename submodules", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/labscript_devices</a>/dummy_pseudoclock (pull request #59)</p>\n<p>Dummy Pseudoclock more functionality, rename submodules</p>", "type": "rendered"}}, "hash": "8e33a9d5153269f8fe644837efe4f16b0e317e39", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/8e33a9d5153269f8fe644837efe4f16b0e317e39.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/8e33a9d5153269f8fe644837efe4f16b0e317e39/comments_page=1.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/8e33a9d5153269f8fe644837efe4f16b0e317e39"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/8e33a9d5153269f8fe644837efe4f16b0e317e39"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/8e33a9d5153269f8fe644837efe4f16b0e317e39/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/8e33a9d5153269f8fe644837efe4f16b0e317e39/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in cbillington/labscript_devices/dummy_pseudoclock (pull request #59)\n\nDummy Pseudoclock more functionality, rename submodules", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/labscript_devices</a>/dummy_pseudoclock (pull request #59)</p>\n<p>Dummy Pseudoclock more functionality, rename submodules</p>", "type": "rendered"}, "parents": [{"hash": "7c6e4619bbc7962b963986a3247e076f10aca81f", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/7c6e4619bbc7962b963986a3247e076f10aca81f.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/7c6e4619bbc7962b963986a3247e076f10aca81f"}}}, {"hash": "e82ad1ea34c20b71510ee83ddda9615f0b5c7704", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/e82ad1ea34c20b71510ee83ddda9615f0b5c7704.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/e82ad1ea34c20b71510ee83ddda9615f0b5c7704"}}}], "date": "2019-02-04T18:29:39+00:00", "message": "Merged in cbillington/labscript_devices/dummy_pseudoclock (pull request #59)\n\nDummy Pseudoclock more functionality, rename submodules", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch dummy_pseudoclock", "markup": "markdown", "html": "<p>Close branch dummy_pseudoclock</p>", "type": "rendered"}}, "hash": "e82ad1ea34c20b71510ee83ddda9615f0b5c7704", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/e82ad1ea34c20b71510ee83ddda9615f0b5c7704.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/e82ad1ea34c20b71510ee83ddda9615f0b5c7704/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/e82ad1ea34c20b71510ee83ddda9615f0b5c7704"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/e82ad1ea34c20b71510ee83ddda9615f0b5c7704"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/e82ad1ea34c20b71510ee83ddda9615f0b5c7704"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/e82ad1ea34c20b71510ee83ddda9615f0b5c7704/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/e82ad1ea34c20b71510ee83ddda9615f0b5c7704/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch dummy_pseudoclock", "markup": "markdown", "html": "<p>Close branch dummy_pseudoclock</p>", "type": "rendered"}, "parents": [{"hash": "add445e7e61c13dac62101de151fec70aacf053b", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/add445e7e61c13dac62101de151fec70aacf053b.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/add445e7e61c13dac62101de151fec70aacf053b"}}}], "date": "2019-02-04T18:29:39+00:00", "message": "Close branch dummy_pseudoclock", "type": "commit"}, {"rendered": {"message": {"raw": "Rename submodules of dummy pseudoclock to all be plural.\nThis is a better precedent for devices to use, as all submodules can follow\nthe same naming convention and not have to rename from singular to plural\nif they grow an extra class.", "markup": "markdown", "html": "<p>Rename submodules of dummy pseudoclock to all be plural.<br />\nThis is a better precedent for devices to use, as all submodules can follow<br />\nthe same naming convention and not have to rename from singular to plural<br />\nif they grow an extra class.</p>", "type": "rendered"}}, "hash": "add445e7e61c13dac62101de151fec70aacf053b", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/add445e7e61c13dac62101de151fec70aacf053b.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/add445e7e61c13dac62101de151fec70aacf053b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/add445e7e61c13dac62101de151fec70aacf053b"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/add445e7e61c13dac62101de151fec70aacf053b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/add445e7e61c13dac62101de151fec70aacf053b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/add445e7e61c13dac62101de151fec70aacf053b/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/add445e7e61c13dac62101de151fec70aacf053b/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Rename submodules of dummy pseudoclock to all be plural.\nThis is a better precedent for devices to use, as all submodules can follow\nthe same naming convention and not have to rename from singular to plural\nif they grow an extra class.", "markup": "markdown", "html": "<p>Rename submodules of dummy pseudoclock to all be plural.<br />\nThis is a better precedent for devices to use, as all submodules can follow<br />\nthe same naming convention and not have to rename from singular to plural<br />\nif they grow an extra class.</p>", "type": "rendered"}, "parents": [{"hash": "0bb51c98ba5ad0a171cc6c5849e3f982bd460e33", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/0bb51c98ba5ad0a171cc6c5849e3f982bd460e33.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/0bb51c98ba5ad0a171cc6c5849e3f982bd460e33"}}}], "date": "2019-01-28T21:55:44+00:00", "message": "Rename submodules of dummy pseudoclock to all be plural.\nThis is a better precedent for devices to use, as all submodules can follow\nthe same naming convention and not have to rename from singular to plural\nif they grow an extra class.", "type": "commit"}, {"rendered": {"message": {"raw": "Have DummyPseudoclock call PseudoclockDevice.generate_code(), and implement abort()", "markup": "markdown", "html": "<p>Have DummyPseudoclock call PseudoclockDevice.generate_code(), and implement abort()</p>", "type": "rendered"}}, "hash": "0bb51c98ba5ad0a171cc6c5849e3f982bd460e33", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/0bb51c98ba5ad0a171cc6c5849e3f982bd460e33.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/0bb51c98ba5ad0a171cc6c5849e3f982bd460e33/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/0bb51c98ba5ad0a171cc6c5849e3f982bd460e33"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/0bb51c98ba5ad0a171cc6c5849e3f982bd460e33"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/0bb51c98ba5ad0a171cc6c5849e3f982bd460e33"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/0bb51c98ba5ad0a171cc6c5849e3f982bd460e33/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/0bb51c98ba5ad0a171cc6c5849e3f982bd460e33/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Have DummyPseudoclock call PseudoclockDevice.generate_code(), and implement abort()", "markup": "markdown", "html": "<p>Have DummyPseudoclock call PseudoclockDevice.generate_code(), and implement abort()</p>", "type": "rendered"}, "parents": [{"hash": "84a903a2a405ffb7c1de4bdd61e2a6f82e5a5370", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/84a903a2a405ffb7c1de4bdd61e2a6f82e5a5370.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/84a903a2a405ffb7c1de4bdd61e2a6f82e5a5370"}}}], "date": "2019-01-25T23:42:29+00:00", "message": "Have DummyPseudoclock call PseudoclockDevice.generate_code(), and implement abort()", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in quantum_gas_microscope/labscript_devices/PulseBlasterESRPro200 (pull request #60)\n\nPulseBlasterESRPro200", "markup": "markdown", "html": "<p>Merged in <a href=\"https://bitbucket.org/quantum_gas_microscope/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">quantum_gas_microscope/labscript_devices</a>/PulseBlasterESRPro200 (pull request #60)</p>\n<p>PulseBlasterESRPro200</p>", "type": "rendered"}}, "hash": "7c6e4619bbc7962b963986a3247e076f10aca81f", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/7c6e4619bbc7962b963986a3247e076f10aca81f.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/7c6e4619bbc7962b963986a3247e076f10aca81f/comments_page=1.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/7c6e4619bbc7962b963986a3247e076f10aca81f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/7c6e4619bbc7962b963986a3247e076f10aca81f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/7c6e4619bbc7962b963986a3247e076f10aca81f/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/7c6e4619bbc7962b963986a3247e076f10aca81f/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in quantum_gas_microscope/labscript_devices/PulseBlasterESRPro200 (pull request #60)\n\nPulseBlasterESRPro200", "markup": "markdown", "html": "<p>Merged in <a href=\"https://bitbucket.org/quantum_gas_microscope/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">quantum_gas_microscope/labscript_devices</a>/PulseBlasterESRPro200 (pull request #60)</p>\n<p>PulseBlasterESRPro200</p>", "type": "rendered"}, "parents": [{"hash": "b2aecf92d62079c0b3e054094503f4f44f2dcdb8", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/b2aecf92d62079c0b3e054094503f4f44f2dcdb8.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/b2aecf92d62079c0b3e054094503f4f44f2dcdb8"}}}, {"hash": "b13549127c698b7d6c58a4d940b69cf4e60bbb72", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/b13549127c698b7d6c58a4d940b69cf4e60bbb72.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/b13549127c698b7d6c58a4d940b69cf4e60bbb72"}}}], "date": "2019-01-31T02:51:54+00:00", "message": "Merged in quantum_gas_microscope/labscript_devices/PulseBlasterESRPro200 (pull request #60)\n\nPulseBlasterESRPro200", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch PulseBlasterESRPro200", "markup": "markdown", "html": "<p>Close branch PulseBlasterESRPro200</p>", "type": "rendered"}}, "hash": "b13549127c698b7d6c58a4d940b69cf4e60bbb72", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/b13549127c698b7d6c58a4d940b69cf4e60bbb72.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/b13549127c698b7d6c58a4d940b69cf4e60bbb72/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/b13549127c698b7d6c58a4d940b69cf4e60bbb72"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/b13549127c698b7d6c58a4d940b69cf4e60bbb72"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/b13549127c698b7d6c58a4d940b69cf4e60bbb72"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/b13549127c698b7d6c58a4d940b69cf4e60bbb72/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/b13549127c698b7d6c58a4d940b69cf4e60bbb72/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch PulseBlasterESRPro200", "markup": "markdown", "html": "<p>Close branch PulseBlasterESRPro200</p>", "type": "rendered"}, "parents": [{"hash": "091537ed607f09756ca18fa0fdc8d300ce870cbb", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/091537ed607f09756ca18fa0fdc8d300ce870cbb.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/091537ed607f09756ca18fa0fdc8d300ce870cbb"}}}], "date": "2019-01-31T02:51:54+00:00", "message": "Close branch PulseBlasterESRPro200", "type": "commit"}, {"rendered": {"message": {"raw": "Omitted @labscript_device and @BLACS_worker decorators following deprecation of\nthese in arbitrary_subfolders PR (labscript_devices 2.2.0).", "markup": "markdown", "html": "<p>Omitted @labscript_device and @BLACS_worker decorators following deprecation of<br />\nthese in arbitrary_subfolders PR (labscript_devices 2.2.0).</p>", "type": "rendered"}}, "hash": "091537ed607f09756ca18fa0fdc8d300ce870cbb", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/091537ed607f09756ca18fa0fdc8d300ce870cbb.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/091537ed607f09756ca18fa0fdc8d300ce870cbb/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/091537ed607f09756ca18fa0fdc8d300ce870cbb"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/091537ed607f09756ca18fa0fdc8d300ce870cbb"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/091537ed607f09756ca18fa0fdc8d300ce870cbb"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/091537ed607f09756ca18fa0fdc8d300ce870cbb/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/091537ed607f09756ca18fa0fdc8d300ce870cbb/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "Omitted @labscript_device and @BLACS_worker decorators following deprecation of\nthese in arbitrary_subfolders PR (labscript_devices 2.2.0).", "markup": "markdown", "html": "<p>Omitted @labscript_device and @BLACS_worker decorators following deprecation of<br />\nthese in arbitrary_subfolders PR (labscript_devices 2.2.0).</p>", "type": "rendered"}, "parents": [{"hash": "962f8ae40dd656aa064b8670812ca03120d49441", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/962f8ae40dd656aa064b8670812ca03120d49441.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/962f8ae40dd656aa064b8670812ca03120d49441"}}}], "date": "2018-11-27T06:32:22+00:00", "message": "Omitted @labscript_device and @BLACS_worker decorators following deprecation of\nthese in arbitrary_subfolders PR (labscript_devices 2.2.0).", "type": "commit"}, {"rendered": {"message": {"raw": "Adding runviewer parser to PulseBlasterESRPro200.", "markup": "markdown", "html": "<p>Adding runviewer parser to PulseBlasterESRPro200.</p>", "type": "rendered"}}, "hash": "962f8ae40dd656aa064b8670812ca03120d49441", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/962f8ae40dd656aa064b8670812ca03120d49441.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/962f8ae40dd656aa064b8670812ca03120d49441/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/962f8ae40dd656aa064b8670812ca03120d49441"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/962f8ae40dd656aa064b8670812ca03120d49441"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/962f8ae40dd656aa064b8670812ca03120d49441"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/962f8ae40dd656aa064b8670812ca03120d49441/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/962f8ae40dd656aa064b8670812ca03120d49441/statuses_page=1.json"}}, "author": {"raw": "iherrera", "type": "author"}, "summary": {"raw": "Adding runviewer parser to PulseBlasterESRPro200.", "markup": "markdown", "html": "<p>Adding runviewer parser to PulseBlasterESRPro200.</p>", "type": "rendered"}, "parents": [{"hash": "9ea0575a390371f11f2878a91c59811794ff7775", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/9ea0575a390371f11f2878a91c59811794ff7775.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/9ea0575a390371f11f2878a91c59811794ff7775"}}}], "date": "2018-11-23T03:12:17+00:00", "message": "Adding runviewer parser to PulseBlasterESRPro200.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed typo in device_worker_class name.", "markup": "markdown", "html": "<p>Fixed typo in device_worker_class name.</p>", "type": "rendered"}}, "hash": "9ea0575a390371f11f2878a91c59811794ff7775", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/9ea0575a390371f11f2878a91c59811794ff7775.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/9ea0575a390371f11f2878a91c59811794ff7775/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/9ea0575a390371f11f2878a91c59811794ff7775"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/9ea0575a390371f11f2878a91c59811794ff7775"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/9ea0575a390371f11f2878a91c59811794ff7775"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/9ea0575a390371f11f2878a91c59811794ff7775/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/9ea0575a390371f11f2878a91c59811794ff7775/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author"}, "summary": {"raw": "Fixed typo in device_worker_class name.", "markup": "markdown", "html": "<p>Fixed typo in device_worker_class name.</p>", "type": "rendered"}, "parents": [{"hash": "8370abf68535b83b7aefeb11ae62eb55c16976ad", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/8370abf68535b83b7aefeb11ae62eb55c16976ad.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/8370abf68535b83b7aefeb11ae62eb55c16976ad"}}}], "date": "2018-10-26T06:11:51+00:00", "message": "Fixed typo in device_worker_class name.", "type": "commit"}, {"rendered": {"message": {"raw": "Adding PulseBlasterESRPro200 class, much like the PulseBlasterESRPro500 but with\na different core_clock_freq, clock_resolution, and clock_limit.", "markup": "markdown", "html": "<p>Adding PulseBlasterESRPro200 class, much like the PulseBlasterESRPro500 but with<br />\na different core_clock_freq, clock_resolution, and clock_limit.</p>", "type": "rendered"}}, "hash": "8370abf68535b83b7aefeb11ae62eb55c16976ad", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/8370abf68535b83b7aefeb11ae62eb55c16976ad.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/8370abf68535b83b7aefeb11ae62eb55c16976ad/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/8370abf68535b83b7aefeb11ae62eb55c16976ad"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/8370abf68535b83b7aefeb11ae62eb55c16976ad"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/8370abf68535b83b7aefeb11ae62eb55c16976ad"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/8370abf68535b83b7aefeb11ae62eb55c16976ad/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/8370abf68535b83b7aefeb11ae62eb55c16976ad/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author"}, "summary": {"raw": "Adding PulseBlasterESRPro200 class, much like the PulseBlasterESRPro500 but with\na different core_clock_freq, clock_resolution, and clock_limit.", "markup": "markdown", "html": "<p>Adding PulseBlasterESRPro200 class, much like the PulseBlasterESRPro500 but with<br />\na different core_clock_freq, clock_resolution, and clock_limit.</p>", "type": "rendered"}, "parents": [{"hash": "b9f00729469404115e278633881bbd8a33411ed4", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/b9f00729469404115e278633881bbd8a33411ed4.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/b9f00729469404115e278633881bbd8a33411ed4"}}}], "date": "2018-09-21T03:39:58+00:00", "message": "Adding PulseBlasterESRPro200 class, much like the PulseBlasterESRPro500 but with\na different core_clock_freq, clock_resolution, and clock_limit.", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in cbillington/labscript_devices/Python3_PineBlaster (pull request #37)\n\nPython3 PineBlaster", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/labscript_devices</a>/Python3_PineBlaster (pull request #37)</p>\n<p>Python3 PineBlaster</p>", "type": "rendered"}}, "hash": "b2aecf92d62079c0b3e054094503f4f44f2dcdb8", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/b2aecf92d62079c0b3e054094503f4f44f2dcdb8.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/b2aecf92d62079c0b3e054094503f4f44f2dcdb8/comments_page=1.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/b2aecf92d62079c0b3e054094503f4f44f2dcdb8"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/b2aecf92d62079c0b3e054094503f4f44f2dcdb8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/b2aecf92d62079c0b3e054094503f4f44f2dcdb8/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/b2aecf92d62079c0b3e054094503f4f44f2dcdb8/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in cbillington/labscript_devices/Python3_PineBlaster (pull request #37)\n\nPython3 PineBlaster", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/labscript_devices</a>/Python3_PineBlaster (pull request #37)</p>\n<p>Python3 PineBlaster</p>", "type": "rendered"}, "parents": [{"hash": "84a903a2a405ffb7c1de4bdd61e2a6f82e5a5370", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/84a903a2a405ffb7c1de4bdd61e2a6f82e5a5370.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/84a903a2a405ffb7c1de4bdd61e2a6f82e5a5370"}}}, {"hash": "b6bcb4e22f7bd429fec926d249ee74a93fe16630", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/b6bcb4e22f7bd429fec926d249ee74a93fe16630.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/b6bcb4e22f7bd429fec926d249ee74a93fe16630"}}}], "date": "2019-01-28T21:19:53+00:00", "message": "Merged in cbillington/labscript_devices/Python3_PineBlaster (pull request #37)\n\nPython3 PineBlaster", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch Python3_PineBlaster", "markup": "markdown", "html": "<p>Close branch Python3_PineBlaster</p>", "type": "rendered"}}, "hash": "b6bcb4e22f7bd429fec926d249ee74a93fe16630", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/b6bcb4e22f7bd429fec926d249ee74a93fe16630.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/b6bcb4e22f7bd429fec926d249ee74a93fe16630/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/b6bcb4e22f7bd429fec926d249ee74a93fe16630"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/b6bcb4e22f7bd429fec926d249ee74a93fe16630"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/b6bcb4e22f7bd429fec926d249ee74a93fe16630"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/b6bcb4e22f7bd429fec926d249ee74a93fe16630/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/b6bcb4e22f7bd429fec926d249ee74a93fe16630/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch Python3_PineBlaster", "markup": "markdown", "html": "<p>Close branch Python3_PineBlaster</p>", "type": "rendered"}, "parents": [{"hash": "1ded285c1eb6986ad3b2d53e00e43c6a791c65a5", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/1ded285c1eb6986ad3b2d53e00e43c6a791c65a5.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/1ded285c1eb6986ad3b2d53e00e43c6a791c65a5"}}}], "date": "2019-01-28T21:19:53+00:00", "message": "Close branch Python3_PineBlaster", "type": "commit"}, {"rendered": {"message": {"raw": "Encode and decode all serial communication appropriately.\nRemove no-longer-needed numpy dtype workaround.", "markup": "markdown", "html": "<p>Encode and decode all serial communication appropriately.<br />\nRemove no-longer-needed numpy dtype workaround.</p>", "type": "rendered"}}, "hash": "1ded285c1eb6986ad3b2d53e00e43c6a791c65a5", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/1ded285c1eb6986ad3b2d53e00e43c6a791c65a5.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/1ded285c1eb6986ad3b2d53e00e43c6a791c65a5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/1ded285c1eb6986ad3b2d53e00e43c6a791c65a5"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/1ded285c1eb6986ad3b2d53e00e43c6a791c65a5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/1ded285c1eb6986ad3b2d53e00e43c6a791c65a5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/1ded285c1eb6986ad3b2d53e00e43c6a791c65a5/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/1ded285c1eb6986ad3b2d53e00e43c6a791c65a5/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Encode and decode all serial communication appropriately.\nRemove no-longer-needed numpy dtype workaround.", "markup": "markdown", "html": "<p>Encode and decode all serial communication appropriately.<br />\nRemove no-longer-needed numpy dtype workaround.</p>", "type": "rendered"}, "parents": [{"hash": "0c678f518fd6c29a30b58c5fa0a6bc1b0d5ea34a", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/0c678f518fd6c29a30b58c5fa0a6bc1b0d5ea34a.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/0c678f518fd6c29a30b58c5fa0a6bc1b0d5ea34a"}}}], "date": "2019-01-25T20:11:30+00:00", "message": "Encode and decode all serial communication appropriately.\nRemove no-longer-needed numpy dtype workaround.", "type": "commit"}, {"rendered": {"message": {"raw": "Lots of Python 3  Changes", "markup": "markdown", "html": "<p>Lots of Python 3  Changes</p>", "type": "rendered"}}, "hash": "0c678f518fd6c29a30b58c5fa0a6bc1b0d5ea34a", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/0c678f518fd6c29a30b58c5fa0a6bc1b0d5ea34a.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/0c678f518fd6c29a30b58c5fa0a6bc1b0d5ea34a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/0c678f518fd6c29a30b58c5fa0a6bc1b0d5ea34a"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/0c678f518fd6c29a30b58c5fa0a6bc1b0d5ea34a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/0c678f518fd6c29a30b58c5fa0a6bc1b0d5ea34a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/0c678f518fd6c29a30b58c5fa0a6bc1b0d5ea34a/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/0c678f518fd6c29a30b58c5fa0a6bc1b0d5ea34a/statuses_page=1.json"}}, "author": {"raw": "Jan Werkmann <jan.wrk.fb@gmail.com>", "type": "author", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}}, "summary": {"raw": "Lots of Python 3  Changes", "markup": "markdown", "html": "<p>Lots of Python 3  Changes</p>", "type": "rendered"}, "parents": [{"hash": "3ae7157e35b42cd7bf661e21deaee184b7c3667b", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/3ae7157e35b42cd7bf661e21deaee184b7c3667b.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/3ae7157e35b42cd7bf661e21deaee184b7c3667b"}}}], "date": "2018-03-01T13:59:00+00:00", "message": "Lots of Python 3  Changes", "type": "commit"}, {"rendered": {"message": {"raw": "Made use of new dtype workaround", "markup": "markdown", "html": "<p>Made use of new dtype workaround</p>", "type": "rendered"}}, "hash": "3ae7157e35b42cd7bf661e21deaee184b7c3667b", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/3ae7157e35b42cd7bf661e21deaee184b7c3667b.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/3ae7157e35b42cd7bf661e21deaee184b7c3667b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/3ae7157e35b42cd7bf661e21deaee184b7c3667b"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/3ae7157e35b42cd7bf661e21deaee184b7c3667b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/3ae7157e35b42cd7bf661e21deaee184b7c3667b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/3ae7157e35b42cd7bf661e21deaee184b7c3667b/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/3ae7157e35b42cd7bf661e21deaee184b7c3667b/statuses_page=1.json"}}, "author": {"raw": "Jan Werkmann <jan.wrk.fb@gmail.com>", "type": "author", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}}, "summary": {"raw": "Made use of new dtype workaround", "markup": "markdown", "html": "<p>Made use of new dtype workaround</p>", "type": "rendered"}, "parents": [{"hash": "3aa7f952d9339fa0de8a68e68851812147e8c03b", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/3aa7f952d9339fa0de8a68e68851812147e8c03b.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/3aa7f952d9339fa0de8a68e68851812147e8c03b"}}}], "date": "2018-03-01T13:27:00+00:00", "message": "Made use of new dtype workaround", "type": "commit"}, {"rendered": {"message": {"raw": "Python3 compatibility changes", "markup": "markdown", "html": "<p>Python3 compatibility changes</p>", "type": "rendered"}}, "hash": "3aa7f952d9339fa0de8a68e68851812147e8c03b", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/3aa7f952d9339fa0de8a68e68851812147e8c03b.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/3aa7f952d9339fa0de8a68e68851812147e8c03b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/3aa7f952d9339fa0de8a68e68851812147e8c03b"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/3aa7f952d9339fa0de8a68e68851812147e8c03b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/3aa7f952d9339fa0de8a68e68851812147e8c03b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/3aa7f952d9339fa0de8a68e68851812147e8c03b/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/3aa7f952d9339fa0de8a68e68851812147e8c03b/statuses_page=1.json"}}, "author": {"raw": "PhyNerd <janwerkmann@gmail.com>", "type": "author"}, "summary": {"raw": "Python3 compatibility changes", "markup": "markdown", "html": "<p>Python3 compatibility changes</p>", "type": "rendered"}, "parents": [{"hash": "d80f15ae95ceae728dbeb74748300c0132d5b554", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/d80f15ae95ceae728dbeb74748300c0132d5b554.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/d80f15ae95ceae728dbeb74748300c0132d5b554"}}}], "date": "2017-10-19T13:25:00+00:00", "message": "Python3 compatibility changes", "type": "commit"}, {"rendered": {"message": {"raw": "Future imports in all files, print ->print(), exec -> exec()", "markup": "markdown", "html": "<p>Future imports in all files, print -&gt;print(), exec -&gt; exec()</p>", "type": "rendered"}}, "hash": "d80f15ae95ceae728dbeb74748300c0132d5b554", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/d80f15ae95ceae728dbeb74748300c0132d5b554.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/d80f15ae95ceae728dbeb74748300c0132d5b554/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/d80f15ae95ceae728dbeb74748300c0132d5b554"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/d80f15ae95ceae728dbeb74748300c0132d5b554"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/d80f15ae95ceae728dbeb74748300c0132d5b554"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/d80f15ae95ceae728dbeb74748300c0132d5b554/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/d80f15ae95ceae728dbeb74748300c0132d5b554/statuses_page=1.json"}}, "author": {"raw": "PhyNerd <janwerkmann@gmail.com>", "type": "author"}, "summary": {"raw": "Future imports in all files, print ->print(), exec -> exec()", "markup": "markdown", "html": "<p>Future imports in all files, print -&gt;print(), exec -&gt; exec()</p>", "type": "rendered"}, "parents": [{"hash": "08a01ab4874a3d2a2b7586019ab4daabf340e6ee", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/08a01ab4874a3d2a2b7586019ab4daabf340e6ee.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/08a01ab4874a3d2a2b7586019ab4daabf340e6ee"}}}], "date": "2017-08-20T14:51:00+00:00", "message": "Future imports in all files, print ->print(), exec -> exec()", "type": "commit"}, {"rendered": {"message": {"raw": "Added tag 2.3.0 for changeset 591d87b520b1", "markup": "markdown", "html": "<p>Added tag 2.3.0 for changeset <a href=\"#!/dsbarker/labscript_devices/commits/591d87b520b1\" rel=\"nofollow\" class=\"ap-connect-link\">591d87b520b1</a></p>", "type": "rendered"}}, "hash": "84a903a2a405ffb7c1de4bdd61e2a6f82e5a5370", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/84a903a2a405ffb7c1de4bdd61e2a6f82e5a5370.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/84a903a2a405ffb7c1de4bdd61e2a6f82e5a5370/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/84a903a2a405ffb7c1de4bdd61e2a6f82e5a5370"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/84a903a2a405ffb7c1de4bdd61e2a6f82e5a5370"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/84a903a2a405ffb7c1de4bdd61e2a6f82e5a5370"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/84a903a2a405ffb7c1de4bdd61e2a6f82e5a5370/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/84a903a2a405ffb7c1de4bdd61e2a6f82e5a5370/statuses_page=1.json"}}, "author": {"raw": "Philip Starkey <threepineapples@gmail.com>", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added tag 2.3.0 for changeset 591d87b520b1", "markup": "markdown", "html": "<p>Added tag 2.3.0 for changeset <a href=\"#!/dsbarker/labscript_devices/commits/591d87b520b1\" rel=\"nofollow\" class=\"ap-connect-link\">591d87b520b1</a></p>", "type": "rendered"}, "parents": [{"hash": "591d87b520b14585cd52b1007fc54133e27e5cce", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/591d87b520b14585cd52b1007fc54133e27e5cce.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/591d87b520b14585cd52b1007fc54133e27e5cce"}}}], "date": "2019-01-16T00:35:33+00:00", "message": "Added tag 2.3.0 for changeset 591d87b520b1", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in pstarkey/updated-labscript-version-requirement-an-1547596478971 (pull request #58)\n\nUpdated labscript version requirement and bumped `__version__` for release", "markup": "markdown", "html": "<p>Merged in pstarkey/updated-labscript-version-requirement-an-1547596478971 (pull request #58)</p>\n<p>Updated labscript version requirement and bumped <code>__version__</code> for release</p>", "type": "rendered"}}, "hash": "591d87b520b14585cd52b1007fc54133e27e5cce", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/591d87b520b14585cd52b1007fc54133e27e5cce.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/591d87b520b14585cd52b1007fc54133e27e5cce/comments_page=1.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/591d87b520b14585cd52b1007fc54133e27e5cce"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/591d87b520b14585cd52b1007fc54133e27e5cce"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/591d87b520b14585cd52b1007fc54133e27e5cce/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/591d87b520b14585cd52b1007fc54133e27e5cce/statuses_page=1.json"}}, "author": {"raw": "Philip Starkey <threepineapples@gmail.com>", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Merged in pstarkey/updated-labscript-version-requirement-an-1547596478971 (pull request #58)\n\nUpdated labscript version requirement and bumped `__version__` for release", "markup": "markdown", "html": "<p>Merged in pstarkey/updated-labscript-version-requirement-an-1547596478971 (pull request #58)</p>\n<p>Updated labscript version requirement and bumped <code>__version__</code> for release</p>", "type": "rendered"}, "parents": [{"hash": "e525ad379b1d26e0354d4031f7b128239334e43b", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/e525ad379b1d26e0354d4031f7b128239334e43b.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/e525ad379b1d26e0354d4031f7b128239334e43b"}}}, {"hash": "cbabbf4a3eb2df4ffe9fc0e7a60337c1b2ade495", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/cbabbf4a3eb2df4ffe9fc0e7a60337c1b2ade495.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/cbabbf4a3eb2df4ffe9fc0e7a60337c1b2ade495"}}}], "date": "2019-01-16T00:33:49+00:00", "message": "Merged in pstarkey/updated-labscript-version-requirement-an-1547596478971 (pull request #58)\n\nUpdated labscript version requirement and bumped `__version__` for release", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch pstarkey/updated-labscript-version-requirement-an-1547596478971", "markup": "markdown", "html": "<p>Close branch pstarkey/updated-labscript-version-requirement-an-1547596478971</p>", "type": "rendered"}}, "hash": "cbabbf4a3eb2df4ffe9fc0e7a60337c1b2ade495", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/cbabbf4a3eb2df4ffe9fc0e7a60337c1b2ade495.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/cbabbf4a3eb2df4ffe9fc0e7a60337c1b2ade495/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/cbabbf4a3eb2df4ffe9fc0e7a60337c1b2ade495"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/cbabbf4a3eb2df4ffe9fc0e7a60337c1b2ade495"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/cbabbf4a3eb2df4ffe9fc0e7a60337c1b2ade495"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/cbabbf4a3eb2df4ffe9fc0e7a60337c1b2ade495/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/cbabbf4a3eb2df4ffe9fc0e7a60337c1b2ade495/statuses_page=1.json"}}, "author": {"raw": "Philip Starkey <threepineapples@gmail.com>", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Close branch pstarkey/updated-labscript-version-requirement-an-1547596478971", "markup": "markdown", "html": "<p>Close branch pstarkey/updated-labscript-version-requirement-an-1547596478971</p>", "type": "rendered"}, "parents": [{"hash": "14bce634620beb025a6ab90ca74e47fdd20baccc", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/14bce634620beb025a6ab90ca74e47fdd20baccc.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/14bce634620beb025a6ab90ca74e47fdd20baccc"}}}], "date": "2019-01-16T00:33:49+00:00", "message": "Close branch pstarkey/updated-labscript-version-requirement-an-1547596478971", "type": "commit"}, {"rendered": {"message": {"raw": "Updated labscript version requirement and bumped `__version__` for release", "markup": "markdown", "html": "<p>Updated labscript version requirement and bumped <code>__version__</code> for release</p>", "type": "rendered"}}, "hash": "14bce634620beb025a6ab90ca74e47fdd20baccc", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/14bce634620beb025a6ab90ca74e47fdd20baccc.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/14bce634620beb025a6ab90ca74e47fdd20baccc/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/14bce634620beb025a6ab90ca74e47fdd20baccc"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/14bce634620beb025a6ab90ca74e47fdd20baccc"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/14bce634620beb025a6ab90ca74e47fdd20baccc"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/14bce634620beb025a6ab90ca74e47fdd20baccc/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/14bce634620beb025a6ab90ca74e47fdd20baccc/statuses_page=1.json"}}, "author": {"raw": "Philip Starkey <threepineapples@gmail.com>", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Updated labscript version requirement and bumped `__version__` for release", "markup": "markdown", "html": "<p>Updated labscript version requirement and bumped <code>__version__</code> for release</p>", "type": "rendered"}, "parents": [{"hash": "e525ad379b1d26e0354d4031f7b128239334e43b", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/e525ad379b1d26e0354d4031f7b128239334e43b.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/e525ad379b1d26e0354d4031f7b128239334e43b"}}}], "date": "2019-01-15T23:55:00+00:00", "message": "Updated labscript version requirement and bumped `__version__` for release", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in pstarkey/labscript_devices/CiceroOpalKellyXem3001 (pull request #50)\n\nCicero Opal Kelly XEM3001 pseudoclock\n\nApproved-by: Shaun Johnstone <shaun.johnstone@gmail.com>", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/pstarkey/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">pstarkey/labscript_devices</a>/CiceroOpalKellyXem3001 (pull request #50)</p>\n<p>Cicero Opal Kelly XEM3001 pseudoclock</p>\n<p>Approved-by: Shaun Johnstone <a href=\"mailto:shaun.johnstone@gmail.com\">&#115;&#104;&#97;&#117;&#110;&#46;&#106;&#111;&#104;&#110;&#115;&#116;&#111;&#110;&#101;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>", "type": "rendered"}}, "hash": "e525ad379b1d26e0354d4031f7b128239334e43b", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/e525ad379b1d26e0354d4031f7b128239334e43b.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/e525ad379b1d26e0354d4031f7b128239334e43b/comments_page=1.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/e525ad379b1d26e0354d4031f7b128239334e43b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/e525ad379b1d26e0354d4031f7b128239334e43b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/e525ad379b1d26e0354d4031f7b128239334e43b/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/e525ad379b1d26e0354d4031f7b128239334e43b/statuses_page=1.json"}}, "author": {"raw": "Philip Starkey <philip.starkey@gmail.com>", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}}, "summary": {"raw": "Merged in pstarkey/labscript_devices/CiceroOpalKellyXem3001 (pull request #50)\n\nCicero Opal Kelly XEM3001 pseudoclock\n\nApproved-by: Shaun Johnstone <shaun.johnstone@gmail.com>", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/pstarkey/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">pstarkey/labscript_devices</a>/CiceroOpalKellyXem3001 (pull request #50)</p>\n<p>Cicero Opal Kelly XEM3001 pseudoclock</p>\n<p>Approved-by: Shaun Johnstone <a href=\"mailto:shaun.johnstone@gmail.com\">&#115;&#104;&#97;&#117;&#110;&#46;&#106;&#111;&#104;&#110;&#115;&#116;&#111;&#110;&#101;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>", "type": "rendered"}, "parents": [{"hash": "2c27ac1e2bc0d62e44c632a91f8cbee339082c10", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/2c27ac1e2bc0d62e44c632a91f8cbee339082c10.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/2c27ac1e2bc0d62e44c632a91f8cbee339082c10"}}}, {"hash": "39baf6e5ba7e0f62786238159f6a911943a0c8cc", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/39baf6e5ba7e0f62786238159f6a911943a0c8cc.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/39baf6e5ba7e0f62786238159f6a911943a0c8cc"}}}], "date": "2019-01-15T06:02:19+00:00", "message": "Merged in pstarkey/labscript_devices/CiceroOpalKellyXem3001 (pull request #50)\n\nCicero Opal Kelly XEM3001 pseudoclock\n\nApproved-by: Shaun Johnstone <shaun.johnstone@gmail.com>", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch CiceroOpalKellyXem3001", "markup": "markdown", "html": "<p>Close branch CiceroOpalKellyXem3001</p>", "type": "rendered"}}, "hash": "39baf6e5ba7e0f62786238159f6a911943a0c8cc", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/39baf6e5ba7e0f62786238159f6a911943a0c8cc.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/39baf6e5ba7e0f62786238159f6a911943a0c8cc/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/39baf6e5ba7e0f62786238159f6a911943a0c8cc"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/39baf6e5ba7e0f62786238159f6a911943a0c8cc"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/39baf6e5ba7e0f62786238159f6a911943a0c8cc"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/39baf6e5ba7e0f62786238159f6a911943a0c8cc/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/39baf6e5ba7e0f62786238159f6a911943a0c8cc/statuses_page=1.json"}}, "author": {"raw": "Philip Starkey <philip.starkey@gmail.com>", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}}, "summary": {"raw": "Close branch CiceroOpalKellyXem3001", "markup": "markdown", "html": "<p>Close branch CiceroOpalKellyXem3001</p>", "type": "rendered"}, "parents": [{"hash": "1c70e935c3d570031091cad6a5ec74f81f5684c5", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/1c70e935c3d570031091cad6a5ec74f81f5684c5.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/1c70e935c3d570031091cad6a5ec74f81f5684c5"}}}], "date": "2019-01-15T06:02:19+00:00", "message": "Close branch CiceroOpalKellyXem3001", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed remaining bugs with device as a secondary pseudoclock in labscript and runviewer", "markup": "markdown", "html": "<p>Fixed remaining bugs with device as a secondary pseudoclock in labscript and runviewer</p>", "type": "rendered"}}, "hash": "1c70e935c3d570031091cad6a5ec74f81f5684c5", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/1c70e935c3d570031091cad6a5ec74f81f5684c5.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/1c70e935c3d570031091cad6a5ec74f81f5684c5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/1c70e935c3d570031091cad6a5ec74f81f5684c5"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/1c70e935c3d570031091cad6a5ec74f81f5684c5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/1c70e935c3d570031091cad6a5ec74f81f5684c5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/1c70e935c3d570031091cad6a5ec74f81f5684c5/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/1c70e935c3d570031091cad6a5ec74f81f5684c5/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed remaining bugs with device as a secondary pseudoclock in labscript and runviewer", "markup": "markdown", "html": "<p>Fixed remaining bugs with device as a secondary pseudoclock in labscript and runviewer</p>", "type": "rendered"}, "parents": [{"hash": "ef8ac68b0fd60e7e013a674e4a892a1bc9cb9bdb", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/ef8ac68b0fd60e7e013a674e4a892a1bc9cb9bdb.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/ef8ac68b0fd60e7e013a674e4a892a1bc9cb9bdb"}}}], "date": "2019-01-15T06:01:11+00:00", "message": "Fixed remaining bugs with device as a secondary pseudoclock in labscript and runviewer", "type": "commit"}, {"rendered": {"message": {"raw": "Updates after testing in the lab (made all labscript and BLACS parameters correctly reference clock frequency)\n\n* Added the automatic creation of a `WaitMonitor` so that you don't have to remember the syntax (since it's a bit meaningless for this device)\n* Added a configurable trigger debouce parameter\n* Waits (and inbuilt wait monitor) have been tested and work. The measured wait duration appears reasonably accurate, but it's hard to tell without a function generator that is referenced to a common 10MHz signal and is capable of producing a delayed pulse and ensuring that we account correctly for output delays in NI cards, etc. etc). I have no reason to doubt it's accuracy though as it literally just counts internal clock ticks while it waits.\n* External referencing of the entire device was tested successfully (and is necessary if using it with other pseudoclocks, much like the PineBlaster). I tested with both a 33.333MHz reference and a 50MHz reference signal produced by a NB3N502 chip. The OpalKelly board stayed synchronised with our PulseBlasters that were similarly referenced to a common 10MHz GPS source.\n\nTODO:\n * confirm it works as a secondary pseudoclock", "markup": "markdown", "html": "<p>Updates after testing in the lab (made all labscript and BLACS parameters correctly reference clock frequency)</p>\n<ul>\n<li>Added the automatic creation of a <code>WaitMonitor</code> so that you don't have to remember the syntax (since it's a bit meaningless for this device)</li>\n<li>Added a configurable trigger debouce parameter</li>\n<li>Waits (and inbuilt wait monitor) have been tested and work. The measured wait duration appears reasonably accurate, but it's hard to tell without a function generator that is referenced to a common 10MHz signal and is capable of producing a delayed pulse and ensuring that we account correctly for output delays in NI cards, etc. etc). I have no reason to doubt it's accuracy though as it literally just counts internal clock ticks while it waits.</li>\n<li>External referencing of the entire device was tested successfully (and is necessary if using it with other pseudoclocks, much like the PineBlaster). I tested with both a 33.333MHz reference and a 50MHz reference signal produced by a NB3N502 chip. The OpalKelly board stayed synchronised with our PulseBlasters that were similarly referenced to a common 10MHz GPS source.</li>\n</ul>\n<p>TODO:<br />\n * confirm it works as a secondary pseudoclock</p>", "type": "rendered"}}, "hash": "ef8ac68b0fd60e7e013a674e4a892a1bc9cb9bdb", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/ef8ac68b0fd60e7e013a674e4a892a1bc9cb9bdb.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/ef8ac68b0fd60e7e013a674e4a892a1bc9cb9bdb/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/ef8ac68b0fd60e7e013a674e4a892a1bc9cb9bdb"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/ef8ac68b0fd60e7e013a674e4a892a1bc9cb9bdb"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/ef8ac68b0fd60e7e013a674e4a892a1bc9cb9bdb"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/ef8ac68b0fd60e7e013a674e4a892a1bc9cb9bdb/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/ef8ac68b0fd60e7e013a674e4a892a1bc9cb9bdb/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Updates after testing in the lab (made all labscript and BLACS parameters correctly reference clock frequency)\n\n* Added the automatic creation of a `WaitMonitor` so that you don't have to remember the syntax (since it's a bit meaningless for this device)\n* Added a configurable trigger debouce parameter\n* Waits (and inbuilt wait monitor) have been tested and work. The measured wait duration appears reasonably accurate, but it's hard to tell without a function generator that is referenced to a common 10MHz signal and is capable of producing a delayed pulse and ensuring that we account correctly for output delays in NI cards, etc. etc). I have no reason to doubt it's accuracy though as it literally just counts internal clock ticks while it waits.\n* External referencing of the entire device was tested successfully (and is necessary if using it with other pseudoclocks, much like the PineBlaster). I tested with both a 33.333MHz reference and a 50MHz reference signal produced by a NB3N502 chip. The OpalKelly board stayed synchronised with our PulseBlasters that were similarly referenced to a common 10MHz GPS source.\n\nTODO:\n * confirm it works as a secondary pseudoclock", "markup": "markdown", "html": "<p>Updates after testing in the lab (made all labscript and BLACS parameters correctly reference clock frequency)</p>\n<ul>\n<li>Added the automatic creation of a <code>WaitMonitor</code> so that you don't have to remember the syntax (since it's a bit meaningless for this device)</li>\n<li>Added a configurable trigger debouce parameter</li>\n<li>Waits (and inbuilt wait monitor) have been tested and work. The measured wait duration appears reasonably accurate, but it's hard to tell without a function generator that is referenced to a common 10MHz signal and is capable of producing a delayed pulse and ensuring that we account correctly for output delays in NI cards, etc. etc). I have no reason to doubt it's accuracy though as it literally just counts internal clock ticks while it waits.</li>\n<li>External referencing of the entire device was tested successfully (and is necessary if using it with other pseudoclocks, much like the PineBlaster). I tested with both a 33.333MHz reference and a 50MHz reference signal produced by a NB3N502 chip. The OpalKelly board stayed synchronised with our PulseBlasters that were similarly referenced to a common 10MHz GPS source.</li>\n</ul>\n<p>TODO:<br />\n * confirm it works as a secondary pseudoclock</p>", "type": "rendered"}, "parents": [{"hash": "15e9eef50484d06e645696d62d8ce981997b1a64", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/15e9eef50484d06e645696d62d8ce981997b1a64.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/15e9eef50484d06e645696d62d8ce981997b1a64"}}}], "date": "2019-01-11T01:14:08+00:00", "message": "Updates after testing in the lab (made all labscript and BLACS parameters correctly reference clock frequency)\n\n* Added the automatic creation of a `WaitMonitor` so that you don't have to remember the syntax (since it's a bit meaningless for this device)\n* Added a configurable trigger debouce parameter\n* Waits (and inbuilt wait monitor) have been tested and work. The measured wait duration appears reasonably accurate, but it's hard to tell without a function generator that is referenced to a common 10MHz signal and is capable of producing a delayed pulse and ensuring that we account correctly for output delays in NI cards, etc. etc). I have no reason to doubt it's accuracy though as it literally just counts internal clock ticks while it waits.\n* External referencing of the entire device was tested successfully (and is necessary if using it with other pseudoclocks, much like the PineBlaster). I tested with both a 33.333MHz reference and a 50MHz reference signal produced by a NB3N502 chip. The OpalKelly board stayed synchronised with our PulseBlasters that were similarly referenced to a common 10MHz GPS source.\n\nTODO:\n * confirm it works as a secondary pseudoclock", "type": "commit"}, {"rendered": {"message": {"raw": "Finished adding support for configurable clock frequencies (needs testing)", "markup": "markdown", "html": "<p>Finished adding support for configurable clock frequencies (needs testing)</p>", "type": "rendered"}}, "hash": "15e9eef50484d06e645696d62d8ce981997b1a64", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/15e9eef50484d06e645696d62d8ce981997b1a64.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/15e9eef50484d06e645696d62d8ce981997b1a64/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/15e9eef50484d06e645696d62d8ce981997b1a64"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/15e9eef50484d06e645696d62d8ce981997b1a64"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/15e9eef50484d06e645696d62d8ce981997b1a64"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/15e9eef50484d06e645696d62d8ce981997b1a64/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/15e9eef50484d06e645696d62d8ce981997b1a64/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Finished adding support for configurable clock frequencies (needs testing)", "markup": "markdown", "html": "<p>Finished adding support for configurable clock frequencies (needs testing)</p>", "type": "rendered"}, "parents": [{"hash": "d98fdd5d6c8fb50de103043347ceb1b1ccfac11d", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/d98fdd5d6c8fb50de103043347ceb1b1ccfac11d.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/d98fdd5d6c8fb50de103043347ceb1b1ccfac11d"}}}], "date": "2018-10-30T04:30:22+00:00", "message": "Finished adding support for configurable clock frequencies (needs testing)", "type": "commit"}, {"rendered": {"message": {"raw": "A minor bug fix and the start of support for custom clock frequencies (but needs more work)", "markup": "markdown", "html": "<p>A minor bug fix and the start of support for custom clock frequencies (but needs more work)</p>", "type": "rendered"}}, "hash": "d98fdd5d6c8fb50de103043347ceb1b1ccfac11d", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/d98fdd5d6c8fb50de103043347ceb1b1ccfac11d.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/d98fdd5d6c8fb50de103043347ceb1b1ccfac11d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/d98fdd5d6c8fb50de103043347ceb1b1ccfac11d"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/d98fdd5d6c8fb50de103043347ceb1b1ccfac11d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/d98fdd5d6c8fb50de103043347ceb1b1ccfac11d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/d98fdd5d6c8fb50de103043347ceb1b1ccfac11d/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/d98fdd5d6c8fb50de103043347ceb1b1ccfac11d/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "A minor bug fix and the start of support for custom clock frequencies (but needs more work)", "markup": "markdown", "html": "<p>A minor bug fix and the start of support for custom clock frequencies (but needs more work)</p>", "type": "rendered"}, "parents": [{"hash": "4de7ab8d5bcef98975df97f0c848dcea2c06845a", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/4de7ab8d5bcef98975df97f0c848dcea2c06845a.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/4de7ab8d5bcef98975df97f0c848dcea2c06845a"}}}], "date": "2018-10-30T03:40:27+00:00", "message": "A minor bug fix and the start of support for custom clock frequencies (but needs more work)", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a few bugs on Python 2.7 with unicode literals imported, and updated a few constants.\n\nStill need to do the following tests:\n * test on a real apparatus\n * confirm that the trigger/wait delays are correct\n * check runviewer\n * confirm length of measured waits is accurate\n * check external clocking option (need to find a 100MHz square wave for this though I think)\n * enforce a minimum time between waits", "markup": "markdown", "html": "<p>Fixed a few bugs on Python 2.7 with unicode literals imported, and updated a few constants.</p>\n<p>Still need to do the following tests:<br />\n * test on a real apparatus<br />\n * confirm that the trigger/wait delays are correct<br />\n * check runviewer<br />\n * confirm length of measured waits is accurate<br />\n * check external clocking option (need to find a 100MHz square wave for this though I think)<br />\n * enforce a minimum time between waits</p>", "type": "rendered"}}, "hash": "4de7ab8d5bcef98975df97f0c848dcea2c06845a", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/4de7ab8d5bcef98975df97f0c848dcea2c06845a.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/4de7ab8d5bcef98975df97f0c848dcea2c06845a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/4de7ab8d5bcef98975df97f0c848dcea2c06845a"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/4de7ab8d5bcef98975df97f0c848dcea2c06845a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/4de7ab8d5bcef98975df97f0c848dcea2c06845a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/4de7ab8d5bcef98975df97f0c848dcea2c06845a/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/4de7ab8d5bcef98975df97f0c848dcea2c06845a/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed a few bugs on Python 2.7 with unicode literals imported, and updated a few constants.\n\nStill need to do the following tests:\n * test on a real apparatus\n * confirm that the trigger/wait delays are correct\n * check runviewer\n * confirm length of measured waits is accurate\n * check external clocking option (need to find a 100MHz square wave for this though I think)\n * enforce a minimum time between waits", "markup": "markdown", "html": "<p>Fixed a few bugs on Python 2.7 with unicode literals imported, and updated a few constants.</p>\n<p>Still need to do the following tests:<br />\n * test on a real apparatus<br />\n * confirm that the trigger/wait delays are correct<br />\n * check runviewer<br />\n * confirm length of measured waits is accurate<br />\n * check external clocking option (need to find a 100MHz square wave for this though I think)<br />\n * enforce a minimum time between waits</p>", "type": "rendered"}, "parents": [{"hash": "5b232c912337d34ef7d0e09b16e42fbe17d3c227", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/5b232c912337d34ef7d0e09b16e42fbe17d3c227.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/5b232c912337d34ef7d0e09b16e42fbe17d3c227"}}}], "date": "2018-09-27T04:54:55+00:00", "message": "Fixed a few bugs on Python 2.7 with unicode literals imported, and updated a few constants.\n\nStill need to do the following tests:\n * test on a real apparatus\n * confirm that the trigger/wait delays are correct\n * check runviewer\n * confirm length of measured waits is accurate\n * check external clocking option (need to find a 100MHz square wave for this though I think)\n * enforce a minimum time between waits", "type": "commit"}, {"rendered": {"message": {"raw": "Added support for wait_completed ZMQ event to match pull request #47\n\nneeds testing!", "markup": "markdown", "html": "<p>Added support for wait_completed ZMQ event to match pull request #47</p>\n<p>needs testing!</p>", "type": "rendered"}}, "hash": "5b232c912337d34ef7d0e09b16e42fbe17d3c227", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/5b232c912337d34ef7d0e09b16e42fbe17d3c227.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/5b232c912337d34ef7d0e09b16e42fbe17d3c227/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/5b232c912337d34ef7d0e09b16e42fbe17d3c227"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/5b232c912337d34ef7d0e09b16e42fbe17d3c227"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/5b232c912337d34ef7d0e09b16e42fbe17d3c227"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/5b232c912337d34ef7d0e09b16e42fbe17d3c227/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/5b232c912337d34ef7d0e09b16e42fbe17d3c227/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added support for wait_completed ZMQ event to match pull request #47\n\nneeds testing!", "markup": "markdown", "html": "<p>Added support for wait_completed ZMQ event to match pull request #47</p>\n<p>needs testing!</p>", "type": "rendered"}, "parents": [{"hash": "ad7499386128869767f13a19041a6668eff0158d", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/ad7499386128869767f13a19041a6668eff0158d.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/ad7499386128869767f13a19041a6668eff0158d"}}}], "date": "2018-09-20T23:49:09+00:00", "message": "Added support for wait_completed ZMQ event to match pull request #47\n\nneeds testing!", "type": "commit"}, {"rendered": {"message": {"raw": "Added tentative support for the Cicero pseudoclock that uses an Opal Kelly XEM3001 FPGA development board.\n\nFirmware for the FPGA is available from #!/labscript_suite/opalkellyxem3001/", "markup": "markdown", "html": "<p>Added tentative support for the Cicero pseudoclock that uses an Opal Kelly XEM3001 FPGA development board.</p>\n<p>Firmware for the FPGA is available from <a href=\"#!/labscript_suite/opalkellyxem3001/\" rel=\"nofollow\" class=\"ap-connect-link\">#!/labscript_suite/opalkellyxem3001/</a></p>", "type": "rendered"}}, "hash": "ad7499386128869767f13a19041a6668eff0158d", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/ad7499386128869767f13a19041a6668eff0158d.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/ad7499386128869767f13a19041a6668eff0158d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/ad7499386128869767f13a19041a6668eff0158d"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/ad7499386128869767f13a19041a6668eff0158d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/ad7499386128869767f13a19041a6668eff0158d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/ad7499386128869767f13a19041a6668eff0158d/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/ad7499386128869767f13a19041a6668eff0158d/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added tentative support for the Cicero pseudoclock that uses an Opal Kelly XEM3001 FPGA development board.\n\nFirmware for the FPGA is available from #!/labscript_suite/opalkellyxem3001/", "markup": "markdown", "html": "<p>Added tentative support for the Cicero pseudoclock that uses an Opal Kelly XEM3001 FPGA development board.</p>\n<p>Firmware for the FPGA is available from <a href=\"#!/labscript_suite/opalkellyxem3001/\" rel=\"nofollow\" class=\"ap-connect-link\">#!/labscript_suite/opalkellyxem3001/</a></p>", "type": "rendered"}, "parents": [{"hash": "fa62348a457fee82698c6e7f5559a0fff7c895bc", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/fa62348a457fee82698c6e7f5559a0fff7c895bc.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/fa62348a457fee82698c6e7f5559a0fff7c895bc"}}}], "date": "2018-09-20T05:32:24+00:00", "message": "Added tentative support for the Cicero pseudoclock that uses an Opal Kelly XEM3001 FPGA development board.\n\nFirmware for the FPGA is available from #!/labscript_suite/opalkellyxem3001/", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in monashspinor/labscript_devices/RFBlaster_kloned (pull request #30)\n\nRFBlaster stability improvements", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/monashspinor/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">monashspinor/labscript_devices</a>/RFBlaster_kloned (pull request #30)</p>\n<p>RFBlaster stability improvements</p>", "type": "rendered"}}, "hash": "2c27ac1e2bc0d62e44c632a91f8cbee339082c10", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/2c27ac1e2bc0d62e44c632a91f8cbee339082c10.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/2c27ac1e2bc0d62e44c632a91f8cbee339082c10/comments_page=1.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/2c27ac1e2bc0d62e44c632a91f8cbee339082c10"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/2c27ac1e2bc0d62e44c632a91f8cbee339082c10"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/2c27ac1e2bc0d62e44c632a91f8cbee339082c10/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/2c27ac1e2bc0d62e44c632a91f8cbee339082c10/statuses_page=1.json"}}, "author": {"raw": "Russell Anderson <russrussruss@gmail.com>", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Merged in monashspinor/labscript_devices/RFBlaster_kloned (pull request #30)\n\nRFBlaster stability improvements", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/monashspinor/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">monashspinor/labscript_devices</a>/RFBlaster_kloned (pull request #30)</p>\n<p>RFBlaster stability improvements</p>", "type": "rendered"}, "parents": [{"hash": "c5614ae6381302ac5c3189b98752a1523840951c", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/c5614ae6381302ac5c3189b98752a1523840951c.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/c5614ae6381302ac5c3189b98752a1523840951c"}}}, {"hash": "01ba1a76d2f63c616ddac9f2c37991bb6496f995", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/01ba1a76d2f63c616ddac9f2c37991bb6496f995.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/01ba1a76d2f63c616ddac9f2c37991bb6496f995"}}}], "date": "2018-11-27T09:04:22+00:00", "message": "Merged in monashspinor/labscript_devices/RFBlaster_kloned (pull request #30)\n\nRFBlaster stability improvements", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch RFBlaster_kloned", "markup": "markdown", "html": "<p>Close branch RFBlaster_kloned</p>", "type": "rendered"}}, "hash": "01ba1a76d2f63c616ddac9f2c37991bb6496f995", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/01ba1a76d2f63c616ddac9f2c37991bb6496f995.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/01ba1a76d2f63c616ddac9f2c37991bb6496f995/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/01ba1a76d2f63c616ddac9f2c37991bb6496f995"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/01ba1a76d2f63c616ddac9f2c37991bb6496f995"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/01ba1a76d2f63c616ddac9f2c37991bb6496f995"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/01ba1a76d2f63c616ddac9f2c37991bb6496f995/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/01ba1a76d2f63c616ddac9f2c37991bb6496f995/statuses_page=1.json"}}, "author": {"raw": "Russell Anderson <russrussruss@gmail.com>", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Close branch RFBlaster_kloned", "markup": "markdown", "html": "<p>Close branch RFBlaster_kloned</p>", "type": "rendered"}, "parents": [{"hash": "f9606935c112c9e8d5d89bef5aaf7df7f5f62f7e", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/f9606935c112c9e8d5d89bef5aaf7df7f5f62f7e.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/f9606935c112c9e8d5d89bef5aaf7df7f5f62f7e"}}}], "date": "2018-11-27T09:04:22+00:00", "message": "Close branch RFBlaster_kloned", "type": "commit"}, {"rendered": {"message": {"raw": "Missing brackets in tuple of multiple exceptions in previous commit.", "markup": "markdown", "html": "<p>Missing brackets in tuple of multiple exceptions in previous commit.</p>", "type": "rendered"}}, "hash": "f9606935c112c9e8d5d89bef5aaf7df7f5f62f7e", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/f9606935c112c9e8d5d89bef5aaf7df7f5f62f7e.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/f9606935c112c9e8d5d89bef5aaf7df7f5f62f7e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/f9606935c112c9e8d5d89bef5aaf7df7f5f62f7e"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/f9606935c112c9e8d5d89bef5aaf7df7f5f62f7e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/f9606935c112c9e8d5d89bef5aaf7df7f5f62f7e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/f9606935c112c9e8d5d89bef5aaf7df7f5f62f7e/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/f9606935c112c9e8d5d89bef5aaf7df7f5f62f7e/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "Missing brackets in tuple of multiple exceptions in previous commit.", "markup": "markdown", "html": "<p>Missing brackets in tuple of multiple exceptions in previous commit.</p>", "type": "rendered"}, "parents": [{"hash": "14d968df799a933bc4eea62de8233134b94fe594", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/14d968df799a933bc4eea62de8233134b94fe594.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/14d968df799a933bc4eea62de8233134b94fe594"}}}], "date": "2018-11-27T08:37:07+00:00", "message": "Missing brackets in tuple of multiple exceptions in previous commit.", "type": "commit"}, {"rendered": {"message": {"raw": "Catch httplib.HTTPException (PY2, includes BadStatusLine) or HTTPError (PY3).", "markup": "markdown", "html": "<p>Catch httplib.HTTPException (PY2, includes BadStatusLine) or HTTPError (PY3).</p>", "type": "rendered"}}, "hash": "14d968df799a933bc4eea62de8233134b94fe594", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/14d968df799a933bc4eea62de8233134b94fe594.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/14d968df799a933bc4eea62de8233134b94fe594/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/14d968df799a933bc4eea62de8233134b94fe594"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/14d968df799a933bc4eea62de8233134b94fe594"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/14d968df799a933bc4eea62de8233134b94fe594"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/14d968df799a933bc4eea62de8233134b94fe594/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/14d968df799a933bc4eea62de8233134b94fe594/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "Catch httplib.HTTPException (PY2, includes BadStatusLine) or HTTPError (PY3).", "markup": "markdown", "html": "<p>Catch httplib.HTTPException (PY2, includes BadStatusLine) or HTTPError (PY3).</p>", "type": "rendered"}, "parents": [{"hash": "d38a44dd866051ae6078eaf92a4d8b5c042efdd0", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/d38a44dd866051ae6078eaf92a4d8b5c042efdd0.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/d38a44dd866051ae6078eaf92a4d8b5c042efdd0"}}}], "date": "2018-11-27T08:17:40+00:00", "message": "Catch httplib.HTTPException (PY2, includes BadStatusLine) or HTTPError (PY3).", "type": "commit"}, {"rendered": {"message": {"raw": "Remove restart_kloned debugging script.", "markup": "markdown", "html": "<p>Remove restart_kloned debugging script.</p>", "type": "rendered"}}, "hash": "d38a44dd866051ae6078eaf92a4d8b5c042efdd0", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/d38a44dd866051ae6078eaf92a4d8b5c042efdd0.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/d38a44dd866051ae6078eaf92a4d8b5c042efdd0/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/d38a44dd866051ae6078eaf92a4d8b5c042efdd0"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/d38a44dd866051ae6078eaf92a4d8b5c042efdd0"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/d38a44dd866051ae6078eaf92a4d8b5c042efdd0"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/d38a44dd866051ae6078eaf92a4d8b5c042efdd0/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/d38a44dd866051ae6078eaf92a4d8b5c042efdd0/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "Remove restart_kloned debugging script.", "markup": "markdown", "html": "<p>Remove restart_kloned debugging script.</p>", "type": "rendered"}, "parents": [{"hash": "470bb4f7f882396117dfdb2730ce3ade032761ee", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/470bb4f7f882396117dfdb2730ce3ade032761ee.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/470bb4f7f882396117dfdb2730ce3ade032761ee"}}}], "date": "2018-11-26T22:56:47+00:00", "message": "Remove restart_kloned debugging script.", "type": "commit"}, {"rendered": {"message": {"raw": "Merge with default (now closely resembles Python3_RFBlaster branch with retries\nand restart_kloned inside http_request).", "markup": "markdown", "html": "<p>Merge with default (now closely resembles Python3_RFBlaster branch with retries<br />\nand restart_kloned inside http_request).</p>", "type": "rendered"}}, "hash": "470bb4f7f882396117dfdb2730ce3ade032761ee", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/470bb4f7f882396117dfdb2730ce3ade032761ee.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/470bb4f7f882396117dfdb2730ce3ade032761ee/comments_page=1.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/470bb4f7f882396117dfdb2730ce3ade032761ee"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/470bb4f7f882396117dfdb2730ce3ade032761ee"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/470bb4f7f882396117dfdb2730ce3ade032761ee/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/470bb4f7f882396117dfdb2730ce3ade032761ee/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "Merge with default (now closely resembles Python3_RFBlaster branch with retries\nand restart_kloned inside http_request).", "markup": "markdown", "html": "<p>Merge with default (now closely resembles Python3_RFBlaster branch with retries<br />\nand restart_kloned inside http_request).</p>", "type": "rendered"}, "parents": [{"hash": "c875d3813828388485187818b7d7e4833a887a91", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/c875d3813828388485187818b7d7e4833a887a91.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/c875d3813828388485187818b7d7e4833a887a91"}}}, {"hash": "addb7eef22b4f04b5e74a414ffe359383ab066f4", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/addb7eef22b4f04b5e74a414ffe359383ab066f4.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/addb7eef22b4f04b5e74a414ffe359383ab066f4"}}}], "date": "2018-11-26T22:49:44+00:00", "message": "Merge with default (now closely resembles Python3_RFBlaster branch with retries\nand restart_kloned inside http_request).", "type": "commit"}, {"rendered": {"message": {"raw": "RFBlaster: Better handling of socket errors, and logging specific exceptions.", "markup": "markdown", "html": "<p>RFBlaster: Better handling of socket errors, and logging specific exceptions.</p>", "type": "rendered"}}, "hash": "c875d3813828388485187818b7d7e4833a887a91", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/c875d3813828388485187818b7d7e4833a887a91.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/c875d3813828388485187818b7d7e4833a887a91/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/c875d3813828388485187818b7d7e4833a887a91"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/c875d3813828388485187818b7d7e4833a887a91"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/c875d3813828388485187818b7d7e4833a887a91"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/c875d3813828388485187818b7d7e4833a887a91/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/c875d3813828388485187818b7d7e4833a887a91/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author"}, "summary": {"raw": "RFBlaster: Better handling of socket errors, and logging specific exceptions.", "markup": "markdown", "html": "<p>RFBlaster: Better handling of socket errors, and logging specific exceptions.</p>", "type": "rendered"}, "parents": [{"hash": "eee800d87f4b613e5b3e9359f550f675be215e91", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/eee800d87f4b613e5b3e9359f550f675be215e91.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/eee800d87f4b613e5b3e9359f550f675be215e91"}}}], "date": "2017-02-21T04:03:55+00:00", "message": "RFBlaster: Better handling of socket errors, and logging specific exceptions.", "type": "commit"}, {"rendered": {"message": {"raw": "RFBlaster changes:\n* Use logging from labscript_utils.\n* Fix global import of socket in __init__.\n* Fix attempt to netcat using self.address, which had protocol prefix and port.\n* Fixed reconnect loop (while should only be conditional on whether it worked).\n* Reset connection attempts after successful kloned restart over netcat.", "markup": "markdown", "html": "<p>RFBlaster changes:<br />\n<em> Use logging from labscript_utils.<br />\n</em> Fix global import of socket in <strong>init</strong>.<br />\n<em> Fix attempt to netcat using self.address, which had protocol prefix and port.<br />\n</em> Fixed reconnect loop (while should only be conditional on whether it worked).<br />\n* Reset connection attempts after successful kloned restart over netcat.</p>", "type": "rendered"}}, "hash": "eee800d87f4b613e5b3e9359f550f675be215e91", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/eee800d87f4b613e5b3e9359f550f675be215e91.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/eee800d87f4b613e5b3e9359f550f675be215e91/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/eee800d87f4b613e5b3e9359f550f675be215e91"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/eee800d87f4b613e5b3e9359f550f675be215e91"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/eee800d87f4b613e5b3e9359f550f675be215e91"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/eee800d87f4b613e5b3e9359f550f675be215e91/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/eee800d87f4b613e5b3e9359f550f675be215e91/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author"}, "summary": {"raw": "RFBlaster changes:\n* Use logging from labscript_utils.\n* Fix global import of socket in __init__.\n* Fix attempt to netcat using self.address, which had protocol prefix and port.\n* Fixed reconnect loop (while should only be conditional on whether it worked).\n* Reset connection attempts after successful kloned restart over netcat.", "markup": "markdown", "html": "<p>RFBlaster changes:<br />\n<em> Use logging from labscript_utils.<br />\n</em> Fix global import of socket in <strong>init</strong>.<br />\n<em> Fix attempt to netcat using self.address, which had protocol prefix and port.<br />\n</em> Fixed reconnect loop (while should only be conditional on whether it worked).<br />\n* Reset connection attempts after successful kloned restart over netcat.</p>", "type": "rendered"}, "parents": [{"hash": "87372ed8fb2874bd7d5939965a3e4fff5e755c48", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/87372ed8fb2874bd7d5939965a3e4fff5e755c48.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/87372ed8fb2874bd7d5939965a3e4fff5e755c48"}}}], "date": "2017-02-21T01:32:17+00:00", "message": "RFBlaster changes:\n* Use logging from labscript_utils.\n* Fix global import of socket in __init__.\n* Fix attempt to netcat using self.address, which had protocol prefix and port.\n* Fixed reconnect loop (while should only be conditional on whether it worked).\n* Reset connection attempts after successful kloned restart over netcat.", "type": "commit"}, {"rendered": {"message": {"raw": "Attempt to implement multiple connection attempts and web server restart on the\nrfBlaster. This requires respawning netcat upon each connection. Standalone test\nscript in RFBlaster_kloned.py. New method restart_kloned called by all methods\nthat make urllib2.urlopen calls; transition_to_buffered, check_remote_values, &\nprogram_manual. A fair bit of boilerplate here, with the only thing differing\nbeing the actual request.", "markup": "markdown", "html": "<p>Attempt to implement multiple connection attempts and web server restart on the<br />\nrfBlaster. This requires respawning netcat upon each connection. Standalone test<br />\nscript in RFBlaster_kloned.py. New method restart_kloned called by all methods<br />\nthat make urllib2.urlopen calls; transition_to_buffered, check_remote_values, &amp;<br />\nprogram_manual. A fair bit of boilerplate here, with the only thing differing<br />\nbeing the actual request.</p>", "type": "rendered"}}, "hash": "87372ed8fb2874bd7d5939965a3e4fff5e755c48", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/87372ed8fb2874bd7d5939965a3e4fff5e755c48.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/87372ed8fb2874bd7d5939965a3e4fff5e755c48/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/87372ed8fb2874bd7d5939965a3e4fff5e755c48"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/87372ed8fb2874bd7d5939965a3e4fff5e755c48"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/87372ed8fb2874bd7d5939965a3e4fff5e755c48"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/87372ed8fb2874bd7d5939965a3e4fff5e755c48/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/87372ed8fb2874bd7d5939965a3e4fff5e755c48/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author"}, "summary": {"raw": "Attempt to implement multiple connection attempts and web server restart on the\nrfBlaster. This requires respawning netcat upon each connection. Standalone test\nscript in RFBlaster_kloned.py. New method restart_kloned called by all methods\nthat make urllib2.urlopen calls; transition_to_buffered, check_remote_values, &\nprogram_manual. A fair bit of boilerplate here, with the only thing differing\nbeing the actual request.", "markup": "markdown", "html": "<p>Attempt to implement multiple connection attempts and web server restart on the<br />\nrfBlaster. This requires respawning netcat upon each connection. Standalone test<br />\nscript in RFBlaster_kloned.py. New method restart_kloned called by all methods<br />\nthat make urllib2.urlopen calls; transition_to_buffered, check_remote_values, &amp;<br />\nprogram_manual. A fair bit of boilerplate here, with the only thing differing<br />\nbeing the actual request.</p>", "type": "rendered"}, "parents": [{"hash": "a0b505acc9b2c39f78ecd9684718df5834d96410", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/a0b505acc9b2c39f78ecd9684718df5834d96410.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/a0b505acc9b2c39f78ecd9684718df5834d96410"}}}], "date": "2016-08-09T10:03:57+00:00", "message": "Attempt to implement multiple connection attempts and web server restart on the\nrfBlaster. This requires respawning netcat upon each connection. Standalone test\nscript in RFBlaster_kloned.py. New method restart_kloned called by all methods\nthat make urllib2.urlopen calls; transition_to_buffered, check_remote_values, &\nprogram_manual. A fair bit of boilerplate here, with the only thing differing\nbeing the actual request.", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in cbillington/labscript_devices/PulseBasterUSB_parser (pull request #55)\n\nAdd missing runviewer parser to PulseBlasterUSB", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/labscript_devices</a>/PulseBasterUSB_parser (pull request #55)</p>\n<p>Add missing runviewer parser to PulseBlasterUSB</p>", "type": "rendered"}}, "hash": "c5614ae6381302ac5c3189b98752a1523840951c", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/c5614ae6381302ac5c3189b98752a1523840951c.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/c5614ae6381302ac5c3189b98752a1523840951c/comments_page=1.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/c5614ae6381302ac5c3189b98752a1523840951c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/c5614ae6381302ac5c3189b98752a1523840951c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/c5614ae6381302ac5c3189b98752a1523840951c/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/c5614ae6381302ac5c3189b98752a1523840951c/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in cbillington/labscript_devices/PulseBasterUSB_parser (pull request #55)\n\nAdd missing runviewer parser to PulseBlasterUSB", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/labscript_devices</a>/PulseBasterUSB_parser (pull request #55)</p>\n<p>Add missing runviewer parser to PulseBlasterUSB</p>", "type": "rendered"}, "parents": [{"hash": "addb7eef22b4f04b5e74a414ffe359383ab066f4", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/addb7eef22b4f04b5e74a414ffe359383ab066f4.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/addb7eef22b4f04b5e74a414ffe359383ab066f4"}}}, {"hash": "e4137317083047caea484c4a0fed10f19441c51e", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/e4137317083047caea484c4a0fed10f19441c51e.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/e4137317083047caea484c4a0fed10f19441c51e"}}}], "date": "2018-11-26T15:39:50+00:00", "message": "Merged in cbillington/labscript_devices/PulseBasterUSB_parser (pull request #55)\n\nAdd missing runviewer parser to PulseBlasterUSB", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch PulseBasterUSB_parser", "markup": "markdown", "html": "<p>Close branch PulseBasterUSB_parser</p>", "type": "rendered"}}, "hash": "e4137317083047caea484c4a0fed10f19441c51e", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/e4137317083047caea484c4a0fed10f19441c51e.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/e4137317083047caea484c4a0fed10f19441c51e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/e4137317083047caea484c4a0fed10f19441c51e"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/e4137317083047caea484c4a0fed10f19441c51e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/e4137317083047caea484c4a0fed10f19441c51e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/e4137317083047caea484c4a0fed10f19441c51e/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/e4137317083047caea484c4a0fed10f19441c51e/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch PulseBasterUSB_parser", "markup": "markdown", "html": "<p>Close branch PulseBasterUSB_parser</p>", "type": "rendered"}, "parents": [{"hash": "85f717eb45cb8df5937dcbc0db02503c6f20617a", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/85f717eb45cb8df5937dcbc0db02503c6f20617a.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/85f717eb45cb8df5937dcbc0db02503c6f20617a"}}}], "date": "2018-11-26T15:39:50+00:00", "message": "Close branch PulseBasterUSB_parser", "type": "commit"}, {"rendered": {"message": {"raw": "Add missing runviewer parser to PulseBlasterUSB", "markup": "markdown", "html": "<p>Add missing runviewer parser to PulseBlasterUSB</p>", "type": "rendered"}}, "hash": "85f717eb45cb8df5937dcbc0db02503c6f20617a", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/85f717eb45cb8df5937dcbc0db02503c6f20617a.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/85f717eb45cb8df5937dcbc0db02503c6f20617a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/85f717eb45cb8df5937dcbc0db02503c6f20617a"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/85f717eb45cb8df5937dcbc0db02503c6f20617a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/85f717eb45cb8df5937dcbc0db02503c6f20617a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/85f717eb45cb8df5937dcbc0db02503c6f20617a/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/85f717eb45cb8df5937dcbc0db02503c6f20617a/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Add missing runviewer parser to PulseBlasterUSB", "markup": "markdown", "html": "<p>Add missing runviewer parser to PulseBlasterUSB</p>", "type": "rendered"}, "parents": [{"hash": "e826a00ed0fd7ea2fcac73fc4ba9aef86e9431f5", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/e826a00ed0fd7ea2fcac73fc4ba9aef86e9431f5.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/e826a00ed0fd7ea2fcac73fc4ba9aef86e9431f5"}}}], "date": "2018-11-10T16:25:32+00:00", "message": "Add missing runviewer parser to PulseBlasterUSB", "type": "commit"}, {"rendered": {"message": {"raw": "Merged in cbillington/labscript_devices/imaqdx_server (pull request #48)\n\nImaqdx server", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/labscript_devices</a>/imaqdx_server (pull request #48)</p>\n<p>Imaqdx server</p>", "type": "rendered"}}, "hash": "addb7eef22b4f04b5e74a414ffe359383ab066f4", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/addb7eef22b4f04b5e74a414ffe359383ab066f4.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/addb7eef22b4f04b5e74a414ffe359383ab066f4/comments_page=1.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/addb7eef22b4f04b5e74a414ffe359383ab066f4"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/addb7eef22b4f04b5e74a414ffe359383ab066f4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/addb7eef22b4f04b5e74a414ffe359383ab066f4/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/addb7eef22b4f04b5e74a414ffe359383ab066f4/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in cbillington/labscript_devices/imaqdx_server (pull request #48)\n\nImaqdx server", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/labscript_devices\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/labscript_devices</a>/imaqdx_server (pull request #48)</p>\n<p>Imaqdx server</p>", "type": "rendered"}, "parents": [{"hash": "e826a00ed0fd7ea2fcac73fc4ba9aef86e9431f5", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/e826a00ed0fd7ea2fcac73fc4ba9aef86e9431f5.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/e826a00ed0fd7ea2fcac73fc4ba9aef86e9431f5"}}}, {"hash": "dd14953a105043bdab77da1aeb4e76e07797c3b7", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/dd14953a105043bdab77da1aeb4e76e07797c3b7.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/dd14953a105043bdab77da1aeb4e76e07797c3b7"}}}], "date": "2018-11-20T21:58:20+00:00", "message": "Merged in cbillington/labscript_devices/imaqdx_server (pull request #48)\n\nImaqdx server", "type": "commit"}, {"rendered": {"message": {"raw": "Close branch imaqdx_server", "markup": "markdown", "html": "<p>Close branch imaqdx_server</p>", "type": "rendered"}}, "hash": "dd14953a105043bdab77da1aeb4e76e07797c3b7", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/dd14953a105043bdab77da1aeb4e76e07797c3b7.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/dd14953a105043bdab77da1aeb4e76e07797c3b7/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/dd14953a105043bdab77da1aeb4e76e07797c3b7"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/dd14953a105043bdab77da1aeb4e76e07797c3b7"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/dd14953a105043bdab77da1aeb4e76e07797c3b7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/dd14953a105043bdab77da1aeb4e76e07797c3b7/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/dd14953a105043bdab77da1aeb4e76e07797c3b7/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch imaqdx_server", "markup": "markdown", "html": "<p>Close branch imaqdx_server</p>", "type": "rendered"}, "parents": [{"hash": "c20831a2d04acf038465e8f63ffe4bd624b2238a", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/c20831a2d04acf038465e8f63ffe4bd624b2238a.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/c20831a2d04acf038465e8f63ffe4bd624b2238a"}}}], "date": "2018-11-20T21:58:20+00:00", "message": "Close branch imaqdx_server", "type": "commit"}, {"rendered": {"message": {"raw": "* This script requires Python >= 3.6, so assert this and omit PY2 conditional.\n* Handle premature calls to transition_to_static.\n* Don't use experiment stop_time to set acquisition timeout, as doing so delays\n  the loop in grab_multiple, and thus the effect of camera.abort_acquisition().\n  Acquisition timeouts greater than 5s are likely to cause Camera.abort()\n  to timeout, crashing the device tab of the camera.\n* Print statement at end of grab_multiple reports \"M of N frames\".\n* If the acquisition thread is alive when transition_to_static is called, call\n  abort() (since we are not returning the incomplete list of images anyway).\n* Fixed bug in abort where camera._abort_acquisition wasn't being reset, leading\n  to erroneous abort in subsequent shot(s).\n* Removed extraneous commented code.", "markup": "markdown", "html": "<ul>\n<li>This script requires Python &gt;= 3.6, so assert this and omit PY2 conditional.</li>\n<li>Handle premature calls to transition_to_static.</li>\n<li>Don't use experiment stop_time to set acquisition timeout, as doing so delays<br />\n  the loop in grab_multiple, and thus the effect of camera.abort_acquisition().<br />\n  Acquisition timeouts greater than 5s are likely to cause Camera.abort()<br />\n  to timeout, crashing the device tab of the camera.</li>\n<li>Print statement at end of grab_multiple reports \"M of N frames\".</li>\n<li>If the acquisition thread is alive when transition_to_static is called, call<br />\n  abort() (since we are not returning the incomplete list of images anyway).</li>\n<li>Fixed bug in abort where camera._abort_acquisition wasn't being reset, leading<br />\n  to erroneous abort in subsequent shot(s).</li>\n<li>Removed extraneous commented code.</li>\n</ul>", "type": "rendered"}}, "hash": "c20831a2d04acf038465e8f63ffe4bd624b2238a", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/c20831a2d04acf038465e8f63ffe4bd624b2238a.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/c20831a2d04acf038465e8f63ffe4bd624b2238a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/c20831a2d04acf038465e8f63ffe4bd624b2238a"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/c20831a2d04acf038465e8f63ffe4bd624b2238a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/c20831a2d04acf038465e8f63ffe4bd624b2238a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/c20831a2d04acf038465e8f63ffe4bd624b2238a/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/c20831a2d04acf038465e8f63ffe4bd624b2238a/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "* This script requires Python >= 3.6, so assert this and omit PY2 conditional.\n* Handle premature calls to transition_to_static.\n* Don't use experiment stop_time to set acquisition timeout, as doing so delays\n  the loop in grab_multiple, and thus the effect of camera.abort_acquisition().\n  Acquisition timeouts greater than 5s are likely to cause Camera.abort()\n  to timeout, crashing the device tab of the camera.\n* Print statement at end of grab_multiple reports \"M of N frames\".\n* If the acquisition thread is alive when transition_to_static is called, call\n  abort() (since we are not returning the incomplete list of images anyway).\n* Fixed bug in abort where camera._abort_acquisition wasn't being reset, leading\n  to erroneous abort in subsequent shot(s).\n* Removed extraneous commented code.", "markup": "markdown", "html": "<ul>\n<li>This script requires Python &gt;= 3.6, so assert this and omit PY2 conditional.</li>\n<li>Handle premature calls to transition_to_static.</li>\n<li>Don't use experiment stop_time to set acquisition timeout, as doing so delays<br />\n  the loop in grab_multiple, and thus the effect of camera.abort_acquisition().<br />\n  Acquisition timeouts greater than 5s are likely to cause Camera.abort()<br />\n  to timeout, crashing the device tab of the camera.</li>\n<li>Print statement at end of grab_multiple reports \"M of N frames\".</li>\n<li>If the acquisition thread is alive when transition_to_static is called, call<br />\n  abort() (since we are not returning the incomplete list of images anyway).</li>\n<li>Fixed bug in abort where camera._abort_acquisition wasn't being reset, leading<br />\n  to erroneous abort in subsequent shot(s).</li>\n<li>Removed extraneous commented code.</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "47a230be674ce301d817deb29cbebf90a1705f93", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/47a230be674ce301d817deb29cbebf90a1705f93.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/47a230be674ce301d817deb29cbebf90a1705f93"}}}], "date": "2018-11-19T06:35:29+00:00", "message": "* This script requires Python >= 3.6, so assert this and omit PY2 conditional.\n* Handle premature calls to transition_to_static.\n* Don't use experiment stop_time to set acquisition timeout, as doing so delays\n  the loop in grab_multiple, and thus the effect of camera.abort_acquisition().\n  Acquisition timeouts greater than 5s are likely to cause Camera.abort()\n  to timeout, crashing the device tab of the camera.\n* Print statement at end of grab_multiple reports \"M of N frames\".\n* If the acquisition thread is alive when transition_to_static is called, call\n  abort() (since we are not returning the incomplete list of images anyway).\n* Fixed bug in abort where camera._abort_acquisition wasn't being reset, leading\n  to erroneous abort in subsequent shot(s).\n* Removed extraneous commented code.", "type": "commit"}, {"rendered": {"message": {"raw": "IMAQdx_Camera:\n* Permit float type in set_attribute.\n\nIMAQdxCameraServer:\n* Added image_path, named_exposures, and imageify kwargs.\n* Fixed bug in transition_to_buffered (cam should be self.camera)\n* transition_to_static:\n   - Base image path in h5 file on image_path prefix\n   - Append orientation to image path (camera_name if orientation unspecified)\n   - Add IMAQdx attributes ExposureTimeAbs, Width, Height, & Binning parameters\n     (if they exist) to the image group.\n   - Save separate datasets for each named frame if named_exposures is True.\n   - Use HDF5 image attributes to make images viewable in HDFView if imageify.\n\nGeneral:\n* kwargs for IMAQdxCameraServer pulled from LabConfig (optional).\n* Code cleanup including path, year, and authors in header.", "markup": "markdown", "html": "<p>IMAQdx_Camera:<br />\n* Permit float type in set_attribute.</p>\n<p>IMAQdxCameraServer:<br />\n<em> Added image_path, named_exposures, and imageify kwargs.<br />\n</em> Fixed bug in transition_to_buffered (cam should be self.camera)<br />\n* transition_to_static:<br />\n   - Base image path in h5 file on image_path prefix<br />\n   - Append orientation to image path (camera_name if orientation unspecified)<br />\n   - Add IMAQdx attributes ExposureTimeAbs, Width, Height, &amp; Binning parameters<br />\n     (if they exist) to the image group.<br />\n   - Save separate datasets for each named frame if named_exposures is True.<br />\n   - Use HDF5 image attributes to make images viewable in HDFView if imageify.</p>\n<p>General:<br />\n<em> kwargs for IMAQdxCameraServer pulled from LabConfig (optional).<br />\n</em> Code cleanup including path, year, and authors in header.</p>", "type": "rendered"}}, "hash": "47a230be674ce301d817deb29cbebf90a1705f93", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/47a230be674ce301d817deb29cbebf90a1705f93.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/47a230be674ce301d817deb29cbebf90a1705f93/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/47a230be674ce301d817deb29cbebf90a1705f93"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/47a230be674ce301d817deb29cbebf90a1705f93"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/47a230be674ce301d817deb29cbebf90a1705f93"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/47a230be674ce301d817deb29cbebf90a1705f93/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/47a230be674ce301d817deb29cbebf90a1705f93/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "IMAQdx_Camera:\n* Permit float type in set_attribute.\n\nIMAQdxCameraServer:\n* Added image_path, named_exposures, and imageify kwargs.\n* Fixed bug in transition_to_buffered (cam should be self.camera)\n* transition_to_static:\n   - Base image path in h5 file on image_path prefix\n   - Append orientation to image path (camera_name if orientation unspecified)\n   - Add IMAQdx attributes ExposureTimeAbs, Width, Height, & Binning parameters\n     (if they exist) to the image group.\n   - Save separate datasets for each named frame if named_exposures is True.\n   - Use HDF5 image attributes to make images viewable in HDFView if imageify.\n\nGeneral:\n* kwargs for IMAQdxCameraServer pulled from LabConfig (optional).\n* Code cleanup including path, year, and authors in header.", "markup": "markdown", "html": "<p>IMAQdx_Camera:<br />\n* Permit float type in set_attribute.</p>\n<p>IMAQdxCameraServer:<br />\n<em> Added image_path, named_exposures, and imageify kwargs.<br />\n</em> Fixed bug in transition_to_buffered (cam should be self.camera)<br />\n* transition_to_static:<br />\n   - Base image path in h5 file on image_path prefix<br />\n   - Append orientation to image path (camera_name if orientation unspecified)<br />\n   - Add IMAQdx attributes ExposureTimeAbs, Width, Height, &amp; Binning parameters<br />\n     (if they exist) to the image group.<br />\n   - Save separate datasets for each named frame if named_exposures is True.<br />\n   - Use HDF5 image attributes to make images viewable in HDFView if imageify.</p>\n<p>General:<br />\n<em> kwargs for IMAQdxCameraServer pulled from LabConfig (optional).<br />\n</em> Code cleanup including path, year, and authors in header.</p>", "type": "rendered"}, "parents": [{"hash": "c1d982bf2bfc55aa836974fc85bfee27bd832aa3", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/c1d982bf2bfc55aa836974fc85bfee27bd832aa3.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/c1d982bf2bfc55aa836974fc85bfee27bd832aa3"}}}], "date": "2018-11-17T00:32:49+00:00", "message": "IMAQdx_Camera:\n* Permit float type in set_attribute.\n\nIMAQdxCameraServer:\n* Added image_path, named_exposures, and imageify kwargs.\n* Fixed bug in transition_to_buffered (cam should be self.camera)\n* transition_to_static:\n   - Base image path in h5 file on image_path prefix\n   - Append orientation to image path (camera_name if orientation unspecified)\n   - Add IMAQdx attributes ExposureTimeAbs, Width, Height, & Binning parameters\n     (if they exist) to the image group.\n   - Save separate datasets for each named frame if named_exposures is True.\n   - Use HDF5 image attributes to make images viewable in HDFView if imageify.\n\nGeneral:\n* kwargs for IMAQdxCameraServer pulled from LabConfig (optional).\n* Code cleanup including path, year, and authors in header.", "type": "commit"}, {"rendered": {"message": {"raw": "transition_to_buffered:\n* Define exposures attribute to be used by transition_to_static when saving\n  images by name.\n* Use labscript_utils to get device_properties.\n* Attempt to get stop time of experiment by walking the device heirarchy, to\n  inform acquisition timeout.\n* Set exposure time and acquisition timeout explicitly, and any IMAQdx\n  properties specified in added_properties.\n* Get exposure_time, width, height (mandatory) and binning and pixel format\n  (optional) to write as per-shot attributes in transition_to_static.", "markup": "markdown", "html": "<p>transition_to_buffered:<br />\n<em> Define exposures attribute to be used by transition_to_static when saving<br />\n  images by name.</em> Use labscript_utils to get device_properties.<br />\n<em> Attempt to get stop time of experiment by walking the device heirarchy, to<br />\n  inform acquisition timeout.</em> Set exposure time and acquisition timeout explicitly, and any IMAQdx<br />\n  properties specified in added_properties.<br />\n* Get exposure_time, width, height (mandatory) and binning and pixel format<br />\n  (optional) to write as per-shot attributes in transition_to_static.</p>", "type": "rendered"}}, "hash": "c1d982bf2bfc55aa836974fc85bfee27bd832aa3", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/c1d982bf2bfc55aa836974fc85bfee27bd832aa3.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/c1d982bf2bfc55aa836974fc85bfee27bd832aa3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/c1d982bf2bfc55aa836974fc85bfee27bd832aa3"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/c1d982bf2bfc55aa836974fc85bfee27bd832aa3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/c1d982bf2bfc55aa836974fc85bfee27bd832aa3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/c1d982bf2bfc55aa836974fc85bfee27bd832aa3/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/c1d982bf2bfc55aa836974fc85bfee27bd832aa3/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "transition_to_buffered:\n* Define exposures attribute to be used by transition_to_static when saving\n  images by name.\n* Use labscript_utils to get device_properties.\n* Attempt to get stop time of experiment by walking the device heirarchy, to\n  inform acquisition timeout.\n* Set exposure time and acquisition timeout explicitly, and any IMAQdx\n  properties specified in added_properties.\n* Get exposure_time, width, height (mandatory) and binning and pixel format\n  (optional) to write as per-shot attributes in transition_to_static.", "markup": "markdown", "html": "<p>transition_to_buffered:<br />\n<em> Define exposures attribute to be used by transition_to_static when saving<br />\n  images by name.</em> Use labscript_utils to get device_properties.<br />\n<em> Attempt to get stop time of experiment by walking the device heirarchy, to<br />\n  inform acquisition timeout.</em> Set exposure time and acquisition timeout explicitly, and any IMAQdx<br />\n  properties specified in added_properties.<br />\n* Get exposure_time, width, height (mandatory) and binning and pixel format<br />\n  (optional) to write as per-shot attributes in transition_to_static.</p>", "type": "rendered"}, "parents": [{"hash": "2f104118e4a751fbde34d5a82fcf66bea2abda34", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/2f104118e4a751fbde34d5a82fcf66bea2abda34.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/2f104118e4a751fbde34d5a82fcf66bea2abda34"}}}], "date": "2018-11-16T21:59:00+00:00", "message": "transition_to_buffered:\n* Define exposures attribute to be used by transition_to_static when saving\n  images by name.\n* Use labscript_utils to get device_properties.\n* Attempt to get stop time of experiment by walking the device heirarchy, to\n  inform acquisition timeout.\n* Set exposure time and acquisition timeout explicitly, and any IMAQdx\n  properties specified in added_properties.\n* Get exposure_time, width, height (mandatory) and binning and pixel format\n  (optional) to write as per-shot attributes in transition_to_static.", "type": "commit"}, {"rendered": {"message": {"raw": "* Amended typo in function name configure_aqqisition.\n* Increased verbosity of print statements in grab_multiple.", "markup": "markdown", "html": "<ul>\n<li>Amended typo in function name configure_aqqisition.</li>\n<li>Increased verbosity of print statements in grab_multiple.</li>\n</ul>", "type": "rendered"}}, "hash": "2f104118e4a751fbde34d5a82fcf66bea2abda34", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/labscript_devices.json"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/2f104118e4a751fbde34d5a82fcf66bea2abda34.json"}, "comments": {"href": "data/repositories/dsbarker/labscript_devices/commit/2f104118e4a751fbde34d5a82fcf66bea2abda34/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/patch/2f104118e4a751fbde34d5a82fcf66bea2abda34"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/2f104118e4a751fbde34d5a82fcf66bea2abda34"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/diff/2f104118e4a751fbde34d5a82fcf66bea2abda34"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/2f104118e4a751fbde34d5a82fcf66bea2abda34/approve"}, "statuses": {"href": "data/repositories/dsbarker/labscript_devices/commit/2f104118e4a751fbde34d5a82fcf66bea2abda34/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "* Amended typo in function name configure_aqqisition.\n* Increased verbosity of print statements in grab_multiple.", "markup": "markdown", "html": "<ul>\n<li>Amended typo in function name configure_aqqisition.</li>\n<li>Increased verbosity of print statements in grab_multiple.</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "a1325f1a481f8421e3d361d294499fc7c8f022e2", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/labscript_devices/commit/a1325f1a481f8421e3d361d294499fc7c8f022e2.json"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/a1325f1a481f8421e3d361d294499fc7c8f022e2"}}}], "date": "2018-11-16T21:44:08+00:00", "message": "* Amended typo in function name configure_aqqisition.\n* Increased verbosity of print statements in grab_multiple.", "type": "commit"}], "next": "data/repositories/dsbarker/labscript_devices/commits/2.5.0_page=3.json"}