{"rendered": {"message": {"raw": "Implement `raw` kwarg for `remote.set_globals()` and `remote.get_globals()`.\nif set to True (default is False), then globals values are accepted and returned\n as string expressions as stored in the HDF5 file and runmanager GUI.\nOtherwise they are treated as python objects, and are `repr()`'d before setting\nand `eval()`'d (by runmanager the usual way) upon getting.\n\nComment out `get_globals_full()` and `set_globals_full()` for now since I'm\nnot sure what they should do exactly, though obviously setting and getting more\nthings will need to be added to the remote API in some way.", "markup": "markdown", "html": "<p>Implement <code>raw</code> kwarg for <code>remote.set_globals()</code> and <code>remote.get_globals()</code>.<br />\nif set to True (default is False), then globals values are accepted and returned<br />\n as string expressions as stored in the HDF5 file and runmanager GUI.<br />\nOtherwise they are treated as python objects, and are <code>repr()</code>'d before setting<br />\nand <code>eval()</code>'d (by runmanager the usual way) upon getting.</p>\n<p>Comment out <code>get_globals_full()</code> and <code>set_globals_full()</code> for now since I'm<br />\nnot sure what they should do exactly, though obviously setting and getting more<br />\nthings will need to be added to the remote API in some way.</p>", "type": "rendered"}}, "hash": "354b4f92892db9d4e3f2a6b00873978f3643f2ec", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/runmanager.json"}, "html": {"href": "#!/dsbarker/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{734e289d-d45d-4993-a92d-c7b7216a361e}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "dsbarker/runmanager", "uuid": "{734e289d-d45d-4993-a92d-c7b7216a361e}"}, "links": {"self": {"href": "data/repositories/dsbarker/runmanager/commit/354b4f92892db9d4e3f2a6b00873978f3643f2ec.json"}, "comments": {"href": "data/repositories/dsbarker/runmanager/commit/354b4f92892db9d4e3f2a6b00873978f3643f2ec/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/runmanager/patch/354b4f92892db9d4e3f2a6b00873978f3643f2ec"}, "html": {"href": "#!/dsbarker/runmanager/commits/354b4f92892db9d4e3f2a6b00873978f3643f2ec"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/runmanager/diff/354b4f92892db9d4e3f2a6b00873978f3643f2ec"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/runmanager/commit/354b4f92892db9d4e3f2a6b00873978f3643f2ec/approve"}, "statuses": {"href": "data/repositories/dsbarker/runmanager/commit/354b4f92892db9d4e3f2a6b00873978f3643f2ec/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Implement `raw` kwarg for `remote.set_globals()` and `remote.get_globals()`.\nif set to True (default is False), then globals values are accepted and returned\n as string expressions as stored in the HDF5 file and runmanager GUI.\nOtherwise they are treated as python objects, and are `repr()`'d before setting\nand `eval()`'d (by runmanager the usual way) upon getting.\n\nComment out `get_globals_full()` and `set_globals_full()` for now since I'm\nnot sure what they should do exactly, though obviously setting and getting more\nthings will need to be added to the remote API in some way.", "markup": "markdown", "html": "<p>Implement <code>raw</code> kwarg for <code>remote.set_globals()</code> and <code>remote.get_globals()</code>.<br />\nif set to True (default is False), then globals values are accepted and returned<br />\n as string expressions as stored in the HDF5 file and runmanager GUI.<br />\nOtherwise they are treated as python objects, and are <code>repr()</code>'d before setting<br />\nand <code>eval()</code>'d (by runmanager the usual way) upon getting.</p>\n<p>Comment out <code>get_globals_full()</code> and <code>set_globals_full()</code> for now since I'm<br />\nnot sure what they should do exactly, though obviously setting and getting more<br />\nthings will need to be added to the remote API in some way.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "fed4c76930a43953d942ee6c246cb2a362e7ae87", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/runmanager/commit/fed4c76930a43953d942ee6c246cb2a362e7ae87.json"}, "html": {"href": "#!/dsbarker/runmanager/commits/fed4c76930a43953d942ee6c246cb2a362e7ae87"}}}], "date": "2019-05-09T16:59:06+00:00", "message": "Implement `raw` kwarg for `remote.set_globals()` and `remote.get_globals()`.\nif set to True (default is False), then globals values are accepted and returned\n as string expressions as stored in the HDF5 file and runmanager GUI.\nOtherwise they are treated as python objects, and are `repr()`'d before setting\nand `eval()`'d (by runmanager the usual way) upon getting.\n\nComment out `get_globals_full()` and `set_globals_full()` for now since I'm\nnot sure what they should do exactly, though obviously setting and getting more\nthings will need to be added to the remote API in some way.", "type": "commit", "git_hash": "eabf1aaf7a4c97adce4dcc6ca038087c118e2dd7", "tags": null, "branches": "remote"}