{"rendered": {"message": {"raw": "Remove use of NetworkOnlyLock, which no longer exists in h5_lock.\nThis was an accidental break in backward compatibility.\n\nNetworkOnlyLocks worked by acquiring a zlock lock once before many openings\nand closings og a h5 file, and those openings and closings used regular in-process\nthreading.RLocks. This reduced network traffic.\n\nThe complexity of reimplementing NetworkOnlyLocks is not worth the slight\nperformance improvement in my opinion. It would be easier to refactor how\nrunmanager opens globals to pass around an already opened file instead. It is\nalways possible to refactor code in this way, so that should be the preferred\napproach if we encounter performance issues with repeated file openings in\nthe future.", "markup": "markdown", "html": "<p>Remove use of NetworkOnlyLock, which no longer exists in h5_lock.<br />\nThis was an accidental break in backward compatibility.</p>\n<p>NetworkOnlyLocks worked by acquiring a zlock lock once before many openings<br />\nand closings og a h5 file, and those openings and closings used regular in-process<br />\nthreading.RLocks. This reduced network traffic.</p>\n<p>The complexity of reimplementing NetworkOnlyLocks is not worth the slight<br />\nperformance improvement in my opinion. It would be easier to refactor how<br />\nrunmanager opens globals to pass around an already opened file instead. It is<br />\nalways possible to refactor code in this way, so that should be the preferred<br />\napproach if we encounter performance issues with repeated file openings in<br />\nthe future.</p>", "type": "rendered"}}, "hash": "f7aa92be46188b094d611975108df53fc6d674c7", "repository": {"links": {"self": {"href": "data/repositories/dsbarker/runmanager.json"}, "html": {"href": "#!/dsbarker/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{734e289d-d45d-4993-a92d-c7b7216a361e}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "dsbarker/runmanager", "uuid": "{734e289d-d45d-4993-a92d-c7b7216a361e}"}, "links": {"self": {"href": "data/repositories/dsbarker/runmanager/commit/f7aa92be46188b094d611975108df53fc6d674c7.json"}, "comments": {"href": "data/repositories/dsbarker/runmanager/commit/f7aa92be46188b094d611975108df53fc6d674c7/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/runmanager/patch/f7aa92be46188b094d611975108df53fc6d674c7"}, "html": {"href": "#!/dsbarker/runmanager/commits/f7aa92be46188b094d611975108df53fc6d674c7"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/runmanager/diff/f7aa92be46188b094d611975108df53fc6d674c7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/runmanager/commit/f7aa92be46188b094d611975108df53fc6d674c7/approve"}, "statuses": {"href": "data/repositories/dsbarker/runmanager/commit/f7aa92be46188b094d611975108df53fc6d674c7/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Remove use of NetworkOnlyLock, which no longer exists in h5_lock.\nThis was an accidental break in backward compatibility.\n\nNetworkOnlyLocks worked by acquiring a zlock lock once before many openings\nand closings og a h5 file, and those openings and closings used regular in-process\nthreading.RLocks. This reduced network traffic.\n\nThe complexity of reimplementing NetworkOnlyLocks is not worth the slight\nperformance improvement in my opinion. It would be easier to refactor how\nrunmanager opens globals to pass around an already opened file instead. It is\nalways possible to refactor code in this way, so that should be the preferred\napproach if we encounter performance issues with repeated file openings in\nthe future.", "markup": "markdown", "html": "<p>Remove use of NetworkOnlyLock, which no longer exists in h5_lock.<br />\nThis was an accidental break in backward compatibility.</p>\n<p>NetworkOnlyLocks worked by acquiring a zlock lock once before many openings<br />\nand closings og a h5 file, and those openings and closings used regular in-process<br />\nthreading.RLocks. This reduced network traffic.</p>\n<p>The complexity of reimplementing NetworkOnlyLocks is not worth the slight<br />\nperformance improvement in my opinion. It would be easier to refactor how<br />\nrunmanager opens globals to pass around an already opened file instead. It is<br />\nalways possible to refactor code in this way, so that should be the preferred<br />\napproach if we encounter performance issues with repeated file openings in<br />\nthe future.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "0560265254083814421b08fbfcbcde4984c9d846", "type": "commit", "links": {"self": {"href": "data/repositories/dsbarker/runmanager/commit/0560265254083814421b08fbfcbcde4984c9d846.json"}, "html": {"href": "#!/dsbarker/runmanager/commits/0560265254083814421b08fbfcbcde4984c9d846"}}}], "date": "2019-03-28T21:45:54+00:00", "message": "Remove use of NetworkOnlyLock, which no longer exists in h5_lock.\nThis was an accidental break in backward compatibility.\n\nNetworkOnlyLocks worked by acquiring a zlock lock once before many openings\nand closings og a h5 file, and those openings and closings used regular in-process\nthreading.RLocks. This reduced network traffic.\n\nThe complexity of reimplementing NetworkOnlyLocks is not worth the slight\nperformance improvement in my opinion. It would be easier to refactor how\nrunmanager opens globals to pass around an already opened file instead. It is\nalways possible to refactor code in this way, so that should be the preferred\napproach if we encounter performance issues with repeated file openings in\nthe future.", "type": "commit", "git_hash": "c41232c180ac6fcb64f0a402344d09695b246091", "tags": null, "branches": "bugfix"}