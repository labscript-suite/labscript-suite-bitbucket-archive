{"pagelen": 100, "previous": "data/repositories/labscript_suite/blacs/commits/pstarkey/changed-loggererror-to-loggerexception-i-1507071611996_page=3.json", "values": [{"rendered": {"message": {"raw": "Cleaned up imports a little (still some improvements to be made)", "markup": "markdown", "html": "<p>Cleaned up imports a little (still some improvements to be made)</p>", "type": "rendered"}}, "hash": "2d1d0527a6b060599a8f87c451b7ce76aa2da1a9", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/2d1d0527a6b060599a8f87c451b7ce76aa2da1a9.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/2d1d0527a6b060599a8f87c451b7ce76aa2da1a9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/2d1d0527a6b060599a8f87c451b7ce76aa2da1a9"}, "html": {"href": "#!/labscript_suite/blacs/commits/2d1d0527a6b060599a8f87c451b7ce76aa2da1a9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/2d1d0527a6b060599a8f87c451b7ce76aa2da1a9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/2d1d0527a6b060599a8f87c451b7ce76aa2da1a9/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/2d1d0527a6b060599a8f87c451b7ce76aa2da1a9/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Cleaned up imports a little (still some improvements to be made)", "markup": "markdown", "html": "<p>Cleaned up imports a little (still some improvements to be made)</p>", "type": "rendered"}, "parents": [{"hash": "6c548b3d8f207579c57f2316cdd15d57b5c4b6fe", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/6c548b3d8f207579c57f2316cdd15d57b5c4b6fe.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/6c548b3d8f207579c57f2316cdd15d57b5c4b6fe"}}}], "date": "2013-11-04T05:56:19+00:00", "message": "Cleaned up imports a little (still some improvements to be made)", "type": "commit"}, {"rendered": {"message": {"raw": "Put a giant try/except statement around the queuemanager thread so it should never hard crash and stop running", "markup": "markdown", "html": "<p>Put a giant try/except statement around the queuemanager thread so it should never hard crash and stop running</p>", "type": "rendered"}}, "hash": "6c548b3d8f207579c57f2316cdd15d57b5c4b6fe", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/6c548b3d8f207579c57f2316cdd15d57b5c4b6fe.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/6c548b3d8f207579c57f2316cdd15d57b5c4b6fe/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/6c548b3d8f207579c57f2316cdd15d57b5c4b6fe"}, "html": {"href": "#!/labscript_suite/blacs/commits/6c548b3d8f207579c57f2316cdd15d57b5c4b6fe"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/6c548b3d8f207579c57f2316cdd15d57b5c4b6fe"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/6c548b3d8f207579c57f2316cdd15d57b5c4b6fe/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/6c548b3d8f207579c57f2316cdd15d57b5c4b6fe/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Put a giant try/except statement around the queuemanager thread so it should never hard crash and stop running", "markup": "markdown", "html": "<p>Put a giant try/except statement around the queuemanager thread so it should never hard crash and stop running</p>", "type": "rendered"}, "parents": [{"hash": "772f2dbbd5623fbcd93395d49a815fbfa1567ecc", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/772f2dbbd5623fbcd93395d49a815fbfa1567ecc.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/772f2dbbd5623fbcd93395d49a815fbfa1567ecc"}}}], "date": "2013-10-25T05:49:38+00:00", "message": "Put a giant try/except statement around the queuemanager thread so it should never hard crash and stop running", "type": "commit"}, {"rendered": {"message": {"raw": "Improved save/load behaviour\n\n* The queue now saves/restores it's state\n* If you restore a front panel via the file menu, it will override the queue and analysis submission state completely", "markup": "markdown", "html": "<p>Improved save/load behaviour</p>\n<ul>\n<li>The queue now saves/restores it's state</li>\n<li>If you restore a front panel via the file menu, it will override the queue and analysis submission state completely</li>\n</ul>", "type": "rendered"}}, "hash": "772f2dbbd5623fbcd93395d49a815fbfa1567ecc", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/772f2dbbd5623fbcd93395d49a815fbfa1567ecc.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/772f2dbbd5623fbcd93395d49a815fbfa1567ecc/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/772f2dbbd5623fbcd93395d49a815fbfa1567ecc"}, "html": {"href": "#!/labscript_suite/blacs/commits/772f2dbbd5623fbcd93395d49a815fbfa1567ecc"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/772f2dbbd5623fbcd93395d49a815fbfa1567ecc"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/772f2dbbd5623fbcd93395d49a815fbfa1567ecc/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/772f2dbbd5623fbcd93395d49a815fbfa1567ecc/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Improved save/load behaviour\n\n* The queue now saves/restores it's state\n* If you restore a front panel via the file menu, it will override the queue and analysis submission state completely", "markup": "markdown", "html": "<p>Improved save/load behaviour</p>\n<ul>\n<li>The queue now saves/restores it's state</li>\n<li>If you restore a front panel via the file menu, it will override the queue and analysis submission state completely</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "52a074e96ce324e35c0e83a8094f7728403fe90b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/52a074e96ce324e35c0e83a8094f7728403fe90b.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/52a074e96ce324e35c0e83a8094f7728403fe90b"}}}], "date": "2013-10-25T05:14:52+00:00", "message": "Improved save/load behaviour\n\n* The queue now saves/restores it's state\n* If you restore a front panel via the file menu, it will override the queue and analysis submission state completely", "type": "commit"}, {"rendered": {"message": {"raw": "Added analysis submission\n\nAnalysis submission settings saved/restored more consistently\nAnalysis submission less complex (checking state of remote host done automatically now)", "markup": "markdown", "html": "<p>Added analysis submission</p>\n<p>Analysis submission settings saved/restored more consistently<br />\nAnalysis submission less complex (checking state of remote host done automatically now)</p>", "type": "rendered"}}, "hash": "52a074e96ce324e35c0e83a8094f7728403fe90b", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/52a074e96ce324e35c0e83a8094f7728403fe90b.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/52a074e96ce324e35c0e83a8094f7728403fe90b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/52a074e96ce324e35c0e83a8094f7728403fe90b"}, "html": {"href": "#!/labscript_suite/blacs/commits/52a074e96ce324e35c0e83a8094f7728403fe90b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/52a074e96ce324e35c0e83a8094f7728403fe90b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/52a074e96ce324e35c0e83a8094f7728403fe90b/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/52a074e96ce324e35c0e83a8094f7728403fe90b/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added analysis submission\n\nAnalysis submission settings saved/restored more consistently\nAnalysis submission less complex (checking state of remote host done automatically now)", "markup": "markdown", "html": "<p>Added analysis submission</p>\n<p>Analysis submission settings saved/restored more consistently<br />\nAnalysis submission less complex (checking state of remote host done automatically now)</p>", "type": "rendered"}, "parents": [{"hash": "a0414e1a63ee7c647c5886a241768ae7cb2c03b7", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/a0414e1a63ee7c647c5886a241768ae7cb2c03b7.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/a0414e1a63ee7c647c5886a241768ae7cb2c03b7"}}}], "date": "2013-10-25T04:32:33+00:00", "message": "Added analysis submission\n\nAnalysis submission settings saved/restored more consistently\nAnalysis submission less complex (checking state of remote host done automatically now)", "type": "commit"}, {"rendered": {"message": {"raw": "Updated BLACS to use latest version of qtutils.UiLoader\n\nPlease make sure you have qtutils changeset:7dae37c9f1f2 or later when running this version of BLACS.", "markup": "markdown", "html": "<p>Updated BLACS to use latest version of qtutils.UiLoader</p>\n<p>Please make sure you have qtutils changeset:<a href=\"#!/labscript_suite/blacs/commits/7dae37c9f1f2\" rel=\"nofollow\" class=\"ap-connect-link\">7dae37c9f1f2</a> or later when running this version of BLACS.</p>", "type": "rendered"}}, "hash": "a0414e1a63ee7c647c5886a241768ae7cb2c03b7", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/a0414e1a63ee7c647c5886a241768ae7cb2c03b7.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/a0414e1a63ee7c647c5886a241768ae7cb2c03b7/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/a0414e1a63ee7c647c5886a241768ae7cb2c03b7"}, "html": {"href": "#!/labscript_suite/blacs/commits/a0414e1a63ee7c647c5886a241768ae7cb2c03b7"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/a0414e1a63ee7c647c5886a241768ae7cb2c03b7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/a0414e1a63ee7c647c5886a241768ae7cb2c03b7/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/a0414e1a63ee7c647c5886a241768ae7cb2c03b7/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Updated BLACS to use latest version of qtutils.UiLoader\n\nPlease make sure you have qtutils changeset:7dae37c9f1f2 or later when running this version of BLACS.", "markup": "markdown", "html": "<p>Updated BLACS to use latest version of qtutils.UiLoader</p>\n<p>Please make sure you have qtutils changeset:<a href=\"#!/labscript_suite/blacs/commits/7dae37c9f1f2\" rel=\"nofollow\" class=\"ap-connect-link\">7dae37c9f1f2</a> or later when running this version of BLACS.</p>", "type": "rendered"}, "parents": [{"hash": "f310b3b5dec10b16ca082f0b817d542a9ac32634", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/f310b3b5dec10b16ca082f0b817d542a9ac32634.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/f310b3b5dec10b16ca082f0b817d542a9ac32634"}}}], "date": "2013-10-25T02:25:02+00:00", "message": "Updated BLACS to use latest version of qtutils.UiLoader\n\nPlease make sure you have qtutils changeset:7dae37c9f1f2 or later when running this version of BLACS.", "type": "commit"}, {"rendered": {"message": {"raw": "Implemented drag/drop into queuemanager\n\nAlso implemented \"delete\" key to delete selected items from queue manager\nFixed a bug where the new_rep_name function hadn't been moved across to the QueueManager class\nFixed a bug where the process_request function was not using the correct logger variable", "markup": "markdown", "html": "<p>Implemented drag/drop into queuemanager</p>\n<p>Also implemented \"delete\" key to delete selected items from queue manager<br />\nFixed a bug where the new_rep_name function hadn't been moved across to the QueueManager class<br />\nFixed a bug where the process_request function was not using the correct logger variable</p>", "type": "rendered"}}, "hash": "f310b3b5dec10b16ca082f0b817d542a9ac32634", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/f310b3b5dec10b16ca082f0b817d542a9ac32634.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/f310b3b5dec10b16ca082f0b817d542a9ac32634/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/f310b3b5dec10b16ca082f0b817d542a9ac32634"}, "html": {"href": "#!/labscript_suite/blacs/commits/f310b3b5dec10b16ca082f0b817d542a9ac32634"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/f310b3b5dec10b16ca082f0b817d542a9ac32634"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/f310b3b5dec10b16ca082f0b817d542a9ac32634/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/f310b3b5dec10b16ca082f0b817d542a9ac32634/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Implemented drag/drop into queuemanager\n\nAlso implemented \"delete\" key to delete selected items from queue manager\nFixed a bug where the new_rep_name function hadn't been moved across to the QueueManager class\nFixed a bug where the process_request function was not using the correct logger variable", "markup": "markdown", "html": "<p>Implemented drag/drop into queuemanager</p>\n<p>Also implemented \"delete\" key to delete selected items from queue manager<br />\nFixed a bug where the new_rep_name function hadn't been moved across to the QueueManager class<br />\nFixed a bug where the process_request function was not using the correct logger variable</p>", "type": "rendered"}, "parents": [{"hash": "719bcb7ff5eb84163bc8d15f1d9b7385760966d5", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/719bcb7ff5eb84163bc8d15f1d9b7385760966d5.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/719bcb7ff5eb84163bc8d15f1d9b7385760966d5"}}}], "date": "2013-10-24T11:07:50+00:00", "message": "Implemented drag/drop into queuemanager\n\nAlso implemented \"delete\" key to delete selected items from queue manager\nFixed a bug where the new_rep_name function hadn't been moved across to the QueueManager class\nFixed a bug where the process_request function was not using the correct logger variable", "type": "commit"}, {"rendered": {"message": {"raw": "Implemented QueueManager\n\nInitial testing indicates the queuemanager works (obviously haven't attempted to run with actual hardware yet)\nPartially attempted to implement drag/drop onto the treeview to add files, but doesn't work yet\nImplemented shared_drive module for paths submitted from runmanager\nNote: Use updated qtutils (changeset:f29e2ba6c4f1)", "markup": "markdown", "html": "<p>Implemented QueueManager</p>\n<p>Initial testing indicates the queuemanager works (obviously haven't attempted to run with actual hardware yet)<br />\nPartially attempted to implement drag/drop onto the treeview to add files, but doesn't work yet<br />\nImplemented shared_drive module for paths submitted from runmanager<br />\nNote: Use updated qtutils (changeset:<a href=\"#!/labscript_suite/blacs/commits/f29e2ba6c4f1\" rel=\"nofollow\" class=\"ap-connect-link\">f29e2ba6c4f1</a>)</p>", "type": "rendered"}}, "hash": "719bcb7ff5eb84163bc8d15f1d9b7385760966d5", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/719bcb7ff5eb84163bc8d15f1d9b7385760966d5.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/719bcb7ff5eb84163bc8d15f1d9b7385760966d5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/719bcb7ff5eb84163bc8d15f1d9b7385760966d5"}, "html": {"href": "#!/labscript_suite/blacs/commits/719bcb7ff5eb84163bc8d15f1d9b7385760966d5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/719bcb7ff5eb84163bc8d15f1d9b7385760966d5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/719bcb7ff5eb84163bc8d15f1d9b7385760966d5/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/719bcb7ff5eb84163bc8d15f1d9b7385760966d5/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Implemented QueueManager\n\nInitial testing indicates the queuemanager works (obviously haven't attempted to run with actual hardware yet)\nPartially attempted to implement drag/drop onto the treeview to add files, but doesn't work yet\nImplemented shared_drive module for paths submitted from runmanager\nNote: Use updated qtutils (changeset:f29e2ba6c4f1)", "markup": "markdown", "html": "<p>Implemented QueueManager</p>\n<p>Initial testing indicates the queuemanager works (obviously haven't attempted to run with actual hardware yet)<br />\nPartially attempted to implement drag/drop onto the treeview to add files, but doesn't work yet<br />\nImplemented shared_drive module for paths submitted from runmanager<br />\nNote: Use updated qtutils (changeset:<a href=\"#!/labscript_suite/blacs/commits/f29e2ba6c4f1\" rel=\"nofollow\" class=\"ap-connect-link\">f29e2ba6c4f1</a>)</p>", "type": "rendered"}, "parents": [{"hash": "c7dac2faaac3c5b78b9fa8d023f12751f96eaec2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/c7dac2faaac3c5b78b9fa8d023f12751f96eaec2.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/c7dac2faaac3c5b78b9fa8d023f12751f96eaec2"}}}], "date": "2013-10-24T07:10:20+00:00", "message": "Implemented QueueManager\n\nInitial testing indicates the queuemanager works (obviously haven't attempted to run with actual hardware yet)\nPartially attempted to implement drag/drop onto the treeview to add files, but doesn't work yet\nImplemented shared_drive module for paths submitted from runmanager\nNote: Use updated qtutils (changeset:f29e2ba6c4f1)", "type": "commit"}, {"rendered": {"message": {"raw": "Deleted GTK files from Qt port", "markup": "markdown", "html": "<p>Deleted GTK files from Qt port</p>", "type": "rendered"}}, "hash": "c7dac2faaac3c5b78b9fa8d023f12751f96eaec2", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/c7dac2faaac3c5b78b9fa8d023f12751f96eaec2.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/c7dac2faaac3c5b78b9fa8d023f12751f96eaec2/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/c7dac2faaac3c5b78b9fa8d023f12751f96eaec2"}, "html": {"href": "#!/labscript_suite/blacs/commits/c7dac2faaac3c5b78b9fa8d023f12751f96eaec2"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/c7dac2faaac3c5b78b9fa8d023f12751f96eaec2"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/c7dac2faaac3c5b78b9fa8d023f12751f96eaec2/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/c7dac2faaac3c5b78b9fa8d023f12751f96eaec2/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Deleted GTK files from Qt port", "markup": "markdown", "html": "<p>Deleted GTK files from Qt port</p>", "type": "rendered"}, "parents": [{"hash": "2a370f53032c448d13a26e16abaaa55aab9b5fb4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/2a370f53032c448d13a26e16abaaa55aab9b5fb4.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/2a370f53032c448d13a26e16abaaa55aab9b5fb4"}}}], "date": "2013-10-24T02:39:06+00:00", "message": "Deleted GTK files from Qt port", "type": "commit"}, {"rendered": {"message": {"raw": "Ported experiment server to ZMQ (feature from gtk branch)\n\nAlso cleaned up plugins at shutdown now", "markup": "markdown", "html": "<p>Ported experiment server to ZMQ (feature from gtk branch)</p>\n<p>Also cleaned up plugins at shutdown now</p>", "type": "rendered"}}, "hash": "2a370f53032c448d13a26e16abaaa55aab9b5fb4", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/2a370f53032c448d13a26e16abaaa55aab9b5fb4.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/2a370f53032c448d13a26e16abaaa55aab9b5fb4/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/2a370f53032c448d13a26e16abaaa55aab9b5fb4"}, "html": {"href": "#!/labscript_suite/blacs/commits/2a370f53032c448d13a26e16abaaa55aab9b5fb4"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/2a370f53032c448d13a26e16abaaa55aab9b5fb4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/2a370f53032c448d13a26e16abaaa55aab9b5fb4/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/2a370f53032c448d13a26e16abaaa55aab9b5fb4/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Ported experiment server to ZMQ (feature from gtk branch)\n\nAlso cleaned up plugins at shutdown now", "markup": "markdown", "html": "<p>Ported experiment server to ZMQ (feature from gtk branch)</p>\n<p>Also cleaned up plugins at shutdown now</p>", "type": "rendered"}, "parents": [{"hash": "23174e0bda6d85d0ebce2215d47967d3afe34d0b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/23174e0bda6d85d0ebce2215d47967d3afe34d0b.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/23174e0bda6d85d0ebce2215d47967d3afe34d0b"}}}], "date": "2013-10-24T02:37:04+00:00", "message": "Ported experiment server to ZMQ (feature from gtk branch)\n\nAlso cleaned up plugins at shutdown now", "type": "commit"}, {"rendered": {"message": {"raw": "Changed setup logging to only show info and above in terminal", "markup": "markdown", "html": "<p>Changed setup logging to only show info and above in terminal</p>", "type": "rendered"}}, "hash": "23174e0bda6d85d0ebce2215d47967d3afe34d0b", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/23174e0bda6d85d0ebce2215d47967d3afe34d0b.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/23174e0bda6d85d0ebce2215d47967d3afe34d0b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/23174e0bda6d85d0ebce2215d47967d3afe34d0b"}, "html": {"href": "#!/labscript_suite/blacs/commits/23174e0bda6d85d0ebce2215d47967d3afe34d0b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/23174e0bda6d85d0ebce2215d47967d3afe34d0b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/23174e0bda6d85d0ebce2215d47967d3afe34d0b/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/23174e0bda6d85d0ebce2215d47967d3afe34d0b/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Changed setup logging to only show info and above in terminal", "markup": "markdown", "html": "<p>Changed setup logging to only show info and above in terminal</p>", "type": "rendered"}, "parents": [{"hash": "14d63de233eff054e98fe1d9fb7e64d5d21fb1d1", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/14d63de233eff054e98fe1d9fb7e64d5d21fb1d1.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/14d63de233eff054e98fe1d9fb7e64d5d21fb1d1"}}}], "date": "2013-10-24T02:36:00+00:00", "message": "Changed setup logging to only show info and above in terminal", "type": "commit"}, {"rendered": {"message": {"raw": "Implemented connection_table monitoring\n\n* we now save/restore plugin data\n* Specifically the modified times of watched files, and whether the connection table notification was shown is now restored\n* Compile and restart now closes the notification once successfully recompiled\n* compile and restart will no longer allow you to cancel if the connection table has been recompiled (you MUST restart BLACS after a successful recompile)\n* If the connection table (or associated files) are modified while BLACS is closed, a notification asking you to recompile will be shown", "markup": "markdown", "html": "<p>Implemented connection_table monitoring</p>\n<ul>\n<li>we now save/restore plugin data</li>\n<li>Specifically the modified times of watched files, and whether the connection table notification was shown is now restored</li>\n<li>Compile and restart now closes the notification once successfully recompiled</li>\n<li>compile and restart will no longer allow you to cancel if the connection table has been recompiled (you MUST restart BLACS after a successful recompile)</li>\n<li>If the connection table (or associated files) are modified while BLACS is closed, a notification asking you to recompile will be shown</li>\n</ul>", "type": "rendered"}}, "hash": "14d63de233eff054e98fe1d9fb7e64d5d21fb1d1", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/14d63de233eff054e98fe1d9fb7e64d5d21fb1d1.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/14d63de233eff054e98fe1d9fb7e64d5d21fb1d1/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/14d63de233eff054e98fe1d9fb7e64d5d21fb1d1"}, "html": {"href": "#!/labscript_suite/blacs/commits/14d63de233eff054e98fe1d9fb7e64d5d21fb1d1"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/14d63de233eff054e98fe1d9fb7e64d5d21fb1d1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/14d63de233eff054e98fe1d9fb7e64d5d21fb1d1/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/14d63de233eff054e98fe1d9fb7e64d5d21fb1d1/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Implemented connection_table monitoring\n\n* we now save/restore plugin data\n* Specifically the modified times of watched files, and whether the connection table notification was shown is now restored\n* Compile and restart now closes the notification once successfully recompiled\n* compile and restart will no longer allow you to cancel if the connection table has been recompiled (you MUST restart BLACS after a successful recompile)\n* If the connection table (or associated files) are modified while BLACS is closed, a notification asking you to recompile will be shown", "markup": "markdown", "html": "<p>Implemented connection_table monitoring</p>\n<ul>\n<li>we now save/restore plugin data</li>\n<li>Specifically the modified times of watched files, and whether the connection table notification was shown is now restored</li>\n<li>Compile and restart now closes the notification once successfully recompiled</li>\n<li>compile and restart will no longer allow you to cancel if the connection table has been recompiled (you MUST restart BLACS after a successful recompile)</li>\n<li>If the connection table (or associated files) are modified while BLACS is closed, a notification asking you to recompile will be shown</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "2634add9e48b872dabf85714c8a7609c07f2a7c4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/2634add9e48b872dabf85714c8a7609c07f2a7c4.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/2634add9e48b872dabf85714c8a7609c07f2a7c4"}}}], "date": "2013-10-23T06:31:52+00:00", "message": "Implemented connection_table monitoring\n\n* we now save/restore plugin data\n* Specifically the modified times of watched files, and whether the connection table notification was shown is now restored\n* Compile and restart now closes the notification once successfully recompiled\n* compile and restart will no longer allow you to cancel if the connection table has been recompiled (you MUST restart BLACS after a successful recompile)\n* If the connection table (or associated files) are modified while BLACS is closed, a notification asking you to recompile will be shown", "type": "commit"}, {"rendered": {"message": {"raw": "Plugin notification system now works\n\n* Moved notifications.py over to Qt\n* Modified connection_table plugin to have a notification (notification always shows up after 5s after start as a test, filewatching is not yet written for this plugin)\n* Gave all plugins access to other Plugin() instances\n* saved menu and notification instances for each plugin, in the Plugin() instance so that parts of plugins can interact internally or with other plugins\n* modified the main ui file to scale a bit better (this can still be improved)", "markup": "markdown", "html": "<p>Plugin notification system now works</p>\n<ul>\n<li>Moved notifications.py over to Qt</li>\n<li>Modified connection_table plugin to have a notification (notification always shows up after 5s after start as a test, filewatching is not yet written for this plugin)</li>\n<li>Gave all plugins access to other Plugin() instances</li>\n<li>saved menu and notification instances for each plugin, in the Plugin() instance so that parts of plugins can interact internally or with other plugins</li>\n<li>modified the main ui file to scale a bit better (this can still be improved)</li>\n</ul>", "type": "rendered"}}, "hash": "2634add9e48b872dabf85714c8a7609c07f2a7c4", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/2634add9e48b872dabf85714c8a7609c07f2a7c4.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/2634add9e48b872dabf85714c8a7609c07f2a7c4/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/2634add9e48b872dabf85714c8a7609c07f2a7c4"}, "html": {"href": "#!/labscript_suite/blacs/commits/2634add9e48b872dabf85714c8a7609c07f2a7c4"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/2634add9e48b872dabf85714c8a7609c07f2a7c4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/2634add9e48b872dabf85714c8a7609c07f2a7c4/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/2634add9e48b872dabf85714c8a7609c07f2a7c4/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Plugin notification system now works\n\n* Moved notifications.py over to Qt\n* Modified connection_table plugin to have a notification (notification always shows up after 5s after start as a test, filewatching is not yet written for this plugin)\n* Gave all plugins access to other Plugin() instances\n* saved menu and notification instances for each plugin, in the Plugin() instance so that parts of plugins can interact internally or with other plugins\n* modified the main ui file to scale a bit better (this can still be improved)", "markup": "markdown", "html": "<p>Plugin notification system now works</p>\n<ul>\n<li>Moved notifications.py over to Qt</li>\n<li>Modified connection_table plugin to have a notification (notification always shows up after 5s after start as a test, filewatching is not yet written for this plugin)</li>\n<li>Gave all plugins access to other Plugin() instances</li>\n<li>saved menu and notification instances for each plugin, in the Plugin() instance so that parts of plugins can interact internally or with other plugins</li>\n<li>modified the main ui file to scale a bit better (this can still be improved)</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "f0b86503cb2edc669ef522ade425ca87f4ecde01", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/f0b86503cb2edc669ef522ade425ca87f4ecde01.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/f0b86503cb2edc669ef522ade425ca87f4ecde01"}}}], "date": "2013-10-22T06:14:14+00:00", "message": "Plugin notification system now works\n\n* Moved notifications.py over to Qt\n* Modified connection_table plugin to have a notification (notification always shows up after 5s after start as a test, filewatching is not yet written for this plugin)\n* Gave all plugins access to other Plugin() instances\n* saved menu and notification instances for each plugin, in the Plugin() instance so that parts of plugins can interact internally or with other plugins\n* modified the main ui file to scale a bit better (this can still be improved)", "type": "commit"}, {"rendered": {"message": {"raw": "Removed unneccessary debug code.", "markup": "markdown", "html": "<p>Removed unneccessary debug code.</p>", "type": "rendered"}}, "hash": "f0b86503cb2edc669ef522ade425ca87f4ecde01", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/f0b86503cb2edc669ef522ade425ca87f4ecde01.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/f0b86503cb2edc669ef522ade425ca87f4ecde01/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/f0b86503cb2edc669ef522ade425ca87f4ecde01"}, "html": {"href": "#!/labscript_suite/blacs/commits/f0b86503cb2edc669ef522ade425ca87f4ecde01"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/f0b86503cb2edc669ef522ade425ca87f4ecde01"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/f0b86503cb2edc669ef522ade425ca87f4ecde01/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/f0b86503cb2edc669ef522ade425ca87f4ecde01/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Removed unneccessary debug code.", "markup": "markdown", "html": "<p>Removed unneccessary debug code.</p>", "type": "rendered"}, "parents": [{"hash": "31f084609cc1652f5968b29b65985c4ebe68f9be", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/31f084609cc1652f5968b29b65985c4ebe68f9be.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/31f084609cc1652f5968b29b65985c4ebe68f9be"}}}], "date": "2013-09-06T01:57:58+00:00", "message": "Removed unneccessary debug code.", "type": "commit"}, {"rendered": {"message": {"raw": "Continued work on the \"connection_table\" plugin\n\nMoved all connection table code to the connection table plugin (Except for compile_and_restart.py, which could be used outside of this plugin)\n\nThe specification for plugins is still a work-in-progress, so don't expect this to be the final form!", "markup": "markdown", "html": "<p>Continued work on the \"connection_table\" plugin</p>\n<p>Moved all connection table code to the connection table plugin (Except for compile_and_restart.py, which could be used outside of this plugin)</p>\n<p>The specification for plugins is still a work-in-progress, so don't expect this to be the final form!</p>", "type": "rendered"}}, "hash": "31f084609cc1652f5968b29b65985c4ebe68f9be", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/31f084609cc1652f5968b29b65985c4ebe68f9be.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/31f084609cc1652f5968b29b65985c4ebe68f9be/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/31f084609cc1652f5968b29b65985c4ebe68f9be"}, "html": {"href": "#!/labscript_suite/blacs/commits/31f084609cc1652f5968b29b65985c4ebe68f9be"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/31f084609cc1652f5968b29b65985c4ebe68f9be"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/31f084609cc1652f5968b29b65985c4ebe68f9be/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/31f084609cc1652f5968b29b65985c4ebe68f9be/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Continued work on the \"connection_table\" plugin\n\nMoved all connection table code to the connection table plugin (Except for compile_and_restart.py, which could be used outside of this plugin)\n\nThe specification for plugins is still a work-in-progress, so don't expect this to be the final form!", "markup": "markdown", "html": "<p>Continued work on the \"connection_table\" plugin</p>\n<p>Moved all connection table code to the connection table plugin (Except for compile_and_restart.py, which could be used outside of this plugin)</p>\n<p>The specification for plugins is still a work-in-progress, so don't expect this to be the final form!</p>", "type": "rendered"}, "parents": [{"hash": "261f82aeb25e505fc04f854f856836ef95066aa3", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/261f82aeb25e505fc04f854f856836ef95066aa3.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/261f82aeb25e505fc04f854f856836ef95066aa3"}}}], "date": "2013-08-30T05:08:54+00:00", "message": "Continued work on the \"connection_table\" plugin\n\nMoved all connection table code to the connection table plugin (Except for compile_and_restart.py, which could be used outside of this plugin)\n\nThe specification for plugins is still a work-in-progress, so don't expect this to be the final form!", "type": "commit"}, {"rendered": {"message": {"raw": "Settings pages are now loaded dynamically\n\nWithin each plugin module, a Plugin Class must be specified. This class then returns references to Settings, Menu and Notification classes which define the behaviour for those respective functions.\n\nAt the moment, only the Setttings class is used to populate the preferences dialog. The other functionality will follow shortly!", "markup": "markdown", "html": "<p>Settings pages are now loaded dynamically</p>\n<p>Within each plugin module, a Plugin Class must be specified. This class then returns references to Settings, Menu and Notification classes which define the behaviour for those respective functions.</p>\n<p>At the moment, only the Setttings class is used to populate the preferences dialog. The other functionality will follow shortly!</p>", "type": "rendered"}}, "hash": "261f82aeb25e505fc04f854f856836ef95066aa3", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/261f82aeb25e505fc04f854f856836ef95066aa3.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/261f82aeb25e505fc04f854f856836ef95066aa3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/261f82aeb25e505fc04f854f856836ef95066aa3"}, "html": {"href": "#!/labscript_suite/blacs/commits/261f82aeb25e505fc04f854f856836ef95066aa3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/261f82aeb25e505fc04f854f856836ef95066aa3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/261f82aeb25e505fc04f854f856836ef95066aa3/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/261f82aeb25e505fc04f854f856836ef95066aa3/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Settings pages are now loaded dynamically\n\nWithin each plugin module, a Plugin Class must be specified. This class then returns references to Settings, Menu and Notification classes which define the behaviour for those respective functions.\n\nAt the moment, only the Setttings class is used to populate the preferences dialog. The other functionality will follow shortly!", "markup": "markdown", "html": "<p>Settings pages are now loaded dynamically</p>\n<p>Within each plugin module, a Plugin Class must be specified. This class then returns references to Settings, Menu and Notification classes which define the behaviour for those respective functions.</p>\n<p>At the moment, only the Setttings class is used to populate the preferences dialog. The other functionality will follow shortly!</p>", "type": "rendered"}, "parents": [{"hash": "99d1745ee2a458d9eff0ebbb60501ab28d19b1ed", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/99d1745ee2a458d9eff0ebbb60501ab28d19b1ed.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/99d1745ee2a458d9eff0ebbb60501ab28d19b1ed"}}}], "date": "2013-08-28T07:03:17+00:00", "message": "Settings pages are now loaded dynamically\n\nWithin each plugin module, a Plugin Class must be specified. This class then returns references to Settings, Menu and Notification classes which define the behaviour for those respective functions.\n\nAt the moment, only the Setttings class is used to populate the preferences dialog. The other functionality will follow shortly!", "type": "commit"}, {"rendered": {"message": {"raw": "Moved the \"settings_pages\" towards a plugins module that will allow users to add functionality to BLACS without needing to directly edit the code of BLACS. The plan is to have it handle entries in the preferences dialog, notifications and can interact with BLACS at various points of execution (eg file received from runmanager, programming hardware, etc) in either an asynchronous or synchronous way", "markup": "markdown", "html": "<p>Moved the \"settings_pages\" towards a plugins module that will allow users to add functionality to BLACS without needing to directly edit the code of BLACS. The plan is to have it handle entries in the preferences dialog, notifications and can interact with BLACS at various points of execution (eg file received from runmanager, programming hardware, etc) in either an asynchronous or synchronous way</p>", "type": "rendered"}}, "hash": "99d1745ee2a458d9eff0ebbb60501ab28d19b1ed", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/99d1745ee2a458d9eff0ebbb60501ab28d19b1ed.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/99d1745ee2a458d9eff0ebbb60501ab28d19b1ed/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/99d1745ee2a458d9eff0ebbb60501ab28d19b1ed"}, "html": {"href": "#!/labscript_suite/blacs/commits/99d1745ee2a458d9eff0ebbb60501ab28d19b1ed"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/99d1745ee2a458d9eff0ebbb60501ab28d19b1ed"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/99d1745ee2a458d9eff0ebbb60501ab28d19b1ed/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/99d1745ee2a458d9eff0ebbb60501ab28d19b1ed/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Moved the \"settings_pages\" towards a plugins module that will allow users to add functionality to BLACS without needing to directly edit the code of BLACS. The plan is to have it handle entries in the preferences dialog, notifications and can interact with BLACS at various points of execution (eg file received from runmanager, programming hardware, etc) in either an asynchronous or synchronous way", "markup": "markdown", "html": "<p>Moved the \"settings_pages\" towards a plugins module that will allow users to add functionality to BLACS without needing to directly edit the code of BLACS. The plan is to have it handle entries in the preferences dialog, notifications and can interact with BLACS at various points of execution (eg file received from runmanager, programming hardware, etc) in either an asynchronous or synchronous way</p>", "type": "rendered"}, "parents": [{"hash": "1969471da3bfadb0f7124bc799c011ab28081225", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1969471da3bfadb0f7124bc799c011ab28081225.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/1969471da3bfadb0f7124bc799c011ab28081225"}}}], "date": "2013-08-28T05:07:19+00:00", "message": "Moved the \"settings_pages\" towards a plugins module that will allow users to add functionality to BLACS without needing to directly edit the code of BLACS. The plan is to have it handle entries in the preferences dialog, notifications and can interact with BLACS at various points of execution (eg file received from runmanager, programming hardware, etc) in either an asynchronous or synchronous way", "type": "commit"}, {"rendered": {"message": {"raw": "Added plugins module to BLACS", "markup": "markdown", "html": "<p>Added plugins module to BLACS</p>", "type": "rendered"}}, "hash": "1969471da3bfadb0f7124bc799c011ab28081225", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1969471da3bfadb0f7124bc799c011ab28081225.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/1969471da3bfadb0f7124bc799c011ab28081225/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/1969471da3bfadb0f7124bc799c011ab28081225"}, "html": {"href": "#!/labscript_suite/blacs/commits/1969471da3bfadb0f7124bc799c011ab28081225"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/1969471da3bfadb0f7124bc799c011ab28081225"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/1969471da3bfadb0f7124bc799c011ab28081225/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/1969471da3bfadb0f7124bc799c011ab28081225/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added plugins module to BLACS", "markup": "markdown", "html": "<p>Added plugins module to BLACS</p>", "type": "rendered"}, "parents": [{"hash": "d400e8b0a8d5045a8a0ab27da6ce479d297891c9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/d400e8b0a8d5045a8a0ab27da6ce479d297891c9.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/d400e8b0a8d5045a8a0ab27da6ce479d297891c9"}}}], "date": "2013-08-28T04:16:00+00:00", "message": "Added plugins module to BLACS", "type": "commit"}, {"rendered": {"message": {"raw": "Setting the model of a combobox causes a currentIndexChanged event to be emitted. This had the effect of preventing programmatic changes to the units of an AO (because the unit selected of the new widget is the hardware unit, and so a call to change_unit was made with the hardware unit before the new widgets unit could be programmatically changed to the correct unit)", "markup": "markdown", "html": "<p>Setting the model of a combobox causes a currentIndexChanged event to be emitted. This had the effect of preventing programmatic changes to the units of an AO (because the unit selected of the new widget is the hardware unit, and so a call to change_unit was made with the hardware unit before the new widgets unit could be programmatically changed to the correct unit)</p>", "type": "rendered"}}, "hash": "d400e8b0a8d5045a8a0ab27da6ce479d297891c9", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/d400e8b0a8d5045a8a0ab27da6ce479d297891c9.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/d400e8b0a8d5045a8a0ab27da6ce479d297891c9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/d400e8b0a8d5045a8a0ab27da6ce479d297891c9"}, "html": {"href": "#!/labscript_suite/blacs/commits/d400e8b0a8d5045a8a0ab27da6ce479d297891c9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/d400e8b0a8d5045a8a0ab27da6ce479d297891c9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/d400e8b0a8d5045a8a0ab27da6ce479d297891c9/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/d400e8b0a8d5045a8a0ab27da6ce479d297891c9/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Setting the model of a combobox causes a currentIndexChanged event to be emitted. This had the effect of preventing programmatic changes to the units of an AO (because the unit selected of the new widget is the hardware unit, and so a call to change_unit was made with the hardware unit before the new widgets unit could be programmatically changed to the correct unit)", "markup": "markdown", "html": "<p>Setting the model of a combobox causes a currentIndexChanged event to be emitted. This had the effect of preventing programmatic changes to the units of an AO (because the unit selected of the new widget is the hardware unit, and so a call to change_unit was made with the hardware unit before the new widgets unit could be programmatically changed to the correct unit)</p>", "type": "rendered"}, "parents": [{"hash": "42ea7bbfb4c6b436b5c078d9ae8610036d2559b9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/42ea7bbfb4c6b436b5c078d9ae8610036d2559b9.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/42ea7bbfb4c6b436b5c078d9ae8610036d2559b9"}}}], "date": "2013-08-16T10:28:41+00:00", "message": "Setting the model of a combobox causes a currentIndexChanged event to be emitted. This had the effect of preventing programmatic changes to the units of an AO (because the unit selected of the new widget is the hardware unit, and so a call to change_unit was made with the hardware unit before the new widgets unit could be programmatically changed to the correct unit)", "type": "commit"}, {"rendered": {"message": {"raw": "Restoring of BLACS state is now more complete.\nState is restored when restarting BLACS.\n\nAlso worked on loading front panel state from the file menu. This is mostly working, though there are a few bugs (need to test thoroughly). Namely that the maximize state doesn't seem to be restored and I also got this error (I think when trying to restore a unit from A to V):\n2013-08-16 17:20:49,938 WARNING BLACS: Unable to load the front panel in C:/Experiments/pinetab/load_test2.h5.\nException:'PySide.QtGui.QStandardItemModel.indexFromItem' called with wrong argument types:\n  PySide.QtGui.QStandardItemModel.indexFromItem(list)\nSupported signatures:\n  PySide.QtGui.QStandardItemModel.indexFromItem(PySide.QtGui.QStandardItem)\n\nI will investigate soon!", "markup": "markdown", "html": "<p>Restoring of BLACS state is now more complete.<br />\nState is restored when restarting BLACS.</p>\n<p>Also worked on loading front panel state from the file menu. This is mostly working, though there are a few bugs (need to test thoroughly). Namely that the maximize state doesn't seem to be restored and I also got this error (I think when trying to restore a unit from A to V):<br />\n2013-08-16 17:20:49,938 WARNING BLACS: Unable to load the front panel in C:/Experiments/pinetab/load_test2.h5.<br />\nException:'PySide.QtGui.QStandardItemModel.indexFromItem' called with wrong argument types:<br />\n  PySide.QtGui.QStandardItemModel.indexFromItem(list)<br />\nSupported signatures:<br />\n  PySide.QtGui.QStandardItemModel.indexFromItem(PySide.QtGui.QStandardItem)</p>\n<p>I will investigate soon!</p>", "type": "rendered"}}, "hash": "42ea7bbfb4c6b436b5c078d9ae8610036d2559b9", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/42ea7bbfb4c6b436b5c078d9ae8610036d2559b9.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/42ea7bbfb4c6b436b5c078d9ae8610036d2559b9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/42ea7bbfb4c6b436b5c078d9ae8610036d2559b9"}, "html": {"href": "#!/labscript_suite/blacs/commits/42ea7bbfb4c6b436b5c078d9ae8610036d2559b9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/42ea7bbfb4c6b436b5c078d9ae8610036d2559b9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/42ea7bbfb4c6b436b5c078d9ae8610036d2559b9/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/42ea7bbfb4c6b436b5c078d9ae8610036d2559b9/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Restoring of BLACS state is now more complete.\nState is restored when restarting BLACS.\n\nAlso worked on loading front panel state from the file menu. This is mostly working, though there are a few bugs (need to test thoroughly). Namely that the maximize state doesn't seem to be restored and I also got this error (I think when trying to restore a unit from A to V):\n2013-08-16 17:20:49,938 WARNING BLACS: Unable to load the front panel in C:/Experiments/pinetab/load_test2.h5.\nException:'PySide.QtGui.QStandardItemModel.indexFromItem' called with wrong argument types:\n  PySide.QtGui.QStandardItemModel.indexFromItem(list)\nSupported signatures:\n  PySide.QtGui.QStandardItemModel.indexFromItem(PySide.QtGui.QStandardItem)\n\nI will investigate soon!", "markup": "markdown", "html": "<p>Restoring of BLACS state is now more complete.<br />\nState is restored when restarting BLACS.</p>\n<p>Also worked on loading front panel state from the file menu. This is mostly working, though there are a few bugs (need to test thoroughly). Namely that the maximize state doesn't seem to be restored and I also got this error (I think when trying to restore a unit from A to V):<br />\n2013-08-16 17:20:49,938 WARNING BLACS: Unable to load the front panel in C:/Experiments/pinetab/load_test2.h5.<br />\nException:'PySide.QtGui.QStandardItemModel.indexFromItem' called with wrong argument types:<br />\n  PySide.QtGui.QStandardItemModel.indexFromItem(list)<br />\nSupported signatures:<br />\n  PySide.QtGui.QStandardItemModel.indexFromItem(PySide.QtGui.QStandardItem)</p>\n<p>I will investigate soon!</p>", "type": "rendered"}, "parents": [{"hash": "03d295a0380283942db7f461aa824861d9b7304f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/03d295a0380283942db7f461aa824861d9b7304f.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/03d295a0380283942db7f461aa824861d9b7304f"}}}], "date": "2013-08-16T07:27:44+00:00", "message": "Restoring of BLACS state is now more complete.\nState is restored when restarting BLACS.\n\nAlso worked on loading front panel state from the file menu. This is mostly working, though there are a few bugs (need to test thoroughly). Namely that the maximize state doesn't seem to be restored and I also got this error (I think when trying to restore a unit from A to V):\n2013-08-16 17:20:49,938 WARNING BLACS: Unable to load the front panel in C:/Experiments/pinetab/load_test2.h5.\nException:'PySide.QtGui.QStandardItemModel.indexFromItem' called with wrong argument types:\n  PySide.QtGui.QStandardItemModel.indexFromItem(list)\nSupported signatures:\n  PySide.QtGui.QStandardItemModel.indexFromItem(PySide.QtGui.QStandardItem)\n\nI will investigate soon!", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed some bugs (missing return statement and invalid function names) in the AO output class which prevented unit calibrations from working correctly.\n\nAdded get_save_state() and restore_save_state() functions to device_base_class for saving/restoring tab data that is not contained with AO/DO/DDS objects. I have not yet implemented passing the required data to the restore function yet.\n\nModified the front_panel save code to work with the Qt interface. Simplified this a bit as well so that all channels are stored together, rather than splitting across an AO/DO and DDS dataset.", "markup": "markdown", "html": "<p>Fixed some bugs (missing return statement and invalid function names) in the AO output class which prevented unit calibrations from working correctly.</p>\n<p>Added get_save_state() and restore_save_state() functions to device_base_class for saving/restoring tab data that is not contained with AO/DO/DDS objects. I have not yet implemented passing the required data to the restore function yet.</p>\n<p>Modified the front_panel save code to work with the Qt interface. Simplified this a bit as well so that all channels are stored together, rather than splitting across an AO/DO and DDS dataset.</p>", "type": "rendered"}}, "hash": "03d295a0380283942db7f461aa824861d9b7304f", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/03d295a0380283942db7f461aa824861d9b7304f.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/03d295a0380283942db7f461aa824861d9b7304f/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/03d295a0380283942db7f461aa824861d9b7304f"}, "html": {"href": "#!/labscript_suite/blacs/commits/03d295a0380283942db7f461aa824861d9b7304f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/03d295a0380283942db7f461aa824861d9b7304f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/03d295a0380283942db7f461aa824861d9b7304f/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/03d295a0380283942db7f461aa824861d9b7304f/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed some bugs (missing return statement and invalid function names) in the AO output class which prevented unit calibrations from working correctly.\n\nAdded get_save_state() and restore_save_state() functions to device_base_class for saving/restoring tab data that is not contained with AO/DO/DDS objects. I have not yet implemented passing the required data to the restore function yet.\n\nModified the front_panel save code to work with the Qt interface. Simplified this a bit as well so that all channels are stored together, rather than splitting across an AO/DO and DDS dataset.", "markup": "markdown", "html": "<p>Fixed some bugs (missing return statement and invalid function names) in the AO output class which prevented unit calibrations from working correctly.</p>\n<p>Added get_save_state() and restore_save_state() functions to device_base_class for saving/restoring tab data that is not contained with AO/DO/DDS objects. I have not yet implemented passing the required data to the restore function yet.</p>\n<p>Modified the front_panel save code to work with the Qt interface. Simplified this a bit as well so that all channels are stored together, rather than splitting across an AO/DO and DDS dataset.</p>", "type": "rendered"}, "parents": [{"hash": "0ff0150fb2785cb2faddb29bbdce941cdad6ca8f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/0ff0150fb2785cb2faddb29bbdce941cdad6ca8f.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/0ff0150fb2785cb2faddb29bbdce941cdad6ca8f"}}}], "date": "2013-08-16T03:48:40+00:00", "message": "Fixed some bugs (missing return statement and invalid function names) in the AO output class which prevented unit calibrations from working correctly.\n\nAdded get_save_state() and restore_save_state() functions to device_base_class for saving/restoring tab data that is not contained with AO/DO/DDS objects. I have not yet implemented passing the required data to the restore function yet.\n\nModified the front_panel save code to work with the Qt interface. Simplified this a bit as well so that all channels are stored together, rather than splitting across an AO/DO and DDS dataset.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a bug that stopped the connection table editor fro launching\n\nAdded 3 UI files that I forgot to commit earlier.", "markup": "markdown", "html": "<p>Fixed a bug that stopped the connection table editor fro launching</p>\n<p>Added 3 UI files that I forgot to commit earlier.</p>", "type": "rendered"}}, "hash": "0ff0150fb2785cb2faddb29bbdce941cdad6ca8f", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/0ff0150fb2785cb2faddb29bbdce941cdad6ca8f.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/0ff0150fb2785cb2faddb29bbdce941cdad6ca8f/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/0ff0150fb2785cb2faddb29bbdce941cdad6ca8f"}, "html": {"href": "#!/labscript_suite/blacs/commits/0ff0150fb2785cb2faddb29bbdce941cdad6ca8f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/0ff0150fb2785cb2faddb29bbdce941cdad6ca8f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/0ff0150fb2785cb2faddb29bbdce941cdad6ca8f/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/0ff0150fb2785cb2faddb29bbdce941cdad6ca8f/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed a bug that stopped the connection table editor fro launching\n\nAdded 3 UI files that I forgot to commit earlier.", "markup": "markdown", "html": "<p>Fixed a bug that stopped the connection table editor fro launching</p>\n<p>Added 3 UI files that I forgot to commit earlier.</p>", "type": "rendered"}, "parents": [{"hash": "da6c16cb85739224e5b273dd14f5517c8e9758be", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/da6c16cb85739224e5b273dd14f5517c8e9758be.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/da6c16cb85739224e5b273dd14f5517c8e9758be"}}}], "date": "2013-08-15T10:38:02+00:00", "message": "Fixed a bug that stopped the connection table editor fro launching\n\nAdded 3 UI files that I forgot to commit earlier.", "type": "commit"}, {"rendered": {"message": {"raw": "Using some new code I found online (now in qtutils) I have overridden the QMainWindow class with my own when the UI is instantiated so I can override the closeEvent method and close tabs properly before destroying the UI.", "markup": "markdown", "html": "<p>Using some new code I found online (now in qtutils) I have overridden the QMainWindow class with my own when the UI is instantiated so I can override the closeEvent method and close tabs properly before destroying the UI.</p>", "type": "rendered"}}, "hash": "da6c16cb85739224e5b273dd14f5517c8e9758be", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/da6c16cb85739224e5b273dd14f5517c8e9758be.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/da6c16cb85739224e5b273dd14f5517c8e9758be/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/da6c16cb85739224e5b273dd14f5517c8e9758be"}, "html": {"href": "#!/labscript_suite/blacs/commits/da6c16cb85739224e5b273dd14f5517c8e9758be"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/da6c16cb85739224e5b273dd14f5517c8e9758be"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/da6c16cb85739224e5b273dd14f5517c8e9758be/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/da6c16cb85739224e5b273dd14f5517c8e9758be/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Using some new code I found online (now in qtutils) I have overridden the QMainWindow class with my own when the UI is instantiated so I can override the closeEvent method and close tabs properly before destroying the UI.", "markup": "markdown", "html": "<p>Using some new code I found online (now in qtutils) I have overridden the QMainWindow class with my own when the UI is instantiated so I can override the closeEvent method and close tabs properly before destroying the UI.</p>", "type": "rendered"}, "parents": [{"hash": "9175b817a096b8511bdffb8749cd8ea68dc13b2c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/9175b817a096b8511bdffb8749cd8ea68dc13b2c.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/9175b817a096b8511bdffb8749cd8ea68dc13b2c"}}}], "date": "2013-08-15T07:23:57+00:00", "message": "Using some new code I found online (now in qtutils) I have overridden the QMainWindow class with my own when the UI is instantiated so I can override the closeEvent method and close tabs properly before destroying the UI.", "type": "commit"}, {"rendered": {"message": {"raw": "Implemented connection table recompilation (requires updating subproc_utils to get subproc_utils.qt_components)\nRelaunching isn't quite working because I need to reimplement closeEvent for the QMainWindow, however the QMainWindow is currently defined in the .ui file, which will have to change if I want to reimplement a function!)", "markup": "markdown", "html": "<p>Implemented connection table recompilation (requires updating subproc_utils to get subproc_utils.qt_components)<br />\nRelaunching isn't quite working because I need to reimplement closeEvent for the QMainWindow, however the QMainWindow is currently defined in the .ui file, which will have to change if I want to reimplement a function!)</p>", "type": "rendered"}}, "hash": "9175b817a096b8511bdffb8749cd8ea68dc13b2c", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/9175b817a096b8511bdffb8749cd8ea68dc13b2c.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/9175b817a096b8511bdffb8749cd8ea68dc13b2c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/9175b817a096b8511bdffb8749cd8ea68dc13b2c"}, "html": {"href": "#!/labscript_suite/blacs/commits/9175b817a096b8511bdffb8749cd8ea68dc13b2c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/9175b817a096b8511bdffb8749cd8ea68dc13b2c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/9175b817a096b8511bdffb8749cd8ea68dc13b2c/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/9175b817a096b8511bdffb8749cd8ea68dc13b2c/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Implemented connection table recompilation (requires updating subproc_utils to get subproc_utils.qt_components)\nRelaunching isn't quite working because I need to reimplement closeEvent for the QMainWindow, however the QMainWindow is currently defined in the .ui file, which will have to change if I want to reimplement a function!)", "markup": "markdown", "html": "<p>Implemented connection table recompilation (requires updating subproc_utils to get subproc_utils.qt_components)<br />\nRelaunching isn't quite working because I need to reimplement closeEvent for the QMainWindow, however the QMainWindow is currently defined in the .ui file, which will have to change if I want to reimplement a function!)</p>", "type": "rendered"}, "parents": [{"hash": "d82ef8e216676a284adadf5181d795dc9daf7022", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/d82ef8e216676a284adadf5181d795dc9daf7022.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/d82ef8e216676a284adadf5181d795dc9daf7022"}}}], "date": "2013-08-15T06:21:40+00:00", "message": "Implemented connection table recompilation (requires updating subproc_utils to get subproc_utils.qt_components)\nRelaunching isn't quite working because I need to reimplement closeEvent for the QMainWindow, however the QMainWindow is currently defined in the .ui file, which will have to change if I want to reimplement a function!)", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed window titles\nAdded BLACS icon to window\nFixed main horizontal splitter resizing poorly on window size change\nPorted preferences system over to Qt (note I have not committed the new pythonlib\\settings module yet so this won't work if you try and test. If I do it now I would have to fork settings so that it doesn't break gtk BLACS...)\nRemoved glade files for preferences system", "markup": "markdown", "html": "<p>Fixed window titles<br />\nAdded BLACS icon to window<br />\nFixed main horizontal splitter resizing poorly on window size change<br />\nPorted preferences system over to Qt (note I have not committed the new pythonlib\\settings module yet so this won't work if you try and test. If I do it now I would have to fork settings so that it doesn't break gtk BLACS...)<br />\nRemoved glade files for preferences system</p>", "type": "rendered"}}, "hash": "d82ef8e216676a284adadf5181d795dc9daf7022", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/d82ef8e216676a284adadf5181d795dc9daf7022.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/d82ef8e216676a284adadf5181d795dc9daf7022/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/d82ef8e216676a284adadf5181d795dc9daf7022"}, "html": {"href": "#!/labscript_suite/blacs/commits/d82ef8e216676a284adadf5181d795dc9daf7022"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/d82ef8e216676a284adadf5181d795dc9daf7022"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/d82ef8e216676a284adadf5181d795dc9daf7022/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/d82ef8e216676a284adadf5181d795dc9daf7022/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed window titles\nAdded BLACS icon to window\nFixed main horizontal splitter resizing poorly on window size change\nPorted preferences system over to Qt (note I have not committed the new pythonlib\\settings module yet so this won't work if you try and test. If I do it now I would have to fork settings so that it doesn't break gtk BLACS...)\nRemoved glade files for preferences system", "markup": "markdown", "html": "<p>Fixed window titles<br />\nAdded BLACS icon to window<br />\nFixed main horizontal splitter resizing poorly on window size change<br />\nPorted preferences system over to Qt (note I have not committed the new pythonlib\\settings module yet so this won't work if you try and test. If I do it now I would have to fork settings so that it doesn't break gtk BLACS...)<br />\nRemoved glade files for preferences system</p>", "type": "rendered"}, "parents": [{"hash": "e4909bd037a7a1056866d0d38ae4b50b15853b26", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/e4909bd037a7a1056866d0d38ae4b50b15853b26.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/e4909bd037a7a1056866d0d38ae4b50b15853b26"}}}], "date": "2013-08-14T07:31:27+00:00", "message": "Fixed window titles\nAdded BLACS icon to window\nFixed main horizontal splitter resizing poorly on window size change\nPorted preferences system over to Qt (note I have not committed the new pythonlib\\settings module yet so this won't work if you try and test. If I do it now I would have to fork settings so that it doesn't break gtk BLACS...)\nRemoved glade files for preferences system", "type": "commit"}, {"rendered": {"message": {"raw": "Now have tab order and tab focus restored from h5 file on startup", "markup": "markdown", "html": "<p>Now have tab order and tab focus restored from h5 file on startup</p>", "type": "rendered"}}, "hash": "e4909bd037a7a1056866d0d38ae4b50b15853b26", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/e4909bd037a7a1056866d0d38ae4b50b15853b26.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/e4909bd037a7a1056866d0d38ae4b50b15853b26/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/e4909bd037a7a1056866d0d38ae4b50b15853b26"}, "html": {"href": "#!/labscript_suite/blacs/commits/e4909bd037a7a1056866d0d38ae4b50b15853b26"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/e4909bd037a7a1056866d0d38ae4b50b15853b26"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/e4909bd037a7a1056866d0d38ae4b50b15853b26/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/e4909bd037a7a1056866d0d38ae4b50b15853b26/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Now have tab order and tab focus restored from h5 file on startup", "markup": "markdown", "html": "<p>Now have tab order and tab focus restored from h5 file on startup</p>", "type": "rendered"}, "parents": [{"hash": "ed611d816009b9fb25f4c0a8c86d68acecd5afcb", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/ed611d816009b9fb25f4c0a8c86d68acecd5afcb.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/ed611d816009b9fb25f4c0a8c86d68acecd5afcb"}}}], "date": "2013-08-13T04:54:22+00:00", "message": "Now have tab order and tab focus restored from h5 file on startup", "type": "commit"}, {"rendered": {"message": {"raw": "Removed GTK copies of hardware interfaces.\nCreated a copy of BLACS that now starts and loads tabs up.", "markup": "markdown", "html": "<p>Removed GTK copies of hardware interfaces.<br />\nCreated a copy of BLACS that now starts and loads tabs up.</p>", "type": "rendered"}}, "hash": "ed611d816009b9fb25f4c0a8c86d68acecd5afcb", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/ed611d816009b9fb25f4c0a8c86d68acecd5afcb.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/ed611d816009b9fb25f4c0a8c86d68acecd5afcb/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/ed611d816009b9fb25f4c0a8c86d68acecd5afcb"}, "html": {"href": "#!/labscript_suite/blacs/commits/ed611d816009b9fb25f4c0a8c86d68acecd5afcb"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/ed611d816009b9fb25f4c0a8c86d68acecd5afcb"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/ed611d816009b9fb25f4c0a8c86d68acecd5afcb/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/ed611d816009b9fb25f4c0a8c86d68acecd5afcb/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Removed GTK copies of hardware interfaces.\nCreated a copy of BLACS that now starts and loads tabs up.", "markup": "markdown", "html": "<p>Removed GTK copies of hardware interfaces.<br />\nCreated a copy of BLACS that now starts and loads tabs up.</p>", "type": "rendered"}, "parents": [{"hash": "1a897a6a2e618e702bc4cc4d4c29ae1cfd2c5aa8", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1a897a6a2e618e702bc4cc4d4c29ae1cfd2c5aa8.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/1a897a6a2e618e702bc4cc4d4c29ae1cfd2c5aa8"}}}], "date": "2013-08-13T04:31:12+00:00", "message": "Removed GTK copies of hardware interfaces.\nCreated a copy of BLACS that now starts and loads tabs up.", "type": "commit"}, {"rendered": {"message": {"raw": "Forced the novatech comp port to a string (to be safe)\n\nported the RFBlaster and ni_pci_6733 to the new architecture (untested with real hardware of course!)", "markup": "markdown", "html": "<p>Forced the novatech comp port to a string (to be safe)</p>\n<p>ported the RFBlaster and ni_pci_6733 to the new architecture (untested with real hardware of course!)</p>", "type": "rendered"}}, "hash": "1a897a6a2e618e702bc4cc4d4c29ae1cfd2c5aa8", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1a897a6a2e618e702bc4cc4d4c29ae1cfd2c5aa8.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/1a897a6a2e618e702bc4cc4d4c29ae1cfd2c5aa8/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/1a897a6a2e618e702bc4cc4d4c29ae1cfd2c5aa8"}, "html": {"href": "#!/labscript_suite/blacs/commits/1a897a6a2e618e702bc4cc4d4c29ae1cfd2c5aa8"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/1a897a6a2e618e702bc4cc4d4c29ae1cfd2c5aa8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/1a897a6a2e618e702bc4cc4d4c29ae1cfd2c5aa8/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/1a897a6a2e618e702bc4cc4d4c29ae1cfd2c5aa8/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Forced the novatech comp port to a string (to be safe)\n\nported the RFBlaster and ni_pci_6733 to the new architecture (untested with real hardware of course!)", "markup": "markdown", "html": "<p>Forced the novatech comp port to a string (to be safe)</p>\n<p>ported the RFBlaster and ni_pci_6733 to the new architecture (untested with real hardware of course!)</p>", "type": "rendered"}, "parents": [{"hash": "2046b317ef44aa59f091921e986ca7b4f90a8cbc", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/2046b317ef44aa59f091921e986ca7b4f90a8cbc.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/2046b317ef44aa59f091921e986ca7b4f90a8cbc"}}}], "date": "2013-07-31T07:25:59+00:00", "message": "Forced the novatech comp port to a string (to be safe)\n\nported the RFBlaster and ni_pci_6733 to the new architecture (untested with real hardware of course!)", "type": "commit"}, {"rendered": {"message": {"raw": "Ported the pulseblaster to Qt (except for status monitor icons and start/stop/reset buttons which are to come)\n\nnovatechdds9m now has a num_DDS variable\nfixed a use of _device_name in device_base_class.py, now uses device_name", "markup": "markdown", "html": "<p>Ported the pulseblaster to Qt (except for status monitor icons and start/stop/reset buttons which are to come)</p>\n<p>novatechdds9m now has a num_DDS variable<br />\nfixed a use of _device_name in device_base_class.py, now uses device_name</p>", "type": "rendered"}}, "hash": "2046b317ef44aa59f091921e986ca7b4f90a8cbc", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/2046b317ef44aa59f091921e986ca7b4f90a8cbc.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/2046b317ef44aa59f091921e986ca7b4f90a8cbc/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/2046b317ef44aa59f091921e986ca7b4f90a8cbc"}, "html": {"href": "#!/labscript_suite/blacs/commits/2046b317ef44aa59f091921e986ca7b4f90a8cbc"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/2046b317ef44aa59f091921e986ca7b4f90a8cbc"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/2046b317ef44aa59f091921e986ca7b4f90a8cbc/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/2046b317ef44aa59f091921e986ca7b4f90a8cbc/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Ported the pulseblaster to Qt (except for status monitor icons and start/stop/reset buttons which are to come)\n\nnovatechdds9m now has a num_DDS variable\nfixed a use of _device_name in device_base_class.py, now uses device_name", "markup": "markdown", "html": "<p>Ported the pulseblaster to Qt (except for status monitor icons and start/stop/reset buttons which are to come)</p>\n<p>novatechdds9m now has a num_DDS variable<br />\nfixed a use of _device_name in device_base_class.py, now uses device_name</p>", "type": "rendered"}, "parents": [{"hash": "d34b8a4940118dea03f7135e4c79291a9f138253", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/d34b8a4940118dea03f7135e4c79291a9f138253.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/d34b8a4940118dea03f7135e4c79291a9f138253"}}}], "date": "2013-04-26T01:46:24+00:00", "message": "Ported the pulseblaster to Qt (except for status monitor icons and start/stop/reset buttons which are to come)\n\nnovatechdds9m now has a num_DDS variable\nfixed a use of _device_name in device_base_class.py, now uses device_name", "type": "commit"}, {"rendered": {"message": {"raw": "Added an __init__.py so that BLACS is a module and files within can be imported from anywhere (needed for standalone testing of devices in hardware_interfaces folder)\n\nWrote a NovatechDDS9m BLACS tab and fixed some bugs so that the GUI works as expected (have not tested device programming, buffered mode, etc yet but this is not significantly changed from the GTK version so I don't expect many problems)", "markup": "markdown", "html": "<p>Added an <strong>init</strong>.py so that BLACS is a module and files within can be imported from anywhere (needed for standalone testing of devices in hardware_interfaces folder)</p>\n<p>Wrote a NovatechDDS9m BLACS tab and fixed some bugs so that the GUI works as expected (have not tested device programming, buffered mode, etc yet but this is not significantly changed from the GTK version so I don't expect many problems)</p>", "type": "rendered"}}, "hash": "d34b8a4940118dea03f7135e4c79291a9f138253", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/d34b8a4940118dea03f7135e4c79291a9f138253.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/d34b8a4940118dea03f7135e4c79291a9f138253/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/d34b8a4940118dea03f7135e4c79291a9f138253"}, "html": {"href": "#!/labscript_suite/blacs/commits/d34b8a4940118dea03f7135e4c79291a9f138253"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/d34b8a4940118dea03f7135e4c79291a9f138253"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/d34b8a4940118dea03f7135e4c79291a9f138253/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/d34b8a4940118dea03f7135e4c79291a9f138253/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added an __init__.py so that BLACS is a module and files within can be imported from anywhere (needed for standalone testing of devices in hardware_interfaces folder)\n\nWrote a NovatechDDS9m BLACS tab and fixed some bugs so that the GUI works as expected (have not tested device programming, buffered mode, etc yet but this is not significantly changed from the GTK version so I don't expect many problems)", "markup": "markdown", "html": "<p>Added an <strong>init</strong>.py so that BLACS is a module and files within can be imported from anywhere (needed for standalone testing of devices in hardware_interfaces folder)</p>\n<p>Wrote a NovatechDDS9m BLACS tab and fixed some bugs so that the GUI works as expected (have not tested device programming, buffered mode, etc yet but this is not significantly changed from the GTK version so I don't expect many problems)</p>", "type": "rendered"}, "parents": [{"hash": "c0ef7663d5e43d795e284409d87eed714d52b3ef", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/c0ef7663d5e43d795e284409d87eed714d52b3ef.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/c0ef7663d5e43d795e284409d87eed714d52b3ef"}}}], "date": "2013-04-26T00:04:12+00:00", "message": "Added an __init__.py so that BLACS is a module and files within can be imported from anywhere (needed for standalone testing of devices in hardware_interfaces folder)\n\nWrote a NovatechDDS9m BLACS tab and fixed some bugs so that the GUI works as expected (have not tested device programming, buffered mode, etc yet but this is not significantly changed from the GTK version so I don't expect many problems)", "type": "commit"}, {"rendered": {"message": {"raw": "Implemented DDS widgets (untested)\n\nWrote some better comments in the example code of device_base_class.py", "markup": "markdown", "html": "<p>Implemented DDS widgets (untested)</p>\n<p>Wrote some better comments in the example code of device_base_class.py</p>", "type": "rendered"}}, "hash": "c0ef7663d5e43d795e284409d87eed714d52b3ef", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/c0ef7663d5e43d795e284409d87eed714d52b3ef.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/c0ef7663d5e43d795e284409d87eed714d52b3ef/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/c0ef7663d5e43d795e284409d87eed714d52b3ef"}, "html": {"href": "#!/labscript_suite/blacs/commits/c0ef7663d5e43d795e284409d87eed714d52b3ef"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/c0ef7663d5e43d795e284409d87eed714d52b3ef"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/c0ef7663d5e43d795e284409d87eed714d52b3ef/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/c0ef7663d5e43d795e284409d87eed714d52b3ef/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Implemented DDS widgets (untested)\n\nWrote some better comments in the example code of device_base_class.py", "markup": "markdown", "html": "<p>Implemented DDS widgets (untested)</p>\n<p>Wrote some better comments in the example code of device_base_class.py</p>", "type": "rendered"}, "parents": [{"hash": "b4f2d2fb4bcfce56d298e52969138af73479504c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/b4f2d2fb4bcfce56d298e52969138af73479504c.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/b4f2d2fb4bcfce56d298e52969138af73479504c"}}}], "date": "2013-04-14T23:25:35+00:00", "message": "Implemented DDS widgets (untested)\n\nWrote some better comments in the example code of device_base_class.py", "type": "commit"}, {"rendered": {"message": {"raw": "tested and debugged the comparison of remote values to local front panel values", "markup": "markdown", "html": "<p>tested and debugged the comparison of remote values to local front panel values</p>", "type": "rendered"}}, "hash": "b4f2d2fb4bcfce56d298e52969138af73479504c", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/b4f2d2fb4bcfce56d298e52969138af73479504c.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/b4f2d2fb4bcfce56d298e52969138af73479504c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/b4f2d2fb4bcfce56d298e52969138af73479504c"}, "html": {"href": "#!/labscript_suite/blacs/commits/b4f2d2fb4bcfce56d298e52969138af73479504c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/b4f2d2fb4bcfce56d298e52969138af73479504c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/b4f2d2fb4bcfce56d298e52969138af73479504c/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/b4f2d2fb4bcfce56d298e52969138af73479504c/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "tested and debugged the comparison of remote values to local front panel values", "markup": "markdown", "html": "<p>tested and debugged the comparison of remote values to local front panel values</p>", "type": "rendered"}, "parents": [{"hash": "5f865cf272c4aa6af8a3bb24e849a7a6f5f65241", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5f865cf272c4aa6af8a3bb24e849a7a6f5f65241.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/5f865cf272c4aa6af8a3bb24e849a7a6f5f65241"}}}], "date": "2013-04-14T06:04:30+00:00", "message": "tested and debugged the comparison of remote values to local front panel values", "type": "commit"}, {"rendered": {"message": {"raw": "Added copy line for new waits group\nRemoved \"raise\" which was added for debug purposes", "markup": "markdown", "html": "<p>Added copy line for new waits group<br />\nRemoved \"raise\" which was added for debug purposes</p>", "type": "rendered"}}, "hash": "5f865cf272c4aa6af8a3bb24e849a7a6f5f65241", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5f865cf272c4aa6af8a3bb24e849a7a6f5f65241.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/5f865cf272c4aa6af8a3bb24e849a7a6f5f65241/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/5f865cf272c4aa6af8a3bb24e849a7a6f5f65241"}, "html": {"href": "#!/labscript_suite/blacs/commits/5f865cf272c4aa6af8a3bb24e849a7a6f5f65241"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/5f865cf272c4aa6af8a3bb24e849a7a6f5f65241"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/5f865cf272c4aa6af8a3bb24e849a7a6f5f65241/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/5f865cf272c4aa6af8a3bb24e849a7a6f5f65241/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added copy line for new waits group\nRemoved \"raise\" which was added for debug purposes", "markup": "markdown", "html": "<p>Added copy line for new waits group<br />\nRemoved \"raise\" which was added for debug purposes</p>", "type": "rendered"}, "parents": [{"hash": "28744c68ae1eb2d456b7c8cfc679178bad0855db", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/28744c68ae1eb2d456b7c8cfc679178bad0855db.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/28744c68ae1eb2d456b7c8cfc679178bad0855db"}}}], "date": "2013-03-12T00:46:39+00:00", "message": "Added copy line for new waits group\nRemoved \"raise\" which was added for debug purposes", "type": "commit"}, {"rendered": {"message": {"raw": "Added .hgignore file to ignore .pyc files\n\nconnections.py, hardware_interfaces/pulseblaster.py,hardware_interfaces/pineblaster.py,hardware_interfaces/ni_pcie_6363.py have been updated to revision 423 (part of the GTK branch). These files are not ported to Qt, but have had WAITs implemented in them, so it is easier to update to the GTK version and port as one than try and port the old version and then merge in the WAITS.\n\nUnfortunately I don't see how to merge nicely with Hg...Sorry! (Can you merge individual files?)", "markup": "markdown", "html": "<p>Added .hgignore file to ignore .pyc files</p>\n<p>connections.py, hardware_interfaces/pulseblaster.py,hardware_interfaces/pineblaster.py,hardware_interfaces/ni_pcie_6363.py have been updated to revision 423 (part of the GTK branch). These files are not ported to Qt, but have had WAITs implemented in them, so it is easier to update to the GTK version and port as one than try and port the old version and then merge in the WAITS.</p>\n<p>Unfortunately I don't see how to merge nicely with Hg...Sorry! (Can you merge individual files?)</p>", "type": "rendered"}}, "hash": "28744c68ae1eb2d456b7c8cfc679178bad0855db", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/28744c68ae1eb2d456b7c8cfc679178bad0855db.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/28744c68ae1eb2d456b7c8cfc679178bad0855db/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/28744c68ae1eb2d456b7c8cfc679178bad0855db"}, "html": {"href": "#!/labscript_suite/blacs/commits/28744c68ae1eb2d456b7c8cfc679178bad0855db"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/28744c68ae1eb2d456b7c8cfc679178bad0855db"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/28744c68ae1eb2d456b7c8cfc679178bad0855db/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/28744c68ae1eb2d456b7c8cfc679178bad0855db/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added .hgignore file to ignore .pyc files\n\nconnections.py, hardware_interfaces/pulseblaster.py,hardware_interfaces/pineblaster.py,hardware_interfaces/ni_pcie_6363.py have been updated to revision 423 (part of the GTK branch). These files are not ported to Qt, but have had WAITs implemented in them, so it is easier to update to the GTK version and port as one than try and port the old version and then merge in the WAITS.\n\nUnfortunately I don't see how to merge nicely with Hg...Sorry! (Can you merge individual files?)", "markup": "markdown", "html": "<p>Added .hgignore file to ignore .pyc files</p>\n<p>connections.py, hardware_interfaces/pulseblaster.py,hardware_interfaces/pineblaster.py,hardware_interfaces/ni_pcie_6363.py have been updated to revision 423 (part of the GTK branch). These files are not ported to Qt, but have had WAITs implemented in them, so it is easier to update to the GTK version and port as one than try and port the old version and then merge in the WAITS.</p>\n<p>Unfortunately I don't see how to merge nicely with Hg...Sorry! (Can you merge individual files?)</p>", "type": "rendered"}, "parents": [{"hash": "5a01433d0fe8fbaf780c1cd1b24bad1f76c11eff", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5a01433d0fe8fbaf780c1cd1b24bad1f76c11eff.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/5a01433d0fe8fbaf780c1cd1b24bad1f76c11eff"}}}], "date": "2013-02-21T00:10:59+00:00", "message": "Added .hgignore file to ignore .pyc files\n\nconnections.py, hardware_interfaces/pulseblaster.py,hardware_interfaces/pineblaster.py,hardware_interfaces/ni_pcie_6363.py have been updated to revision 423 (part of the GTK branch). These files are not ported to Qt, but have had WAITs implemented in them, so it is easier to update to the GTK version and port as one than try and port the old version and then merge in the WAITS.\n\nUnfortunately I don't see how to merge nicely with Hg...Sorry! (Can you merge individual files?)", "type": "commit"}, {"rendered": {"message": {"raw": "Moved tab_base_classes over to ZMQ IPC as was done in the gtk release. tab_base_classes is now up to date with rev 423  (part of the GTK branch)\n\nI've also copied over setup_logging.py.\n\nI would have used the merge functionality, but the branches have diverged so much that it is basically impossible. I'll have to do it manually, one file at a time as I come to them!", "markup": "markdown", "html": "<p>Moved tab_base_classes over to ZMQ IPC as was done in the gtk release. tab_base_classes is now up to date with rev 423  (part of the GTK branch)</p>\n<p>I've also copied over setup_logging.py.</p>\n<p>I would have used the merge functionality, but the branches have diverged so much that it is basically impossible. I'll have to do it manually, one file at a time as I come to them!</p>", "type": "rendered"}}, "hash": "5a01433d0fe8fbaf780c1cd1b24bad1f76c11eff", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5a01433d0fe8fbaf780c1cd1b24bad1f76c11eff.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/5a01433d0fe8fbaf780c1cd1b24bad1f76c11eff/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/5a01433d0fe8fbaf780c1cd1b24bad1f76c11eff"}, "html": {"href": "#!/labscript_suite/blacs/commits/5a01433d0fe8fbaf780c1cd1b24bad1f76c11eff"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/5a01433d0fe8fbaf780c1cd1b24bad1f76c11eff"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/5a01433d0fe8fbaf780c1cd1b24bad1f76c11eff/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/5a01433d0fe8fbaf780c1cd1b24bad1f76c11eff/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Moved tab_base_classes over to ZMQ IPC as was done in the gtk release. tab_base_classes is now up to date with rev 423  (part of the GTK branch)\n\nI've also copied over setup_logging.py.\n\nI would have used the merge functionality, but the branches have diverged so much that it is basically impossible. I'll have to do it manually, one file at a time as I come to them!", "markup": "markdown", "html": "<p>Moved tab_base_classes over to ZMQ IPC as was done in the gtk release. tab_base_classes is now up to date with rev 423  (part of the GTK branch)</p>\n<p>I've also copied over setup_logging.py.</p>\n<p>I would have used the merge functionality, but the branches have diverged so much that it is basically impossible. I'll have to do it manually, one file at a time as I come to them!</p>", "type": "rendered"}, "parents": [{"hash": "80f7d4d259c9817ec42740edc040fc453ed74def", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/80f7d4d259c9817ec42740edc040fc453ed74def.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/80f7d4d259c9817ec42740edc040fc453ed74def"}}}], "date": "2013-02-21T00:01:42+00:00", "message": "Moved tab_base_classes over to ZMQ IPC as was done in the gtk release. tab_base_classes is now up to date with rev 423  (part of the GTK branch)\n\nI've also copied over setup_logging.py.\n\nI would have used the merge functionality, but the branches have diverged so much that it is basically impossible. I'll have to do it manually, one file at a time as I come to them!", "type": "commit"}, {"rendered": {"message": {"raw": "Added the ability to provide a sort algorithm to the widget order in auto_place_widgets.\nAdded buttons to test transition to static/transition to buffered which now work (bugs are fixed)", "markup": "markdown", "html": "<p>Added the ability to provide a sort algorithm to the widget order in auto_place_widgets.<br />\nAdded buttons to test transition to static/transition to buffered which now work (bugs are fixed)</p>", "type": "rendered"}}, "hash": "80f7d4d259c9817ec42740edc040fc453ed74def", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/80f7d4d259c9817ec42740edc040fc453ed74def.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/80f7d4d259c9817ec42740edc040fc453ed74def/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/80f7d4d259c9817ec42740edc040fc453ed74def"}, "html": {"href": "#!/labscript_suite/blacs/commits/80f7d4d259c9817ec42740edc040fc453ed74def"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/80f7d4d259c9817ec42740edc040fc453ed74def"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/80f7d4d259c9817ec42740edc040fc453ed74def/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/80f7d4d259c9817ec42740edc040fc453ed74def/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added the ability to provide a sort algorithm to the widget order in auto_place_widgets.\nAdded buttons to test transition to static/transition to buffered which now work (bugs are fixed)", "markup": "markdown", "html": "<p>Added the ability to provide a sort algorithm to the widget order in auto_place_widgets.<br />\nAdded buttons to test transition to static/transition to buffered which now work (bugs are fixed)</p>", "type": "rendered"}, "parents": [{"hash": "8f13bc4e22f9fed0bdd4b2ca2c109feab259c82a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/8f13bc4e22f9fed0bdd4b2ca2c109feab259c82a.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/8f13bc4e22f9fed0bdd4b2ca2c109feab259c82a"}}}], "date": "2013-02-20T23:37:36+00:00", "message": "Added the ability to provide a sort algorithm to the widget order in auto_place_widgets.\nAdded buttons to test transition to static/transition to buffered which now work (bugs are fixed)", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed bugs and created a basic test case for device_base_class\nStill need to write tests for the worker functions and simulate a status check and a check_remote_values call.\n\nAlso need to sort the widget correctly. Probably need to provide a clever sorting function by default, but also allow the user to specify their own sorting function.", "markup": "markdown", "html": "<p>Fixed bugs and created a basic test case for device_base_class<br />\nStill need to write tests for the worker functions and simulate a status check and a check_remote_values call.</p>\n<p>Also need to sort the widget correctly. Probably need to provide a clever sorting function by default, but also allow the user to specify their own sorting function.</p>", "type": "rendered"}}, "hash": "8f13bc4e22f9fed0bdd4b2ca2c109feab259c82a", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/8f13bc4e22f9fed0bdd4b2ca2c109feab259c82a.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/8f13bc4e22f9fed0bdd4b2ca2c109feab259c82a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/8f13bc4e22f9fed0bdd4b2ca2c109feab259c82a"}, "html": {"href": "#!/labscript_suite/blacs/commits/8f13bc4e22f9fed0bdd4b2ca2c109feab259c82a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/8f13bc4e22f9fed0bdd4b2ca2c109feab259c82a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/8f13bc4e22f9fed0bdd4b2ca2c109feab259c82a/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/8f13bc4e22f9fed0bdd4b2ca2c109feab259c82a/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed bugs and created a basic test case for device_base_class\nStill need to write tests for the worker functions and simulate a status check and a check_remote_values call.\n\nAlso need to sort the widget correctly. Probably need to provide a clever sorting function by default, but also allow the user to specify their own sorting function.", "markup": "markdown", "html": "<p>Fixed bugs and created a basic test case for device_base_class<br />\nStill need to write tests for the worker functions and simulate a status check and a check_remote_values call.</p>\n<p>Also need to sort the widget correctly. Probably need to provide a clever sorting function by default, but also allow the user to specify their own sorting function.</p>", "type": "rendered"}, "parents": [{"hash": "5d131628e0cd845574d4b298ecbcfd552fdafb54", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5d131628e0cd845574d4b298ecbcfd552fdafb54.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/5d131628e0cd845574d4b298ecbcfd552fdafb54"}}}], "date": "2013-02-20T03:13:08+00:00", "message": "Fixed bugs and created a basic test case for device_base_class\nStill need to write tests for the worker functions and simulate a status check and a check_remote_values call.\n\nAlso need to sort the widget correctly. Probably need to provide a clever sorting function by default, but also allow the user to specify their own sorting function.", "type": "commit"}, {"rendered": {"message": {"raw": "Renamed STATE_MANUAL, etc to MODE_MANUAL, etc.\n\nAdded functionality for checking \"remote\" values and creating a dialog asking the user to choose which values to use!", "markup": "markdown", "html": "<p>Renamed STATE_MANUAL, etc to MODE_MANUAL, etc.</p>\n<p>Added functionality for checking \"remote\" values and creating a dialog asking the user to choose which values to use!</p>", "type": "rendered"}}, "hash": "5d131628e0cd845574d4b298ecbcfd552fdafb54", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5d131628e0cd845574d4b298ecbcfd552fdafb54.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/5d131628e0cd845574d4b298ecbcfd552fdafb54/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/5d131628e0cd845574d4b298ecbcfd552fdafb54"}, "html": {"href": "#!/labscript_suite/blacs/commits/5d131628e0cd845574d4b298ecbcfd552fdafb54"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/5d131628e0cd845574d4b298ecbcfd552fdafb54"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/5d131628e0cd845574d4b298ecbcfd552fdafb54/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/5d131628e0cd845574d4b298ecbcfd552fdafb54/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Renamed STATE_MANUAL, etc to MODE_MANUAL, etc.\n\nAdded functionality for checking \"remote\" values and creating a dialog asking the user to choose which values to use!", "markup": "markdown", "html": "<p>Renamed STATE_MANUAL, etc to MODE_MANUAL, etc.</p>\n<p>Added functionality for checking \"remote\" values and creating a dialog asking the user to choose which values to use!</p>", "type": "rendered"}, "parents": [{"hash": "f6f21aa26fce4c54188f36a9b1646bfc5495cb22", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/f6f21aa26fce4c54188f36a9b1646bfc5495cb22.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/f6f21aa26fce4c54188f36a9b1646bfc5495cb22"}}}], "date": "2013-02-17T07:04:36+00:00", "message": "Renamed STATE_MANUAL, etc to MODE_MANUAL, etc.\n\nAdded functionality for checking \"remote\" values and creating a dialog asking the user to choose which values to use!", "type": "commit"}, {"rendered": {"message": {"raw": "Renamed STATE_MANUAL, etc to MODE_MANUAL, etc.\n\nAdded functionality for checking \"remote\" values and creating a dialog asking the user to choose which values to use!", "markup": "markdown", "html": "<p>Renamed STATE_MANUAL, etc to MODE_MANUAL, etc.</p>\n<p>Added functionality for checking \"remote\" values and creating a dialog asking the user to choose which values to use!</p>", "type": "rendered"}}, "hash": "f6f21aa26fce4c54188f36a9b1646bfc5495cb22", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/f6f21aa26fce4c54188f36a9b1646bfc5495cb22.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/f6f21aa26fce4c54188f36a9b1646bfc5495cb22/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/f6f21aa26fce4c54188f36a9b1646bfc5495cb22"}, "html": {"href": "#!/labscript_suite/blacs/commits/f6f21aa26fce4c54188f36a9b1646bfc5495cb22"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/f6f21aa26fce4c54188f36a9b1646bfc5495cb22"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/f6f21aa26fce4c54188f36a9b1646bfc5495cb22/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/f6f21aa26fce4c54188f36a9b1646bfc5495cb22/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Renamed STATE_MANUAL, etc to MODE_MANUAL, etc.\n\nAdded functionality for checking \"remote\" values and creating a dialog asking the user to choose which values to use!", "markup": "markdown", "html": "<p>Renamed STATE_MANUAL, etc to MODE_MANUAL, etc.</p>\n<p>Added functionality for checking \"remote\" values and creating a dialog asking the user to choose which values to use!</p>", "type": "rendered"}, "parents": [{"hash": "ae30d478bdd0bf98de49a3ac9ac766355fdccf04", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/ae30d478bdd0bf98de49a3ac9ac766355fdccf04.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/ae30d478bdd0bf98de49a3ac9ac766355fdccf04"}}}], "date": "2013-02-17T06:58:44+00:00", "message": "Renamed STATE_MANUAL, etc to MODE_MANUAL, etc.\n\nAdded functionality for checking \"remote\" values and creating a dialog asking the user to choose which values to use!", "type": "commit"}, {"rendered": {"message": {"raw": "Added name properties to the DO/AO/DDS objects\nAdded storage of the DDS connection and hardware name", "markup": "markdown", "html": "<p>Added name properties to the DO/AO/DDS objects<br />\nAdded storage of the DDS connection and hardware name</p>", "type": "rendered"}}, "hash": "ae30d478bdd0bf98de49a3ac9ac766355fdccf04", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/ae30d478bdd0bf98de49a3ac9ac766355fdccf04.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/ae30d478bdd0bf98de49a3ac9ac766355fdccf04/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/ae30d478bdd0bf98de49a3ac9ac766355fdccf04"}, "html": {"href": "#!/labscript_suite/blacs/commits/ae30d478bdd0bf98de49a3ac9ac766355fdccf04"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/ae30d478bdd0bf98de49a3ac9ac766355fdccf04"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/ae30d478bdd0bf98de49a3ac9ac766355fdccf04/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/ae30d478bdd0bf98de49a3ac9ac766355fdccf04/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added name properties to the DO/AO/DDS objects\nAdded storage of the DDS connection and hardware name", "markup": "markdown", "html": "<p>Added name properties to the DO/AO/DDS objects<br />\nAdded storage of the DDS connection and hardware name</p>", "type": "rendered"}, "parents": [{"hash": "143c65225f7784e599518fd14899202955e862de", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/143c65225f7784e599518fd14899202955e862de.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/143c65225f7784e599518fd14899202955e862de"}}}], "date": "2013-02-17T06:55:51+00:00", "message": "Added name properties to the DO/AO/DDS objects\nAdded storage of the DDS connection and hardware name", "type": "commit"}, {"rendered": {"message": {"raw": "renamed state to mode in some instances to make the distinction between states and modes clearer!\n\nAdded a delete_stale_states parameter to @define_state which will pull the most recent state out of the queue of adjacent identical statefunctions.\n\nEg, if the statefunctions in the queue are: [a,a,a,b,a,a,c,a,a,a,a]\nand a is defined wth delete_stale_states=True,\nthen we will execute the 3rd a, then b, then skip the next a, execute the a before the c, execute c, and then execute the last a.\nThis is designed so that multiple calls to program_device only runs the most recent one, which is especially important on slow devices like the RfBlaster which can take ~5s to program in manual mode. This replaces the hack previously used in the RfBlaster which ignored calls to program_device if we already had 2 in the queue (the number in the queue was kept track of manually within the tab)", "markup": "markdown", "html": "<p>renamed state to mode in some instances to make the distinction between states and modes clearer!</p>\n<p>Added a delete_stale_states parameter to @define_state which will pull the most recent state out of the queue of adjacent identical statefunctions.</p>\n<p>Eg, if the statefunctions in the queue are: [a,a,a,b,a,a,c,a,a,a,a]<br />\nand a is defined wth delete_stale_states=True,<br />\nthen we will execute the 3rd a, then b, then skip the next a, execute the a before the c, execute c, and then execute the last a.<br />\nThis is designed so that multiple calls to program_device only runs the most recent one, which is especially important on slow devices like the RfBlaster which can take ~5s to program in manual mode. This replaces the hack previously used in the RfBlaster which ignored calls to program_device if we already had 2 in the queue (the number in the queue was kept track of manually within the tab)</p>", "type": "rendered"}}, "hash": "143c65225f7784e599518fd14899202955e862de", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/143c65225f7784e599518fd14899202955e862de.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/143c65225f7784e599518fd14899202955e862de/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/143c65225f7784e599518fd14899202955e862de"}, "html": {"href": "#!/labscript_suite/blacs/commits/143c65225f7784e599518fd14899202955e862de"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/143c65225f7784e599518fd14899202955e862de"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/143c65225f7784e599518fd14899202955e862de/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/143c65225f7784e599518fd14899202955e862de/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "renamed state to mode in some instances to make the distinction between states and modes clearer!\n\nAdded a delete_stale_states parameter to @define_state which will pull the most recent state out of the queue of adjacent identical statefunctions.\n\nEg, if the statefunctions in the queue are: [a,a,a,b,a,a,c,a,a,a,a]\nand a is defined wth delete_stale_states=True,\nthen we will execute the 3rd a, then b, then skip the next a, execute the a before the c, execute c, and then execute the last a.\nThis is designed so that multiple calls to program_device only runs the most recent one, which is especially important on slow devices like the RfBlaster which can take ~5s to program in manual mode. This replaces the hack previously used in the RfBlaster which ignored calls to program_device if we already had 2 in the queue (the number in the queue was kept track of manually within the tab)", "markup": "markdown", "html": "<p>renamed state to mode in some instances to make the distinction between states and modes clearer!</p>\n<p>Added a delete_stale_states parameter to @define_state which will pull the most recent state out of the queue of adjacent identical statefunctions.</p>\n<p>Eg, if the statefunctions in the queue are: [a,a,a,b,a,a,c,a,a,a,a]<br />\nand a is defined wth delete_stale_states=True,<br />\nthen we will execute the 3rd a, then b, then skip the next a, execute the a before the c, execute c, and then execute the last a.<br />\nThis is designed so that multiple calls to program_device only runs the most recent one, which is especially important on slow devices like the RfBlaster which can take ~5s to program in manual mode. This replaces the hack previously used in the RfBlaster which ignored calls to program_device if we already had 2 in the queue (the number in the queue was kept track of manually within the tab)</p>", "type": "rendered"}, "parents": [{"hash": "a0b27a6510cd0ca0d61499a896d10cfcd4f32806", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/a0b27a6510cd0ca0d61499a896d10cfcd4f32806.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/a0b27a6510cd0ca0d61499a896d10cfcd4f32806"}}}], "date": "2013-02-17T06:55:07+00:00", "message": "renamed state to mode in some instances to make the distinction between states and modes clearer!\n\nAdded a delete_stale_states parameter to @define_state which will pull the most recent state out of the queue of adjacent identical statefunctions.\n\nEg, if the statefunctions in the queue are: [a,a,a,b,a,a,c,a,a,a,a]\nand a is defined wth delete_stale_states=True,\nthen we will execute the 3rd a, then b, then skip the next a, execute the a before the c, execute c, and then execute the last a.\nThis is designed so that multiple calls to program_device only runs the most recent one, which is especially important on slow devices like the RfBlaster which can take ~5s to program in manual mode. This replaces the hack previously used in the RfBlaster which ignored calls to program_device if we already had 2 in the queue (the number in the queue was kept track of manually within the tab)", "type": "commit"}, {"rendered": {"message": {"raw": "Modified the StateQueue to store the function rather than the name of teh function to be looked up later (this also avoids poluting the class namespace with _funcname copies of the function).\n\nMade timeouts more robust. The call to execute_timeout will occur in every mode, but the statefunction will only be queued up if the current mode is one of the statefunctions allowed modes. The timeout is always requeued, regardless of the curret mode.", "markup": "markdown", "html": "<p>Modified the StateQueue to store the function rather than the name of teh function to be looked up later (this also avoids poluting the class namespace with _funcname copies of the function).</p>\n<p>Made timeouts more robust. The call to execute_timeout will occur in every mode, but the statefunction will only be queued up if the current mode is one of the statefunctions allowed modes. The timeout is always requeued, regardless of the curret mode.</p>", "type": "rendered"}}, "hash": "a0b27a6510cd0ca0d61499a896d10cfcd4f32806", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/a0b27a6510cd0ca0d61499a896d10cfcd4f32806.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/a0b27a6510cd0ca0d61499a896d10cfcd4f32806/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/a0b27a6510cd0ca0d61499a896d10cfcd4f32806"}, "html": {"href": "#!/labscript_suite/blacs/commits/a0b27a6510cd0ca0d61499a896d10cfcd4f32806"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/a0b27a6510cd0ca0d61499a896d10cfcd4f32806"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/a0b27a6510cd0ca0d61499a896d10cfcd4f32806/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/a0b27a6510cd0ca0d61499a896d10cfcd4f32806/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Modified the StateQueue to store the function rather than the name of teh function to be looked up later (this also avoids poluting the class namespace with _funcname copies of the function).\n\nMade timeouts more robust. The call to execute_timeout will occur in every mode, but the statefunction will only be queued up if the current mode is one of the statefunctions allowed modes. The timeout is always requeued, regardless of the curret mode.", "markup": "markdown", "html": "<p>Modified the StateQueue to store the function rather than the name of teh function to be looked up later (this also avoids poluting the class namespace with _funcname copies of the function).</p>\n<p>Made timeouts more robust. The call to execute_timeout will occur in every mode, but the statefunction will only be queued up if the current mode is one of the statefunctions allowed modes. The timeout is always requeued, regardless of the curret mode.</p>", "type": "rendered"}, "parents": [{"hash": "190bd46d8ac716c050c6880383d8352744a46808", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/190bd46d8ac716c050c6880383d8352744a46808.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/190bd46d8ac716c050c6880383d8352744a46808"}}}], "date": "2013-02-17T06:26:39+00:00", "message": "Modified the StateQueue to store the function rather than the name of teh function to be looked up later (this also avoids poluting the class namespace with _funcname copies of the function).\n\nMade timeouts more robust. The call to execute_timeout will occur in every mode, but the statefunction will only be queued up if the current mode is one of the statefunctions allowed modes. The timeout is always requeued, regardless of the curret mode.", "type": "commit"}, {"rendered": {"message": {"raw": "device_base_class.py/tab_frame.ui\nStarted too build in the remote value check code.\n\ntab_base_classes.py\nAdded in smart programming\nrewrote timeout code\n\nThis is a commit before an even more significant rewrite of the timeout adding code. I've realised there will be bugs with this given the implementation of various modes, which could potentially lead to the buildup of many statefunctions due to the fact that the timeout_add function can run in all states, but the statefunction you want running every x seconds may stay and build up in the queue if it can only run in manual_mode and we are in another mode.", "markup": "markdown", "html": "<p>device_base_class.py/tab_frame.ui<br />\nStarted too build in the remote value check code.</p>\n<p>tab_base_classes.py<br />\nAdded in smart programming<br />\nrewrote timeout code</p>\n<p>This is a commit before an even more significant rewrite of the timeout adding code. I've realised there will be bugs with this given the implementation of various modes, which could potentially lead to the buildup of many statefunctions due to the fact that the timeout_add function can run in all states, but the statefunction you want running every x seconds may stay and build up in the queue if it can only run in manual_mode and we are in another mode.</p>", "type": "rendered"}}, "hash": "190bd46d8ac716c050c6880383d8352744a46808", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/190bd46d8ac716c050c6880383d8352744a46808.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/190bd46d8ac716c050c6880383d8352744a46808/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/190bd46d8ac716c050c6880383d8352744a46808"}, "html": {"href": "#!/labscript_suite/blacs/commits/190bd46d8ac716c050c6880383d8352744a46808"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/190bd46d8ac716c050c6880383d8352744a46808"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/190bd46d8ac716c050c6880383d8352744a46808/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/190bd46d8ac716c050c6880383d8352744a46808/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "device_base_class.py/tab_frame.ui\nStarted too build in the remote value check code.\n\ntab_base_classes.py\nAdded in smart programming\nrewrote timeout code\n\nThis is a commit before an even more significant rewrite of the timeout adding code. I've realised there will be bugs with this given the implementation of various modes, which could potentially lead to the buildup of many statefunctions due to the fact that the timeout_add function can run in all states, but the statefunction you want running every x seconds may stay and build up in the queue if it can only run in manual_mode and we are in another mode.", "markup": "markdown", "html": "<p>device_base_class.py/tab_frame.ui<br />\nStarted too build in the remote value check code.</p>\n<p>tab_base_classes.py<br />\nAdded in smart programming<br />\nrewrote timeout code</p>\n<p>This is a commit before an even more significant rewrite of the timeout adding code. I've realised there will be bugs with this given the implementation of various modes, which could potentially lead to the buildup of many statefunctions due to the fact that the timeout_add function can run in all states, but the statefunction you want running every x seconds may stay and build up in the queue if it can only run in manual_mode and we are in another mode.</p>", "type": "rendered"}, "parents": [{"hash": "6981d0623902f1ede9233f14d4321b81c946ab93", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/6981d0623902f1ede9233f14d4321b81c946ab93.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/6981d0623902f1ede9233f14d4321b81c946ab93"}}}], "date": "2013-02-05T03:17:41+00:00", "message": "device_base_class.py/tab_frame.ui\nStarted too build in the remote value check code.\n\ntab_base_classes.py\nAdded in smart programming\nrewrote timeout code\n\nThis is a commit before an even more significant rewrite of the timeout adding code. I've realised there will be bugs with this given the implementation of various modes, which could potentially lead to the buildup of many statefunctions due to the fact that the timeout_add function can run in all states, but the statefunction you want running every x seconds may stay and build up in the queue if it can only run in manual_mode and we are in another mode.", "type": "commit"}, {"rendered": {"message": {"raw": "In output_classes.py\nMade function names consistent across AO/DO objects\nAdded functions to the DDS object to get/set the value. Values are dictionaries containing channel:value pairs\n\nIn tab_base_classes.py\nCleaned up the code a bit to remove lots of redundant GTK stuff\nFixed error reporting (made it a lot cleaner, and now it is formatted and coloured correctly)\nAdjusted the code to reflect the changes to the UI file\n\nIn tab_frame.ui\nMade the title, restart and refresh smart programming widgets part of every tab\nWill make it possible to hide the smart programming if the device doesn't use it (maybe disable and force check the box for consistency?)\n\nIn device_base_class.py (ALL UNTESTED)\nWrote a class to try and abstract away a lot of the boring stuff we do with the UI in every device GUI class.\nWidget generation is more automatic, and it should even be able to place widgets for you.\nChannels and their capabilities are defined in a dictionary (kind of like a definition through meta data)\nAdded standard functions for transitioning between modes, etc.\nI expect most devices to subclass this, and at a minimum, overwrite the initialise_GUI() method, which should call some of the widget generation classes previously described. A worker class can then be made to match the standard worker process calls I've used here (like transition_to_manual, etc)", "markup": "markdown", "html": "<p>In output_classes.py<br />\nMade function names consistent across AO/DO objects<br />\nAdded functions to the DDS object to get/set the value. Values are dictionaries containing channel:value pairs</p>\n<p>In tab_base_classes.py<br />\nCleaned up the code a bit to remove lots of redundant GTK stuff<br />\nFixed error reporting (made it a lot cleaner, and now it is formatted and coloured correctly)<br />\nAdjusted the code to reflect the changes to the UI file</p>\n<p>In tab_frame.ui<br />\nMade the title, restart and refresh smart programming widgets part of every tab<br />\nWill make it possible to hide the smart programming if the device doesn't use it (maybe disable and force check the box for consistency?)</p>\n<p>In device_base_class.py (ALL UNTESTED)<br />\nWrote a class to try and abstract away a lot of the boring stuff we do with the UI in every device GUI class.<br />\nWidget generation is more automatic, and it should even be able to place widgets for you.<br />\nChannels and their capabilities are defined in a dictionary (kind of like a definition through meta data)<br />\nAdded standard functions for transitioning between modes, etc.<br />\nI expect most devices to subclass this, and at a minimum, overwrite the initialise_GUI() method, which should call some of the widget generation classes previously described. A worker class can then be made to match the standard worker process calls I've used here (like transition_to_manual, etc)</p>", "type": "rendered"}}, "hash": "6981d0623902f1ede9233f14d4321b81c946ab93", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/6981d0623902f1ede9233f14d4321b81c946ab93.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/6981d0623902f1ede9233f14d4321b81c946ab93/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/6981d0623902f1ede9233f14d4321b81c946ab93"}, "html": {"href": "#!/labscript_suite/blacs/commits/6981d0623902f1ede9233f14d4321b81c946ab93"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/6981d0623902f1ede9233f14d4321b81c946ab93"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/6981d0623902f1ede9233f14d4321b81c946ab93/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/6981d0623902f1ede9233f14d4321b81c946ab93/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "In output_classes.py\nMade function names consistent across AO/DO objects\nAdded functions to the DDS object to get/set the value. Values are dictionaries containing channel:value pairs\n\nIn tab_base_classes.py\nCleaned up the code a bit to remove lots of redundant GTK stuff\nFixed error reporting (made it a lot cleaner, and now it is formatted and coloured correctly)\nAdjusted the code to reflect the changes to the UI file\n\nIn tab_frame.ui\nMade the title, restart and refresh smart programming widgets part of every tab\nWill make it possible to hide the smart programming if the device doesn't use it (maybe disable and force check the box for consistency?)\n\nIn device_base_class.py (ALL UNTESTED)\nWrote a class to try and abstract away a lot of the boring stuff we do with the UI in every device GUI class.\nWidget generation is more automatic, and it should even be able to place widgets for you.\nChannels and their capabilities are defined in a dictionary (kind of like a definition through meta data)\nAdded standard functions for transitioning between modes, etc.\nI expect most devices to subclass this, and at a minimum, overwrite the initialise_GUI() method, which should call some of the widget generation classes previously described. A worker class can then be made to match the standard worker process calls I've used here (like transition_to_manual, etc)", "markup": "markdown", "html": "<p>In output_classes.py<br />\nMade function names consistent across AO/DO objects<br />\nAdded functions to the DDS object to get/set the value. Values are dictionaries containing channel:value pairs</p>\n<p>In tab_base_classes.py<br />\nCleaned up the code a bit to remove lots of redundant GTK stuff<br />\nFixed error reporting (made it a lot cleaner, and now it is formatted and coloured correctly)<br />\nAdjusted the code to reflect the changes to the UI file</p>\n<p>In tab_frame.ui<br />\nMade the title, restart and refresh smart programming widgets part of every tab<br />\nWill make it possible to hide the smart programming if the device doesn't use it (maybe disable and force check the box for consistency?)</p>\n<p>In device_base_class.py (ALL UNTESTED)<br />\nWrote a class to try and abstract away a lot of the boring stuff we do with the UI in every device GUI class.<br />\nWidget generation is more automatic, and it should even be able to place widgets for you.<br />\nChannels and their capabilities are defined in a dictionary (kind of like a definition through meta data)<br />\nAdded standard functions for transitioning between modes, etc.<br />\nI expect most devices to subclass this, and at a minimum, overwrite the initialise_GUI() method, which should call some of the widget generation classes previously described. A worker class can then be made to match the standard worker process calls I've used here (like transition_to_manual, etc)</p>", "type": "rendered"}, "parents": [{"hash": "4ee2905edbc8c995a40444aeac49bf73c15dde38", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/4ee2905edbc8c995a40444aeac49bf73c15dde38.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/4ee2905edbc8c995a40444aeac49bf73c15dde38"}}}], "date": "2013-02-01T06:29:07+00:00", "message": "In output_classes.py\nMade function names consistent across AO/DO objects\nAdded functions to the DDS object to get/set the value. Values are dictionaries containing channel:value pairs\n\nIn tab_base_classes.py\nCleaned up the code a bit to remove lots of redundant GTK stuff\nFixed error reporting (made it a lot cleaner, and now it is formatted and coloured correctly)\nAdjusted the code to reflect the changes to the UI file\n\nIn tab_frame.ui\nMade the title, restart and refresh smart programming widgets part of every tab\nWill make it possible to hide the smart programming if the device doesn't use it (maybe disable and force check the box for consistency?)\n\nIn device_base_class.py (ALL UNTESTED)\nWrote a class to try and abstract away a lot of the boring stuff we do with the UI in every device GUI class.\nWidget generation is more automatic, and it should even be able to place widgets for you.\nChannels and their capabilities are defined in a dictionary (kind of like a definition through meta data)\nAdded standard functions for transitioning between modes, etc.\nI expect most devices to subclass this, and at a minimum, overwrite the initialise_GUI() method, which should call some of the widget generation classes previously described. A worker class can then be made to match the standard worker process calls I've used here (like transition_to_manual, etc)", "type": "commit"}, {"rendered": {"message": {"raw": "Modified tab_base_classes to use the yield command (along with generators) to queue work to child processes.\nThis removes the need to have a do_after function\nThis allows the user to queue work more than once in a state\nThis provides more readable code (queue_work would execute after the entire function before, now it executes at the point you call it)", "markup": "markdown", "html": "<p>Modified tab_base_classes to use the yield command (along with generators) to queue work to child processes.<br />\nThis removes the need to have a do_after function<br />\nThis allows the user to queue work more than once in a state<br />\nThis provides more readable code (queue_work would execute after the entire function before, now it executes at the point you call it)</p>", "type": "rendered"}}, "hash": "4ee2905edbc8c995a40444aeac49bf73c15dde38", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/4ee2905edbc8c995a40444aeac49bf73c15dde38.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/4ee2905edbc8c995a40444aeac49bf73c15dde38/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/4ee2905edbc8c995a40444aeac49bf73c15dde38"}, "html": {"href": "#!/labscript_suite/blacs/commits/4ee2905edbc8c995a40444aeac49bf73c15dde38"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/4ee2905edbc8c995a40444aeac49bf73c15dde38"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/4ee2905edbc8c995a40444aeac49bf73c15dde38/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/4ee2905edbc8c995a40444aeac49bf73c15dde38/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Modified tab_base_classes to use the yield command (along with generators) to queue work to child processes.\nThis removes the need to have a do_after function\nThis allows the user to queue work more than once in a state\nThis provides more readable code (queue_work would execute after the entire function before, now it executes at the point you call it)", "markup": "markdown", "html": "<p>Modified tab_base_classes to use the yield command (along with generators) to queue work to child processes.<br />\nThis removes the need to have a do_after function<br />\nThis allows the user to queue work more than once in a state<br />\nThis provides more readable code (queue_work would execute after the entire function before, now it executes at the point you call it)</p>", "type": "rendered"}, "parents": [{"hash": "9e018627136d5043d2d78d95449048ba9888263d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/9e018627136d5043d2d78d95449048ba9888263d.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/9e018627136d5043d2d78d95449048ba9888263d"}}}], "date": "2013-01-30T02:17:48+00:00", "message": "Modified tab_base_classes to use the yield command (along with generators) to queue work to child processes.\nThis removes the need to have a do_after function\nThis allows the user to queue work more than once in a state\nThis provides more readable code (queue_work would execute after the entire function before, now it executes at the point you call it)", "type": "commit"}, {"rendered": {"message": {"raw": "Removed Ipython import", "markup": "markdown", "html": "<p>Removed Ipython import</p>", "type": "rendered"}}, "hash": "9e018627136d5043d2d78d95449048ba9888263d", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/9e018627136d5043d2d78d95449048ba9888263d.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/9e018627136d5043d2d78d95449048ba9888263d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/9e018627136d5043d2d78d95449048ba9888263d"}, "html": {"href": "#!/labscript_suite/blacs/commits/9e018627136d5043d2d78d95449048ba9888263d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/9e018627136d5043d2d78d95449048ba9888263d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/9e018627136d5043d2d78d95449048ba9888263d/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/9e018627136d5043d2d78d95449048ba9888263d/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Removed Ipython import", "markup": "markdown", "html": "<p>Removed Ipython import</p>", "type": "rendered"}, "parents": [{"hash": "816fe19caf3cb8ba0277b202137585bb9300cba0", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/816fe19caf3cb8ba0277b202137585bb9300cba0.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/816fe19caf3cb8ba0277b202137585bb9300cba0"}}}], "date": "2013-01-29T23:42:04+00:00", "message": "Removed Ipython import", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a typo in a function name\nRemoved a pass I added in once when debugging", "markup": "markdown", "html": "<p>Fixed a typo in a function name<br />\nRemoved a pass I added in once when debugging</p>", "type": "rendered"}}, "hash": "816fe19caf3cb8ba0277b202137585bb9300cba0", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/816fe19caf3cb8ba0277b202137585bb9300cba0.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/816fe19caf3cb8ba0277b202137585bb9300cba0/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/816fe19caf3cb8ba0277b202137585bb9300cba0"}, "html": {"href": "#!/labscript_suite/blacs/commits/816fe19caf3cb8ba0277b202137585bb9300cba0"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/816fe19caf3cb8ba0277b202137585bb9300cba0"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/816fe19caf3cb8ba0277b202137585bb9300cba0/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/816fe19caf3cb8ba0277b202137585bb9300cba0/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed a typo in a function name\nRemoved a pass I added in once when debugging", "markup": "markdown", "html": "<p>Fixed a typo in a function name<br />\nRemoved a pass I added in once when debugging</p>", "type": "rendered"}, "parents": [{"hash": "5125ddfd95956d36b5f1ef6c510ff9579e2ab47c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5125ddfd95956d36b5f1ef6c510ff9579e2ab47c.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/5125ddfd95956d36b5f1ef6c510ff9579e2ab47c"}}}], "date": "2013-01-29T03:07:34+00:00", "message": "Fixed a typo in a function name\nRemoved a pass I added in once when debugging", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a bug where the step size was not stored/set correctly", "markup": "markdown", "html": "<p>Fixed a bug where the step size was not stored/set correctly</p>", "type": "rendered"}}, "hash": "5125ddfd95956d36b5f1ef6c510ff9579e2ab47c", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5125ddfd95956d36b5f1ef6c510ff9579e2ab47c.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/5125ddfd95956d36b5f1ef6c510ff9579e2ab47c/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/5125ddfd95956d36b5f1ef6c510ff9579e2ab47c"}, "html": {"href": "#!/labscript_suite/blacs/commits/5125ddfd95956d36b5f1ef6c510ff9579e2ab47c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/5125ddfd95956d36b5f1ef6c510ff9579e2ab47c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/5125ddfd95956d36b5f1ef6c510ff9579e2ab47c/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/5125ddfd95956d36b5f1ef6c510ff9579e2ab47c/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed a bug where the step size was not stored/set correctly", "markup": "markdown", "html": "<p>Fixed a bug where the step size was not stored/set correctly</p>", "type": "rendered"}, "parents": [{"hash": "d74c4961b91d19eb624cb18c67346033e4154c34", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/d74c4961b91d19eb624cb18c67346033e4154c34.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/d74c4961b91d19eb624cb18c67346033e4154c34"}}}], "date": "2013-01-29T02:51:31+00:00", "message": "Fixed a bug where the step size was not stored/set correctly", "type": "commit"}, {"rendered": {"message": {"raw": "Wrote a test case for AO/DO classes and fixed some bugs.\nIt all works I think, except for clicking a combobox with a model, which locks up the entire application.\nBug is not related to my code as far as I can see (disabled all signals, no recursive behaviour)\nWell investigate further...", "markup": "markdown", "html": "<p>Wrote a test case for AO/DO classes and fixed some bugs.<br />\nIt all works I think, except for clicking a combobox with a model, which locks up the entire application.<br />\nBug is not related to my code as far as I can see (disabled all signals, no recursive behaviour)<br />\nWell investigate further...</p>", "type": "rendered"}}, "hash": "d74c4961b91d19eb624cb18c67346033e4154c34", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/d74c4961b91d19eb624cb18c67346033e4154c34.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/d74c4961b91d19eb624cb18c67346033e4154c34/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/d74c4961b91d19eb624cb18c67346033e4154c34"}, "html": {"href": "#!/labscript_suite/blacs/commits/d74c4961b91d19eb624cb18c67346033e4154c34"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/d74c4961b91d19eb624cb18c67346033e4154c34"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/d74c4961b91d19eb624cb18c67346033e4154c34/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/d74c4961b91d19eb624cb18c67346033e4154c34/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Wrote a test case for AO/DO classes and fixed some bugs.\nIt all works I think, except for clicking a combobox with a model, which locks up the entire application.\nBug is not related to my code as far as I can see (disabled all signals, no recursive behaviour)\nWell investigate further...", "markup": "markdown", "html": "<p>Wrote a test case for AO/DO classes and fixed some bugs.<br />\nIt all works I think, except for clicking a combobox with a model, which locks up the entire application.<br />\nBug is not related to my code as far as I can see (disabled all signals, no recursive behaviour)<br />\nWell investigate further...</p>", "type": "rendered"}, "parents": [{"hash": "9d79d211e6d4f92b2861ee6fb810f3db72959442", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/9d79d211e6d4f92b2861ee6fb810f3db72959442.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/9d79d211e6d4f92b2861ee6fb810f3db72959442"}}}], "date": "2013-01-28T10:35:15+00:00", "message": "Wrote a test case for AO/DO classes and fixed some bugs.\nIt all works I think, except for clicking a combobox with a model, which locks up the entire application.\nBug is not related to my code as far as I can see (disabled all signals, no recursive behaviour)\nWell investigate further...", "type": "commit"}, {"rendered": {"message": {"raw": "Made a lot of untested modifications to output classes for the Qt port!\n\nDO and AO should be done now\nWill test soon!", "markup": "markdown", "html": "<p>Made a lot of untested modifications to output classes for the Qt port!</p>\n<p>DO and AO should be done now<br />\nWill test soon!</p>", "type": "rendered"}}, "hash": "9d79d211e6d4f92b2861ee6fb810f3db72959442", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/9d79d211e6d4f92b2861ee6fb810f3db72959442.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/9d79d211e6d4f92b2861ee6fb810f3db72959442/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/9d79d211e6d4f92b2861ee6fb810f3db72959442"}, "html": {"href": "#!/labscript_suite/blacs/commits/9d79d211e6d4f92b2861ee6fb810f3db72959442"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/9d79d211e6d4f92b2861ee6fb810f3db72959442"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/9d79d211e6d4f92b2861ee6fb810f3db72959442/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/9d79d211e6d4f92b2861ee6fb810f3db72959442/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Made a lot of untested modifications to output classes for the Qt port!\n\nDO and AO should be done now\nWill test soon!", "markup": "markdown", "html": "<p>Made a lot of untested modifications to output classes for the Qt port!</p>\n<p>DO and AO should be done now<br />\nWill test soon!</p>", "type": "rendered"}, "parents": [{"hash": "f5df5ecb8e76b4c5a4d7fada26e963cd756ca5a7", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/f5df5ecb8e76b4c5a4d7fada26e963cd756ca5a7.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/f5df5ecb8e76b4c5a4d7fada26e963cd756ca5a7"}}}], "date": "2013-01-28T06:14:57+00:00", "message": "Made a lot of untested modifications to output classes for the Qt port!\n\nDO and AO should be done now\nWill test soon!", "type": "commit"}, {"rendered": {"message": {"raw": "user interface for tab_base_classes (forgot to committ it last time)", "markup": "markdown", "html": "<p>user interface for tab_base_classes (forgot to committ it last time)</p>", "type": "rendered"}}, "hash": "f5df5ecb8e76b4c5a4d7fada26e963cd756ca5a7", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/f5df5ecb8e76b4c5a4d7fada26e963cd756ca5a7.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/f5df5ecb8e76b4c5a4d7fada26e963cd756ca5a7/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/f5df5ecb8e76b4c5a4d7fada26e963cd756ca5a7"}, "html": {"href": "#!/labscript_suite/blacs/commits/f5df5ecb8e76b4c5a4d7fada26e963cd756ca5a7"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/f5df5ecb8e76b4c5a4d7fada26e963cd756ca5a7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/f5df5ecb8e76b4c5a4d7fada26e963cd756ca5a7/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/f5df5ecb8e76b4c5a4d7fada26e963cd756ca5a7/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "user interface for tab_base_classes (forgot to committ it last time)", "markup": "markdown", "html": "<p>user interface for tab_base_classes (forgot to committ it last time)</p>", "type": "rendered"}, "parents": [{"hash": "f43630b172036281d85ae9819bb72541e81e2f43", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/f43630b172036281d85ae9819bb72541e81e2f43.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/f43630b172036281d85ae9819bb72541e81e2f43"}}}], "date": "2013-01-14T00:34:54+00:00", "message": "user interface for tab_base_classes (forgot to committ it last time)", "type": "commit"}, {"rendered": {"message": {"raw": "Merge", "markup": "markdown", "html": "<p>Merge</p>", "type": "rendered"}}, "hash": "f43630b172036281d85ae9819bb72541e81e2f43", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/f43630b172036281d85ae9819bb72541e81e2f43.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/f43630b172036281d85ae9819bb72541e81e2f43/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/f43630b172036281d85ae9819bb72541e81e2f43"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/f43630b172036281d85ae9819bb72541e81e2f43"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/f43630b172036281d85ae9819bb72541e81e2f43/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/f43630b172036281d85ae9819bb72541e81e2f43/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Merge", "markup": "markdown", "html": "<p>Merge</p>", "type": "rendered"}, "parents": [{"hash": "cbc58fb5913fe74a54bca3bb31237afaa2512e10", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/cbc58fb5913fe74a54bca3bb31237afaa2512e10.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/cbc58fb5913fe74a54bca3bb31237afaa2512e10"}}}, {"hash": "c8d3590bad7b8906fdf7f2587b7f92bcb755c684", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/c8d3590bad7b8906fdf7f2587b7f92bcb755c684.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/c8d3590bad7b8906fdf7f2587b7f92bcb755c684"}}}], "date": "2013-01-14T00:28:32+00:00", "message": "Merge", "type": "commit"}, {"rendered": {"message": {"raw": "We now have a working tab_base_classes under Qt.\nStill need to test the new parallel state architecture (manual/buffered mode)", "markup": "markdown", "html": "<p>We now have a working tab_base_classes under Qt.<br />\nStill need to test the new parallel state architecture (manual/buffered mode)</p>", "type": "rendered"}}, "hash": "cbc58fb5913fe74a54bca3bb31237afaa2512e10", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/cbc58fb5913fe74a54bca3bb31237afaa2512e10.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/cbc58fb5913fe74a54bca3bb31237afaa2512e10/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/cbc58fb5913fe74a54bca3bb31237afaa2512e10"}, "html": {"href": "#!/labscript_suite/blacs/commits/cbc58fb5913fe74a54bca3bb31237afaa2512e10"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/cbc58fb5913fe74a54bca3bb31237afaa2512e10"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/cbc58fb5913fe74a54bca3bb31237afaa2512e10/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/cbc58fb5913fe74a54bca3bb31237afaa2512e10/statuses_page=1.json"}}, "author": {"raw": "Phil@pinetab.staff.monash.edu.au", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "We now have a working tab_base_classes under Qt.\nStill need to test the new parallel state architecture (manual/buffered mode)", "markup": "markdown", "html": "<p>We now have a working tab_base_classes under Qt.<br />\nStill need to test the new parallel state architecture (manual/buffered mode)</p>", "type": "rendered"}, "parents": [{"hash": "2456a5b85b1a029bd5e724e5954e7926d120e4b0", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/2456a5b85b1a029bd5e724e5954e7926d120e4b0.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/2456a5b85b1a029bd5e724e5954e7926d120e4b0"}}}], "date": "2013-01-13T23:42:43+00:00", "message": "We now have a working tab_base_classes under Qt.\nStill need to test the new parallel state architecture (manual/buffered mode)", "type": "commit"}, {"rendered": {"message": {"raw": "Added tab order to widgets\nStarted working on tab_base_classes.py.\nImplemented a StateQueue which will provides a function for getting the next allowed state out.\nI've implemented it stupidly though, and will now go back and replace some of the complexity with a Python list...", "markup": "markdown", "html": "<p>Added tab order to widgets<br />\nStarted working on tab_base_classes.py.<br />\nImplemented a StateQueue which will provides a function for getting the next allowed state out.<br />\nI've implemented it stupidly though, and will now go back and replace some of the complexity with a Python list...</p>", "type": "rendered"}}, "hash": "2456a5b85b1a029bd5e724e5954e7926d120e4b0", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/2456a5b85b1a029bd5e724e5954e7926d120e4b0.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/2456a5b85b1a029bd5e724e5954e7926d120e4b0/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/2456a5b85b1a029bd5e724e5954e7926d120e4b0"}, "html": {"href": "#!/labscript_suite/blacs/commits/2456a5b85b1a029bd5e724e5954e7926d120e4b0"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/2456a5b85b1a029bd5e724e5954e7926d120e4b0"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/2456a5b85b1a029bd5e724e5954e7926d120e4b0/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/2456a5b85b1a029bd5e724e5954e7926d120e4b0/statuses_page=1.json"}}, "author": {"raw": "Phil@pinetab.home", "type": "author"}, "summary": {"raw": "Added tab order to widgets\nStarted working on tab_base_classes.py.\nImplemented a StateQueue which will provides a function for getting the next allowed state out.\nI've implemented it stupidly though, and will now go back and replace some of the complexity with a Python list...", "markup": "markdown", "html": "<p>Added tab order to widgets<br />\nStarted working on tab_base_classes.py.<br />\nImplemented a StateQueue which will provides a function for getting the next allowed state out.<br />\nI've implemented it stupidly though, and will now go back and replace some of the complexity with a Python list...</p>", "type": "rendered"}, "parents": [{"hash": "998a3f5649dbec7e1c159b849d49c6b6fa696904", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/998a3f5649dbec7e1c159b849d49c6b6fa696904.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/998a3f5649dbec7e1c159b849d49c6b6fa696904"}}}], "date": "2013-01-12T03:30:50+00:00", "message": "Added tab order to widgets\nStarted working on tab_base_classes.py.\nImplemented a StateQueue which will provides a function for getting the next allowed state out.\nI've implemented it stupidly though, and will now go back and replace some of the complexity with a Python list...", "type": "commit"}, {"rendered": {"message": {"raw": "Started the Qt port.\nmain.pyw is now very minamilistic\nThe queue manager is being moved into a class within queue.py\nNew UI file (incomplete) is also added.\n\nAt this stage you can add files to the queue, and reorder them.\nAlso done some nice linking between buttons and instance variables using @property (it would be even nicer if I can work out how to connect a Qt signal into a @property setter without an intermediary function)", "markup": "markdown", "html": "<p>Started the Qt port.<br />\nmain.pyw is now very minamilistic<br />\nThe queue manager is being moved into a class within queue.py<br />\nNew UI file (incomplete) is also added.</p>\n<p>At this stage you can add files to the queue, and reorder them.<br />\nAlso done some nice linking between buttons and instance variables using @property (it would be even nicer if I can work out how to connect a Qt signal into a @property setter without an intermediary function)</p>", "type": "rendered"}}, "hash": "998a3f5649dbec7e1c159b849d49c6b6fa696904", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/998a3f5649dbec7e1c159b849d49c6b6fa696904.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/998a3f5649dbec7e1c159b849d49c6b6fa696904/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/998a3f5649dbec7e1c159b849d49c6b6fa696904"}, "html": {"href": "#!/labscript_suite/blacs/commits/998a3f5649dbec7e1c159b849d49c6b6fa696904"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/998a3f5649dbec7e1c159b849d49c6b6fa696904"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/998a3f5649dbec7e1c159b849d49c6b6fa696904/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/998a3f5649dbec7e1c159b849d49c6b6fa696904/statuses_page=1.json"}}, "author": {"raw": "Phil@pinetab.staff.monash.edu.au", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Started the Qt port.\nmain.pyw is now very minamilistic\nThe queue manager is being moved into a class within queue.py\nNew UI file (incomplete) is also added.\n\nAt this stage you can add files to the queue, and reorder them.\nAlso done some nice linking between buttons and instance variables using @property (it would be even nicer if I can work out how to connect a Qt signal into a @property setter without an intermediary function)", "markup": "markdown", "html": "<p>Started the Qt port.<br />\nmain.pyw is now very minamilistic<br />\nThe queue manager is being moved into a class within queue.py<br />\nNew UI file (incomplete) is also added.</p>\n<p>At this stage you can add files to the queue, and reorder them.<br />\nAlso done some nice linking between buttons and instance variables using @property (it would be even nicer if I can work out how to connect a Qt signal into a @property setter without an intermediary function)</p>", "type": "rendered"}, "parents": [{"hash": "5914dd7cb0a59378c5cc5985ee145f540f0ccf54", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5914dd7cb0a59378c5cc5985ee145f540f0ccf54.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/5914dd7cb0a59378c5cc5985ee145f540f0ccf54"}}}], "date": "2013-01-11T06:30:01+00:00", "message": "Started the Qt port.\nmain.pyw is now very minamilistic\nThe queue manager is being moved into a class within queue.py\nNew UI file (incomplete) is also added.\n\nAt this stage you can add files to the queue, and reorder them.\nAlso done some nice linking between buttons and instance variables using @property (it would be even nicer if I can work out how to connect a Qt signal into a @property setter without an intermediary function)", "type": "commit"}, {"rendered": {"message": {"raw": "Added tag Gtk Release for changeset 3d341e9b2732", "markup": "markdown", "html": "<p>Added tag Gtk Release for changeset <a href=\"#!/labscript_suite/blacs/commits/3d341e9b2732\" rel=\"nofollow\" class=\"ap-connect-link\">3d341e9b2732</a></p>", "type": "rendered"}}, "hash": "5914dd7cb0a59378c5cc5985ee145f540f0ccf54", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5914dd7cb0a59378c5cc5985ee145f540f0ccf54.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/5914dd7cb0a59378c5cc5985ee145f540f0ccf54/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/5914dd7cb0a59378c5cc5985ee145f540f0ccf54"}, "html": {"href": "#!/labscript_suite/blacs/commits/5914dd7cb0a59378c5cc5985ee145f540f0ccf54"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/5914dd7cb0a59378c5cc5985ee145f540f0ccf54"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/5914dd7cb0a59378c5cc5985ee145f540f0ccf54/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/5914dd7cb0a59378c5cc5985ee145f540f0ccf54/statuses_page=1.json"}}, "author": {"raw": "Phil@pinetab.staff.monash.edu.au", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added tag Gtk Release for changeset 3d341e9b2732", "markup": "markdown", "html": "<p>Added tag Gtk Release for changeset <a href=\"#!/labscript_suite/blacs/commits/3d341e9b2732\" rel=\"nofollow\" class=\"ap-connect-link\">3d341e9b2732</a></p>", "type": "rendered"}, "parents": [{"hash": "3d341e9b2732293bd9516b10ccc7889c49f87c0d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/3d341e9b2732293bd9516b10ccc7889c49f87c0d.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/3d341e9b2732293bd9516b10ccc7889c49f87c0d"}}}], "date": "2013-01-10T23:09:19+00:00", "message": "Added tag Gtk Release for changeset 3d341e9b2732", "type": "commit"}, {"rendered": {"message": {"raw": "Test of hgweb upload (sorry)", "markup": "markdown", "html": "<p>Test of hgweb upload (sorry)</p>", "type": "rendered"}}, "hash": "c8d3590bad7b8906fdf7f2587b7f92bcb755c684", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/c8d3590bad7b8906fdf7f2587b7f92bcb755c684.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/c8d3590bad7b8906fdf7f2587b7f92bcb755c684/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/c8d3590bad7b8906fdf7f2587b7f92bcb755c684"}, "html": {"href": "#!/labscript_suite/blacs/commits/c8d3590bad7b8906fdf7f2587b7f92bcb755c684"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/c8d3590bad7b8906fdf7f2587b7f92bcb755c684"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/c8d3590bad7b8906fdf7f2587b7f92bcb755c684/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/c8d3590bad7b8906fdf7f2587b7f92bcb755c684/statuses_page=1.json"}}, "author": {"raw": "Lincoln Turner <lincoln.turner@monash.edu>", "type": "author", "user": {"display_name": "Lincoln Turner", "uuid": "{dc6eefbb-6560-488e-bd24-b7cabe6e3fb2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdc6eefbb-6560-488e-bd24-b7cabe6e3fb2%7D"}, "html": {"href": "https://bitbucket.org/%7Bdc6eefbb-6560-488e-bd24-b7cabe6e3fb2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/26c040adc170a4ec90cd9bc4f7ab0479d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLT-2.png"}}, "nickname": "lincolnturner_monash", "type": "user", "account_id": "5ba47327653ec8726d2a0087"}}, "summary": {"raw": "Test of hgweb upload (sorry)", "markup": "markdown", "html": "<p>Test of hgweb upload (sorry)</p>", "type": "rendered"}, "parents": [{"hash": "3d341e9b2732293bd9516b10ccc7889c49f87c0d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/3d341e9b2732293bd9516b10ccc7889c49f87c0d.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/3d341e9b2732293bd9516b10ccc7889c49f87c0d"}}}], "date": "2013-01-13T12:19:36+00:00", "message": "Test of hgweb upload (sorry)", "type": "commit"}, {"rendered": {"message": {"raw": "Added a small hack to allow a DDS to not have one of it's outputs (e.g. the amplitude and phase controls for the Phase Matrix QuickSyn)", "markup": "markdown", "html": "<p>Added a small hack to allow a DDS to not have one of it's outputs (e.g. the amplitude and phase controls for the Phase Matrix QuickSyn)</p>", "type": "rendered"}}, "hash": "3d341e9b2732293bd9516b10ccc7889c49f87c0d", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/3d341e9b2732293bd9516b10ccc7889c49f87c0d.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/3d341e9b2732293bd9516b10ccc7889c49f87c0d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/3d341e9b2732293bd9516b10ccc7889c49f87c0d"}, "html": {"href": "#!/labscript_suite/blacs/commits/3d341e9b2732293bd9516b10ccc7889c49f87c0d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/3d341e9b2732293bd9516b10ccc7889c49f87c0d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/3d341e9b2732293bd9516b10ccc7889c49f87c0d/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/3d341e9b2732293bd9516b10ccc7889c49f87c0d/statuses_page=1.json"}}, "author": {"raw": "shjohnst", "type": "author", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}}, "summary": {"raw": "Added a small hack to allow a DDS to not have one of it's outputs (e.g. the amplitude and phase controls for the Phase Matrix QuickSyn)", "markup": "markdown", "html": "<p>Added a small hack to allow a DDS to not have one of it's outputs (e.g. the amplitude and phase controls for the Phase Matrix QuickSyn)</p>", "type": "rendered"}, "parents": [{"hash": "89f5f2c1552cf9da670b2fc9ce35170488842db5", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/89f5f2c1552cf9da670b2fc9ce35170488842db5.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/89f5f2c1552cf9da670b2fc9ce35170488842db5"}}}], "date": "2012-12-19T05:45:06+00:00", "message": "Added a small hack to allow a DDS to not have one of it's outputs (e.g. the amplitude and phase controls for the Phase Matrix QuickSyn)", "type": "commit"}, {"rendered": {"message": {"raw": "Added BLACS support for the Phase Matrix QuickSyn", "markup": "markdown", "html": "<p>Added BLACS support for the Phase Matrix QuickSyn</p>", "type": "rendered"}}, "hash": "89f5f2c1552cf9da670b2fc9ce35170488842db5", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/89f5f2c1552cf9da670b2fc9ce35170488842db5.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/89f5f2c1552cf9da670b2fc9ce35170488842db5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/89f5f2c1552cf9da670b2fc9ce35170488842db5"}, "html": {"href": "#!/labscript_suite/blacs/commits/89f5f2c1552cf9da670b2fc9ce35170488842db5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/89f5f2c1552cf9da670b2fc9ce35170488842db5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/89f5f2c1552cf9da670b2fc9ce35170488842db5/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/89f5f2c1552cf9da670b2fc9ce35170488842db5/statuses_page=1.json"}}, "author": {"raw": "shjohnst", "type": "author", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}}, "summary": {"raw": "Added BLACS support for the Phase Matrix QuickSyn", "markup": "markdown", "html": "<p>Added BLACS support for the Phase Matrix QuickSyn</p>", "type": "rendered"}, "parents": [{"hash": "69530c8b7ea5c7788bf7e90248398be4fbf478dd", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/69530c8b7ea5c7788bf7e90248398be4fbf478dd.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/69530c8b7ea5c7788bf7e90248398be4fbf478dd"}}}], "date": "2012-12-19T05:42:52+00:00", "message": "Added BLACS support for the Phase Matrix QuickSyn", "type": "commit"}, {"rendered": {"message": {"raw": "Missed some things in the last commit. Should work now!", "markup": "markdown", "html": "<p>Missed some things in the last commit. Should work now!</p>", "type": "rendered"}}, "hash": "69530c8b7ea5c7788bf7e90248398be4fbf478dd", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/69530c8b7ea5c7788bf7e90248398be4fbf478dd.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/69530c8b7ea5c7788bf7e90248398be4fbf478dd/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/69530c8b7ea5c7788bf7e90248398be4fbf478dd"}, "html": {"href": "#!/labscript_suite/blacs/commits/69530c8b7ea5c7788bf7e90248398be4fbf478dd"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/69530c8b7ea5c7788bf7e90248398be4fbf478dd"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/69530c8b7ea5c7788bf7e90248398be4fbf478dd/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/69530c8b7ea5c7788bf7e90248398be4fbf478dd/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Missed some things in the last commit. Should work now!", "markup": "markdown", "html": "<p>Missed some things in the last commit. Should work now!</p>", "type": "rendered"}, "parents": [{"hash": "df4532ac9e05d3e6270b2758ec2339aa67ebf995", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/df4532ac9e05d3e6270b2758ec2339aa67ebf995.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/df4532ac9e05d3e6270b2758ec2339aa67ebf995"}}}], "date": "2012-11-23T01:29:01+00:00", "message": "Missed some things in the last commit. Should work now!", "type": "commit"}, {"rendered": {"message": {"raw": "NI cards now require an argument MAX_name to their constructor in labscript. This is the name that will be used to tell the NI DAQMX library which card we're talking to, and does not need to match the device's name in your labscript code.\n\nPreviously the device's labscript name had to be the MAX name. But now we're making this in line with the rest of labscript, where a device's name and directions for communicating it are stored separately.", "markup": "markdown", "html": "<p>NI cards now require an argument MAX_name to their constructor in labscript. This is the name that will be used to tell the NI DAQMX library which card we're talking to, and does not need to match the device's name in your labscript code.</p>\n<p>Previously the device's labscript name had to be the MAX name. But now we're making this in line with the rest of labscript, where a device's name and directions for communicating it are stored separately.</p>", "type": "rendered"}}, "hash": "df4532ac9e05d3e6270b2758ec2339aa67ebf995", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/df4532ac9e05d3e6270b2758ec2339aa67ebf995.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/df4532ac9e05d3e6270b2758ec2339aa67ebf995/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/df4532ac9e05d3e6270b2758ec2339aa67ebf995"}, "html": {"href": "#!/labscript_suite/blacs/commits/df4532ac9e05d3e6270b2758ec2339aa67ebf995"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/df4532ac9e05d3e6270b2758ec2339aa67ebf995"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/df4532ac9e05d3e6270b2758ec2339aa67ebf995/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/df4532ac9e05d3e6270b2758ec2339aa67ebf995/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "NI cards now require an argument MAX_name to their constructor in labscript. This is the name that will be used to tell the NI DAQMX library which card we're talking to, and does not need to match the device's name in your labscript code.\n\nPreviously the device's labscript name had to be the MAX name. But now we're making this in line with the rest of labscript, where a device's name and directions for communicating it are stored separately.", "markup": "markdown", "html": "<p>NI cards now require an argument MAX_name to their constructor in labscript. This is the name that will be used to tell the NI DAQMX library which card we're talking to, and does not need to match the device's name in your labscript code.</p>\n<p>Previously the device's labscript name had to be the MAX name. But now we're making this in line with the rest of labscript, where a device's name and directions for communicating it are stored separately.</p>", "type": "rendered"}, "parents": [{"hash": "1567077ce5fd68ccbfb288825e3f018c9cb248f1", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1567077ce5fd68ccbfb288825e3f018c9cb248f1.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/1567077ce5fd68ccbfb288825e3f018c9cb248f1"}}}], "date": "2012-11-23T01:17:52+00:00", "message": "NI cards now require an argument MAX_name to their constructor in labscript. This is the name that will be used to tell the NI DAQMX library which card we're talking to, and does not need to match the device's name in your labscript code.\n\nPreviously the device's labscript name had to be the MAX name. But now we're making this in line with the rest of labscript, where a device's name and directions for communicating it are stored separately.", "type": "commit"}, {"rendered": {"message": {"raw": "Now programs buffered.", "markup": "markdown", "html": "<p>Now programs buffered.</p>", "type": "rendered"}}, "hash": "1567077ce5fd68ccbfb288825e3f018c9cb248f1", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1567077ce5fd68ccbfb288825e3f018c9cb248f1.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/1567077ce5fd68ccbfb288825e3f018c9cb248f1/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/1567077ce5fd68ccbfb288825e3f018c9cb248f1"}, "html": {"href": "#!/labscript_suite/blacs/commits/1567077ce5fd68ccbfb288825e3f018c9cb248f1"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/1567077ce5fd68ccbfb288825e3f018c9cb248f1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/1567077ce5fd68ccbfb288825e3f018c9cb248f1/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/1567077ce5fd68ccbfb288825e3f018c9cb248f1/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Now programs buffered.", "markup": "markdown", "html": "<p>Now programs buffered.</p>", "type": "rendered"}, "parents": [{"hash": "4902c87e20491aab6a93e331cb53c315266b71d6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/4902c87e20491aab6a93e331cb53c315266b71d6.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/4902c87e20491aab6a93e331cb53c315266b71d6"}}}], "date": "2012-11-13T00:53:49+00:00", "message": "Now programs buffered.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a bug where upon compilation failure the temp file would be deleted. If it didn't exist because the compilation failed before even creating the file, BLACS crashed upon deletion. It now ignores if deletion fails upon compilation fail", "markup": "markdown", "html": "<p>Fixed a bug where upon compilation failure the temp file would be deleted. If it didn't exist because the compilation failed before even creating the file, BLACS crashed upon deletion. It now ignores if deletion fails upon compilation fail</p>", "type": "rendered"}}, "hash": "4902c87e20491aab6a93e331cb53c315266b71d6", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/4902c87e20491aab6a93e331cb53c315266b71d6.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/4902c87e20491aab6a93e331cb53c315266b71d6/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/4902c87e20491aab6a93e331cb53c315266b71d6"}, "html": {"href": "#!/labscript_suite/blacs/commits/4902c87e20491aab6a93e331cb53c315266b71d6"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/4902c87e20491aab6a93e331cb53c315266b71d6"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/4902c87e20491aab6a93e331cb53c315266b71d6/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/4902c87e20491aab6a93e331cb53c315266b71d6/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed a bug where upon compilation failure the temp file would be deleted. If it didn't exist because the compilation failed before even creating the file, BLACS crashed upon deletion. It now ignores if deletion fails upon compilation fail", "markup": "markdown", "html": "<p>Fixed a bug where upon compilation failure the temp file would be deleted. If it didn't exist because the compilation failed before even creating the file, BLACS crashed upon deletion. It now ignores if deletion fails upon compilation fail</p>", "type": "rendered"}, "parents": [{"hash": "c0f6d0a9d59dd22e6cde7977951411f1a4ba73f0", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/c0f6d0a9d59dd22e6cde7977951411f1a4ba73f0.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/c0f6d0a9d59dd22e6cde7977951411f1a4ba73f0"}}}], "date": "2012-11-13T00:50:25+00:00", "message": "Fixed a bug where upon compilation failure the temp file would be deleted. If it didn't exist because the compilation failed before even creating the file, BLACS crashed upon deletion. It now ignores if deletion fails upon compilation fail", "type": "commit"}, {"rendered": {"message": {"raw": "Actually connects to a PineBlaster now, and says hello to it.", "markup": "markdown", "html": "<p>Actually connects to a PineBlaster now, and says hello to it.</p>", "type": "rendered"}}, "hash": "c0f6d0a9d59dd22e6cde7977951411f1a4ba73f0", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/c0f6d0a9d59dd22e6cde7977951411f1a4ba73f0.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/c0f6d0a9d59dd22e6cde7977951411f1a4ba73f0/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/c0f6d0a9d59dd22e6cde7977951411f1a4ba73f0"}, "html": {"href": "#!/labscript_suite/blacs/commits/c0f6d0a9d59dd22e6cde7977951411f1a4ba73f0"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/c0f6d0a9d59dd22e6cde7977951411f1a4ba73f0"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/c0f6d0a9d59dd22e6cde7977951411f1a4ba73f0/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/c0f6d0a9d59dd22e6cde7977951411f1a4ba73f0/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Actually connects to a PineBlaster now, and says hello to it.", "markup": "markdown", "html": "<p>Actually connects to a PineBlaster now, and says hello to it.</p>", "type": "rendered"}, "parents": [{"hash": "6ce28b9f1f39506837b01655cf19eb50d35f5883", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/6ce28b9f1f39506837b01655cf19eb50d35f5883.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/6ce28b9f1f39506837b01655cf19eb50d35f5883"}}}], "date": "2012-11-12T06:26:47+00:00", "message": "Actually connects to a PineBlaster now, and says hello to it.", "type": "commit"}, {"rendered": {"message": {"raw": "Added pineblaster hardware interface files", "markup": "markdown", "html": "<p>Added pineblaster hardware interface files</p>", "type": "rendered"}}, "hash": "6ce28b9f1f39506837b01655cf19eb50d35f5883", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/6ce28b9f1f39506837b01655cf19eb50d35f5883.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/6ce28b9f1f39506837b01655cf19eb50d35f5883/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/6ce28b9f1f39506837b01655cf19eb50d35f5883"}, "html": {"href": "#!/labscript_suite/blacs/commits/6ce28b9f1f39506837b01655cf19eb50d35f5883"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/6ce28b9f1f39506837b01655cf19eb50d35f5883"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/6ce28b9f1f39506837b01655cf19eb50d35f5883/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/6ce28b9f1f39506837b01655cf19eb50d35f5883/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added pineblaster hardware interface files", "markup": "markdown", "html": "<p>Added pineblaster hardware interface files</p>", "type": "rendered"}, "parents": [{"hash": "4f90766bcf331b446c2a242e398b8224c249eb87", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/4f90766bcf331b446c2a242e398b8224c249eb87.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/4f90766bcf331b446c2a242e398b8224c249eb87"}}}], "date": "2012-11-12T06:14:22+00:00", "message": "Added pineblaster hardware interface files", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed deadlock where ni_pcie_6363 tab opened the hsf5 file twice in the same thread. With h5_lock enabled, this caused a deadlock. It now closes it before opening it again.", "markup": "markdown", "html": "<p>Fixed deadlock where ni_pcie_6363 tab opened the hsf5 file twice in the same thread. With h5_lock enabled, this caused a deadlock. It now closes it before opening it again.</p>", "type": "rendered"}}, "hash": "4f90766bcf331b446c2a242e398b8224c249eb87", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/4f90766bcf331b446c2a242e398b8224c249eb87.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/4f90766bcf331b446c2a242e398b8224c249eb87/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/4f90766bcf331b446c2a242e398b8224c249eb87"}, "html": {"href": "#!/labscript_suite/blacs/commits/4f90766bcf331b446c2a242e398b8224c249eb87"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/4f90766bcf331b446c2a242e398b8224c249eb87"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/4f90766bcf331b446c2a242e398b8224c249eb87/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/4f90766bcf331b446c2a242e398b8224c249eb87/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed deadlock where ni_pcie_6363 tab opened the hsf5 file twice in the same thread. With h5_lock enabled, this caused a deadlock. It now closes it before opening it again.", "markup": "markdown", "html": "<p>Fixed deadlock where ni_pcie_6363 tab opened the hsf5 file twice in the same thread. With h5_lock enabled, this caused a deadlock. It now closes it before opening it again.</p>", "type": "rendered"}, "parents": [{"hash": "5d07fc108df6ad997d7e23d209febda593af0033", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5d07fc108df6ad997d7e23d209febda593af0033.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/5d07fc108df6ad997d7e23d209febda593af0033"}}}], "date": "2012-11-05T02:51:12+00:00", "message": "Fixed deadlock where ni_pcie_6363 tab opened the hsf5 file twice in the same thread. With h5_lock enabled, this caused a deadlock. It now closes it before opening it again.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed zaberstagecontroller to use the BLACS_Connection attribute of the connection table for the COM port", "markup": "markdown", "html": "<p>Fixed zaberstagecontroller to use the BLACS_Connection attribute of the connection table for the COM port</p>", "type": "rendered"}}, "hash": "5d07fc108df6ad997d7e23d209febda593af0033", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5d07fc108df6ad997d7e23d209febda593af0033.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/5d07fc108df6ad997d7e23d209febda593af0033/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/5d07fc108df6ad997d7e23d209febda593af0033"}, "html": {"href": "#!/labscript_suite/blacs/commits/5d07fc108df6ad997d7e23d209febda593af0033"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/5d07fc108df6ad997d7e23d209febda593af0033"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/5d07fc108df6ad997d7e23d209febda593af0033/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/5d07fc108df6ad997d7e23d209febda593af0033/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed zaberstagecontroller to use the BLACS_Connection attribute of the connection table for the COM port", "markup": "markdown", "html": "<p>Fixed zaberstagecontroller to use the BLACS_Connection attribute of the connection table for the COM port</p>", "type": "rendered"}, "parents": [{"hash": "acae2ec7838b880ac22bc0cb9e71b3b4598fb987", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/acae2ec7838b880ac22bc0cb9e71b3b4598fb987.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/acae2ec7838b880ac22bc0cb9e71b3b4598fb987"}}}], "date": "2012-10-29T00:50:15+00:00", "message": "Fixed zaberstagecontroller to use the BLACS_Connection attribute of the connection table for the COM port", "type": "commit"}, {"rendered": {"message": {"raw": "added 'import h5_lock', otherwise we had a breakage from andor_ixon being imported even though we don't use it", "markup": "markdown", "html": "<p>added 'import h5_lock', otherwise we had a breakage from andor_ixon being imported even though we don't use it</p>", "type": "rendered"}}, "hash": "acae2ec7838b880ac22bc0cb9e71b3b4598fb987", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/acae2ec7838b880ac22bc0cb9e71b3b4598fb987.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/acae2ec7838b880ac22bc0cb9e71b3b4598fb987/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/acae2ec7838b880ac22bc0cb9e71b3b4598fb987"}, "html": {"href": "#!/labscript_suite/blacs/commits/acae2ec7838b880ac22bc0cb9e71b3b4598fb987"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/acae2ec7838b880ac22bc0cb9e71b3b4598fb987"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/acae2ec7838b880ac22bc0cb9e71b3b4598fb987/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/acae2ec7838b880ac22bc0cb9e71b3b4598fb987/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "added 'import h5_lock', otherwise we had a breakage from andor_ixon being imported even though we don't use it", "markup": "markdown", "html": "<p>added 'import h5_lock', otherwise we had a breakage from andor_ixon being imported even though we don't use it</p>", "type": "rendered"}, "parents": [{"hash": "3c79ad22b7fe1e8e1fce5e5c4109ac50e77c251e", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/3c79ad22b7fe1e8e1fce5e5c4109ac50e77c251e.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/3c79ad22b7fe1e8e1fce5e5c4109ac50e77c251e"}}}], "date": "2012-10-17T01:22:41+00:00", "message": "added 'import h5_lock', otherwise we had a breakage from andor_ixon being imported even though we don't use it", "type": "commit"}, {"rendered": {"message": {"raw": "a (hopefully temporary) fix for bug #610.\nThis is in the h5_lock module, which is where I was hacking things onto h5py anyway. I've disabled the actual h5_locking for the moment, until I make a few changes to pythonlib to accomodate it, such as BLACS worker processes not holding the file open for minutes at a time while they program a device (I'm looking at you, novatech) when they could easily close the file prior to programming.\n\nAdded imports everywhere needed throughout pythonlib", "markup": "markdown", "html": "<p>a (hopefully temporary) fix for bug #610.<br />\nThis is in the h5_lock module, which is where I was hacking things onto h5py anyway. I've disabled the actual h5_locking for the moment, until I make a few changes to pythonlib to accomodate it, such as BLACS worker processes not holding the file open for minutes at a time while they program a device (I'm looking at you, novatech) when they could easily close the file prior to programming.</p>\n<p>Added imports everywhere needed throughout pythonlib</p>", "type": "rendered"}}, "hash": "3c79ad22b7fe1e8e1fce5e5c4109ac50e77c251e", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/3c79ad22b7fe1e8e1fce5e5c4109ac50e77c251e.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/3c79ad22b7fe1e8e1fce5e5c4109ac50e77c251e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/3c79ad22b7fe1e8e1fce5e5c4109ac50e77c251e"}, "html": {"href": "#!/labscript_suite/blacs/commits/3c79ad22b7fe1e8e1fce5e5c4109ac50e77c251e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/3c79ad22b7fe1e8e1fce5e5c4109ac50e77c251e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/3c79ad22b7fe1e8e1fce5e5c4109ac50e77c251e/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/3c79ad22b7fe1e8e1fce5e5c4109ac50e77c251e/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "a (hopefully temporary) fix for bug #610.\nThis is in the h5_lock module, which is where I was hacking things onto h5py anyway. I've disabled the actual h5_locking for the moment, until I make a few changes to pythonlib to accomodate it, such as BLACS worker processes not holding the file open for minutes at a time while they program a device (I'm looking at you, novatech) when they could easily close the file prior to programming.\n\nAdded imports everywhere needed throughout pythonlib", "markup": "markdown", "html": "<p>a (hopefully temporary) fix for bug #610.<br />\nThis is in the h5_lock module, which is where I was hacking things onto h5py anyway. I've disabled the actual h5_locking for the moment, until I make a few changes to pythonlib to accomodate it, such as BLACS worker processes not holding the file open for minutes at a time while they program a device (I'm looking at you, novatech) when they could easily close the file prior to programming.</p>\n<p>Added imports everywhere needed throughout pythonlib</p>", "type": "rendered"}, "parents": [{"hash": "6a7d87881916eb33f24aa4e6ea6093fbef62d125", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/6a7d87881916eb33f24aa4e6ea6093fbef62d125.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/6a7d87881916eb33f24aa4e6ea6093fbef62d125"}}}], "date": "2012-10-05T10:45:17+00:00", "message": "a (hopefully temporary) fix for bug #610.\nThis is in the h5_lock module, which is where I was hacking things onto h5py anyway. I've disabled the actual h5_locking for the moment, until I make a few changes to pythonlib to accomodate it, such as BLACS worker processes not holding the file open for minutes at a time while they program a device (I'm looking at you, novatech) when they could easily close the file prior to programming.\n\nAdded imports everywhere needed throughout pythonlib", "type": "commit"}, {"rendered": {"message": {"raw": "Modified how subprocesses pipe output to parent processes. No longer do parents need to filter the output of the children to see what is stdout and what is stderr and what's something else of interest. Now parents pass in a port when calling the child, and children send their output directly to an OutputBox or similar via zmq push, no filtering step required. Also, since this is using raw zmq sockets, it ought to be faster.", "markup": "markdown", "html": "<p>Modified how subprocesses pipe output to parent processes. No longer do parents need to filter the output of the children to see what is stdout and what is stderr and what's something else of interest. Now parents pass in a port when calling the child, and children send their output directly to an OutputBox or similar via zmq push, no filtering step required. Also, since this is using raw zmq sockets, it ought to be faster.</p>", "type": "rendered"}}, "hash": "6a7d87881916eb33f24aa4e6ea6093fbef62d125", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/6a7d87881916eb33f24aa4e6ea6093fbef62d125.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/6a7d87881916eb33f24aa4e6ea6093fbef62d125/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/6a7d87881916eb33f24aa4e6ea6093fbef62d125"}, "html": {"href": "#!/labscript_suite/blacs/commits/6a7d87881916eb33f24aa4e6ea6093fbef62d125"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/6a7d87881916eb33f24aa4e6ea6093fbef62d125"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/6a7d87881916eb33f24aa4e6ea6093fbef62d125/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/6a7d87881916eb33f24aa4e6ea6093fbef62d125/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Modified how subprocesses pipe output to parent processes. No longer do parents need to filter the output of the children to see what is stdout and what is stderr and what's something else of interest. Now parents pass in a port when calling the child, and children send their output directly to an OutputBox or similar via zmq push, no filtering step required. Also, since this is using raw zmq sockets, it ought to be faster.", "markup": "markdown", "html": "<p>Modified how subprocesses pipe output to parent processes. No longer do parents need to filter the output of the children to see what is stdout and what is stderr and what's something else of interest. Now parents pass in a port when calling the child, and children send their output directly to an OutputBox or similar via zmq push, no filtering step required. Also, since this is using raw zmq sockets, it ought to be faster.</p>", "type": "rendered"}, "parents": [{"hash": "e7d163cfa5b591364e0264123f030d31c8691740", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/e7d163cfa5b591364e0264123f030d31c8691740.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/e7d163cfa5b591364e0264123f030d31c8691740"}}}], "date": "2012-10-05T07:37:28+00:00", "message": "Modified how subprocesses pipe output to parent processes. No longer do parents need to filter the output of the children to see what is stdout and what is stderr and what's something else of interest. Now parents pass in a port when calling the child, and children send their output directly to an OutputBox or similar via zmq push, no filtering step required. Also, since this is using raw zmq sockets, it ought to be faster.", "type": "commit"}, {"rendered": {"message": {"raw": "added the ability to select multiple files with the file->open option", "markup": "markdown", "html": "<p>added the ability to select multiple files with the file-&gt;open option</p>", "type": "rendered"}}, "hash": "e7d163cfa5b591364e0264123f030d31c8691740", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/e7d163cfa5b591364e0264123f030d31c8691740.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/e7d163cfa5b591364e0264123f030d31c8691740/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/e7d163cfa5b591364e0264123f030d31c8691740"}, "html": {"href": "#!/labscript_suite/blacs/commits/e7d163cfa5b591364e0264123f030d31c8691740"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/e7d163cfa5b591364e0264123f030d31c8691740"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/e7d163cfa5b591364e0264123f030d31c8691740/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/e7d163cfa5b591364e0264123f030d31c8691740/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "added the ability to select multiple files with the file->open option", "markup": "markdown", "html": "<p>added the ability to select multiple files with the file-&gt;open option</p>", "type": "rendered"}, "parents": [{"hash": "3ac6625909231be129bad3ce1e9b01213b10ac10", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/3ac6625909231be129bad3ce1e9b01213b10ac10.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/3ac6625909231be129bad3ce1e9b01213b10ac10"}}}], "date": "2012-09-28T05:39:56+00:00", "message": "added the ability to select multiple files with the file->open option", "type": "commit"}, {"rendered": {"message": {"raw": "fixed the size of the new \"working\" image (that replaces the gtkspinner) so that the tabs don't briefly resize themselves when doing status checks etc (it was very jarring!)", "markup": "markdown", "html": "<p>fixed the size of the new \"working\" image (that replaces the gtkspinner) so that the tabs don't briefly resize themselves when doing status checks etc (it was very jarring!)</p>", "type": "rendered"}}, "hash": "3ac6625909231be129bad3ce1e9b01213b10ac10", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/3ac6625909231be129bad3ce1e9b01213b10ac10.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/3ac6625909231be129bad3ce1e9b01213b10ac10/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/3ac6625909231be129bad3ce1e9b01213b10ac10"}, "html": {"href": "#!/labscript_suite/blacs/commits/3ac6625909231be129bad3ce1e9b01213b10ac10"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/3ac6625909231be129bad3ce1e9b01213b10ac10"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/3ac6625909231be129bad3ce1e9b01213b10ac10/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/3ac6625909231be129bad3ce1e9b01213b10ac10/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "fixed the size of the new \"working\" image (that replaces the gtkspinner) so that the tabs don't briefly resize themselves when doing status checks etc (it was very jarring!)", "markup": "markdown", "html": "<p>fixed the size of the new \"working\" image (that replaces the gtkspinner) so that the tabs don't briefly resize themselves when doing status checks etc (it was very jarring!)</p>", "type": "rendered"}, "parents": [{"hash": "4ba44162f742b2fd2a5e39ac78ddd8620a17d43d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/4ba44162f742b2fd2a5e39ac78ddd8620a17d43d.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/4ba44162f742b2fd2a5e39ac78ddd8620a17d43d"}}}], "date": "2012-09-26T02:03:58+00:00", "message": "fixed the size of the new \"working\" image (that replaces the gtkspinner) so that the tabs don't briefly resize themselves when doing status checks etc (it was very jarring!)", "type": "commit"}, {"rendered": {"message": {"raw": "Removed the main source of spinners from BLACS until the bug reported at https://bugzilla.gnome.org/show_bug.cgi?id=683246 gets fixed (the timeframe for this does not look promising...)", "markup": "markdown", "html": "<p>Removed the main source of spinners from BLACS until the bug reported at <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=683246\" rel=\"nofollow\" class=\"ap-connect-link\">https://bugzilla.gnome.org/show_bug.cgi?id=683246</a> gets fixed (the timeframe for this does not look promising...)</p>", "type": "rendered"}}, "hash": "4ba44162f742b2fd2a5e39ac78ddd8620a17d43d", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/4ba44162f742b2fd2a5e39ac78ddd8620a17d43d.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/4ba44162f742b2fd2a5e39ac78ddd8620a17d43d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/4ba44162f742b2fd2a5e39ac78ddd8620a17d43d"}, "html": {"href": "#!/labscript_suite/blacs/commits/4ba44162f742b2fd2a5e39ac78ddd8620a17d43d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/4ba44162f742b2fd2a5e39ac78ddd8620a17d43d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/4ba44162f742b2fd2a5e39ac78ddd8620a17d43d/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/4ba44162f742b2fd2a5e39ac78ddd8620a17d43d/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Removed the main source of spinners from BLACS until the bug reported at https://bugzilla.gnome.org/show_bug.cgi?id=683246 gets fixed (the timeframe for this does not look promising...)", "markup": "markdown", "html": "<p>Removed the main source of spinners from BLACS until the bug reported at <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=683246\" rel=\"nofollow\" class=\"ap-connect-link\">https://bugzilla.gnome.org/show_bug.cgi?id=683246</a> gets fixed (the timeframe for this does not look promising...)</p>", "type": "rendered"}, "parents": [{"hash": "c02eb6a507c2b0ee7bb344fb193a2fb07e91a713", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/c02eb6a507c2b0ee7bb344fb193a2fb07e91a713.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/c02eb6a507c2b0ee7bb344fb193a2fb07e91a713"}}}], "date": "2012-09-26T01:57:18+00:00", "message": "Removed the main source of spinners from BLACS until the bug reported at https://bugzilla.gnome.org/show_bug.cgi?id=683246 gets fixed (the timeframe for this does not look promising...)", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a \"bug\" where Bilbo commented out the code that actually starts the experiment....yeah", "markup": "markdown", "html": "<p>Fixed a \"bug\" where Bilbo commented out the code that actually starts the experiment....yeah</p>", "type": "rendered"}}, "hash": "c02eb6a507c2b0ee7bb344fb193a2fb07e91a713", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/c02eb6a507c2b0ee7bb344fb193a2fb07e91a713.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/c02eb6a507c2b0ee7bb344fb193a2fb07e91a713/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/c02eb6a507c2b0ee7bb344fb193a2fb07e91a713"}, "html": {"href": "#!/labscript_suite/blacs/commits/c02eb6a507c2b0ee7bb344fb193a2fb07e91a713"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/c02eb6a507c2b0ee7bb344fb193a2fb07e91a713"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/c02eb6a507c2b0ee7bb344fb193a2fb07e91a713/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/c02eb6a507c2b0ee7bb344fb193a2fb07e91a713/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed a \"bug\" where Bilbo commented out the code that actually starts the experiment....yeah", "markup": "markdown", "html": "<p>Fixed a \"bug\" where Bilbo commented out the code that actually starts the experiment....yeah</p>", "type": "rendered"}, "parents": [{"hash": "1e032abf74b253c4c7793a2077fb9a5ccbb30205", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1e032abf74b253c4c7793a2077fb9a5ccbb30205.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/1e032abf74b253c4c7793a2077fb9a5ccbb30205"}}}], "date": "2012-09-19T06:20:33+00:00", "message": "Fixed a \"bug\" where Bilbo commented out the code that actually starts the experiment....yeah", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a bug where failed mise shots would not work when they were repeated. This is because the 'clean_h5_file' function didn't copy over all the h5 file's attributes. Now it copies all attributes.", "markup": "markdown", "html": "<p>Fixed a bug where failed mise shots would not work when they were repeated. This is because the 'clean_h5_file' function didn't copy over all the h5 file's attributes. Now it copies all attributes.</p>", "type": "rendered"}}, "hash": "1e032abf74b253c4c7793a2077fb9a5ccbb30205", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1e032abf74b253c4c7793a2077fb9a5ccbb30205.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/1e032abf74b253c4c7793a2077fb9a5ccbb30205/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/1e032abf74b253c4c7793a2077fb9a5ccbb30205"}, "html": {"href": "#!/labscript_suite/blacs/commits/1e032abf74b253c4c7793a2077fb9a5ccbb30205"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/1e032abf74b253c4c7793a2077fb9a5ccbb30205"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/1e032abf74b253c4c7793a2077fb9a5ccbb30205/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/1e032abf74b253c4c7793a2077fb9a5ccbb30205/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed a bug where failed mise shots would not work when they were repeated. This is because the 'clean_h5_file' function didn't copy over all the h5 file's attributes. Now it copies all attributes.", "markup": "markdown", "html": "<p>Fixed a bug where failed mise shots would not work when they were repeated. This is because the 'clean_h5_file' function didn't copy over all the h5 file's attributes. Now it copies all attributes.</p>", "type": "rendered"}, "parents": [{"hash": "e50745900363abd3dd4c1c28905891e7de0c15df", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/e50745900363abd3dd4c1c28905891e7de0c15df.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/e50745900363abd3dd4c1c28905891e7de0c15df"}}}], "date": "2012-09-18T04:28:47+00:00", "message": "Fixed a bug where failed mise shots would not work when they were repeated. This is because the 'clean_h5_file' function didn't copy over all the h5 file's attributes. Now it copies all attributes.", "type": "commit"}, {"rendered": {"message": {"raw": "BLACS now doesn't crash if it gets an empty connection table for an experiment (only using this for testing), and BLACS now converts filepaths to the local format, that is, replaces Z: with the local shared drive prefix, and replaces slashes with the kind of slashes appropriate for the platform.", "markup": "markdown", "html": "<p>BLACS now doesn't crash if it gets an empty connection table for an experiment (only using this for testing), and BLACS now converts filepaths to the local format, that is, replaces Z: with the local shared drive prefix, and replaces slashes with the kind of slashes appropriate for the platform.</p>", "type": "rendered"}}, "hash": "e50745900363abd3dd4c1c28905891e7de0c15df", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/e50745900363abd3dd4c1c28905891e7de0c15df.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/e50745900363abd3dd4c1c28905891e7de0c15df/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/e50745900363abd3dd4c1c28905891e7de0c15df"}, "html": {"href": "#!/labscript_suite/blacs/commits/e50745900363abd3dd4c1c28905891e7de0c15df"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/e50745900363abd3dd4c1c28905891e7de0c15df"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/e50745900363abd3dd4c1c28905891e7de0c15df/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/e50745900363abd3dd4c1c28905891e7de0c15df/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "BLACS now doesn't crash if it gets an empty connection table for an experiment (only using this for testing), and BLACS now converts filepaths to the local format, that is, replaces Z: with the local shared drive prefix, and replaces slashes with the kind of slashes appropriate for the platform.", "markup": "markdown", "html": "<p>BLACS now doesn't crash if it gets an empty connection table for an experiment (only using this for testing), and BLACS now converts filepaths to the local format, that is, replaces Z: with the local shared drive prefix, and replaces slashes with the kind of slashes appropriate for the platform.</p>", "type": "rendered"}, "parents": [{"hash": "b766cfee35b1ebeec2dccf350ea35ef30b26f6c5", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/b766cfee35b1ebeec2dccf350ea35ef30b26f6c5.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/b766cfee35b1ebeec2dccf350ea35ef30b26f6c5"}}}], "date": "2012-09-05T06:41:31+00:00", "message": "BLACS now doesn't crash if it gets an empty connection table for an experiment (only using this for testing), and BLACS now converts filepaths to the local format, that is, replaces Z: with the local shared drive prefix, and replaces slashes with the kind of slashes appropriate for the platform.", "type": "commit"}, {"rendered": {"message": {"raw": "Added URL for RF Blaster next to device name label as per the NovatechDDS9m does (making it easy to see which RF Blaster you are talking to without viewing the connection table)", "markup": "markdown", "html": "<p>Added URL for RF Blaster next to device name label as per the NovatechDDS9m does (making it easy to see which RF Blaster you are talking to without viewing the connection table)</p>", "type": "rendered"}}, "hash": "b766cfee35b1ebeec2dccf350ea35ef30b26f6c5", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/b766cfee35b1ebeec2dccf350ea35ef30b26f6c5.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/b766cfee35b1ebeec2dccf350ea35ef30b26f6c5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/b766cfee35b1ebeec2dccf350ea35ef30b26f6c5"}, "html": {"href": "#!/labscript_suite/blacs/commits/b766cfee35b1ebeec2dccf350ea35ef30b26f6c5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/b766cfee35b1ebeec2dccf350ea35ef30b26f6c5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/b766cfee35b1ebeec2dccf350ea35ef30b26f6c5/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/b766cfee35b1ebeec2dccf350ea35ef30b26f6c5/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added URL for RF Blaster next to device name label as per the NovatechDDS9m does (making it easy to see which RF Blaster you are talking to without viewing the connection table)", "markup": "markdown", "html": "<p>Added URL for RF Blaster next to device name label as per the NovatechDDS9m does (making it easy to see which RF Blaster you are talking to without viewing the connection table)</p>", "type": "rendered"}, "parents": [{"hash": "0668c758e0c1da2ac0a9a9f41c3e2ff11a701343", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/0668c758e0c1da2ac0a9a9f41c3e2ff11a701343.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/0668c758e0c1da2ac0a9a9f41c3e2ff11a701343"}}}], "date": "2012-09-03T07:12:52+00:00", "message": "Added URL for RF Blaster next to device name label as per the NovatechDDS9m does (making it easy to see which RF Blaster you are talking to without viewing the connection table)", "type": "commit"}, {"rendered": {"message": {"raw": "Modified the RFBlaster checking code so that it behaves more like the NovatechDDS9m check (it now displays more details about the front panel and remote state, and only shows details for the channels which have actually changed!)", "markup": "markdown", "html": "<p>Modified the RFBlaster checking code so that it behaves more like the NovatechDDS9m check (it now displays more details about the front panel and remote state, and only shows details for the channels which have actually changed!)</p>", "type": "rendered"}}, "hash": "0668c758e0c1da2ac0a9a9f41c3e2ff11a701343", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/0668c758e0c1da2ac0a9a9f41c3e2ff11a701343.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/0668c758e0c1da2ac0a9a9f41c3e2ff11a701343/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/0668c758e0c1da2ac0a9a9f41c3e2ff11a701343"}, "html": {"href": "#!/labscript_suite/blacs/commits/0668c758e0c1da2ac0a9a9f41c3e2ff11a701343"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/0668c758e0c1da2ac0a9a9f41c3e2ff11a701343"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/0668c758e0c1da2ac0a9a9f41c3e2ff11a701343/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/0668c758e0c1da2ac0a9a9f41c3e2ff11a701343/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Modified the RFBlaster checking code so that it behaves more like the NovatechDDS9m check (it now displays more details about the front panel and remote state, and only shows details for the channels which have actually changed!)", "markup": "markdown", "html": "<p>Modified the RFBlaster checking code so that it behaves more like the NovatechDDS9m check (it now displays more details about the front panel and remote state, and only shows details for the channels which have actually changed!)</p>", "type": "rendered"}, "parents": [{"hash": "c179de842497cfa99d19d00b9c2b5f9b4a00e706", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/c179de842497cfa99d19d00b9c2b5f9b4a00e706.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/c179de842497cfa99d19d00b9c2b5f9b4a00e706"}}}], "date": "2012-09-03T05:47:37+00:00", "message": "Modified the RFBlaster checking code so that it behaves more like the NovatechDDS9m check (it now displays more details about the front panel and remote state, and only shows details for the channels which have actually changed!)", "type": "commit"}, {"rendered": {"message": {"raw": "Reversed the order of the 'set units' and 'set value' steps in restoring front panel settings for widgets.\n\nThis is because 'set units' doesn't actually happen immediately, it queues up a callback. So by running it first, it puts the object in an inconsistent state where self.units has been updated, but the GUI does not yet reflect this. This causes incorrect results when the set_value method runs, and uses self.units to find out what the units are. It thinks the units have been updated, so it sets the value in the new units.\nThen the units actually get updated when the queued up callback runs soon after. This converts the value into the new units -- even though it was already in the new units! The conversion thus results in a nonsese result.\n\nBy simply swapping these steps the problem is resolved. The value gets set (in base units), then the units are changed to the non-base units, and the value is converted.", "markup": "markdown", "html": "<p>Reversed the order of the 'set units' and 'set value' steps in restoring front panel settings for widgets.</p>\n<p>This is because 'set units' doesn't actually happen immediately, it queues up a callback. So by running it first, it puts the object in an inconsistent state where self.units has been updated, but the GUI does not yet reflect this. This causes incorrect results when the set_value method runs, and uses self.units to find out what the units are. It thinks the units have been updated, so it sets the value in the new units.<br />\nThen the units actually get updated when the queued up callback runs soon after. This converts the value into the new units -- even though it was already in the new units! The conversion thus results in a nonsese result.</p>\n<p>By simply swapping these steps the problem is resolved. The value gets set (in base units), then the units are changed to the non-base units, and the value is converted.</p>", "type": "rendered"}}, "hash": "c179de842497cfa99d19d00b9c2b5f9b4a00e706", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/c179de842497cfa99d19d00b9c2b5f9b4a00e706.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/c179de842497cfa99d19d00b9c2b5f9b4a00e706/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/c179de842497cfa99d19d00b9c2b5f9b4a00e706"}, "html": {"href": "#!/labscript_suite/blacs/commits/c179de842497cfa99d19d00b9c2b5f9b4a00e706"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/c179de842497cfa99d19d00b9c2b5f9b4a00e706"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/c179de842497cfa99d19d00b9c2b5f9b4a00e706/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/c179de842497cfa99d19d00b9c2b5f9b4a00e706/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Reversed the order of the 'set units' and 'set value' steps in restoring front panel settings for widgets.\n\nThis is because 'set units' doesn't actually happen immediately, it queues up a callback. So by running it first, it puts the object in an inconsistent state where self.units has been updated, but the GUI does not yet reflect this. This causes incorrect results when the set_value method runs, and uses self.units to find out what the units are. It thinks the units have been updated, so it sets the value in the new units.\nThen the units actually get updated when the queued up callback runs soon after. This converts the value into the new units -- even though it was already in the new units! The conversion thus results in a nonsese result.\n\nBy simply swapping these steps the problem is resolved. The value gets set (in base units), then the units are changed to the non-base units, and the value is converted.", "markup": "markdown", "html": "<p>Reversed the order of the 'set units' and 'set value' steps in restoring front panel settings for widgets.</p>\n<p>This is because 'set units' doesn't actually happen immediately, it queues up a callback. So by running it first, it puts the object in an inconsistent state where self.units has been updated, but the GUI does not yet reflect this. This causes incorrect results when the set_value method runs, and uses self.units to find out what the units are. It thinks the units have been updated, so it sets the value in the new units.<br />\nThen the units actually get updated when the queued up callback runs soon after. This converts the value into the new units -- even though it was already in the new units! The conversion thus results in a nonsese result.</p>\n<p>By simply swapping these steps the problem is resolved. The value gets set (in base units), then the units are changed to the non-base units, and the value is converted.</p>", "type": "rendered"}, "parents": [{"hash": "7fe190862ae949c1cdbee38337e32304403fe0e3", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/7fe190862ae949c1cdbee38337e32304403fe0e3.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/7fe190862ae949c1cdbee38337e32304403fe0e3"}}}], "date": "2012-09-03T04:44:21+00:00", "message": "Reversed the order of the 'set units' and 'set value' steps in restoring front panel settings for widgets.\n\nThis is because 'set units' doesn't actually happen immediately, it queues up a callback. So by running it first, it puts the object in an inconsistent state where self.units has been updated, but the GUI does not yet reflect this. This causes incorrect results when the set_value method runs, and uses self.units to find out what the units are. It thinks the units have been updated, so it sets the value in the new units.\nThen the units actually get updated when the queued up callback runs soon after. This converts the value into the new units -- even though it was already in the new units! The conversion thus results in a nonsese result.\n\nBy simply swapping these steps the problem is resolved. The value gets set (in base units), then the units are changed to the non-base units, and the value is converted.", "type": "commit"}, {"rendered": {"message": {"raw": "Increased the precision of the maximum amplitude limit to prevent the RFBlaster tab from complaining that the amplitude does not match the set value", "markup": "markdown", "html": "<p>Increased the precision of the maximum amplitude limit to prevent the RFBlaster tab from complaining that the amplitude does not match the set value</p>", "type": "rendered"}}, "hash": "7fe190862ae949c1cdbee38337e32304403fe0e3", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/7fe190862ae949c1cdbee38337e32304403fe0e3.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/7fe190862ae949c1cdbee38337e32304403fe0e3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/7fe190862ae949c1cdbee38337e32304403fe0e3"}, "html": {"href": "#!/labscript_suite/blacs/commits/7fe190862ae949c1cdbee38337e32304403fe0e3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/7fe190862ae949c1cdbee38337e32304403fe0e3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/7fe190862ae949c1cdbee38337e32304403fe0e3/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/7fe190862ae949c1cdbee38337e32304403fe0e3/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Increased the precision of the maximum amplitude limit to prevent the RFBlaster tab from complaining that the amplitude does not match the set value", "markup": "markdown", "html": "<p>Increased the precision of the maximum amplitude limit to prevent the RFBlaster tab from complaining that the amplitude does not match the set value</p>", "type": "rendered"}, "parents": [{"hash": "46cfc7740d94814afc08bb13fb5eccbcf704fcdc", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/46cfc7740d94814afc08bb13fb5eccbcf704fcdc.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/46cfc7740d94814afc08bb13fb5eccbcf704fcdc"}}}], "date": "2012-09-03T03:40:55+00:00", "message": "Increased the precision of the maximum amplitude limit to prevent the RFBlaster tab from complaining that the amplitude does not match the set value", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a bug where using port0/channel31 in your labscript (attached to an ni_pcie_6363) would cause all digital channels on that device to go high at the end of the experiment. This was because we had an overflow error because we had used int32 instead of uint32 in one part of the code!", "markup": "markdown", "html": "<p>Fixed a bug where using port0/channel31 in your labscript (attached to an ni_pcie_6363) would cause all digital channels on that device to go high at the end of the experiment. This was because we had an overflow error because we had used int32 instead of uint32 in one part of the code!</p>", "type": "rendered"}}, "hash": "46cfc7740d94814afc08bb13fb5eccbcf704fcdc", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/46cfc7740d94814afc08bb13fb5eccbcf704fcdc.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/46cfc7740d94814afc08bb13fb5eccbcf704fcdc/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/46cfc7740d94814afc08bb13fb5eccbcf704fcdc"}, "html": {"href": "#!/labscript_suite/blacs/commits/46cfc7740d94814afc08bb13fb5eccbcf704fcdc"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/46cfc7740d94814afc08bb13fb5eccbcf704fcdc"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/46cfc7740d94814afc08bb13fb5eccbcf704fcdc/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/46cfc7740d94814afc08bb13fb5eccbcf704fcdc/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed a bug where using port0/channel31 in your labscript (attached to an ni_pcie_6363) would cause all digital channels on that device to go high at the end of the experiment. This was because we had an overflow error because we had used int32 instead of uint32 in one part of the code!", "markup": "markdown", "html": "<p>Fixed a bug where using port0/channel31 in your labscript (attached to an ni_pcie_6363) would cause all digital channels on that device to go high at the end of the experiment. This was because we had an overflow error because we had used int32 instead of uint32 in one part of the code!</p>", "type": "rendered"}, "parents": [{"hash": "0b80a1008bbc62e503545c7d3b0490081b79d44f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/0b80a1008bbc62e503545c7d3b0490081b79d44f.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/0b80a1008bbc62e503545c7d3b0490081b79d44f"}}}], "date": "2012-08-17T04:49:25+00:00", "message": "Fixed a bug where using port0/channel31 in your labscript (attached to an ni_pcie_6363) would cause all digital channels on that device to go high at the end of the experiment. This was because we had an overflow error because we had used int32 instead of uint32 in one part of the code!", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a bug where the binary file for the RFBlaster's DDS channel 1 was not uploaded.", "markup": "markdown", "html": "<p>Fixed a bug where the binary file for the RFBlaster's DDS channel 1 was not uploaded.</p>", "type": "rendered"}}, "hash": "0b80a1008bbc62e503545c7d3b0490081b79d44f", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/0b80a1008bbc62e503545c7d3b0490081b79d44f.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/0b80a1008bbc62e503545c7d3b0490081b79d44f/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/0b80a1008bbc62e503545c7d3b0490081b79d44f"}, "html": {"href": "#!/labscript_suite/blacs/commits/0b80a1008bbc62e503545c7d3b0490081b79d44f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/0b80a1008bbc62e503545c7d3b0490081b79d44f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/0b80a1008bbc62e503545c7d3b0490081b79d44f/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/0b80a1008bbc62e503545c7d3b0490081b79d44f/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed a bug where the binary file for the RFBlaster's DDS channel 1 was not uploaded.", "markup": "markdown", "html": "<p>Fixed a bug where the binary file for the RFBlaster's DDS channel 1 was not uploaded.</p>", "type": "rendered"}, "parents": [{"hash": "5271bbeef823db9001c2b7b98dc5c2134b0609f8", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5271bbeef823db9001c2b7b98dc5c2134b0609f8.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/5271bbeef823db9001c2b7b98dc5c2134b0609f8"}}}], "date": "2012-08-17T03:31:38+00:00", "message": "Fixed a bug where the binary file for the RFBlaster's DDS channel 1 was not uploaded.", "type": "commit"}, {"rendered": {"message": {"raw": "BLACS now uses subproc_utils.zmq_get to submit files to lyse and to check if lyse is responding. BLACS does not yet use a subproc_utils.ZMQServer as its own web server, but it will soon. That change will then require runmanager to switch to using zmq_get as well, so those two changes will be made in tandem.", "markup": "markdown", "html": "<p>BLACS now uses subproc_utils.zmq_get to submit files to lyse and to check if lyse is responding. BLACS does not yet use a subproc_utils.ZMQServer as its own web server, but it will soon. That change will then require runmanager to switch to using zmq_get as well, so those two changes will be made in tandem.</p>", "type": "rendered"}}, "hash": "5271bbeef823db9001c2b7b98dc5c2134b0609f8", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5271bbeef823db9001c2b7b98dc5c2134b0609f8.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/5271bbeef823db9001c2b7b98dc5c2134b0609f8/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/5271bbeef823db9001c2b7b98dc5c2134b0609f8"}, "html": {"href": "#!/labscript_suite/blacs/commits/5271bbeef823db9001c2b7b98dc5c2134b0609f8"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/5271bbeef823db9001c2b7b98dc5c2134b0609f8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/5271bbeef823db9001c2b7b98dc5c2134b0609f8/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/5271bbeef823db9001c2b7b98dc5c2134b0609f8/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "BLACS now uses subproc_utils.zmq_get to submit files to lyse and to check if lyse is responding. BLACS does not yet use a subproc_utils.ZMQServer as its own web server, but it will soon. That change will then require runmanager to switch to using zmq_get as well, so those two changes will be made in tandem.", "markup": "markdown", "html": "<p>BLACS now uses subproc_utils.zmq_get to submit files to lyse and to check if lyse is responding. BLACS does not yet use a subproc_utils.ZMQServer as its own web server, but it will soon. That change will then require runmanager to switch to using zmq_get as well, so those two changes will be made in tandem.</p>", "type": "rendered"}, "parents": [{"hash": "5a0fbc5f8f93eedc1228c4031081c5bbc60b6432", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5a0fbc5f8f93eedc1228c4031081c5bbc60b6432.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/5a0fbc5f8f93eedc1228c4031081c5bbc60b6432"}}}], "date": "2012-08-15T06:44:14+00:00", "message": "BLACS now uses subproc_utils.zmq_get to submit files to lyse and to check if lyse is responding. BLACS does not yet use a subproc_utils.ZMQServer as its own web server, but it will soon. That change will then require runmanager to switch to using zmq_get as well, so those two changes will be made in tandem.", "type": "commit"}, {"rendered": {"message": {"raw": "Shortened the wait time for the initial pulseblaster instructions, so that pulseblasters begin their run sooner after being triggered. The total delay should now be 200ns plus a number of clock cycles as specified in the manual.", "markup": "markdown", "html": "<p>Shortened the wait time for the initial pulseblaster instructions, so that pulseblasters begin their run sooner after being triggered. The total delay should now be 200ns plus a number of clock cycles as specified in the manual.</p>", "type": "rendered"}}, "hash": "5a0fbc5f8f93eedc1228c4031081c5bbc60b6432", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5a0fbc5f8f93eedc1228c4031081c5bbc60b6432.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/5a0fbc5f8f93eedc1228c4031081c5bbc60b6432/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/5a0fbc5f8f93eedc1228c4031081c5bbc60b6432"}, "html": {"href": "#!/labscript_suite/blacs/commits/5a0fbc5f8f93eedc1228c4031081c5bbc60b6432"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/5a0fbc5f8f93eedc1228c4031081c5bbc60b6432"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/5a0fbc5f8f93eedc1228c4031081c5bbc60b6432/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/5a0fbc5f8f93eedc1228c4031081c5bbc60b6432/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Shortened the wait time for the initial pulseblaster instructions, so that pulseblasters begin their run sooner after being triggered. The total delay should now be 200ns plus a number of clock cycles as specified in the manual.", "markup": "markdown", "html": "<p>Shortened the wait time for the initial pulseblaster instructions, so that pulseblasters begin their run sooner after being triggered. The total delay should now be 200ns plus a number of clock cycles as specified in the manual.</p>", "type": "rendered"}, "parents": [{"hash": "dc02bb2032a175618b9b9ff2274aa929d855a335", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/dc02bb2032a175618b9b9ff2274aa929d855a335.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/dc02bb2032a175618b9b9ff2274aa929d855a335"}}}], "date": "2012-07-31T01:56:35+00:00", "message": "Shortened the wait time for the initial pulseblaster instructions, so that pulseblasters begin their run sooner after being triggered. The total delay should now be 200ns plus a number of clock cycles as specified in the manual.", "type": "commit"}, {"rendered": {"message": {"raw": "refs #476\n\nFixed a few problems with holding down the up/down button on the spinbuttons which would cause multiple programs to be queued up, which at the completion of each, update the widget to the value the novatech contains, affectively preventing you from stepping through the value at a rate faster than it could program the novatech!\n\nAlso cleaned up the novatech  __init__ code a bit (changes based on the Pulseblaster init code)!", "markup": "markdown", "html": "<p>refs #476</p>\n<p>Fixed a few problems with holding down the up/down button on the spinbuttons which would cause multiple programs to be queued up, which at the completion of each, update the widget to the value the novatech contains, affectively preventing you from stepping through the value at a rate faster than it could program the novatech!</p>\n<p>Also cleaned up the novatech  <strong>init</strong> code a bit (changes based on the Pulseblaster init code)!</p>", "type": "rendered"}}, "hash": "dc02bb2032a175618b9b9ff2274aa929d855a335", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/dc02bb2032a175618b9b9ff2274aa929d855a335.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/dc02bb2032a175618b9b9ff2274aa929d855a335/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/dc02bb2032a175618b9b9ff2274aa929d855a335"}, "html": {"href": "#!/labscript_suite/blacs/commits/dc02bb2032a175618b9b9ff2274aa929d855a335"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/dc02bb2032a175618b9b9ff2274aa929d855a335"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/dc02bb2032a175618b9b9ff2274aa929d855a335/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/dc02bb2032a175618b9b9ff2274aa929d855a335/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "refs #476\n\nFixed a few problems with holding down the up/down button on the spinbuttons which would cause multiple programs to be queued up, which at the completion of each, update the widget to the value the novatech contains, affectively preventing you from stepping through the value at a rate faster than it could program the novatech!\n\nAlso cleaned up the novatech  __init__ code a bit (changes based on the Pulseblaster init code)!", "markup": "markdown", "html": "<p>refs #476</p>\n<p>Fixed a few problems with holding down the up/down button on the spinbuttons which would cause multiple programs to be queued up, which at the completion of each, update the widget to the value the novatech contains, affectively preventing you from stepping through the value at a rate faster than it could program the novatech!</p>\n<p>Also cleaned up the novatech  <strong>init</strong> code a bit (changes based on the Pulseblaster init code)!</p>", "type": "rendered"}, "parents": [{"hash": "b8f8d9c99a1d1a4f2884bc25c9933701f5ca0305", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/b8f8d9c99a1d1a4f2884bc25c9933701f5ca0305.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/b8f8d9c99a1d1a4f2884bc25c9933701f5ca0305"}}}], "date": "2012-07-17T08:31:14+00:00", "message": "refs #476\n\nFixed a few problems with holding down the up/down button on the spinbuttons which would cause multiple programs to be queued up, which at the completion of each, update the widget to the value the novatech contains, affectively preventing you from stepping through the value at a rate faster than it could program the novatech!\n\nAlso cleaned up the novatech  __init__ code a bit (changes based on the Pulseblaster init code)!", "type": "commit"}, {"rendered": {"message": {"raw": "Resolves #476\nrefs #345\n\nThe NovatechDDS9m now compares front panel values to device values and gives the user the opportunity to choose on a per channel basis which values they want (either front panel or device).\n\nThis also makes it easy to restore the Novatech channel lock state, units, step size as I don't have to write a special case to do it!\n\nThis feature also makes it easy to restore values to your novatech if it loses power!\n\nThe front panel is greyed out while waiting for the user to decide which values to accept.\nRunning a buffered experiment while the front panel is greyed out is fine, it just ignores both the remote and front panel values as they'll be overwritten at the end of the run anyway!\n\nThe pretend \"gate\" has also been removed as we should have most channels under digital gate control anyway!", "markup": "markdown", "html": "<p>Resolves #476<br />\nrefs #345</p>\n<p>The NovatechDDS9m now compares front panel values to device values and gives the user the opportunity to choose on a per channel basis which values they want (either front panel or device).</p>\n<p>This also makes it easy to restore the Novatech channel lock state, units, step size as I don't have to write a special case to do it!</p>\n<p>This feature also makes it easy to restore values to your novatech if it loses power!</p>\n<p>The front panel is greyed out while waiting for the user to decide which values to accept.<br />\nRunning a buffered experiment while the front panel is greyed out is fine, it just ignores both the remote and front panel values as they'll be overwritten at the end of the run anyway!</p>\n<p>The pretend \"gate\" has also been removed as we should have most channels under digital gate control anyway!</p>", "type": "rendered"}}, "hash": "b8f8d9c99a1d1a4f2884bc25c9933701f5ca0305", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/b8f8d9c99a1d1a4f2884bc25c9933701f5ca0305.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/b8f8d9c99a1d1a4f2884bc25c9933701f5ca0305/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/b8f8d9c99a1d1a4f2884bc25c9933701f5ca0305"}, "html": {"href": "#!/labscript_suite/blacs/commits/b8f8d9c99a1d1a4f2884bc25c9933701f5ca0305"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/b8f8d9c99a1d1a4f2884bc25c9933701f5ca0305"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/b8f8d9c99a1d1a4f2884bc25c9933701f5ca0305/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/b8f8d9c99a1d1a4f2884bc25c9933701f5ca0305/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Resolves #476\nrefs #345\n\nThe NovatechDDS9m now compares front panel values to device values and gives the user the opportunity to choose on a per channel basis which values they want (either front panel or device).\n\nThis also makes it easy to restore the Novatech channel lock state, units, step size as I don't have to write a special case to do it!\n\nThis feature also makes it easy to restore values to your novatech if it loses power!\n\nThe front panel is greyed out while waiting for the user to decide which values to accept.\nRunning a buffered experiment while the front panel is greyed out is fine, it just ignores both the remote and front panel values as they'll be overwritten at the end of the run anyway!\n\nThe pretend \"gate\" has also been removed as we should have most channels under digital gate control anyway!", "markup": "markdown", "html": "<p>Resolves #476<br />\nrefs #345</p>\n<p>The NovatechDDS9m now compares front panel values to device values and gives the user the opportunity to choose on a per channel basis which values they want (either front panel or device).</p>\n<p>This also makes it easy to restore the Novatech channel lock state, units, step size as I don't have to write a special case to do it!</p>\n<p>This feature also makes it easy to restore values to your novatech if it loses power!</p>\n<p>The front panel is greyed out while waiting for the user to decide which values to accept.<br />\nRunning a buffered experiment while the front panel is greyed out is fine, it just ignores both the remote and front panel values as they'll be overwritten at the end of the run anyway!</p>\n<p>The pretend \"gate\" has also been removed as we should have most channels under digital gate control anyway!</p>", "type": "rendered"}, "parents": [{"hash": "90c8bb9f5c8720290dbc739e9f5f5e0c94472946", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/90c8bb9f5c8720290dbc739e9f5f5e0c94472946.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/90c8bb9f5c8720290dbc739e9f5f5e0c94472946"}}}], "date": "2012-07-17T07:04:27+00:00", "message": "Resolves #476\nrefs #345\n\nThe NovatechDDS9m now compares front panel values to device values and gives the user the opportunity to choose on a per channel basis which values they want (either front panel or device).\n\nThis also makes it easy to restore the Novatech channel lock state, units, step size as I don't have to write a special case to do it!\n\nThis feature also makes it easy to restore values to your novatech if it loses power!\n\nThe front panel is greyed out while waiting for the user to decide which values to accept.\nRunning a buffered experiment while the front panel is greyed out is fine, it just ignores both the remote and front panel values as they'll be overwritten at the end of the run anyway!\n\nThe pretend \"gate\" has also been removed as we should have most channels under digital gate control anyway!", "type": "commit"}, {"rendered": {"message": {"raw": "refs #558\n\nFound a bug that might relate to this issue, but I think it might only come into play when a calibration is added to a channel at the same time the channel is added to the connection table, which would cause an invalid value for the step size to be restored next time BLACS is restarted", "markup": "markdown", "html": "<p>refs #558</p>\n<p>Found a bug that might relate to this issue, but I think it might only come into play when a calibration is added to a channel at the same time the channel is added to the connection table, which would cause an invalid value for the step size to be restored next time BLACS is restarted</p>", "type": "rendered"}}, "hash": "90c8bb9f5c8720290dbc739e9f5f5e0c94472946", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/90c8bb9f5c8720290dbc739e9f5f5e0c94472946.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/90c8bb9f5c8720290dbc739e9f5f5e0c94472946/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/90c8bb9f5c8720290dbc739e9f5f5e0c94472946"}, "html": {"href": "#!/labscript_suite/blacs/commits/90c8bb9f5c8720290dbc739e9f5f5e0c94472946"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/90c8bb9f5c8720290dbc739e9f5f5e0c94472946"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/90c8bb9f5c8720290dbc739e9f5f5e0c94472946/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/90c8bb9f5c8720290dbc739e9f5f5e0c94472946/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "refs #558\n\nFound a bug that might relate to this issue, but I think it might only come into play when a calibration is added to a channel at the same time the channel is added to the connection table, which would cause an invalid value for the step size to be restored next time BLACS is restarted", "markup": "markdown", "html": "<p>refs #558</p>\n<p>Found a bug that might relate to this issue, but I think it might only come into play when a calibration is added to a channel at the same time the channel is added to the connection table, which would cause an invalid value for the step size to be restored next time BLACS is restarted</p>", "type": "rendered"}, "parents": [{"hash": "72f7d58ff8c2aa2f765d82d822336417c3f46f06", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/72f7d58ff8c2aa2f765d82d822336417c3f46f06.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/72f7d58ff8c2aa2f765d82d822336417c3f46f06"}}}], "date": "2012-07-16T06:24:58+00:00", "message": "refs #558\n\nFound a bug that might relate to this issue, but I think it might only come into play when a calibration is added to a channel at the same time the channel is added to the connection table, which would cause an invalid value for the step size to be restored next time BLACS is restarted", "type": "commit"}, {"rendered": {"message": {"raw": "clean_h5_file also copies labscriptlib to repeated experiment h5 file.", "markup": "markdown", "html": "<p>clean_h5_file also copies labscriptlib to repeated experiment h5 file.</p>", "type": "rendered"}}, "hash": "72f7d58ff8c2aa2f765d82d822336417c3f46f06", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/72f7d58ff8c2aa2f765d82d822336417c3f46f06.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/72f7d58ff8c2aa2f765d82d822336417c3f46f06/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/72f7d58ff8c2aa2f765d82d822336417c3f46f06"}, "html": {"href": "#!/labscript_suite/blacs/commits/72f7d58ff8c2aa2f765d82d822336417c3f46f06"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/72f7d58ff8c2aa2f765d82d822336417c3f46f06"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/72f7d58ff8c2aa2f765d82d822336417c3f46f06/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/72f7d58ff8c2aa2f765d82d822336417c3f46f06/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "clean_h5_file also copies labscriptlib to repeated experiment h5 file.", "markup": "markdown", "html": "<p>clean_h5_file also copies labscriptlib to repeated experiment h5 file.</p>", "type": "rendered"}, "parents": [{"hash": "22e47eb8b45a06efb39e04081777ecba751855a7", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/22e47eb8b45a06efb39e04081777ecba751855a7.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/22e47eb8b45a06efb39e04081777ecba751855a7"}}}], "date": "2012-07-12T05:55:32+00:00", "message": "clean_h5_file also copies labscriptlib to repeated experiment h5 file.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixes bug in last commit (accidentally duplicated line in clean_h5_file.", "markup": "markdown", "html": "<p>Fixes bug in last commit (accidentally duplicated line in clean_h5_file.</p>", "type": "rendered"}}, "hash": "22e47eb8b45a06efb39e04081777ecba751855a7", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/22e47eb8b45a06efb39e04081777ecba751855a7.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/22e47eb8b45a06efb39e04081777ecba751855a7/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/22e47eb8b45a06efb39e04081777ecba751855a7"}, "html": {"href": "#!/labscript_suite/blacs/commits/22e47eb8b45a06efb39e04081777ecba751855a7"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/22e47eb8b45a06efb39e04081777ecba751855a7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/22e47eb8b45a06efb39e04081777ecba751855a7/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/22e47eb8b45a06efb39e04081777ecba751855a7/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Fixes bug in last commit (accidentally duplicated line in clean_h5_file.", "markup": "markdown", "html": "<p>Fixes bug in last commit (accidentally duplicated line in clean_h5_file.</p>", "type": "rendered"}, "parents": [{"hash": "33662e6497f07cfaeb07cd53db63896039e27712", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/33662e6497f07cfaeb07cd53db63896039e27712.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/33662e6497f07cfaeb07cd53db63896039e27712"}}}], "date": "2012-07-12T03:26:25+00:00", "message": "Fixes bug in last commit (accidentally duplicated line in clean_h5_file.", "type": "commit"}, {"rendered": {"message": {"raw": "Resolves #562 by copying sequence_id to repeat experiments in clean_h5_file.", "markup": "markdown", "html": "<p>Resolves #562 by copying sequence_id to repeat experiments in clean_h5_file.</p>", "type": "rendered"}}, "hash": "33662e6497f07cfaeb07cd53db63896039e27712", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/33662e6497f07cfaeb07cd53db63896039e27712.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/33662e6497f07cfaeb07cd53db63896039e27712/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/33662e6497f07cfaeb07cd53db63896039e27712"}, "html": {"href": "#!/labscript_suite/blacs/commits/33662e6497f07cfaeb07cd53db63896039e27712"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/33662e6497f07cfaeb07cd53db63896039e27712"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/33662e6497f07cfaeb07cd53db63896039e27712/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/33662e6497f07cfaeb07cd53db63896039e27712/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "Resolves #562 by copying sequence_id to repeat experiments in clean_h5_file.", "markup": "markdown", "html": "<p>Resolves #562 by copying sequence_id to repeat experiments in clean_h5_file.</p>", "type": "rendered"}, "parents": [{"hash": "c8b39c701d89241920fc59421e944e81a83a3742", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/c8b39c701d89241920fc59421e944e81a83a3742.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/c8b39c701d89241920fc59421e944e81a83a3742"}}}], "date": "2012-07-12T02:35:50+00:00", "message": "Resolves #562 by copying sequence_id to repeat experiments in clean_h5_file.", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed amplitude after buffered sequence", "markup": "markdown", "html": "<p>Fixed amplitude after buffered sequence</p>", "type": "rendered"}}, "hash": "c8b39c701d89241920fc59421e944e81a83a3742", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/c8b39c701d89241920fc59421e944e81a83a3742.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/c8b39c701d89241920fc59421e944e81a83a3742/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/c8b39c701d89241920fc59421e944e81a83a3742"}, "html": {"href": "#!/labscript_suite/blacs/commits/c8b39c701d89241920fc59421e944e81a83a3742"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/c8b39c701d89241920fc59421e944e81a83a3742"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/c8b39c701d89241920fc59421e944e81a83a3742/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/c8b39c701d89241920fc59421e944e81a83a3742/statuses_page=1.json"}}, "author": {"raw": "shjohnst", "type": "author", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}}, "summary": {"raw": "Fixed amplitude after buffered sequence", "markup": "markdown", "html": "<p>Fixed amplitude after buffered sequence</p>", "type": "rendered"}, "parents": [{"hash": "b5883f3e862df775e4f46935bae190e6c6924a92", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/b5883f3e862df775e4f46935bae190e6c6924a92.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/b5883f3e862df775e4f46935bae190e6c6924a92"}}}], "date": "2012-07-06T08:17:39+00:00", "message": "Fixed amplitude after buffered sequence", "type": "commit"}, {"rendered": {"message": {"raw": "Minor bug fix regarding front panel values after a buffered sequence\n(Was multiplying frequency by 1e6 when it was already in Hz)", "markup": "markdown", "html": "<p>Minor bug fix regarding front panel values after a buffered sequence<br />\n(Was multiplying frequency by 1e6 when it was already in Hz)</p>", "type": "rendered"}}, "hash": "b5883f3e862df775e4f46935bae190e6c6924a92", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/b5883f3e862df775e4f46935bae190e6c6924a92.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/b5883f3e862df775e4f46935bae190e6c6924a92/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/b5883f3e862df775e4f46935bae190e6c6924a92"}, "html": {"href": "#!/labscript_suite/blacs/commits/b5883f3e862df775e4f46935bae190e6c6924a92"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/b5883f3e862df775e4f46935bae190e6c6924a92"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/b5883f3e862df775e4f46935bae190e6c6924a92/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/b5883f3e862df775e4f46935bae190e6c6924a92/statuses_page=1.json"}}, "author": {"raw": "shjohnst", "type": "author", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}}, "summary": {"raw": "Minor bug fix regarding front panel values after a buffered sequence\n(Was multiplying frequency by 1e6 when it was already in Hz)", "markup": "markdown", "html": "<p>Minor bug fix regarding front panel values after a buffered sequence<br />\n(Was multiplying frequency by 1e6 when it was already in Hz)</p>", "type": "rendered"}, "parents": [{"hash": "43b2bf9e5a1250398c448427b0a4237997517f13", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/43b2bf9e5a1250398c448427b0a4237997517f13.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/43b2bf9e5a1250398c448427b0a4237997517f13"}}}], "date": "2012-07-06T06:55:55+00:00", "message": "Minor bug fix regarding front panel values after a buffered sequence\n(Was multiplying frequency by 1e6 when it was already in Hz)", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed restoration of analysis server which has been broken since we moved the location of the BLACS settings file!", "markup": "markdown", "html": "<p>Fixed restoration of analysis server which has been broken since we moved the location of the BLACS settings file!</p>", "type": "rendered"}}, "hash": "43b2bf9e5a1250398c448427b0a4237997517f13", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/43b2bf9e5a1250398c448427b0a4237997517f13.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/43b2bf9e5a1250398c448427b0a4237997517f13/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/43b2bf9e5a1250398c448427b0a4237997517f13"}, "html": {"href": "#!/labscript_suite/blacs/commits/43b2bf9e5a1250398c448427b0a4237997517f13"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/43b2bf9e5a1250398c448427b0a4237997517f13"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/43b2bf9e5a1250398c448427b0a4237997517f13/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/43b2bf9e5a1250398c448427b0a4237997517f13/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed restoration of analysis server which has been broken since we moved the location of the BLACS settings file!", "markup": "markdown", "html": "<p>Fixed restoration of analysis server which has been broken since we moved the location of the BLACS settings file!</p>", "type": "rendered"}, "parents": [{"hash": "ccf77716c11a7df4cea68a512ccc152b98865376", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/ccf77716c11a7df4cea68a512ccc152b98865376.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/ccf77716c11a7df4cea68a512ccc152b98865376"}}}], "date": "2012-07-06T06:44:11+00:00", "message": "Fixed restoration of analysis server which has been broken since we moved the location of the BLACS settings file!", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed all known bugs, seems to be working as desired.\nOnly remaining problem is some undesired hardware behaviour on transitions to and from buffered mode, probably something that needs fixing on the buffered sequence compile side of things.\nOther than that, the RF Blaster is now fully BLACS compatible!", "markup": "markdown", "html": "<p>Fixed all known bugs, seems to be working as desired.<br />\nOnly remaining problem is some undesired hardware behaviour on transitions to and from buffered mode, probably something that needs fixing on the buffered sequence compile side of things.<br />\nOther than that, the RF Blaster is now fully BLACS compatible!</p>", "type": "rendered"}}, "hash": "ccf77716c11a7df4cea68a512ccc152b98865376", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/ccf77716c11a7df4cea68a512ccc152b98865376.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/ccf77716c11a7df4cea68a512ccc152b98865376/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/ccf77716c11a7df4cea68a512ccc152b98865376"}, "html": {"href": "#!/labscript_suite/blacs/commits/ccf77716c11a7df4cea68a512ccc152b98865376"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/ccf77716c11a7df4cea68a512ccc152b98865376"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/ccf77716c11a7df4cea68a512ccc152b98865376/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/ccf77716c11a7df4cea68a512ccc152b98865376/statuses_page=1.json"}}, "author": {"raw": "shjohnst", "type": "author", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}}, "summary": {"raw": "Fixed all known bugs, seems to be working as desired.\nOnly remaining problem is some undesired hardware behaviour on transitions to and from buffered mode, probably something that needs fixing on the buffered sequence compile side of things.\nOther than that, the RF Blaster is now fully BLACS compatible!", "markup": "markdown", "html": "<p>Fixed all known bugs, seems to be working as desired.<br />\nOnly remaining problem is some undesired hardware behaviour on transitions to and from buffered mode, probably something that needs fixing on the buffered sequence compile side of things.<br />\nOther than that, the RF Blaster is now fully BLACS compatible!</p>", "type": "rendered"}, "parents": [{"hash": "26e56b6c5253ce0cbc9d99785f5f1c0f0c44a672", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/26e56b6c5253ce0cbc9d99785f5f1c0f0c44a672.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/26e56b6c5253ce0cbc9d99785f5f1c0f0c44a672"}}}], "date": "2012-07-05T09:12:44+00:00", "message": "Fixed all known bugs, seems to be working as desired.\nOnly remaining problem is some undesired hardware behaviour on transitions to and from buffered mode, probably something that needs fixing on the buffered sequence compile side of things.\nOther than that, the RF Blaster is now fully BLACS compatible!", "type": "commit"}, {"rendered": {"message": {"raw": "Added a right click menu on each notebook tab with the option of restarting the device", "markup": "markdown", "html": "<p>Added a right click menu on each notebook tab with the option of restarting the device</p>", "type": "rendered"}}, "hash": "26e56b6c5253ce0cbc9d99785f5f1c0f0c44a672", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/26e56b6c5253ce0cbc9d99785f5f1c0f0c44a672.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/26e56b6c5253ce0cbc9d99785f5f1c0f0c44a672/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/26e56b6c5253ce0cbc9d99785f5f1c0f0c44a672"}, "html": {"href": "#!/labscript_suite/blacs/commits/26e56b6c5253ce0cbc9d99785f5f1c0f0c44a672"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/26e56b6c5253ce0cbc9d99785f5f1c0f0c44a672"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/26e56b6c5253ce0cbc9d99785f5f1c0f0c44a672/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/26e56b6c5253ce0cbc9d99785f5f1c0f0c44a672/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added a right click menu on each notebook tab with the option of restarting the device", "markup": "markdown", "html": "<p>Added a right click menu on each notebook tab with the option of restarting the device</p>", "type": "rendered"}, "parents": [{"hash": "dc7fe2b202c2a705e59e38bdb557ac51f4011b2e", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/dc7fe2b202c2a705e59e38bdb557ac51f4011b2e.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/dc7fe2b202c2a705e59e38bdb557ac51f4011b2e"}}}], "date": "2012-07-05T01:39:17+00:00", "message": "Added a right click menu on each notebook tab with the option of restarting the device", "type": "commit"}, {"rendered": {"message": {"raw": "Added a splash screen to BLACS!!", "markup": "markdown", "html": "<p>Added a splash screen to BLACS!!</p>", "type": "rendered"}}, "hash": "dc7fe2b202c2a705e59e38bdb557ac51f4011b2e", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/dc7fe2b202c2a705e59e38bdb557ac51f4011b2e.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/dc7fe2b202c2a705e59e38bdb557ac51f4011b2e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/dc7fe2b202c2a705e59e38bdb557ac51f4011b2e"}, "html": {"href": "#!/labscript_suite/blacs/commits/dc7fe2b202c2a705e59e38bdb557ac51f4011b2e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/dc7fe2b202c2a705e59e38bdb557ac51f4011b2e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/dc7fe2b202c2a705e59e38bdb557ac51f4011b2e/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/dc7fe2b202c2a705e59e38bdb557ac51f4011b2e/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added a splash screen to BLACS!!", "markup": "markdown", "html": "<p>Added a splash screen to BLACS!!</p>", "type": "rendered"}, "parents": [{"hash": "30a73e6496cb500cd234a8e7044d807ddea0750d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/30a73e6496cb500cd234a8e7044d807ddea0750d.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/30a73e6496cb500cd234a8e7044d807ddea0750d"}}}], "date": "2012-07-04T08:23:19+00:00", "message": "Added a splash screen to BLACS!!", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a bug where if the replacing of the conenction table h5 file fails, the program throws an error and acts like it has been successful.\n\nIt now fails with a meaningful error message", "markup": "markdown", "html": "<p>Fixed a bug where if the replacing of the conenction table h5 file fails, the program throws an error and acts like it has been successful.</p>\n<p>It now fails with a meaningful error message</p>", "type": "rendered"}}, "hash": "30a73e6496cb500cd234a8e7044d807ddea0750d", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/30a73e6496cb500cd234a8e7044d807ddea0750d.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/30a73e6496cb500cd234a8e7044d807ddea0750d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/30a73e6496cb500cd234a8e7044d807ddea0750d"}, "html": {"href": "#!/labscript_suite/blacs/commits/30a73e6496cb500cd234a8e7044d807ddea0750d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/30a73e6496cb500cd234a8e7044d807ddea0750d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/30a73e6496cb500cd234a8e7044d807ddea0750d/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/30a73e6496cb500cd234a8e7044d807ddea0750d/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed a bug where if the replacing of the conenction table h5 file fails, the program throws an error and acts like it has been successful.\n\nIt now fails with a meaningful error message", "markup": "markdown", "html": "<p>Fixed a bug where if the replacing of the conenction table h5 file fails, the program throws an error and acts like it has been successful.</p>\n<p>It now fails with a meaningful error message</p>", "type": "rendered"}, "parents": [{"hash": "43cd355e99abd3e3690e8a553960d6d98fb189fe", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/43cd355e99abd3e3690e8a553960d6d98fb189fe.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/43cd355e99abd3e3690e8a553960d6d98fb189fe"}}}], "date": "2012-07-03T04:17:38+00:00", "message": "Fixed a bug where if the replacing of the conenction table h5 file fails, the program throws an error and acts like it has been successful.\n\nIt now fails with a meaningful error message", "type": "commit"}, {"rendered": {"message": {"raw": "Made some changes to the way things work for the RfBlaster.\n\nStatic updates still do not work (reason unknown, will debug with vlad)\nI expect this means buffered updates will not work either!\n\nWhat does work is the consistency check between the front panel values in BLACS and the RfBlaster values. This now detects if they don't match, and warns the user, giving them the option of pushing or pulling values from the device on a per channel basis.\n\nWill apply this to the Novatech DDS9m soon, which will solve a long standing issue (refs #476 and refs #345)", "markup": "markdown", "html": "<p>Made some changes to the way things work for the RfBlaster.</p>\n<p>Static updates still do not work (reason unknown, will debug with vlad)<br />\nI expect this means buffered updates will not work either!</p>\n<p>What does work is the consistency check between the front panel values in BLACS and the RfBlaster values. This now detects if they don't match, and warns the user, giving them the option of pushing or pulling values from the device on a per channel basis.</p>\n<p>Will apply this to the Novatech DDS9m soon, which will solve a long standing issue (refs #476 and refs #345)</p>", "type": "rendered"}}, "hash": "43cd355e99abd3e3690e8a553960d6d98fb189fe", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/43cd355e99abd3e3690e8a553960d6d98fb189fe.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/43cd355e99abd3e3690e8a553960d6d98fb189fe/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/43cd355e99abd3e3690e8a553960d6d98fb189fe"}, "html": {"href": "#!/labscript_suite/blacs/commits/43cd355e99abd3e3690e8a553960d6d98fb189fe"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/43cd355e99abd3e3690e8a553960d6d98fb189fe"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/43cd355e99abd3e3690e8a553960d6d98fb189fe/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/43cd355e99abd3e3690e8a553960d6d98fb189fe/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Made some changes to the way things work for the RfBlaster.\n\nStatic updates still do not work (reason unknown, will debug with vlad)\nI expect this means buffered updates will not work either!\n\nWhat does work is the consistency check between the front panel values in BLACS and the RfBlaster values. This now detects if they don't match, and warns the user, giving them the option of pushing or pulling values from the device on a per channel basis.\n\nWill apply this to the Novatech DDS9m soon, which will solve a long standing issue (refs #476 and refs #345)", "markup": "markdown", "html": "<p>Made some changes to the way things work for the RfBlaster.</p>\n<p>Static updates still do not work (reason unknown, will debug with vlad)<br />\nI expect this means buffered updates will not work either!</p>\n<p>What does work is the consistency check between the front panel values in BLACS and the RfBlaster values. This now detects if they don't match, and warns the user, giving them the option of pushing or pulling values from the device on a per channel basis.</p>\n<p>Will apply this to the Novatech DDS9m soon, which will solve a long standing issue (refs #476 and refs #345)</p>", "type": "rendered"}, "parents": [{"hash": "e45d90985619acfec6d5d8960c2c860b6fd3636d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/e45d90985619acfec6d5d8960c2c860b6fd3636d.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/e45d90985619acfec6d5d8960c2c860b6fd3636d"}}}], "date": "2012-07-02T09:43:31+00:00", "message": "Made some changes to the way things work for the RfBlaster.\n\nStatic updates still do not work (reason unknown, will debug with vlad)\nI expect this means buffered updates will not work either!\n\nWhat does work is the consistency check between the front panel values in BLACS and the RfBlaster values. This now detects if they don't match, and warns the user, giving them the option of pushing or pulling values from the device on a per channel basis.\n\nWill apply this to the Novatech DDS9m soon, which will solve a long standing issue (refs #476 and refs #345)", "type": "commit"}, {"rendered": {"message": {"raw": "Fixed a bug where I created the settings dictionary entry if it existed, but didn't populate the required keys (such as base_value, etc). Thus, if the widget did not undergo a value change, unit change, lock state change and step size change, the settings dictionary would not be populated correctly for the save_front_panel_state function and BLACS would through exceptions at various points in time, including when attempting to close, which would then leave BLACS in an unresponsive state.\n\nFixed a bug where digital output objects were not saving their state because I didn't save the settings dictionary as a object attribute (continuity was not preserved across restarts)\n\nFixed a bug where the step size would not be updated in the settings dictionary when changing the unit (only an issue if you change unit, and then restart the tab)\n\nFixed a bug where I was saving the step size in the setings dictionary in terms on the current unit, not the base unit (only an issue if you use units and then restart the tab)", "markup": "markdown", "html": "<p>Fixed a bug where I created the settings dictionary entry if it existed, but didn't populate the required keys (such as base_value, etc). Thus, if the widget did not undergo a value change, unit change, lock state change and step size change, the settings dictionary would not be populated correctly for the save_front_panel_state function and BLACS would through exceptions at various points in time, including when attempting to close, which would then leave BLACS in an unresponsive state.</p>\n<p>Fixed a bug where digital output objects were not saving their state because I didn't save the settings dictionary as a object attribute (continuity was not preserved across restarts)</p>\n<p>Fixed a bug where the step size would not be updated in the settings dictionary when changing the unit (only an issue if you change unit, and then restart the tab)</p>\n<p>Fixed a bug where I was saving the step size in the setings dictionary in terms on the current unit, not the base unit (only an issue if you use units and then restart the tab)</p>", "type": "rendered"}}, "hash": "e45d90985619acfec6d5d8960c2c860b6fd3636d", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/e45d90985619acfec6d5d8960c2c860b6fd3636d.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/e45d90985619acfec6d5d8960c2c860b6fd3636d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/e45d90985619acfec6d5d8960c2c860b6fd3636d"}, "html": {"href": "#!/labscript_suite/blacs/commits/e45d90985619acfec6d5d8960c2c860b6fd3636d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/e45d90985619acfec6d5d8960c2c860b6fd3636d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/e45d90985619acfec6d5d8960c2c860b6fd3636d/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/e45d90985619acfec6d5d8960c2c860b6fd3636d/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed a bug where I created the settings dictionary entry if it existed, but didn't populate the required keys (such as base_value, etc). Thus, if the widget did not undergo a value change, unit change, lock state change and step size change, the settings dictionary would not be populated correctly for the save_front_panel_state function and BLACS would through exceptions at various points in time, including when attempting to close, which would then leave BLACS in an unresponsive state.\n\nFixed a bug where digital output objects were not saving their state because I didn't save the settings dictionary as a object attribute (continuity was not preserved across restarts)\n\nFixed a bug where the step size would not be updated in the settings dictionary when changing the unit (only an issue if you change unit, and then restart the tab)\n\nFixed a bug where I was saving the step size in the setings dictionary in terms on the current unit, not the base unit (only an issue if you use units and then restart the tab)", "markup": "markdown", "html": "<p>Fixed a bug where I created the settings dictionary entry if it existed, but didn't populate the required keys (such as base_value, etc). Thus, if the widget did not undergo a value change, unit change, lock state change and step size change, the settings dictionary would not be populated correctly for the save_front_panel_state function and BLACS would through exceptions at various points in time, including when attempting to close, which would then leave BLACS in an unresponsive state.</p>\n<p>Fixed a bug where digital output objects were not saving their state because I didn't save the settings dictionary as a object attribute (continuity was not preserved across restarts)</p>\n<p>Fixed a bug where the step size would not be updated in the settings dictionary when changing the unit (only an issue if you change unit, and then restart the tab)</p>\n<p>Fixed a bug where I was saving the step size in the setings dictionary in terms on the current unit, not the base unit (only an issue if you use units and then restart the tab)</p>", "type": "rendered"}, "parents": [{"hash": "e9628b918ccbb616db3766725dd291317aa0146d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/e9628b918ccbb616db3766725dd291317aa0146d.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/e9628b918ccbb616db3766725dd291317aa0146d"}}}], "date": "2012-07-02T09:38:06+00:00", "message": "Fixed a bug where I created the settings dictionary entry if it existed, but didn't populate the required keys (such as base_value, etc). Thus, if the widget did not undergo a value change, unit change, lock state change and step size change, the settings dictionary would not be populated correctly for the save_front_panel_state function and BLACS would through exceptions at various points in time, including when attempting to close, which would then leave BLACS in an unresponsive state.\n\nFixed a bug where digital output objects were not saving their state because I didn't save the settings dictionary as a object attribute (continuity was not preserved across restarts)\n\nFixed a bug where the step size would not be updated in the settings dictionary when changing the unit (only an issue if you change unit, and then restart the tab)\n\nFixed a bug where I was saving the step size in the setings dictionary in terms on the current unit, not the base unit (only an issue if you use units and then restart the tab)", "type": "commit"}, {"rendered": {"message": {"raw": "Added base code for rfblaster - still not quite operational, but won't crash BLACS (commit by Shaun in Michael's account)", "markup": "markdown", "html": "<p>Added base code for rfblaster - still not quite operational, but won't crash BLACS (commit by Shaun in Michael's account)</p>", "type": "rendered"}}, "hash": "e9628b918ccbb616db3766725dd291317aa0146d", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/e9628b918ccbb616db3766725dd291317aa0146d.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/e9628b918ccbb616db3766725dd291317aa0146d/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/e9628b918ccbb616db3766725dd291317aa0146d"}, "html": {"href": "#!/labscript_suite/blacs/commits/e9628b918ccbb616db3766725dd291317aa0146d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/e9628b918ccbb616db3766725dd291317aa0146d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/e9628b918ccbb616db3766725dd291317aa0146d/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/e9628b918ccbb616db3766725dd291317aa0146d/statuses_page=1.json"}}, "author": {"raw": "mikhaile", "type": "author", "user": {"display_name": "Michael Egorov", "uuid": "{7a86d5f9-94e5-4e78-85c3-9a0b7449b521}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a86d5f9-94e5-4e78-85c3-9a0b7449b521%7D"}, "html": {"href": "https://bitbucket.org/%7B7a86d5f9-94e5-4e78-85c3-9a0b7449b521%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/02acafd08a78a15add6bb0a0d85dd025d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsME-2.png"}}, "nickname": "michwill", "type": "user", "account_id": "557058:05c8be1b-b456-4370-b558-873eadb01b99"}}, "summary": {"raw": "Added base code for rfblaster - still not quite operational, but won't crash BLACS (commit by Shaun in Michael's account)", "markup": "markdown", "html": "<p>Added base code for rfblaster - still not quite operational, but won't crash BLACS (commit by Shaun in Michael's account)</p>", "type": "rendered"}, "parents": [{"hash": "3e04fd2c8fd7a1e15a0e60964db5eff19db0450f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/3e04fd2c8fd7a1e15a0e60964db5eff19db0450f.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/3e04fd2c8fd7a1e15a0e60964db5eff19db0450f"}}}], "date": "2012-06-29T07:55:43+00:00", "message": "Added base code for rfblaster - still not quite operational, but won't crash BLACS (commit by Shaun in Michael's account)", "type": "commit"}, {"rendered": {"message": {"raw": "Added the beginnings of a standalone script to run tabs by themselves", "markup": "markdown", "html": "<p>Added the beginnings of a standalone script to run tabs by themselves</p>", "type": "rendered"}}, "hash": "3e04fd2c8fd7a1e15a0e60964db5eff19db0450f", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/3e04fd2c8fd7a1e15a0e60964db5eff19db0450f.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/commit/3e04fd2c8fd7a1e15a0e60964db5eff19db0450f/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/patch/3e04fd2c8fd7a1e15a0e60964db5eff19db0450f"}, "html": {"href": "#!/labscript_suite/blacs/commits/3e04fd2c8fd7a1e15a0e60964db5eff19db0450f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/3e04fd2c8fd7a1e15a0e60964db5eff19db0450f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/commit/3e04fd2c8fd7a1e15a0e60964db5eff19db0450f/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/commit/3e04fd2c8fd7a1e15a0e60964db5eff19db0450f/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added the beginnings of a standalone script to run tabs by themselves", "markup": "markdown", "html": "<p>Added the beginnings of a standalone script to run tabs by themselves</p>", "type": "rendered"}, "parents": [{"hash": "4acf68bb55e50e7f8aa3c9f1a5465efaf6ae146e", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/4acf68bb55e50e7f8aa3c9f1a5465efaf6ae146e.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/4acf68bb55e50e7f8aa3c9f1a5465efaf6ae146e"}}}], "date": "2012-06-29T07:45:05+00:00", "message": "Added the beginnings of a standalone script to run tabs by themselves", "type": "commit"}], "next": "data/repositories/labscript_suite/blacs/commits/pstarkey/changed-loggererror-to-loggerexception-i-1507071611996_page=5.json"}