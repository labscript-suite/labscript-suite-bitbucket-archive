{"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/13/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/13.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/13/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/13/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/13/launch-blacs-as-a-secondary-control-system"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/13/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Launch BLACS as a secondary control system", "component": null, "votes": 0, "watches": 1, "content": {"raw": "We should be able to launch secondary instances of BLACS on other PCs. This will be particularly useful for a future port of BIAS to Python, but should be open to all devices.\r\n\r\n### Proposal ###\r\n\r\n```\r\n#!python\r\n\r\n@labscript_device\r\nclass SecondaryControlSystem(Device):\r\n    delimeter = '|'\r\n\r\n    @set_passed_properties(\r\n        property_names = {\"device_properties\": [\"local_hostname\"]}\r\n    )\r\n    def __init__(self, name, local_hostname, port):\r\n        Device.__init__(self, name, None, None)\r\n        self.BLACS_connection = str(port)\r\n        \r\n    def __call__(self, port):\r\n        return '%s%s%s'%(self.name, self.delimeter, port)\r\n```\r\n\r\nThe above code allows you to both instantiate a secondary control system and then use that to modify the `BLACS_connection` property of a device. Example usage would be:\r\n\r\n```\r\n#!python\r\n\r\nSecondaryControlSystem('imaging_pc', 'bec-imaging.physics.monash.edu', 42518)\r\nSecondaryControlSystem('control2', 'bec-control2.physics.monash.edu', 42518)\r\nPulseBlaster('pulseblaster_0', board_number=imaging_pc(0))\r\nNovaTechDDS9M('novatech1', my_clockline, com_port = control2('com14'))\r\n```\r\n\r\nBLACS would then be modified so that:\r\n\r\n*  the primary instance instantiated a communications tab (similar to the BIAS camera tab we have now) for each secondary control system instantiated in the connection table (the above code already adds a line to the connection table for this)\r\n* The primary instance does not instantiate tabs for devices whose BLACS connection starts with the name of one of the secondary control systems\r\n* the QueueManager knows to communicate with secondary BLACS instances in order to transition_to_buffered, etc. for relevant devices\r\n* secondary BLACS instances know (based on hostname in connection table? or lab config?) to use a different QueueManager designed specifically to talk to a primary BLACS instance\r\n* secondary BLACS instances create device tabs for devices in the connection table that begin with the secondary control instances name.\r\n\r\nThis is related to, but not the same as, [labscript #28](#!/labscript_suite/labscript/issues/28/remote-launching-of-all-blacs-devices). We could use a similar syntax to that issue instead (such as secondary_control_host='blah' as a kwarg for all devices) however that does not then provide information in the connection table for how to launch the secondary instances of BLACS, or which port they should communicate on. Similarly, we could consider that the syntax in that issue could be of a similar form to what I've proposed here, but I'm not sure that makes a lot of sense.", "markup": "markdown", "html": "<p>We should be able to launch secondary instances of BLACS on other PCs. This will be particularly useful for a future port of BIAS to Python, but should be open to all devices.</p>\n<h3 id=\"markdown-header-proposal\">Proposal</h3>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"nd\">@labscript_device</span>\n<span class=\"k\">class</span> <span class=\"nc\">SecondaryControlSystem</span><span class=\"p\">(</span><span class=\"n\">Device</span><span class=\"p\">):</span>\n    <span class=\"n\">delimeter</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;|&#39;</span>\n\n    <span class=\"nd\">@set_passed_properties</span><span class=\"p\">(</span>\n        <span class=\"n\">property_names</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;device_properties&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;local_hostname&quot;</span><span class=\"p\">]}</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">local_hostname</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">):</span>\n        <span class=\"n\">Device</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BLACS_connection</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">port</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;</span><span class=\"si\">%s%s%s</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">delimeter</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>The above code allows you to both instantiate a secondary control system and then use that to modify the <code>BLACS_connection</code> property of a device. Example usage would be:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">SecondaryControlSystem</span><span class=\"p\">(</span><span class=\"s1\">&#39;imaging_pc&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bec-imaging.physics.monash.edu&#39;</span><span class=\"p\">,</span> <span class=\"mi\">42518</span><span class=\"p\">)</span>\n<span class=\"n\">SecondaryControlSystem</span><span class=\"p\">(</span><span class=\"s1\">&#39;control2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bec-control2.physics.monash.edu&#39;</span><span class=\"p\">,</span> <span class=\"mi\">42518</span><span class=\"p\">)</span>\n<span class=\"n\">PulseBlaster</span><span class=\"p\">(</span><span class=\"s1\">&#39;pulseblaster_0&#39;</span><span class=\"p\">,</span> <span class=\"n\">board_number</span><span class=\"o\">=</span><span class=\"n\">imaging_pc</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n<span class=\"n\">NovaTechDDS9M</span><span class=\"p\">(</span><span class=\"s1\">&#39;novatech1&#39;</span><span class=\"p\">,</span> <span class=\"n\">my_clockline</span><span class=\"p\">,</span> <span class=\"n\">com_port</span> <span class=\"o\">=</span> <span class=\"n\">control2</span><span class=\"p\">(</span><span class=\"s1\">&#39;com14&#39;</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>BLACS would then be modified so that:</p>\n<ul>\n<li>the primary instance instantiated a communications tab (similar to the BIAS camera tab we have now) for each secondary control system instantiated in the connection table (the above code already adds a line to the connection table for this)</li>\n<li>The primary instance does not instantiate tabs for devices whose BLACS connection starts with the name of one of the secondary control systems</li>\n<li>the QueueManager knows to communicate with secondary BLACS instances in order to transition_to_buffered, etc. for relevant devices</li>\n<li>secondary BLACS instances know (based on hostname in connection table? or lab config?) to use a different QueueManager designed specifically to talk to a primary BLACS instance</li>\n<li>secondary BLACS instances create device tabs for devices in the connection table that begin with the secondary control instances name.</li>\n</ul>\n<p>This is related to, but not the same as, <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/issues/28/remote-launching-of-all-blacs-devices\" rel=\"nofollow\">labscript #28</a>. We could use a similar syntax to that issue instead (such as secondary_control_host='blah' as a kwarg for all devices) however that does not then provide information in the connection table for how to launch the secondary instances of BLACS, or which port they should communicate on. Similarly, we could consider that the syntax in that issue could be of a similar form to what I've proposed here, but I'm not sure that makes a lot of sense.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-04-21T04:27:42.120642+00:00", "milestone": null, "updated_on": "2017-10-03T01:06:42.175866+00:00", "type": "issue", "id": 13}