{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/13/comments/39760829.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/13#comment-39760829"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/13.json"}}, "type": "issue", "id": 13, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Launch BLACS as a secondary control system"}, "content": {"raw": "The reason they are devices is because that's currently the only way to get them in the connection table. I guess that might change down the line (because you're right, these are not devices).\n\nYes, they should probably inherit from something as they're the same (they weren't initially but I guess I made them converge!). I'm not sure if they'll actually be instances though when you'd want to do that check, but we may as well simplify the code a bit.\n\nI'm thinking of ditching the \"internal address\" kwarg as well. I was going to use that so that secondary control systems/remote brokers could dynmically determine which line in the connection table they were by comparing the local hostname to one in the connection table. However, that limits it to one per host, and gets messy if you are actually going through NAT and thus may have multiple PCs with the same hostname (and there are other network topologies that allows for duplicate hostnames I think). We should probably just require this to be explicitly configured by an option in the labconfig on the remote host (or maybe BLACS config/remote broker config) that says which device name they correspond to since those are unique.\n\nSo we have:\n\n```\n#!python\n\n@labscript_device\nclass RemoteBLACSConnection(Device):\n    delimeter = '|'\n\n    @set_passed_properties(\n        property_names = {}\n    )\n    def __init__(self, name, external_address):\n        Device.__init__(self, name, None, None)\n        # this is the address:port the parent BLACS will connect on\n        self.BLACS_connection = str(external_address)\n\n    def __call__(self, port):\n        \"\"\" This modifies the connection string so that a parent BLACS knows not to instantiate it directly\"\"\"\n        return '%s%s%s'%(self.name, self.delimeter, port)\n\n@labscript_device\nclass RemoteWorkerBroker(RemoteBLACSConnection):\n    pass\n\n@labscript_device\nclass SecondaryControlSystem(RemoteBLACSConnection):\n    pass\n```", "markup": "markdown", "html": "<p>The reason they are devices is because that's currently the only way to get them in the connection table. I guess that might change down the line (because you're right, these are not devices).</p>\n<p>Yes, they should probably inherit from something as they're the same (they weren't initially but I guess I made them converge!). I'm not sure if they'll actually be instances though when you'd want to do that check, but we may as well simplify the code a bit.</p>\n<p>I'm thinking of ditching the \"internal address\" kwarg as well. I was going to use that so that secondary control systems/remote brokers could dynmically determine which line in the connection table they were by comparing the local hostname to one in the connection table. However, that limits it to one per host, and gets messy if you are actually going through NAT and thus may have multiple PCs with the same hostname (and there are other network topologies that allows for duplicate hostnames I think). We should probably just require this to be explicitly configured by an option in the labconfig on the remote host (or maybe BLACS config/remote broker config) that says which device name they correspond to since those are unique.</p>\n<p>So we have:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"nd\">@labscript_device</span>\n<span class=\"k\">class</span> <span class=\"nc\">RemoteBLACSConnection</span><span class=\"p\">(</span><span class=\"n\">Device</span><span class=\"p\">):</span>\n    <span class=\"n\">delimeter</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;|&#39;</span>\n\n    <span class=\"nd\">@set_passed_properties</span><span class=\"p\">(</span>\n        <span class=\"n\">property_names</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">external_address</span><span class=\"p\">):</span>\n        <span class=\"n\">Device</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">)</span>\n        <span class=\"c1\"># this is the address:port the parent BLACS will connect on</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BLACS_connection</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">external_address</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot; This modifies the connection string so that a parent BLACS knows not to instantiate it directly&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;</span><span class=\"si\">%s%s%s</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">delimeter</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@labscript_device</span>\n<span class=\"k\">class</span> <span class=\"nc\">RemoteWorkerBroker</span><span class=\"p\">(</span><span class=\"n\">RemoteBLACSConnection</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"nd\">@labscript_device</span>\n<span class=\"k\">class</span> <span class=\"nc\">SecondaryControlSystem</span><span class=\"p\">(</span><span class=\"n\">RemoteBLACSConnection</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-09-11T00:02:46.989730+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-09-11T00:03:02.255578+00:00", "type": "issue_comment", "id": 39760829}