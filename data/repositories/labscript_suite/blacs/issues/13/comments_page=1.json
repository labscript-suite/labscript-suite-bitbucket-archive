{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/13/comments/36114119.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/13#comment-36114119"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/13.json"}}, "type": "issue", "id": 13, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Launch BLACS as a secondary control system"}, "content": {"raw": "I like the syntax.\n\nI was thinking of having some kind of \"labscript suite daemon\" that would be running all the time on all computers that need it, listening for instructions and capable of launching programs on demand. As a first port of call, it could be used to implement [labscript issue #28](#!/labscript_suite/labscript/issues/28/remote-launching-of-all-blacs-devices), where it would just launch the worker subprocesses and forward the zmq port numbers back to BLACS (which would then communicate with the workers directly). If we want the actual GUIs of the tabs to be on another computer as well,  which I think is basically the idea you're getting at with \"secondary control systems\", then we need to sharply define the interface between BLACS and its tabs, and make that go over a network as well. The secondary system could read the connection table yes, or we could make it that primary BLACS sends it all the information it needs. Either would be fine. I think it should probably be fairly tightly under BLACS's control - when BLACS restarts it will need to as well. So I think it's more like just another subprocess, but one running on a different computer.\n\nHowever if both features are to be implemented - the GUIs on different computers *or* the worker processes on different comptuers, we need a syntax that lets you specify them both. Like, primary BLACS is on computer A, but we want the GUI for some devices to be on computer B, but then the actual hardware is on computer C.", "markup": "markdown", "html": "<p>I like the syntax.</p>\n<p>I was thinking of having some kind of \"labscript suite daemon\" that would be running all the time on all computers that need it, listening for instructions and capable of launching programs on demand. As a first port of call, it could be used to implement <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/issues/28/remote-launching-of-all-blacs-devices\" rel=\"nofollow\">labscript issue #28</a>, where it would just launch the worker subprocesses and forward the zmq port numbers back to BLACS (which would then communicate with the workers directly). If we want the actual GUIs of the tabs to be on another computer as well,  which I think is basically the idea you're getting at with \"secondary control systems\", then we need to sharply define the interface between BLACS and its tabs, and make that go over a network as well. The secondary system could read the connection table yes, or we could make it that primary BLACS sends it all the information it needs. Either would be fine. I think it should probably be fairly tightly under BLACS's control - when BLACS restarts it will need to as well. So I think it's more like just another subprocess, but one running on a different computer.</p>\n<p>However if both features are to be implemented - the GUIs on different computers <em>or</em> the worker processes on different comptuers, we need a syntax that lets you specify them both. Like, primary BLACS is on computer A, but we want the GUI for some devices to be on computer B, but then the actual hardware is on computer C.</p>", "type": "rendered"}, "created_on": "2017-04-21T04:43:46.493910+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 36114119}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/13/comments/39685362.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/13#comment-39685362"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/13.json"}}, "type": "issue", "id": 13, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Launch BLACS as a secondary control system"}, "content": {"raw": "Suggestion for integrating with remote worker processes. Since the proposed syntax allows the existing `SecondaryControlSystem` calls to be chained, we can just create another class\n\n\n```\n#!python\n\n@labscript_device\nclass SecondaryControlSystem(Device):\n    delimeter = '|'\n\n    @set_passed_properties(\n        property_names = {\"connection_table_properties\": [\"internal_hostname\"]}\n    )\n    def __init__(self, name, internal_hostname, external_address):\n        Device.__init__(self, name, None, None)\n        self.BLACS_connection = str(external_address)\n\n    def __call__(self, port):\n        return '%s%s%s'%(self.name, self.delimeter, port)\n\n@labscript_device\nclass RemoteWorkerBroker(Device):\n    delimeter = '|'\n\n    @set_passed_properties(\n        property_names = {\"connection_table_properties\": [\"internal_hostname\"]}\n    )\n    def __init__(self, name, internal_hostname, external_address):\n        Device.__init__(self, name, None, None)\n        self.BLACS_connection = str(external_address)\n\n    def __call__(self, port):\n        return '%s%s%s'%(self.name, self.delimeter, port)\n```\n\nNote: It should be pointed out (because I had to go back over my previous work on this to figure it out) that `local_hostname` (in the original post) should match what is returned by `socket.gethostname()` on the remote PC (whether that PC be running the secondary control system or the remote worker broker). I've renamed it `internal_hostname` for clarity. `external_address` is how the controlling device (whether that be a primary or secondary BLACS instance) communicates with the remote system (and should probably specify both a hostname and port). The port the secondary BLACS and remote workers launch on should probably be defined in the labconfig file, and don't have to match the port specified in `internal_hostname` in order to support communication through a NAT. I've also changed where this is stored (into the connection table properties) to avoid creating unnecessary device groups.\n\n`internal_hostname` is used solely for the secondary BLACS or remote worker to determine the labscript device name that corresponds to it, so that it can identify which devices it is controlling via `BLACS_connection` column in the connection table.\n\nFinally, I advocate for this syntax primarily because it means the `BLACS_connection` string contains everything you need to know about the chain of communication (and does not rely on looking at various arguments in the connection table properties). It also allows you to (theoretically) create chains longer than primary and secondary or primary and worker (you could have primary -> secondary -> secondary -> secondary -> worker) and provides a unified syntax for the features in this issue and [labscript issue #28](#!/labscript_suite/labscript/issues/28/remote-launching-of-all-blacs-devices)", "markup": "markdown", "html": "<p>Suggestion for integrating with remote worker processes. Since the proposed syntax allows the existing <code>SecondaryControlSystem</code> calls to be chained, we can just create another class</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"nd\">@labscript_device</span>\n<span class=\"k\">class</span> <span class=\"nc\">SecondaryControlSystem</span><span class=\"p\">(</span><span class=\"n\">Device</span><span class=\"p\">):</span>\n    <span class=\"n\">delimeter</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;|&#39;</span>\n\n    <span class=\"nd\">@set_passed_properties</span><span class=\"p\">(</span>\n        <span class=\"n\">property_names</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;connection_table_properties&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;internal_hostname&quot;</span><span class=\"p\">]}</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">internal_hostname</span><span class=\"p\">,</span> <span class=\"n\">external_address</span><span class=\"p\">):</span>\n        <span class=\"n\">Device</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BLACS_connection</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">external_address</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;</span><span class=\"si\">%s%s%s</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">delimeter</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@labscript_device</span>\n<span class=\"k\">class</span> <span class=\"nc\">RemoteWorkerBroker</span><span class=\"p\">(</span><span class=\"n\">Device</span><span class=\"p\">):</span>\n    <span class=\"n\">delimeter</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;|&#39;</span>\n\n    <span class=\"nd\">@set_passed_properties</span><span class=\"p\">(</span>\n        <span class=\"n\">property_names</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;connection_table_properties&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;internal_hostname&quot;</span><span class=\"p\">]}</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">internal_hostname</span><span class=\"p\">,</span> <span class=\"n\">external_address</span><span class=\"p\">):</span>\n        <span class=\"n\">Device</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BLACS_connection</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">external_address</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;</span><span class=\"si\">%s%s%s</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">delimeter</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Note: It should be pointed out (because I had to go back over my previous work on this to figure it out) that <code>local_hostname</code> (in the original post) should match what is returned by <code>socket.gethostname()</code> on the remote PC (whether that PC be running the secondary control system or the remote worker broker). I've renamed it <code>internal_hostname</code> for clarity. <code>external_address</code> is how the controlling device (whether that be a primary or secondary BLACS instance) communicates with the remote system (and should probably specify both a hostname and port). The port the secondary BLACS and remote workers launch on should probably be defined in the labconfig file, and don't have to match the port specified in <code>internal_hostname</code> in order to support communication through a NAT. I've also changed where this is stored (into the connection table properties) to avoid creating unnecessary device groups.</p>\n<p><code>internal_hostname</code> is used solely for the secondary BLACS or remote worker to determine the labscript device name that corresponds to it, so that it can identify which devices it is controlling via <code>BLACS_connection</code> column in the connection table.</p>\n<p>Finally, I advocate for this syntax primarily because it means the <code>BLACS_connection</code> string contains everything you need to know about the chain of communication (and does not rely on looking at various arguments in the connection table properties). It also allows you to (theoretically) create chains longer than primary and secondary or primary and worker (you could have primary -&gt; secondary -&gt; secondary -&gt; secondary -&gt; worker) and provides a unified syntax for the features in this issue and <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/issues/28/remote-launching-of-all-blacs-devices\" rel=\"nofollow\">labscript issue #28</a></p>", "type": "rendered"}, "created_on": "2017-09-07T00:49:00.377161+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 39685362}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/13/comments/39698425.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/13#comment-39698425"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/13.json"}}, "type": "issue", "id": 13, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Launch BLACS as a secondary control system"}, "content": {"raw": "Ok so having a managing instance for connections seems fine to me. \n\nI'd make them something different from devices but that just personal preference. \n\nIs there a reason that RemoteWorkerBroker and SecondaryControlSystem don't subclass something like a \"ConnectionManager\"? They seem to be identical to me.\nSubclassing would allow for finding all of them in the connection table with ```isinstance(ConnectionManager)```. But that might just be overthinking it.\n\nThe rest of my questions I solved myself by thinking about them a bit longer.", "markup": "markdown", "html": "<p>Ok so having a managing instance for connections seems fine to me. </p>\n<p>I'd make them something different from devices but that just personal preference. </p>\n<p>Is there a reason that RemoteWorkerBroker and SecondaryControlSystem don't subclass something like a \"ConnectionManager\"? They seem to be identical to me.\nSubclassing would allow for finding all of them in the connection table with <code>isinstance(ConnectionManager)</code>. But that might just be overthinking it.</p>\n<p>The rest of my questions I solved myself by thinking about them a bit longer.</p>", "type": "rendered"}, "created_on": "2017-09-07T12:16:40.459977+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 39698425}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/13/comments/39760829.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/13#comment-39760829"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/13.json"}}, "type": "issue", "id": 13, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Launch BLACS as a secondary control system"}, "content": {"raw": "The reason they are devices is because that's currently the only way to get them in the connection table. I guess that might change down the line (because you're right, these are not devices).\n\nYes, they should probably inherit from something as they're the same (they weren't initially but I guess I made them converge!). I'm not sure if they'll actually be instances though when you'd want to do that check, but we may as well simplify the code a bit.\n\nI'm thinking of ditching the \"internal address\" kwarg as well. I was going to use that so that secondary control systems/remote brokers could dynmically determine which line in the connection table they were by comparing the local hostname to one in the connection table. However, that limits it to one per host, and gets messy if you are actually going through NAT and thus may have multiple PCs with the same hostname (and there are other network topologies that allows for duplicate hostnames I think). We should probably just require this to be explicitly configured by an option in the labconfig on the remote host (or maybe BLACS config/remote broker config) that says which device name they correspond to since those are unique.\n\nSo we have:\n\n```\n#!python\n\n@labscript_device\nclass RemoteBLACSConnection(Device):\n    delimeter = '|'\n\n    @set_passed_properties(\n        property_names = {}\n    )\n    def __init__(self, name, external_address):\n        Device.__init__(self, name, None, None)\n        # this is the address:port the parent BLACS will connect on\n        self.BLACS_connection = str(external_address)\n\n    def __call__(self, port):\n        \"\"\" This modifies the connection string so that a parent BLACS knows not to instantiate it directly\"\"\"\n        return '%s%s%s'%(self.name, self.delimeter, port)\n\n@labscript_device\nclass RemoteWorkerBroker(RemoteBLACSConnection):\n    pass\n\n@labscript_device\nclass SecondaryControlSystem(RemoteBLACSConnection):\n    pass\n```", "markup": "markdown", "html": "<p>The reason they are devices is because that's currently the only way to get them in the connection table. I guess that might change down the line (because you're right, these are not devices).</p>\n<p>Yes, they should probably inherit from something as they're the same (they weren't initially but I guess I made them converge!). I'm not sure if they'll actually be instances though when you'd want to do that check, but we may as well simplify the code a bit.</p>\n<p>I'm thinking of ditching the \"internal address\" kwarg as well. I was going to use that so that secondary control systems/remote brokers could dynmically determine which line in the connection table they were by comparing the local hostname to one in the connection table. However, that limits it to one per host, and gets messy if you are actually going through NAT and thus may have multiple PCs with the same hostname (and there are other network topologies that allows for duplicate hostnames I think). We should probably just require this to be explicitly configured by an option in the labconfig on the remote host (or maybe BLACS config/remote broker config) that says which device name they correspond to since those are unique.</p>\n<p>So we have:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"nd\">@labscript_device</span>\n<span class=\"k\">class</span> <span class=\"nc\">RemoteBLACSConnection</span><span class=\"p\">(</span><span class=\"n\">Device</span><span class=\"p\">):</span>\n    <span class=\"n\">delimeter</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;|&#39;</span>\n\n    <span class=\"nd\">@set_passed_properties</span><span class=\"p\">(</span>\n        <span class=\"n\">property_names</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">external_address</span><span class=\"p\">):</span>\n        <span class=\"n\">Device</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">)</span>\n        <span class=\"c1\"># this is the address:port the parent BLACS will connect on</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BLACS_connection</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">external_address</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot; This modifies the connection string so that a parent BLACS knows not to instantiate it directly&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;</span><span class=\"si\">%s%s%s</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">delimeter</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@labscript_device</span>\n<span class=\"k\">class</span> <span class=\"nc\">RemoteWorkerBroker</span><span class=\"p\">(</span><span class=\"n\">RemoteBLACSConnection</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"nd\">@labscript_device</span>\n<span class=\"k\">class</span> <span class=\"nc\">SecondaryControlSystem</span><span class=\"p\">(</span><span class=\"n\">RemoteBLACSConnection</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-09-11T00:02:46.989730+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-09-11T00:03:02.255578+00:00", "type": "issue_comment", "id": 39760829}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/13/comments/39765922.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/13#comment-39765922"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/13.json"}}, "type": "issue", "id": 13, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Launch BLACS as a secondary control system"}, "content": {"raw": "Yeah the instances thing was just a thought but most probably we will only check the name strings anyway.\n\nDitching internal address is fine with me I saw no real use in that anyway.\n\nWhere do we store the network address and port of the remote system, that devices are actually attached to? I'd opt for this being a connection table property of RemoteBLACSConnection. This is because I don't think RemoteWorkerBroker needs a tab in BLACS. We are currently using the remote worker feature in our lab already(loads of PCI cards and just 5 Slots in the main machine) and everything looks and works just like the devices are local. I think this is a good abstraction that I would like to keep.", "markup": "markdown", "html": "<p>Yeah the instances thing was just a thought but most probably we will only check the name strings anyway.</p>\n<p>Ditching internal address is fine with me I saw no real use in that anyway.</p>\n<p>Where do we store the network address and port of the remote system, that devices are actually attached to? I'd opt for this being a connection table property of RemoteBLACSConnection. This is because I don't think RemoteWorkerBroker needs a tab in BLACS. We are currently using the remote worker feature in our lab already(loads of PCI cards and just 5 Slots in the main machine) and everything looks and works just like the devices are local. I think this is a good abstraction that I would like to keep.</p>", "type": "rendered"}, "created_on": "2017-09-11T07:32:49.789357+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-09-11T19:13:30.811117+00:00", "type": "issue_comment", "id": 39765922}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/13/comments/40226228.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/13#comment-40226228"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/13.json"}}, "type": "issue", "id": 13, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Launch BLACS as a secondary control system"}, "content": {"raw": "The network address and port for the remote system is what `external_address` is and would be stored in the BLACS_connection column of the connection table row for the `RemoteWorkerBroker` or `SecondaryControlSystem` device (so, `RemoteBLACSConnection` should not be used directly and should never appear in the class column of the connection table). \n\nI agree that `RemoteWorkerBroker` should not have a tab (as one already exists for the device) but I think that `SecondaryControlSystem` should have a tab so you can see which devices are running on the secondary control system (and possibly even restart them remotely)", "markup": "markdown", "html": "<p>The network address and port for the remote system is what <code>external_address</code> is and would be stored in the BLACS_connection column of the connection table row for the <code>RemoteWorkerBroker</code> or <code>SecondaryControlSystem</code> device (so, <code>RemoteBLACSConnection</code> should not be used directly and should never appear in the class column of the connection table). </p>\n<p>I agree that <code>RemoteWorkerBroker</code> should not have a tab (as one already exists for the device) but I think that <code>SecondaryControlSystem</code> should have a tab so you can see which devices are running on the secondary control system (and possibly even restart them remotely)</p>", "type": "rendered"}, "created_on": "2017-10-01T23:13:16.240367+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 40226228}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/13/comments/40229883.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/13#comment-40229883"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/13.json"}}, "type": "issue", "id": 13, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Launch BLACS as a secondary control system"}, "content": {"raw": "Ok sure thanks for the clarification. \nI think we are all set then :)", "markup": "markdown", "html": "<p>Ok sure thanks for the clarification. \nI think we are all set then :)</p>", "type": "rendered"}, "created_on": "2017-10-02T06:23:34.554505+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 40229883}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/13/comments/40251810.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/13#comment-40251810"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/13.json"}}, "type": "issue", "id": 13, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Launch BLACS as a secondary control system"}, "content": {"raw": "TODO list for launching BLACS as a secondary control system\n\n1. Add an additional property to labconfig allowing the secondary BLACS control system name to be specified (to match the device name for the `SecondaryControlSystem` as defined in the labscript connection table)\n1. Modify `connections.py` to only return attached devices (via `ConnectionTable.get_attached_devices()`) based on the `BLACS_connection` property of the connection table matching the current instance of BLACS (aka primary or the name specified in the labconfig file). Ensure that entries with class `SecondaryControlSystem` are also returned (for primary BLACS, this is all secondary control system entries where there is no delimeter in the BLACS connection (which corresponds to external address of the secondary control system), and for secondary BLACS, this is any secondary control system entries where the -2 element (when splitting by delimeter) of the BLACS_connection is equal to the secondary control system name).\n1. Create a tab and worker process for secondary control systems (should live in BLACS repository) and ensure that this class is used when instantiating tabs (it's a special case because it is not in labcript_devices). This worker also needs to help synchronise ZMQ events (e.g. those related to waits)\n1. Wait for plugin enable/disable manager to be created/tested/merged\n1. Expand plugin system so that plugins can report they are managing a particular aspect of BLACS (for example, the queue). Have BLACS specify a limit to the number of plugins that can handle that aspect of BLACS (for queue, this would be 1) and raise an error if more than this number of plugins are active\n1. Move ZMQ server from `__main__.py` to `queue.py`\n1. Merge `queue.py` and `analysis_submission.py` into a plugin\n1. Make a new plugin for handling communication from primary BLACS, that can be enabled in secondary BLACS, and manages the programming of devices (as well as forwarding of ZMQ events...e.g. when waits are done).", "markup": "markdown", "html": "<p>TODO list for launching BLACS as a secondary control system</p>\n<ol>\n<li>Add an additional property to labconfig allowing the secondary BLACS control system name to be specified (to match the device name for the <code>SecondaryControlSystem</code> as defined in the labscript connection table)</li>\n<li>Modify <code>connections.py</code> to only return attached devices (via <code>ConnectionTable.get_attached_devices()</code>) based on the <code>BLACS_connection</code> property of the connection table matching the current instance of BLACS (aka primary or the name specified in the labconfig file). Ensure that entries with class <code>SecondaryControlSystem</code> are also returned (for primary BLACS, this is all secondary control system entries where there is no delimeter in the BLACS connection (which corresponds to external address of the secondary control system), and for secondary BLACS, this is any secondary control system entries where the -2 element (when splitting by delimeter) of the BLACS_connection is equal to the secondary control system name).</li>\n<li>Create a tab and worker process for secondary control systems (should live in BLACS repository) and ensure that this class is used when instantiating tabs (it's a special case because it is not in labcript_devices). This worker also needs to help synchronise ZMQ events (e.g. those related to waits)</li>\n<li>Wait for plugin enable/disable manager to be created/tested/merged</li>\n<li>Expand plugin system so that plugins can report they are managing a particular aspect of BLACS (for example, the queue). Have BLACS specify a limit to the number of plugins that can handle that aspect of BLACS (for queue, this would be 1) and raise an error if more than this number of plugins are active</li>\n<li>Move ZMQ server from <code>__main__.py</code> to <code>queue.py</code></li>\n<li>Merge <code>queue.py</code> and <code>analysis_submission.py</code> into a plugin</li>\n<li>Make a new plugin for handling communication from primary BLACS, that can be enabled in secondary BLACS, and manages the programming of devices (as well as forwarding of ZMQ events...e.g. when waits are done).</li>\n</ol>", "type": "rendered"}, "created_on": "2017-10-03T01:06:42.166127+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 40251810}], "page": 1, "size": 8}