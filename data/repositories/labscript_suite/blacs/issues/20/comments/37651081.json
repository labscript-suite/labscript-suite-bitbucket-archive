{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/20/comments/37651081.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/20#comment-37651081"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Add number of repetitions"}, "content": {"raw": "Ah, I see.\n\nRelatedly, since you have such short shots, you might be interested in [this recent change](#!/labscript_suite/blacs/pull-requests/6/reduce-average-shot-turnaround-time-by/diff), which speeds up the time in-between shots a bit for BLACS.\n\nThere is a feature request at the moment for functionality to ensure reliable repetition rates of shots, as in, making sure that BLACS leaves enough time for programming, but then waits an additional amount of time so that it runs shots at fixed intervals. Part of ensuring reliable rep rates, as you point out is also ensuring that shots from runmanager are ready to go. That's something I hadn't realised.\n\nSo I think I can probably fix this as part of implementing that feature, without adding any more settings the user would have to configure (other than their desired repetition interval). Runmanager could see what the target rep rate is, compare it to how long it is taking it to compile shots and how long those shots are to last, and make sure it accumulates a sufficiently large pipeline of shots (likely only one or two) before starting to submit them to BLACS. If I do this right, then configuring a fixed rep rate would make this happen automatically.\n\nIt would also be more compatible with \"keeping warm\" of experiments In our lab for example. In our lab the experiment is in \"repeat final\" mode, indefinitely repeating the last shot that it had, just to keep the experiment warm and in a stable state. Then, we submit some new shots from runmanager. If the number of repetitions was configured in BLACS rather than in runmananger, BLACS would need some way of distinguishing between that last shot that it was repeating to keep warm (which is to be repeated indefinitely until new shots arrive), and the new shots, which are to be repeated a fixed number of times (but then the final shot repeated indefinitely again to keep warm). So BLACS would have to get a bit more clever there, and adding a \"repeat 5 times\" option would not really be sufficient to have reliable rep rates in the presence of a requirement to keep the experiment warm.\n\nSo, I think the solution might be pipelining from runmanager - unless you're saying that shots actually take longer to compile than they take to run? Because in that case no length of pipelined shots will be long enough. In this case, I think probably runmnaager should grow an option to generate repeated shots by copying files rather than running the re-compilation again - which would just be a performance optimisation because compilation is being slow. In either case I think it's useful for the repeated shots to be generated by runmanager rather than BLACS, but I understand the need to make shot compilation faster!\n\nIncidentally, do you know what aspect of compilation is slow? I would be interested in making it faster if it is being a bottleneck.", "markup": "markdown", "html": "<p>Ah, I see.</p>\n<p>Relatedly, since you have such short shots, you might be interested in <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/pull-requests/6/reduce-average-shot-turnaround-time-by/diff\" rel=\"nofollow\">this recent change</a>, which speeds up the time in-between shots a bit for BLACS.</p>\n<p>There is a feature request at the moment for functionality to ensure reliable repetition rates of shots, as in, making sure that BLACS leaves enough time for programming, but then waits an additional amount of time so that it runs shots at fixed intervals. Part of ensuring reliable rep rates, as you point out is also ensuring that shots from runmanager are ready to go. That's something I hadn't realised.</p>\n<p>So I think I can probably fix this as part of implementing that feature, without adding any more settings the user would have to configure (other than their desired repetition interval). Runmanager could see what the target rep rate is, compare it to how long it is taking it to compile shots and how long those shots are to last, and make sure it accumulates a sufficiently large pipeline of shots (likely only one or two) before starting to submit them to BLACS. If I do this right, then configuring a fixed rep rate would make this happen automatically.</p>\n<p>It would also be more compatible with \"keeping warm\" of experiments In our lab for example. In our lab the experiment is in \"repeat final\" mode, indefinitely repeating the last shot that it had, just to keep the experiment warm and in a stable state. Then, we submit some new shots from runmanager. If the number of repetitions was configured in BLACS rather than in runmananger, BLACS would need some way of distinguishing between that last shot that it was repeating to keep warm (which is to be repeated indefinitely until new shots arrive), and the new shots, which are to be repeated a fixed number of times (but then the final shot repeated indefinitely again to keep warm). So BLACS would have to get a bit more clever there, and adding a \"repeat 5 times\" option would not really be sufficient to have reliable rep rates in the presence of a requirement to keep the experiment warm.</p>\n<p>So, I think the solution might be pipelining from runmanager - unless you're saying that shots actually take longer to compile than they take to run? Because in that case no length of pipelined shots will be long enough. In this case, I think probably runmnaager should grow an option to generate repeated shots by copying files rather than running the re-compilation again - which would just be a performance optimisation because compilation is being slow. In either case I think it's useful for the repeated shots to be generated by runmanager rather than BLACS, but I understand the need to make shot compilation faster!</p>\n<p>Incidentally, do you know what aspect of compilation is slow? I would be interested in making it faster if it is being a bottleneck.</p>", "type": "rendered"}, "created_on": "2017-06-16T17:30:35.615906+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-16T17:30:56.264862+00:00", "type": "issue_comment", "id": 37651081}