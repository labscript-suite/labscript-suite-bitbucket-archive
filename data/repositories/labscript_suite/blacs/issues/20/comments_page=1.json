{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/20/comments/37650367.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/20#comment-37650367"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Add number of repetitions"}, "content": {"raw": "Another way to do this, that might be a better workflow I think, is to define some globals in runmananger:\n\n\n```\n#!python\n\nnreps = 5\nrepno = range(nreps)\n```\n\nwith `repno` having the `outer` expansion setting. This way runmanager will create the desired number of repetitions up-front, rather than them being created by BLACS later.\n\nI suspect this probably fits more with the idea of collecting data for statistics. BLACS's repeat mode is more often used in my experience to see how things are changing over time, say, whilst an adjustment is made to optical alignment or something like that, rather than for collecting a specific amount of data for statistical purposes. If you're actually planning to do a fixed number of repetitions per shot, then that seems to fit more logically to me in the \"creating shots\" part of the experiment process than in the \"executing shots\" part. It also means you can use runmanager's \"shuffle\" feature to randomise the shots, whereas otherwise BLACS repetitions of a list of shots will have the same order every time the shots are executed, leading to possible systematic errors in the statistics due to something that changes over time rather than with the input variables.\n\nSo I think I'm inclined to disagree with adding this functionality to BLACS unless there is some other useful use-case.", "markup": "markdown", "html": "<p>Another way to do this, that might be a better workflow I think, is to define some globals in runmananger:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">nreps</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n<span class=\"n\">repno</span> <span class=\"o\">=</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">nreps</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>with <code>repno</code> having the <code>outer</code> expansion setting. This way runmanager will create the desired number of repetitions up-front, rather than them being created by BLACS later.</p>\n<p>I suspect this probably fits more with the idea of collecting data for statistics. BLACS's repeat mode is more often used in my experience to see how things are changing over time, say, whilst an adjustment is made to optical alignment or something like that, rather than for collecting a specific amount of data for statistical purposes. If you're actually planning to do a fixed number of repetitions per shot, then that seems to fit more logically to me in the \"creating shots\" part of the experiment process than in the \"executing shots\" part. It also means you can use runmanager's \"shuffle\" feature to randomise the shots, whereas otherwise BLACS repetitions of a list of shots will have the same order every time the shots are executed, leading to possible systematic errors in the statistics due to something that changes over time rather than with the input variables.</p>\n<p>So I think I'm inclined to disagree with adding this functionality to BLACS unless there is some other useful use-case.</p>", "type": "rendered"}, "created_on": "2017-06-16T16:44:19.911296+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-16T16:45:21.471914+00:00", "type": "issue_comment", "id": 37650367}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/20/comments/37650701.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/20#comment-37650701"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Add number of repetitions"}, "content": {"raw": "I see your point and yes a global would work, but that would slow things down for very short experiments, where the shot time is smaller than the runmanager compilation time.\nOur experiments usually take between 1 and 2 seconds and we commonly run into runmanager being slower than blacs.\nTo speed things up we commonly use the end of our shot to prepare the MOT for the next shot (to make use of blacs programming time).\nIf however blacs finishes one shot before the next has finished compiling this time begins to vary and the start conditions of the next experiment might be affected. \nSo I still think this feature would be a improvement.", "markup": "markdown", "html": "<p>I see your point and yes a global would work, but that would slow things down for very short experiments, where the shot time is smaller than the runmanager compilation time.\nOur experiments usually take between 1 and 2 seconds and we commonly run into runmanager being slower than blacs.\nTo speed things up we commonly use the end of our shot to prepare the MOT for the next shot (to make use of blacs programming time).\nIf however blacs finishes one shot before the next has finished compiling this time begins to vary and the start conditions of the next experiment might be affected. \nSo I still think this feature would be a improvement.</p>", "type": "rendered"}, "created_on": "2017-06-16T17:02:36.244277+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 37650701}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/20/comments/37651081.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/20#comment-37651081"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Add number of repetitions"}, "content": {"raw": "Ah, I see.\n\nRelatedly, since you have such short shots, you might be interested in [this recent change](#!/labscript_suite/blacs/pull-requests/6/reduce-average-shot-turnaround-time-by/diff), which speeds up the time in-between shots a bit for BLACS.\n\nThere is a feature request at the moment for functionality to ensure reliable repetition rates of shots, as in, making sure that BLACS leaves enough time for programming, but then waits an additional amount of time so that it runs shots at fixed intervals. Part of ensuring reliable rep rates, as you point out is also ensuring that shots from runmanager are ready to go. That's something I hadn't realised.\n\nSo I think I can probably fix this as part of implementing that feature, without adding any more settings the user would have to configure (other than their desired repetition interval). Runmanager could see what the target rep rate is, compare it to how long it is taking it to compile shots and how long those shots are to last, and make sure it accumulates a sufficiently large pipeline of shots (likely only one or two) before starting to submit them to BLACS. If I do this right, then configuring a fixed rep rate would make this happen automatically.\n\nIt would also be more compatible with \"keeping warm\" of experiments In our lab for example. In our lab the experiment is in \"repeat final\" mode, indefinitely repeating the last shot that it had, just to keep the experiment warm and in a stable state. Then, we submit some new shots from runmanager. If the number of repetitions was configured in BLACS rather than in runmananger, BLACS would need some way of distinguishing between that last shot that it was repeating to keep warm (which is to be repeated indefinitely until new shots arrive), and the new shots, which are to be repeated a fixed number of times (but then the final shot repeated indefinitely again to keep warm). So BLACS would have to get a bit more clever there, and adding a \"repeat 5 times\" option would not really be sufficient to have reliable rep rates in the presence of a requirement to keep the experiment warm.\n\nSo, I think the solution might be pipelining from runmanager - unless you're saying that shots actually take longer to compile than they take to run? Because in that case no length of pipelined shots will be long enough. In this case, I think probably runmnaager should grow an option to generate repeated shots by copying files rather than running the re-compilation again - which would just be a performance optimisation because compilation is being slow. In either case I think it's useful for the repeated shots to be generated by runmanager rather than BLACS, but I understand the need to make shot compilation faster!\n\nIncidentally, do you know what aspect of compilation is slow? I would be interested in making it faster if it is being a bottleneck.", "markup": "markdown", "html": "<p>Ah, I see.</p>\n<p>Relatedly, since you have such short shots, you might be interested in <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/pull-requests/6/reduce-average-shot-turnaround-time-by/diff\" rel=\"nofollow\">this recent change</a>, which speeds up the time in-between shots a bit for BLACS.</p>\n<p>There is a feature request at the moment for functionality to ensure reliable repetition rates of shots, as in, making sure that BLACS leaves enough time for programming, but then waits an additional amount of time so that it runs shots at fixed intervals. Part of ensuring reliable rep rates, as you point out is also ensuring that shots from runmanager are ready to go. That's something I hadn't realised.</p>\n<p>So I think I can probably fix this as part of implementing that feature, without adding any more settings the user would have to configure (other than their desired repetition interval). Runmanager could see what the target rep rate is, compare it to how long it is taking it to compile shots and how long those shots are to last, and make sure it accumulates a sufficiently large pipeline of shots (likely only one or two) before starting to submit them to BLACS. If I do this right, then configuring a fixed rep rate would make this happen automatically.</p>\n<p>It would also be more compatible with \"keeping warm\" of experiments In our lab for example. In our lab the experiment is in \"repeat final\" mode, indefinitely repeating the last shot that it had, just to keep the experiment warm and in a stable state. Then, we submit some new shots from runmanager. If the number of repetitions was configured in BLACS rather than in runmananger, BLACS would need some way of distinguishing between that last shot that it was repeating to keep warm (which is to be repeated indefinitely until new shots arrive), and the new shots, which are to be repeated a fixed number of times (but then the final shot repeated indefinitely again to keep warm). So BLACS would have to get a bit more clever there, and adding a \"repeat 5 times\" option would not really be sufficient to have reliable rep rates in the presence of a requirement to keep the experiment warm.</p>\n<p>So, I think the solution might be pipelining from runmanager - unless you're saying that shots actually take longer to compile than they take to run? Because in that case no length of pipelined shots will be long enough. In this case, I think probably runmnaager should grow an option to generate repeated shots by copying files rather than running the re-compilation again - which would just be a performance optimisation because compilation is being slow. In either case I think it's useful for the repeated shots to be generated by runmanager rather than BLACS, but I understand the need to make shot compilation faster!</p>\n<p>Incidentally, do you know what aspect of compilation is slow? I would be interested in making it faster if it is being a bottleneck.</p>", "type": "rendered"}, "created_on": "2017-06-16T17:30:35.615906+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-16T17:30:56.264862+00:00", "type": "issue_comment", "id": 37651081}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/20/comments/37655727.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/20#comment-37655727"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Add number of repetitions"}, "content": {"raw": "I also agree that this should not be in BLACS (although once we get the plugin architecture fleshed out some more, you're welcome to write this yourself as an optional extra for people).\n\nI believe the runmanager option will be suitable for you once we fix [labscript issue 38](#!/labscript_suite/labscript/issues/38/saving-of-hg-info-slows-down-compilation). Our complex BEC experiment compiles in 0.65 seconds when I implement a temporary fix. Note that the latest  (untagged) version of labscript introduces even more delay to compilation, so I would avoid that too!\n\nCan I ask you to check your compilation time with [labscript changeset f5dadbb93aef](#!/labscript_suite/labscript/commits/f5dadbb93aef83ca8c7aed7265fa756e1ad27663) (which I think should have fast compilation times) and let me know if implementing the repeats with runmanager is fast enough for you?", "markup": "markdown", "html": "<p>I also agree that this should not be in BLACS (although once we get the plugin architecture fleshed out some more, you're welcome to write this yourself as an optional extra for people).</p>\n<p>I believe the runmanager option will be suitable for you once we fix <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/issues/38/saving-of-hg-info-slows-down-compilation\" rel=\"nofollow\">labscript issue 38</a>. Our complex BEC experiment compiles in 0.65 seconds when I implement a temporary fix. Note that the latest  (untagged) version of labscript introduces even more delay to compilation, so I would avoid that too!</p>\n<p>Can I ask you to check your compilation time with <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/commits/f5dadbb93aef83ca8c7aed7265fa756e1ad27663\" rel=\"nofollow\">labscript changeset f5dadbb93aef</a> (which I think should have fast compilation times) and let me know if implementing the repeats with runmanager is fast enough for you?</p>", "type": "rendered"}, "created_on": "2017-06-17T01:25:29.991574+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-06-17T01:26:02.276381+00:00", "type": "issue_comment", "id": 37655727}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/20/comments/37657164.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/20#comment-37657164"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Add number of repetitions"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2017-06-17T07:24:45.661986+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 37657164}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/20/comments/37657379.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/20#comment-37657379"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Add number of repetitions"}, "content": {"raw": "We already implemented a change that is almost identical to that blacs speedup change you mentioned a while back.\n\nPipelining sounds great in the modified way you described.\n\nYour reasoning behind not making this a feature of  blacs seams quite reasonable.\nI will make a feature request for runmanager and resolve this one.  Since I still think it should be a time improvement to just copy files rather then recompiling them.\n\nAnd yes our compilation times are slower than our run times this could be due to the modifications made in our compile process, like the ramp collision check and shutter delays check you just backed out of.\nWe had these implemented before I came to our group a few weeks ago so I don't know if compilation was faster before. \nWill definitely check if things are improved without them.", "markup": "markdown", "html": "<p>We already implemented a change that is almost identical to that blacs speedup change you mentioned a while back.</p>\n<p>Pipelining sounds great in the modified way you described.</p>\n<p>Your reasoning behind not making this a feature of  blacs seams quite reasonable.\nI will make a feature request for runmanager and resolve this one.  Since I still think it should be a time improvement to just copy files rather then recompiling them.</p>\n<p>And yes our compilation times are slower than our run times this could be due to the modifications made in our compile process, like the ramp collision check and shutter delays check you just backed out of.\nWe had these implemented before I came to our group a few weeks ago so I don't know if compilation was faster before. \nWill definitely check if things are improved without them.</p>", "type": "rendered"}, "created_on": "2017-06-17T07:53:41.159956+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 37657379}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/20/comments/37657437.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/20#comment-37657437"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Add number of repetitions"}, "content": {"raw": "Will move feature request to runmanager", "markup": "markdown", "html": "<p>Will move feature request to runmanager</p>", "type": "rendered"}, "created_on": "2017-06-17T08:03:10.028110+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 37657437}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/20/comments/37658042.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/20#comment-37658042"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Add number of repetitions"}, "content": {"raw": "Removing the ramp and shutter checks didn't have much of a effect. \nRemoving mercurial cut my compile time in half!\nThanks for the tip @philipstarkey I guess compile times are fast enough without mercurial.", "markup": "markdown", "html": "<p>Removing the ramp and shutter checks didn't have much of a effect. \nRemoving mercurial cut my compile time in half!\nThanks for the tip @philipstarkey I guess compile times are fast enough without mercurial.</p>", "type": "rendered"}, "created_on": "2017-06-17T09:21:14.818213+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 37658042}], "page": 1, "size": 8}