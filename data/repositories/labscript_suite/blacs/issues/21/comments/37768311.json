{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21/comments/37768311.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/21#comment-37768311"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21.json"}}, "type": "issue", "id": 21, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "inverted Digital outputs"}, "content": {"raw": "Somwhat off topic, but I've been thinking about how to make labscript's internal timing model more sensible, and unifying digital and analog outputs is something I thought to do. It makes things simpler if the labscript core code can treat them the same, which would mean you would get digital pulse trains for free, and inversion of a digital output would just be another unit conversion (one with added syntactic sugar so you could turn it on and off with a keyword argument, but internally just another unit conversion).\n\nI suspect all that would be needed to support pulse trains now though is to move the `AnalogQuantity.customramp` method to the `Output` class, which both `AnalogQuantity` and `DigitalQuantity` subclass. The you could have `DigitalQuantity` wrap the method under the name `pulse_train` - or you could rename it in the `Output` class to something that makes sense for both digital and analog outputs - having `AnalogQuantity.customramp` wrap it for backward compatibility.\n\nBack on topic, I was agreeing with phil that the interface should show what the hardware is doing, but it's a good point that it already not doing that with analog outputs, since they support unit conversions. Perhaps our digital output widgets need to support \"unit conversions\" too - with inversion being essentially the only possible conversion even though you could have identity conversion just for the sake of having different names like \"shutter open\" vs \"shutter closed\" even for a non-inverted widget. You would definitely want a very obvious visible difference to the widget in BLACS for when it is in \"hardware units\" vs something else. Like, pink instead of green level of obvious, good taste in colour schemes notwithstanding.\n\nPerhaps if the \"virtual devices\" idea were implemented, other tabs could go back to not supporting unit conversions, if you wanted them to be pure to the state of the hardware. But I suspect that would be annoying in practice, and that nobody would actually want to get rid of them.", "markup": "markdown", "html": "<p>Somwhat off topic, but I've been thinking about how to make labscript's internal timing model more sensible, and unifying digital and analog outputs is something I thought to do. It makes things simpler if the labscript core code can treat them the same, which would mean you would get digital pulse trains for free, and inversion of a digital output would just be another unit conversion (one with added syntactic sugar so you could turn it on and off with a keyword argument, but internally just another unit conversion).</p>\n<p>I suspect all that would be needed to support pulse trains now though is to move the <code>AnalogQuantity.customramp</code> method to the <code>Output</code> class, which both <code>AnalogQuantity</code> and <code>DigitalQuantity</code> subclass. The you could have <code>DigitalQuantity</code> wrap the method under the name <code>pulse_train</code> - or you could rename it in the <code>Output</code> class to something that makes sense for both digital and analog outputs - having <code>AnalogQuantity.customramp</code> wrap it for backward compatibility.</p>\n<p>Back on topic, I was agreeing with phil that the interface should show what the hardware is doing, but it's a good point that it already not doing that with analog outputs, since they support unit conversions. Perhaps our digital output widgets need to support \"unit conversions\" too - with inversion being essentially the only possible conversion even though you could have identity conversion just for the sake of having different names like \"shutter open\" vs \"shutter closed\" even for a non-inverted widget. You would definitely want a very obvious visible difference to the widget in BLACS for when it is in \"hardware units\" vs something else. Like, pink instead of green level of obvious, good taste in colour schemes notwithstanding.</p>\n<p>Perhaps if the \"virtual devices\" idea were implemented, other tabs could go back to not supporting unit conversions, if you wanted them to be pure to the state of the hardware. But I suspect that would be annoying in practice, and that nobody would actually want to get rid of them.</p>", "type": "rendered"}, "created_on": "2017-06-22T10:42:58.578979+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-22T10:44:10.913596+00:00", "type": "issue_comment", "id": 37768311}