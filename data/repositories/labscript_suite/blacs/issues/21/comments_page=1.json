{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21/comments/37762156.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/21#comment-37762156"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21.json"}}, "type": "issue", "id": 21, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "inverted Digital outputs"}, "content": {"raw": "I'm personally in favour of keeping the device tabs actually matching what the output of the device does, rather than something else that may not be immediately obvious if you are trying to directly debug the physical output, rather than looking at the state of a device that may be attached at the end of the cable. In short, the current device tabs are supposed to directly represent the hardware (a good manifestation of this is the fact that channels show up in BLACS even if they aren't in your connection table).\n\nHowever, I do understand the usefulness of having an inverted digital controls for shutters. It has been a long term aim to create virtual devices; tabs in BLACS that do not correspond to a specific device but instead draw controls from one or more devices. Implementing this, along with the ability to create a control that represents the labscript subclass (aka a Shutter) I think would be the best approach. It maintains a view of the hardware (device tab) if you need that, but also allows you to create customised  views that represent something else (like all MOT controls and the digital lines are represented as open/close buttons when they are shutters).\n\nThis wouldn't be too hard to implement I think. I already planned for this long ago, so the internal objects that represent each channel actually already support the connection of multiple widgets. We just need an interface for creating virtual device tabs, and a shutter widget that allows for the state to be inverted to that of the internal DigitalOut object in BLACS.", "markup": "markdown", "html": "<p>I'm personally in favour of keeping the device tabs actually matching what the output of the device does, rather than something else that may not be immediately obvious if you are trying to directly debug the physical output, rather than looking at the state of a device that may be attached at the end of the cable. In short, the current device tabs are supposed to directly represent the hardware (a good manifestation of this is the fact that channels show up in BLACS even if they aren't in your connection table).</p>\n<p>However, I do understand the usefulness of having an inverted digital controls for shutters. It has been a long term aim to create virtual devices; tabs in BLACS that do not correspond to a specific device but instead draw controls from one or more devices. Implementing this, along with the ability to create a control that represents the labscript subclass (aka a Shutter) I think would be the best approach. It maintains a view of the hardware (device tab) if you need that, but also allows you to create customised  views that represent something else (like all MOT controls and the digital lines are represented as open/close buttons when they are shutters).</p>\n<p>This wouldn't be too hard to implement I think. I already planned for this long ago, so the internal objects that represent each channel actually already support the connection of multiple widgets. We just need an interface for creating virtual device tabs, and a shutter widget that allows for the state to be inverted to that of the internal DigitalOut object in BLACS.</p>", "type": "rendered"}, "created_on": "2017-06-22T06:52:13.759117+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 37762156}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21/comments/37767514.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/21#comment-37767514"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21.json"}}, "type": "issue", "id": 21, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "inverted Digital outputs"}, "content": {"raw": "I am not sure if this question was to do with the blacs UI or with the scripting of devices. But except for syntax I TOTALL AGREE.  Already analog outs don't display what the hardware is doing, they have scaling and units.  So we should just move this infrastructure over to digital outputs.\n\n In the case of scripting see issue \"32: Eliminate go_high, go_low syntax\" in labscript, I would suggests doing\n\ndo_line.constant(t, 1) or do_line.constant(t, True) for example\n\ninstead.  With this view a Digital output is really  a one-bit analog out, and can have the same scaling and units that an analog devices has, of which inverting is the one that makes the most sense.  \n\nIn this world, gohigh and golow would include the scaling by default so they could have the desired inverted behavior. \n\nAlso DO's should have the ability to do ramps too.  For example to make pulse trains.", "markup": "markdown", "html": "<p>I am not sure if this question was to do with the blacs UI or with the scripting of devices. But except for syntax I TOTALL AGREE.  Already analog outs don't display what the hardware is doing, they have scaling and units.  So we should just move this infrastructure over to digital outputs.</p>\n<p>In the case of scripting see issue \"32: Eliminate go_high, go_low syntax\" in labscript, I would suggests doing</p>\n<p>do_line.constant(t, 1) or do_line.constant(t, True) for example</p>\n<p>instead.  With this view a Digital output is really  a one-bit analog out, and can have the same scaling and units that an analog devices has, of which inverting is the one that makes the most sense.  </p>\n<p>In this world, gohigh and golow would include the scaling by default so they could have the desired inverted behavior. </p>\n<p>Also DO's should have the ability to do ramps too.  For example to make pulse trains.</p>", "type": "rendered"}, "created_on": "2017-06-22T10:15:30.196745+00:00", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}, "updated_on": "2017-06-22T10:23:59.305041+00:00", "type": "issue_comment", "id": 37767514}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21/comments/37768311.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/21#comment-37768311"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21.json"}}, "type": "issue", "id": 21, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "inverted Digital outputs"}, "content": {"raw": "Somwhat off topic, but I've been thinking about how to make labscript's internal timing model more sensible, and unifying digital and analog outputs is something I thought to do. It makes things simpler if the labscript core code can treat them the same, which would mean you would get digital pulse trains for free, and inversion of a digital output would just be another unit conversion (one with added syntactic sugar so you could turn it on and off with a keyword argument, but internally just another unit conversion).\n\nI suspect all that would be needed to support pulse trains now though is to move the `AnalogQuantity.customramp` method to the `Output` class, which both `AnalogQuantity` and `DigitalQuantity` subclass. The you could have `DigitalQuantity` wrap the method under the name `pulse_train` - or you could rename it in the `Output` class to something that makes sense for both digital and analog outputs - having `AnalogQuantity.customramp` wrap it for backward compatibility.\n\nBack on topic, I was agreeing with phil that the interface should show what the hardware is doing, but it's a good point that it already not doing that with analog outputs, since they support unit conversions. Perhaps our digital output widgets need to support \"unit conversions\" too - with inversion being essentially the only possible conversion even though you could have identity conversion just for the sake of having different names like \"shutter open\" vs \"shutter closed\" even for a non-inverted widget. You would definitely want a very obvious visible difference to the widget in BLACS for when it is in \"hardware units\" vs something else. Like, pink instead of green level of obvious, good taste in colour schemes notwithstanding.\n\nPerhaps if the \"virtual devices\" idea were implemented, other tabs could go back to not supporting unit conversions, if you wanted them to be pure to the state of the hardware. But I suspect that would be annoying in practice, and that nobody would actually want to get rid of them.", "markup": "markdown", "html": "<p>Somwhat off topic, but I've been thinking about how to make labscript's internal timing model more sensible, and unifying digital and analog outputs is something I thought to do. It makes things simpler if the labscript core code can treat them the same, which would mean you would get digital pulse trains for free, and inversion of a digital output would just be another unit conversion (one with added syntactic sugar so you could turn it on and off with a keyword argument, but internally just another unit conversion).</p>\n<p>I suspect all that would be needed to support pulse trains now though is to move the <code>AnalogQuantity.customramp</code> method to the <code>Output</code> class, which both <code>AnalogQuantity</code> and <code>DigitalQuantity</code> subclass. The you could have <code>DigitalQuantity</code> wrap the method under the name <code>pulse_train</code> - or you could rename it in the <code>Output</code> class to something that makes sense for both digital and analog outputs - having <code>AnalogQuantity.customramp</code> wrap it for backward compatibility.</p>\n<p>Back on topic, I was agreeing with phil that the interface should show what the hardware is doing, but it's a good point that it already not doing that with analog outputs, since they support unit conversions. Perhaps our digital output widgets need to support \"unit conversions\" too - with inversion being essentially the only possible conversion even though you could have identity conversion just for the sake of having different names like \"shutter open\" vs \"shutter closed\" even for a non-inverted widget. You would definitely want a very obvious visible difference to the widget in BLACS for when it is in \"hardware units\" vs something else. Like, pink instead of green level of obvious, good taste in colour schemes notwithstanding.</p>\n<p>Perhaps if the \"virtual devices\" idea were implemented, other tabs could go back to not supporting unit conversions, if you wanted them to be pure to the state of the hardware. But I suspect that would be annoying in practice, and that nobody would actually want to get rid of them.</p>", "type": "rendered"}, "created_on": "2017-06-22T10:42:58.578979+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-22T10:44:10.913596+00:00", "type": "issue_comment", "id": 37768311}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21/comments/37768365.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/21#comment-37768365"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21.json"}}, "type": "issue", "id": 21, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "inverted Digital outputs"}, "content": {"raw": "Ian: On the labscript side, the inverted digital output can already be achieved with the `Shutter` class via the [`open_state`](#!/labscript_suite/labscript/src/4ba0ef7c8d367ea3d4be0ee29bde9c232dcfa35b/labscript.py?at=default&fileviewer=file-view-default#labscript.py-1522) kwarg. So I believe the query was regarding the BLACS UI. I realise that doesn't solve the issues raised in [labscript issue 37](#!/labscript_suite/labscript/issues/37/eliminate-go_high-go_low-syntax) that you refer to, but at least it does provide some form of abstraction for the inversion. I've though for a while that most of the functionality in `Shutter` (like delays) should be moved into the `DigitalQuantity` class anyway.\n\nFor pulse trains, this is currently possible using the [`do.repeat_pulse_sequence(...)`](#!/labscript_suite/labscript/src/4ba0ef7c8d367ea3d4be0ee29bde9c232dcfa35b/labscript.py?at=default&fileviewer=file-view-default#labscript.py-1423) method, although there are several caveats due to the necessity of handling clock quantisation and the possibility of intersecting instructions/ramps on other channels. I believe @cbillington's plan is to handle this better in labscript v3.0 (or at least the planned changes for v3.0 will make this easier to do better).\n\nEDIT: Looks like @cbillington wrote a response while I wrote mine. So mine does not address anything he's written!\n\nEDIT 2: I think Ian updated his response while I was writing mine as well, so my above response possibly makes even less sense now.", "markup": "markdown", "html": "<p>Ian: On the labscript side, the inverted digital output can already be achieved with the <code>Shutter</code> class via the <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/src/4ba0ef7c8d367ea3d4be0ee29bde9c232dcfa35b/labscript.py?at=default&amp;fileviewer=file-view-default#labscript.py-1522\" rel=\"nofollow\"><code>open_state</code></a> kwarg. So I believe the query was regarding the BLACS UI. I realise that doesn't solve the issues raised in <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/issues/37/eliminate-go_high-go_low-syntax\" rel=\"nofollow\">labscript issue 37</a> that you refer to, but at least it does provide some form of abstraction for the inversion. I've though for a while that most of the functionality in <code>Shutter</code> (like delays) should be moved into the <code>DigitalQuantity</code> class anyway.</p>\n<p>For pulse trains, this is currently possible using the <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/src/4ba0ef7c8d367ea3d4be0ee29bde9c232dcfa35b/labscript.py?at=default&amp;fileviewer=file-view-default#labscript.py-1423\" rel=\"nofollow\"><code>do.repeat_pulse_sequence(...)</code></a> method, although there are several caveats due to the necessity of handling clock quantisation and the possibility of intersecting instructions/ramps on other channels. I believe @cbillington's plan is to handle this better in labscript v3.0 (or at least the planned changes for v3.0 will make this easier to do better).</p>\n<p>EDIT: Looks like @cbillington wrote a response while I wrote mine. So mine does not address anything he's written!</p>\n<p>EDIT 2: I think Ian updated his response while I was writing mine as well, so my above response possibly makes even less sense now.</p>", "type": "rendered"}, "created_on": "2017-06-22T10:44:46.504510+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-06-22T10:46:23.581220+00:00", "type": "issue_comment", "id": 37768365}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21/comments/37768460.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/21#comment-37768460"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21.json"}}, "type": "issue", "id": 21, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "inverted Digital outputs"}, "content": {"raw": "Oh, I didn't realise `repeat_pulse_sequence` was a wrapper around `add_instruction` with a function ramp instruction, I thought it was non-looping. Sweet, so that's already there.", "markup": "markdown", "html": "<p>Oh, I didn't realise <code>repeat_pulse_sequence</code> was a wrapper around <code>add_instruction</code> with a function ramp instruction, I thought it was non-looping. Sweet, so that's already there.</p>", "type": "rendered"}, "created_on": "2017-06-22T10:48:02.739494+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-22T10:48:24.000291+00:00", "type": "issue_comment", "id": 37768460}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21/comments/37768492.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/21#comment-37768492"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21.json"}}, "type": "issue", "id": 21, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "inverted Digital outputs"}, "content": {"raw": "One possibility is that we could make tooltips show what the hardware state actually is. That might be an appropriate compromise (and could apply equally to analog and digital outputs)", "markup": "markdown", "html": "<p>One possibility is that we could make tooltips show what the hardware state actually is. That might be an appropriate compromise (and could apply equally to analog and digital outputs)</p>", "type": "rendered"}, "created_on": "2017-06-22T10:48:49.521036+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 37768492}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21/comments/37768974.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/21#comment-37768974"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21.json"}}, "type": "issue", "id": 21, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "inverted Digital outputs"}, "content": {"raw": "New comment instead of a confusing edit (issue threads don't support nested replies!):\n \nI don't think there are any problems with repeat_pulse_sequence other than those that apply to analog ramps already. It's true that intersecting ramps etc will move the points that the function will be evaluated - which will shift the edges of the pulse train, but that doesn't cause problems  if you have a high enough sample rate. The sample rate should be picked based on how accurate you want the edges to be, not on what the period of your pulses actually are. If you really want a low sample rate though, *and* precise edges, then yes, there's a need for regularly spaced clock ticks that won't be moved by an intersecting ramp, which is related to the \"ramp-splitting\" pull request and not what labscript currently tries to do. (This problem \"exists\" for analog outputs in the sense that, if you have a carefully crafted analog function that makes assumptions about exactly what timepoints it will be evaluated at, you're going to have a bad time)", "markup": "markdown", "html": "<p>New comment instead of a confusing edit (issue threads don't support nested replies!):</p>\n<p>I don't think there are any problems with repeat_pulse_sequence other than those that apply to analog ramps already. It's true that intersecting ramps etc will move the points that the function will be evaluated - which will shift the edges of the pulse train, but that doesn't cause problems  if you have a high enough sample rate. The sample rate should be picked based on how accurate you want the edges to be, not on what the period of your pulses actually are. If you really want a low sample rate though, <em>and</em> precise edges, then yes, there's a need for regularly spaced clock ticks that won't be moved by an intersecting ramp, which is related to the \"ramp-splitting\" pull request and not what labscript currently tries to do. (This problem \"exists\" for analog outputs in the sense that, if you have a carefully crafted analog function that makes assumptions about exactly what timepoints it will be evaluated at, you're going to have a bad time)</p>", "type": "rendered"}, "created_on": "2017-06-22T11:05:53.961763+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-22T11:07:08.703333+00:00", "type": "issue_comment", "id": 37768974}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21/comments/37769050.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/21#comment-37769050"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21.json"}}, "type": "issue", "id": 21, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "inverted Digital outputs"}, "content": {"raw": "+1 to tooltips.", "markup": "markdown", "html": "<p>+1 to tooltips.</p>", "type": "rendered"}, "created_on": "2017-06-22T11:08:33.809169+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 37769050}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21/comments/37773917.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/21#comment-37773917"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21.json"}}, "type": "issue", "id": 21, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "inverted Digital outputs"}, "content": {"raw": "Chris's proposal to move all of the ramps and value setting into an ancestor class that both Digital and Analog output classes makes really good sense to me.  It makes the language more logical and consistent, the current Digital-only function calls could be retained, but they would just call the associated generic function (which would be the prefered syntax going forward?)", "markup": "markdown", "html": "<p>Chris's proposal to move all of the ramps and value setting into an ancestor class that both Digital and Analog output classes makes really good sense to me.  It makes the language more logical and consistent, the current Digital-only function calls could be retained, but they would just call the associated generic function (which would be the prefered syntax going forward?)</p>", "type": "rendered"}, "created_on": "2017-06-22T13:54:26.110680+00:00", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}, "updated_on": null, "type": "issue_comment", "id": 37773917}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21/comments/37781382.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/21#comment-37781382"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21.json"}}, "type": "issue", "id": 21, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "inverted Digital outputs"}, "content": {"raw": "I like the idea of tooltips and a different color for outputs not displaying what the hardware does.\nI also think BLACS should display what the hardware does.\nBut I would argue that inverted shutters are even then currently misrepresented as they are inconsistent with non inverted shutters. At least if you consider the Shutter to be the hardware rather than the output.\n\nUnifying wasn't something I was aiming at but still sounds great and as already mentioned would allow for the inversion via unit conversion.\n\nAs for totally getting rid of go_high() go_low() I'm not a fan of, as I don't want to rewrite all our scripts.\nBut I would be very okay with them in the background just calling do_line.constant(t, 1).", "markup": "markdown", "html": "<p>I like the idea of tooltips and a different color for outputs not displaying what the hardware does.\nI also think BLACS should display what the hardware does.\nBut I would argue that inverted shutters are even then currently misrepresented as they are inconsistent with non inverted shutters. At least if you consider the Shutter to be the hardware rather than the output.</p>\n<p>Unifying wasn't something I was aiming at but still sounds great and as already mentioned would allow for the inversion via unit conversion.</p>\n<p>As for totally getting rid of go_high() go_low() I'm not a fan of, as I don't want to rewrite all our scripts.\nBut I would be very okay with them in the background just calling do_line.constant(t, 1).</p>", "type": "rendered"}, "created_on": "2017-06-22T19:14:17.600740+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-06-22T19:15:43.052087+00:00", "type": "issue_comment", "id": 37781382}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21/comments/37781535.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/21#comment-37781535"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21.json"}}, "type": "issue", "id": 21, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "inverted Digital outputs"}, "content": {"raw": "My suggestion was that digital outs set to use \"units\" other than \"hardware units\" would be a different colour. This would mean that a non-inverted shutter would still have a different colour, if it was set to use \"shutter state\" units rather than \"hardware state\" units - even though it was non inverted and and the same as the hardware state.\n\nI'm also in favour of keeping lots of syntactic sugar around, but making the underlying implementation as clean as possible. Not just for backward compatibility - I think it provides good hints for quickly understanding what oft-read code is doing, and is good for top-level, not-very-nested code that the user is currently writing. Code that is read less often though, and that other code is relying on to behave well, should try to be more \"kosher\".", "markup": "markdown", "html": "<p>My suggestion was that digital outs set to use \"units\" other than \"hardware units\" would be a different colour. This would mean that a non-inverted shutter would still have a different colour, if it was set to use \"shutter state\" units rather than \"hardware state\" units - even though it was non inverted and and the same as the hardware state.</p>\n<p>I'm also in favour of keeping lots of syntactic sugar around, but making the underlying implementation as clean as possible. Not just for backward compatibility - I think it provides good hints for quickly understanding what oft-read code is doing, and is good for top-level, not-very-nested code that the user is currently writing. Code that is read less often though, and that other code is relying on to behave well, should try to be more \"kosher\".</p>", "type": "rendered"}, "created_on": "2017-06-22T19:24:49.042452+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 37781535}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21/comments/38338740.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/21#comment-38338740"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21.json"}}, "type": "issue", "id": 21, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "inverted Digital outputs"}, "content": {"raw": "As this came up in our lab again today.\n\nUntil unification of the output classes or virtual devices are here, I suggest for a quick fix adding inverted to the device properties of the DigitalOutput as this is a minimal change. This would then be added as a kwarg to the constructor of DO. The standart would be for it to be False so no changes occur by accident. If inverted is True DO.set_value() and DO.value() would behave in a inverted fashion. Also I would add a tooltip to the widget that says it's inverted.\n\nEveryone would then be free to add the functionality to their labscript_devices in a away they please or not.\n\nIf this should not be satisfactory I'd also be ok with it and just implement it in our lab and replace it when one of the better solutions comes along.", "markup": "markdown", "html": "<p>As this came up in our lab again today.</p>\n<p>Until unification of the output classes or virtual devices are here, I suggest for a quick fix adding inverted to the device properties of the DigitalOutput as this is a minimal change. This would then be added as a kwarg to the constructor of DO. The standart would be for it to be False so no changes occur by accident. If inverted is True DO.set_value() and DO.value() would behave in a inverted fashion. Also I would add a tooltip to the widget that says it's inverted.</p>\n<p>Everyone would then be free to add the functionality to their labscript_devices in a away they please or not.</p>\n<p>If this should not be satisfactory I'd also be ok with it and just implement it in our lab and replace it when one of the better solutions comes along.</p>", "type": "rendered"}, "created_on": "2017-07-19T19:22:37.246429+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-19T19:27:51.960051+00:00", "type": "issue_comment", "id": 38338740}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21/comments/43979630.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/21#comment-43979630"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/21.json"}}, "type": "issue", "id": 21, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "inverted Digital outputs"}, "content": {"raw": "implemented in 66a107e", "markup": "markdown", "html": "<p>implemented in <a href=\"#!/labscript_suite/blacs/commits/66a107e\" rel=\"nofollow\" class=\"ap-connect-link\">66a107e</a></p>", "type": "rendered"}, "created_on": "2018-03-17T15:39:47.121940+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 43979630}], "page": 1, "size": 13}