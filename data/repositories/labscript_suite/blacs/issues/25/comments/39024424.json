{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/25/comments/39024424.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/25#comment-39024424"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/25.json"}}, "type": "issue", "id": 25, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Error when starting BLACS from console"}, "content": {"raw": "This only happens when you run it from that directory - if you run it from elsewhere with 'python -m blacs' then this problem doesn't occur. Nonetheless I didn't realise that was a problem, and I should fix it. It indicates I was doing something wrong anyway...and this explains why sometimes log files appear in lyse/lyse/lyse.log ...\n\nBLACS does do a `os.chdir(os.path.abspath(os.path.dirname(__file__)))` at the top of its `__main__` file, so `'analysis_submission.ui'` should be fine.\n\nBy a surprising coincidence, when I tested running BLACS with `python -m blacs` from a different directory, I got an error with zprocess trying to start child processes:\n\n`/usr/bin/python: can't open file '/home/bilbo/labscript_suite/blacs/zprocess/process_class_wrapper.py': [Errno 2] No such file or directory`\n\nThis appears to be the exact same issue - I was in '/usr/local/lib/python2.7/dist-packages' having just purged qtutils from there, and zprocess lives in that directory too.\n\nI've seen error messages before where I've installed a package from source, immediately opened a python interpreter in that directory and tested if I could import it, and had everything horribly fail. One project was kind enough to check that I was still in the source directory and raised an error saying \"this won't work in this directory - please go somewhere else\"\n\nAnd if I `print(__file__)` in `analysis_submission.py` when launched from the labscript install directory, I get `'/home/bilbo/labscript_suite/blacs/blacs/analysis_submission.pyc'`, which is less than helpful.\n\nAnd with your fix, if I run \"python -m blacs\" from the labscript suite directory, I get import errors about labscript devices.\n\nI'll look into it, but the problem stems from all the `__file__` attributes being relative paths (which are [not affected by `os.chdir()`](https://bugs.python.org/issue24670)) and are therefore wrong after an `os.chdir()`) if you are in the labscript suite directory, whereas if you are elsewhere they are absolute paths. So we have to either not use `__file__` and rely on being in the right directory already, or we have to use `__file__`, but not do an os.chdir(). Not doing os.chdir() ever is not really an option I think - lots of things expect to be able to do it, if only temporarily.\n\nSo I'll look into it but I think what we probably want is to have something that always gets imported, like labscript_utils, check if the `__main__` module's `__file__` attribute is a relative path rather than an absoluite one, and throw an error saying \"sorry, don't do that from the labscript suite directory\".", "markup": "markdown", "html": "<p>This only happens when you run it from that directory - if you run it from elsewhere with 'python -m blacs' then this problem doesn't occur. Nonetheless I didn't realise that was a problem, and I should fix it. It indicates I was doing something wrong anyway...and this explains why sometimes log files appear in <a href=\"https://bitbucket.org/lyse/lyse\" rel=\"nofollow\" class=\"ap-connect-link\">lyse/lyse</a>/lyse.log ...</p>\n<p>BLACS does do a <code>os.chdir(os.path.abspath(os.path.dirname(__file__)))</code> at the top of its <code>__main__</code> file, so <code>'analysis_submission.ui'</code> should be fine.</p>\n<p>By a surprising coincidence, when I tested running BLACS with <code>python -m blacs</code> from a different directory, I got an error with zprocess trying to start child processes:</p>\n<p><code>/usr/bin/python: can't open file '/home/bilbo/labscript_suite/blacs/zprocess/process_class_wrapper.py': [Errno 2] No such file or directory</code></p>\n<p>This appears to be the exact same issue - I was in '/usr/local/lib/python2.7/dist-packages' having just purged qtutils from there, and zprocess lives in that directory too.</p>\n<p>I've seen error messages before where I've installed a package from source, immediately opened a python interpreter in that directory and tested if I could import it, and had everything horribly fail. One project was kind enough to check that I was still in the source directory and raised an error saying \"this won't work in this directory - please go somewhere else\"</p>\n<p>And if I <code>print(__file__)</code> in <code>analysis_submission.py</code> when launched from the labscript install directory, I get <code>'/home/bilbo/labscript_suite/blacs/blacs/analysis_submission.pyc'</code>, which is less than helpful.</p>\n<p>And with your fix, if I run \"python -m blacs\" from the labscript suite directory, I get import errors about labscript devices.</p>\n<p>I'll look into it, but the problem stems from all the <code>__file__</code> attributes being relative paths (which are <a data-is-external-link=\"true\" href=\"https://bugs.python.org/issue24670\" rel=\"nofollow\">not affected by <code>os.chdir()</code></a>) and are therefore wrong after an <code>os.chdir()</code>) if you are in the labscript suite directory, whereas if you are elsewhere they are absolute paths. So we have to either not use <code>__file__</code> and rely on being in the right directory already, or we have to use <code>__file__</code>, but not do an os.chdir(). Not doing os.chdir() ever is not really an option I think - lots of things expect to be able to do it, if only temporarily.</p>\n<p>So I'll look into it but I think what we probably want is to have something that always gets imported, like labscript_utils, check if the <code>__main__</code> module's <code>__file__</code> attribute is a relative path rather than an absoluite one, and throw an error saying \"sorry, don't do that from the labscript suite directory\".</p>", "type": "rendered"}, "created_on": "2017-08-10T23:23:32.958597+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-10T23:25:48.213434+00:00", "type": "issue_comment", "id": 39024424}