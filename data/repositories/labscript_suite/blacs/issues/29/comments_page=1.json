{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/29/comments/40036712.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/29#comment-40036712"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/29.json"}}, "type": "issue", "id": 29, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "crash on shared drive becoming unavailable"}, "content": {"raw": "This is a larger problem than just BLACS - there are many points of failure in labscript suite programs where they will not recover well if either the network drive or the network connection to zlock goes down.\n\nAt some point I would like to make a wrapper for accessing files that catches errors and pops up a GUI saying \"can't access file/can't contact zlock, retrying in <seconds>\" with a button \"retry now\". The program in question would hang in the meantime, but for situations where it can't reasonably proceed until it accesses the file/zlock, that's really all that can be done, and prevents the program from crashing hard if there is a minor network mishap.\n\nThen for files where failure is an option, exceptions should be caught and dealt with on a case-by-case basis, for example, how lyse marks inaccessible files as such and ignores them. But a first port of call would be auto retrying with the dialog - definitely better default behaviour than a hard crash.\n\nIt's on the todo list!", "markup": "markdown", "html": "<p>This is a larger problem than just BLACS - there are many points of failure in labscript suite programs where they will not recover well if either the network drive or the network connection to zlock goes down.</p>\n<p>At some point I would like to make a wrapper for accessing files that catches errors and pops up a GUI saying \"can't access file/can't contact zlock, retrying in &lt;seconds&gt;\" with a button \"retry now\". The program in question would hang in the meantime, but for situations where it can't reasonably proceed until it accesses the file/zlock, that's really all that can be done, and prevents the program from crashing hard if there is a minor network mishap.</p>\n<p>Then for files where failure is an option, exceptions should be caught and dealt with on a case-by-case basis, for example, how lyse marks inaccessible files as such and ignores them. But a first port of call would be auto retrying with the dialog - definitely better default behaviour than a hard crash.</p>\n<p>It's on the todo list!</p>", "type": "rendered"}, "created_on": "2017-09-22T15:01:53.091354+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-09-22T15:02:41.745557+00:00", "type": "issue_comment", "id": 40036712}], "page": 1, "size": 1}