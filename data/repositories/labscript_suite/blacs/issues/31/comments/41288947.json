{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/31/comments/41288947.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/31#comment-41288947"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/31.json"}}, "type": "issue", "id": 31, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Graceful Worker Process exit on restart"}, "content": {"raw": "It should be possible to do this in zprocess I think. I recently did some work on another project ([autoscrub](https://bitbucket.org/philipstarkey/autoscrub)) which relies on managing and killing subprocesses (although not necessarily killing them cleanly).\n\nThings that I've found include:\n\n* Using `creationflags=subprocess.CREATE_NEW_PROCESS_GROUP` in the call to `Popen`. zprocess doesn't seem to do this (interestingly there is a zprocess function which calls `Popen` such that the subprocess is detached, but then the `subprocess_with_queues` function doesn't use it. I'm not all that familiar with this part of zprocess, so can't comment on if there is a reason for that. \n* You should be able to at least send a `signal.SIGINT` I think (although possibly implementing the above would stop that...)?\n* Was [this](https://stackoverflow.com/questions/47306805/signal-sigterm-not-received-by-subprocess-on-windows) you? Seems like maybe it's a solution if you hadn't seen it...it sends a slightly different signal (not sure if it is cross platform or not, but that can be worked around).\n* The Python package `psutil` is amazing and makes things a lot easier. We should consider using it instead of `subprocess` in zprocess.\n\nAnyway, I would suggest we turn this into a zprocess issue as I think it can probably be mainly solved on that side, and then we can update BLACS to use the improved zprocess API.", "markup": "markdown", "html": "<p>It should be possible to do this in zprocess I think. I recently did some work on another project (<a data-is-external-link=\"true\" href=\"https://bitbucket.org/philipstarkey/autoscrub\" rel=\"nofollow\">autoscrub</a>) which relies on managing and killing subprocesses (although not necessarily killing them cleanly).</p>\n<p>Things that I've found include:</p>\n<ul>\n<li>Using <code>creationflags=subprocess.CREATE_NEW_PROCESS_GROUP</code> in the call to <code>Popen</code>. zprocess doesn't seem to do this (interestingly there is a zprocess function which calls <code>Popen</code> such that the subprocess is detached, but then the <code>subprocess_with_queues</code> function doesn't use it. I'm not all that familiar with this part of zprocess, so can't comment on if there is a reason for that. </li>\n<li>You should be able to at least send a <code>signal.SIGINT</code> I think (although possibly implementing the above would stop that...)?</li>\n<li>Was <a data-is-external-link=\"true\" href=\"https://stackoverflow.com/questions/47306805/signal-sigterm-not-received-by-subprocess-on-windows\" rel=\"nofollow\">this</a> you? Seems like maybe it's a solution if you hadn't seen it...it sends a slightly different signal (not sure if it is cross platform or not, but that can be worked around).</li>\n<li>The Python package <code>psutil</code> is amazing and makes things a lot easier. We should consider using it instead of <code>subprocess</code> in zprocess.</li>\n</ul>\n<p>Anyway, I would suggest we turn this into a zprocess issue as I think it can probably be mainly solved on that side, and then we can update BLACS to use the improved zprocess API.</p>", "type": "rendered"}, "created_on": "2017-11-18T00:09:06.160238+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 41288947}