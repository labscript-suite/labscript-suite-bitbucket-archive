{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43814146.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43814146"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "This might be unrelated, but I was debugging a hard-to-reproduce segfault in BLACS the other day, which would only occur on startup if I had deleted my settings file, and only for certain connection tables. I only came across it because I borked my settings file while hacking on connections.py. It was segfaulting during showing the window for the first time, and since the only thing that was affected by the file deletion was loading settings, I was going through the settings restoring code seeing what I could change that would affect it. I was able to stop it from segfaulting by manually setting some QSplitter's sizes to (0,0), even though they were already (0,0) which made me think this was really something wrong with Qt and not anything we did wrong.\n\nI was looking into getting debugging symbols for Qt so I could get a meaningful traceback using a debugger of what was going on when it segfaulted (tracelog just showed that it was in ui.show()), but the easiest way to do that was to use Ubuntu Qt instead of Anaconda, which was a newer version of Qt (Qt5 in both cases though), and with the newer version the crash wasn't reproducable. So I thought it was just a Qt bug that got fixed...but then I saw it again once since. I can't easily go through the commit history to find out what caused it, because it was so inconsistent (it would crash consistently once I had found a connection table that caused it to, but which connection table would make it crash would change if I changed revisions).\n\nAnyway, like I said may not be relevant but since it's about connection tables and loading settings, maybe it is. At one point I was suspicious that devices with long names was what was triggering it, which seems tangentially related to this bug since the names are disappearing, but I'm not sure.\n\nMaybe there is a Qt function somewhere that is not happy being passed unicode strings. Someone who can reproduce this bug, once they can do so reliably, should be able to work backward from the point where the text is set on the button and find out whether it's being set and if not, how high you have to pop out to find why the string isn't being passed in.", "markup": "markdown", "html": "<p>This might be unrelated, but I was debugging a hard-to-reproduce segfault in BLACS the other day, which would only occur on startup if I had deleted my settings file, and only for certain connection tables. I only came across it because I borked my settings file while hacking on connections.py. It was segfaulting during showing the window for the first time, and since the only thing that was affected by the file deletion was loading settings, I was going through the settings restoring code seeing what I could change that would affect it. I was able to stop it from segfaulting by manually setting some QSplitter's sizes to (0,0), even though they were already (0,0) which made me think this was really something wrong with Qt and not anything we did wrong.</p>\n<p>I was looking into getting debugging symbols for Qt so I could get a meaningful traceback using a debugger of what was going on when it segfaulted (tracelog just showed that it was in ui.show()), but the easiest way to do that was to use Ubuntu Qt instead of Anaconda, which was a newer version of Qt (Qt5 in both cases though), and with the newer version the crash wasn't reproducable. So I thought it was just a Qt bug that got fixed...but then I saw it again once since. I can't easily go through the commit history to find out what caused it, because it was so inconsistent (it would crash consistently once I had found a connection table that caused it to, but which connection table would make it crash would change if I changed revisions).</p>\n<p>Anyway, like I said may not be relevant but since it's about connection tables and loading settings, maybe it is. At one point I was suspicious that devices with long names was what was triggering it, which seems tangentially related to this bug since the names are disappearing, but I'm not sure.</p>\n<p>Maybe there is a Qt function somewhere that is not happy being passed unicode strings. Someone who can reproduce this bug, once they can do so reliably, should be able to work backward from the point where the text is set on the button and find out whether it's being set and if not, how high you have to pop out to find why the string isn't being passed in.</p>", "type": "rendered"}, "created_on": "2018-03-09T12:31:09.703929+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-09T12:31:58.606711+00:00", "type": "issue_comment", "id": 43814146}