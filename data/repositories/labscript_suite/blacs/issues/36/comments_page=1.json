{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43802502.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43802502"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "Hi David,\n\nThat's quite strange!\n\nCould you provide the following:\n\n* The repository revision/changeset you were on for BLACS and labcript_utils\n* The repository revision/changeset you are now on for BLACS and labscript_utils\n* The current working directory you launch python from (when running the two different ways of launching BLACS)\n\nYou might also want to look at the BLACS log file to see if there is additional information there.\n\nUnfortunately I don't have a good idea of what could be causing this. There are a bunch of possibilities that fit some of the symptoms you've described, but none of them make sense given everything you've seen. Maybe this means there is more than one issue?", "markup": "markdown", "html": "<p>Hi David,</p>\n<p>That's quite strange!</p>\n<p>Could you provide the following:</p>\n<ul>\n<li>The repository revision/changeset you were on for BLACS and labcript_utils</li>\n<li>The repository revision/changeset you are now on for BLACS and labscript_utils</li>\n<li>The current working directory you launch python from (when running the two different ways of launching BLACS)</li>\n</ul>\n<p>You might also want to look at the BLACS log file to see if there is additional information there.</p>\n<p>Unfortunately I don't have a good idea of what could be causing this. There are a bunch of possibilities that fit some of the symptoms you've described, but none of them make sense given everything you've seen. Maybe this means there is more than one issue?</p>", "type": "rendered"}, "created_on": "2018-03-08T22:32:20.482120+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-03-08T22:32:32.711475+00:00", "type": "issue_comment", "id": 43802502}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43802937.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43802937"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "This sounds the same as issue #25, though it doesn't have the exact same symptoms so maybe it is subtly different.\n\nCould you check if the problem exists when you run`python C://full/path/to/labscript_suite/blacs/__main__.py`?\n\nThe problem ith #25 is that BLACS does a 'chdir' which invalidates the `__file__` attributes of any of its submodules, because they are relative paths (relative to the directory you started in) and are not updated by the `chdir()` operation. Python considers this a bug that was fixed in Python 3.4\n\nIf we want to fix it in our code, we should not do a chdir, and instead set a global `BLACS_DIR = os.path.dirname(os.path.abspath(__file__)` in `blacs.__init__.py` and have all code that currently uses relative paths to use an absolute path based either on `blacs.BLACS_DIR` or their own `__file__` attribute. The latter is relying on no other code anywhere in the interpreter doing a `os.chdir()` so the first is more reliable. More reliable still would be to `from labscript_utils import labscript_suite_install_dir` and set `BLACS_DIR = os.path.join(labscript_suite_install_dir, 'blacs')`. That way even an `os.chdir()` before `blacs.__init__` runs will not invalidate `BLACS_DIR` since it wont' be based on `__file__`.\n\nI'll have a go at a quick patch - will have to craft a regex to search for all strings in blacs that look like they might be filepaths...", "markup": "markdown", "html": "<p>This sounds the same as issue <a href=\"#!/labscript_suite/blacs/issues/25/error-when-starting-blacs-from-console\" rel=\"nofollow\" title=\"Error when starting BLACS from console\" class=\"ap-connect-link\"><s>#25</s></a>, though it doesn't have the exact same symptoms so maybe it is subtly different.</p>\n<p>Could you check if the problem exists when you run<code>python C://full/path/to/labscript_suite/blacs/__main__.py</code>?</p>\n<p>The problem ith <a href=\"#!/labscript_suite/blacs/issues/25/error-when-starting-blacs-from-console\" rel=\"nofollow\" title=\"Error when starting BLACS from console\" class=\"ap-connect-link\"><s>#25</s></a> is that BLACS does a 'chdir' which invalidates the <code>__file__</code> attributes of any of its submodules, because they are relative paths (relative to the directory you started in) and are not updated by the <code>chdir()</code> operation. Python considers this a bug that was fixed in Python 3.4</p>\n<p>If we want to fix it in our code, we should not do a chdir, and instead set a global <code>BLACS_DIR = os.path.dirname(os.path.abspath(__file__)</code> in <code>blacs.__init__.py</code> and have all code that currently uses relative paths to use an absolute path based either on <code>blacs.BLACS_DIR</code> or their own <code>__file__</code> attribute. The latter is relying on no other code anywhere in the interpreter doing a <code>os.chdir()</code> so the first is more reliable. More reliable still would be to <code>from labscript_utils import labscript_suite_install_dir</code> and set <code>BLACS_DIR = os.path.join(labscript_suite_install_dir, 'blacs')</code>. That way even an <code>os.chdir()</code> before <code>blacs.__init__</code> runs will not invalidate <code>BLACS_DIR</code> since it wont' be based on <code>__file__</code>.</p>\n<p>I'll have a go at a quick patch - will have to craft a regex to search for all strings in blacs that look like they might be filepaths...</p>", "type": "rendered"}, "created_on": "2018-03-08T23:19:38.505340+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-08T23:20:31.201782+00:00", "type": "issue_comment", "id": 43802937}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43802961.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43802961"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "Whilst we marked the original bug #25 WONTFIX, if it means you can't run `__main__.py`, then that's considerably worse than just not being able to run \"python -m\" from some directories.", "markup": "markdown", "html": "<p>Whilst we marked the original bug <a href=\"#!/labscript_suite/blacs/issues/25/error-when-starting-blacs-from-console\" rel=\"nofollow\" title=\"Error when starting BLACS from console\" class=\"ap-connect-link\"><s>#25</s></a> WONTFIX, if it means you can't run <code>__main__.py</code>, then that's considerably worse than just not being able to run \"python -m\" from some directories.</p>", "type": "rendered"}, "created_on": "2018-03-08T23:22:23.116276+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 43802961}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43803468.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43803468"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "David,\n\nCould you test my branch  `filepath_fix`  (pull request #32) to see if switching everything to absolute paths resolves the issue?\n\nMake sure you `hg pull --branch filepath_fix #!/cbillington/blacs` because you don't want my messed up default branch.", "markup": "markdown", "html": "<p>David,</p>\n<p>Could you test my branch  <code>filepath_fix</code>  (<a href=\"#!/labscript_suite/blacs/pull-requests/32/absolute-imports-and-dont-use-__file__\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #32</a>) to see if switching everything to absolute paths resolves the issue?</p>\n<p>Make sure you <code>hg pull --branch filepath_fix #!/cbillington/blacs</code> because you don't want my messed up default branch.</p>", "type": "rendered"}, "created_on": "2018-03-09T00:26:48.336399+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-09T00:28:59.269770+00:00", "type": "issue_comment", "id": 43803468}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43809141.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43809141"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "I was able to reproduce david's bug when runnning from the blacs folder with \n```\n#!python\n\npython __main__.py\n```\nAnd for me this did not fix the bug. I might look into this a bit more later if I find the time.\n\nHowever your changes do solve issue #25 for me.", "markup": "markdown", "html": "<p>I was able to reproduce david's bug when runnning from the blacs folder with </p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">python</span> <span class=\"n\">__main__</span><span class=\"o\">.</span><span class=\"n\">py</span>\n</pre></div>\n\n\n<p>And for me this did not fix the bug. I might look into this a bit more later if I find the time.</p>\n<p>However your changes do solve issue <a href=\"#!/labscript_suite/blacs/issues/25/error-when-starting-blacs-from-console\" rel=\"nofollow\" title=\"Error when starting BLACS from console\" class=\"ap-connect-link\"><s>#25</s></a> for me.</p>", "type": "rendered"}, "created_on": "2018-03-09T08:54:51.902370+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-09T08:55:03.899298+00:00", "type": "issue_comment", "id": 43809141}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43811775.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43811775"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "I am not able to reproduce unfortunately, which makes debugging this a bit hard. The likely culprit is recent changes to properties.py in labscript_utils, which is now returning glorious unicode strings for everything, or possibly the inverted digital outputs, since that has to do with digital outputs , but I'm at a loss as to why it would depend on what directory you are running from.", "markup": "markdown", "html": "<p>I am not able to reproduce unfortunately, which makes debugging this a bit hard. The likely culprit is recent changes to properties.py in labscript_utils, which is now returning glorious unicode strings for everything, or possibly the inverted digital outputs, since that has to do with digital outputs , but I'm at a loss as to why it would depend on what directory you are running from.</p>", "type": "rendered"}, "created_on": "2018-03-09T10:40:56.224700+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-09T10:41:24.251178+00:00", "type": "issue_comment", "id": 43811775}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43812820.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43812820"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "Is it possible that this doesn't actually have anything to do with the particular way in which BLACS was launched, but that it needed to be launched twice? The problem with trying to reproduce this is that when you launch and then close BLACS, the entire h5 file is rewritten so unless you backup the h5 file storing the BLACS settings, and then restore it before launching the other way, you don't necessarily reproduce the behaviour of the original launch. I'm wondering if the first load fails due to a change, but the second (and thereafter) loads succeed because the h5 file was written by the new code when BLACS was closed after the first launch.\n\nDavid/Jan, can you confirm it is consistently failing when launching with a particular command and not just showing different behaviour on the second launch to the first (independent of the which one you choose to run first)? Also, could you print out the value of `settings_path` on [this line](#!/labscript_suite/blacs/src/66a107e63fc012badd8b7049b5f26a145eac2d78/__main__.py?at=default&fileviewer=file-view-default#__main__.py-660).\n\nI'll see if I can reproduce it at all tomorrow, but so far I haven't been able to create an incorrect path to the h5 file regardless of how I start BLACS (even before the recent change by Chris). Not sure whether that means the issue path related but for some reason I'm not seeing the same bug, or if it isn't path related and is due to connection table parsing (as outlined in #37)", "markup": "markdown", "html": "<p>Is it possible that this doesn't actually have anything to do with the particular way in which BLACS was launched, but that it needed to be launched twice? The problem with trying to reproduce this is that when you launch and then close BLACS, the entire h5 file is rewritten so unless you backup the h5 file storing the BLACS settings, and then restore it before launching the other way, you don't necessarily reproduce the behaviour of the original launch. I'm wondering if the first load fails due to a change, but the second (and thereafter) loads succeed because the h5 file was written by the new code when BLACS was closed after the first launch.</p>\n<p>David/Jan, can you confirm it is consistently failing when launching with a particular command and not just showing different behaviour on the second launch to the first (independent of the which one you choose to run first)? Also, could you print out the value of <code>settings_path</code> on <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/src/66a107e63fc012badd8b7049b5f26a145eac2d78/__main__.py?at=default&amp;fileviewer=file-view-default#__main__.py-660\" rel=\"nofollow\">this line</a>.</p>\n<p>I'll see if I can reproduce it at all tomorrow, but so far I haven't been able to create an incorrect path to the h5 file regardless of how I start BLACS (even before the recent change by Chris). Not sure whether that means the issue path related but for some reason I'm not seeing the same bug, or if it isn't path related and is due to connection table parsing (as outlined in <a href=\"#!/labscript_suite/blacs/issues/37/changing-unitconversion-parameters-sets\" rel=\"nofollow\" title=\"Changing unitconversion parameters sets all frontpanel values to 0\" class=\"ap-connect-link\"><s>#37</s></a>)</p>", "type": "rendered"}, "created_on": "2018-03-09T11:28:47.557260+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-03-09T11:29:19.242225+00:00", "type": "issue_comment", "id": 43812820}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43814146.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43814146"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "This might be unrelated, but I was debugging a hard-to-reproduce segfault in BLACS the other day, which would only occur on startup if I had deleted my settings file, and only for certain connection tables. I only came across it because I borked my settings file while hacking on connections.py. It was segfaulting during showing the window for the first time, and since the only thing that was affected by the file deletion was loading settings, I was going through the settings restoring code seeing what I could change that would affect it. I was able to stop it from segfaulting by manually setting some QSplitter's sizes to (0,0), even though they were already (0,0) which made me think this was really something wrong with Qt and not anything we did wrong.\n\nI was looking into getting debugging symbols for Qt so I could get a meaningful traceback using a debugger of what was going on when it segfaulted (tracelog just showed that it was in ui.show()), but the easiest way to do that was to use Ubuntu Qt instead of Anaconda, which was a newer version of Qt (Qt5 in both cases though), and with the newer version the crash wasn't reproducable. So I thought it was just a Qt bug that got fixed...but then I saw it again once since. I can't easily go through the commit history to find out what caused it, because it was so inconsistent (it would crash consistently once I had found a connection table that caused it to, but which connection table would make it crash would change if I changed revisions).\n\nAnyway, like I said may not be relevant but since it's about connection tables and loading settings, maybe it is. At one point I was suspicious that devices with long names was what was triggering it, which seems tangentially related to this bug since the names are disappearing, but I'm not sure.\n\nMaybe there is a Qt function somewhere that is not happy being passed unicode strings. Someone who can reproduce this bug, once they can do so reliably, should be able to work backward from the point where the text is set on the button and find out whether it's being set and if not, how high you have to pop out to find why the string isn't being passed in.", "markup": "markdown", "html": "<p>This might be unrelated, but I was debugging a hard-to-reproduce segfault in BLACS the other day, which would only occur on startup if I had deleted my settings file, and only for certain connection tables. I only came across it because I borked my settings file while hacking on connections.py. It was segfaulting during showing the window for the first time, and since the only thing that was affected by the file deletion was loading settings, I was going through the settings restoring code seeing what I could change that would affect it. I was able to stop it from segfaulting by manually setting some QSplitter's sizes to (0,0), even though they were already (0,0) which made me think this was really something wrong with Qt and not anything we did wrong.</p>\n<p>I was looking into getting debugging symbols for Qt so I could get a meaningful traceback using a debugger of what was going on when it segfaulted (tracelog just showed that it was in ui.show()), but the easiest way to do that was to use Ubuntu Qt instead of Anaconda, which was a newer version of Qt (Qt5 in both cases though), and with the newer version the crash wasn't reproducable. So I thought it was just a Qt bug that got fixed...but then I saw it again once since. I can't easily go through the commit history to find out what caused it, because it was so inconsistent (it would crash consistently once I had found a connection table that caused it to, but which connection table would make it crash would change if I changed revisions).</p>\n<p>Anyway, like I said may not be relevant but since it's about connection tables and loading settings, maybe it is. At one point I was suspicious that devices with long names was what was triggering it, which seems tangentially related to this bug since the names are disappearing, but I'm not sure.</p>\n<p>Maybe there is a Qt function somewhere that is not happy being passed unicode strings. Someone who can reproduce this bug, once they can do so reliably, should be able to work backward from the point where the text is set on the button and find out whether it's being set and if not, how high you have to pop out to find why the string isn't being passed in.</p>", "type": "rendered"}, "created_on": "2018-03-09T12:31:09.703929+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-09T12:31:58.606711+00:00", "type": "issue_comment", "id": 43814146}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43814573.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43814573"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "I'm back in lab so I'm going to start working through debug steps.\n\nI'm running both commands from inside the blacs directory. The only reason I've noticed the difference at all is because I normally start blacs with the installer generated shortcut (which uses the \\_\\_main\\_\\_.py method) but when I debug I start blacs from the command line with the python -m blacs method.\n\nFor me it consistently fails when I run with python \\_\\_main\\_\\_.py. Moreover, trying to load an explicit front panel save file (from the drop menu option) fails in the same way if I'm using \\_\\_main\\_\\_.py but always works if I use python -m blacs.\n\nI haven't done the direct print statement, but my log file has this in it for either method (with time changing obviously)\n\n```\n#!\n2018-03-09 07:28:00,960 DEBUG BLACS.ConnectionTable: Parsing connection table from C:\\labscript_suite\\labconfig\\ExperimentContr_BLACS.h5\n\n```\n\nI'm going to see if I can isolate the revision where this breaks for me. I've always used the shortcut without issue so clearly something changed. I'll also try out Chris's bugfix.", "markup": "markdown", "html": "<p>I'm back in lab so I'm going to start working through debug steps.</p>\n<p>I'm running both commands from inside the blacs directory. The only reason I've noticed the difference at all is because I normally start blacs with the installer generated shortcut (which uses the __main__.py method) but when I debug I start blacs from the command line with the python -m blacs method.</p>\n<p>For me it consistently fails when I run with python __main__.py. Moreover, trying to load an explicit front panel save file (from the drop menu option) fails in the same way if I'm using __main__.py but always works if I use python -m blacs.</p>\n<p>I haven't done the direct print statement, but my log file has this in it for either method (with time changing obviously)</p>\n<div class=\"codehilite\"><pre><span></span>2018-03-09 07:28:00,960 DEBUG BLACS.ConnectionTable: Parsing connection table from C:\\labscript_suite\\labconfig\\ExperimentContr_BLACS.h5\n</pre></div>\n\n\n<p>I'm going to see if I can isolate the revision where this breaks for me. I've always used the shortcut without issue so clearly something changed. I'll also try out Chris's bugfix.</p>", "type": "rendered"}, "created_on": "2018-03-09T12:53:06.634397+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": null, "type": "issue_comment", "id": 43814573}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43814944.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43814944"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "Found my last known good configuration! Bug is not present when running blacs with e034e96e504b (merge of pull request #9). My labscript_utils is at the most recent [changeset](#!/labscript_suite/labscript_utils/commits/4d200324079d6041a56842866c965f721742ea37).\n\nIf I merge in the Explicit-Imports pull request (with the later bugfix) I get the undesired behavior again.", "markup": "markdown", "html": "<p>Found my last known good configuration! Bug is not present when running blacs with <a href=\"#!/labscript_suite/blacs/commits/e034e96e504b\" rel=\"nofollow\" class=\"ap-connect-link\">e034e96e504b</a> (merge of <a href=\"#!/labscript_suite/blacs/pull-requests/9/delete-repeated-shots-functionality\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #9</a>). My labscript_utils is at the most recent <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript_utils/commits/4d200324079d6041a56842866c965f721742ea37\" rel=\"nofollow\">changeset</a>.</p>\n<p>If I merge in the Explicit-Imports pull request (with the later bugfix) I get the undesired behavior again.</p>", "type": "rendered"}, "created_on": "2018-03-09T13:11:10.404767+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": null, "type": "issue_comment", "id": 43814944}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43815041.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43815041"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "@cbillington \nUnfortunately I have to concur with Jan, the filepath fix does not fix this issue for me either.", "markup": "markdown", "html": "<p>@cbillington \nUnfortunately I have to concur with Jan, the filepath fix does not fix this issue for me either.</p>", "type": "rendered"}, "created_on": "2018-03-09T13:16:28.068389+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": null, "type": "issue_comment", "id": 43815041}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43815205.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43815205"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "Good find! \n\nCould you check if pull request #33 fixes it for you? It's a backout of explicit imports, but due to other import changes since is still different to what you have tested.", "markup": "markdown", "html": "<p>Good find! </p>\n<p>Could you check if <a href=\"#!/labscript_suite/blacs/pull-requests/33/backed-out-explicit-imports\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #33</a> fixes it for you? It's a backout of explicit imports, but due to other import changes since is still different to what you have tested.</p>", "type": "rendered"}, "created_on": "2018-03-09T13:25:05.577942+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 43815205}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43815271.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43815271"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "Thanks for checking with the filepath thing - I should have some clues now that I know the imports caused a problem.\n\nIf pull request #33 fixes the problem for you and you feel really motivated you could try turning the absolute imports back on one by one to see which ones causes the issue, but no pressure.\n\nBedtime for me now I think.", "markup": "markdown", "html": "<p>Thanks for checking with the filepath thing - I should have some clues now that I know the imports caused a problem.</p>\n<p>If <a href=\"#!/labscript_suite/blacs/pull-requests/33/backed-out-explicit-imports\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #33</a> fixes the problem for you and you feel really motivated you could try turning the absolute imports back on one by one to see which ones causes the issue, but no pressure.</p>\n<p>Bedtime for me now I think.</p>", "type": "rendered"}, "created_on": "2018-03-09T13:27:45.629120+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 43815271}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43815290.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43815290"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "solves this issue for me I'll investigate why later", "markup": "markdown", "html": "<p>solves this issue for me I'll investigate why later</p>", "type": "rendered"}, "created_on": "2018-03-09T13:28:29.719955+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 43815290}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43815332.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43815332"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "Pull request #33 fixes the issue for me.", "markup": "markdown", "html": "<p><a href=\"#!/labscript_suite/blacs/pull-requests/33/backed-out-explicit-imports\" rel=\"nofollow\" class=\"ap-connect-link\">Pull request #33</a> fixes the issue for me.</p>", "type": "rendered"}, "created_on": "2018-03-09T13:30:25.392222+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": null, "type": "issue_comment", "id": 43815332}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43815409.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43815409"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "Thanks for the debugging efforts!", "markup": "markdown", "html": "<p>Thanks for the debugging efforts!</p>", "type": "rendered"}, "created_on": "2018-03-09T13:33:25.302676+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 43815409}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43815414.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43815414"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "Fixed by pull request #33", "markup": "markdown", "html": "<p>Fixed by <a href=\"#!/labscript_suite/blacs/pull-requests/33/backed-out-explicit-imports\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #33</a></p>", "type": "rendered"}, "created_on": "2018-03-09T13:33:41.518750+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 43815414}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43818383.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43818383"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "It looks like the ConnectionTable and/or FrontPanelSettings with explicit imports breaks things.\n\nI didn't get into the device_base_class.py imports but suspect they are fine.", "markup": "markdown", "html": "<p>It looks like the ConnectionTable and/or FrontPanelSettings with explicit imports breaks things.</p>\n<p>I didn't get into the device_base_class.py imports but suspect they are fine.</p>", "type": "rendered"}, "created_on": "2018-03-09T15:52:50.292845+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": null, "type": "issue_comment", "id": 43818383}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43823647.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43823647"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "Ok so here is what is happening (but I don't know why): The typecheck in connectiontable.compare_to() fails with explicit imports. I added a print statement to the top of the compare_to() function:\n\n```\n#!python\n\nprint( type(other_table) , isinstance(other_table,ConnectionTable))\n```\n\nwith explicit imports this prints  \n(<class 'blacs.connections.ConnectionTable'>, False)\n\nIf I remove the explicit import from front panel settings everything works fine and prints \n (<class 'connections.ConnectionTable'>, True)\n\nIf instead I add a explicit import to connections as well (which my original pull request did not do) everything works fine as well and prints\n(<class 'blacs.connections.ConnectionTable'>, True)\n\nSo I guess we need to add a explicit import to the connection table import or merge the pull request moving connections.py to labscript_utils when adding the explicit imports again.", "markup": "markdown", "html": "<p>Ok so here is what is happening (but I don't know why): The typecheck in connectiontable.compare_to() fails with explicit imports. I added a print statement to the top of the compare_to() function:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">print</span><span class=\"p\">(</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">other_table</span><span class=\"p\">)</span> <span class=\"p\">,</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">other_table</span><span class=\"p\">,</span><span class=\"n\">ConnectionTable</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>with explicit imports this prints<br />\n(&lt;class 'blacs.connections.ConnectionTable'&gt;, False)</p>\n<p>If I remove the explicit import from front panel settings everything works fine and prints \n (&lt;class 'connections.ConnectionTable'&gt;, True)</p>\n<p>If instead I add a explicit import to connections as well (which my original pull request did not do) everything works fine as well and prints\n(&lt;class 'blacs.connections.ConnectionTable'&gt;, True)</p>\n<p>So I guess we need to add a explicit import to the connection table import or merge the pull request moving connections.py to labscript_utils when adding the explicit imports again.</p>", "type": "rendered"}, "created_on": "2018-03-09T22:23:49.219819+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-09T22:25:23.982036+00:00", "type": "issue_comment", "id": 43823647}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43823724.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43823724"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "Aha!\n\n\nWe have fallen victim to the Python \"[double import problem](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html)\" which can rear its head if a module is imported *both* by absolute imports and by 'relative' imports (technically they are not relative imports, but you know what I mean). This results in *two* copies of the module in memory.\n\nSo you end up with two classes - a `blacs.connections.ConnectionTable` and a `connections.ConnectionTable`, and as far as Python is concerned, instances of one are not instances of the other.\n\nAs you said, the solution is to not make any 'relative' imports. However, as I said technically these are not relative imports - even in Python 3 they would be allowed. It' merely the case that since we're running from the package directory, those modules are available as the current directory is in `sys.path`. And Python has no way to know they are part of BLACS - it just things they're regular modules, distinct from submodules of BLACS.\n\nSo even if we did `from __future__ import absolute_import`, that still wouldn't raise an error which would force us to find all remaining instances of these dodgy imports.\n\nReally you're not supposed to run code from within package directories, and you're supposed to use `python -m` in our type of situation. But, since our launchers simply run BLACS from within its directory, this is so far our official way of doing things. And it's a pain to not be allowed to run code from within a package directory - one tends to do it all the time during testing.\n\nSo removing *all* the sortof-relative-but-not-technically imports will solve our problem, but is fragile - a single relative import in the future, even on Python 3, would break things again. Maybe we should change what our launchers do.", "markup": "markdown", "html": "<p>Aha!</p>\n<p>We have fallen victim to the Python \"<a data-is-external-link=\"true\" href=\"http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html\" rel=\"nofollow\">double import problem</a>\" which can rear its head if a module is imported <em>both</em> by absolute imports and by 'relative' imports (technically they are not relative imports, but you know what I mean). This results in <em>two</em> copies of the module in memory.</p>\n<p>So you end up with two classes - a <code>blacs.connections.ConnectionTable</code> and a <code>connections.ConnectionTable</code>, and as far as Python is concerned, instances of one are not instances of the other.</p>\n<p>As you said, the solution is to not make any 'relative' imports. However, as I said technically these are not relative imports - even in Python 3 they would be allowed. It' merely the case that since we're running from the package directory, those modules are available as the current directory is in <code>sys.path</code>. And Python has no way to know they are part of BLACS - it just things they're regular modules, distinct from submodules of BLACS.</p>\n<p>So even if we did <code>from __future__ import absolute_import</code>, that still wouldn't raise an error which would force us to find all remaining instances of these dodgy imports.</p>\n<p>Really you're not supposed to run code from within package directories, and you're supposed to use <code>python -m</code> in our type of situation. But, since our launchers simply run BLACS from within its directory, this is so far our official way of doing things. And it's a pain to not be allowed to run code from within a package directory - one tends to do it all the time during testing.</p>\n<p>So removing <em>all</em> the sortof-relative-but-not-technically imports will solve our problem, but is fragile - a single relative import in the future, even on Python 3, would break things again. Maybe we should change what our launchers do.</p>", "type": "rendered"}, "created_on": "2018-03-09T22:35:01.095627+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-09T22:37:44.322526+00:00", "type": "issue_comment", "id": 43823724}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43824021.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43824021"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "I have seen in another project an import hook that detects when you've imported the same module twice under different names and raises an exception, so I think I will likely integrate that into labscript_utils so that it is always active in labscript programs and will make it obvious in future if we make this mistake again. Honestly this ought to be considered a bug in Python and the standard importer should raise an error if you do it. Modules, at least those that come from files, are uniquely identified by their filepath, so it is an easy thing to check for. I'm happy that modules that do not come from files are your problem to make sure you don't make multiple copies of, but Python should protect you from loading the same file twice under different names at the very least.", "markup": "markdown", "html": "<p>I have seen in another project an import hook that detects when you've imported the same module twice under different names and raises an exception, so I think I will likely integrate that into labscript_utils so that it is always active in labscript programs and will make it obvious in future if we make this mistake again. Honestly this ought to be considered a bug in Python and the standard importer should raise an error if you do it. Modules, at least those that come from files, are uniquely identified by their filepath, so it is an easy thing to check for. I'm happy that modules that do not come from files are your problem to make sure you don't make multiple copies of, but Python should protect you from loading the same file twice under different names at the very least.</p>", "type": "rendered"}, "created_on": "2018-03-09T23:19:24.516675+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 43824021}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43824056.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43824056"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "Agreed! \nBut what is our import strategy from now on explicit module imports 'blacs.xyz' or relative imports '.xyz'? \nI'd opt for the explicit module imports as that makes it easier to move a file from one module to another if we should decide to move things around.", "markup": "markdown", "html": "<p>Agreed! \nBut what is our import strategy from now on explicit module imports 'blacs.xyz' or relative imports '.xyz'? \nI'd opt for the explicit module imports as that makes it easier to move a file from one module to another if we should decide to move things around.</p>", "type": "rendered"}, "created_on": "2018-03-09T23:23:21.617005+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 43824056}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments/43824098.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36#comment-43824098"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "front panel settings not loaded correctly if blacs is not run as a module"}, "content": {"raw": "(edited)\n\nYes, I agree, and *either* `blacs.xyz` or `.xyx` will be necessary if you want `python -m blacs` to work in Python 3. So we will have to switch to them (we cannot simply do `import xyz`), so long as we have a way of being sure we got them all and have no double imports.\n\n`blacs.xyz` has the advantage that you can continue to run any old python script as `__main__` from within a project directory and it will still find `blacs.xyz`, whereas `.xyz` will say 'we're not in a package'! So `blacs.xyz` is preferable - so long as we're able to quickly raise an error if we've screwed up and done `import xyz` as well.", "markup": "markdown", "html": "<p>(edited)</p>\n<p>Yes, I agree, and <em>either</em> <code>blacs.xyz</code> or <code>.xyx</code> will be necessary if you want <code>python -m blacs</code> to work in Python 3. So we will have to switch to them (we cannot simply do <code>import xyz</code>), so long as we have a way of being sure we got them all and have no double imports.</p>\n<p><code>blacs.xyz</code> has the advantage that you can continue to run any old python script as <code>__main__</code> from within a project directory and it will still find <code>blacs.xyz</code>, whereas <code>.xyz</code> will say 'we're not in a package'! So <code>blacs.xyz</code> is preferable - so long as we're able to quickly raise an error if we've screwed up and done <code>import xyz</code> as well.</p>", "type": "rendered"}, "created_on": "2018-03-09T23:27:26.027191+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-09T23:32:12.150423+00:00", "type": "issue_comment", "id": 43824098}], "page": 1, "size": 23}