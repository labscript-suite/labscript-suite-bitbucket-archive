{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/38/comments/44464394.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/38#comment-44464394"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/38.json"}}, "type": "issue", "id": 38, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Front Panel settings set to default on load when connection table is modified under Python 3"}, "content": {"raw": "Does adding ```name = _ensure_str(name)``` to the top of ```find_by_name``` in labscript_utils/connections.py solve the bug for you? It seems that name is sometimes passed as a numpy string.", "markup": "markdown", "html": "<p>Does adding <code>name = _ensure_str(name)</code> to the top of <code>find_by_name</code> in labscript_utils/connections.py solve the bug for you? It seems that name is sometimes passed as a numpy string.</p>", "type": "rendered"}, "created_on": "2018-04-03T20:21:44.263183+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-04-03T20:22:01.452834+00:00", "type": "issue_comment", "id": 44464394}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/38/comments/44468602.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/38#comment-44468602"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/38.json"}}, "type": "issue", "id": 38, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Front Panel settings set to default on load when connection table is modified under Python 3"}, "content": {"raw": "I suspect the aboce _ensure_str() might fix it, and if not, is a problem anyway. In front_panel_settings.py, there is code like this:\n\n```python\n    def check_row(self,row,ct_match,blacs_ct,saved_ct):            \n        # If it has a name\n        if row[0] != \"-\":\n            if ct_match:\n                # Restore\n                return 1\n            else:\n                # Find if this device is in the connection table\n                connection = blacs_ct.find_by_name(row[0])\n                connection2 = saved_ct.find_by_name(row[0])\n```\nWhere `row` is a row if a HDF dataset - and strings it contains are numpy bytestrings. So not only would find_by_name be better if it accepted numpy strings, the check `row[0] != \"-\"` is always resulting in `False` since `\"-\"` is a unicode strings and `row[0]` is a numpy bytestring.\n\nFixing these case by case might help, but at some point I might go over `front_panel_settings` to wrap the reading of the h5 file in something that results in all unicode strings in objects rather than passing rows of numpy arrays around.", "markup": "markdown", "html": "<p>I suspect the aboce _ensure_str() might fix it, and if not, is a problem anyway. In front_panel_settings.py, there is code like this:</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"k\">def</span> <span class=\"nf\">check_row</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"n\">row</span><span class=\"p\">,</span><span class=\"n\">ct_match</span><span class=\"p\">,</span><span class=\"n\">blacs_ct</span><span class=\"p\">,</span><span class=\"n\">saved_ct</span><span class=\"p\">):</span>            \n        <span class=\"c1\"># If it has a name</span>\n        <span class=\"k\">if</span> <span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;-&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">ct_match</span><span class=\"p\">:</span>\n                <span class=\"c1\"># Restore</span>\n                <span class=\"k\">return</span> <span class=\"mi\">1</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"c1\"># Find if this device is in the connection table</span>\n                <span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"n\">blacs_ct</span><span class=\"o\">.</span><span class=\"n\">find_by_name</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n                <span class=\"n\">connection2</span> <span class=\"o\">=</span> <span class=\"n\">saved_ct</span><span class=\"o\">.</span><span class=\"n\">find_by_name</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n</pre></div>\n\n\n<p>Where <code>row</code> is a row if a HDF dataset - and strings it contains are numpy bytestrings. So not only would find_by_name be better if it accepted numpy strings, the check <code>row[0] != \"-\"</code> is always resulting in <code>False</code> since <code>\"-\"</code> is a unicode strings and <code>row[0]</code> is a numpy bytestring.</p>\n<p>Fixing these case by case might help, but at some point I might go over <code>front_panel_settings</code> to wrap the reading of the h5 file in something that results in all unicode strings in objects rather than passing rows of numpy arrays around.</p>", "type": "rendered"}, "created_on": "2018-04-04T00:44:50.139599+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 44468602}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/38/comments/44486453.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/38#comment-44486453"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/38.json"}}, "type": "issue", "id": 38, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Front Panel settings set to default on load when connection table is modified under Python 3"}, "content": {"raw": "``` name = _ensure_str(name) ``` does fix this particular issue for me.", "markup": "markdown", "html": "<p><code>name = _ensure_str(name)</code> does fix this particular issue for me.</p>", "type": "rendered"}, "created_on": "2018-04-04T14:37:37.040966+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": null, "type": "issue_comment", "id": 44486453}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/38/comments/44486498.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/38#comment-44486498"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/38.json"}}, "type": "issue", "id": 38, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Front Panel settings set to default on load when connection table is modified under Python 3"}, "content": {"raw": "Great! I'll create a pull request with that change then.", "markup": "markdown", "html": "<p>Great! I'll create a pull request with that change then.</p>", "type": "rendered"}, "created_on": "2018-04-04T14:39:15.299541+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 44486498}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/38/comments/44640691.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/38#comment-44640691"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/38.json"}}, "type": "issue", "id": 38, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Front Panel settings set to default on load when connection table is modified under Python 3"}, "content": {"raw": "resolved as of changeset 92aaf9b1e7ed", "markup": "markdown", "html": "<p>resolved as of changeset <a href=\"#!/labscript_suite/blacs/commits/92aaf9b1e7ed\" rel=\"nofollow\" class=\"ap-connect-link\">92aaf9b1e7ed</a></p>", "type": "rendered"}, "created_on": "2018-04-12T01:27:00.549019+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 44640691}], "page": 1, "size": 5}