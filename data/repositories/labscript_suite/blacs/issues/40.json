{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/40/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/40.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/40/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/40/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/40/better-defaults-and-better-error-reporting"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/40/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Better defaults and better error reporting for incorrect use of state machine", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Generally it would be good to review the state machine API and consider ways of setting default arguments for the case where they're not relevant, for example:\r\n\r\n* create_worker could set primary_worker automatically if primary_worker is not None. That way if there is a single worker, it would already be primary, and if there are multiple workers, the first one created will be primary unless the user specifies otherwise.\r\n\r\n* queue_work could default to using the primary worker if none is specified (this would require changing it to be a keyword argument, but still accepting two positional arguments for backward compat).\r\n\r\n* Some error checking in tab_base_classes.mainloop() regarding workers, so that you get more informative errors than the following (this I suspect is the result of not setting `self.primary_worker`, meaning it is `None`):\r\n\r\n![GetImage.png](data/bitbucket.org/repo/dR5qxr/images/754680064-GetImage.png)\r\n\r\nThe mainloop should be read with a defensive eye to think what could go wrong and how we might provide good defaults and better error messages to minimise mistakes and confusion.\r\n\r\nThis would make writing new device classes a smoother experience.", "markup": "markdown", "html": "<p>Generally it would be good to review the state machine API and consider ways of setting default arguments for the case where they're not relevant, for example:</p>\n<ul>\n<li>\n<p>create_worker could set primary_worker automatically if primary_worker is not None. That way if there is a single worker, it would already be primary, and if there are multiple workers, the first one created will be primary unless the user specifies otherwise.</p>\n</li>\n<li>\n<p>queue_work could default to using the primary worker if none is specified (this would require changing it to be a keyword argument, but still accepting two positional arguments for backward compat).</p>\n</li>\n<li>\n<p>Some error checking in tab_base_classes.mainloop() regarding workers, so that you get more informative errors than the following (this I suspect is the result of not setting <code>self.primary_worker</code>, meaning it is <code>None</code>):</p>\n</li>\n</ul>\n<p><img alt=\"GetImage.png\" src=\"data/bitbucket.org/repo/dR5qxr/images/754680064-GetImage.png\" /></p>\n<p>The mainloop should be read with a defensive eye to think what could go wrong and how we might provide good defaults and better error messages to minimise mistakes and confusion.</p>\n<p>This would make writing new device classes a smoother experience.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-04-25T02:20:41.826193+00:00", "milestone": null, "updated_on": "2018-04-26T00:33:16.510669+00:00", "type": "issue", "id": 40}