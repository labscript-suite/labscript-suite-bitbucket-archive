{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/40/comments/44965225.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/40#comment-44965225"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/40.json"}}, "type": "issue", "id": 40, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Better defaults and better error reporting for incorrect use of state machine"}, "content": {"raw": "We should decide whether the concept of \"primary\" and \"secondary\" workers should migrate to `Tab` (from their existing home in `DeviceTab`). I'm personally leaning towards keeping it in `DeviceTab`, in which case a solution would be to reimplement `create_worker` in `DeviceTab` with the behaviour you describe (rather than relocating `primary_worker` to `Tab`). We could also ensure workers get added to `secondary_workers` if they are not the `primary_worker`, however I think that there may be instances where you might want to create a worker and not have it managed by `DeviceTab` methods so force adding workers to `secondary_workers` is probably a bad idea.\n\nI think if we automatically set `primary_worker` then there probably isn't a need to mangle `queue_work` to change it to accept the worker name as a keyword argument. Of course, up-to-date documentation would go a long way to dealing with these kinds of problems!\n\nMore error checking sounds good. I think if we type check `worker_process`, `worker_function`, `worker_args`, and `worker_kwargs` inside the generator loop ([here](#!/labscript_suite/blacs/src/af92f5da7ca4dc20e9c925304cc0fc420627b65e/tab_base_classes.py?at=default&fileviewer=file-view-default#tab_base_classes.py-704)) then that pretty much covers the common things that will go wrong (anything else going wrong would be the result of pretty severe hacking on the part of the user I think).", "markup": "markdown", "html": "<p>We should decide whether the concept of \"primary\" and \"secondary\" workers should migrate to <code>Tab</code> (from their existing home in <code>DeviceTab</code>). I'm personally leaning towards keeping it in <code>DeviceTab</code>, in which case a solution would be to reimplement <code>create_worker</code> in <code>DeviceTab</code> with the behaviour you describe (rather than relocating <code>primary_worker</code> to <code>Tab</code>). We could also ensure workers get added to <code>secondary_workers</code> if they are not the <code>primary_worker</code>, however I think that there may be instances where you might want to create a worker and not have it managed by <code>DeviceTab</code> methods so force adding workers to <code>secondary_workers</code> is probably a bad idea.</p>\n<p>I think if we automatically set <code>primary_worker</code> then there probably isn't a need to mangle <code>queue_work</code> to change it to accept the worker name as a keyword argument. Of course, up-to-date documentation would go a long way to dealing with these kinds of problems!</p>\n<p>More error checking sounds good. I think if we type check <code>worker_process</code>, <code>worker_function</code>, <code>worker_args</code>, and <code>worker_kwargs</code> inside the generator loop (<a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/src/af92f5da7ca4dc20e9c925304cc0fc420627b65e/tab_base_classes.py?at=default&amp;fileviewer=file-view-default#tab_base_classes.py-704\" rel=\"nofollow\">here</a>) then that pretty much covers the common things that will go wrong (anything else going wrong would be the result of pretty severe hacking on the part of the user I think).</p>", "type": "rendered"}, "created_on": "2018-04-26T00:33:16.494426+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 44965225}], "page": 1, "size": 1}