{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/45/comments/46686079.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/45#comment-46686079"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "Can't start after a crash if previously queued shots have been deleted"}, "content": {"raw": "Do you have a traceback for this?\n\nAs far as I can see the queue should already ignore shots that aren't accessible. I can see that loading an outdated queue would result in \"repeat shots\" being generated for any shots that have been run, but that seems distinct from the bug you've reported.\n\nA better fix would probably be to regularly save the BLACS state (say after each shot has been executed) by duplicating [this](#!/labscript_suite/blacs/src/4428a9f79ad09768aae0288d4b6aa74021846d52/__main__.py#lines-580) line into the `QueueManager.manage` method (probably at the same place we save the front panel data into the current shot. The downside to this is that the BLACS HDF5 file will probably grow in size very rapidly because HDF5 is very bad at releasing space from deleted elements. That's something that we should be solving globally anyway, but could delay the \"proper\" fix to this issue.", "markup": "markdown", "html": "<p>Do you have a traceback for this?</p>\n<p>As far as I can see the queue should already ignore shots that aren't accessible. I can see that loading an outdated queue would result in \"repeat shots\" being generated for any shots that have been run, but that seems distinct from the bug you've reported.</p>\n<p>A better fix would probably be to regularly save the BLACS state (say after each shot has been executed) by duplicating <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/src/4428a9f79ad09768aae0288d4b6aa74021846d52/__main__.py#lines-580\" rel=\"nofollow\">this</a> line into the <code>QueueManager.manage</code> method (probably at the same place we save the front panel data into the current shot. The downside to this is that the BLACS HDF5 file will probably grow in size very rapidly because HDF5 is very bad at releasing space from deleted elements. That's something that we should be solving globally anyway, but could delay the \"proper\" fix to this issue.</p>", "type": "rendered"}, "created_on": "2018-07-11T05:12:41.720997+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 46686079}