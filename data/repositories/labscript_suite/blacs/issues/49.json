{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/49/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/49.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/49/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/49/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/49/the-blacs-tab-statemachine-can-crash-if"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/49/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "The BLACS tab statemachine can crash if you return before yielding in a generator", "component": null, "votes": 0, "watches": 1, "content": {"raw": "For methods decorated with our `define_state` decorator we queue work up in the worker process using the `yield` keyword. This means that the method is a generator.\r\n\r\nI seem to have hit a bug though where the method is detected as a generator, but doesn't actually ever yield, which then raises a `StopIteration` exception on [this](#!/labscript_suite/blacs/src/b41afcffa5e857fe8a15178520cf1765c69e6438/tab_base_classes.py#lines-707) line of code. \r\n\r\nThe particular code that seems to be causing this is if you have a return statement in an if block, prior to actually calling `yield` for the first time. I had assumed that if it took that path, that it wouldn't be seen as a generator, and thus would never hit the link I linked to above. Apparently not, at least on Python 2.7.\r\n\r\nMaking this issue to remind us to investigate it a bit more (unless someone can immediately see what is wrong with the code).\r\n\r\nCurrently I think it probably will only affect the OpalKelly device code which has not been merged in yet. But it probably makes sense to fix whatever is wrong on the BLACS side rather than enforcing that you can't return prior to a yield in decorated device tab methods.", "markup": "markdown", "html": "<p>For methods decorated with our <code>define_state</code> decorator we queue work up in the worker process using the <code>yield</code> keyword. This means that the method is a generator.</p>\n<p>I seem to have hit a bug though where the method is detected as a generator, but doesn't actually ever yield, which then raises a <code>StopIteration</code> exception on <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/src/b41afcffa5e857fe8a15178520cf1765c69e6438/tab_base_classes.py#lines-707\" rel=\"nofollow\">this</a> line of code. </p>\n<p>The particular code that seems to be causing this is if you have a return statement in an if block, prior to actually calling <code>yield</code> for the first time. I had assumed that if it took that path, that it wouldn't be seen as a generator, and thus would never hit the link I linked to above. Apparently not, at least on Python 2.7.</p>\n<p>Making this issue to remind us to investigate it a bit more (unless someone can immediately see what is wrong with the code).</p>\n<p>Currently I think it probably will only affect the OpalKelly device code which has not been merged in yet. But it probably makes sense to fix whatever is wrong on the BLACS side rather than enforcing that you can't return prior to a yield in decorated device tab methods.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-09-27T04:13:44.383348+00:00", "milestone": null, "updated_on": "2018-09-27T04:13:44.383348+00:00", "type": "issue", "id": 49}