{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/54/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/54.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/54/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/54/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/54/be-able-to-check-remote-versions-of-blacs"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/54/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Be able to check remote versions (of BLACS and other components)", "component": null, "votes": 0, "watches": 1, "content": {"raw": "After PR #79, there is the possibility that BLACS will not work correctly with a remote worker due to the two running incompatible versions of BLACS.\r\n\r\nProviding strict backward compatibility is likely more effort than it's worth, but we need a way to at least identify the situation and tell the user about it so that they can upgrade BLACS on the affected machine.\r\n\r\nTo that end, BLACS workers should have a `check_version` method that calls `labscript_utils.check_version` to inspect the versions of arbitrary modules/components. BLACS should call it upon worker startup to ensure that BLACS itself is new enough, catching the AttributeError if the remote version is old enough that it doesn't even have the `check_version` method yet. It should then raise an error prompting the user to upgrade BLACS on the remote machine to the appropriate minimum version.\r\n\r\nThe method can then later be used to enforce version requirements of individual labscript devices - though before we do that, `labscript_utils.check_version` will need to learn to look at `__version__` attributes of arbitrary submodules (right now it only looks at top-level modules, since it tries to determine versions from package metadata rather than actually importing modules).\r\n\r\nNote that the error message from `check_version`, if it raises an exception, should be wrapped to say that the error happened on the remote computer, otherwise it can be quite confusing for the user, who won't be able to tell which machine the error applies to.\r\n\r\nThis should be implemented before the next release. Once this issue is migrated to github, we should add this issue to a release milestone.", "markup": "markdown", "html": "<p>After <a href=\"#!/labscript_suite/blacs/pull-requests/79/convert-filepaths-to-network-format\" rel=\"nofollow\" class=\"ap-connect-link\">PR #79</a>, there is the possibility that BLACS will not work correctly with a remote worker due to the two running incompatible versions of BLACS.</p>\n<p>Providing strict backward compatibility is likely more effort than it's worth, but we need a way to at least identify the situation and tell the user about it so that they can upgrade BLACS on the affected machine.</p>\n<p>To that end, BLACS workers should have a <code>check_version</code> method that calls <code>labscript_utils.check_version</code> to inspect the versions of arbitrary modules/components. BLACS should call it upon worker startup to ensure that BLACS itself is new enough, catching the AttributeError if the remote version is old enough that it doesn't even have the <code>check_version</code> method yet. It should then raise an error prompting the user to upgrade BLACS on the remote machine to the appropriate minimum version.</p>\n<p>The method can then later be used to enforce version requirements of individual labscript devices - though before we do that, <code>labscript_utils.check_version</code> will need to learn to look at <code>__version__</code> attributes of arbitrary submodules (right now it only looks at top-level modules, since it tries to determine versions from package metadata rather than actually importing modules).</p>\n<p>Note that the error message from <code>check_version</code>, if it raises an exception, should be wrapped to say that the error happened on the remote computer, otherwise it can be quite confusing for the user, who won't be able to tell which machine the error applies to.</p>\n<p>This should be implemented before the next release. Once this issue is migrated to github, we should add this issue to a release milestone.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "new", "version": null, "edited_on": null, "created_on": "2020-01-28T20:53:50.579239+00:00", "milestone": null, "updated_on": "2020-01-28T20:53:50.579239+00:00", "type": "issue", "id": 54}