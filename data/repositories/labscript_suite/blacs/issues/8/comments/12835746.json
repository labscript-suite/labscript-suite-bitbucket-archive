{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8/comments/12835746.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/8#comment-12835746"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8.json"}}, "type": "issue", "id": 8, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "'Compile and restart' improvements - making sure it can happen when other things are borked"}, "content": {"raw": "That sounds great!\n\nIf you want to make the QueueManager and AnalysisSubmission just the one plugin, so that they live together (if that is reasonable in the context of the plugin architecture), I won't complain. I have some ideas about how to make a more general, GUIless QueueManager and AnalysisSubmission class together, and would like at some point to write this to do everything that doesn't require a GUI or a connection table, and have BLACS subclass it and override methods to put GUI stuff and connection table stuff in where required.\n\nI basically want to make a class that can be instantiated in a process by itself and have multiple clients pulling shots from it, and can respond to command line or zmq instructions to pause, repeat, etc. The thinking is that this would allow a drop-in replacement for BLACS for the purposes of simulations using the labscript suite (an idea multiple people have had that seems more excellent by the minute).\n\nThis seems approximately equally as hard whether it comes before or after the BLACS changes we're discussing here, and I haven't sufficiently fleshed out the details of how a bunch of things should work - but I'm fairly confident it's easier if the QueueManager and AnalysisSubmission functionality is tightly bound. What I think might make sense is for the AnalysisSubmission to remain its own class as it is now, but for the QueueManager to be a plugin and the QueueManager class to instantiate, own, and interact with an AnalysisSubmission instance. Nobody else needs to interact with it, so it should be hidden from them, and I think it makes sense for it to be considered a component of the Queue. \n\nSo that would be my only suggestion!\n\nBut you're more familiar with the plugin architecture (I am not familiar at all), so if you think it makes more sense for them to be separate, I'm happy with that too.", "markup": "markdown", "html": "<p>That sounds great!</p>\n<p>If you want to make the QueueManager and AnalysisSubmission just the one plugin, so that they live together (if that is reasonable in the context of the plugin architecture), I won't complain. I have some ideas about how to make a more general, GUIless QueueManager and AnalysisSubmission class together, and would like at some point to write this to do everything that doesn't require a GUI or a connection table, and have BLACS subclass it and override methods to put GUI stuff and connection table stuff in where required.</p>\n<p>I basically want to make a class that can be instantiated in a process by itself and have multiple clients pulling shots from it, and can respond to command line or zmq instructions to pause, repeat, etc. The thinking is that this would allow a drop-in replacement for BLACS for the purposes of simulations using the labscript suite (an idea multiple people have had that seems more excellent by the minute).</p>\n<p>This seems approximately equally as hard whether it comes before or after the BLACS changes we're discussing here, and I haven't sufficiently fleshed out the details of how a bunch of things should work - but I'm fairly confident it's easier if the QueueManager and AnalysisSubmission functionality is tightly bound. What I think might make sense is for the AnalysisSubmission to remain its own class as it is now, but for the QueueManager to be a plugin and the QueueManager class to instantiate, own, and interact with an AnalysisSubmission instance. Nobody else needs to interact with it, so it should be hidden from them, and I think it makes sense for it to be considered a component of the Queue. </p>\n<p>So that would be my only suggestion!</p>\n<p>But you're more familiar with the plugin architecture (I am not familiar at all), so if you think it makes more sense for them to be separate, I'm happy with that too.</p>", "type": "rendered"}, "created_on": "2014-10-07T23:56:24.227907+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 12835746}