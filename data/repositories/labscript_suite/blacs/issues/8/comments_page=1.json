{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8/comments/12787355.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/8#comment-12787355"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8.json"}}, "type": "issue", "id": 8, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "'Compile and restart' improvements - making sure it can happen when other things are borked"}, "content": {"raw": "I don't think this will be too hard to do. \n\nFirstly, blacs/compile_and_restart.py should be relocated to blacs/plugins/connection_table/ where the rest of the code lives for recompiling the connection table.\n\nThen it should just be a matter of adding a __main__.py file to that dir, instantiating a labscriptutils.settings.Settings class, instantiating the plugin (which creates the settings page), and modifying the CompileAndRestart window to include a button to open a Settings window...\n\nActually, or second thought, it might be easier to just make BLACS start without needing a working connection table. We could show no tabs and a message suggesting recompilation if the connection table is missing of invalid. Would that achieve the same ends?", "markup": "markdown", "html": "<p>I don't think this will be too hard to do. </p>\n<p>Firstly, blacs/compile_and_restart.py should be relocated to blacs/plugins/connection_table/ where the rest of the code lives for recompiling the connection table.</p>\n<p>Then it should just be a matter of adding a <strong>main</strong>.py file to that dir, instantiating a labscriptutils.settings.Settings class, instantiating the plugin (which creates the settings page), and modifying the CompileAndRestart window to include a button to open a Settings window...</p>\n<p>Actually, or second thought, it might be easier to just make BLACS start without needing a working connection table. We could show no tabs and a message suggesting recompilation if the connection table is missing of invalid. Would that achieve the same ends?</p>", "type": "rendered"}, "created_on": "2014-10-06T01:55:24.767752+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 12787355}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8/comments/12787431.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/8#comment-12787431"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8.json"}}, "type": "issue", "id": 8, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "'Compile and restart' improvements - making sure it can happen when other things are borked"}, "content": {"raw": "Yep, pretty much. I only suggested it be standalone as an addition, but having it always accessible so long as BLACS can start totally gets us what we want.\n\nThis would mean catching any errors that propagate from the connection table, even if the connection table itself looks fine when checked. Basically, all of BLACS' instantiation should be in a `try: except:`, and the error displayed in the GUI, maybe blanking out any tabs that did initialise correctly and displaying the error there.", "markup": "markdown", "html": "<p>Yep, pretty much. I only suggested it be standalone as an addition, but having it always accessible so long as BLACS can start totally gets us what we want.</p>\n<p>This would mean catching any errors that propagate from the connection table, even if the connection table itself looks fine when checked. Basically, all of BLACS' instantiation should be in a <code>try: except:</code>, and the error displayed in the GUI, maybe blanking out any tabs that did initialise correctly and displaying the error there.</p>", "type": "rendered"}, "created_on": "2014-10-06T02:07:01.945603+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 12787431}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8/comments/12790448.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/8#comment-12790448"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8.json"}}, "type": "issue", "id": 8, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "'Compile and restart' improvements - making sure it can happen when other things are borked"}, "content": {"raw": "So, question about desired behaviour.\n\nIf a Tab fails to load, do we wipe the saved front panel (and other) settings for that instance of the device or keep it around in the labconfig/<pcname>_BLACS.h5 file indefinitely until the device loads correctly.\n\nI'm in two minds about this. Sometimes front panel state is important to keep (eg flags need to stay high) and if a device tab fails to be created, you don't really want to throw out the front panel state and other settings just because you made a small typo in the DeviceTab class. Alternatively, if it is the saved settings preventing the tab from being created, you do want them forgetten!\n\nJust thought of a potential solution as I was typing this:\n\n* BLACS starts, presents the user with an OutputBox which shows the log file as the rest of BLACS loads.\n* We load the FrontPanelSettings and instantiate the plugins. As long as it has got this far, the user can recompile the connection table\n* we then create the device tabs, and if any of these fail, None of the tabs are shown. The users is prompted to fix the problem with the code, or remove the offending device from their connection table. FrontPanelSettings are not saved on exit in this case (so no settings will be lost for devices that failed to instantiate), but the user is also presented with a button that will wipe FrontPanelSettings (for the failed devices) if they suspect that is the problem.\n\nI probably need to make the QueueManager and AnalysisSubmission classes plugins to make this robust (as I need to be sure the current order I'm instantiating those objects with respect to the Plugins doesn't matter). This would move the ExperimentServer class to the QueueManager plugin, which is probably a wise separation of code anyway! It also will result in BLACS being far more modular (in that it will be easy for someone to replace the queuemanager/analysis submission) with a better/different version.\n\nThis will probably require a major version number bump as the interface for plugins may need to change in a backwards incompatible way.", "markup": "markdown", "html": "<p>So, question about desired behaviour.</p>\n<p>If a Tab fails to load, do we wipe the saved front panel (and other) settings for that instance of the device or keep it around in the labconfig/&lt;pcname&gt;_BLACS.h5 file indefinitely until the device loads correctly.</p>\n<p>I'm in two minds about this. Sometimes front panel state is important to keep (eg flags need to stay high) and if a device tab fails to be created, you don't really want to throw out the front panel state and other settings just because you made a small typo in the DeviceTab class. Alternatively, if it is the saved settings preventing the tab from being created, you do want them forgetten!</p>\n<p>Just thought of a potential solution as I was typing this:</p>\n<ul>\n<li>BLACS starts, presents the user with an OutputBox which shows the log file as the rest of BLACS loads.</li>\n<li>We load the FrontPanelSettings and instantiate the plugins. As long as it has got this far, the user can recompile the connection table</li>\n<li>we then create the device tabs, and if any of these fail, None of the tabs are shown. The users is prompted to fix the problem with the code, or remove the offending device from their connection table. FrontPanelSettings are not saved on exit in this case (so no settings will be lost for devices that failed to instantiate), but the user is also presented with a button that will wipe FrontPanelSettings (for the failed devices) if they suspect that is the problem.</li>\n</ul>\n<p>I probably need to make the QueueManager and AnalysisSubmission classes plugins to make this robust (as I need to be sure the current order I'm instantiating those objects with respect to the Plugins doesn't matter). This would move the ExperimentServer class to the QueueManager plugin, which is probably a wise separation of code anyway! It also will result in BLACS being far more modular (in that it will be easy for someone to replace the queuemanager/analysis submission) with a better/different version.</p>\n<p>This will probably require a major version number bump as the interface for plugins may need to change in a backwards incompatible way.</p>", "type": "rendered"}, "created_on": "2014-10-06T07:19:27.862451+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 12790448}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8/comments/12835342.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/8#comment-12835342"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8.json"}}, "type": "issue", "id": 8, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "'Compile and restart' improvements - making sure it can happen when other things are borked"}, "content": {"raw": "Well if there are no objection to that solution, I'll go ahead and do it sometime soon", "markup": "markdown", "html": "<p>Well if there are no objection to that solution, I'll go ahead and do it sometime soon</p>", "type": "rendered"}, "created_on": "2014-10-07T23:07:32.719182+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 12835342}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8/comments/12835746.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/8#comment-12835746"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8.json"}}, "type": "issue", "id": 8, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "'Compile and restart' improvements - making sure it can happen when other things are borked"}, "content": {"raw": "That sounds great!\n\nIf you want to make the QueueManager and AnalysisSubmission just the one plugin, so that they live together (if that is reasonable in the context of the plugin architecture), I won't complain. I have some ideas about how to make a more general, GUIless QueueManager and AnalysisSubmission class together, and would like at some point to write this to do everything that doesn't require a GUI or a connection table, and have BLACS subclass it and override methods to put GUI stuff and connection table stuff in where required.\n\nI basically want to make a class that can be instantiated in a process by itself and have multiple clients pulling shots from it, and can respond to command line or zmq instructions to pause, repeat, etc. The thinking is that this would allow a drop-in replacement for BLACS for the purposes of simulations using the labscript suite (an idea multiple people have had that seems more excellent by the minute).\n\nThis seems approximately equally as hard whether it comes before or after the BLACS changes we're discussing here, and I haven't sufficiently fleshed out the details of how a bunch of things should work - but I'm fairly confident it's easier if the QueueManager and AnalysisSubmission functionality is tightly bound. What I think might make sense is for the AnalysisSubmission to remain its own class as it is now, but for the QueueManager to be a plugin and the QueueManager class to instantiate, own, and interact with an AnalysisSubmission instance. Nobody else needs to interact with it, so it should be hidden from them, and I think it makes sense for it to be considered a component of the Queue. \n\nSo that would be my only suggestion!\n\nBut you're more familiar with the plugin architecture (I am not familiar at all), so if you think it makes more sense for them to be separate, I'm happy with that too.", "markup": "markdown", "html": "<p>That sounds great!</p>\n<p>If you want to make the QueueManager and AnalysisSubmission just the one plugin, so that they live together (if that is reasonable in the context of the plugin architecture), I won't complain. I have some ideas about how to make a more general, GUIless QueueManager and AnalysisSubmission class together, and would like at some point to write this to do everything that doesn't require a GUI or a connection table, and have BLACS subclass it and override methods to put GUI stuff and connection table stuff in where required.</p>\n<p>I basically want to make a class that can be instantiated in a process by itself and have multiple clients pulling shots from it, and can respond to command line or zmq instructions to pause, repeat, etc. The thinking is that this would allow a drop-in replacement for BLACS for the purposes of simulations using the labscript suite (an idea multiple people have had that seems more excellent by the minute).</p>\n<p>This seems approximately equally as hard whether it comes before or after the BLACS changes we're discussing here, and I haven't sufficiently fleshed out the details of how a bunch of things should work - but I'm fairly confident it's easier if the QueueManager and AnalysisSubmission functionality is tightly bound. What I think might make sense is for the AnalysisSubmission to remain its own class as it is now, but for the QueueManager to be a plugin and the QueueManager class to instantiate, own, and interact with an AnalysisSubmission instance. Nobody else needs to interact with it, so it should be hidden from them, and I think it makes sense for it to be considered a component of the Queue. </p>\n<p>So that would be my only suggestion!</p>\n<p>But you're more familiar with the plugin architecture (I am not familiar at all), so if you think it makes more sense for them to be separate, I'm happy with that too.</p>", "type": "rendered"}, "created_on": "2014-10-07T23:56:24.227907+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 12835746}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8/comments/41154913.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/8#comment-41154913"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8.json"}}, "type": "issue", "id": 8, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "'Compile and restart' improvements - making sure it can happen when other things are borked"}, "content": {"raw": "Issue #30 was marked as a duplicate of this issue.", "markup": "markdown", "html": "<p>Issue <a href=\"#!/labscript_suite/blacs/issues/30/better-handling-of-no-connection-table-on\" rel=\"nofollow\" title=\"Better handling of no connection table on start\" class=\"ap-connect-link\"><s>#30</s></a> was marked as a duplicate of this issue.</p>", "type": "rendered"}, "created_on": "2017-11-12T00:20:08.718738+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 41154913}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8/comments/43984958.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/8#comment-43984958"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8.json"}}, "type": "issue", "id": 8, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "'Compile and restart' improvements - making sure it can happen when other things are borked"}, "content": {"raw": "Ok this is annoying me enough in the last time that I'll try and tackle this issue today here is my plan:\n\n1. Modify ConnectionTable to return a working empty ConnectionTable if something goes wrong in the constructor. And raise the Exception in a thread.\n\n2. Modify BLACS to that if a device tab creation fails the Device is removed from the ConnectionTable object and raise exception in a thread.\n\nThis should allow BLACS to start with a broken, empty and non existing ConnectionTable. It should also allow for broken device tab classes to not influence BLACS more than needed.\n\nAnything I overlooked?", "markup": "markdown", "html": "<p>Ok this is annoying me enough in the last time that I'll try and tackle this issue today here is my plan:</p>\n<ol>\n<li>\n<p>Modify ConnectionTable to return a working empty ConnectionTable if something goes wrong in the constructor. And raise the Exception in a thread.</p>\n</li>\n<li>\n<p>Modify BLACS to that if a device tab creation fails the Device is removed from the ConnectionTable object and raise exception in a thread.</p>\n</li>\n</ol>\n<p>This should allow BLACS to start with a broken, empty and non existing ConnectionTable. It should also allow for broken device tab classes to not influence BLACS more than needed.</p>\n<p>Anything I overlooked?</p>", "type": "rendered"}, "created_on": "2018-03-18T10:09:35.245063+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 43984958}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8/comments/43985012.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/8#comment-43985012"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8.json"}}, "type": "issue", "id": 8, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "'Compile and restart' improvements - making sure it can happen when other things are borked"}, "content": {"raw": "That sounds pretty great!\n\nOne thing that comes to mind is that if a tab is broken and doesn't load, and then you fix the problem and restart BLACS, the tab's save data from before the breakage will be lost - because BLACS only saves data from the current tabs at shutdown, and the broken tab will be absent.\n\nThis could be fixed by, when the tab fails to load, storing its save data somewhere (as in some instance variable), and re-adding it to the data to be saved when BLACS is saving tab save data to file at shutdown.\n\nA similar thing applies if connections.py returns an empty connection table because of an exception. The same solution applies, but for every tab instead of just one.", "markup": "markdown", "html": "<p>That sounds pretty great!</p>\n<p>One thing that comes to mind is that if a tab is broken and doesn't load, and then you fix the problem and restart BLACS, the tab's save data from before the breakage will be lost - because BLACS only saves data from the current tabs at shutdown, and the broken tab will be absent.</p>\n<p>This could be fixed by, when the tab fails to load, storing its save data somewhere (as in some instance variable), and re-adding it to the data to be saved when BLACS is saving tab save data to file at shutdown.</p>\n<p>A similar thing applies if connections.py returns an empty connection table because of an exception. The same solution applies, but for every tab instead of just one.</p>", "type": "rendered"}, "created_on": "2018-03-18T10:20:46.962062+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 43985012}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8/comments/43985183.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/8#comment-43985183"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8.json"}}, "type": "issue", "id": 8, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "'Compile and restart' improvements - making sure it can happen when other things are borked"}, "content": {"raw": "I see Phil was in two minds about whether the save data should be kept.\n\nI suspect it will be rare that save data prevents a tab from starting, but a further improvement to that problem would be to pop up a dialog at shutdown \"save data from broken tabs?\", with a listview with checkboxes for each tab for whether you want to save their data or not.\n\nBut I don't think that should be considered essential for the changes you're proposing to get merged if you make them.", "markup": "markdown", "html": "<p>I see Phil was in two minds about whether the save data should be kept.</p>\n<p>I suspect it will be rare that save data prevents a tab from starting, but a further improvement to that problem would be to pop up a dialog at shutdown \"save data from broken tabs?\", with a listview with checkboxes for each tab for whether you want to save their data or not.</p>\n<p>But I don't think that should be considered essential for the changes you're proposing to get merged if you make them.</p>", "type": "rendered"}, "created_on": "2018-03-18T10:48:13.200634+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 43985183}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8/comments/43985194.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/8#comment-43985194"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8.json"}}, "type": "issue", "id": 8, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "'Compile and restart' improvements - making sure it can happen when other things are borked"}, "content": {"raw": "Sure I'm almost done with the saving and restoring of broken data I'll add a popup asking for permission before saving.", "markup": "markdown", "html": "<p>Sure I'm almost done with the saving and restoring of broken data I'll add a popup asking for permission before saving.</p>", "type": "rendered"}, "created_on": "2018-03-18T10:50:15.079834+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 43985194}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8/comments/44209416.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/8#comment-44209416"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8.json"}}, "type": "issue", "id": 8, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "'Compile and restart' improvements - making sure it can happen when other things are borked"}, "content": {"raw": "This should have been resolved by commit 138bba4", "markup": "markdown", "html": "<p>This should have been resolved by commit <a href=\"#!/labscript_suite/blacs/commits/138bba4\" rel=\"nofollow\" class=\"ap-connect-link\">138bba4</a></p>", "type": "rendered"}, "created_on": "2018-03-27T20:40:07.653948+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 44209416}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8/comments/44211767.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/8#comment-44211767"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/issues/8.json"}}, "type": "issue", "id": 8, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "title": "'Compile and restart' improvements - making sure it can happen when other things are borked"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2018-03-27T23:13:20.458524+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 44211767}], "page": 1, "size": 12}