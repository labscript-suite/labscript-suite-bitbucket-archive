{"pagelen": 100, "values": [{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/1/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/1.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/1/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/1/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/1/compiling-a-connection-table-file-silently"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/1/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Compiling a connection table file silently fails if the h5 file to be overwritten is open in HDFview", "component": null, "votes": 0, "watches": 1, "content": {"raw": "BLACS seemingly fails to compile a new connection table after saying that it has successfully compiled the new table and restarted.\r\nThe issue only occurs when the connectiontable.h5 which is to be overwritten is open in another program (in my case on the same computer as BLACS, haven't tried opening on another computer).\r\n\r\nAn exception is raised, and the traceback is as follow:\r\n\r\n```\r\n#!python\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\pythonlib\\labscript_utils\\excepthook\\__init__.py\", line 32, in run\r\n    run_old(*args, **kwargs)\r\n  File \"C:\\Python27\\lib\\threading.py\", line 483, in run\r\n    self.__target(*self.__args, **self.__kwargs)\r\n  File \"C:\\pythonlib\\runmanager\\__init__.py\", line 552, in compile_labscript_async\r\n    done_callback(data)\r\n  File \"build\\bdist.win32\\egg\\qtutils\\invoke_in_main.py\", line 100, in f\r\n    return inmain(fn, *args, **kwargs)\r\n  File \"build\\bdist.win32\\egg\\qtutils\\invoke_in_main.py\", line 63, in inmain\r\n    return get_inmain_result(in_main_later(fn,False,*args,**kwargs))\r\n  File \"build\\bdist.win32\\egg\\qtutils\\invoke_in_main.py\", line 42, in event\r\n    result = event.fn(*event.args, **event.kwargs)\r\n  File \"C:\\pythonlib\\blacs\\compile_and_restart.py\", line 90, in finished_compiling\r\n    self.output_box.queue.put(['stderr','Couldn\\'t replace existing connection table h5 file. Is it open in another process?'])\r\nAttributeError: 'OutputBox' object has no attribute 'queue'\r\n```\r\n\r\n", "markup": "markdown", "html": "<p>BLACS seemingly fails to compile a new connection table after saying that it has successfully compiled the new table and restarted.\nThe issue only occurs when the connectiontable.h5 which is to be overwritten is open in another program (in my case on the same computer as BLACS, haven't tried opening on another computer).</p>\n<p>An exception is raised, and the traceback is as follow:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\pythonlib\\labscript_utils\\excepthook\\__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">run</span>\n    <span class=\"n\">run_old</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\Python27\\lib</span><span class=\"se\">\\t</span><span class=\"s2\">hreading.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">483</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">run</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__target</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\pythonlib</span><span class=\"se\">\\r</span><span class=\"s2\">unmanager\\__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">552</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">compile_labscript_async</span>\n    <span class=\"n\">done_callback</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;build</span><span class=\"se\">\\b</span><span class=\"s2\">dist.win32\\egg\\qtutils\\invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">f</span>\n    <span class=\"k\">return</span> <span class=\"n\">inmain</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;build</span><span class=\"se\">\\b</span><span class=\"s2\">dist.win32\\egg\\qtutils\\invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">63</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">inmain</span>\n    <span class=\"k\">return</span> <span class=\"n\">get_inmain_result</span><span class=\"p\">(</span><span class=\"n\">in_main_later</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"p\">,</span><span class=\"bp\">False</span><span class=\"p\">,</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">))</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;build</span><span class=\"se\">\\b</span><span class=\"s2\">dist.win32\\egg\\qtutils\\invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">42</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">event</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">fn</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\pythonlib</span><span class=\"se\">\\b</span><span class=\"s2\">lacs\\compile_and_restart.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">finished_compiling</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">output_box</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">([</span><span class=\"s1\">&#39;stderr&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;Couldn</span><span class=\"se\">\\&#39;</span><span class=\"s1\">t replace existing connection table h5 file. Is it open in another process?&#39;</span><span class=\"p\">])</span>\n<span class=\"ne\">AttributeError</span><span class=\"p\">:</span> <span class=\"s1\">&#39;OutputBox&#39;</span> <span class=\"nb\">object</span> <span class=\"n\">has</span> <span class=\"n\">no</span> <span class=\"n\">attribute</span> <span class=\"s1\">&#39;queue&#39;</span>\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-05-07T07:22:52.469927+00:00", "milestone": null, "updated_on": "2014-05-07T07:32:07.637400+00:00", "type": "issue", "id": 1}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/2/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/2.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/2/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/2/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/2/address-in-use-error-when-restarting"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/2/vote"}}, "reporter": {"display_name": "Martijn Jasperse", "uuid": "{d9095b37-b2ca-492e-a6fb-1fa87879a9ce}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd9095b37-b2ca-492e-a6fb-1fa87879a9ce%7D"}, "html": {"href": "https://bitbucket.org/%7Bd9095b37-b2ca-492e-a6fb-1fa87879a9ce%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ec763c33972c862b3900c8952dd11101d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMJ-3.png"}}, "nickname": "Martijn Jasperse", "type": "user", "account_id": "557058:940c20da-c736-4e3a-a30f-58224616fb0a"}, "title": "\"Address in use\" error when restarting", "component": null, "votes": 0, "watches": 3, "content": {"raw": "Restarting BLACS after recompiling the connection table always produces a ZMQError with the following trace:\r\n\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"c:\\pythonlib\\BLACS\\main.pyw\", line 669, in <module>\r\n    experiment_server = ExperimentServer(port)\r\n  File \"C:\\Python27\\lib\\site-packages\\zprocess-1.1.2-py2.7.egg\\zprocess\\__init__.py\", line 52, in __init__\r\n    self.sock.bind('tcp://0.0.0.0:%s'%str(self.port))\r\n  File \"socket.pyx\", line 447, in zmq.core.socket.Socket.bind (zmq\\core\\socket.c:4312)\r\nZMQError: Address in use\r\n\r\n```", "markup": "markdown", "html": "<p>Restarting BLACS after recompiling the connection table always produces a ZMQError with the following trace:</p>\n<div class=\"codehilite\"><pre><span></span>Traceback (most recent call last):\n  File &quot;c:\\pythonlib\\BLACS\\main.pyw&quot;, line 669, in &lt;module&gt;\n    experiment_server = ExperimentServer(port)\n  File &quot;C:\\Python27\\lib\\site-packages\\zprocess-1.1.2-py2.7.egg\\zprocess\\__init__.py&quot;, line 52, in __init__\n    self.sock.bind(&#39;tcp://0.0.0.0:%s&#39;%str(self.port))\n  File &quot;socket.pyx&quot;, line 447, in zmq.core.socket.Socket.bind (zmq\\core\\socket.c:4312)\nZMQError: Address in use\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-09-22T07:49:22.203053+00:00", "milestone": null, "updated_on": "2019-12-12T14:38:00.993601+00:00", "type": "issue", "id": 2}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/3/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/3.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/3/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/3/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/3/rfblaster-doesnt-allow-frequencies-05mhz"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/3/vote"}}, "reporter": {"display_name": "Martijn Jasperse", "uuid": "{d9095b37-b2ca-492e-a6fb-1fa87879a9ce}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd9095b37-b2ca-492e-a6fb-1fa87879a9ce%7D"}, "html": {"href": "https://bitbucket.org/%7Bd9095b37-b2ca-492e-a6fb-1fa87879a9ce%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ec763c33972c862b3900c8952dd11101d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMJ-3.png"}}, "nickname": "Martijn Jasperse", "type": "user", "account_id": "557058:940c20da-c736-4e3a-a30f-58224616fb0a"}, "title": "rfblaster doesn't allow frequencies <0.5MHz in manual mode", "component": null, "votes": 0, "watches": 2, "content": {"raw": "In manual mode, any frequency <0.5MHz is set to 0.5MHz.\r\n\r\nIf the rfblaster is programmed to such a frequency through the web interface, it works, but BLACS reports the frequency as 0.5MHz regardless.\r\n\r\nMinimum value on the input box maybe?", "markup": "markdown", "html": "<p>In manual mode, any frequency &lt;0.5MHz is set to 0.5MHz.</p>\n<p>If the rfblaster is programmed to such a frequency through the web interface, it works, but BLACS reports the frequency as 0.5MHz regardless.</p>\n<p>Minimum value on the input box maybe?</p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": null, "edited_on": null, "created_on": "2014-09-24T04:28:16.148156+00:00", "milestone": null, "updated_on": "2014-09-30T10:35:25.707121+00:00", "type": "issue", "id": 3}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/4/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/4.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/4/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/4/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/4/blacs-should-check-the-labscript-version"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/4/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "BLACS should check the labscript version used to compile the connection table", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Ran into a bug today where I tried to open BLACS (1.1.0-dev/gated-clocks) with a connection table compiled pre gated-clocks. BLACS threw an obtuse error about a variable being a string object and not having the 'name' attribute (hint: it shouldn't have been a string!)\r\n\r\nI've fixed the specific issue (PulseBlaster code was overriding a method and returning a non-empty string) but it occurs to me that if you launch a newly upgraded version of BLACS/labscript, it should probably prompt you to update and recompile the connection table before launching BLACS. \r\n\r\nOf course, all our code should be backwards compatible to some degree (BLACS should always be able to start) but the thing that won't be is the saving/restoring BLACS front panel state. A bunch of outputs may get reset to 0 if they can't be found in the connection table because the hierarchy of devices has changed (as it did in gated-clocks). This could be a pain for people (eg for us, PulseBlasters trigger on a digital low)\r\n\r\nShould we do this checking and prompt for recompilation, or classify this as a \"wont fix\" and make people deal with the consequences for the few times where the devices hierarchy of labscript changes significantly?", "markup": "markdown", "html": "<p>Ran into a bug today where I tried to open BLACS (1.1.0-dev/gated-clocks) with a connection table compiled pre gated-clocks. BLACS threw an obtuse error about a variable being a string object and not having the 'name' attribute (hint: it shouldn't have been a string!)</p>\n<p>I've fixed the specific issue (PulseBlaster code was overriding a method and returning a non-empty string) but it occurs to me that if you launch a newly upgraded version of BLACS/labscript, it should probably prompt you to update and recompile the connection table before launching BLACS. </p>\n<p>Of course, all our code should be backwards compatible to some degree (BLACS should always be able to start) but the thing that won't be is the saving/restoring BLACS front panel state. A bunch of outputs may get reset to 0 if they can't be found in the connection table because the hierarchy of devices has changed (as it did in gated-clocks). This could be a pain for people (eg for us, PulseBlasters trigger on a digital low)</p>\n<p>Should we do this checking and prompt for recompilation, or classify this as a \"wont fix\" and make people deal with the consequences for the few times where the devices hierarchy of labscript changes significantly?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2014-10-02T05:37:17.442434+00:00", "milestone": null, "updated_on": "2014-10-02T05:37:17.442434+00:00", "type": "issue", "id": 4}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/5/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/5.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/5/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/5/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/5/appid-stuff-not-set-correctly-after"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/5/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "AppID stuff not set correctly after compile and restart", "component": null, "votes": 0, "watches": 1, "content": {"raw": "After compile and restart, BLACS gets grouped together with runamanger in the taskbar in Windows 7.", "markup": "markdown", "html": "<p>After compile and restart, BLACS gets grouped together with runamanger in the taskbar in Windows 7.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "new", "version": null, "edited_on": null, "created_on": "2014-10-02T17:57:39.530270+00:00", "milestone": null, "updated_on": "2017-06-14T23:23:45.549673+00:00", "type": "issue", "id": 5}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/6/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/6.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/6/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/6/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/6/compile-and-restart-should-say-its-message"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/6/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Compile and restart should say its message in the output box", "component": null, "votes": 0, "watches": 1, "content": {"raw": "It is hard to see the 'success' up the top there. The message should be at the bottom of the outputbox.", "markup": "markdown", "html": "<p>It is hard to see the 'success' up the top there. The message should be at the bottom of the outputbox.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-10-03T22:19:50.806692+00:00", "milestone": null, "updated_on": "2017-08-22T23:39:12.517300+00:00", "type": "issue", "id": 6}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/7/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/7.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/7/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/7/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/7/default-file-open-paths"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/7/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Default file open paths", "component": null, "votes": 0, "watches": 1, "content": {"raw": "BLACS should open the QFileDialog in the appropriate folders when the user is selecting globals files to use with connection table importing, or unit conversion files to watch.", "markup": "markdown", "html": "<p>BLACS should open the QFileDialog in the appropriate folders when the user is selecting globals files to use with connection table importing, or unit conversion files to watch.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2014-10-03T22:47:04.758491+00:00", "milestone": null, "updated_on": "2014-10-03T22:47:18.363511+00:00", "type": "issue", "id": 7}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/8/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/8.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/8/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/8/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/8/compile-and-restart-improvements-making"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/8/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "'Compile and restart' improvements - making sure it can happen when other things are borked", "component": null, "votes": 0, "watches": 3, "content": {"raw": "If there's anything wrong with the connection table, or really, if there is really a any of a wide range of failures during startup, the GUI should still pop up, the error displayed somewhere and the user have the possibility of (and be direct to consider) opening the 'compile and restart' dialog.\r\n\r\nThis option should be available even if BLACS has serious problems initialising, because some of these problems can be due to mismatches between connection table and BLACS tab code. For example, today I modified the Novatech's `BLACS_connection` to include the serial baud rate.  I made it backward compatible (don't worry!), but before I did I had a connection table that didn't match what the BLACS tab expected. I couldn't start BLACS and I couldn't recompile the connection table except through runmanager. This has come up a lot in the wild if I understand correctly. So we need to just allow maximum breakage whilst still having the possibility of getting to that dialog.\r\n\r\nOf course we should also do some basic checks for more obvious issues, like the connection table .py file doesn't exist (I think I want to copy a template to the given path in this case), or the h5 file doesn't exist (definitely want to bring up compile window in this case, probably with a message about 'do the first compile of this connection table').\r\n\r\nWe will also need the setting of what globals files to use to use in compilation to be available.\r\n\r\nIs it much work to make `compile_and_restart` work standalone, but with an extra button to pop up the settings dialog for selecting globals? That button could be there even when the compile dialog is started normally from within BLACS - nothing wrong with having an extra way to get to the same dialog box.\r\n\r\nI know it used to work standalone as a test. If we were to make it actually standalone we'd need it to know that it was standalone and not offer to restart BLACS (and look up the .py and .h5 files from labconfig, if it doesn't already do so).\r\n\r\nThen we could add another shortcut to the labscript install folder, something like 'connection table compiler', that would just shortcut to `python -m blacs.compile_and_restart --compile-standalone` or something. We could direct users to use this to compile their connection table if things were broken.\r\n\r\nIn fact, if we'd rather not fix anything about BLACS startup, this alone would probably be satisfactory.", "markup": "markdown", "html": "<p>If there's anything wrong with the connection table, or really, if there is really a any of a wide range of failures during startup, the GUI should still pop up, the error displayed somewhere and the user have the possibility of (and be direct to consider) opening the 'compile and restart' dialog.</p>\n<p>This option should be available even if BLACS has serious problems initialising, because some of these problems can be due to mismatches between connection table and BLACS tab code. For example, today I modified the Novatech's <code>BLACS_connection</code> to include the serial baud rate.  I made it backward compatible (don't worry!), but before I did I had a connection table that didn't match what the BLACS tab expected. I couldn't start BLACS and I couldn't recompile the connection table except through runmanager. This has come up a lot in the wild if I understand correctly. So we need to just allow maximum breakage whilst still having the possibility of getting to that dialog.</p>\n<p>Of course we should also do some basic checks for more obvious issues, like the connection table .py file doesn't exist (I think I want to copy a template to the given path in this case), or the h5 file doesn't exist (definitely want to bring up compile window in this case, probably with a message about 'do the first compile of this connection table').</p>\n<p>We will also need the setting of what globals files to use to use in compilation to be available.</p>\n<p>Is it much work to make <code>compile_and_restart</code> work standalone, but with an extra button to pop up the settings dialog for selecting globals? That button could be there even when the compile dialog is started normally from within BLACS - nothing wrong with having an extra way to get to the same dialog box.</p>\n<p>I know it used to work standalone as a test. If we were to make it actually standalone we'd need it to know that it was standalone and not offer to restart BLACS (and look up the .py and .h5 files from labconfig, if it doesn't already do so).</p>\n<p>Then we could add another shortcut to the labscript install folder, something like 'connection table compiler', that would just shortcut to <code>python -m blacs.compile_and_restart --compile-standalone</code> or something. We could direct users to use this to compile their connection table if things were broken.</p>\n<p>In fact, if we'd rather not fix anything about BLACS startup, this alone would probably be satisfactory.</p>", "type": "rendered"}, "assignee": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-10-04T04:22:35.639809+00:00", "milestone": null, "updated_on": "2018-03-27T23:13:20.436491+00:00", "type": "issue", "id": 8}, {"priority": "blocker", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/9/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/9.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/9/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/9/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/9/b-acs-wont-start-labscript_utils-version"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/9/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "B:ACS won't start (labscript_utils version incorrect)", "component": null, "votes": 0, "watches": 2, "content": {"raw": "After updating everything to the latest tagged release, BLACS refuses to start because it requires labscript_utils version >= 1.1 and < 2.0 (we are now on 2.0).", "markup": "markdown", "html": "<p>After updating everything to the latest tagged release, BLACS refuses to start because it requires labscript_utils version &gt;= 1.1 and &lt; 2.0 (we are now on 2.0).</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-10-06T02:29:00.566396+00:00", "milestone": null, "updated_on": "2014-10-06T02:37:30.993763+00:00", "type": "issue", "id": 9}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/10/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/10.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/10/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/10/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/10/tab-icons-to-display-device-state"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/10/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Tab icons to display device state", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Back in the GTK version of BLACS we had icons on each tab to tell you if it was ok or not, and when it was being programmed. They were left out of the qt re-write because it was non-trivial to implement. Since we've learnt more about qt in the runmanager and lyse ports, it would be good to put some icons in BLACS again. This helps to let you quickly glance and see which devices are still transitioning to buffered if it is taking a long time.\r\nThere should be a different icon for each possible state of the device (as reported in the footer of the tab).", "markup": "markdown", "html": "<p>Back in the GTK version of BLACS we had icons on each tab to tell you if it was ok or not, and when it was being programmed. They were left out of the qt re-write because it was non-trivial to implement. Since we've learnt more about qt in the runmanager and lyse ports, it would be good to put some icons in BLACS again. This helps to let you quickly glance and see which devices are still transitioning to buffered if it is taking a long time.\nThere should be a different icon for each possible state of the device (as reported in the footer of the tab).</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-06-12T06:53:14.157058+00:00", "milestone": null, "updated_on": "2017-06-16T07:05:00.248083+00:00", "type": "issue", "id": 10}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/11/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/11.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/11/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/11/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/11/queue-does-not-have-horizontal-scrollbar"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/11/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Queue does not have horizontal scrollbar", "component": null, "votes": 0, "watches": 3, "content": {"raw": "The queue does not have a horizontal scrollbar, meaning that the size of the box has to be adjusted to see the end of long file names. This means that the queue ends up taking up much more space on the screen than it needs to, since typically the most important part of the file name (i.e. shot number within a sequence or repeat number) is at the end.", "markup": "markdown", "html": "<p>The queue does not have a horizontal scrollbar, meaning that the size of the box has to be adjusted to see the end of long file names. This means that the queue ends up taking up much more space on the screen than it needs to, since typically the most important part of the file name (i.e. shot number within a sequence or repeat number) is at the end.</p>", "type": "rendered"}, "assignee": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-08-10T01:30:19.063804+00:00", "milestone": null, "updated_on": "2015-08-12T02:15:26.874122+00:00", "type": "issue", "id": 11}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/12/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/12.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/12/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/12/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/12/error-not-handled-well-during-connection"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/12/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Error not handled well during connection table recompile", "component": null, "votes": 0, "watches": 3, "content": {"raw": "Today when attempting to have BLACS recompile my connection table I had a ZMQ timeout error. After this, the popup window was unresponsive, with the three buttons at the bottom greyed out, and the [x] button in the corner of the window not doing anything.\r\n\r\nThe error, as displayed in the output window, is:\r\n\r\n\r\n```\r\n#!python\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\pythonlib\\runmanager\\batch_compiler.py\", line 19, in <module>\r\n    import labscript\r\n  File \"C:\\pythonlib\\labscript\\__init__.py\", line 14, in <module>\r\n    from labscript import *\r\n  File \"C:\\pythonlib\\labscript\\labscript.py\", line 22, in <module>\r\n    import runmanager\r\n  File \"C:\\pythonlib\\runmanager\\__init__.py\", line 25, in <module>\r\n    import labscript_utils.h5_lock\r\n  File \"C:\\pythonlib\\labscript_utils\\h5_lock.py\", line 98, in <module>\r\n    connect_to_zlock_server()\r\n  File \"C:\\pythonlib\\labscript_utils\\h5_lock.py\", line 91, in connect_to_zlock_server\r\n    zprocess.locking.connect(host, port)\r\n  File \"C:\\Python27\\lib\\site-packages\\zprocess-1.1.6-py2.7.egg\\zprocess\\locking\\__init__.py\", line 373, in connect\r\n    ping(timeout)\r\n  File \"C:\\Python27\\lib\\site-packages\\zprocess-1.1.6-py2.7.egg\\zprocess\\locking\\__init__.py\", line 337, in ping\r\n    return _zmq_lock_client.say_hello(timeout)\r\n  File \"C:\\Python27\\lib\\site-packages\\zprocess-1.1.6-py2.7.egg\\zprocess\\locking\\__init__.py\", line 114, in say_hello\r\n    raise zmq.ZMQError('No response from zlock server: timed out')\r\nzmq.error.ZMQError: No response from zlock server: timed out\r\n```\r\n\r\nThe line above the output window still says \"Recompiling connection table\"", "markup": "markdown", "html": "<p>Today when attempting to have BLACS recompile my connection table I had a ZMQ timeout error. After this, the popup window was unresponsive, with the three buttons at the bottom greyed out, and the [x] button in the corner of the window not doing anything.</p>\n<p>The error, as displayed in the output window, is:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\pythonlib</span><span class=\"se\">\\r</span><span class=\"s2\">unmanager</span><span class=\"se\">\\b</span><span class=\"s2\">atch_compiler.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">19</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">labscript</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\pythonlib\\labscript\\__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">labscript</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\pythonlib\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">runmanager</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\pythonlib</span><span class=\"se\">\\r</span><span class=\"s2\">unmanager\\__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">labscript_utils.h5_lock</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\pythonlib\\labscript_utils\\h5_lock.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">98</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">connect_to_zlock_server</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\pythonlib\\labscript_utils\\h5_lock.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">91</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">connect_to_zlock_server</span>\n    <span class=\"n\">zprocess</span><span class=\"o\">.</span><span class=\"n\">locking</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\Python27\\lib\\site-packages\\zprocess-1.1.6-py2.7.egg\\zprocess\\locking\\__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">373</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">connect</span>\n    <span class=\"n\">ping</span><span class=\"p\">(</span><span class=\"n\">timeout</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\Python27\\lib\\site-packages\\zprocess-1.1.6-py2.7.egg\\zprocess\\locking\\__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">337</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">ping</span>\n    <span class=\"k\">return</span> <span class=\"n\">_zmq_lock_client</span><span class=\"o\">.</span><span class=\"n\">say_hello</span><span class=\"p\">(</span><span class=\"n\">timeout</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\Python27\\lib\\site-packages\\zprocess-1.1.6-py2.7.egg\\zprocess\\locking\\__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">114</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">say_hello</span>\n    <span class=\"k\">raise</span> <span class=\"n\">zmq</span><span class=\"o\">.</span><span class=\"n\">ZMQError</span><span class=\"p\">(</span><span class=\"s1\">&#39;No response from zlock server: timed out&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">zmq</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"o\">.</span><span class=\"n\">ZMQError</span><span class=\"p\">:</span> <span class=\"n\">No</span> <span class=\"n\">response</span> <span class=\"kn\">from</span> <span class=\"nn\">zlock</span> <span class=\"nn\">server</span><span class=\"p\">:</span> <span class=\"n\">timed</span> <span class=\"n\">out</span>\n</pre></div>\n\n\n<p>The line above the output window still says \"Recompiling connection table\"</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "new", "version": null, "edited_on": null, "created_on": "2015-09-21T00:49:51.107662+00:00", "milestone": null, "updated_on": "2019-07-04T16:30:39.727131+00:00", "type": "issue", "id": 12}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/13/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/13.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/13/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/13/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/13/launch-blacs-as-a-secondary-control-system"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/13/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Launch BLACS as a secondary control system", "component": null, "votes": 0, "watches": 1, "content": {"raw": "We should be able to launch secondary instances of BLACS on other PCs. This will be particularly useful for a future port of BIAS to Python, but should be open to all devices.\r\n\r\n### Proposal ###\r\n\r\n```\r\n#!python\r\n\r\n@labscript_device\r\nclass SecondaryControlSystem(Device):\r\n    delimeter = '|'\r\n\r\n    @set_passed_properties(\r\n        property_names = {\"device_properties\": [\"local_hostname\"]}\r\n    )\r\n    def __init__(self, name, local_hostname, port):\r\n        Device.__init__(self, name, None, None)\r\n        self.BLACS_connection = str(port)\r\n        \r\n    def __call__(self, port):\r\n        return '%s%s%s'%(self.name, self.delimeter, port)\r\n```\r\n\r\nThe above code allows you to both instantiate a secondary control system and then use that to modify the `BLACS_connection` property of a device. Example usage would be:\r\n\r\n```\r\n#!python\r\n\r\nSecondaryControlSystem('imaging_pc', 'bec-imaging.physics.monash.edu', 42518)\r\nSecondaryControlSystem('control2', 'bec-control2.physics.monash.edu', 42518)\r\nPulseBlaster('pulseblaster_0', board_number=imaging_pc(0))\r\nNovaTechDDS9M('novatech1', my_clockline, com_port = control2('com14'))\r\n```\r\n\r\nBLACS would then be modified so that:\r\n\r\n*  the primary instance instantiated a communications tab (similar to the BIAS camera tab we have now) for each secondary control system instantiated in the connection table (the above code already adds a line to the connection table for this)\r\n* The primary instance does not instantiate tabs for devices whose BLACS connection starts with the name of one of the secondary control systems\r\n* the QueueManager knows to communicate with secondary BLACS instances in order to transition_to_buffered, etc. for relevant devices\r\n* secondary BLACS instances know (based on hostname in connection table? or lab config?) to use a different QueueManager designed specifically to talk to a primary BLACS instance\r\n* secondary BLACS instances create device tabs for devices in the connection table that begin with the secondary control instances name.\r\n\r\nThis is related to, but not the same as, [labscript #28](#!/labscript_suite/labscript/issues/28/remote-launching-of-all-blacs-devices). We could use a similar syntax to that issue instead (such as secondary_control_host='blah' as a kwarg for all devices) however that does not then provide information in the connection table for how to launch the secondary instances of BLACS, or which port they should communicate on. Similarly, we could consider that the syntax in that issue could be of a similar form to what I've proposed here, but I'm not sure that makes a lot of sense.", "markup": "markdown", "html": "<p>We should be able to launch secondary instances of BLACS on other PCs. This will be particularly useful for a future port of BIAS to Python, but should be open to all devices.</p>\n<h3 id=\"markdown-header-proposal\">Proposal</h3>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"nd\">@labscript_device</span>\n<span class=\"k\">class</span> <span class=\"nc\">SecondaryControlSystem</span><span class=\"p\">(</span><span class=\"n\">Device</span><span class=\"p\">):</span>\n    <span class=\"n\">delimeter</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;|&#39;</span>\n\n    <span class=\"nd\">@set_passed_properties</span><span class=\"p\">(</span>\n        <span class=\"n\">property_names</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;device_properties&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;local_hostname&quot;</span><span class=\"p\">]}</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">local_hostname</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">):</span>\n        <span class=\"n\">Device</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BLACS_connection</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">port</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;</span><span class=\"si\">%s%s%s</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">delimeter</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>The above code allows you to both instantiate a secondary control system and then use that to modify the <code>BLACS_connection</code> property of a device. Example usage would be:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">SecondaryControlSystem</span><span class=\"p\">(</span><span class=\"s1\">&#39;imaging_pc&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bec-imaging.physics.monash.edu&#39;</span><span class=\"p\">,</span> <span class=\"mi\">42518</span><span class=\"p\">)</span>\n<span class=\"n\">SecondaryControlSystem</span><span class=\"p\">(</span><span class=\"s1\">&#39;control2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bec-control2.physics.monash.edu&#39;</span><span class=\"p\">,</span> <span class=\"mi\">42518</span><span class=\"p\">)</span>\n<span class=\"n\">PulseBlaster</span><span class=\"p\">(</span><span class=\"s1\">&#39;pulseblaster_0&#39;</span><span class=\"p\">,</span> <span class=\"n\">board_number</span><span class=\"o\">=</span><span class=\"n\">imaging_pc</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n<span class=\"n\">NovaTechDDS9M</span><span class=\"p\">(</span><span class=\"s1\">&#39;novatech1&#39;</span><span class=\"p\">,</span> <span class=\"n\">my_clockline</span><span class=\"p\">,</span> <span class=\"n\">com_port</span> <span class=\"o\">=</span> <span class=\"n\">control2</span><span class=\"p\">(</span><span class=\"s1\">&#39;com14&#39;</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>BLACS would then be modified so that:</p>\n<ul>\n<li>the primary instance instantiated a communications tab (similar to the BIAS camera tab we have now) for each secondary control system instantiated in the connection table (the above code already adds a line to the connection table for this)</li>\n<li>The primary instance does not instantiate tabs for devices whose BLACS connection starts with the name of one of the secondary control systems</li>\n<li>the QueueManager knows to communicate with secondary BLACS instances in order to transition_to_buffered, etc. for relevant devices</li>\n<li>secondary BLACS instances know (based on hostname in connection table? or lab config?) to use a different QueueManager designed specifically to talk to a primary BLACS instance</li>\n<li>secondary BLACS instances create device tabs for devices in the connection table that begin with the secondary control instances name.</li>\n</ul>\n<p>This is related to, but not the same as, <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/issues/28/remote-launching-of-all-blacs-devices\" rel=\"nofollow\">labscript #28</a>. We could use a similar syntax to that issue instead (such as secondary_control_host='blah' as a kwarg for all devices) however that does not then provide information in the connection table for how to launch the secondary instances of BLACS, or which port they should communicate on. Similarly, we could consider that the syntax in that issue could be of a similar form to what I've proposed here, but I'm not sure that makes a lot of sense.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-04-21T04:27:42.120642+00:00", "milestone": null, "updated_on": "2017-10-03T01:06:42.175866+00:00", "type": "issue", "id": 13}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/14/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/14.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/14/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/14/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/14/potential-unnecessary-delay-in-queue"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/14/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Potential unnecessary delay in queue", "component": null, "votes": 0, "watches": 1, "content": {"raw": "around line 600 of queue.py, the queue manager needs to wait on either of two python Queue() objects, as it is waiting either for the end of an experiment, or an abort/tab-restarted signal, whichever comes first. Waiting on one of these Queue() objects with a timeout prevents checking the other queue. The timeouts are currently set to 0.5 seconds, meaning experiment completion could potentially be delayed up to 0.5 seconds.\r\n\r\nThis should be fixed to speed up cycle time! Although waiting on multiple Queue() objects is [not in general possible](http://blog.jorgenschaefer.de/2013/09/waiting-for-multiple-queues-in-python.html), we can do something like have a separate thread merge them into a single queue, or actually change things so that the same Queue() is used for abort/restart and 'done' signals.", "markup": "markdown", "html": "<p>around line 600 of queue.py, the queue manager needs to wait on either of two python Queue() objects, as it is waiting either for the end of an experiment, or an abort/tab-restarted signal, whichever comes first. Waiting on one of these Queue() objects with a timeout prevents checking the other queue. The timeouts are currently set to 0.5 seconds, meaning experiment completion could potentially be delayed up to 0.5 seconds.</p>\n<p>This should be fixed to speed up cycle time! Although waiting on multiple Queue() objects is <a data-is-external-link=\"true\" href=\"http://blog.jorgenschaefer.de/2013/09/waiting-for-multiple-queues-in-python.html\" rel=\"nofollow\">not in general possible</a>, we can do something like have a separate thread merge them into a single queue, or actually change things so that the same Queue() is used for abort/restart and 'done' signals.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-06T18:53:40.016109+00:00", "milestone": null, "updated_on": "2017-06-07T16:14:03.209013+00:00", "type": "issue", "id": 14}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/15/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/15.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/15/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/15/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/15/improve-shot-cycle-time-in-blacs"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/15/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Improve shot cycle time in BLACS", "component": null, "votes": 0, "watches": 1, "content": {"raw": "There are probably many places we can improve the cycle time of a shot in BLACS.\r\n\r\nOne that I have found is the error state checking that occurs during the loop which monitors for the end of the experiment shot. Each iteration of the loop, it checks to see if any devices have restarted mid shot, and aborts appropriately. This check still occurs after the end of the shot has been detected (to ensure that a device restart was not missed between the last check and the end of the experiment). \r\n\r\nHowever, the check for device restart currently scales poorly with the number of devices in use in the experiment. It currently iterates (see [code](#!/labscript_suite/blacs/src/d075c69632b20d376d05915020d26ae4b5b1572b/queue.py?at=default&fileviewer=file-view-default#queue.py-612)) over each device tab and checks the state. However the state checking must be done in the main thread, which thus introduces the overhead associated with posting and event back to the main thread and waiting for the Qt event loop to process the event. And this happens once for **each** device in use.\r\n\r\nWe could instead request the state for all device tabs in one go, thus only posting a single event back to the main thread.\r\n\r\nI would suggest introducing a new method to the queue manager which is\r\n\r\n```\r\n#!python\r\n    @inmain_decorator(wait_for_return=True)\r\n    def get_many_device_error_states(self,devices):\r\n        return [device.error_message for name, device in devices.items()]\r\n\r\n```\r\n\r\nThen the check in the loop (see code link above) can become:\r\n\r\n```\r\n#!python\r\n                        for error_state_message in self.get_many_device_error_states(devices_in_use):\r\n                            if error_state_message:\r\n                                restarted = True\r\n                                break\r\n\r\n```", "markup": "markdown", "html": "<p>There are probably many places we can improve the cycle time of a shot in BLACS.</p>\n<p>One that I have found is the error state checking that occurs during the loop which monitors for the end of the experiment shot. Each iteration of the loop, it checks to see if any devices have restarted mid shot, and aborts appropriately. This check still occurs after the end of the shot has been detected (to ensure that a device restart was not missed between the last check and the end of the experiment). </p>\n<p>However, the check for device restart currently scales poorly with the number of devices in use in the experiment. It currently iterates (see <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/src/d075c69632b20d376d05915020d26ae4b5b1572b/queue.py?at=default&amp;fileviewer=file-view-default#queue.py-612\" rel=\"nofollow\">code</a>) over each device tab and checks the state. However the state checking must be done in the main thread, which thus introduces the overhead associated with posting and event back to the main thread and waiting for the Qt event loop to process the event. And this happens once for <strong>each</strong> device in use.</p>\n<p>We could instead request the state for all device tabs in one go, thus only posting a single event back to the main thread.</p>\n<p>I would suggest introducing a new method to the queue manager which is</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"nd\">@inmain_decorator</span><span class=\"p\">(</span><span class=\"n\">wait_for_return</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_many_device_error_states</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"n\">devices</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">error_message</span> <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">device</span> <span class=\"ow\">in</span> <span class=\"n\">devices</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()]</span>\n</pre></div>\n\n\n<p>Then the check in the loop (see code link above) can become:</p>\n<div class=\"codehilite language-python\"><pre><span></span>                        <span class=\"k\">for</span> <span class=\"n\">error_state_message</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_many_device_error_states</span><span class=\"p\">(</span><span class=\"n\">devices_in_use</span><span class=\"p\">):</span>\n                            <span class=\"k\">if</span> <span class=\"n\">error_state_message</span><span class=\"p\">:</span>\n                                <span class=\"n\">restarted</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n                                <span class=\"k\">break</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-06-07T23:17:47.182789+00:00", "milestone": null, "updated_on": "2017-06-08T15:26:54.305411+00:00", "type": "issue", "id": 15}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/16/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/16.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/16/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/16/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/16/menu-actions-not-connected"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/16/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Menu actions not connected", "component": null, "votes": 0, "watches": 1, "content": {"raw": "David Meyer points out that some menu actions in BLACS are not connected:\r\n\r\n> Actions that aren't connected are 'actionAdd_to_queue', 'actionExit', and maybe all of the memory profiler menu items, though I might just not be using them correctly.\r\n\r\nThe memory profiler might be fine, perhaps they're doing what they're supposed to be doing but that that's merely not visible, but we should check that, and connect the other actions to what they're supposed to be doing.", "markup": "markdown", "html": "<p>David Meyer points out that some menu actions in BLACS are not connected:</p>\n<blockquote>\n<p>Actions that aren't connected are 'actionAdd_to_queue', 'actionExit', and maybe all of the memory profiler menu items, though I might just not be using them correctly.</p>\n</blockquote>\n<p>The memory profiler might be fine, perhaps they're doing what they're supposed to be doing but that that's merely not visible, but we should check that, and connect the other actions to what they're supposed to be doing.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-13T23:45:59.147816+00:00", "milestone": null, "updated_on": "2017-06-22T09:27:03.729219+00:00", "type": "issue", "id": 16}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/17/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/17.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/17/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/17/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/17/tab-becomes-unselected-when-moving"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/17/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Tab becomes unselected when moving", "component": null, "votes": 0, "watches": 1, "content": {"raw": "If you click a tab heading and drag it around to re-position it quickly, sometimes the window seems to change to show a different tab to the one that you're dragging, and once you let go of the header, none of the tab headings are attached to the currently visible one (i.e. it looks as though no tabs are currently selected).\r\n\r\n![no_tab_selected.PNG](data/bitbucket.org/repo/dR5qxr/images/1260506973-no_tab_selected.PNG)", "markup": "markdown", "html": "<p>If you click a tab heading and drag it around to re-position it quickly, sometimes the window seems to change to show a different tab to the one that you're dragging, and once you let go of the header, none of the tab headings are attached to the currently visible one (i.e. it looks as though no tabs are currently selected).</p>\n<p><img alt=\"no_tab_selected.PNG\" src=\"data/bitbucket.org/repo/dR5qxr/images/1260506973-no_tab_selected.PNG\" /></p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-15T00:47:08.733257+00:00", "milestone": null, "updated_on": "2018-08-07T06:16:31.893692+00:00", "type": "issue", "id": 17}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/18/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/18.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/18/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/18/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/18/elide-text-in-status-bars-and-queue-status"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/18/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Elide text in status bars and queue status", "component": null, "votes": 0, "watches": 2, "content": {"raw": "The QLabels in the status bars of the tabs, as well as the one for the status of the queue sometimes have text larger than what has been set to them via a splitter. This causes the splitters to jump around as shots run and tabs change status.\r\n\r\nThe labels should have their text elided. This isn't a  built in function of QLabels, but can be achieved by adapting [this C++ function](https://gist.github.com/andrey-str/0f9c7709cbf0c9c49ef9):\r\n\r\n\r\n```\r\n#!C++\r\n\r\nvoid setElidedText(QLabel* label, const QString &text){\r\n    QFontMetrics metrix(label->font());\r\n    int width = label->width() - 2;\r\n    QString clippedText = metrix.elidedText(text, Qt::ElideMiddle, width);\r\n    label->setText(clippedText);\r\n}\r\n```", "markup": "markdown", "html": "<p>The QLabels in the status bars of the tabs, as well as the one for the status of the queue sometimes have text larger than what has been set to them via a splitter. This causes the splitters to jump around as shots run and tabs change status.</p>\n<p>The labels should have their text elided. This isn't a  built in function of QLabels, but can be achieved by adapting <a data-is-external-link=\"true\" href=\"https://gist.github.com/andrey-str/0f9c7709cbf0c9c49ef9\" rel=\"nofollow\">this C++ function</a>:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">void</span> <span class=\"nf\">setElidedText</span><span class=\"p\">(</span><span class=\"n\">QLabel</span><span class=\"o\">*</span> <span class=\"n\">label</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"n\">QString</span> <span class=\"o\">&amp;</span><span class=\"n\">text</span><span class=\"p\">){</span>\n    <span class=\"n\">QFontMetrics</span> <span class=\"n\">metrix</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">-&gt;</span><span class=\"n\">font</span><span class=\"p\">());</span>\n    <span class=\"kt\">int</span> <span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"n\">label</span><span class=\"o\">-&gt;</span><span class=\"n\">width</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"p\">;</span>\n    <span class=\"n\">QString</span> <span class=\"n\">clippedText</span> <span class=\"o\">=</span> <span class=\"n\">metrix</span><span class=\"p\">.</span><span class=\"n\">elidedText</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"n\">Qt</span><span class=\"o\">::</span><span class=\"n\">ElideMiddle</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"p\">);</span>\n    <span class=\"n\">label</span><span class=\"o\">-&gt;</span><span class=\"n\">setText</span><span class=\"p\">(</span><span class=\"n\">clippedText</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-15T19:29:39.496027+00:00", "milestone": null, "updated_on": "2017-07-28T22:11:34.772349+00:00", "type": "issue", "id": 18}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/19/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/19.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/19/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/19/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/19/documentation-is-out-of-date"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/19/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Documentation is out of date", "component": null, "votes": 0, "watches": 2, "content": {"raw": "The latest documentation is from 2014! The instructions on how to add new devices pre-date the move to labscript_devices, and the using BLACS file shows screenshots of gtk.\r\n\r\nShould the instructions for adding new devices to BLACS be merged with the instructions for adding new devices to labscript, and moved into the labscript_devices repository?\r\n\r\nMost of the information in the \"Using BLACS\" document is still relevant, it could just do with new screenshots and a review of the text.", "markup": "markdown", "html": "<p>The latest documentation is from 2014! The instructions on how to add new devices pre-date the move to labscript_devices, and the using BLACS file shows screenshots of gtk.</p>\n<p>Should the instructions for adding new devices to BLACS be merged with the instructions for adding new devices to labscript, and moved into the labscript_devices repository?</p>\n<p>Most of the information in the \"Using BLACS\" document is still relevant, it could just do with new screenshots and a review of the text.</p>", "type": "rendered"}, "assignee": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "state": "new", "version": null, "edited_on": null, "created_on": "2017-06-16T00:23:36.055404+00:00", "milestone": null, "updated_on": "2017-06-16T03:30:07.130799+00:00", "type": "issue", "id": 19}, {"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/20/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/20.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/20/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/20/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/20/add-number-of-repetitions"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/20/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "Add number of repetitions", "component": null, "votes": 0, "watches": 2, "content": {"raw": "A 'number of repetitions' feature would be quite handy.\r\nThis feature should make experiment scripts being run for n times when in repetition mode and then stop.\r\nThe main use case for this would be collecting a specific amount of statistics on measurements.", "markup": "markdown", "html": "<p>A 'number of repetitions' feature would be quite handy.\nThis feature should make experiment scripts being run for n times when in repetition mode and then stop.\nThe main use case for this would be collecting a specific amount of statistics on measurements.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "closed", "version": null, "edited_on": null, "created_on": "2017-06-16T16:29:39.325134+00:00", "milestone": null, "updated_on": "2017-06-17T09:21:14.826685+00:00", "type": "issue", "id": 20}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/21/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/21.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/21/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/21/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/21/inverted-digital-outputs"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/21/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "inverted Digital outputs", "component": null, "votes": 0, "watches": 1, "content": {"raw": "It would be nice to have the posibility to declare a Digitaloutput as inverted. This output would not behave any differently but the ui buttons in blacs would invert(pressed=low, unpressed=high).\r\nThis would reduce confusion when using shutters that are inverted and ones that aren't at the same time.", "markup": "markdown", "html": "<p>It would be nice to have the posibility to declare a Digitaloutput as inverted. This output would not behave any differently but the ui buttons in blacs would invert(pressed=low, unpressed=high).\nThis would reduce confusion when using shutters that are inverted and ones that aren't at the same time.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-21T15:05:03.183522+00:00", "milestone": null, "updated_on": "2018-03-17T15:39:47.102931+00:00", "type": "issue", "id": 21}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/22/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/22.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/22/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/22/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/22/blacs-log-file-rollover-not-working"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/22/vote"}}, "reporter": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "title": "BLACS log file rollover not working", "component": null, "votes": 0, "watches": 4, "content": {"raw": "I know this used to work when first implemented a few months back, but now my log rollover is no longer working due to file locks. The error I get is:\r\n\r\n```\r\n#!python\r\nTraceback (most recent call last):\r\n\tFile \"C:\\Anaconda2\\envs\\labscript\\lib\\logging\\handlers.py\", line 77, in emit self.doRollover()\r\n\tFile \"C:\\Anaconda2\\envs\\labscript\\lib\\logging\\handlers.py\", line 142, in emit self.doRollover()\r\n\tos.rename(self.baseFilename, dfn)\r\n\tWindowsError: [Error 32] The process cannot access the file because it is being used by another process\r\n\tLogged from file tab_base_classes.py, line 632 (or 636 or 727)\r\n```\r\nor \r\n```\r\nLogged from file __main__.py, line 584 or 603\r\n```\r\nor \r\n```\r\nLogged from file queue.py, line 828\r\n```\r\ndepending on what BLACS is doing.", "markup": "markdown", "html": "<p>I know this used to work when first implemented a few months back, but now my log rollover is no longer working due to file locks. The error I get is:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n    <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\Anaconda2\\envs\\labscript\\lib\\logging\\handlers.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">77</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">emit</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">doRollover</span><span class=\"p\">()</span>\n    <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\Anaconda2\\envs\\labscript\\lib\\logging\\handlers.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">142</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">emit</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">doRollover</span><span class=\"p\">()</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">rename</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">baseFilename</span><span class=\"p\">,</span> <span class=\"n\">dfn</span><span class=\"p\">)</span>\n    <span class=\"ne\">WindowsError</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Error</span> <span class=\"mi\">32</span><span class=\"p\">]</span> <span class=\"n\">The</span> <span class=\"n\">process</span> <span class=\"n\">cannot</span> <span class=\"n\">access</span> <span class=\"n\">the</span> <span class=\"nb\">file</span> <span class=\"n\">because</span> <span class=\"n\">it</span> <span class=\"ow\">is</span> <span class=\"n\">being</span> <span class=\"n\">used</span> <span class=\"n\">by</span> <span class=\"n\">another</span> <span class=\"n\">process</span>\n    <span class=\"n\">Logged</span> <span class=\"kn\">from</span> <span class=\"nn\">file</span> <span class=\"nn\">tab_base_classes.py</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">632</span> <span class=\"p\">(</span><span class=\"ow\">or</span> <span class=\"mi\">636</span> <span class=\"ow\">or</span> <span class=\"mi\">727</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>or </p>\n<div class=\"codehilite\"><pre><span></span>Logged from file __main__.py, line 584 or 603\n</pre></div>\n\n\n<p>or </p>\n<div class=\"codehilite\"><pre><span></span>Logged from file queue.py, line 828\n</pre></div>\n\n\n<p>depending on what BLACS is doing.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-23T20:54:30.420054+00:00", "milestone": null, "updated_on": "2018-10-17T15:25:55.272922+00:00", "type": "issue", "id": 22}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/23/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/23.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/23/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/23/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/23/analoge-inputs"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/23/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "Analoge Inputs", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Analoge Inputs should be displayed in BLACS device tab just like analoge outputs.\r\nThey should not be editable and when in manual mode update at a given rate.\r\nThis would allow quick checks of Voltages without needing to run a script to do so and make troubleshooting easier.\r\nThis should not be to hard and I'm probably gone create a pull request for this in the next few days/weeks. \r\nJust wanted to post this here to get comments on wether this is something others are interested in.", "markup": "markdown", "html": "<p>Analoge Inputs should be displayed in BLACS device tab just like analoge outputs.\nThey should not be editable and when in manual mode update at a given rate.\nThis would allow quick checks of Voltages without needing to run a script to do so and make troubleshooting easier.\nThis should not be to hard and I'm probably gone create a pull request for this in the next few days/weeks. \nJust wanted to post this here to get comments on wether this is something others are interested in.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-07-09T10:37:10.677634+00:00", "milestone": null, "updated_on": "2017-08-28T06:16:10.518219+00:00", "type": "issue", "id": 23}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/24/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/24.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/24/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/24/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/24/remote-control"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/24/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "Remote control", "component": null, "votes": 0, "watches": 1, "content": {"raw": "In our lab we have extended the BLACS server to allow other programs (like our watch dog) to pause the queue.\r\n\r\nI can think of other things that could be done with this. The runmanager abort button could be connected with a command clearing shots already loaded into BLACS. As aborting compilation usually goes hand in hand with this action anyway.\r\n\r\nIs this something that is useful to others? If so I would write up a pull request.", "markup": "markdown", "html": "<p>In our lab we have extended the BLACS server to allow other programs (like our watch dog) to pause the queue.</p>\n<p>I can think of other things that could be done with this. The runmanager abort button could be connected with a command clearing shots already loaded into BLACS. As aborting compilation usually goes hand in hand with this action anyway.</p>\n<p>Is this something that is useful to others? If so I would write up a pull request.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-08-05T21:06:50.130736+00:00", "milestone": null, "updated_on": "2017-08-08T15:23:53.510868+00:00", "type": "issue", "id": 24}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/25/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/25.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/25/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/25/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/25/error-when-starting-blacs-from-console"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/25/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "Error when starting BLACS from console", "component": null, "votes": 0, "watches": 2, "content": {"raw": "When I cd to the labscript_suite folder and then type in ```python blacs``` I get the following error:\r\n\r\n```\r\n#!python\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/runpy.py\", line 174, in _run_module_as_main\r\n    \"__main__\", fname, loader, pkg_name)\r\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/runpy.py\", line 72, in _run_code\r\n    exec code in run_globals\r\n  File \"/Users/janwerkmann/labscript_suite/blacs/__main__.py\", line 689, in <module>\r\n    app = BLACS(qapplication)\r\n  File \"/Users/janwerkmann/labscript_suite/blacs/__main__.py\", line 289, in __init__\r\n    self.analysis_submission = AnalysisSubmission(self,self.ui)\r\n  File \"blacs/analysis_submission.py\", line 37, in __init__\r\n    self._ui = UiLoader().load(os.path.join(os.path.dirname(os.path.realpath(__file__)),'analysis_submission.ui'))\r\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/site-packages/qtutils/UiLoader.py\", line 118, in load\r\n    return uic.loadUi(*args, **kwargs)\r\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/site-packages/PyQt4/uic/__init__.py\", line 236, in loadUi\r\n    return DynamicUILoader(package).loadUi(uifile, baseinstance, resource_suffix)\r\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/site-packages/PyQt4/uic/Loader/loader.py\", line 71, in loadUi\r\n    return self.parse(filename, resource_suffix, basedir)\r\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/site-packages/PyQt4/uic/uiparser.py\", line 974, in parse\r\n    document = parse(filename)\r\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/xml/etree/ElementTree.py\", line 1182, in parse\r\n    tree.parse(source, parser)\r\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/xml/etree/ElementTree.py\", line 647, in parse\r\n    source = open(source, \"rb\")\r\nIOError: [Errno 2] No such file or directory: '/Users/janwerkmann/labscript_suite/blacs/blacs/analysis_submission.ui'\r\n```\r\n\r\nwhat fixes this for me is in analysis_submission.ui replacing\r\n\r\n```\r\n#!python\r\n        self._ui = UiLoader().load(os.path.join(os.path.dirname(os.path.realpath(__file__)),'analysis_submission.ui'))\r\n\r\n```\r\nwith:\r\n\r\n```\r\n#!python\r\n\r\nself._ui = UiLoader().load('analysis_submission.ui')\r\n```", "markup": "markdown", "html": "<p>When I cd to the labscript_suite folder and then type in <code>python blacs</code> I get the following error:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/runpy.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">174</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_run_module_as_main</span>\n    <span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">,</span> <span class=\"n\">fname</span><span class=\"p\">,</span> <span class=\"n\">loader</span><span class=\"p\">,</span> <span class=\"n\">pkg_name</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/runpy.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">72</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_run_code</span>\n    <span class=\"k\">exec</span> <span class=\"n\">code</span> <span class=\"ow\">in</span> <span class=\"n\">run_globals</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/labscript_suite/blacs/__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">689</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">BLACS</span><span class=\"p\">(</span><span class=\"n\">qapplication</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/labscript_suite/blacs/__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">289</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__init__</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">analysis_submission</span> <span class=\"o\">=</span> <span class=\"n\">AnalysisSubmission</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ui</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;blacs/analysis_submission.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">37</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__init__</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ui</span> <span class=\"o\">=</span> <span class=\"n\">UiLoader</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)),</span><span class=\"s1\">&#39;analysis_submission.ui&#39;</span><span class=\"p\">))</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/site-packages/qtutils/UiLoader.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">118</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">load</span>\n    <span class=\"k\">return</span> <span class=\"n\">uic</span><span class=\"o\">.</span><span class=\"n\">loadUi</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/site-packages/PyQt4/uic/__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">236</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">loadUi</span>\n    <span class=\"k\">return</span> <span class=\"n\">DynamicUILoader</span><span class=\"p\">(</span><span class=\"n\">package</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">loadUi</span><span class=\"p\">(</span><span class=\"n\">uifile</span><span class=\"p\">,</span> <span class=\"n\">baseinstance</span><span class=\"p\">,</span> <span class=\"n\">resource_suffix</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/site-packages/PyQt4/uic/Loader/loader.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">71</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">loadUi</span>\n    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">resource_suffix</span><span class=\"p\">,</span> <span class=\"n\">basedir</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/site-packages/PyQt4/uic/uiparser.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">974</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">parse</span>\n    <span class=\"n\">document</span> <span class=\"o\">=</span> <span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/xml/etree/ElementTree.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1182</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">parse</span>\n    <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"n\">parser</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/xml/etree/ElementTree.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">647</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">parse</span>\n    <span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"s2\">&quot;rb&quot;</span><span class=\"p\">)</span>\n<span class=\"ne\">IOError</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Errno</span> <span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"n\">No</span> <span class=\"n\">such</span> <span class=\"nb\">file</span> <span class=\"ow\">or</span> <span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"s1\">&#39;/Users/janwerkmann/labscript_suite/blacs/blacs/analysis_submission.ui&#39;</span>\n</pre></div>\n\n\n<p>what fixes this for me is in analysis_submission.ui replacing</p>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ui</span> <span class=\"o\">=</span> <span class=\"n\">UiLoader</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)),</span><span class=\"s1\">&#39;analysis_submission.ui&#39;</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>with:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ui</span> <span class=\"o\">=</span> <span class=\"n\">UiLoader</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;analysis_submission.ui&#39;</span><span class=\"p\">)</span>\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "wontfix", "version": null, "edited_on": null, "created_on": "2017-08-10T22:25:40.838013+00:00", "milestone": null, "updated_on": "2017-08-11T15:14:23.987642+00:00", "type": "issue", "id": 25}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/26/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/26.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/26/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/26/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/26/queue_data-is-stored-as-a-qtobject-under"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/26/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "queue_data is stored as a QtObject under pyqt4", "component": null, "votes": 0, "watches": 1, "content": {"raw": "If someone currently updates BLACS will start up throwing a error of PyQt4 not being imported if there was a file in the queue on the last close. This is unfortunate as we need to implement a temporary fix for this or some percent won't be able to use BLACS after update.\r\n\r\nI'll try to add some try catches and create a pull request in the next few minutes after i verified it works.", "markup": "markdown", "html": "<p>If someone currently updates BLACS will start up throwing a error of PyQt4 not being imported if there was a file in the queue on the last close. This is unfortunate as we need to implement a temporary fix for this or some percent won't be able to use BLACS after update.</p>\n<p>I'll try to add some try catches and create a pull request in the next few minutes after i verified it works.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-08-16T14:08:23.516188+00:00", "milestone": null, "updated_on": "2017-08-17T01:45:21.462776+00:00", "type": "issue", "id": 26}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/27/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/27.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/27/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/27/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/27/plugin-tabs"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/27/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "Plugin Tabs", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Plugins should be able to spawn tabs to easily display information along with that of devices.\r\n\r\nI've already played around with this a bit in a [branch](#!/PhyNerd/blacs/branch/Tabs-for-Plugins) of my repo. Before I continue development of this feature I'd like to get some opinions on the following questions:\r\n\r\nShould a Plugin be able to spawn more than one Tab? \r\n\r\nI think one Tab for each Plugin should be enough. It wouldn't be hard to implement more though.\r\n\r\n\r\nShould a Plugin need to implement a Worker for the tab to work?\r\n\r\nThe current implementation of Tab in BLACS is very device centered and has lot's of device specific stuff stored in it. One problem with this among others is that each tab needs to have a worker to function properly. It would be a lot of work to separate the device specific stuff out of tabs and move it to DeviceTab. Is this something we should do or do we stick to the base class and make adjustments in a PluginTab class like my brach does?", "markup": "markdown", "html": "<p>Plugins should be able to spawn tabs to easily display information along with that of devices.</p>\n<p>I've already played around with this a bit in a <a data-is-external-link=\"true\" href=\"#!/PhyNerd/blacs/branch/Tabs-for-Plugins\" rel=\"nofollow\">branch</a> of my repo. Before I continue development of this feature I'd like to get some opinions on the following questions:</p>\n<p>Should a Plugin be able to spawn more than one Tab? </p>\n<p>I think one Tab for each Plugin should be enough. It wouldn't be hard to implement more though.</p>\n<p>Should a Plugin need to implement a Worker for the tab to work?</p>\n<p>The current implementation of Tab in BLACS is very device centered and has lot's of device specific stuff stored in it. One problem with this among others is that each tab needs to have a worker to function properly. It would be a lot of work to separate the device specific stuff out of tabs and move it to DeviceTab. Is this something we should do or do we stick to the base class and make adjustments in a PluginTab class like my brach does?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-08-21T12:51:27.201358+00:00", "milestone": null, "updated_on": "2017-08-22T23:44:05.687234+00:00", "type": "issue", "id": 27}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/28/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/28.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/28/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/28/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/28/clear-button"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/28/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "Clear Button", "component": null, "votes": 0, "watches": 1, "content": {"raw": "It would be nice to have a button (maybe next to the abort button) for clearing all shots from the queue.\r\n\r\nWe often have measurements that consist of 2000-4000 shots and want to clear the whole queue if we notice that something didn't work out after half of the shots have run. This is where this would be handy.\r\n\r\nI have already implemented this as a plugin (which is 3 lines of actual code) but could also see this as a 'core' feature for BLACS. \r\n\r\nIs this more of a plugin thing or something that could/should be added to the main code? If it should be a plugin do we keep these in the mainline repo or have we figured out a system how to manage those?", "markup": "markdown", "html": "<p>It would be nice to have a button (maybe next to the abort button) for clearing all shots from the queue.</p>\n<p>We often have measurements that consist of 2000-4000 shots and want to clear the whole queue if we notice that something didn't work out after half of the shots have run. This is where this would be handy.</p>\n<p>I have already implemented this as a plugin (which is 3 lines of actual code) but could also see this as a 'core' feature for BLACS. </p>\n<p>Is this more of a plugin thing or something that could/should be added to the main code? If it should be a plugin do we keep these in the mainline repo or have we figured out a system how to manage those?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-08-24T15:56:11.576510+00:00", "milestone": null, "updated_on": "2017-09-09T18:58:49.552936+00:00", "type": "issue", "id": 28}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/29/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/29.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/29/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/29/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/29/crash-on-shared-drive-becoming-unavailable"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/29/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "crash on shared drive becoming unavailable", "component": null, "votes": 0, "watches": 1, "content": {"raw": "If the shared drive becomes unavailable BLACS crashes and will not do anything until it is restarted.\r\nThis is caused by lines [730-736](#!/labscript_suite/blacs/src/ffc292ee849205e94b1cc8724b464600af1df5ba/queue.py?at=default&fileviewer=file-view-default#queue.py-730) and [825-831](#!/labscript_suite/blacs/src/ffc292ee849205e94b1cc8724b464600af1df5ba/queue.py?at=default&fileviewer=file-view-default#queue.py-825) trowing exceptions that are not caught.\r\n\r\nIt would be nice if BLACS would handle this in a away that one could resume experiments (after fixing the problem) without needing to restart BLACS.", "markup": "markdown", "html": "<p>If the shared drive becomes unavailable BLACS crashes and will not do anything until it is restarted.\nThis is caused by lines <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/src/ffc292ee849205e94b1cc8724b464600af1df5ba/queue.py?at=default&amp;fileviewer=file-view-default#queue.py-730\" rel=\"nofollow\">730-736</a> and <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/src/ffc292ee849205e94b1cc8724b464600af1df5ba/queue.py?at=default&amp;fileviewer=file-view-default#queue.py-825\" rel=\"nofollow\">825-831</a> trowing exceptions that are not caught.</p>\n<p>It would be nice if BLACS would handle this in a away that one could resume experiments (after fixing the problem) without needing to restart BLACS.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-09-22T11:50:59.107751+00:00", "milestone": null, "updated_on": "2017-09-22T15:01:53.119540+00:00", "type": "issue", "id": 29}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/30/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/30.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/30/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/30/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/30/better-handling-of-no-connection-table-on"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/30/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "Better handling of no connection table on start", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently one is greeted with a big exception when starting BLACS without a connection table. It would be much nicer to have the connection table compilation window show up instead with a helpful message why BLACS didn't start properly.\r\nUsers that are new to labscript would definitely profit from this.", "markup": "markdown", "html": "<p>Currently one is greeted with a big exception when starting BLACS without a connection table. It would be much nicer to have the connection table compilation window show up instead with a helpful message why BLACS didn't start properly.\nUsers that are new to labscript would definitely profit from this.</p>", "type": "rendered"}, "assignee": null, "state": "duplicate", "version": null, "edited_on": null, "created_on": "2017-11-11T14:24:37.822838+00:00", "milestone": null, "updated_on": "2017-11-12T00:23:04.376813+00:00", "type": "issue", "id": 30}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/31/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/31.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/31/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/31/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/31/graceful-worker-process-exit-on-restart"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/31/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "Graceful Worker Process exit on restart", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently if one restarts a Tab the worker process is immediately terminated. This can leave things in a bad state. In particular I've been having problems with locks not being released. It would be nice if there was a attempt to call the ```shutdown()``` function of the workers before terminating them.\r\n\r\nI already tried to implement this on a per worker basis with python's signal library, but under windows there is no ```signal.SIGTERM``` so that didn't work.", "markup": "markdown", "html": "<p>Currently if one restarts a Tab the worker process is immediately terminated. This can leave things in a bad state. In particular I've been having problems with locks not being released. It would be nice if there was a attempt to call the <code>shutdown()</code> function of the workers before terminating them.</p>\n<p>I already tried to implement this on a per worker basis with python's signal library, but under windows there is no <code>signal.SIGTERM</code> so that didn't work.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-11-17T08:18:21.685914+00:00", "milestone": null, "updated_on": "2017-11-18T10:17:11.313016+00:00", "type": "issue", "id": 31}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/32/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/32.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/32/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/32/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/32/report-which-device-s-have-caused-the"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/32/vote"}}, "reporter": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "title": "Report which device(s) have caused the queue to pause", "component": null, "votes": 0, "watches": 1, "content": {"raw": "This would be particularly helpful when multiple devices are in an error state that *aren't* preventing shots from running, i.e those that aren't in the queued shot's connection table.\r\n\r\nThis information is in the logs, e.g.\r\n\r\n```\r\n#!python\r\n\r\n2017-12-15 12:21:20,951 ERROR BLACS.queue_manager.thread: XZ_Blackfly has an error condition, aborting run\r\n```\r\n\r\n\r\nThis feature would make apparent the device name(s) in the GUI,", "markup": "markdown", "html": "<p>This would be particularly helpful when multiple devices are in an error state that <em>aren't</em> preventing shots from running, i.e those that aren't in the queued shot's connection table.</p>\n<p>This information is in the logs, e.g.</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"mi\">2017</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">15</span> <span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mi\">20</span><span class=\"p\">,</span><span class=\"mi\">951</span> <span class=\"n\">ERROR</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">queue_manager</span><span class=\"o\">.</span><span class=\"n\">thread</span><span class=\"p\">:</span> <span class=\"n\">XZ_Blackfly</span> <span class=\"n\">has</span> <span class=\"n\">an</span> <span class=\"n\">error</span> <span class=\"n\">condition</span><span class=\"p\">,</span> <span class=\"n\">aborting</span> <span class=\"n\">run</span>\n</pre></div>\n\n\n<p>This feature would make apparent the device name(s) in the GUI,</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-12-15T17:32:13.110947+00:00", "milestone": null, "updated_on": "2017-12-15T17:33:22.998081+00:00", "type": "issue", "id": 32}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/33/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/33.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/33/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/33/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/33/blacs-should-respect-output-limits-as"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/33/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "BLACS should respect output limits as defined in the connection table", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Once we get labscript issue #[13](#!/labscript_suite/labscript/issues/44/limits-should-be-stored-in-the-connection) resolved, we need to update BLACS to use them I think this means pulling them out from the connection table in the [`_create_AO_object` method in device_base_class.py](#!/labscript_suite/blacs/src/eda85e2db17c3cba0a3c57f3d88d20f7ade14430/device_base_class.py?at=default&fileviewer=file-view-default#device_base_class.py-170) and feeding them into the AO object instantiation if they fall inside of the hardware limits of the device.", "markup": "markdown", "html": "<p>Once we get labscript issue #<a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/issues/44/limits-should-be-stored-in-the-connection\" rel=\"nofollow\">13</a> resolved, we need to update BLACS to use them I think this means pulling them out from the connection table in the <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/src/eda85e2db17c3cba0a3c57f3d88d20f7ade14430/device_base_class.py?at=default&amp;fileviewer=file-view-default#device_base_class.py-170\" rel=\"nofollow\"><code>_create_AO_object</code> method in device_base_class.py</a> and feeding them into the AO object instantiation if they fall inside of the hardware limits of the device.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-01-23T04:32:27.800839+00:00", "milestone": null, "updated_on": "2018-01-23T04:32:27.800839+00:00", "type": "issue", "id": 33}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/34/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/34.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/34/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/34/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/34/calls-to-transition_to_manual-are"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/34/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "calls to transition_to_manual are serialised by the queue manager", "component": null, "votes": 0, "watches": 3, "content": {"raw": "Calls to `device.transition_to_manual` by the queue manager are currently serialised.\r\n\r\nI believe this is an artefact of a version of BIAS which did not use zlock/h5lock and would thus cause HDF5 file corruption if BIAS wrote to the file while the lock was held by one of the BLACS devices. However, I believe this is no longer the case (need to double check) and that BIAS uses zlock/h5lock correctly now.\r\n\r\n**Regardless, this introduces an unfortunate error when using multiple acquisition cards with a wait monitor.** \r\nIf the device with the wait monitor is not transitioned to manual prior to all acquisition devices, then those acquisition devices will timeout waiting for the `zprocess.Event` to be issued indicating that waits have been processed (since that processing has not happened yet, and can't until the other acquisition device completes). This is effectively a deadlock, except that fortunately the zprocess event times-out (although then the shot is aborted due to that failure). This of course may work for some people, as the transition order is currently dependent on the iteration order of a dictionary, which is itself dependent on the names of each device in use along with the number of devices in use (see resources on how dictionary hashing works in Python).\r\n\r\nI believe @rpanderson recently experienced this bug when he visited JQI.\r\n\r\nAnyway, the solution is to deserialise `transition_to_manual`", "markup": "markdown", "html": "<p>Calls to <code>device.transition_to_manual</code> by the queue manager are currently serialised.</p>\n<p>I believe this is an artefact of a version of BIAS which did not use zlock/h5lock and would thus cause HDF5 file corruption if BIAS wrote to the file while the lock was held by one of the BLACS devices. However, I believe this is no longer the case (need to double check) and that BIAS uses zlock/h5lock correctly now.</p>\n<p><strong>Regardless, this introduces an unfortunate error when using multiple acquisition cards with a wait monitor.</strong> \nIf the device with the wait monitor is not transitioned to manual prior to all acquisition devices, then those acquisition devices will timeout waiting for the <code>zprocess.Event</code> to be issued indicating that waits have been processed (since that processing has not happened yet, and can't until the other acquisition device completes). This is effectively a deadlock, except that fortunately the zprocess event times-out (although then the shot is aborted due to that failure). This of course may work for some people, as the transition order is currently dependent on the iteration order of a dictionary, which is itself dependent on the names of each device in use along with the number of devices in use (see resources on how dictionary hashing works in Python).</p>\n<p>I believe @rpanderson recently experienced this bug when he visited JQI.</p>\n<p>Anyway, the solution is to deserialise <code>transition_to_manual</code></p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-01-24T04:31:40.632878+00:00", "milestone": null, "updated_on": "2019-06-03T03:54:45.595983+00:00", "type": "issue", "id": 34}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/35/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/35.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/35/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/35/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/35/blacs-plugin-initialization-not-python-2"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/35/vote"}}, "reporter": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "title": "BLACS plugin initialization not Python 2 compatible", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I'm getting an error starting BLACS after merging in up to 828 with my old Py2/Qt4 setup:\r\n\r\n```\r\n#!python\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\labscript_suite\\blacs\\__main__.py\", line 148, in <module>\r\n    import plugins\r\n  File \"C:\\labscript_suite\\blacs\\plugins\\__init__.py\", line 34, in <module>\r\n    if not module_name in exp_config['BLACS/plugins']:\r\nAttributeError: LabConfig instance has no attribute '__getitem__'\r\n```\r\n\r\nIt looks like some Python3 configparser syntax worked its way in on line 34 of plugins/\\__init__.py", "markup": "markdown", "html": "<p>I'm getting an error starting BLACS after merging in up to 828 with my old Py2/Qt4 setup:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite</span><span class=\"se\">\\b</span><span class=\"s2\">lacs\\__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">148</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">plugins</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite</span><span class=\"se\">\\b</span><span class=\"s2\">lacs\\plugins\\__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">34</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">module_name</span> <span class=\"ow\">in</span> <span class=\"n\">exp_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;BLACS/plugins&#39;</span><span class=\"p\">]:</span>\n<span class=\"ne\">AttributeError</span><span class=\"p\">:</span> <span class=\"n\">LabConfig</span> <span class=\"n\">instance</span> <span class=\"n\">has</span> <span class=\"n\">no</span> <span class=\"n\">attribute</span> <span class=\"s1\">&#39;__getitem__&#39;</span>\n</pre></div>\n\n\n<p>It looks like some Python3 configparser syntax worked its way in on line 34 of plugins/__init__.py</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-02-26T22:08:44.168255+00:00", "milestone": null, "updated_on": "2018-02-27T01:55:00.822884+00:00", "type": "issue", "id": 35}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/36/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/36.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/36/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/36/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/36/front-panel-settings-not-loaded-correctly"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/36/vote"}}, "reporter": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "title": "front panel settings not loaded correctly if blacs is not run as a module", "component": null, "votes": 0, "watches": 1, "content": {"raw": "After the recent changes to blacs I now have this issue if I start blacs with\r\n\r\n```\r\n#!python\r\n\r\npython -m blacs\r\n```\r\neverything works fine. If I start it with\r\n\r\n```\r\n#!python\r\n\r\npython __main__.py\r\n```\r\nfront panel settings with a name property are set to their default settings regardless of the value in the labconfig BLACS.h5 file. It is the same behavior when using the load front-panel dialog for any front panel settings file. I know this because only the first three of my PB digital output channels are having their names saved to the front panel settings file and only those channels are effected on that device. All of my other devices show defaulting behavior.\r\n\r\nAlso, if I try to write over an identical file settings file with the latter instantiation I get an error stating the selected file's connection table is not a subset of the BLACS connection table.\r\n\r\nI can upload files and screenshots later if that description doesn't make sense but right now the lab's internet connection is on the fritz.", "markup": "markdown", "html": "<p>After the recent changes to blacs I now have this issue if I start blacs with</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">python</span> <span class=\"o\">-</span><span class=\"n\">m</span> <span class=\"n\">blacs</span>\n</pre></div>\n\n\n<p>everything works fine. If I start it with</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">python</span> <span class=\"n\">__main__</span><span class=\"o\">.</span><span class=\"n\">py</span>\n</pre></div>\n\n\n<p>front panel settings with a name property are set to their default settings regardless of the value in the labconfig BLACS.h5 file. It is the same behavior when using the load front-panel dialog for any front panel settings file. I know this because only the first three of my PB digital output channels are having their names saved to the front panel settings file and only those channels are effected on that device. All of my other devices show defaulting behavior.</p>\n<p>Also, if I try to write over an identical file settings file with the latter instantiation I get an error stating the selected file's connection table is not a subset of the BLACS connection table.</p>\n<p>I can upload files and screenshots later if that description doesn't make sense but right now the lab's internet connection is on the fritz.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-03-08T21:54:14.252402+00:00", "milestone": null, "updated_on": "2018-03-09T23:27:26.041694+00:00", "type": "issue", "id": 36}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/37/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/37.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/37/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/37/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/37/changing-unitconversion-parameters-sets"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/37/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "Changing unitconversion parameters sets all frontpanel values to 0", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Our lab is using unit conversions as of today and we are adjusting the conversion parameters a lot because of this. If we change the unit conversion (parameters) and recompile the connection table all front panel values are lost. It would be nice if instead one of the following would happen:\r\n1.  Just lose the values for outputs where the value has changed\r\n2. Set all values to the default_value defined in the connection table\r\n3. Keep all values for all outputs and set ones where the unit conversion changed to base unit", "markup": "markdown", "html": "<p>Our lab is using unit conversions as of today and we are adjusting the conversion parameters a lot because of this. If we change the unit conversion (parameters) and recompile the connection table all front panel values are lost. It would be nice if instead one of the following would happen:\n1.  Just lose the values for outputs where the value has changed\n2. Set all values to the default_value defined in the connection table\n3. Keep all values for all outputs and set ones where the unit conversion changed to base unit</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-03-09T11:01:41.654045+00:00", "milestone": null, "updated_on": "2018-03-09T23:22:35.562346+00:00", "type": "issue", "id": 37}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/38/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/38.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/38/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/38/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/38/front-panel-settings-set-to-default-on"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/38/vote"}}, "reporter": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "title": "Front Panel settings set to default on load when connection table is modified under Python 3", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Running BLACS with Python 3 gives the blanking default values issue seen in Issue #37 with edits to the connection table, excluding adding something new. I suspect it is caused by a similar issue as that of Issue #37 but haven't dug into it.\r\n\r\nThis issue is not present on our Python 2 setup.", "markup": "markdown", "html": "<p>Running BLACS with Python 3 gives the blanking default values issue seen in Issue <a href=\"#!/labscript_suite/blacs/issues/37/changing-unitconversion-parameters-sets\" rel=\"nofollow\" title=\"Changing unitconversion parameters sets all frontpanel values to 0\" class=\"ap-connect-link\"><s>#37</s></a> with edits to the connection table, excluding adding something new. I suspect it is caused by a similar issue as that of Issue <a href=\"#!/labscript_suite/blacs/issues/37/changing-unitconversion-parameters-sets\" rel=\"nofollow\" title=\"Changing unitconversion parameters sets all frontpanel values to 0\" class=\"ap-connect-link\"><s>#37</s></a> but haven't dug into it.</p>\n<p>This issue is not present on our Python 2 setup.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-04-03T18:34:52.963252+00:00", "milestone": null, "updated_on": "2018-04-12T01:27:00.522477+00:00", "type": "issue", "id": 38}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/39/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/39.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/39/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/39/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/39/exclude-queue_data-from-frontpanel"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/39/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "Exclude queue_data from Frontpanel settings stored to shots", "component": null, "votes": 0, "watches": 1, "content": {"raw": "We had a very long measurement today with about 40 000 shots. And noticed that shot files that had run were very large(400mb). After looking at them we noticed, that all of them had a very long list of shots, that were in the queue when they were executed, stored in the h5 file. Removing this list reduced files to a more sensible size.\r\n\r\nI propose we exclude queue_data from being stored in shot files after they have run. Before I create a pull request: Is there any reason to include the queue_data in the stored front panel settings?", "markup": "markdown", "html": "<p>We had a very long measurement today with about 40 000 shots. And noticed that shot files that had run were very large(400mb). After looking at them we noticed, that all of them had a very long list of shots, that were in the queue when they were executed, stored in the h5 file. Removing this list reduced files to a more sensible size.</p>\n<p>I propose we exclude queue_data from being stored in shot files after they have run. Before I create a pull request: Is there any reason to include the queue_data in the stored front panel settings?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-04-05T20:35:28.168096+00:00", "milestone": null, "updated_on": "2018-04-11T00:57:40.387293+00:00", "type": "issue", "id": 39}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/40/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/40.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/40/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/40/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/40/better-defaults-and-better-error-reporting"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/40/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Better defaults and better error reporting for incorrect use of state machine", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Generally it would be good to review the state machine API and consider ways of setting default arguments for the case where they're not relevant, for example:\r\n\r\n* create_worker could set primary_worker automatically if primary_worker is not None. That way if there is a single worker, it would already be primary, and if there are multiple workers, the first one created will be primary unless the user specifies otherwise.\r\n\r\n* queue_work could default to using the primary worker if none is specified (this would require changing it to be a keyword argument, but still accepting two positional arguments for backward compat).\r\n\r\n* Some error checking in tab_base_classes.mainloop() regarding workers, so that you get more informative errors than the following (this I suspect is the result of not setting `self.primary_worker`, meaning it is `None`):\r\n\r\n![GetImage.png](data/bitbucket.org/repo/dR5qxr/images/754680064-GetImage.png)\r\n\r\nThe mainloop should be read with a defensive eye to think what could go wrong and how we might provide good defaults and better error messages to minimise mistakes and confusion.\r\n\r\nThis would make writing new device classes a smoother experience.", "markup": "markdown", "html": "<p>Generally it would be good to review the state machine API and consider ways of setting default arguments for the case where they're not relevant, for example:</p>\n<ul>\n<li>\n<p>create_worker could set primary_worker automatically if primary_worker is not None. That way if there is a single worker, it would already be primary, and if there are multiple workers, the first one created will be primary unless the user specifies otherwise.</p>\n</li>\n<li>\n<p>queue_work could default to using the primary worker if none is specified (this would require changing it to be a keyword argument, but still accepting two positional arguments for backward compat).</p>\n</li>\n<li>\n<p>Some error checking in tab_base_classes.mainloop() regarding workers, so that you get more informative errors than the following (this I suspect is the result of not setting <code>self.primary_worker</code>, meaning it is <code>None</code>):</p>\n</li>\n</ul>\n<p><img alt=\"GetImage.png\" src=\"data/bitbucket.org/repo/dR5qxr/images/754680064-GetImage.png\" /></p>\n<p>The mainloop should be read with a defensive eye to think what could go wrong and how we might provide good defaults and better error messages to minimise mistakes and confusion.</p>\n<p>This would make writing new device classes a smoother experience.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-04-25T02:20:41.826193+00:00", "milestone": null, "updated_on": "2018-04-26T00:33:16.510669+00:00", "type": "issue", "id": 40}, {"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/41/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/41.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/41/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/41/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/41/plugin-base-classes"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/41/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "Plugin Base-Classes", "component": null, "votes": 0, "watches": 1, "content": {"raw": "There should be a base class for all plugin related classes: \r\nPlugin, Notification and Settings\r\n\r\nAll plugin classes should inherit from these classes. That way new functionality can be added to the plugin system without breaking old plugins. It would also make it easier for someone new to the plugin system to understand which functions need to be implemented by a plugin.", "markup": "markdown", "html": "<p>There should be a base class for all plugin related classes: \nPlugin, Notification and Settings</p>\n<p>All plugin classes should inherit from these classes. That way new functionality can be added to the plugin system without breaking old plugins. It would also make it easier for someone new to the plugin system to understand which functions need to be implemented by a plugin.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-04-25T12:36:19.997344+00:00", "milestone": null, "updated_on": "2018-04-25T12:36:19.997344+00:00", "type": "issue", "id": 41}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/42/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/42.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/42/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/42/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/42/connection-table-recompile-cant-handle"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/42/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "Connection table recompile can't handle missing globals file", "component": null, "votes": 0, "watches": 1, "content": {"raw": "There is a exception in BLACS when one of the globals files is missing during recompilation of the connection table. This exception does not make its cause obvious:\r\n\r\n```\r\n#!python\r\n\r\n2018-04-26 10:42:16,874 ERROR BLACS: Got an exception:\r\nTraceback (most recent call last):\r\n  File \"/Users/janwerkmann/labscript_suite/blacs/plugins/connection_table/__init__.py\", line 188, in on_recompile_connection_table\r\n    self.BLACS['plugins'][module].menu.on_recompile_connection_table()\r\n  File \"/Users/janwerkmann/labscript_suite/blacs/plugins/connection_table/__init__.py\", line 130, in on_recompile_connection_table\r\n    CompileAndRestart(self.BLACS, globals_files, self.BLACS['exp_config'].get('paths','connection_table_py'), self.BLACS['exp_config'].get('paths','connection_table_h5'),close_notification_func=self.close_notification_func)\r\n  File \"/Users/janwerkmann/labscript_suite/blacs/compile_and_restart.py\", line 54, in __init__\r\n    self.compile()\r\n  File \"/Users/janwerkmann/labscript_suite/blacs/compile_and_restart.py\", line 76, in compile\r\n    self.globals_files, self.tempfilename, self.output_box.port, self.finished_compiling)\r\n  File \"/Users/janwerkmann/labscript_suite/runmanager/__init__.py\", line 748, in compile_labscript_with_globals_files_async\r\n    zprocess.zmq_push_multipart(stream_port, data=['stderr', error])\r\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/site-packages/zprocess/clientserver.py\", line 259, in __call__\r\n    data = _typecheck_or_convert_data(data, self.dtype)\r\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/site-packages/zprocess/clientserver.py\", line 75, in _typecheck_or_convert_data\r\n    raise TypeError(msg)\r\nTypeError: multipart sockets can only send an iterable of bytes objects, not <type 'list'>.\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/janwerkmann/labscript_suite/blacs/plugins/connection_table/__init__.py\", line 188, in on_recompile_connection_table\r\n    self.BLACS['plugins'][module].menu.on_recompile_connection_table()\r\n  File \"/Users/janwerkmann/labscript_suite/blacs/plugins/connection_table/__init__.py\", line 130, in on_recompile_connection_table\r\n    CompileAndRestart(self.BLACS, globals_files, self.BLACS['exp_config'].get('paths','connection_table_py'), self.BLACS['exp_config'].get('paths','connection_table_h5'),close_notification_func=self.close_notification_func)\r\n  File \"/Users/janwerkmann/labscript_suite/blacs/compile_and_restart.py\", line 54, in __init__\r\n    self.compile()\r\n  File \"/Users/janwerkmann/labscript_suite/blacs/compile_and_restart.py\", line 76, in compile\r\n    self.globals_files, self.tempfilename, self.output_box.port, self.finished_compiling)\r\n  File \"/Users/janwerkmann/labscript_suite/runmanager/__init__.py\", line 748, in compile_labscript_with_globals_files_async\r\n    zprocess.zmq_push_multipart(stream_port, data=['stderr', error])\r\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/site-packages/zprocess/clientserver.py\", line 259, in __call__\r\n    data = _typecheck_or_convert_data(data, self.dtype)\r\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/site-packages/zprocess/clientserver.py\", line 75, in _typecheck_or_convert_data\r\n    raise TypeError(msg)\r\nTypeError: multipart sockets can only send an iterable of bytes objects, not <type 'list'>.\r\n```", "markup": "markdown", "html": "<p>There is a exception in BLACS when one of the globals files is missing during recompilation of the connection table. This exception does not make its cause obvious:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"mi\">2018</span><span class=\"o\">-</span><span class=\"mo\">04</span><span class=\"o\">-</span><span class=\"mi\">26</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">42</span><span class=\"p\">:</span><span class=\"mi\">16</span><span class=\"p\">,</span><span class=\"mi\">874</span> <span class=\"n\">ERROR</span> <span class=\"n\">BLACS</span><span class=\"p\">:</span> <span class=\"n\">Got</span> <span class=\"n\">an</span> <span class=\"n\">exception</span><span class=\"p\">:</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/labscript_suite/blacs/plugins/connection_table/__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">188</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">on_recompile_connection_table</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BLACS</span><span class=\"p\">[</span><span class=\"s1\">&#39;plugins&#39;</span><span class=\"p\">][</span><span class=\"n\">module</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">on_recompile_connection_table</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/labscript_suite/blacs/plugins/connection_table/__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">130</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">on_recompile_connection_table</span>\n    <span class=\"n\">CompileAndRestart</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BLACS</span><span class=\"p\">,</span> <span class=\"n\">globals_files</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BLACS</span><span class=\"p\">[</span><span class=\"s1\">&#39;exp_config&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;paths&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;connection_table_py&#39;</span><span class=\"p\">),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BLACS</span><span class=\"p\">[</span><span class=\"s1\">&#39;exp_config&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;paths&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;connection_table_h5&#39;</span><span class=\"p\">),</span><span class=\"n\">close_notification_func</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">close_notification_func</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/labscript_suite/blacs/compile_and_restart.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">54</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__init__</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/labscript_suite/blacs/compile_and_restart.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">76</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"nb\">compile</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">globals_files</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tempfilename</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">output_box</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">finished_compiling</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/labscript_suite/runmanager/__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">748</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">compile_labscript_with_globals_files_async</span>\n    <span class=\"n\">zprocess</span><span class=\"o\">.</span><span class=\"n\">zmq_push_multipart</span><span class=\"p\">(</span><span class=\"n\">stream_port</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;stderr&#39;</span><span class=\"p\">,</span> <span class=\"n\">error</span><span class=\"p\">])</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/site-packages/zprocess/clientserver.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">259</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__call__</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">_typecheck_or_convert_data</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/site-packages/zprocess/clientserver.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">75</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_typecheck_or_convert_data</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"n\">multipart</span> <span class=\"n\">sockets</span> <span class=\"n\">can</span> <span class=\"n\">only</span> <span class=\"n\">send</span> <span class=\"n\">an</span> <span class=\"n\">iterable</span> <span class=\"n\">of</span> <span class=\"nb\">bytes</span> <span class=\"n\">objects</span><span class=\"p\">,</span> <span class=\"ow\">not</span> <span class=\"o\">&lt;</span><span class=\"nb\">type</span> <span class=\"s1\">&#39;list&#39;</span><span class=\"o\">&gt;.</span>\n\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/labscript_suite/blacs/plugins/connection_table/__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">188</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">on_recompile_connection_table</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BLACS</span><span class=\"p\">[</span><span class=\"s1\">&#39;plugins&#39;</span><span class=\"p\">][</span><span class=\"n\">module</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">on_recompile_connection_table</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/labscript_suite/blacs/plugins/connection_table/__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">130</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">on_recompile_connection_table</span>\n    <span class=\"n\">CompileAndRestart</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BLACS</span><span class=\"p\">,</span> <span class=\"n\">globals_files</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BLACS</span><span class=\"p\">[</span><span class=\"s1\">&#39;exp_config&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;paths&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;connection_table_py&#39;</span><span class=\"p\">),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BLACS</span><span class=\"p\">[</span><span class=\"s1\">&#39;exp_config&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;paths&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;connection_table_h5&#39;</span><span class=\"p\">),</span><span class=\"n\">close_notification_func</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">close_notification_func</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/labscript_suite/blacs/compile_and_restart.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">54</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__init__</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/labscript_suite/blacs/compile_and_restart.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">76</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"nb\">compile</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">globals_files</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tempfilename</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">output_box</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">finished_compiling</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/labscript_suite/runmanager/__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">748</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">compile_labscript_with_globals_files_async</span>\n    <span class=\"n\">zprocess</span><span class=\"o\">.</span><span class=\"n\">zmq_push_multipart</span><span class=\"p\">(</span><span class=\"n\">stream_port</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;stderr&#39;</span><span class=\"p\">,</span> <span class=\"n\">error</span><span class=\"p\">])</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/site-packages/zprocess/clientserver.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">259</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__call__</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">_typecheck_or_convert_data</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/site-packages/zprocess/clientserver.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">75</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_typecheck_or_convert_data</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"n\">multipart</span> <span class=\"n\">sockets</span> <span class=\"n\">can</span> <span class=\"n\">only</span> <span class=\"n\">send</span> <span class=\"n\">an</span> <span class=\"n\">iterable</span> <span class=\"n\">of</span> <span class=\"nb\">bytes</span> <span class=\"n\">objects</span><span class=\"p\">,</span> <span class=\"ow\">not</span> <span class=\"o\">&lt;</span><span class=\"nb\">type</span> <span class=\"s1\">&#39;list&#39;</span><span class=\"o\">&gt;.</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-04-26T08:46:12.322114+00:00", "milestone": null, "updated_on": "2018-04-26T23:25:36.275194+00:00", "type": "issue", "id": 42}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/43/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/43.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/43/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/43/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/43/the-latest-tagged-version-of-blacs-doesnt"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/43/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "The latest tagged version of BLACS doesn't play nice with the latest tagged labscript_utils", "component": null, "votes": 0, "watches": 1, "content": {"raw": "If you use the latest tagged BLACS version along with the latest tagged version of labscript_utils (aka from a fresh install) then none of the plugins load (which messes up themes and prevents you from compiling connection tables). This is because the tagged version of BLACS is not compatible with the double import denier. The tip of BLACS is compatible though.\r\n\r\nWe should tag (release) a new version of BLACS to fix this (especially since the tagged version is 132 commits behind the tip....). I'm making this issue because I'm not up to speed on which version we should be tagging (is the tip stable enough to tag?)", "markup": "markdown", "html": "<p>If you use the latest tagged BLACS version along with the latest tagged version of labscript_utils (aka from a fresh install) then none of the plugins load (which messes up themes and prevents you from compiling connection tables). This is because the tagged version of BLACS is not compatible with the double import denier. The tip of BLACS is compatible though.</p>\n<p>We should tag (release) a new version of BLACS to fix this (especially since the tagged version is 132 commits behind the tip....). I'm making this issue because I'm not up to speed on which version we should be tagging (is the tip stable enough to tag?)</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-06-19T04:55:35.772208+00:00", "milestone": null, "updated_on": "2018-06-19T05:43:51.531703+00:00", "type": "issue", "id": 43}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/44/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/44.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/44/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/44/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/44/blacs-logging-fails-overnight"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/44/vote"}}, "reporter": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "title": "BLACS logging fails overnight", "component": null, "votes": 0, "watches": 1, "content": {"raw": "If BLACS runs overnight we get the following in the morning on first shot:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\logging\\handlers.py\", line 77, in emit\r\n    self.doRollover()\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\logging\\handlers.py\", line 142, in doRollover\r\n    os.rename(self.baseFilename, dfn)\r\nWindowsError: [Error 32] The process cannot access the file because it is being used by another process\r\nLogged from file tab_base_classes.py, line 827\r\nTraceback (most recent call last):\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\logging\\handlers.py\", line 77, in emit\r\n    self.doRollover()\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\logging\\handlers.py\", line 142, in doRollover\r\n    os.rename(self.baseFilename, dfn)\r\nWindowsError: [Error 32] The process cannot access the file because it is being used by another process\r\nLogged from file tab_base_classes.py, line 806", "markup": "markdown", "html": "<p>If BLACS runs overnight we get the following in the morning on first shot:</p>\n<p>Traceback (most recent call last):\n  File \"C:\\ProgramData\\Anaconda2\\lib\\logging\\handlers.py\", line 77, in emit\n    self.doRollover()\n  File \"C:\\ProgramData\\Anaconda2\\lib\\logging\\handlers.py\", line 142, in doRollover\n    os.rename(self.baseFilename, dfn)\nWindowsError: [Error 32] The process cannot access the file because it is being used by another process\nLogged from file tab_base_classes.py, line 827\nTraceback (most recent call last):\n  File \"C:\\ProgramData\\Anaconda2\\lib\\logging\\handlers.py\", line 77, in emit\n    self.doRollover()\n  File \"C:\\ProgramData\\Anaconda2\\lib\\logging\\handlers.py\", line 142, in doRollover\n    os.rename(self.baseFilename, dfn)\nWindowsError: [Error 32] The process cannot access the file because it is being used by another process\nLogged from file tab_base_classes.py, line 806</p>", "type": "rendered"}, "assignee": null, "state": "duplicate", "version": null, "edited_on": null, "created_on": "2018-07-10T00:25:32.671632+00:00", "milestone": null, "updated_on": "2018-07-10T07:35:50.806999+00:00", "type": "issue", "id": 44}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/45/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/45.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/45/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/45/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/45/cant-start-after-a-crash-if-previously"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/45/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{29b89d33-dfb4-4651-9a79-ffb35b7ca689}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B29b89d33-dfb4-4651-9a79-ffb35b7ca689%7D"}, "html": {"href": "https://bitbucket.org/%7B29b89d33-dfb4-4651-9a79-ffb35b7ca689%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/8105ae398115f6a5b58ce40d07fa431fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-0.png"}}, "nickname": "shaunj", "type": "user", "account_id": "557058:af791b1b-04dd-4b89-8a97-fd688cb64b82"}, "title": "Can't start after a crash if previously queued shots have been deleted", "component": null, "votes": 0, "watches": 1, "content": {"raw": "If BLACS crashes, and hence doesn't save the latest experiment queue, the next time it starts it tries to load a potentially outdated queue from the last time it was closed cleanly.\r\nThere should be a try/except when loading these shots into the queue on startup, as they may have been deleted since the configuration was last saved.", "markup": "markdown", "html": "<p>If BLACS crashes, and hence doesn't save the latest experiment queue, the next time it starts it tries to load a potentially outdated queue from the last time it was closed cleanly.\nThere should be a try/except when loading these shots into the queue on startup, as they may have been deleted since the configuration was last saved.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-07-11T02:26:07.269269+00:00", "milestone": null, "updated_on": "2018-07-11T05:12:41.738890+00:00", "type": "issue", "id": 45}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/46/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/46.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/46/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/46/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/46/blacs-stuck-in-queue-error"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/46/vote"}}, "reporter": null, "title": "Blacs stuck in queue error", "component": null, "votes": 0, "watches": null, "content": {"raw": "If server is full and BLACS can't save the data, then error message pops up. Once the server has space and the error message is gone, BLACS is stuck in en error state and needs to be closed and reopened", "markup": "markdown", "html": "<p>If server is full and BLACS can't save the data, then error message pops up. Once the server has space and the error message is gone, BLACS is stuck in en error state and needs to be closed and reopened</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-07-12T00:30:31.438047+00:00", "milestone": null, "updated_on": "2018-07-12T00:42:55.351568+00:00", "type": "issue", "id": 46}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/47/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/47.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/47/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/47/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/47/consoles-dont-remember-their-size-or"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/47/vote"}}, "reporter": {"display_name": "Lincoln Turner", "uuid": "{7e35ca32-09d7-4a25-a548-32edef727dda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D"}, "html": {"href": "https://bitbucket.org/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2ac774c664cd58fc011cc65e0980b4c1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLT-3.png"}}, "nickname": "lincolndturner", "type": "user", "account_id": "5b46a53d845e7e2cdff75ad3"}, "title": "Consoles don't remember their size or popped-outness", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The new BLACS console feature is great, but after a worker restart or BLACS restart the console disappears again. It is readily retrieved, but ideally BLACS would remember the console geometry inside each tab.", "markup": "markdown", "html": "<p>The new BLACS console feature is great, but after a worker restart or BLACS restart the console disappears again. It is readily retrieved, but ideally BLACS would remember the console geometry inside each tab.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-07-12T00:50:25.272201+00:00", "milestone": null, "updated_on": "2018-07-12T23:29:22.198329+00:00", "type": "issue", "id": 47}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/48/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/48.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/48/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/48/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/48/devices-with-broken-code-break-blacs-even"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/48/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Devices with broken code break BLACS (even though we supposedly fixed this)", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The code to gracefully handle device tabs that raise exceptions (when they are instantiated) is broken. It modifies the dictionary we are iterating over, which then raises it's own exception (at least under Python 3.6).\r\n\r\nWe should store the devices to remove in a list, and then remove them after we have attempted to initialise each device tab.\r\n\r\nSee lines 277 and 291 [here](#!/labscript_suite/blacs/src/f6faf14e9f6285e6cdecfc76260343ba3dd56f3f/__main__.py?at=default&fileviewer=file-view-default#__main__.py-277)", "markup": "markdown", "html": "<p>The code to gracefully handle device tabs that raise exceptions (when they are instantiated) is broken. It modifies the dictionary we are iterating over, which then raises it's own exception (at least under Python 3.6).</p>\n<p>We should store the devices to remove in a list, and then remove them after we have attempted to initialise each device tab.</p>\n<p>See lines 277 and 291 <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/src/f6faf14e9f6285e6cdecfc76260343ba3dd56f3f/__main__.py?at=default&amp;fileviewer=file-view-default#__main__.py-277\" rel=\"nofollow\">here</a></p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-09-20T04:45:29.964089+00:00", "milestone": null, "updated_on": "2018-10-01T20:11:30.488156+00:00", "type": "issue", "id": 48}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/49/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/49.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/49/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/49/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/49/the-blacs-tab-statemachine-can-crash-if"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/49/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "The BLACS tab statemachine can crash if you return before yielding in a generator", "component": null, "votes": 0, "watches": 1, "content": {"raw": "For methods decorated with our `define_state` decorator we queue work up in the worker process using the `yield` keyword. This means that the method is a generator.\r\n\r\nI seem to have hit a bug though where the method is detected as a generator, but doesn't actually ever yield, which then raises a `StopIteration` exception on [this](#!/labscript_suite/blacs/src/b41afcffa5e857fe8a15178520cf1765c69e6438/tab_base_classes.py#lines-707) line of code. \r\n\r\nThe particular code that seems to be causing this is if you have a return statement in an if block, prior to actually calling `yield` for the first time. I had assumed that if it took that path, that it wouldn't be seen as a generator, and thus would never hit the link I linked to above. Apparently not, at least on Python 2.7.\r\n\r\nMaking this issue to remind us to investigate it a bit more (unless someone can immediately see what is wrong with the code).\r\n\r\nCurrently I think it probably will only affect the OpalKelly device code which has not been merged in yet. But it probably makes sense to fix whatever is wrong on the BLACS side rather than enforcing that you can't return prior to a yield in decorated device tab methods.", "markup": "markdown", "html": "<p>For methods decorated with our <code>define_state</code> decorator we queue work up in the worker process using the <code>yield</code> keyword. This means that the method is a generator.</p>\n<p>I seem to have hit a bug though where the method is detected as a generator, but doesn't actually ever yield, which then raises a <code>StopIteration</code> exception on <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/src/b41afcffa5e857fe8a15178520cf1765c69e6438/tab_base_classes.py#lines-707\" rel=\"nofollow\">this</a> line of code. </p>\n<p>The particular code that seems to be causing this is if you have a return statement in an if block, prior to actually calling <code>yield</code> for the first time. I had assumed that if it took that path, that it wouldn't be seen as a generator, and thus would never hit the link I linked to above. Apparently not, at least on Python 2.7.</p>\n<p>Making this issue to remind us to investigate it a bit more (unless someone can immediately see what is wrong with the code).</p>\n<p>Currently I think it probably will only affect the OpalKelly device code which has not been merged in yet. But it probably makes sense to fix whatever is wrong on the BLACS side rather than enforcing that you can't return prior to a yield in decorated device tab methods.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-09-27T04:13:44.383348+00:00", "milestone": null, "updated_on": "2018-09-27T04:13:44.383348+00:00", "type": "issue", "id": 49}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/50/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/50.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/50/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/50/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/50/add-information-on-loaded-plugins"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/50/vote"}}, "reporter": {"display_name": "Lars Kohfahl", "uuid": "{14b59397-cbc0-4d8c-8a4a-fe99fb4d2d4a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B14b59397-cbc0-4d8c-8a4a-fe99fb4d2d4a%7D"}, "html": {"href": "https://bitbucket.org/%7B14b59397-cbc0-4d8c-8a4a-fe99fb4d2d4a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/630642264cd55e22515678a3a0489ac7d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLK-2.png"}}, "nickname": "lkohfahl", "type": "user", "account_id": "5aafc5d11396802a57aa7f3b"}, "title": "Add information on loaded plugins", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When implementing the latest progress_bar changes I stumpled over some problems with our own progress bar because I had the naming in the labconfig file wrong. However this was not noticable as labscript just silently included the new progress bar and did not inform me about the plugins that could not be loaded.\r\nI tried to write some lines to face this problem, which probably need some improvements before starting a PR.\r\n\r\n[#!/lkohfahl/blacs/commits/1c7d683103d6dea218de4eedd25020f7c78b5544](Link URL)", "markup": "markdown", "html": "<p>When implementing the latest progress_bar changes I stumpled over some problems with our own progress bar because I had the naming in the labconfig file wrong. However this was not noticable as labscript just silently included the new progress bar and did not inform me about the plugins that could not be loaded.\nI tried to write some lines to face this problem, which probably need some improvements before starting a PR.</p>\n<p><a data-is-external-link=\"true\" href=\"/labscript_suite/blacs/src/5d3b0134453f4b3a66f818980b455f0aedd1a258/Link%20URL\" rel=\"nofollow\">#!/lkohfahl/blacs/commits/1c7d683103d6dea218de4eedd25020f7c78b5544</a></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-10-26T09:02:20.042986+00:00", "milestone": null, "updated_on": "2018-10-26T14:57:00.999223+00:00", "type": "issue", "id": 50}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/51/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/51.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/51/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/51/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/51/progress-bar-fails-for-failed-aborted"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/51/vote"}}, "reporter": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "title": "Progress bar fails for failed/aborted shots", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The progress bar indicates \u2018Error in progress bar plugin\u2019 upon the following conditions:\r\n\r\n* Abort during transition to buffered or mid-shot.\r\n* Device restart during transition to buffered or mid shot.\r\n\r\nAnd possibly upon:\r\n\r\n* Timeout during transition to buffered.\r\n* Other `error_condition` handled in experiment\\_queue.py.\r\n\r\nThese all stem from a failed `assert running` in the stop callback of the progress bar's `mainloop`.", "markup": "markdown", "html": "<p>The progress bar indicates \u2018Error in progress bar plugin\u2019 upon the following conditions:</p>\n<ul>\n<li>Abort during transition to buffered or mid-shot.</li>\n<li>Device restart during transition to buffered or mid shot.</li>\n</ul>\n<p>And possibly upon:</p>\n<ul>\n<li>Timeout during transition to buffered.</li>\n<li>Other <code>error_condition</code> handled in experiment_queue.py.</li>\n</ul>\n<p>These all stem from a failed <code>assert running</code> in the stop callback of the progress bar's <code>mainloop</code>.</p>", "type": "rendered"}, "assignee": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-05-11T14:26:40.448348+00:00", "milestone": null, "updated_on": "2019-05-13T17:38:43.701811+00:00", "type": "issue", "id": 51}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/52/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/52.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/52/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/52/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/52/lost-blacs-window-after-compile-and"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/52/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Lost BLACS window after compile and restart", "component": null, "votes": 0, "watches": 1, "content": {"raw": "On Windows 10 multi-monitor setups, multiple users have reported that after a compile-and-restart, the BLACS window goes missing. It has an entry in the taskbar, but if clicked on, no window becomes visible. The window is off-screen or invisible, or something, and can't be coerced to come back.\r\n\r\nI'm unsure if it remains missing after closing it (via the taskbar right click menu) and starting it again. I haven't seen it myself yet, but it sounds like it happens often enough that I will see it at some point. It might only happen with horizontally oriented monitors.", "markup": "markdown", "html": "<p>On Windows 10 multi-monitor setups, multiple users have reported that after a compile-and-restart, the BLACS window goes missing. It has an entry in the taskbar, but if clicked on, no window becomes visible. The window is off-screen or invisible, or something, and can't be coerced to come back.</p>\n<p>I'm unsure if it remains missing after closing it (via the taskbar right click menu) and starting it again. I haven't seen it myself yet, but it sounds like it happens often enough that I will see it at some point. It might only happen with horizontally oriented monitors.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-06-04T20:19:20.951997+00:00", "milestone": null, "updated_on": "2019-06-04T23:20:39.639192+00:00", "type": "issue", "id": 52}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/53/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/53.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/53/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/53/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/53/ways-of-speeding-up-cycle-time-pipelining"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/53/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Ways of speeding up cycle time. Pipelining, readahead, removing redundant steps.", "component": null, "votes": 0, "watches": 1, "content": {"raw": "There are a few ways we might speed up the overall rate at which shots are run. Some are pretty invasive so it's not a minor change, but the basic idea is to split up `transition_to_buffered()` and `transition_to_manual()` into multiple steps, and a) only call the ones that are necessary, and b) call the ones that are not dependent on previous steps simultaneously.\r\n\r\nSo for example, `transition_to_manual()` could be split into:\r\n\r\n* Read data from hardware (this can be done before the shot is even complete)\r\n* Save data to shot file (this can be done after the shot is complete, even whilst the next shot is running)\r\n* Get hardware into an appropriate state for either a) another buffered run or b) actual  transition to manual. (`program_manual` could be skipped unless the queue is paused)\r\n\r\n`transition_to_buffered()` could be split into:\r\n\r\n* Read instructions from the shot file (this can be done before the previous shot is complete, and can be completely skipped if it is known that the shot is an exact repeat of the previous one)\r\n* Program the hardware\r\n\r\nRunning as many of these steps as possible simultaneously, and skipping unnecessary ones could go some way to speeding up the cycle time of BLACS. In the ideal case, devices that are retriggerable with the same date will not need any reconfiguration in between shots, and will contribute no overhead.\r\n\r\nProfiling will reveal what the actual overhead is. If after fixing the above sources of overhead (if they are what's dominating), it turns out that opening and closing HDF5 files is the slow thing, then we can have some kind of intelligent \"readahead\" in one hit in a single process as soon as the shot arrives in BLACS - knowing based on previous shots what groups and datasets a particular driver opened, the data can be read all ahead of time and the worker process will see a proxy HDF5 file object which requires no zlock to open, and which already has all data available, only opening the actual shot file if the driver attempts to read a group that was not read in advance. This would consume more RAM, so should be disableable of course.\r\n\r\nThese are the sorts of optimisation we could do, but before any of it I would want to do profiling, marking particular functions and when they were called, and getting some statistics to see where the bottlenecks are.", "markup": "markdown", "html": "<p>There are a few ways we might speed up the overall rate at which shots are run. Some are pretty invasive so it's not a minor change, but the basic idea is to split up <code>transition_to_buffered()</code> and <code>transition_to_manual()</code> into multiple steps, and a) only call the ones that are necessary, and b) call the ones that are not dependent on previous steps simultaneously.</p>\n<p>So for example, <code>transition_to_manual()</code> could be split into:</p>\n<ul>\n<li>Read data from hardware (this can be done before the shot is even complete)</li>\n<li>Save data to shot file (this can be done after the shot is complete, even whilst the next shot is running)</li>\n<li>Get hardware into an appropriate state for either a) another buffered run or b) actual  transition to manual. (<code>program_manual</code> could be skipped unless the queue is paused)</li>\n</ul>\n<p><code>transition_to_buffered()</code> could be split into:</p>\n<ul>\n<li>Read instructions from the shot file (this can be done before the previous shot is complete, and can be completely skipped if it is known that the shot is an exact repeat of the previous one)</li>\n<li>Program the hardware</li>\n</ul>\n<p>Running as many of these steps as possible simultaneously, and skipping unnecessary ones could go some way to speeding up the cycle time of BLACS. In the ideal case, devices that are retriggerable with the same date will not need any reconfiguration in between shots, and will contribute no overhead.</p>\n<p>Profiling will reveal what the actual overhead is. If after fixing the above sources of overhead (if they are what's dominating), it turns out that opening and closing HDF5 files is the slow thing, then we can have some kind of intelligent \"readahead\" in one hit in a single process as soon as the shot arrives in BLACS - knowing based on previous shots what groups and datasets a particular driver opened, the data can be read all ahead of time and the worker process will see a proxy HDF5 file object which requires no zlock to open, and which already has all data available, only opening the actual shot file if the driver attempts to read a group that was not read in advance. This would consume more RAM, so should be disableable of course.</p>\n<p>These are the sorts of optimisation we could do, but before any of it I would want to do profiling, marking particular functions and when they were called, and getting some statistics to see where the bottlenecks are.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "new", "version": null, "edited_on": null, "created_on": "2019-12-08T19:18:39.292230+00:00", "milestone": null, "updated_on": "2019-12-09T17:28:21.100407+00:00", "type": "issue", "id": 53}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/54/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/54.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/54/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/54/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/54/be-able-to-check-remote-versions-of-blacs"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/54/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Be able to check remote versions (of BLACS and other components)", "component": null, "votes": 0, "watches": 1, "content": {"raw": "After PR #79, there is the possibility that BLACS will not work correctly with a remote worker due to the two running incompatible versions of BLACS.\r\n\r\nProviding strict backward compatibility is likely more effort than it's worth, but we need a way to at least identify the situation and tell the user about it so that they can upgrade BLACS on the affected machine.\r\n\r\nTo that end, BLACS workers should have a `check_version` method that calls `labscript_utils.check_version` to inspect the versions of arbitrary modules/components. BLACS should call it upon worker startup to ensure that BLACS itself is new enough, catching the AttributeError if the remote version is old enough that it doesn't even have the `check_version` method yet. It should then raise an error prompting the user to upgrade BLACS on the remote machine to the appropriate minimum version.\r\n\r\nThe method can then later be used to enforce version requirements of individual labscript devices - though before we do that, `labscript_utils.check_version` will need to learn to look at `__version__` attributes of arbitrary submodules (right now it only looks at top-level modules, since it tries to determine versions from package metadata rather than actually importing modules).\r\n\r\nNote that the error message from `check_version`, if it raises an exception, should be wrapped to say that the error happened on the remote computer, otherwise it can be quite confusing for the user, who won't be able to tell which machine the error applies to.\r\n\r\nThis should be implemented before the next release. Once this issue is migrated to github, we should add this issue to a release milestone.", "markup": "markdown", "html": "<p>After <a href=\"#!/labscript_suite/blacs/pull-requests/79/convert-filepaths-to-network-format\" rel=\"nofollow\" class=\"ap-connect-link\">PR #79</a>, there is the possibility that BLACS will not work correctly with a remote worker due to the two running incompatible versions of BLACS.</p>\n<p>Providing strict backward compatibility is likely more effort than it's worth, but we need a way to at least identify the situation and tell the user about it so that they can upgrade BLACS on the affected machine.</p>\n<p>To that end, BLACS workers should have a <code>check_version</code> method that calls <code>labscript_utils.check_version</code> to inspect the versions of arbitrary modules/components. BLACS should call it upon worker startup to ensure that BLACS itself is new enough, catching the AttributeError if the remote version is old enough that it doesn't even have the <code>check_version</code> method yet. It should then raise an error prompting the user to upgrade BLACS on the remote machine to the appropriate minimum version.</p>\n<p>The method can then later be used to enforce version requirements of individual labscript devices - though before we do that, <code>labscript_utils.check_version</code> will need to learn to look at <code>__version__</code> attributes of arbitrary submodules (right now it only looks at top-level modules, since it tries to determine versions from package metadata rather than actually importing modules).</p>\n<p>Note that the error message from <code>check_version</code>, if it raises an exception, should be wrapped to say that the error happened on the remote computer, otherwise it can be quite confusing for the user, who won't be able to tell which machine the error applies to.</p>\n<p>This should be implemented before the next release. Once this issue is migrated to github, we should add this issue to a release milestone.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "new", "version": null, "edited_on": null, "created_on": "2020-01-28T20:53:50.579239+00:00", "milestone": null, "updated_on": "2020-01-28T20:53:50.579239+00:00", "type": "issue", "id": 54}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/blacs/issues/55/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/issues/55.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/55/watch"}, "comments": {"href": "data/repositories/labscript_suite/blacs/issues/55/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/blacs/issues/55/implement-abort-during-delay-when-using"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/issues/55/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Implement abort during delay when using cycle_time plugin", "component": null, "votes": 0, "watches": 1, "content": {"raw": "In PR #50, the \"cycle_time\" plugin, I did not implement handing the case where the user clicks the abort button whilst the experiment queue is waiting for the target time before running the next shot. Nothing is checking for the abort event whilst the queue is waiting, and this means the abort does not actually occur until after transition_to_buffered, which isn't what you want.", "markup": "markdown", "html": "<p>In <a href=\"#!/labscript_suite/blacs/pull-requests/50/fixed-shot-interval\" rel=\"nofollow\" class=\"ap-connect-link\">PR #50</a>, the \"cycle_time\" plugin, I did not implement handing the case where the user clicks the abort button whilst the experiment queue is waiting for the target time before running the next shot. Nothing is checking for the abort event whilst the queue is waiting, and this means the abort does not actually occur until after transition_to_buffered, which isn't what you want.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "new", "version": null, "edited_on": null, "created_on": "2020-01-28T21:07:17.392479+00:00", "milestone": null, "updated_on": "2020-01-28T21:07:17.392479+00:00", "type": "issue", "id": 55}], "page": 1, "size": 55}