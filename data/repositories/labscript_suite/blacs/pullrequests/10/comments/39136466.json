{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/10/comments/39136466.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/10/_/diff#comment-39136466"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 10, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/10.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/10"}}, "title": "Prevent GUI from jumping around, pixel saving, analysis submission improvements"}, "content": {"raw": "I pushed a fix. Pretty simple:\n\n\n```\n#!diff\n\n--- a/queue.py\tMon Jun 19 14:29:52 2017 -0400\n+++ b/queue.py\tTue Jun 20 00:42:29 2017 -0400\n@@ -801,25 +801,25 @@\n                         error_condition = True\n                     if self.get_device_error_state(device_name,devices_in_use):\n                         error_condition = True\n                     # Once device has transitioned_to_manual, disconnect restart signal\n                     inmain(tab.disconnect_restart_receiver,restart_function)\n                     \n                 if error_condition:                \n                     self.set_status(\"Error in transtion to manual\\nQueue Paused\")\n-                    # TODO: Kind of dodgy raising an exception here...\n-                    raise Exception('A device failed during transition to manual')\n                                        \n             except Exception as e:\n+                error_condition = True\n                 logger.exception(\"Error in queue manager execution. Queue paused.\")\n \n                 # Raise the error in a thread for visibility\n                 zprocess.raise_exception_in_thread(sys.exc_info())\n                 \n+            if error_condition:\n                 # clean up the h5 file\n                 self.manager_paused = True\n                 # clean the h5 file:\n                 self.clean_h5_file(path, 'temp.h5')\n                 try:\n                     os.remove(path)\n                     os.rename('temp.h5', path)\n                 except WindowsError if platform.system() == 'Windows' else None:\n```\n", "markup": "markdown", "html": "<p>I pushed a fix. Pretty simple:</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gd\">--- a/queue.py  Mon Jun 19 14:29:52 2017 -0400</span>\n<span class=\"gi\">+++ b/queue.py  Tue Jun 20 00:42:29 2017 -0400</span>\n<span class=\"gu\">@@ -801,25 +801,25 @@</span>\n                         error_condition = True\n                     if self.get_device_error_state(device_name,devices_in_use):\n                         error_condition = True\n                     # Once device has transitioned_to_manual, disconnect restart signal\n                     inmain(tab.disconnect_restart_receiver,restart_function)\n\n                 if error_condition:                \n                     self.set_status(&quot;Error in transtion to manual\\nQueue Paused&quot;)\n<span class=\"gd\">-                    # TODO: Kind of dodgy raising an exception here...</span>\n<span class=\"gd\">-                    raise Exception(&#39;A device failed during transition to manual&#39;)</span>\n\n             except Exception as e:\n<span class=\"gi\">+                error_condition = True</span>\n                 logger.exception(&quot;Error in queue manager execution. Queue paused.&quot;)\n\n                 # Raise the error in a thread for visibility\n                 zprocess.raise_exception_in_thread(sys.exc_info())\n\n<span class=\"gi\">+            if error_condition:</span>\n                 # clean up the h5 file\n                 self.manager_paused = True\n                 # clean the h5 file:\n                 self.clean_h5_file(path, &#39;temp.h5&#39;)\n                 try:\n                     os.remove(path)\n                     os.rename(&#39;temp.h5&#39;, path)\n                 except WindowsError if platform.system() == &#39;Windows&#39; else None:\n</pre></div>", "type": "rendered"}, "created_on": "2017-06-20T04:42:54.404618+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-20T04:42:54.407903+00:00", "type": "pullrequest_comment", "id": 39136466}