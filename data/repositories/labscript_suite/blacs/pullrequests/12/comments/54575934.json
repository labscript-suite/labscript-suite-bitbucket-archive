{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/12/comments/54575934.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/12/_/diff#comment-54575934"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/12"}}, "title": "Inverted DO"}, "content": {"raw": "So I've had a think about how this fits in with future planned development \\(specifically around \"virtual devices\" which pull channels from multiple devices into a new collection on a new tab\\).\n\nI think that the following will fit better with that planned development:\n\n* The `DO` class shouldn't be passed the `inverted` value from the connection table at instantiation of the `DO` object. Instead, `inverted` should be read from the connection table in `DeviceTab.create_digital_widgets` and passed to `DO.create_widget`, so that the correct widget class can be instantiated. \n* Similarly, `DO.add_widget`should take `inverted` as a optional kwarg \\(and `DO.create_widget` should pass this in to `add_widget`\\).\n* In `DO.add_widget`, the line `widget.toggled.connect(self.set_value)` should become `widget.toggled.connect(self.set_value if not inverted else lambda state: self.set_value(not state))`\n* The additional code from `DO.set_value` is then removed \\(as is the code from `DO.__init__`\\)\n\nThis moves the inversion logic to the connection of a widget, thus allowing both inverted and non-inverted widgets to be connected to one DO object. This means virtual devices can be created with controls for either behaviour, regardless of the state of the `inverted` parameter in the connection table \\(the default presented when constructing virtual devices would be the state of the `inverted` parameter, but the user would have the option to ignore it\\)", "markup": "markdown", "html": "<p>So I've had a think about how this fits in with future planned development (specifically around \"virtual devices\" which pull channels from multiple devices into a new collection on a new tab).</p>\n<p>I think that the following will fit better with that planned development:</p>\n<ul>\n<li>The <code>DO</code> class shouldn't be passed the <code>inverted</code> value from the connection table at instantiation of the <code>DO</code> object. Instead, <code>inverted</code> should be read from the connection table in <code>DeviceTab.create_digital_widgets</code> and passed to <code>DO.create_widget</code>, so that the correct widget class can be instantiated. </li>\n<li>Similarly, <code>DO.add_widget</code>should take <code>inverted</code> as a optional kwarg (and <code>DO.create_widget</code> should pass this in to <code>add_widget</code>).</li>\n<li>In <code>DO.add_widget</code>, the line <code>widget.toggled.connect(self.set_value)</code> should become <code>widget.toggled.connect(self.set_value if not inverted else lambda state: self.set_value(not state))</code></li>\n<li>The additional code from <code>DO.set_value</code> is then removed (as is the code from <code>DO.__init__</code>)</li>\n</ul>\n<p>This moves the inversion logic to the connection of a widget, thus allowing both inverted and non-inverted widgets to be connected to one DO object. This means virtual devices can be created with controls for either behaviour, regardless of the state of the <code>inverted</code> parameter in the connection table (the default presented when constructing virtual devices would be the state of the <code>inverted</code> parameter, but the user would have the option to ignore it)</p>", "type": "rendered"}, "created_on": "2018-01-25T05:33:56.652283+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-01-25T05:33:56.654753+00:00", "type": "pullrequest_comment", "id": 54575934}