{"pagelen": 50, "values": [{"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/71749594.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-71749594"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}, "content": {"raw": "Merged! Thanks everyone :)", "markup": "markdown", "html": "<p>Merged! Thanks everyone :)</p>", "type": "rendered"}, "created_on": "2018-08-02T01:47:31.692534+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-08-02T01:47:31.698826+00:00", "type": "pullrequest_comment", "id": 71749594}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"update": {"description": "This adds the ability for plugins to spawn Tabs.\r\n\r\nA plugin can spawn a tab by having a ```get_tab_classes(self)``` function. This function should return a dict of Tab classes, where the key should be the name of the Tab.\r\n\r\nPlugin tabs should inherit from the ```PluginTab``` class in ```blacs.tab_base_classes```. This class provides some basic functionality a tab in BLACS currently needs. Also this allows for the Plugin tabs to use ```get_save_data``` to store and ``` restore_save_data``` to restore data that they might want to save. The initialization of the GUI should be implemented in a function called ```initialise_GUI```, that automatically gets called in the constructor.\r\n\r\nTo visually distinguish plugin tabs from devices their text is blue and they have a different icon.\r\n\r\n![plugin.png](https://bitbucket.org/repo/LoryaEL/images/2179717442-plugin.png)\r\n\r\nHere is example code for a basic tab with a button that raises a exception on click:\r\n\r\n```\r\n#!python\r\n\r\nfrom blacs.tab_base_classes import PluginTab\r\nfrom qtutils.qt.QtWidgets import *\r\n\r\nclass Plugin(object):\r\n    def __init__(self, initial_settings):\r\n        self.menu = None\r\n        self.notifications = {}\r\n        self.BLACS = None\r\n        self.tabs = {}\r\n\r\n    def get_menu_class(self):\r\n        return None\r\n\r\n    def get_notification_classes(self):\r\n        return []\r\n\r\n    def get_setting_classes(self):\r\n        return []\r\n\r\n    def get_callbacks(self):\r\n        return {}\r\n\r\n    def set_menu_instance(self, menu):\r\n        self.menu = menu\r\n\r\n    def set_notification_instances(self, notifications):\r\n        self.notifications = notifications\r\n\r\n    def plugin_setup_complete(self, BLACS):\r\n        self.BLACS = BLACS\r\n\r\n    def get_tab_classes(self):\r\n        return {'hallo': TestTab}\r\n\r\n    def tabs_created(self, tabs_dict):\r\n        self.tabs = tabs_dict\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def close(self):\r\n        pass\r\n\r\n\r\nclass TestTab(PluginTab):\r\n    def initialise_GUI(self):\r\n        self.layout = self.get_tab_layout()\r\n\r\n        self.foobutton = QPushButton('Error')\r\n        self.foobutton.clicked.connect(self.test_abc)\r\n\r\n        self.layout.addWidget(self.foobutton)\r\n\r\n    def test_abc(self, *args):\r\n        raise Exception('test')\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def restore_save_data(self,data):\r\n        return\r\n\r\n```", "title": "Plugin Tabs", "destination": {"commit": {"hash": "a4ef919fc73a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/a4ef919fc73a.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/a4ef919fc73a"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0cd334a1cf38", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs/commit/0cd334a1cf38"}, "html": {"href": "#!/PhyNerd/blacs/commits/0cd334a1cf38"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs"}, "html": {"href": "#!/PhyNerd/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c389ea50-6212-43e6-a1e4-82d1fda463c1}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "PhyNerd/blacs", "uuid": "{c389ea50-6212-43e6-a1e4-82d1fda463c1}"}, "branch": {"name": "Tabs-for-Plugins"}}, "state": "MERGED", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-08-02T01:47:11.119785+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"approval": {"date": "2018-08-02T01:44:54.133995+00:00", "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}, "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/71749495.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-71749495"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}, "content": {"raw": "I\u2019ve finally got our lab up to date and tested this properly. It does not appear to impact our existing plugins.", "markup": "markdown", "html": "<p>I\u2019ve finally got our lab up to date and tested this properly. It does not appear to impact our existing plugins.</p>", "type": "rendered"}, "created_on": "2018-08-02T01:44:48.986830+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2018-08-02T01:44:48.993593+00:00", "type": "pullrequest_comment", "id": 71749495}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"update": {"description": "This adds the ability for plugins to spawn Tabs.\r\n\r\nA plugin can spawn a tab by having a ```get_tab_classes(self)``` function. This function should return a dict of Tab classes, where the key should be the name of the Tab.\r\n\r\nPlugin tabs should inherit from the ```PluginTab``` class in ```blacs.tab_base_classes```. This class provides some basic functionality a tab in BLACS currently needs. Also this allows for the Plugin tabs to use ```get_save_data``` to store and ``` restore_save_data``` to restore data that they might want to save. The initialization of the GUI should be implemented in a function called ```initialise_GUI```, that automatically gets called in the constructor.\r\n\r\nTo visually distinguish plugin tabs from devices their text is blue and they have a different icon.\r\n\r\n![plugin.png](https://bitbucket.org/repo/LoryaEL/images/2179717442-plugin.png)\r\n\r\nHere is example code for a basic tab with a button that raises a exception on click:\r\n\r\n```\r\n#!python\r\n\r\nfrom blacs.tab_base_classes import PluginTab\r\nfrom qtutils.qt.QtWidgets import *\r\n\r\nclass Plugin(object):\r\n    def __init__(self, initial_settings):\r\n        self.menu = None\r\n        self.notifications = {}\r\n        self.BLACS = None\r\n        self.tabs = {}\r\n\r\n    def get_menu_class(self):\r\n        return None\r\n\r\n    def get_notification_classes(self):\r\n        return []\r\n\r\n    def get_setting_classes(self):\r\n        return []\r\n\r\n    def get_callbacks(self):\r\n        return {}\r\n\r\n    def set_menu_instance(self, menu):\r\n        self.menu = menu\r\n\r\n    def set_notification_instances(self, notifications):\r\n        self.notifications = notifications\r\n\r\n    def plugin_setup_complete(self, BLACS):\r\n        self.BLACS = BLACS\r\n\r\n    def get_tab_classes(self):\r\n        return {'hallo': TestTab}\r\n\r\n    def tabs_created(self, tabs_dict):\r\n        self.tabs = tabs_dict\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def close(self):\r\n        pass\r\n\r\n\r\nclass TestTab(PluginTab):\r\n    def initialise_GUI(self):\r\n        self.layout = self.get_tab_layout()\r\n\r\n        self.foobutton = QPushButton('Error')\r\n        self.foobutton.clicked.connect(self.test_abc)\r\n\r\n        self.layout.addWidget(self.foobutton)\r\n\r\n    def test_abc(self, *args):\r\n        raise Exception('test')\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def restore_save_data(self,data):\r\n        return\r\n\r\n```", "title": "Plugin Tabs", "destination": {"commit": {"hash": "a4ef919fc73a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/a4ef919fc73a.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/a4ef919fc73a"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0cd334a1cf38", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs/commit/0cd334a1cf38"}, "html": {"href": "#!/PhyNerd/blacs/commits/0cd334a1cf38"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs"}, "html": {"href": "#!/PhyNerd/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c389ea50-6212-43e6-a1e4-82d1fda463c1}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "PhyNerd/blacs", "uuid": "{c389ea50-6212-43e6-a1e4-82d1fda463c1}"}, "branch": {"name": "Tabs-for-Plugins"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2018-07-28T20:33:41.475205+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/69840140.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-69840140"}}, "parent": {"id": 63741068, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/63741068.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-63741068"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}, "content": {"raw": "@shjohnst @shaunj Do you have time to test this with the labwatch plugin \\(possibly just get the plugin setup for Seb since he has functioning coil interlocks by now I assume\\)? Otherwise I\u2019m thinking we\u2019ll just merge it and deal with any consequences later \\(since they should only affect Monash KRb labs\\)", "markup": "markdown", "html": "<p>@shjohnst @shaunj Do you have time to test this with the labwatch plugin (possibly just get the plugin setup for Seb since he has functioning coil interlocks by now I assume)? Otherwise I\u2019m thinking we\u2019ll just merge it and deal with any consequences later (since they should only affect Monash KRb labs)</p>", "type": "rendered"}, "created_on": "2018-07-12T23:31:21.578040+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-07-12T23:31:21.595269+00:00", "type": "pullrequest_comment", "id": 69840140}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"update": {"description": "This adds the ability for plugins to spawn Tabs.\r\n\r\nA plugin can spawn a tab by having a ```get_tab_classes(self)``` function. This function should return a dict of Tab classes, where the key should be the name of the Tab.\r\n\r\nPlugin tabs should inherit from the ```PluginTab``` class in ```blacs.tab_base_classes```. This class provides some basic functionality a tab in BLACS currently needs. Also this allows for the Plugin tabs to use ```get_save_data``` to store and ``` restore_save_data``` to restore data that they might want to save. The initialization of the GUI should be implemented in a function called ```initialise_GUI```, that automatically gets called in the constructor.\r\n\r\nTo visually distinguish plugin tabs from devices their text is blue and they have a different icon.\r\n\r\n![plugin.png](https://bitbucket.org/repo/LoryaEL/images/2179717442-plugin.png)\r\n\r\nHere is example code for a basic tab with a button that raises a exception on click:\r\n\r\n```\r\n#!python\r\n\r\nfrom blacs.tab_base_classes import PluginTab\r\nfrom qtutils.qt.QtWidgets import *\r\n\r\nclass Plugin(object):\r\n    def __init__(self, initial_settings):\r\n        self.menu = None\r\n        self.notifications = {}\r\n        self.BLACS = None\r\n        self.tabs = {}\r\n\r\n    def get_menu_class(self):\r\n        return None\r\n\r\n    def get_notification_classes(self):\r\n        return []\r\n\r\n    def get_setting_classes(self):\r\n        return []\r\n\r\n    def get_callbacks(self):\r\n        return {}\r\n\r\n    def set_menu_instance(self, menu):\r\n        self.menu = menu\r\n\r\n    def set_notification_instances(self, notifications):\r\n        self.notifications = notifications\r\n\r\n    def plugin_setup_complete(self, BLACS):\r\n        self.BLACS = BLACS\r\n\r\n    def get_tab_classes(self):\r\n        return {'hallo': TestTab}\r\n\r\n    def tabs_created(self, tabs_dict):\r\n        self.tabs = tabs_dict\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def close(self):\r\n        pass\r\n\r\n\r\nclass TestTab(PluginTab):\r\n    def initialise_GUI(self):\r\n        self.layout = self.get_tab_layout()\r\n\r\n        self.foobutton = QPushButton('Error')\r\n        self.foobutton.clicked.connect(self.test_abc)\r\n\r\n        self.layout.addWidget(self.foobutton)\r\n\r\n    def test_abc(self, *args):\r\n        raise Exception('test')\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def restore_save_data(self,data):\r\n        return\r\n\r\n```", "title": "Plugin Tabs", "destination": {"commit": {"hash": "4428a9f79ad0", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/4428a9f79ad0.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/4428a9f79ad0"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "149f280b2054", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs/commit/149f280b2054"}, "html": {"href": "#!/PhyNerd/blacs/commits/149f280b2054"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs"}, "html": {"href": "#!/PhyNerd/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c389ea50-6212-43e6-a1e4-82d1fda463c1}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "PhyNerd/blacs", "uuid": "{c389ea50-6212-43e6-a1e4-82d1fda463c1}"}, "branch": {"name": "Tabs-for-Plugins"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2018-07-12T10:04:14.526994+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/65486644.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-65486644"}}, "parent": {"id": 63741068, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/63741068.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-63741068"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}, "content": {"raw": "@shjohnst  did you get to further test the changes?", "markup": "markdown", "html": "<p>@shjohnst  did you get to further test the changes?</p>", "type": "rendered"}, "created_on": "2018-05-28T20:11:43.263674+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-05-28T20:11:43.307879+00:00", "type": "pullrequest_comment", "id": 65486644}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/63741068.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-63741068"}}, "parent": {"id": 63739169, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/63739169.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-63739169"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}, "content": {"raw": "OK, I've only tested on Seb's machine, which doesn't have the labwatch plugin. I'll do further testing tomorrow.\nThe connection table plugin seems to work fine though.", "markup": "markdown", "html": "<p>OK, I've only tested on Seb's machine, which doesn't have the labwatch plugin. I'll do further testing tomorrow.\nThe connection table plugin seems to work fine though.</p>", "type": "rendered"}, "created_on": "2018-05-09T08:44:46.199304+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2018-05-09T08:44:46.213294+00:00", "type": "pullrequest_comment", "id": 63741068}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/63739169.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-63739169"}}, "parent": {"id": 63733938, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/63733938.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-63733938"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}, "content": {"raw": "Mainly I wanted you to check that the changes didn't break existing plugins \\(including labwatch\\) even though they don't use the plugin tab \\(I wanted to ensure some of the extra code to support tabs wasn't breaking existing functionality, especially given we have a plugin that is not in the mainline\\)", "markup": "markdown", "html": "<p>Mainly I wanted you to check that the changes didn't break existing plugins (including labwatch) even though they don't use the plugin tab (I wanted to ensure some of the extra code to support tabs wasn't breaking existing functionality, especially given we have a plugin that is not in the mainline)</p>", "type": "rendered"}, "created_on": "2018-05-09T08:29:08.387518+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-05-09T08:29:08.399328+00:00", "type": "pullrequest_comment", "id": 63739169}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/63733938.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-63733938"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}, "content": {"raw": "I've just tested this, with the example test plugin above, on an experiment running PyQt5.\nNo issues so far, is there anything in particular that I should look out for @pstarkey @cbillington?", "markup": "markdown", "html": "<p>I've just tested this, with the example test plugin above, on an experiment running PyQt5.\nNo issues so far, is there anything in particular that I should look out for @pstarkey @cbillington?</p>", "type": "rendered"}, "created_on": "2018-05-09T07:44:50.082364+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2018-05-09T07:44:50.106507+00:00", "type": "pullrequest_comment", "id": 63733938}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/63606392.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-63606392"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}, "content": {"raw": "@shjohnst  do have some time on your hand to test this?", "markup": "markdown", "html": "<p>@shjohnst  do have some time on your hand to test this?</p>", "type": "rendered"}, "created_on": "2018-05-08T08:11:14.953374+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-05-08T08:11:15.009398+00:00", "type": "pullrequest_comment", "id": 63606392}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"update": {"description": "This adds the ability for plugins to spawn Tabs.\r\n\r\nA plugin can spawn a tab by having a ```get_tab_classes(self)``` function. This function should return a dict of Tab classes, where the key should be the name of the Tab.\r\n\r\nPlugin tabs should inherit from the ```PluginTab``` class in ```blacs.tab_base_classes```. This class provides some basic functionality a tab in BLACS currently needs. Also this allows for the Plugin tabs to use ```get_save_data``` to store and ``` restore_save_data``` to restore data that they might want to save. The initialization of the GUI should be implemented in a function called ```initialise_GUI```, that automatically gets called in the constructor.\r\n\r\nTo visually distinguish plugin tabs from devices their text is blue and they have a different icon.\r\n\r\n![plugin.png](https://bitbucket.org/repo/LoryaEL/images/2179717442-plugin.png)\r\n\r\nHere is example code for a basic tab with a button that raises a exception on click:\r\n\r\n```\r\n#!python\r\n\r\nfrom blacs.tab_base_classes import PluginTab\r\nfrom qtutils.qt.QtWidgets import *\r\n\r\nclass Plugin(object):\r\n    def __init__(self, initial_settings):\r\n        self.menu = None\r\n        self.notifications = {}\r\n        self.BLACS = None\r\n        self.tabs = {}\r\n\r\n    def get_menu_class(self):\r\n        return None\r\n\r\n    def get_notification_classes(self):\r\n        return []\r\n\r\n    def get_setting_classes(self):\r\n        return []\r\n\r\n    def get_callbacks(self):\r\n        return {}\r\n\r\n    def set_menu_instance(self, menu):\r\n        self.menu = menu\r\n\r\n    def set_notification_instances(self, notifications):\r\n        self.notifications = notifications\r\n\r\n    def plugin_setup_complete(self, BLACS):\r\n        self.BLACS = BLACS\r\n\r\n    def get_tab_classes(self):\r\n        return {'hallo': TestTab}\r\n\r\n    def tabs_created(self, tabs_dict):\r\n        self.tabs = tabs_dict\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def close(self):\r\n        pass\r\n\r\n\r\nclass TestTab(PluginTab):\r\n    def initialise_GUI(self):\r\n        self.layout = self.get_tab_layout()\r\n\r\n        self.foobutton = QPushButton('Error')\r\n        self.foobutton.clicked.connect(self.test_abc)\r\n\r\n        self.layout.addWidget(self.foobutton)\r\n\r\n    def test_abc(self, *args):\r\n        raise Exception('test')\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def restore_save_data(self,data):\r\n        return\r\n\r\n```", "title": "Plugin Tabs", "destination": {"commit": {"hash": "69c298544993", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/69c298544993.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/69c298544993"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "1d28a19b327c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs/commit/1d28a19b327c"}, "html": {"href": "#!/PhyNerd/blacs/commits/1d28a19b327c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs"}, "html": {"href": "#!/PhyNerd/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c389ea50-6212-43e6-a1e4-82d1fda463c1}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "PhyNerd/blacs", "uuid": "{c389ea50-6212-43e6-a1e4-82d1fda463c1}"}, "branch": {"name": "Tabs-for-Plugins"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2018-03-29T20:02:50.275898+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"update": {"description": "This adds the ability for plugins to spawn Tabs.\r\n\r\nA plugin can spawn a tab by having a ```get_tab_classes(self)``` function. This function should return a dict of Tab classes, where the key should be the name of the Tab.\r\n\r\nPlugin tabs should inherit from the ```PluginTab``` class in ```blacs.tab_base_classes```. This class provides some basic functionality a tab in BLACS currently needs. Also this allows for the Plugin tabs to use ```get_save_data``` to store and ``` restore_save_data``` to restore data that they might want to save. The initialization of the GUI should be implemented in a function called ```initialise_GUI```, that automatically gets called in the constructor.\r\n\r\nTo visually distinguish plugin tabs from devices their text is blue and they have a different icon.\r\n\r\n![plugin.png](https://bitbucket.org/repo/LoryaEL/images/2179717442-plugin.png)\r\n\r\nHere is example code for a basic tab with a button that raises a exception on click:\r\n\r\n```\r\n#!python\r\n\r\nfrom blacs.tab_base_classes import PluginTab\r\nfrom qtutils.qt.QtWidgets import *\r\n\r\nclass Plugin(object):\r\n    def __init__(self, initial_settings):\r\n        self.menu = None\r\n        self.notifications = {}\r\n        self.BLACS = None\r\n        self.tabs = {}\r\n\r\n    def get_menu_class(self):\r\n        return None\r\n\r\n    def get_notification_classes(self):\r\n        return []\r\n\r\n    def get_setting_classes(self):\r\n        return []\r\n\r\n    def get_callbacks(self):\r\n        return {}\r\n\r\n    def set_menu_instance(self, menu):\r\n        self.menu = menu\r\n\r\n    def set_notification_instances(self, notifications):\r\n        self.notifications = notifications\r\n\r\n    def plugin_setup_complete(self, BLACS):\r\n        self.BLACS = BLACS\r\n\r\n    def get_tab_classes(self):\r\n        return {'hallo': TestTab}\r\n\r\n    def tabs_created(self, tabs_dict):\r\n        self.tabs = tabs_dict\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def close(self):\r\n        pass\r\n\r\n\r\nclass TestTab(PluginTab):\r\n    def initialise_GUI(self):\r\n        self.layout = self.get_tab_layout()\r\n\r\n        self.foobutton = QPushButton('Error')\r\n        self.foobutton.clicked.connect(self.test_abc)\r\n\r\n        self.layout.addWidget(self.foobutton)\r\n\r\n    def test_abc(self, *args):\r\n        raise Exception('test')\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def restore_save_data(self,data):\r\n        return\r\n\r\n```", "title": "Plugin Tabs", "destination": {"commit": {"hash": "69c298544993", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/69c298544993.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/69c298544993"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f084393cd115", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs/commit/f084393cd115"}, "html": {"href": "#!/PhyNerd/blacs/commits/f084393cd115"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs"}, "html": {"href": "#!/PhyNerd/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c389ea50-6212-43e6-a1e4-82d1fda463c1}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "PhyNerd/blacs", "uuid": "{c389ea50-6212-43e6-a1e4-82d1fda463c1}"}, "branch": {"name": "Tabs-for-Plugins"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2018-03-29T19:44:41.751608+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/60198278.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-60198278"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}, "content": {"raw": "I'm sorry that we haven't! There aren't too many pull requests in the backlog now, so hopefully won't be too much longer. That nonlinear time feature sure would make runviewer a lot more usable. It's something I've been thinking about for a long time.", "markup": "markdown", "html": "<p>I'm sorry that we haven't! There aren't too many pull requests in the backlog now, so hopefully won't be too much longer. That nonlinear time feature sure would make runviewer a lot more usable. It's something I've been thinking about for a long time.</p>", "type": "rendered"}, "created_on": "2018-03-29T06:08:54.715051+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-29T06:08:54.718972+00:00", "type": "pullrequest_comment", "id": 60198278}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/59557769.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-59557769"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}, "content": {"raw": "Has anyone got to testing this in the meantime?", "markup": "markdown", "html": "<p>Has anyone got to testing this in the meantime?</p>", "type": "rendered"}, "created_on": "2018-03-22T08:30:05.531740+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-22T08:30:05.575579+00:00", "type": "pullrequest_comment", "id": 59557769}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/46689428.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-46689428"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}, "content": {"raw": "Any progress on the testing of this pull request?", "markup": "markdown", "html": "<p>Any progress on the testing of this pull request?</p>", "type": "rendered"}, "created_on": "2017-10-09T10:02:21.810202+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-10-09T10:02:21.847618+00:00", "type": "pullrequest_comment", "id": 46689428}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/44449757.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-44449757"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}, "content": {"raw": "I have deployed this 2 weeks ago without problems till now", "markup": "markdown", "html": "<p>I have deployed this 2 weeks ago without problems till now</p>", "type": "rendered"}, "created_on": "2017-09-07T13:21:41.170179+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-09-07T13:21:41.213624+00:00", "type": "pullrequest_comment", "id": 44449757}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/43654580.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-43654580"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}, "content": {"raw": "@shaunj Could you pull this change into our lab copy of BLACS and check that it doesn't break any of our custom plugins.", "markup": "markdown", "html": "<p>@shaunj Could you pull this change into our lab copy of BLACS and check that it doesn't break any of our custom plugins.</p>", "type": "rendered"}, "created_on": "2017-08-28T00:19:03.268391+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-08-28T00:19:03.300372+00:00", "type": "pullrequest_comment", "id": 43654580}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/43458728.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-43458728"}}, "parent": {"id": 43447942, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/43447942.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-43447942"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}, "content": {"raw": "1. I'll try that and will report how that works out\n\n2. It works just fine (I'm running this in the lab). There should be no bad consequences. This is since in ```Plugin.__init__``` only settings are passed. The plugin gets the information about queue etc. in ```plugin_setup_complete``` which has not moved so I don't think this breaks anything and would stick to this.\n\n3. Yeah I'll do that.\n\nUpdate: switched to using ```QTabWidget.tabText()``` instead of ```.tab_name``` and ```.device_name```. And added a new ui file for PluginTabs.", "markup": "markdown", "html": "<ol>\n<li>\n<p>I'll try that and will report how that works out</p>\n</li>\n<li>\n<p>It works just fine (I'm running this in the lab). There should be no bad consequences. This is since in <code>Plugin.__init__</code> only settings are passed. The plugin gets the information about queue etc. in <code>plugin_setup_complete</code> which has not moved so I don't think this breaks anything and would stick to this.</p>\n</li>\n<li>\n<p>Yeah I'll do that.</p>\n</li>\n</ol>\n<p>Update: switched to using <code>QTabWidget.tabText()</code> instead of <code>.tab_name</code> and <code>.device_name</code>. And added a new ui file for PluginTabs.</p>", "type": "rendered"}, "created_on": "2017-08-24T06:06:05.425170+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-24T06:28:12.696690+00:00", "type": "pullrequest_comment", "id": 43458728}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"update": {"description": "This adds the ability for plugins to spawn Tabs.\r\n\r\nA plugin can spawn a tab by having a ```get_tab_classes(self)``` function. This function should return a dict of Tab classes, where the key should be the name of the Tab.\r\n\r\nPlugin tabs should inherit from the ```PluginTab``` class in ```blacs.tab_base_classes```. This class provides some basic functionality a tab in BLACS currently needs. Also this allows for the Plugin tabs to use ```get_save_data``` to store and ``` restore_save_data``` to restore data that they might want to save. The initialization of the GUI should be implemented in a function called ```initialise_GUI```, that automatically gets called in the constructor.\r\n\r\nTo visually distinguish plugin tabs from devices their text is blue and they have a different icon.\r\n\r\n![plugin.png](https://bitbucket.org/repo/LoryaEL/images/2179717442-plugin.png)\r\n\r\nHere is example code for a basic tab with a button that raises a exception on click:\r\n\r\n```\r\n#!python\r\n\r\nfrom blacs.tab_base_classes import PluginTab\r\nfrom qtutils.qt.QtWidgets import *\r\n\r\nclass Plugin(object):\r\n    def __init__(self, initial_settings):\r\n        self.menu = None\r\n        self.notifications = {}\r\n        self.BLACS = None\r\n        self.tabs = {}\r\n\r\n    def get_menu_class(self):\r\n        return None\r\n\r\n    def get_notification_classes(self):\r\n        return []\r\n\r\n    def get_setting_classes(self):\r\n        return []\r\n\r\n    def get_callbacks(self):\r\n        return {}\r\n\r\n    def set_menu_instance(self, menu):\r\n        self.menu = menu\r\n\r\n    def set_notification_instances(self, notifications):\r\n        self.notifications = notifications\r\n\r\n    def plugin_setup_complete(self, BLACS):\r\n        self.BLACS = BLACS\r\n\r\n    def get_tab_classes(self):\r\n        return {'hallo': TestTab}\r\n\r\n    def tabs_created(self, tabs_dict):\r\n        self.tabs = tabs_dict\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def close(self):\r\n        pass\r\n\r\n\r\nclass TestTab(PluginTab):\r\n    def initialise_GUI(self):\r\n        self.layout = self.get_tab_layout()\r\n\r\n        self.foobutton = QPushButton('Error')\r\n        self.foobutton.clicked.connect(self.test_abc)\r\n\r\n        self.layout.addWidget(self.foobutton)\r\n\r\n    def test_abc(self, *args):\r\n        raise Exception('test')\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def restore_save_data(self,data):\r\n        return\r\n\r\n```", "title": "Plugin Tabs", "destination": {"commit": {"hash": "1a85ef559ac5", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1a85ef559ac5.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/1a85ef559ac5"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ad7be784b78a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs/commit/ad7be784b78a"}, "html": {"href": "#!/PhyNerd/blacs/commits/ad7be784b78a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs"}, "html": {"href": "#!/PhyNerd/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c389ea50-6212-43e6-a1e4-82d1fda463c1}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "PhyNerd/blacs", "uuid": "{c389ea50-6212-43e6-a1e4-82d1fda463c1}"}, "branch": {"name": "Tabs-for-Plugins"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-24T06:25:41.634671+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"update": {"description": "This adds the ability for plugins to spawn Tabs.\r\n\r\nA plugin can spawn a tab by having a ```get_tab_classes(self)``` function. This function should return a dict of Tab classes, where the key should be the name of the Tab.\r\n\r\nPlugin tabs should inherit from the ```PluginTab``` class in ```blacs.tab_base_classes```. This class provides some basic functionality a tab in BLACS currently needs. Also this allows for the Plugin tabs to use ```get_save_data``` to store and ``` restore_save_data``` to restore data that they might want to save. The initialization of the GUI should be implemented in a function called ```initialise_GUI```, that automatically gets called in the constructor.\r\n\r\nTo visually distinguish plugin tabs from devices their text is blue and they have a different icon.\r\n\r\n![plugin.png](https://bitbucket.org/repo/LoryaEL/images/2179717442-plugin.png)\r\n\r\nHere is example code for a basic tab with a button that raises a exception on click:\r\n\r\n```\r\n#!python\r\n\r\nfrom blacs.tab_base_classes import PluginTab\r\nfrom qtutils.qt.QtWidgets import *\r\n\r\nclass Plugin(object):\r\n    def __init__(self, initial_settings):\r\n        self.menu = None\r\n        self.notifications = {}\r\n        self.BLACS = None\r\n        self.tabs = {}\r\n\r\n    def get_menu_class(self):\r\n        return None\r\n\r\n    def get_notification_classes(self):\r\n        return []\r\n\r\n    def get_setting_classes(self):\r\n        return []\r\n\r\n    def get_callbacks(self):\r\n        return {}\r\n\r\n    def set_menu_instance(self, menu):\r\n        self.menu = menu\r\n\r\n    def set_notification_instances(self, notifications):\r\n        self.notifications = notifications\r\n\r\n    def plugin_setup_complete(self, BLACS):\r\n        self.BLACS = BLACS\r\n\r\n    def get_tab_classes(self):\r\n        return {'hallo': TestTab}\r\n\r\n    def tabs_created(self, tabs_dict):\r\n        self.tabs = tabs_dict\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def close(self):\r\n        pass\r\n\r\n\r\nclass TestTab(PluginTab):\r\n    def initialise_GUI(self):\r\n        self.layout = self.get_tab_layout()\r\n\r\n        self.foobutton = QPushButton('Error')\r\n        self.foobutton.clicked.connect(self.test_abc)\r\n\r\n        self.layout.addWidget(self.foobutton)\r\n\r\n    def test_abc(self, *args):\r\n        raise Exception('test')\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def restore_save_data(self,data):\r\n        return\r\n\r\n```", "title": "Plugin Tabs", "destination": {"commit": {"hash": "1a85ef559ac5", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1a85ef559ac5.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/1a85ef559ac5"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "2075c4a8ba0c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs/commit/2075c4a8ba0c"}, "html": {"href": "#!/PhyNerd/blacs/commits/2075c4a8ba0c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs"}, "html": {"href": "#!/PhyNerd/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c389ea50-6212-43e6-a1e4-82d1fda463c1}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "PhyNerd/blacs", "uuid": "{c389ea50-6212-43e6-a1e4-82d1fda463c1}"}, "branch": {"name": "Tabs-for-Plugins"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-24T06:19:08.807307+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"update": {"description": "This adds the ability for plugins to spawn Tabs.\r\n\r\nA plugin can spawn a tab by having a ```get_tab_classes(self)``` function. This function should return a dict of Tab classes, where the key should be the name of the Tab.\r\n\r\nPlugin tabs should inherit from the ```PluginTab``` class in ```blacs.tab_base_classes```. This class provides some basic functionality a tab in BLACS currently needs. Also this allows for the Plugin tabs to use ```get_save_data``` to store and ``` restore_save_data``` to restore data that they might want to save. The initialization of the GUI should be implemented in a function called ```initialise_GUI```, that automatically gets called in the constructor.\r\n\r\nTo visually distinguish plugin tabs from devices their text is blue and they have a different icon.\r\n\r\n![plugin.png](https://bitbucket.org/repo/LoryaEL/images/2179717442-plugin.png)\r\n\r\nHere is example code for a basic tab with a button that raises a exception on click:\r\n\r\n```\r\n#!python\r\n\r\nfrom blacs.tab_base_classes import PluginTab\r\nfrom qtutils.qt.QtWidgets import *\r\n\r\nclass Plugin(object):\r\n    def __init__(self, initial_settings):\r\n        self.menu = None\r\n        self.notifications = {}\r\n        self.BLACS = None\r\n        self.tabs = {}\r\n\r\n    def get_menu_class(self):\r\n        return None\r\n\r\n    def get_notification_classes(self):\r\n        return []\r\n\r\n    def get_setting_classes(self):\r\n        return []\r\n\r\n    def get_callbacks(self):\r\n        return {}\r\n\r\n    def set_menu_instance(self, menu):\r\n        self.menu = menu\r\n\r\n    def set_notification_instances(self, notifications):\r\n        self.notifications = notifications\r\n\r\n    def plugin_setup_complete(self, BLACS):\r\n        self.BLACS = BLACS\r\n\r\n    def get_tab_classes(self):\r\n        return {'hallo': TestTab}\r\n\r\n    def tabs_created(self, tabs_dict):\r\n        self.tabs = tabs_dict\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def close(self):\r\n        pass\r\n\r\n\r\nclass TestTab(PluginTab):\r\n    def initialise_GUI(self):\r\n        self.layout = self.get_tab_layout()\r\n\r\n        self.foobutton = QPushButton('Error')\r\n        self.foobutton.clicked.connect(self.test_abc)\r\n\r\n        self.layout.addWidget(self.foobutton)\r\n\r\n    def test_abc(self, *args):\r\n        raise Exception('test')\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def restore_save_data(self,data):\r\n        return\r\n\r\n```", "title": "Plugin Tabs", "destination": {"commit": {"hash": "1a85ef559ac5", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1a85ef559ac5.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/1a85ef559ac5"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0245ab8d78fe", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs/commit/0245ab8d78fe"}, "html": {"href": "#!/PhyNerd/blacs/commits/0245ab8d78fe"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs"}, "html": {"href": "#!/PhyNerd/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c389ea50-6212-43e6-a1e4-82d1fda463c1}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "PhyNerd/blacs", "uuid": "{c389ea50-6212-43e6-a1e4-82d1fda463c1}"}, "branch": {"name": "Tabs-for-Plugins"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-24T06:12:47.460119+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/43447942.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-43447942"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}, "content": {"raw": "More comments:\n\n1. Line 482 (the check for `.tab_name` vs. `.device_name`) I think it would be better if we just extracted the tab name from the existing tab (using [`QTabWidget.tabText()`](http://doc.qt.io/qt-4.8/qtabwidget.html#tabText) and then reused that.\n2. I'm concerned that moving the location of the plugin instantiation to above the queue/analysis submission instantiation may have adverse effects. The order of instantiation of things was finely balanced. It may be safer to just move the call to `order_tabs` down to below where plugins were previously instantiated (and put the plugin instantiation back there)\n3. Rather than reusing `tab_frame.ui` and then hiding a bunch of things, it may be better to  copy/paste that file and then edit to remove the things that plugins don't need (so that if we change one, we don't have to work out how it affects the other and/or add more code to hide/show things!)", "markup": "markdown", "html": "<p>More comments:</p>\n<ol>\n<li>Line 482 (the check for <code>.tab_name</code> vs. <code>.device_name</code>) I think it would be better if we just extracted the tab name from the existing tab (using <a data-is-external-link=\"true\" href=\"http://doc.qt.io/qt-4.8/qtabwidget.html#tabText\" rel=\"nofollow\"><code>QTabWidget.tabText()</code></a> and then reused that.</li>\n<li>I'm concerned that moving the location of the plugin instantiation to above the queue/analysis submission instantiation may have adverse effects. The order of instantiation of things was finely balanced. It may be safer to just move the call to <code>order_tabs</code> down to below where plugins were previously instantiated (and put the plugin instantiation back there)</li>\n<li>Rather than reusing <code>tab_frame.ui</code> and then hiding a bunch of things, it may be better to  copy/paste that file and then edit to remove the things that plugins don't need (so that if we change one, we don't have to work out how it affects the other and/or add more code to hide/show things!)</li>\n</ol>", "type": "rendered"}, "created_on": "2017-08-23T23:54:18.444611+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-08-23T23:54:18.447178+00:00", "type": "pullrequest_comment", "id": 43447942}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/43447801.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-43447801"}}, "parent": {"id": 43362292, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/43362292.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-43362292"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}, "content": {"raw": "Yeah, I think that works. It also helps that there is a space in the dictionary key which means it will never conflict with a device name.", "markup": "markdown", "html": "<p>Yeah, I think that works. It also helps that there is a space in the dictionary key which means it will never conflict with a device name.</p>", "type": "rendered"}, "created_on": "2017-08-23T23:50:29.320820+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-08-23T23:50:29.323199+00:00", "type": "pullrequest_comment", "id": 43447801}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/43362292.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-43362292"}}, "parent": {"id": 43360542, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/43360542.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-43360542"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}, "content": {"raw": "Ok so things are a bit more complicated the settings key has to be the tablist key as well for saving and restoring data to work. That key however is used to label the tab.\n\nSo the key needs to be somewhat readable I propose we name them \"Module_name: tab_name\" or \"tab_name (Module_name)\" as that makes the most sense to me. Alternatively we could modify __main__.py to use ```TabObject.tab_name``` to name the tab or just append \"_#\" # being a incrementing number to dicplicates.\n\n@pstarkey whats your take on this?\n\nUpdate: I changed the naming of settings to ```module_name: tab_name```, made the tabs get named after ```tab.tab_name```\n or ```tab.device_name``` (if ```tab.tab_name``` doesn't exist) and added a callback to the plugin with the tab objects", "markup": "markdown", "html": "<p>Ok so things are a bit more complicated the settings key has to be the tablist key as well for saving and restoring data to work. That key however is used to label the tab.</p>\n<p>So the key needs to be somewhat readable I propose we name them \"Module_name: tab_name\" or \"tab_name (Module_name)\" as that makes the most sense to me. Alternatively we could modify <strong>main</strong>.py to use <code>TabObject.tab_name</code> to name the tab or just append \"_#\" # being a incrementing number to dicplicates.</p>\n<p>@pstarkey whats your take on this?</p>\n<p>Update: I changed the naming of settings to <code>module_name: tab_name</code>, made the tabs get named after <code>tab.tab_name</code>\n or <code>tab.device_name</code> (if <code>tab.tab_name</code> doesn't exist) and added a callback to the plugin with the tab objects</p>", "type": "rendered"}, "created_on": "2017-08-23T06:45:20.514136+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-23T11:27:07.655456+00:00", "type": "pullrequest_comment", "id": 43362292}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"update": {"description": "This adds the ability for plugins to spawn Tabs.\r\n\r\nA plugin can spawn a tab by having a ```get_tab_classes(self)``` function. This function should return a dict of Tab classes, where the key should be the name of the Tab.\r\n\r\nPlugin tabs should inherit from the ```PluginTab``` class in ```blacs.tab_base_classes```. This class provides some basic functionality a tab in BLACS currently needs. Also this allows for the Plugin tabs to use ```get_save_data``` to store and ``` restore_save_data``` to restore data that they might want to save. The initialization of the GUI should be implemented in a function called ```initialise_GUI```, that automatically gets called in the constructor.\r\n\r\nTo visually distinguish plugin tabs from devices their text is blue and they have a different icon.\r\n\r\n![plugin.png](https://bitbucket.org/repo/LoryaEL/images/2179717442-plugin.png)\r\n\r\nHere is example code for a basic tab with a button that raises a exception on click:\r\n\r\n```\r\n#!python\r\n\r\nfrom blacs.tab_base_classes import PluginTab\r\nfrom qtutils.qt.QtWidgets import *\r\n\r\nclass Plugin(object):\r\n    def __init__(self, initial_settings):\r\n        self.menu = None\r\n        self.notifications = {}\r\n        self.BLACS = None\r\n        self.tabs = {}\r\n\r\n    def get_menu_class(self):\r\n        return None\r\n\r\n    def get_notification_classes(self):\r\n        return []\r\n\r\n    def get_setting_classes(self):\r\n        return []\r\n\r\n    def get_callbacks(self):\r\n        return {}\r\n\r\n    def set_menu_instance(self, menu):\r\n        self.menu = menu\r\n\r\n    def set_notification_instances(self, notifications):\r\n        self.notifications = notifications\r\n\r\n    def plugin_setup_complete(self, BLACS):\r\n        self.BLACS = BLACS\r\n\r\n    def get_tab_classes(self):\r\n        return {'hallo': TestTab}\r\n\r\n    def tabs_created(self, tabs_dict):\r\n        self.tabs = tabs_dict\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def close(self):\r\n        pass\r\n\r\n\r\nclass TestTab(PluginTab):\r\n    def initialise_GUI(self):\r\n        self.layout = self.get_tab_layout()\r\n\r\n        self.foobutton = QPushButton('Error')\r\n        self.foobutton.clicked.connect(self.test_abc)\r\n\r\n        self.layout.addWidget(self.foobutton)\r\n\r\n    def test_abc(self, *args):\r\n        raise Exception('test')\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def restore_save_data(self,data):\r\n        return\r\n\r\n```", "title": "Plugin Tabs", "destination": {"commit": {"hash": "1a85ef559ac5", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1a85ef559ac5.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/1a85ef559ac5"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "37b9f0110463", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs/commit/37b9f0110463"}, "html": {"href": "#!/PhyNerd/blacs/commits/37b9f0110463"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs"}, "html": {"href": "#!/PhyNerd/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c389ea50-6212-43e6-a1e4-82d1fda463c1}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "PhyNerd/blacs", "uuid": "{c389ea50-6212-43e6-a1e4-82d1fda463c1}"}, "branch": {"name": "Tabs-for-Plugins"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-23T09:41:44.557139+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"update": {"description": "This adds the ability for plugins to spawn Tabs.\r\n\r\nA plugin can spawn a tab by having a ```get_tab_classes(self)``` function. This function should return a dict of Tab classes, where the key should be the name of the Tab.\r\n\r\nPlugin tabs should inherit from the ```PluginTab``` class in ```blacs.tab_base_classes```. This class provides some basic functionality a tab in BLACS currently needs. Also this allows for the Plugin tabs to use ```get_save_data``` to store and ``` restore_save_data``` to restore data that they might want to save. The initialization of the GUI should be implemented in a function called ```initialise_GUI```, that automatically gets called in the constructor.\r\n\r\nTo visually distinguish plugin tabs from devices their text is blue and they have a different icon.\r\n\r\n![plugin.png](https://bitbucket.org/repo/LoryaEL/images/2179717442-plugin.png)\r\n\r\nHere is example code for a basic tab with a button that raises a exception on click:\r\n\r\n```\r\n#!python\r\n\r\nfrom blacs.tab_base_classes import PluginTab\r\nfrom qtutils.qt.QtWidgets import *\r\n\r\nclass Plugin(object):\r\n    def __init__(self, initial_settings):\r\n        self.menu = None\r\n        self.notifications = {}\r\n        self.BLACS = None\r\n\r\n    def get_menu_class(self):\r\n        return None\r\n\r\n    def get_notification_classes(self):\r\n        return []\r\n\r\n    def get_setting_classes(self):\r\n        return []\r\n\r\n    def get_callbacks(self):\r\n        return {}\r\n\r\n    def set_menu_instance(self, menu):\r\n        self.menu = menu\r\n\r\n    def set_notification_instances(self, notifications):\r\n        self.notifications = notifications\r\n\r\n    def plugin_setup_complete(self, BLACS):\r\n        self.BLACS = BLACS\r\n\r\n    def get_tab_classes(self):\r\n        return {'hallo': TestTab}\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def close(self):\r\n        pass\r\n\r\n\r\nclass TestTab(PluginTab):\r\n    def initialise_GUI(self):\r\n        self.layout = self.get_tab_layout()\r\n\r\n        self.foobutton = QPushButton('Error')\r\n        self.foobutton.clicked.connect(self.test_abc)\r\n\r\n        self.layout.addWidget(self.foobutton)\r\n\r\n    def test_abc(self, *args):\r\n        raise Exception('test')\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def restore_save_data(self,data):\r\n        return\r\n\r\n```", "title": "Plugin Tabs", "destination": {"commit": {"hash": "1a85ef559ac5", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1a85ef559ac5.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/1a85ef559ac5"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "37b9f0110463", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs/commit/37b9f0110463"}, "html": {"href": "#!/PhyNerd/blacs/commits/37b9f0110463"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs"}, "html": {"href": "#!/PhyNerd/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c389ea50-6212-43e6-a1e4-82d1fda463c1}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "PhyNerd/blacs", "uuid": "{c389ea50-6212-43e6-a1e4-82d1fda463c1}"}, "branch": {"name": "Tabs-for-Plugins"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-23T09:41:10.721125+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/43360542.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-43360542"}}, "parent": {"id": 43348385, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/43348385.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-43348385"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}, "content": {"raw": "I think it is more unique if we added the plugin name to the tab name and use that as a Index. Each tab name can only be used once per plugin since it's passed through a dict so no other collisions should happen. That also keeps users from having to create useless subclasses. I'll test this and then commit the changes.", "markup": "markdown", "html": "<p>I think it is more unique if we added the plugin name to the tab name and use that as a Index. Each tab name can only be used once per plugin since it's passed through a dict so no other collisions should happen. That also keeps users from having to create useless subclasses. I'll test this and then commit the changes.</p>", "type": "rendered"}, "created_on": "2017-08-23T06:15:43.540905+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-23T06:15:43.601390+00:00", "type": "pullrequest_comment", "id": 43360542}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18/comments/43348385.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18/_/diff#comment-43348385"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}, "content": {"raw": "Using `tab_name` as a unique identifier is problematic as it relies on people ensuring their tab names are unique across plugins. A better option is to use the TabClass as the index to the settings dictionary. This does mean that if people want multiple instances of the one class, they run into problems, but that can be corrected in user code by creating stub subclasses in order to maintain each tab having a unique class. Does that makes sense?", "markup": "markdown", "html": "<p>Using <code>tab_name</code> as a unique identifier is problematic as it relies on people ensuring their tab names are unique across plugins. A better option is to use the TabClass as the index to the settings dictionary. This does mean that if people want multiple instances of the one class, they run into problems, but that can be corrected in user code by creating stub subclasses in order to maintain each tab having a unique class. Does that makes sense?</p>", "type": "rendered"}, "created_on": "2017-08-22T23:47:59.723724+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-08-22T23:47:59.726019+00:00", "type": "pullrequest_comment", "id": 43348385}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"update": {"description": "This adds the ability for plugins to spawn Tabs.\r\n\r\nA plugin can spawn a tab by having a ```get_tab_classes(self)``` function. This function should return a dict of Tab classes, where the key should be the name of the Tab.\r\n\r\nPlugin tabs should inherit from the ```PluginTab``` class in ```blacs.tab_base_classes```. This class provides some basic functionality a tab in BLACS currently needs. Also this allows for the Plugin tabs to use ```get_save_data``` to store and ``` restore_save_data``` to restore data that they might want to save. The initialization of the GUI should be implemented in a function called ```initialise_GUI```, that automatically gets called in the constructor.\r\n\r\nTo visually distinguish plugin tabs from devices their text is blue and they have a different icon.\r\n\r\n![plugin.png](https://bitbucket.org/repo/LoryaEL/images/2179717442-plugin.png)\r\n\r\nHere is example code for a basic tab with a button that raises a exception on click:\r\n\r\n```\r\n#!python\r\n\r\nfrom blacs.tab_base_classes import PluginTab\r\nfrom qtutils.qt.QtWidgets import *\r\n\r\nclass Plugin(object):\r\n    def __init__(self, initial_settings):\r\n        self.menu = None\r\n        self.notifications = {}\r\n        self.BLACS = None\r\n\r\n    def get_menu_class(self):\r\n        return None\r\n\r\n    def get_notification_classes(self):\r\n        return []\r\n\r\n    def get_setting_classes(self):\r\n        return []\r\n\r\n    def get_callbacks(self):\r\n        return {}\r\n\r\n    def set_menu_instance(self, menu):\r\n        self.menu = menu\r\n\r\n    def set_notification_instances(self, notifications):\r\n        self.notifications = notifications\r\n\r\n    def plugin_setup_complete(self, BLACS):\r\n        self.BLACS = BLACS\r\n\r\n    def get_tab_classes(self):\r\n        return {'hallo': TestTab}\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def close(self):\r\n        pass\r\n\r\n\r\nclass TestTab(PluginTab):\r\n    def initialise_GUI(self):\r\n        self.layout = self.get_tab_layout()\r\n\r\n        self.foobutton = QPushButton('Error')\r\n        self.foobutton.clicked.connect(self.test_abc)\r\n\r\n        self.layout.addWidget(self.foobutton)\r\n\r\n    def test_abc(self, *args):\r\n        raise Exception('test')\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def restore_save_data(self,data):\r\n        return\r\n\r\n```", "title": "Plugin Tabs", "destination": {"commit": {"hash": "1a85ef559ac5", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1a85ef559ac5.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/1a85ef559ac5"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "6195e24e8279", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs/commit/6195e24e8279"}, "html": {"href": "#!/PhyNerd/blacs/commits/6195e24e8279"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs"}, "html": {"href": "#!/PhyNerd/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c389ea50-6212-43e6-a1e4-82d1fda463c1}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "PhyNerd/blacs", "uuid": "{c389ea50-6212-43e6-a1e4-82d1fda463c1}"}, "branch": {"name": "Tabs-for-Plugins"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-22T19:33:19.185041+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"update": {"description": "This adds the ability for plugins to spawn Tabs.\r\n\r\nA plugin can spawn a tab by having a ```get_tab_classes(self)``` function. This function should return a dict of Tab classes, where the key should be the name of the Tab.\r\n\r\nPlugin tabs should inherit from the ```PluginTab``` class in ```blacs.tab_base_classes```. This class provides some basic functionality a tab in BLACS currently needs. Also this allows for the Plugin tabs to use ```get_save_data``` to store and ``` restore_save_data``` to restore data that they might want to save. The initialization of the GUI should be implemented in a function called ```initialise_GUI```, that automatically gets called in the constructor.\r\n\r\nTo visually distinguish plugin tabs from devices their text is blue and they have a different icon.\r\n\r\n![plugin.png](https://bitbucket.org/repo/LoryaEL/images/2179717442-plugin.png)\r\n\r\nHere is example code for a basic tab with a button that raises a exception on click:\r\n\r\n```\r\n#!python\r\n\r\nfrom blacs.tab_base_classes import PluginTab\r\nfrom qtutils.qt.QtWidgets import *\r\n\r\nclass Plugin(object):\r\n    def __init__(self, initial_settings):\r\n        self.menu = None\r\n        self.notifications = {}\r\n        self.BLACS = None\r\n\r\n    def get_menu_class(self):\r\n        return None\r\n\r\n    def get_notification_classes(self):\r\n        return []\r\n\r\n    def get_setting_classes(self):\r\n        return []\r\n\r\n    def get_callbacks(self):\r\n        return {}\r\n\r\n    def set_menu_instance(self, menu):\r\n        self.menu = menu\r\n\r\n    def set_notification_instances(self, notifications):\r\n        self.notifications = notifications\r\n\r\n    def plugin_setup_complete(self, BLACS):\r\n        self.BLACS = BLACS\r\n\r\n    def get_tab_classes(self):\r\n        return {'hallo': TestTab}\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def close(self):\r\n        pass\r\n\r\n\r\nclass TestTab(PluginTab):\r\n    def initialise_GUI(self):\r\n        self.layout = self.get_tab_layout()\r\n\r\n        self.foobutton = QPushButton('Error')\r\n        self.foobutton.clicked.connect(self.test_abc)\r\n\r\n        self.layout.addWidget(self.foobutton)\r\n\r\n    def test_abc(self, *args):\r\n        raise Exception('test')\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def restore_save_data(self,data):\r\n        return\r\n\r\n```", "title": "Plugin Tabs", "destination": {"commit": {"hash": "1a85ef559ac5", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1a85ef559ac5.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/1a85ef559ac5"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f8b0464cc5ad", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs/commit/f8b0464cc5ad"}, "html": {"href": "#!/PhyNerd/blacs/commits/f8b0464cc5ad"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs"}, "html": {"href": "#!/PhyNerd/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c389ea50-6212-43e6-a1e4-82d1fda463c1}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "PhyNerd/blacs", "uuid": "{c389ea50-6212-43e6-a1e4-82d1fda463c1}"}, "branch": {"name": "Tabs-for-Plugins"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-22T19:03:11.103512+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}, {"update": {"description": "This adds the ability for plugins to spawn Tabs.\r\n\r\nA plugin can spawn a tab by having a ```get_tab_classes(self)``` function. This function should return a dict of Tab classes, where the key should be the name of the Tab.\r\n\r\nPlugin tabs should inherit from the ```PluginTab``` class in ```blacs.tab_base_classes```. This class provides some basic functionality a tab in BLACS currently needs. Also this allows for the Plugin tabs to use ```get_save_data``` to store and ``` restore_save_data``` to restore data that they might want to save. The initialization of the GUI should be implemented in a function called ```initialise_GUI```, that automatically gets called in the constructor.\r\n\r\nTo visually distinguish plugin tabs from devices their text is blue and they have a different icon.\r\n\r\n![plugin.png](https://bitbucket.org/repo/LoryaEL/images/2179717442-plugin.png)\r\n\r\nHere is example code for a basic tab with a button that raises a exception on click:\r\n\r\n```\r\n#!python\r\n\r\nfrom blacs.tab_base_classes import PluginTab\r\nfrom qtutils.qt.QtWidgets import *\r\n\r\nclass Plugin(object):\r\n    def __init__(self, initial_settings):\r\n        self.menu = None\r\n        self.notifications = {}\r\n        self.BLACS = None\r\n\r\n    def get_menu_class(self):\r\n        return None\r\n\r\n    def get_notification_classes(self):\r\n        return []\r\n\r\n    def get_setting_classes(self):\r\n        return []\r\n\r\n    def get_callbacks(self):\r\n        return {}\r\n\r\n    def set_menu_instance(self, menu):\r\n        self.menu = menu\r\n\r\n    def set_notification_instances(self, notifications):\r\n        self.notifications = notifications\r\n\r\n    def plugin_setup_complete(self, BLACS):\r\n        self.BLACS = BLACS\r\n\r\n    def get_tab_classes(self):\r\n        return {'hallo': TestTab}\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def close(self):\r\n        pass\r\n\r\n\r\nclass TestTab(PluginTab):\r\n    def initialise_GUI(self):\r\n        self.layout = self.get_tab_layout()\r\n\r\n        self.foobutton = QPushButton('Error')\r\n        self.foobutton.clicked.connect(self.test_abc)\r\n\r\n        self.layout.addWidget(self.foobutton)\r\n\r\n    def test_abc(self, *args):\r\n        raise Exception('test')\r\n\r\n    def get_save_data(self):\r\n        return {}\r\n\r\n    def restore_save_data(self,data):\r\n        return\r\n\r\n```", "title": "Plugin Tabs", "destination": {"commit": {"hash": "1a85ef559ac5", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1a85ef559ac5.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/1a85ef559ac5"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f8b0464cc5ad", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs/commit/f8b0464cc5ad"}, "html": {"href": "#!/PhyNerd/blacs/commits/f8b0464cc5ad"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs"}, "html": {"href": "#!/PhyNerd/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c389ea50-6212-43e6-a1e4-82d1fda463c1}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "PhyNerd/blacs", "uuid": "{c389ea50-6212-43e6-a1e4-82d1fda463c1}"}, "branch": {"name": "Tabs-for-Plugins"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-22T19:03:11.040933+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/18"}}, "title": "Plugin Tabs"}}]}