{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19/comments/43741170.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19/_/diff#comment-43741170"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 19, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19"}}, "title": "AnalogIn"}, "content": {"raw": "Thoughts related to this pull request (and associated pull requests):\n\n* The `Forwarder` class should exist in it's own file. I believe that prevents all of the BLACS machinery in `__main__` from being imported into the subprocess.\n* We should have the ability to turn on/off acquisition channels (as most NI cards have an aggregate sample rate, so less channels means higher available sample rates). This requires some careful thought, as I think it means adding a new interface for communication between BLACS and the worker process.\n* The graph should probably launch in it's own process so that plotting at high sample rates doesn't slow down BLACS\n* The above point leads me to think that rather than having the device_base_class handler receiving the information from the broker, we should allow each channel to directly receive data from the broker (which means we should be pub/subbing on a per device_channel basis, rather than per device basis). This would allow that information to be passed to a plotting subprocess which could also subscribe\n* We should have the option to adjust the acquisition sample rate through the GUI (though I think this is a device specific implementation detail and doesn't need to be generalised)\n* Can we avoid copying the numpy array? See [here](http://pyzmq.readthedocs.io/en/latest/serialization.html) and the deleted comment in the [worker process](#!/PhyNerd/labscript_devices/commits/e5f59a74c2f265d72bccc701258b44bb067d4947#LNI_USB_6343.pyF385)\n* I suspect displaying the mean of the acquired data in the text box is slow (at least at high sample rates and for a large number of channels) and we should perhaps just consider displaying a randomly selected data point\n* What happens during a shot? My original plan (a long time ago) was to keep this working during shots if possible (provided the sample rates/turned on channels did not exceed device specification). This should probably be configurable on a per device basis though (which perhaps means we should have a flag implemented in `device_base_class` that can be set per tab that indicates whether we should forward to the broker during a shot)\n* With pub/sub, if a subscriber is slow, the sockets buffer (and slow down all other subscribers). We should consider reading from the socket in a thread and dumping in a local queue, and then having the main consumer read from this queue and ditch data if it isn't processing it fast enough.\n\nNot necessarily saying all of these should be done before merging these pull requests, but this is the direction I had been planning on heading towards.", "markup": "markdown", "html": "<p>Thoughts related to this pull request (and associated pull requests):</p>\n<ul>\n<li>The <code>Forwarder</code> class should exist in it's own file. I believe that prevents all of the BLACS machinery in <code>__main__</code> from being imported into the subprocess.</li>\n<li>We should have the ability to turn on/off acquisition channels (as most NI cards have an aggregate sample rate, so less channels means higher available sample rates). This requires some careful thought, as I think it means adding a new interface for communication between BLACS and the worker process.</li>\n<li>The graph should probably launch in it's own process so that plotting at high sample rates doesn't slow down BLACS</li>\n<li>The above point leads me to think that rather than having the device_base_class handler receiving the information from the broker, we should allow each channel to directly receive data from the broker (which means we should be pub/subbing on a per device_channel basis, rather than per device basis). This would allow that information to be passed to a plotting subprocess which could also subscribe</li>\n<li>We should have the option to adjust the acquisition sample rate through the GUI (though I think this is a device specific implementation detail and doesn't need to be generalised)</li>\n<li>Can we avoid copying the numpy array? See <a data-is-external-link=\"true\" href=\"http://pyzmq.readthedocs.io/en/latest/serialization.html\" rel=\"nofollow\">here</a> and the deleted comment in the <a data-is-external-link=\"true\" href=\"#!/PhyNerd/labscript_devices/commits/e5f59a74c2f265d72bccc701258b44bb067d4947#LNI_USB_6343.pyF385\" rel=\"nofollow\">worker process</a></li>\n<li>I suspect displaying the mean of the acquired data in the text box is slow (at least at high sample rates and for a large number of channels) and we should perhaps just consider displaying a randomly selected data point</li>\n<li>What happens during a shot? My original plan (a long time ago) was to keep this working during shots if possible (provided the sample rates/turned on channels did not exceed device specification). This should probably be configurable on a per device basis though (which perhaps means we should have a flag implemented in <code>device_base_class</code> that can be set per tab that indicates whether we should forward to the broker during a shot)</li>\n<li>With pub/sub, if a subscriber is slow, the sockets buffer (and slow down all other subscribers). We should consider reading from the socket in a thread and dumping in a local queue, and then having the main consumer read from this queue and ditch data if it isn't processing it fast enough.</li>\n</ul>\n<p>Not necessarily saying all of these should be done before merging these pull requests, but this is the direction I had been planning on heading towards.</p>", "type": "rendered"}, "created_on": "2017-08-28T23:55:00.715798+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-08-28T23:55:00.718571+00:00", "type": "pullrequest_comment", "id": 43741170}