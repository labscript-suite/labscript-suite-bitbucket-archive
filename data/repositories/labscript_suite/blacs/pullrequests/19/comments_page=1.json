{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19/comments/43695851.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19/_/diff#comment-43695851"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 19, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19"}}, "title": "AnalogIn"}, "content": {"raw": "For testing I also made a example device file for [NI\\_USB\\_6343](#!/PhyNerd/labscript_devices/branch/AnalogIn#diff). We have non of the main branch acquisition cards so thats why I just made one for now.", "markup": "markdown", "html": "<p>For testing I also made a example device file for <a data-is-external-link=\"true\" href=\"#!/PhyNerd/labscript_devices/branch/AnalogIn#diff\" rel=\"nofollow\">NI_USB_6343</a>. We have non of the main branch acquisition cards so thats why I just made one for now.</p>", "type": "rendered"}, "created_on": "2017-08-28T13:19:14.335301+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-09-11T08:01:56.513687+00:00", "type": "pullrequest_comment", "id": 43695851}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19/comments/43741170.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19/_/diff#comment-43741170"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 19, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19"}}, "title": "AnalogIn"}, "content": {"raw": "Thoughts related to this pull request (and associated pull requests):\n\n* The `Forwarder` class should exist in it's own file. I believe that prevents all of the BLACS machinery in `__main__` from being imported into the subprocess.\n* We should have the ability to turn on/off acquisition channels (as most NI cards have an aggregate sample rate, so less channels means higher available sample rates). This requires some careful thought, as I think it means adding a new interface for communication between BLACS and the worker process.\n* The graph should probably launch in it's own process so that plotting at high sample rates doesn't slow down BLACS\n* The above point leads me to think that rather than having the device_base_class handler receiving the information from the broker, we should allow each channel to directly receive data from the broker (which means we should be pub/subbing on a per device_channel basis, rather than per device basis). This would allow that information to be passed to a plotting subprocess which could also subscribe\n* We should have the option to adjust the acquisition sample rate through the GUI (though I think this is a device specific implementation detail and doesn't need to be generalised)\n* Can we avoid copying the numpy array? See [here](http://pyzmq.readthedocs.io/en/latest/serialization.html) and the deleted comment in the [worker process](#!/PhyNerd/labscript_devices/commits/e5f59a74c2f265d72bccc701258b44bb067d4947#LNI_USB_6343.pyF385)\n* I suspect displaying the mean of the acquired data in the text box is slow (at least at high sample rates and for a large number of channels) and we should perhaps just consider displaying a randomly selected data point\n* What happens during a shot? My original plan (a long time ago) was to keep this working during shots if possible (provided the sample rates/turned on channels did not exceed device specification). This should probably be configurable on a per device basis though (which perhaps means we should have a flag implemented in `device_base_class` that can be set per tab that indicates whether we should forward to the broker during a shot)\n* With pub/sub, if a subscriber is slow, the sockets buffer (and slow down all other subscribers). We should consider reading from the socket in a thread and dumping in a local queue, and then having the main consumer read from this queue and ditch data if it isn't processing it fast enough.\n\nNot necessarily saying all of these should be done before merging these pull requests, but this is the direction I had been planning on heading towards.", "markup": "markdown", "html": "<p>Thoughts related to this pull request (and associated pull requests):</p>\n<ul>\n<li>The <code>Forwarder</code> class should exist in it's own file. I believe that prevents all of the BLACS machinery in <code>__main__</code> from being imported into the subprocess.</li>\n<li>We should have the ability to turn on/off acquisition channels (as most NI cards have an aggregate sample rate, so less channels means higher available sample rates). This requires some careful thought, as I think it means adding a new interface for communication between BLACS and the worker process.</li>\n<li>The graph should probably launch in it's own process so that plotting at high sample rates doesn't slow down BLACS</li>\n<li>The above point leads me to think that rather than having the device_base_class handler receiving the information from the broker, we should allow each channel to directly receive data from the broker (which means we should be pub/subbing on a per device_channel basis, rather than per device basis). This would allow that information to be passed to a plotting subprocess which could also subscribe</li>\n<li>We should have the option to adjust the acquisition sample rate through the GUI (though I think this is a device specific implementation detail and doesn't need to be generalised)</li>\n<li>Can we avoid copying the numpy array? See <a data-is-external-link=\"true\" href=\"http://pyzmq.readthedocs.io/en/latest/serialization.html\" rel=\"nofollow\">here</a> and the deleted comment in the <a data-is-external-link=\"true\" href=\"#!/PhyNerd/labscript_devices/commits/e5f59a74c2f265d72bccc701258b44bb067d4947#LNI_USB_6343.pyF385\" rel=\"nofollow\">worker process</a></li>\n<li>I suspect displaying the mean of the acquired data in the text box is slow (at least at high sample rates and for a large number of channels) and we should perhaps just consider displaying a randomly selected data point</li>\n<li>What happens during a shot? My original plan (a long time ago) was to keep this working during shots if possible (provided the sample rates/turned on channels did not exceed device specification). This should probably be configurable on a per device basis though (which perhaps means we should have a flag implemented in <code>device_base_class</code> that can be set per tab that indicates whether we should forward to the broker during a shot)</li>\n<li>With pub/sub, if a subscriber is slow, the sockets buffer (and slow down all other subscribers). We should consider reading from the socket in a thread and dumping in a local queue, and then having the main consumer read from this queue and ditch data if it isn't processing it fast enough.</li>\n</ul>\n<p>Not necessarily saying all of these should be done before merging these pull requests, but this is the direction I had been planning on heading towards.</p>", "type": "rendered"}, "created_on": "2017-08-28T23:55:00.715798+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-08-28T23:55:00.718571+00:00", "type": "pullrequest_comment", "id": 43741170}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19/comments/43769868.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19/_/diff#comment-43769868"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 19, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19"}}, "title": "AnalogIn"}, "content": {"raw": "Thanks for the comprehensive review here are my thoughts:\n\n* Sure I'll move it to it's own file If that helps **(done!)**\n\n* This can be done in the acquisition workers by hand, but you are right that we want this as a GUI feature. I don't have any good ideas on how to do this. So maybe this should be a separate Pull Request?\n\n* Mh yeah could do that but until now I saw no problems with things being the way they are. I will try putting it in it's own process.\n\n* That is a lot of threads/processes I'm not sure how that affects performance. That would be 16 processes/threads plus 2 worker processes for a card with 16 inputs. Does this really scale?\n\n* Same as 2. point. I think this needs thought and should move to another pull request.\n\n* I'll look into that and change here if it works **(done!)**\n\n* I'll change it to last acquired value. **(done!)**\n\n* Currently there is no forwarding during shot but this can be added on a per device basis with one line of code. (also separate pull request(s)? the current ones don't even cover changes to the devices)\n\n* I didn't run into problems here until now but could see this becoming a problem. I'll look into it. **(seems really hard with a pub/sub model to get around this I'd say we only look into this if it becomes a problem)**\n\nUpdate: added some comments in brackets with updates", "markup": "markdown", "html": "<p>Thanks for the comprehensive review here are my thoughts:</p>\n<ul>\n<li>\n<p>Sure I'll move it to it's own file If that helps <strong>(done!)</strong></p>\n</li>\n<li>\n<p>This can be done in the acquisition workers by hand, but you are right that we want this as a GUI feature. I don't have any good ideas on how to do this. So maybe this should be a separate Pull Request?</p>\n</li>\n<li>\n<p>Mh yeah could do that but until now I saw no problems with things being the way they are. I will try putting it in it's own process.</p>\n</li>\n<li>\n<p>That is a lot of threads/processes I'm not sure how that affects performance. That would be 16 processes/threads plus 2 worker processes for a card with 16 inputs. Does this really scale?</p>\n</li>\n<li>\n<p>Same as 2. point. I think this needs thought and should move to another pull request.</p>\n</li>\n<li>\n<p>I'll look into that and change here if it works <strong>(done!)</strong></p>\n</li>\n<li>\n<p>I'll change it to last acquired value. <strong>(done!)</strong></p>\n</li>\n<li>\n<p>Currently there is no forwarding during shot but this can be added on a per device basis with one line of code. (also separate pull request(s)? the current ones don't even cover changes to the devices)</p>\n</li>\n<li>\n<p>I didn't run into problems here until now but could see this becoming a problem. I'll look into it. <strong>(seems really hard with a pub/sub model to get around this I'd say we only look into this if it becomes a problem)</strong></p>\n</li>\n</ul>\n<p>Update: added some comments in brackets with updates</p>", "type": "rendered"}, "created_on": "2017-08-29T09:22:40.366728+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-29T18:44:03.811909+00:00", "type": "pullrequest_comment", "id": 43769868}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19/comments/44401977.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19/_/diff#comment-44401977"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 19, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19"}}, "title": "AnalogIn"}, "content": {"raw": "I should have numbered these points instead of dot pointing them...\n\n1. Done\n2. Yep, let's defer to another pull request\n3. Let me know how you go with this one. It's probably possible to do it without point 4. (below) and slicing numpy arrays I think can be pretty efficient. It just will use more RAM than it needs to.\n4. Yeah, that's true. Maybe a hybrid where we only have one thread per device in BLACS, but have it read N sub sockets in series (so that the subprocess for plotting in 3. can subscribe to only one)? Not sure, maybe having lots of threads isn't a problem, especially if the sample rate is low so they would be IO bound (blocking call to recv?). Maybe the data is always coming in too fast so it wouldn't be IO bound.\n5. Yep, let's defer to another pull request\n6. Done\n7. I should have elaborated on my suggestion of a random sample. If you take the last one, you won't see the reading fluctuate (much) for oscillatory signals close to/at the sample rate. So I think a random sample would be better.\n8. Yep, let's defer to another pull request\n9. Yep, let's defer to another pull request\n\n\u200c", "markup": "markdown", "html": "<p>I should have numbered these points instead of dot pointing them...</p>\n<ol>\n<li>Done</li>\n<li>Yep, let's defer to another pull request</li>\n<li>Let me know how you go with this one. It's probably possible to do it without point 4. (below) and slicing numpy arrays I think can be pretty efficient. It just will use more RAM than it needs to.</li>\n<li>Yeah, that's true. Maybe a hybrid where we only have one thread per device in BLACS, but have it read N sub sockets in series (so that the subprocess for plotting in 3. can subscribe to only one)? Not sure, maybe having lots of threads isn't a problem, especially if the sample rate is low so they would be IO bound (blocking call to recv?). Maybe the data is always coming in too fast so it wouldn't be IO bound.</li>\n<li>Yep, let's defer to another pull request</li>\n<li>Done</li>\n<li>I should have elaborated on my suggestion of a random sample. If you take the last one, you won't see the reading fluctuate (much) for oscillatory signals close to/at the sample rate. So I think a random sample would be better.</li>\n<li>Yep, let's defer to another pull request</li>\n<li>Yep, let's defer to another pull request</li>\n</ol>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2017-09-07T01:53:45.535639+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-09-07T01:53:45.538193+00:00", "type": "pullrequest_comment", "id": 44401977}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19/comments/44417275.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19/_/diff#comment-44417275"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 19, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19"}}, "title": "AnalogIn"}, "content": {"raw": "Ok so quick summary of what still needs to be done in this (and related) pull request(s):\n\n1. change value to random instead of last (should be easy to do)\n2. Plot in new process and look into hybrid pub/sub model if needed. (Might do this next week)\n\nI'll poste updates on progress when there are any.", "markup": "markdown", "html": "<p>Ok so quick summary of what still needs to be done in this (and related) pull request(s):</p>\n<ol>\n<li>change value to random instead of last (should be easy to do)</li>\n<li>Plot in new process and look into hybrid pub/sub model if needed. (Might do this next week)</li>\n</ol>\n<p>I'll poste updates on progress when there are any.</p>", "type": "rendered"}, "created_on": "2017-09-07T07:46:59.370950+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-09-07T07:46:59.432131+00:00", "type": "pullrequest_comment", "id": 44417275}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19/comments/44594920.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19/_/diff#comment-44594920"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 19, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19"}}, "title": "AnalogIn"}, "content": {"raw": "Plots are now created in their own thread and a random value is displayed instead of the last one. I also updated the Pub/Sub topics to be one per channel. I didn't test this on hardware until now but will do so on monday.", "markup": "markdown", "html": "<p>Plots are now created in their own thread and a random value is displayed instead of the last one. I also updated the Pub/Sub topics to be one per channel. I didn't test this on hardware until now but will do so on monday.</p>", "type": "rendered"}, "created_on": "2017-09-09T11:21:56.733516+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-09-09T11:21:56.793933+00:00", "type": "pullrequest_comment", "id": 44594920}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19/comments/44630536.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19/_/diff#comment-44630536"}}, "parent": {"id": 44594920, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19/comments/44594920.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19/_/diff#comment-44594920"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 19, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19"}}, "title": "AnalogIn"}, "content": {"raw": "Ok now this has been tested and it seems to work just fine", "markup": "markdown", "html": "<p>Ok now this has been tested and it seems to work just fine</p>", "type": "rendered"}, "created_on": "2017-09-11T08:02:21.464148+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-09-11T08:02:21.511904+00:00", "type": "pullrequest_comment", "id": 44630536}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19/comments/131889480.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19/_/diff#comment-131889480"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 19, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19"}}, "title": "AnalogIn"}, "content": {"raw": "Despite only have a minor merge conflict, **this is not safe to merge anymore**.\n\nThe code is inconsistent with the way we introduced the `Image` output type and some of the suggested ways mercurial wants to merge this are just wrong \\(see lines 38/39 of device\\_base\\_classes.py\\). We also need to check whether this is compatible with remote workers and whether or not the broker introduced in this PR still makes sense in the context of remote workers \\(and related infrastructure\\).\n\n90% of the code is still good though, which is a pretty good effort give it\u2019s been over 2 years\u2026!!\n\nSo I think this PR needs to be recreated once we move to GitHub \\(we should leave this PR open so that our archival process doesn\u2019t show it as \u201cdeclined\u201d\\)", "markup": "markdown", "html": "<p>Despite only have a minor merge conflict, <strong>this is not safe to merge anymore</strong>.</p>\n<p>The code is inconsistent with the way we introduced the <code>Image</code> output type and some of the suggested ways mercurial wants to merge this are just wrong (see lines 38/39 of device_base_classes.py). We also need to check whether this is compatible with remote workers and whether or not the broker introduced in this PR still makes sense in the context of remote workers (and related infrastructure).</p>\n<p>90% of the code is still good though, which is a pretty good effort give it\u2019s been over 2 years\u2026!!</p>\n<p>So I think this PR needs to be recreated once we move to GitHub (we should leave this PR open so that our archival process doesn\u2019t show it as \u201cdeclined\u201d)</p>", "type": "rendered"}, "created_on": "2020-01-16T09:25:10.892408+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "updated_on": "2020-01-16T09:25:10.912045+00:00", "type": "pullrequest_comment", "id": 131889480}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19/comments/131902617.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19/_/diff#comment-131902617"}}, "parent": {"id": 131889480, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19/comments/131889480.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19/_/diff#comment-131889480"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 19, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/19.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/19"}}, "title": "AnalogIn"}, "content": {"raw": "Agreed!", "markup": "markdown", "html": "<p>Agreed!</p>", "type": "rendered"}, "created_on": "2020-01-16T10:26:04.270476+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2020-01-16T10:26:04.279384+00:00", "type": "pullrequest_comment", "id": 131902617}], "page": 1, "size": 9}