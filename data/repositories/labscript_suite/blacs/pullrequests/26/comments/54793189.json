{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/26/comments/54793189.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/26/_/diff#comment-54793189"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/26"}}, "title": "Plugin Management"}, "content": {"raw": "Looking good!\n\nI can't decide if we should enable plugins by default or not. Right now, I'd lean towards not enabling by default so that we can merge in random plugins that people have without it risking breaking other peoples systems. In this case we would only import the plugins that are enabled, thus giving the user an easy way to turn off plugins that are broken \\(e.g. code with a syntax error\\).\n\nOn the other hand, in the long term, we're likely to have separate repositories for plugins, and so in that case plugins would be deliberately added \\(and thus should be enabled by default\\). Enabling by default also solves the issue of having to write in a special case for enabling the existing plugins that are reasonably core to BLACS \\(at least when running as a primary control system\\).\n\n\u200c\n\nI think I'm leaning towards the first option, which would mean:\n\n* plugins disabled by default\n* plugin code only imported if enabled\n* Hard code in enabling certain plugins if they don't exist in the labconfig \\(e.g. all existing plugins\\)\n\nBut, I'm not 100% certain I welcome discussion on the best way forward!", "markup": "markdown", "html": "<p>Looking good!</p>\n<p>I can't decide if we should enable plugins by default or not. Right now, I'd lean towards not enabling by default so that we can merge in random plugins that people have without it risking breaking other peoples systems. In this case we would only import the plugins that are enabled, thus giving the user an easy way to turn off plugins that are broken (e.g. code with a syntax error).</p>\n<p>On the other hand, in the long term, we're likely to have separate repositories for plugins, and so in that case plugins would be deliberately added (and thus should be enabled by default). Enabling by default also solves the issue of having to write in a special case for enabling the existing plugins that are reasonably core to BLACS (at least when running as a primary control system).</p>\n<p>\u200c</p>\n<p>I think I'm leaning towards the first option, which would mean:</p>\n<ul>\n<li>plugins disabled by default</li>\n<li>plugin code only imported if enabled</li>\n<li>Hard code in enabling certain plugins if they don't exist in the labconfig (e.g. all existing plugins)</li>\n</ul>\n<p>But, I'm not 100% certain I welcome discussion on the best way forward!</p>", "type": "rendered"}, "created_on": "2018-01-28T23:43:04.672497+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-01-28T23:43:04.674994+00:00", "type": "pullrequest_comment", "id": 54793189}