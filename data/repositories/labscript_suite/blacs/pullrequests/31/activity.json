{"pagelen": 50, "values": [{"update": {"description": "This Pull request adds a new 'shot\\_ignore\\_repeat' callback to the plugin system. This new callback gives plugins the ability to keep certain shots from being repeated.\r\n\r\nIn our lab we use this in a keep warm plugin which automatically prepends a keep warm shot to the queue if it should be empty or if our lab watchdog says something went wrong. The shot file is then cleaned \\(just like repeats\\) after the shot is done and prepended to the queue \\(if needed\\). If the repeat all mode is active this leads to a queue with a lot of repetitions piling up at its end. This callback/filter allows to prevent this behavior.", "title": "Repeat Filter Callback", "destination": {"commit": {"hash": "f6d75038e078", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/f6d75038e078.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/f6d75038e078"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ba20a683a688", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs/commit/ba20a683a688"}, "html": {"href": "#!/PhyNerd/blacs/commits/ba20a683a688"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs"}, "html": {"href": "#!/PhyNerd/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c389ea50-6212-43e6-a1e4-82d1fda463c1}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "PhyNerd/blacs", "uuid": "{c389ea50-6212-43e6-a1e4-82d1fda463c1}"}, "branch": {"name": "RepeatFilter"}}, "state": "MERGED", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-03-13T02:47:06.633586+00:00"}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/31"}}, "title": "Repeat Filter Callback"}}, {"approval": {"date": "2018-03-09T08:51:06.943364+00:00", "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/31"}}, "title": "Repeat Filter Callback"}, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/31"}}, "title": "Repeat Filter Callback"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/31/comments/58383915.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/31/_/diff#comment-58383915"}}, "parent": {"id": 58379879, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/31/comments/58379879.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/31/_/diff#comment-58379879"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/31"}}, "title": "Repeat Filter Callback"}, "content": {"raw": "Thanks for the review I fixed it for both filter calbacks.", "markup": "markdown", "html": "<p>Thanks for the review I fixed it for both filter calbacks.</p>", "type": "rendered"}, "created_on": "2018-03-09T08:48:46.402648+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-09T08:48:46.443261+00:00", "type": "pullrequest_comment", "id": 58383915}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/31"}}, "title": "Repeat Filter Callback"}}, {"update": {"description": "This Pull request adds a new 'shot\\_ignore\\_repeat' callback to the plugin system. This new callback gives plugins the ability to keep certain shots from being repeated.\r\n\r\nIn our lab we use this in a keep warm plugin which automatically prepends a keep warm shot to the queue if it should be empty or if our lab watchdog says something went wrong. The shot file is then cleaned \\(just like repeats\\) after the shot is done and prepended to the queue \\(if needed\\). If the repeat all mode is active this leads to a queue with a lot of repetitions piling up at its end. This callback/filter allows to prevent this behavior.", "title": "Repeat Filter Callback", "destination": {"commit": {"hash": "66a107e63fc0", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/66a107e63fc0.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/66a107e63fc0"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ba20a683a688", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs/commit/ba20a683a688"}, "html": {"href": "#!/PhyNerd/blacs/commits/ba20a683a688"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs"}, "html": {"href": "#!/PhyNerd/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c389ea50-6212-43e6-a1e4-82d1fda463c1}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "PhyNerd/blacs", "uuid": "{c389ea50-6212-43e6-a1e4-82d1fda463c1}"}, "branch": {"name": "RepeatFilter"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2018-03-09T08:46:25.655919+00:00"}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/31"}}, "title": "Repeat Filter Callback"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/31/comments/58379879.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/31/_/diff#comment-58379879"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/31"}}, "title": "Repeat Filter Callback"}, "content": {"raw": "This looks fine to me!\n\nOne nitpick, you should probably replace `if callback(path) is True:` with `if callback(path):`, becase `is` is checking for object identity rather than equality, lots of unexpected results:\n\n\n```\n#!python\n\n>>> 1 is True\nFalse\n>>> not False is True\nTrue\n>>> ~False is True\nFalse\n>>> ~0 is True\nFalse\n>>> bool(~0)\nTrue\n```\n\n", "markup": "markdown", "html": "<p>This looks fine to me!</p>\n<p>One nitpick, you should probably replace <code>if callback(path) is True:</code> with <code>if callback(path):</code>, becase <code>is</code> is checking for object identity rather than equality, lots of unexpected results:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">1</span> <span class=\"ow\">is</span> <span class=\"bp\">True</span>\n<span class=\"bp\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"ow\">not</span> <span class=\"bp\">False</span> <span class=\"ow\">is</span> <span class=\"bp\">True</span>\n<span class=\"bp\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"o\">~</span><span class=\"bp\">False</span> <span class=\"ow\">is</span> <span class=\"bp\">True</span>\n<span class=\"bp\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"o\">~</span><span class=\"mi\">0</span> <span class=\"ow\">is</span> <span class=\"bp\">True</span>\n<span class=\"bp\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">(</span><span class=\"o\">~</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"bp\">True</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-03-09T07:58:27.638146+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-09T07:59:02.808224+00:00", "type": "pullrequest_comment", "id": 58379879}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/31"}}, "title": "Repeat Filter Callback"}}, {"update": {"description": "This Pull request adds a new 'shot\\_ignore\\_repeat' callback to the plugin system. This new callback gives plugins the ability to keep certain shots from being repeated.\r\n\r\nIn our lab we use this in a keep warm plugin which automatically prepends a keep warm shot to the queue if it should be empty or if our lab watchdog says something went wrong. The shot file is then cleaned \\(just like repeats\\) after the shot is done and prepended to the queue \\(if needed\\). If the repeat all mode is active this leads to a queue with a lot of repetitions piling up at its end. This callback/filter allows to prevent this behavior.", "title": "Repeat Filter Callback", "destination": {"commit": {"hash": "66a107e63fc0", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/66a107e63fc0.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/66a107e63fc0"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "863cfb197791", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs/commit/863cfb197791"}, "html": {"href": "#!/PhyNerd/blacs/commits/863cfb197791"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs"}, "html": {"href": "#!/PhyNerd/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c389ea50-6212-43e6-a1e4-82d1fda463c1}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "PhyNerd/blacs", "uuid": "{c389ea50-6212-43e6-a1e4-82d1fda463c1}"}, "branch": {"name": "RepeatFilter"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2018-03-08T16:11:17.220717+00:00"}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/31"}}, "title": "Repeat Filter Callback"}}, {"update": {"description": "This Pull request adds a new 'shot\\_ignore\\_repeat' callback to the plugin system. This new callback gives plugins the ability to keep certain shots from being repeated.\r\n\r\nIn our lab we use this in a keep warm plugin which automatically appends a keep warm shot to the queue if it should be empty or if our lab watchdog says something went wrong. The shot file is then cleaned \\(just like repeats\\) after the shot is done and prepended to the queue \\(if needed\\). If the repeat all mode is active this leads to a queue with a lot of repetitions piling up at its end. This callback/filter allows to prevent this behavior.", "title": "Repeat Filter Callback", "destination": {"commit": {"hash": "66a107e63fc0", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/66a107e63fc0.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/66a107e63fc0"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "863cfb197791", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs/commit/863cfb197791"}, "html": {"href": "#!/PhyNerd/blacs/commits/863cfb197791"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs"}, "html": {"href": "#!/PhyNerd/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c389ea50-6212-43e6-a1e4-82d1fda463c1}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "PhyNerd/blacs", "uuid": "{c389ea50-6212-43e6-a1e4-82d1fda463c1}"}, "branch": {"name": "RepeatFilter"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2018-03-08T16:11:01.194304+00:00"}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/31"}}, "title": "Repeat Filter Callback"}}, {"update": {"description": "This Pull request adds a new 'shot\\_ignore\\_repeat' callback to the plugin system. This new callback gives plugins the ability to keep certain shots from being repeated.\r\n\r\nIn our lab we use this in a keep warm plugin which automatically appends a keep warm shot to the queue if it should be empty or if our lab watchdog says something went wrong. The shot file is then cleaned \\(just like repeats\\) after the shot is done and prepended to the queue \\(if needed\\). If the repeat all mode is active this leads to a queue with a lot of repetitions piling up at its end. This callback/filter allows to prevent this behavior.", "title": "Repeat Filter Callback", "destination": {"commit": {"hash": "66a107e63fc0", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/66a107e63fc0.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/66a107e63fc0"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "863cfb197791", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs/commit/863cfb197791"}, "html": {"href": "#!/PhyNerd/blacs/commits/863cfb197791"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/blacs"}, "html": {"href": "#!/PhyNerd/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c389ea50-6212-43e6-a1e4-82d1fda463c1}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "PhyNerd/blacs", "uuid": "{c389ea50-6212-43e6-a1e4-82d1fda463c1}"}, "branch": {"name": "RepeatFilter"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2018-03-08T16:11:01.123399+00:00"}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/31"}}, "title": "Repeat Filter Callback"}}]}