{"rendered": {"description": {"raw": "This adds a button to show a terminal for each device showing its logging output and any printlines etc.\r\n\r\nThis makes it easier to debug devices, as well as making very basic devices where they just say on the terminal what they're doing instead of writing GUI code to do so. Lincoln was mentioning that this is something that would be desirable given the number of single-purpose scripts being written that really ought to be device tabs but that nobody really cares to write a GUI for.\r\n\r\nThis does mean that per-device logging output will not be present in the terminal if running BLACS from the terminal - only logging output from the main process. However, the BLACS log file will still contain logging from all processes.\r\n\r\nIf this is considered too big a drawback, I can add an option to OutputBox to make it duplicate any output it receives to the stdout/stderr of the current process.\r\n\r\nTerminal visibility and splitter size is saved and loaded to the BLACS settings file. This required me to introduce `DeviceTab.get_builtin_save_data()` and `DeviceTab.restore_builtin_save_data()` since `get_save_data` and `restore_save_data` are not required to call the base class implementation, so I could not put it there. But it stores the settings in the same dict (with names prefixed by an underscore).\r\n\r\nThis change depends on [labscript_utils pull request 40](#!/labscript_suite/labscript_utils/pull-requests/40/), otherwise the subprocesses have stdout set to devnull and won't produce any output.\r\n\r\nScreenshot (button is up the top next to the restart button):\r\n\r\n![blacs_terminal.png](data/bitbucket.org/repo/9pKE7ad/images/3533854408-blacs_terminal.png)", "markup": "markdown", "html": "<p>This adds a button to show a terminal for each device showing its logging output and any printlines etc.</p>\n<p>This makes it easier to debug devices, as well as making very basic devices where they just say on the terminal what they're doing instead of writing GUI code to do so. Lincoln was mentioning that this is something that would be desirable given the number of single-purpose scripts being written that really ought to be device tabs but that nobody really cares to write a GUI for.</p>\n<p>This does mean that per-device logging output will not be present in the terminal if running BLACS from the terminal - only logging output from the main process. However, the BLACS log file will still contain logging from all processes.</p>\n<p>If this is considered too big a drawback, I can add an option to OutputBox to make it duplicate any output it receives to the stdout/stderr of the current process.</p>\n<p>Terminal visibility and splitter size is saved and loaded to the BLACS settings file. This required me to introduce <code>DeviceTab.get_builtin_save_data()</code> and <code>DeviceTab.restore_builtin_save_data()</code> since <code>get_save_data</code> and <code>restore_save_data</code> are not required to call the base class implementation, so I could not put it there. But it stores the settings in the same dict (with names prefixed by an underscore).</p>\n<p>This change depends on <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript_utils/pull-requests/40/\" rel=\"nofollow\">labscript_utils pull request 40</a>, otherwise the subprocesses have stdout set to devnull and won't produce any output.</p>\n<p>Screenshot (button is up the top next to the restart button):</p>\n<p><img alt=\"blacs_terminal.png\" src=\"data/bitbucket.org/repo/9pKE7ad/images/3533854408-blacs_terminal.png\" /></p>", "type": "rendered"}, "title": {"raw": "Worker terminals", "markup": "markdown", "html": "<p>Worker terminals</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This adds a button to show a terminal for each device showing its logging output and any printlines etc.\r\n\r\nThis makes it easier to debug devices, as well as making very basic devices where they just say on the terminal what they're doing instead of writing GUI code to do so. Lincoln was mentioning that this is something that would be desirable given the number of single-purpose scripts being written that really ought to be device tabs but that nobody really cares to write a GUI for.\r\n\r\nThis does mean that per-device logging output will not be present in the terminal if running BLACS from the terminal - only logging output from the main process. However, the BLACS log file will still contain logging from all processes.\r\n\r\nIf this is considered too big a drawback, I can add an option to OutputBox to make it duplicate any output it receives to the stdout/stderr of the current process.\r\n\r\nTerminal visibility and splitter size is saved and loaded to the BLACS settings file. This required me to introduce `DeviceTab.get_builtin_save_data()` and `DeviceTab.restore_builtin_save_data()` since `get_save_data` and `restore_save_data` are not required to call the base class implementation, so I could not put it there. But it stores the settings in the same dict (with names prefixed by an underscore).\r\n\r\nThis change depends on [labscript_utils pull request 40](#!/labscript_suite/labscript_utils/pull-requests/40/), otherwise the subprocesses have stdout set to devnull and won't produce any output.\r\n\r\nScreenshot (button is up the top next to the restart button):\r\n\r\n![blacs_terminal.png](data/bitbucket.org/repo/9pKE7ad/images/3533854408-blacs_terminal.png)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/pullrequests/38/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diffstat/labscript_suite/blacs:fe8080d6eaed%0D79c7975ff089?from_pullrequest_id=38"}, "commits": {"href": "data/repositories/labscript_suite/blacs/pullrequests/38/commits.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/38.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/pullrequests/38/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/pullrequests/38/merge"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/38"}, "activity": {"href": "data/repositories/labscript_suite/blacs/pullrequests/38/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/labscript_suite/blacs:fe8080d6eaed%0D79c7975ff089?from_pullrequest_id=38"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/pullrequests/38/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/pullrequests/38/statuses_page=1.json"}}, "title": "Worker terminals", "close_source_branch": true, "reviewers": [{"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}], "id": 38, "destination": {"commit": {"hash": "79c7975ff089", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/79c7975ff089.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/79c7975ff089"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "created_on": "2018-03-28T05:50:21.105158+00:00", "summary": {"raw": "This adds a button to show a terminal for each device showing its logging output and any printlines etc.\r\n\r\nThis makes it easier to debug devices, as well as making very basic devices where they just say on the terminal what they're doing instead of writing GUI code to do so. Lincoln was mentioning that this is something that would be desirable given the number of single-purpose scripts being written that really ought to be device tabs but that nobody really cares to write a GUI for.\r\n\r\nThis does mean that per-device logging output will not be present in the terminal if running BLACS from the terminal - only logging output from the main process. However, the BLACS log file will still contain logging from all processes.\r\n\r\nIf this is considered too big a drawback, I can add an option to OutputBox to make it duplicate any output it receives to the stdout/stderr of the current process.\r\n\r\nTerminal visibility and splitter size is saved and loaded to the BLACS settings file. This required me to introduce `DeviceTab.get_builtin_save_data()` and `DeviceTab.restore_builtin_save_data()` since `get_save_data` and `restore_save_data` are not required to call the base class implementation, so I could not put it there. But it stores the settings in the same dict (with names prefixed by an underscore).\r\n\r\nThis change depends on [labscript_utils pull request 40](#!/labscript_suite/labscript_utils/pull-requests/40/), otherwise the subprocesses have stdout set to devnull and won't produce any output.\r\n\r\nScreenshot (button is up the top next to the restart button):\r\n\r\n![blacs_terminal.png](data/bitbucket.org/repo/9pKE7ad/images/3533854408-blacs_terminal.png)", "markup": "markdown", "html": "<p>This adds a button to show a terminal for each device showing its logging output and any printlines etc.</p>\n<p>This makes it easier to debug devices, as well as making very basic devices where they just say on the terminal what they're doing instead of writing GUI code to do so. Lincoln was mentioning that this is something that would be desirable given the number of single-purpose scripts being written that really ought to be device tabs but that nobody really cares to write a GUI for.</p>\n<p>This does mean that per-device logging output will not be present in the terminal if running BLACS from the terminal - only logging output from the main process. However, the BLACS log file will still contain logging from all processes.</p>\n<p>If this is considered too big a drawback, I can add an option to OutputBox to make it duplicate any output it receives to the stdout/stderr of the current process.</p>\n<p>Terminal visibility and splitter size is saved and loaded to the BLACS settings file. This required me to introduce <code>DeviceTab.get_builtin_save_data()</code> and <code>DeviceTab.restore_builtin_save_data()</code> since <code>get_save_data</code> and <code>restore_save_data</code> are not required to call the base class implementation, so I could not put it there. But it stores the settings in the same dict (with names prefixed by an underscore).</p>\n<p>This change depends on <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript_utils/pull-requests/40/\" rel=\"nofollow\">labscript_utils pull request 40</a>, otherwise the subprocesses have stdout set to devnull and won't produce any output.</p>\n<p>Screenshot (button is up the top next to the restart button):</p>\n<p><img alt=\"blacs_terminal.png\" src=\"data/bitbucket.org/repo/9pKE7ad/images/3533854408-blacs_terminal.png\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "c76927a6a5ad", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/c76927a6a5ad"}, "html": {"href": "#!/cbillington/blacs/commits/c76927a6a5ad"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "worker-terminals"}}, "comment_count": 10, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2018-03-29T01:52:00.883654+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": "2018-03-29T01:59:51.132669+00:00", "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"role": "REVIEWER", "participated_on": "2018-03-28T16:16:11.815961+00:00", "type": "participant", "approved": true, "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}}], "reason": "", "updated_on": "2018-03-29T05:54:22.847470+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "fe8080d6eaed", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/fe8080d6eaed.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/fe8080d6eaed"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}