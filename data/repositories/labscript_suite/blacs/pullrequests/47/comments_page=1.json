{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47/comments/71046527.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47/_/diff#comment-71046527"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 47, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47"}}, "title": "Deserialise transition_to_manual"}, "content": {"raw": "As for testing I\u2019m currently in the process of leaving the lab in Darmstadt.   \nBecause of this I\u2019m not in the lab that often at the moment.   \nNon the less I think I\u2019ll be able to test this on monday.  \n  \nThe code looks go so far. It might be personal taste but on line 842 I'd replace `devices_in_use` with `transition_list`. This would make that line more consistent with line 852 and also keep the loop only accessing `transition_list`.", "markup": "markdown", "html": "<p>As for testing I\u2019m currently in the process of leaving the lab in Darmstadt. <br />\nBecause of this I\u2019m not in the lab that often at the moment. <br />\nNon the less I think I\u2019ll be able to test this on monday.  </p>\n<p>The code looks go so far. It might be personal taste but on line 842 I'd replace <code>devices_in_use</code> with <code>transition_list</code>. This would make that line more consistent with line 852 and also keep the loop only accessing <code>transition_list</code>.</p>", "type": "rendered"}, "created_on": "2018-07-25T18:52:20.365137+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-07-25T18:52:20.424334+00:00", "type": "pullrequest_comment", "id": 71046527}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47/comments/71047176.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47/_/diff#comment-71047176"}}, "parent": {"id": 71046527, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47/comments/71046527.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47/_/diff#comment-71046527"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 47, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47"}}, "title": "Deserialise transition_to_manual"}, "content": {"raw": "I've made that change, though there are many other failures to isolate concerns around here that will need fixing at some point!\n\nWhere are you going after Darmstadt? We've really appreciated your contributions and testing, so it will be a shame if you are no longer a user of the software.", "markup": "markdown", "html": "<p>I've made that change, though there are many other failures to isolate concerns around here that will need fixing at some point!</p>\n<p>Where are you going after Darmstadt? We've really appreciated your contributions and testing, so it will be a shame if you are no longer a user of the software.</p>", "type": "rendered"}, "created_on": "2018-07-25T18:59:30.213998+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-07-25T18:59:30.220793+00:00", "type": "pullrequest_comment", "id": 71047176}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47/comments/71047658.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47/_/diff#comment-71047658"}}, "parent": {"id": 71047176, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47/comments/71047176.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47/_/diff#comment-71047176"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 47, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47"}}, "title": "Deserialise transition_to_manual"}, "content": {"raw": "I\u2019m currently looking at jobs in software development mostly due to the fun I had working with labscript and software development during my thesis.  \nI\u2019ll try to keep on contributing to the project \\(and maintaining the few pull request I still have\\), but without a lab to test at this will become harder. ", "markup": "markdown", "html": "<p>I\u2019m currently looking at jobs in software development mostly due to the fun I had working with labscript and software development during my thesis.<br />\nI\u2019ll try to keep on contributing to the project (and maintaining the few pull request I still have), but without a lab to test at this will become harder. </p>", "type": "rendered"}, "created_on": "2018-07-25T19:05:27.088108+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-07-25T19:05:27.152618+00:00", "type": "pullrequest_comment", "id": 71047658}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47/comments/71073790.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47/_/diff#comment-71073790"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 47, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47"}}, "title": "Deserialise transition_to_manual"}, "content": {"raw": "Some thoughts:\n\n* I don\u2019t think it\u2019s a good idea to stop the abort button from working during transition to manual. This prevents the user from breaking out of any future deadlocks.\n* We have an issue where a device that is taking a long time to transition to manual could conceivably write the the HDF5 file after it has been cleaned \\(if it didn\u2019t hold open the HDF5 file while doing a long computation\\). We need some way to abort the transition to manual for all tabs, when one tab fails,, and ensure that happens. I don\u2019t know the best way to do this\u2026..Really we want to wait for some timeout before hard killing, but maybe hard kill the worker process too if the abort button is pressed twice? Can we even hard kill worker processes?\n\nFixing this probably also means we don\u2019t need the second call to transition\\_to\\_manual in the error condition if block.", "markup": "markdown", "html": "<p>Some thoughts:</p>\n<ul>\n<li>I don\u2019t think it\u2019s a good idea to stop the abort button from working during transition to manual. This prevents the user from breaking out of any future deadlocks.</li>\n<li>We have an issue where a device that is taking a long time to transition to manual could conceivably write the the HDF5 file after it has been cleaned (if it didn\u2019t hold open the HDF5 file while doing a long computation). We need some way to abort the transition to manual for all tabs, when one tab fails,, and ensure that happens. I don\u2019t know the best way to do this\u2026..Really we want to wait for some timeout before hard killing, but maybe hard kill the worker process too if the abort button is pressed twice? Can we even hard kill worker processes?</li>\n</ul>\n<p>Fixing this probably also means we don\u2019t need the second call to transition_to_manual in the error condition if block.</p>", "type": "rendered"}, "created_on": "2018-07-26T02:06:01.370751+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-07-26T02:06:01.376789+00:00", "type": "pullrequest_comment", "id": 71073790}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47/comments/71445109.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47/_/diff#comment-71445109"}}, "parent": {"id": 71073790, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47/comments/71073790.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47/_/diff#comment-71073790"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 47, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47"}}, "title": "Deserialise transition_to_manual"}, "content": {"raw": "Abort, if connected, would have to behave differently, as you've implied. Right now the way to break out of a deadlock would be to restart the offending devices' worker processes. This works with this change. We can make the abort button kill workers too in the same manner as is done when restarting them, but the current available functionality seems satisfactory to me - and I like the idea of restarting tabs being explicitly requested, since it is a more destructive operation than abort normally is.\n\nI believe the second call to `transtion_to_manual` in the error handling block is totally redundant and can be removed without having to make any other changes.\n\nWriting to the h5 file after it is cleaned is not the best! I'll have a little bit of a think about this - probably we should just wait until they are all done (or errorred) before cleaning the file if there is an error. So, not breaking from the loop upon error. A hung device can be dealt with manually by restarting it - what happens to a hung device if transition_to_buffered times out? I don't suppose we're killing them there, are we?", "markup": "markdown", "html": "<p>Abort, if connected, would have to behave differently, as you've implied. Right now the way to break out of a deadlock would be to restart the offending devices' worker processes. This works with this change. We can make the abort button kill workers too in the same manner as is done when restarting them, but the current available functionality seems satisfactory to me - and I like the idea of restarting tabs being explicitly requested, since it is a more destructive operation than abort normally is.</p>\n<p>I believe the second call to <code>transtion_to_manual</code> in the error handling block is totally redundant and can be removed without having to make any other changes.</p>\n<p>Writing to the h5 file after it is cleaned is not the best! I'll have a little bit of a think about this - probably we should just wait until they are all done (or errorred) before cleaning the file if there is an error. So, not breaking from the loop upon error. A hung device can be dealt with manually by restarting it - what happens to a hung device if transition_to_buffered times out? I don't suppose we're killing them there, are we?</p>", "type": "rendered"}, "created_on": "2018-07-30T18:43:01.276907+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-07-30T19:49:25.054481+00:00", "type": "pullrequest_comment", "id": 71445109}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47/comments/71468274.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47/_/diff#comment-71468274"}}, "parent": {"id": 71445109, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47/comments/71445109.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47/_/diff#comment-71445109"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 47, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47"}}, "title": "Deserialise transition_to_manual"}, "content": {"raw": "Ok, ignore my first point then for now.\n\nI agree we can remove the second call to `transition_to_manual` but we need to leave in the disconnection of the signal in order to avoid a memory leak \\(I think signal connection prevents garbage collection, which would cause memory to leak on tab restart after an abort\\). Looks like it\u2019s fine to call disconnect on something that\u2019s already been disconnected though \\(I think that\u2019s how the code worked previously?\\).\n\nWe could wait until all devices are back in either `MODE_MANUAL` or an error state before cleaning the file, but that would require the user to restart any device tabs that have locked up or crashed, and to restart any device tabs that depend on the locked up tab via a ZMQ event. I\u2019m not sure what other choice we have though, other than some more complicated system where the queue has the ability \\(either automatically or via the abort button\\) to either restart tabs that are not responding after a timeout or kill worker processes. The latter is perhaps preferable so that the user sees an error message, but is a much bigger change as we currently don\u2019t do this ever. We\u2019d need to check how killing the worker process played with the BLACS state machine, and whether the the GUI method continues if the worker process dies \\(as it\u2019s possible someone could have overridden the GUI method so it was writing to the HDF5 file too\\).\n\nIs there a risk that we might corrupt HDF5 files if they\u2019re being written to when we kill a worker process? Also, does restarting a device tab guarantee that the worker process is killed?\n\n\u200c\n\n**An alternative suggestion**  \nWe could always give cleaned HDF5 files a new name \\(`_clean0001.h5` etc.\\) so that there is no risk of zombie processes writing to the clean file. \n\nNot sure if I like this though\u2026", "markup": "markdown", "html": "<p>Ok, ignore my first point then for now.</p>\n<p>I agree we can remove the second call to <code>transition_to_manual</code> but we need to leave in the disconnection of the signal in order to avoid a memory leak (I think signal connection prevents garbage collection, which would cause memory to leak on tab restart after an abort). Looks like it\u2019s fine to call disconnect on something that\u2019s already been disconnected though (I think that\u2019s how the code worked previously?).</p>\n<p>We could wait until all devices are back in either <code>MODE_MANUAL</code> or an error state before cleaning the file, but that would require the user to restart any device tabs that have locked up or crashed, and to restart any device tabs that depend on the locked up tab via a ZMQ event. I\u2019m not sure what other choice we have though, other than some more complicated system where the queue has the ability (either automatically or via the abort button) to either restart tabs that are not responding after a timeout or kill worker processes. The latter is perhaps preferable so that the user sees an error message, but is a much bigger change as we currently don\u2019t do this ever. We\u2019d need to check how killing the worker process played with the BLACS state machine, and whether the the GUI method continues if the worker process dies (as it\u2019s possible someone could have overridden the GUI method so it was writing to the HDF5 file too).</p>\n<p>Is there a risk that we might corrupt HDF5 files if they\u2019re being written to when we kill a worker process? Also, does restarting a device tab guarantee that the worker process is killed?</p>\n<p>\u200c</p>\n<p><strong>An alternative suggestion</strong><br />\nWe could always give cleaned HDF5 files a new name (<code>_clean0001.h5</code> etc.) so that there is no risk of zombie processes writing to the clean file. </p>\n<p>Not sure if I like this though\u2026</p>", "type": "rendered"}, "created_on": "2018-07-31T00:11:23.854162+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-07-31T00:11:23.860742+00:00", "type": "pullrequest_comment", "id": 71468274}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47/comments/71425773.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47/_/diff#comment-71425773"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 47, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47"}}, "title": "Deserialise transition_to_manual"}, "content": {"raw": "Tested this in the lab today and did not encounter any problems.", "markup": "markdown", "html": "<p>Tested this in the lab today and did not encounter any problems.</p>", "type": "rendered"}, "created_on": "2018-07-30T15:42:16.478161+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-07-30T15:42:16.538214+00:00", "type": "pullrequest_comment", "id": 71425773}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47/comments/71445128.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47/_/diff#comment-71445128"}}, "parent": {"id": 71425773, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47/comments/71425773.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47/_/diff#comment-71425773"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 47, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47"}}, "title": "Deserialise transition_to_manual"}, "content": {"raw": "Thanks for testing!", "markup": "markdown", "html": "<p>Thanks for testing!</p>", "type": "rendered"}, "created_on": "2018-07-30T18:43:08.928157+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-07-30T18:43:08.935077+00:00", "type": "pullrequest_comment", "id": 71445128}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47/comments/72232907.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47/_/diff#comment-72232907"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 47, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47"}}, "title": "Deserialise transition_to_manual"}, "content": {"raw": "The JQI RbLi lab, to which I deployed this change, is reporting problems, so I'll be investigating this - may or may not be specific to other modifications made in their setup.", "markup": "markdown", "html": "<p>The JQI RbLi lab, to which I deployed this change, is reporting problems, so I'll be investigating this - may or may not be specific to other modifications made in their setup.</p>", "type": "rendered"}, "created_on": "2018-08-07T14:45:13.971603+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-08-07T14:45:13.981030+00:00", "type": "pullrequest_comment", "id": 72232907}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47/comments/102344055.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47/_/diff#comment-102344055"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 47, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/47.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/47"}}, "title": "Deserialise transition_to_manual"}, "content": {"raw": "Declining this as I'll be working on a change to implement transitioning in the order specified in labscript as per [labscript PR 37](#!/labscript_suite/labscript/pull-requests/37).\n\nAlso, there is no need to not be invasive with the changes now that we are close enough to feature parity of mainline labscript suite with the Spielman fork, that we will not be attempting to backport this change from mainline to Spielman - we will just use mainline and keep patching any issues we find.\n\nBut I'll take into account the issues raised here about how it should work.\n", "markup": "markdown", "html": "<p>Declining this as I'll be working on a change to implement transitioning in the order specified in labscript as per <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/pull-requests/37\" rel=\"nofollow\">labscript PR 37</a>.</p>\n<p>Also, there is no need to not be invasive with the changes now that we are close enough to feature parity of mainline labscript suite with the Spielman fork, that we will not be attempting to backport this change from mainline to Spielman - we will just use mainline and keep patching any issues we find.</p>\n<p>But I'll take into account the issues raised here about how it should work.</p>", "type": "rendered"}, "created_on": "2019-05-16T16:41:35.605151+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-05-16T16:41:35.617895+00:00", "type": "pullrequest_comment", "id": 102344055}], "page": 1, "size": 10}