{"rendered": {"description": {"raw": "Added priorities for plugin callbacks. Plugin callbacks may now be decorated with the decorator `blacs.plugins.callback(priority=<number>)`, and those with the lowest number for their priority will be called first. The defauly priority is 10, which will be used if no priority is specified or if a callback does not use this decorator. Because it is optional, this change is backward compatible with existing callbacks, which will work unmodified. I have not added the decorator to any of the callbacks of the plugins shipped with BLACS.\r\n\r\nThis functionality was implemented by defining a Callback class in blacs.plugins\r\nthat has an attribute for the priority, but is also a callable, and so can be\r\njust called as normal if the priority is not relevant.\r\n\r\nMoved `get_callbacks()` from `blacs.experiment_queue` into `blacs.plugins`, and\r\nmodified it to return callbacks in order of priority. Removed the `inmain`\r\ndecorator from it since it should not normally need to touch the GUI - if a\r\nplugin needs to touch the GUI to get callbacks for whatever reason, it can call\r\n`inmain()` itself.\r\n\r\nReplaced the remaining code in the\r\nqueue manager that manually looked through plugins for callbacks with\r\na call to get_callbacks.\r\n\r\nThis is so that I can make a plugin with a callback for 'shot_complete', which\r\ndelays the start of the next shot. This callback should run last if there are\r\nother callbacks, necessitating priorities of some sort.", "markup": "markdown", "html": "<p>Added priorities for plugin callbacks. Plugin callbacks may now be decorated with the decorator <code>blacs.plugins.callback(priority=&lt;number&gt;)</code>, and those with the lowest number for their priority will be called first. The defauly priority is 10, which will be used if no priority is specified or if a callback does not use this decorator. Because it is optional, this change is backward compatible with existing callbacks, which will work unmodified. I have not added the decorator to any of the callbacks of the plugins shipped with BLACS.</p>\n<p>This functionality was implemented by defining a Callback class in blacs.plugins\nthat has an attribute for the priority, but is also a callable, and so can be\njust called as normal if the priority is not relevant.</p>\n<p>Moved <code>get_callbacks()</code> from <code>blacs.experiment_queue</code> into <code>blacs.plugins</code>, and\nmodified it to return callbacks in order of priority. Removed the <code>inmain</code>\ndecorator from it since it should not normally need to touch the GUI - if a\nplugin needs to touch the GUI to get callbacks for whatever reason, it can call\n<code>inmain()</code> itself.</p>\n<p>Replaced the remaining code in the\nqueue manager that manually looked through plugins for callbacks with\na call to get_callbacks.</p>\n<p>This is so that I can make a plugin with a callback for 'shot_complete', which\ndelays the start of the next shot. This callback should run last if there are\nother callbacks, necessitating priorities of some sort.</p>", "type": "rendered"}, "title": {"raw": "Plugin callback priorities", "markup": "markdown", "html": "<p>Plugin callback priorities</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Added priorities for plugin callbacks. Plugin callbacks may now be decorated with the decorator `blacs.plugins.callback(priority=<number>)`, and those with the lowest number for their priority will be called first. The defauly priority is 10, which will be used if no priority is specified or if a callback does not use this decorator. Because it is optional, this change is backward compatible with existing callbacks, which will work unmodified. I have not added the decorator to any of the callbacks of the plugins shipped with BLACS.\r\n\r\nThis functionality was implemented by defining a Callback class in blacs.plugins\r\nthat has an attribute for the priority, but is also a callable, and so can be\r\njust called as normal if the priority is not relevant.\r\n\r\nMoved `get_callbacks()` from `blacs.experiment_queue` into `blacs.plugins`, and\r\nmodified it to return callbacks in order of priority. Removed the `inmain`\r\ndecorator from it since it should not normally need to touch the GUI - if a\r\nplugin needs to touch the GUI to get callbacks for whatever reason, it can call\r\n`inmain()` itself.\r\n\r\nReplaced the remaining code in the\r\nqueue manager that manually looked through plugins for callbacks with\r\na call to get_callbacks.\r\n\r\nThis is so that I can make a plugin with a callback for 'shot_complete', which\r\ndelays the start of the next shot. This callback should run last if there are\r\nother callbacks, necessitating priorities of some sort.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/pullrequests/49/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diffstat/labscript_suite/blacs:f6faf14e9f62%0Dc960e1d86794?from_pullrequest_id=49"}, "commits": {"href": "data/repositories/labscript_suite/blacs/pullrequests/49/commits.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/49.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/pullrequests/49/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/pullrequests/49/merge"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/49"}, "activity": {"href": "data/repositories/labscript_suite/blacs/pullrequests/49/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/labscript_suite/blacs:f6faf14e9f62%0Dc960e1d86794?from_pullrequest_id=49"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/pullrequests/49/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/pullrequests/49/statuses_page=1.json"}}, "title": "Plugin callback priorities", "close_source_branch": true, "reviewers": [{"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}], "id": 49, "destination": {"commit": {"hash": "c960e1d86794", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/c960e1d86794.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/c960e1d86794"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "created_on": "2018-09-10T19:30:00.516674+00:00", "summary": {"raw": "Added priorities for plugin callbacks. Plugin callbacks may now be decorated with the decorator `blacs.plugins.callback(priority=<number>)`, and those with the lowest number for their priority will be called first. The defauly priority is 10, which will be used if no priority is specified or if a callback does not use this decorator. Because it is optional, this change is backward compatible with existing callbacks, which will work unmodified. I have not added the decorator to any of the callbacks of the plugins shipped with BLACS.\r\n\r\nThis functionality was implemented by defining a Callback class in blacs.plugins\r\nthat has an attribute for the priority, but is also a callable, and so can be\r\njust called as normal if the priority is not relevant.\r\n\r\nMoved `get_callbacks()` from `blacs.experiment_queue` into `blacs.plugins`, and\r\nmodified it to return callbacks in order of priority. Removed the `inmain`\r\ndecorator from it since it should not normally need to touch the GUI - if a\r\nplugin needs to touch the GUI to get callbacks for whatever reason, it can call\r\n`inmain()` itself.\r\n\r\nReplaced the remaining code in the\r\nqueue manager that manually looked through plugins for callbacks with\r\na call to get_callbacks.\r\n\r\nThis is so that I can make a plugin with a callback for 'shot_complete', which\r\ndelays the start of the next shot. This callback should run last if there are\r\nother callbacks, necessitating priorities of some sort.", "markup": "markdown", "html": "<p>Added priorities for plugin callbacks. Plugin callbacks may now be decorated with the decorator <code>blacs.plugins.callback(priority=&lt;number&gt;)</code>, and those with the lowest number for their priority will be called first. The defauly priority is 10, which will be used if no priority is specified or if a callback does not use this decorator. Because it is optional, this change is backward compatible with existing callbacks, which will work unmodified. I have not added the decorator to any of the callbacks of the plugins shipped with BLACS.</p>\n<p>This functionality was implemented by defining a Callback class in blacs.plugins\nthat has an attribute for the priority, but is also a callable, and so can be\njust called as normal if the priority is not relevant.</p>\n<p>Moved <code>get_callbacks()</code> from <code>blacs.experiment_queue</code> into <code>blacs.plugins</code>, and\nmodified it to return callbacks in order of priority. Removed the <code>inmain</code>\ndecorator from it since it should not normally need to touch the GUI - if a\nplugin needs to touch the GUI to get callbacks for whatever reason, it can call\n<code>inmain()</code> itself.</p>\n<p>Replaced the remaining code in the\nqueue manager that manually looked through plugins for callbacks with\na call to get_callbacks.</p>\n<p>This is so that I can make a plugin with a callback for 'shot_complete', which\ndelays the start of the next shot. This callback should run last if there are\nother callbacks, necessitating priorities of some sort.</p>", "type": "rendered"}, "source": {"commit": {"hash": "10fa74cf82d0", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/10fa74cf82d0"}, "html": {"href": "#!/cbillington/blacs/commits/10fa74cf82d0"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "callback_priorities"}}, "comment_count": 6, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2018-09-13T14:34:48.527231+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": "2018-09-13T02:28:10.445298+00:00", "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}], "reason": "", "updated_on": "2018-09-14T13:30:03.700464+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "f6faf14e9f62", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/f6faf14e9f62.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/f6faf14e9f62"}}}, "closed_by": null}