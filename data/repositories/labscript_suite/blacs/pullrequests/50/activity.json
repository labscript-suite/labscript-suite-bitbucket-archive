{"pagelen": 50, "values": [{"update": {"description": "Added a plugin that allows one to impose a fixed interval between the beginning of\r\nsubsequent shots. This is a feature present in the Spielman fork, and is used to ensure that the experiment that needs to be 'kept warm' can be put in an equilibrium state in which some process runs with a fixed duty cycle despite varying shot durations. For us this is UV desorption or rubidium during MOT loading. To keep a consistent pressure in the MOT cell during this state from one shot to the next, it's important that the UV is on a fixed fraction of the time.\r\n\r\nThis can be achieved by having BLACS wait before running the next shot, leaving a configurable buffer of time so that it can run shots at a fixed interval despite the shots having small variations in duration (for science reasons or software timing differences or otherwise).\r\n\r\nAlthough there is still software timing differences after this point, I decided to insert the delay just before transition_to_buffered is called on all devices. This is because transition_to_buffered may cause some devices to start outputting their initial instructions, which may be undesirable.\r\n\r\nhere's what it looks like:\r\n\r\n![blacs_fixed_plugin.png](https://bitbucket.org/repo/9pKE7ad/images/1175914126-blacs_fixed_plugin.png)\r\n\r\nIf the interval is set to zero, it instead displays 'none', and runs shots as they come without trying to impose a fixed interval. If shots take too long such that the interval is not able to be achieved, an error icon is displayed, but BLACS continues to run shots.\r\n\r\nWhilst waiting, the plugin attaches an additional callback to the abort button, so that it will stop waiting if the abort button is clicked.", "title": "Fixed shot interval", "destination": {"commit": {"hash": "634d076ccf54", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/634d076ccf54.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/634d076ccf54"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "8412a3058e93", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/8412a3058e93"}, "html": {"href": "#!/cbillington/blacs/commits/8412a3058e93"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "fixed-shot-interval"}}, "state": "MERGED", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2020-01-28T21:04:34.151926+00:00"}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"update": {"description": "Added a plugin that allows one to impose a fixed interval between the beginning of\r\nsubsequent shots. This is a feature present in the Spielman fork, and is used to ensure that the experiment that needs to be 'kept warm' can be put in an equilibrium state in which some process runs with a fixed duty cycle despite varying shot durations. For us this is UV desorption or rubidium during MOT loading. To keep a consistent pressure in the MOT cell during this state from one shot to the next, it's important that the UV is on a fixed fraction of the time.\r\n\r\nThis can be achieved by having BLACS wait before running the next shot, leaving a configurable buffer of time so that it can run shots at a fixed interval despite the shots having small variations in duration (for science reasons or software timing differences or otherwise).\r\n\r\nAlthough there is still software timing differences after this point, I decided to insert the delay just before transition_to_buffered is called on all devices. This is because transition_to_buffered may cause some devices to start outputting their initial instructions, which may be undesirable.\r\n\r\nhere's what it looks like:\r\n\r\n![blacs_fixed_plugin.png](https://bitbucket.org/repo/9pKE7ad/images/1175914126-blacs_fixed_plugin.png)\r\n\r\nIf the interval is set to zero, it instead displays 'none', and runs shots as they come without trying to impose a fixed interval. If shots take too long such that the interval is not able to be achieved, an error icon is displayed, but BLACS continues to run shots.\r\n\r\nWhilst waiting, the plugin attaches an additional callback to the abort button, so that it will stop waiting if the abort button is clicked.", "title": "Fixed shot interval", "destination": {"commit": {"hash": "634d076ccf54", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/634d076ccf54.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/634d076ccf54"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "8412a3058e93", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/8412a3058e93"}, "html": {"href": "#!/cbillington/blacs/commits/8412a3058e93"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "fixed-shot-interval"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2020-01-28T21:04:33.352546+00:00"}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"update": {"description": "Added a plugin that allows one to impose a fixed interval between the beginning of\r\nsubsequent shots. This is a feature present in the Spielman fork, and is used to ensure that the experiment that needs to be 'kept warm' can be put in an equilibrium state in which some process runs with a fixed duty cycle despite varying shot durations. For us this is UV desorption or rubidium during MOT loading. To keep a consistent pressure in the MOT cell during this state from one shot to the next, it's important that the UV is on a fixed fraction of the time.\r\n\r\nThis can be achieved by having BLACS wait before running the next shot, leaving a configurable buffer of time so that it can run shots at a fixed interval despite the shots having small variations in duration (for science reasons or software timing differences or otherwise).\r\n\r\nAlthough there is still software timing differences after this point, I decided to insert the delay just before transition_to_buffered is called on all devices. This is because transition_to_buffered may cause some devices to start outputting their initial instructions, which may be undesirable.\r\n\r\nhere's what it looks like:\r\n\r\n![blacs_fixed_plugin.png](https://bitbucket.org/repo/9pKE7ad/images/1175914126-blacs_fixed_plugin.png)\r\n\r\nIf the interval is set to zero, it instead displays 'none', and runs shots as they come without trying to impose a fixed interval. If shots take too long such that the interval is not able to be achieved, an error icon is displayed, but BLACS continues to run shots.\r\n\r\nWhilst waiting, the plugin attaches an additional callback to the abort button, so that it will stop waiting if the abort button is clicked.", "title": "Fixed shot interval", "destination": {"commit": {"hash": "634d076ccf54", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/634d076ccf54.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/634d076ccf54"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "8412a3058e93", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/8412a3058e93"}, "html": {"href": "#!/cbillington/blacs/commits/8412a3058e93"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "fixed-shot-interval"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2020-01-28T21:03:59.813589+00:00"}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50/comments/131902216.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50/_/diff#comment-131902216"}}, "parent": {"id": 131891198, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50/comments/131891198.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50/_/diff#comment-131891198"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}, "content": {"raw": "Agreed - I\u2019ll fix the merge conflict and file the bug!", "markup": "markdown", "html": "<p>Agreed - I\u2019ll fix the merge conflict and file the bug!</p>", "type": "rendered"}, "created_on": "2020-01-16T10:24:14.736397+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2020-01-16T10:24:14.746742+00:00", "type": "pullrequest_comment", "id": 131902216}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50/comments/131891198.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50/_/diff#comment-131891198"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}, "content": {"raw": "I would be tempted to merge this and file a bug regarding the \u201cMake abort when delays inserted before transition\\_to\\_buffered actually work: the queue manager does not check for an abort condition after calling plugins, so the abort doesn't actually occur until after calling transition\\_to\\_buffered, which is not what you want!\u201d issue.", "markup": "markdown", "html": "<p>I would be tempted to merge this and file a bug regarding the \u201cMake abort when delays inserted before transition_to_buffered actually work: the queue manager does not check for an abort condition after calling plugins, so the abort doesn't actually occur until after calling transition_to_buffered, which is not what you want!\u201d issue.</p>", "type": "rendered"}, "created_on": "2020-01-16T09:31:34.162941+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "updated_on": "2020-01-16T09:31:34.176220+00:00", "type": "pullrequest_comment", "id": 131891198}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"update": {"description": "Added a plugin that allows one to impose a fixed interval between the beginning of\r\nsubsequent shots. This is a feature present in the Spielman fork, and is used to ensure that the experiment that needs to be 'kept warm' can be put in an equilibrium state in which some process runs with a fixed duty cycle despite varying shot durations. For us this is UV desorption or rubidium during MOT loading. To keep a consistent pressure in the MOT cell during this state from one shot to the next, it's important that the UV is on a fixed fraction of the time.\r\n\r\nThis can be achieved by having BLACS wait before running the next shot, leaving a configurable buffer of time so that it can run shots at a fixed interval despite the shots having small variations in duration (for science reasons or software timing differences or otherwise).\r\n\r\nAlthough there is still software timing differences after this point, I decided to insert the delay just before transition_to_buffered is called on all devices. This is because transition_to_buffered may cause some devices to start outputting their initial instructions, which may be undesirable.\r\n\r\nhere's what it looks like:\r\n\r\n![blacs_fixed_plugin.png](https://bitbucket.org/repo/9pKE7ad/images/1175914126-blacs_fixed_plugin.png)\r\n\r\nIf the interval is set to zero, it instead displays 'none', and runs shots as they come without trying to impose a fixed interval. If shots take too long such that the interval is not able to be achieved, an error icon is displayed, but BLACS continues to run shots.\r\n\r\nWhilst waiting, the plugin attaches an additional callback to the abort button, so that it will stop waiting if the abort button is clicked.", "title": "Fixed shot interval", "destination": {"commit": {"hash": "1c240654e522", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1c240654e522.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/1c240654e522"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b280ba97ed19", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/b280ba97ed19"}, "html": {"href": "#!/cbillington/blacs/commits/b280ba97ed19"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "fixed-shot-interval"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-12-05T02:53:45.636088+00:00"}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"update": {"description": "Added a plugin that allows one to impose a fixed interval between the beginning of\r\nsubsequent shots. This is a feature present in the Spielman fork, and is used to ensure that the experiment that needs to be 'kept warm' can be put in an equilibrium state in which some process runs with a fixed duty cycle despite varying shot durations. For us this is UV desorption or rubidium during MOT loading. To keep a consistent pressure in the MOT cell during this state from one shot to the next, it's important that the UV is on a fixed fraction of the time.\r\n\r\nThis can be achieved by having BLACS wait before running the next shot, leaving a configurable buffer of time so that it can run shots at a fixed interval despite the shots having small variations in duration (for science reasons or software timing differences or otherwise).\r\n\r\nAlthough there is still software timing differences after this point, I decided to insert the delay just before transition_to_buffered is called on all devices. This is because transition_to_buffered may cause some devices to start outputting their initial instructions, which may be undesirable.\r\n\r\nhere's what it looks like:\r\n\r\n![blacs_fixed_plugin.png](https://bitbucket.org/repo/9pKE7ad/images/1175914126-blacs_fixed_plugin.png)\r\n\r\nIf the interval is set to zero, it instead displays 'none', and runs shots as they come without trying to impose a fixed interval. If shots take too long such that the interval is not able to be achieved, an error icon is displayed, but BLACS continues to run shots.\r\n\r\nWhilst waiting, the plugin attaches an additional callback to the abort button, so that it will stop waiting if the abort button is clicked.", "title": "Fixed shot interval", "destination": {"commit": {"hash": "1c240654e522", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1c240654e522.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/1c240654e522"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b280ba97ed19", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/b280ba97ed19"}, "html": {"href": "#!/cbillington/blacs/commits/b280ba97ed19"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "fixed-shot-interval"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-12-05T02:53:13.321363+00:00"}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"update": {"description": "Added a plugin that allows one to impose a fixed interval between the beginning of\r\nsubsequent shots. This is a feature present in the Spielman fork, and is used to ensure that the experiment that needs to be 'kept warm' can be put in an equilibrium state in which some process runs with a fixed duty cycle despite varying shot durations. For us this is UV desorption or rubidium during MOT loading. To keep a consistent pressure in the MOT cell during this state from one shot to the next, it's important that the UV is on a fixed fraction of the time.\r\n\r\nThis can be achieved by having BLACS wait before running the next shot, leaving a configurable buffer of time so that it can run shots at a fixed interval despite the shots having small variations in duration (for science reasons or software timing differences or otherwise).\r\n\r\nAlthough there is still software timing differences after this point, I decided to insert the delay just before transition_to_buffered is called on all devices. This is because transition_to_buffered may cause some devices to start outputting their initial instructions, which may be undesirable.\r\n\r\nhere's what it looks like:\r\n\r\n![blacs_fixed_plugin.png](https://bitbucket.org/repo/9pKE7ad/images/1175914126-blacs_fixed_plugin.png)\r\n\r\nIf the interval is set to zero, it instead displays 'none', and runs shots as they come without trying to impose a fixed interval. If shots take too long such that the interval is not able to be achieved, an error icon is displayed, but BLACS continues to run shots.\r\n\r\nWhilst waiting, the plugin attaches an additional callback to the abort button, so that it will stop waiting if the abort button is clicked.", "title": "Fixed shot interval", "destination": {"commit": {"hash": "1c240654e522", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1c240654e522.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/1c240654e522"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b280ba97ed19", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/b280ba97ed19"}, "html": {"href": "#!/cbillington/blacs/commits/b280ba97ed19"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "fixed-shot-interval"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-12-05T02:52:41.598778+00:00"}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50/comments/109182896.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50/_/diff#comment-109182896"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}, "content": {"raw": "Still to do on this one before merging:\n\n* Make abort when delays inserted before transition_to_buffered actually work: the queue manager does not check for an abort condition after calling plugins, so the abort doesn't actually occur until after calling transition_to_buffered, which is not what you want!\n* Add a group to the HDF5 file where we can store non-fatal failure information about a shot. This is where we can store if the deadline was missed. The same group can be used to store whether cameras failed to acquire all images, and that sort of thing. This has been an ongoing issue that we want to make more are more types of failure non-fatal so that they do not stop BLACS from cycling, but they need to be recorded in some way. This PR could be merged without that being done though, since it affects more than just this plugin!\n\nOtherwise this has been working well in the lab.", "markup": "markdown", "html": "<p>Still to do on this one before merging:</p>\n<ul>\n<li>Make abort when delays inserted before transition_to_buffered actually work: the queue manager does not check for an abort condition after calling plugins, so the abort doesn't actually occur until after calling transition_to_buffered, which is not what you want!</li>\n<li>Add a group to the HDF5 file where we can store non-fatal failure information about a shot. This is where we can store if the deadline was missed. The same group can be used to store whether cameras failed to acquire all images, and that sort of thing. This has been an ongoing issue that we want to make more are more types of failure non-fatal so that they do not stop BLACS from cycling, but they need to be recorded in some way. This PR could be merged without that being done though, since it affects more than just this plugin!</li>\n</ul>\n<p>Otherwise this has been working well in the lab.</p>", "type": "rendered"}, "created_on": "2019-07-13T15:49:03.693415+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-07-13T15:49:36.059916+00:00", "type": "pullrequest_comment", "id": 109182896}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"update": {"description": "Added a plugin that allows one to impose a fixed interval between the beginning of\r\nsubsequent shots. This is a feature present in the Spielman fork, and is used to ensure that the experiment that needs to be 'kept warm' can be put in an equilibrium state in which some process runs with a fixed duty cycle despite varying shot durations. For us this is UV desorption or rubidium during MOT loading. To keep a consistent pressure in the MOT cell during this state from one shot to the next, it's important that the UV is on a fixed fraction of the time.\r\n\r\nThis can be achieved by having BLACS wait before running the next shot, leaving a configurable buffer of time so that it can run shots at a fixed interval despite the shots having small variations in duration (for science reasons or software timing differences or otherwise).\r\n\r\nAlthough there is still software timing differences after this point, I decided to insert the delay just before transition_to_buffered is called on all devices. This is because transition_to_buffered may cause some devices to start outputting their initial instructions, which may be undesirable.\r\n\r\nhere's what it looks like:\r\n\r\n![blacs_fixed_plugin.png](https://bitbucket.org/repo/9pKE7ad/images/1175914126-blacs_fixed_plugin.png)\r\n\r\nIf the interval is set to zero, it instead displays 'none', and runs shots as they come without trying to impose a fixed interval. If shots take too long such that the interval is not able to be achieved, an error icon is displayed, but BLACS continues to run shots.\r\n\r\nWhilst waiting, the plugin attaches an additional callback to the abort button, so that it will stop waiting if the abort button is clicked.", "title": "Fixed shot interval", "destination": {"commit": {"hash": "1b4c69c290bd", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1b4c69c290bd.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/1b4c69c290bd"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b280ba97ed19", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/b280ba97ed19"}, "html": {"href": "#!/cbillington/blacs/commits/b280ba97ed19"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "fixed-shot-interval"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-06-29T03:34:57.318511+00:00"}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50/comments/107527224.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50/_/diff#comment-107527224"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}, "content": {"raw": "Looks like this:\n\n![cycle_time.gif](data/bitbucket.org/repo/dR5qxr/images/3910940255-cycle_time.gif)", "markup": "markdown", "html": "<p>Looks like this:</p>\n<p><img alt=\"cycle_time.gif\" src=\"data/bitbucket.org/repo/dR5qxr/images/3910940255-cycle_time.gif\" /></p>", "type": "rendered"}, "created_on": "2019-06-28T22:41:38.953221+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-06-28T22:41:38.960375+00:00", "type": "pullrequest_comment", "id": 107527224}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"update": {"description": "Added a plugin that allows one to impose a fixed interval between the beginning of\r\nsubsequent shots. This is a feature present in the Spielman fork, and is used to ensure that the experiment that needs to be 'kept warm' can be put in an equilibrium state in which some process runs with a fixed duty cycle despite varying shot durations. For us this is UV desorption or rubidium during MOT loading. To keep a consistent pressure in the MOT cell during this state from one shot to the next, it's important that the UV is on a fixed fraction of the time.\r\n\r\nThis can be achieved by having BLACS wait before running the next shot, leaving a configurable buffer of time so that it can run shots at a fixed interval despite the shots having small variations in duration (for science reasons or software timing differences or otherwise).\r\n\r\nAlthough there is still software timing differences after this point, I decided to insert the delay just before transition_to_buffered is called on all devices. This is because transition_to_buffered may cause some devices to start outputting their initial instructions, which may be undesirable.\r\n\r\nhere's what it looks like:\r\n\r\n![blacs_fixed_plugin.png](https://bitbucket.org/repo/9pKE7ad/images/1175914126-blacs_fixed_plugin.png)\r\n\r\nIf the interval is set to zero, it instead displays 'none', and runs shots as they come without trying to impose a fixed interval. If shots take too long such that the interval is not able to be achieved, an error icon is displayed, but BLACS continues to run shots.\r\n\r\nWhilst waiting, the plugin attaches an additional callback to the abort button, so that it will stop waiting if the abort button is clicked.", "title": "Fixed shot interval", "destination": {"commit": {"hash": "1b4c69c290bd", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1b4c69c290bd.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/1b4c69c290bd"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "62bd427364cb", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/62bd427364cb"}, "html": {"href": "#!/cbillington/blacs/commits/62bd427364cb"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "fixed-shot-interval"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-06-28T22:39:33.632978+00:00"}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50/comments/107526834.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50/_/diff#comment-107526834"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}, "content": {"raw": "OK, this has been reworked. \n\nFirstly it's been renamed 'cycle_time'\n\nAlso, [the corresponding labscript changes create](#!/labscript_suite/labscript/pull-requests/50/) a 'shot_properties' toplevel group in the HDF5 file, containing settings for the shot as a whole that don't pertain to any particular device. This plugin reads that group and looks for two attributes:\n`target_cycle_time` and `cycle_time_delay_after_programming`. The plugin no longer has any GUI, other than updating the queue status to show the delay time remaining to 0.1s accuracy. There is so far no mechanism for ensuring that BLACS has the required plugins enabled - requiring the plugin is documented in labscript's docstring for `stop()`, but that it is it.\n\nThe delay is inserted before or after programming depending on the setting `cycle_time_delay_after_programming`, which defaults to `False`.\n\nIt was not possible to remove all `inmain()` calls after the delay, at least, not if we want to have any visual indication that the delay is in progress. So i think we just have to accept that the cycle time will have jitter on the scale of `inmain()` calls to the GUI. I don't think there is much point optimising further - even if this plugin didn't have any GUI calls, starting the master pseudoclock has an `inmain()` call so that is still there whatever we do. More precise timing should be achieved by starting the experiment ASAP and using a periodically fired hardware trigger to resume a `wait()` early in the experiment.\n\nI will deploy this to our lab on Monday and see how it goes.\n\n\nOur interest in this is keeping the atom number stable over time, since the pressure in the MOT cell is related to the average duty cycle of UV that is shone for a few seconds each shot to desorb rubidium. Whilst things are pretty stable when running normally, differences in shot duration as we are optimising, or differences in programming time when we are scanning over parameters that cause the novatechs to be reprogrammed, benefit from something like this.\n\nThere is presently no way to tell whether a shot ran in the requested time, other than inspecting the run_time attributes of shot files in lyse (which you could do if you wanted). So setting the target cycle time is a polite request only, as and as the plugin is now, it's totally up to you to make sure this is sufficient and to verify it's working.", "markup": "markdown", "html": "<p>OK, this has been reworked. </p>\n<p>Firstly it's been renamed 'cycle_time'</p>\n<p>Also, <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/pull-requests/50/\" rel=\"nofollow\">the corresponding labscript changes create</a> a 'shot_properties' toplevel group in the HDF5 file, containing settings for the shot as a whole that don't pertain to any particular device. This plugin reads that group and looks for two attributes:\n<code>target_cycle_time</code> and <code>cycle_time_delay_after_programming</code>. The plugin no longer has any GUI, other than updating the queue status to show the delay time remaining to 0.1s accuracy. There is so far no mechanism for ensuring that BLACS has the required plugins enabled - requiring the plugin is documented in labscript's docstring for <code>stop()</code>, but that it is it.</p>\n<p>The delay is inserted before or after programming depending on the setting <code>cycle_time_delay_after_programming</code>, which defaults to <code>False</code>.</p>\n<p>It was not possible to remove all <code>inmain()</code> calls after the delay, at least, not if we want to have any visual indication that the delay is in progress. So i think we just have to accept that the cycle time will have jitter on the scale of <code>inmain()</code> calls to the GUI. I don't think there is much point optimising further - even if this plugin didn't have any GUI calls, starting the master pseudoclock has an <code>inmain()</code> call so that is still there whatever we do. More precise timing should be achieved by starting the experiment ASAP and using a periodically fired hardware trigger to resume a <code>wait()</code> early in the experiment.</p>\n<p>I will deploy this to our lab on Monday and see how it goes.</p>\n<p>Our interest in this is keeping the atom number stable over time, since the pressure in the MOT cell is related to the average duty cycle of UV that is shone for a few seconds each shot to desorb rubidium. Whilst things are pretty stable when running normally, differences in shot duration as we are optimising, or differences in programming time when we are scanning over parameters that cause the novatechs to be reprogrammed, benefit from something like this.</p>\n<p>There is presently no way to tell whether a shot ran in the requested time, other than inspecting the run_time attributes of shot files in lyse (which you could do if you wanted). So setting the target cycle time is a polite request only, as and as the plugin is now, it's totally up to you to make sure this is sufficient and to verify it's working.</p>", "type": "rendered"}, "created_on": "2019-06-28T22:32:06.883939+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-06-28T22:37:52.776436+00:00", "type": "pullrequest_comment", "id": 107526834}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"update": {"description": "Added a plugin that allows one to impose a fixed interval between the beginning of\r\nsubsequent shots. This is a feature present in the Spielman fork, and is used to ensure that the experiment that needs to be 'kept warm' can be put in an equilibrium state in which some process runs with a fixed duty cycle despite varying shot durations. For us this is UV desorption or rubidium during MOT loading. To keep a consistent pressure in the MOT cell during this state from one shot to the next, it's important that the UV is on a fixed fraction of the time.\r\n\r\nThis can be achieved by having BLACS wait before running the next shot, leaving a configurable buffer of time so that it can run shots at a fixed interval despite the shots having small variations in duration (for science reasons or software timing differences or otherwise).\r\n\r\nAlthough there is still software timing differences after this point, I decided to insert the delay just before transition_to_buffered is called on all devices. This is because transition_to_buffered may cause some devices to start outputting their initial instructions, which may be undesirable.\r\n\r\nhere's what it looks like:\r\n\r\n![blacs_fixed_plugin.png](https://bitbucket.org/repo/9pKE7ad/images/1175914126-blacs_fixed_plugin.png)\r\n\r\nIf the interval is set to zero, it instead displays 'none', and runs shots as they come without trying to impose a fixed interval. If shots take too long such that the interval is not able to be achieved, an error icon is displayed, but BLACS continues to run shots.\r\n\r\nWhilst waiting, the plugin attaches an additional callback to the abort button, so that it will stop waiting if the abort button is clicked.", "title": "Fixed shot interval", "destination": {"commit": {"hash": "1b4c69c290bd", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/1b4c69c290bd.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/1b4c69c290bd"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "9c9a7a49432d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/9c9a7a49432d"}, "html": {"href": "#!/cbillington/blacs/commits/9c9a7a49432d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "fixed-shot-interval"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-06-28T22:15:39.970600+00:00"}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"update": {"description": "Added a plugin that allows one to impose a fixed interval between the beginning of\r\nsubsequent shots. This is a feature present in the Spielman fork, and is used to ensure that the experiment that needs to be 'kept warm' can be put in an equilibrium state in which some process runs with a fixed duty cycle despite varying shot durations. For us this is UV desorption or rubidium during MOT loading. To keep a consistent pressure in the MOT cell during this state from one shot to the next, it's important that the UV is on a fixed fraction of the time.\r\n\r\nThis can be achieved by having BLACS wait before running the next shot, leaving a configurable buffer of time so that it can run shots at a fixed interval despite the shots having small variations in duration (for science reasons or software timing differences or otherwise).\r\n\r\nAlthough there is still software timing differences after this point, I decided to insert the delay just before transition_to_buffered is called on all devices. This is because transition_to_buffered may cause some devices to start outputting their initial instructions, which may be undesirable.\r\n\r\nhere's what it looks like:\r\n\r\n![blacs_fixed_plugin.png](https://bitbucket.org/repo/9pKE7ad/images/1175914126-blacs_fixed_plugin.png)\r\n\r\nIf the interval is set to zero, it instead displays 'none', and runs shots as they come without trying to impose a fixed interval. If shots take too long such that the interval is not able to be achieved, an error icon is displayed, but BLACS continues to run shots.\r\n\r\nWhilst waiting, the plugin attaches an additional callback to the abort button, so that it will stop waiting if the abort button is clicked.", "title": "Fixed shot interval", "destination": {"commit": {"hash": "5d54c0612c8c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5d54c0612c8c.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/5d54c0612c8c"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0cc464565463", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/0cc464565463"}, "html": {"href": "#!/cbillington/blacs/commits/0cc464565463"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "fixed-shot-interval"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-04-23T17:56:01.941069+00:00"}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"update": {"description": "Added a plugin that allows one to impose a fixed interval between the beginning of\r\nsubsequent shots. This is a feature present in the Spielman fork, and is used to ensure that the experiment that needs to be 'kept warm' can be put in an equilibrium state in which some process runs with a fixed duty cycle despite varying shot durations. For us this is UV desorption or rubidium during MOT loading. To keep a consistent pressure in the MOT cell during this state from one shot to the next, it's important that the UV is on a fixed fraction of the time.\r\n\r\nThis can be achieved by having BLACS wait before running the next shot, leaving a configurable buffer of time so that it can run shots at a fixed interval despite the shots having small variations in duration (for science reasons or software timing differences or otherwise).\r\n\r\nAlthough there is still software timing differences after this point, I decided to insert the delay just before transition_to_buffered is called on all devices. This is because transition_to_buffered may cause some devices to start outputting their initial instructions, which may be undesirable.\r\n\r\nhere's what it looks like:\r\n\r\n![blacs_fixed_plugin.png](https://bitbucket.org/repo/9pKE7ad/images/1175914126-blacs_fixed_plugin.png)\r\n\r\nIf the interval is set to zero, it instead displays 'none', and runs shots as they come without trying to impose a fixed interval. If shots take too long such that the interval is not able to be achieved, an error icon is displayed, but BLACS continues to run shots.\r\n\r\nWhilst waiting, the plugin attaches an additional callback to the abort button, so that it will stop waiting if the abort button is clicked.", "title": "Fixed shot interval", "destination": {"commit": {"hash": "5d54c0612c8c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5d54c0612c8c.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/5d54c0612c8c"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0cc464565463", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/0cc464565463"}, "html": {"href": "#!/cbillington/blacs/commits/0cc464565463"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "fixed-shot-interval"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-04-23T17:55:34.331841+00:00"}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"update": {"description": "Added a plugin that allows one to impose a fixed interval between the beginning of\r\nsubsequent shots. This is a feature present in the Spielman fork, and is used to ensure that the experiment that needs to be 'kept warm' can be put in an equilibrium state in which some process runs with a fixed duty cycle despite varying shot durations. For us this is UV desorption or rubidium during MOT loading. To keep a consistent pressure in the MOT cell during this state from one shot to the next, it's important that the UV is on a fixed fraction of the time.\r\n\r\nThis can be achieved by having BLACS wait before running the next shot, leaving a configurable buffer of time so that it can run shots at a fixed interval despite the shots having small variations in duration (for science reasons or software timing differences or otherwise).\r\n\r\nAlthough there is still software timing differences after this point, I decided to insert the delay just before transition_to_buffered is called on all devices. This is because transition_to_buffered may cause some devices to start outputting their initial instructions, which may be undesirable.\r\n\r\nhere's what it looks like:\r\n\r\n![blacs_fixed_plugin.png](https://bitbucket.org/repo/9pKE7ad/images/1175914126-blacs_fixed_plugin.png)\r\n\r\nIf the interval is set to zero, it instead displays 'none', and runs shots as they come without trying to impose a fixed interval. If shots take too long such that the interval is not able to be achieved, an error icon is displayed, but BLACS continues to run shots.\r\n\r\nWhilst waiting, the plugin attaches an additional callback to the abort button, so that it will stop waiting if the abort button is clicked.", "title": "Fixed shot interval", "destination": {"commit": {"hash": "5d54c0612c8c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5d54c0612c8c.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/5d54c0612c8c"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0cc464565463", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/0cc464565463"}, "html": {"href": "#!/cbillington/blacs/commits/0cc464565463"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "fixed-shot-interval"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-04-23T17:54:25.938894+00:00"}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"update": {"description": "Added a plugin that allows one to impose a fixed interval between the beginning of\r\nsubsequent shots. This is a feature present in the Spielman fork, and is used to ensure that the experiment that needs to be 'kept warm' can be put in an equilibrium state in which some process runs with a fixed duty cycle despite varying shot durations. For us this is UV desorption or rubidium during MOT loading. To keep a consistent pressure in the MOT cell during this state from one shot to the next, it's important that the UV is on a fixed fraction of the time.\r\n\r\nThis can be achieved by having BLACS wait before running the next shot, leaving a configurable buffer of time so that it can run shots at a fixed interval despite the shots having small variations in duration (for science reasons or software timing differences or otherwise).\r\n\r\nAlthough there is still software timing differences after this point, I decided to insert the delay just before transition_to_buffered is called on all devices. This is because transition_to_buffered may cause some devices to start outputting their initial instructions, which may be undesirable.\r\n\r\nhere's what it looks like:\r\n\r\n![blacs_fixed_plugin.png](https://bitbucket.org/repo/9pKE7ad/images/1175914126-blacs_fixed_plugin.png)\r\n\r\nIf the interval is set to zero, it instead displays 'none', and runs shots as they come without trying to impose a fixed interval. If shots take too long such that the interval is not able to be achieved, an error icon is displayed, but BLACS continues to run shots.\r\n\r\nWhilst waiting, the plugin attaches an additional callback to the abort button, so that it will stop waiting if the abort button is clicked.", "title": "Fixed shot interval", "destination": {"commit": {"hash": "5d54c0612c8c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5d54c0612c8c.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/5d54c0612c8c"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0cc464565463", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/0cc464565463"}, "html": {"href": "#!/cbillington/blacs/commits/0cc464565463"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "fixed-shot-interval"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-04-23T17:53:52.722751+00:00"}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"update": {"description": "Added a plugin that allows one to impose a fixed interval between the beginning of\r\nsubsequent shots. This is a feature present in the Spielman fork, and is used to ensure that the experiment that needs to be 'kept warm' can be put in an equilibrium state in which some process runs with a fixed duty cycle despite varying shot durations. For us this is UV desorption or rubidium during MOT loading. To keep a consistent pressure in the MOT cell during this state from one shot to the next, it's important that the UV is on a fixed fraction of the time.\r\n\r\nThis can be achieved by having BLACS wait before running the next shot, leaving a configurable buffer of time so that it can run shots at a fixed interval despite the shots having small variations in duration (for science reasons or software timing differences or otherwise).\r\n\r\nAlthough there is still software timing differences after this point, I decided to insert the delay just before transition_to_buffered is called on all devices. This is because transition_to_buffered may cause some devices to start outputting their initial instructions, which may be undesirable.\r\n\r\nhere's what it looks like:\r\n\r\n![blacs_fixed_plugin.png](https://bitbucket.org/repo/9pKE7ad/images/1175914126-blacs_fixed_plugin.png)\r\n\r\nIf the interval is set to zero, it instead displays 'none', and runs shots as they come without trying to impose a fixed interval. If shots take too long such that the interval is not able to be achieved, an error icon is displayed, but BLACS continues to run shots.\r\n\r\nWhilst waiting, the plugin attaches an additional callback to the abort button, so that it will stop waiting if the abort button is clicked.", "title": "Fixed shot interval", "destination": {"commit": {"hash": "5d54c0612c8c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5d54c0612c8c.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/5d54c0612c8c"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0cc464565463", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/0cc464565463"}, "html": {"href": "#!/cbillington/blacs/commits/0cc464565463"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "fixed-shot-interval"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-04-23T17:51:34.454976+00:00"}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"update": {"description": "Added a plugin that allows one to impose a fixed interval between the beginning of\r\nsubsequent shots. This is a feature present in the Spielman fork, and is used to ensure that the experiment that needs to be 'kept warm' can be put in an equilibrium state in which some process runs with a fixed duty cycle despite varying shot durations. For us this is UV desorption or rubidium during MOT loading. To keep a consistent pressure in the MOT cell during this state from one shot to the next, it's important that the UV is on a fixed fraction of the time.\r\n\r\nThis can be achieved by having BLACS wait before running the next shot, leaving a configurable buffer of time so that it can run shots at a fixed interval despite the shots having small variations in duration (for science reasons or software timing differences or otherwise).\r\n\r\nAlthough there is still software timing differences after this point, I decided to insert the delay just before transition_to_buffered is called on all devices. This is because transition_to_buffered may cause some devices to start outputting their initial instructions, which may be undesirable.\r\n\r\nhere's what it looks like:\r\n\r\n![blacs_fixed_plugin.png](https://bitbucket.org/repo/9pKE7ad/images/1175914126-blacs_fixed_plugin.png)\r\n\r\nIf the interval is set to zero, it instead displays 'none', and runs shots as they come without trying to impose a fixed interval. If shots take too long such that the interval is not able to be achieved, an error icon is displayed, but BLACS continues to run shots.\r\n\r\nWhilst waiting, the plugin attaches an additional callback to the abort button, so that it will stop waiting if the abort button is clicked.", "title": "Fixed shot interval", "destination": {"commit": {"hash": "5d54c0612c8c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/5d54c0612c8c.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/5d54c0612c8c"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0cc464565463", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/0cc464565463"}, "html": {"href": "#!/cbillington/blacs/commits/0cc464565463"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "fixed-shot-interval"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-04-23T17:50:48.764577+00:00"}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50/comments/76085968.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50/_/diff#comment-76085968"}}, "parent": {"id": 76081513, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50/comments/76081513.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50/_/diff#comment-76081513"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}, "content": {"raw": "* Sounds good about the arg name - I'll do something like that.\n* We can move things, but no rush. Hard to move things due to backward compatibility, so I wouldn't worry too much. But future things definitely should go there.\n* I'm thinking something like a 'required BLACS plugins' list stored in the shot file, BLACS can reject the shot if it doesn't have the required plugins active.", "markup": "markdown", "html": "<ul>\n<li>Sounds good about the arg name - I'll do something like that.</li>\n<li>We can move things, but no rush. Hard to move things due to backward compatibility, so I wouldn't worry too much. But future things definitely should go there.</li>\n<li>I'm thinking something like a 'required BLACS plugins' list stored in the shot file, BLACS can reject the shot if it doesn't have the required plugins active.</li>\n</ul>", "type": "rendered"}, "created_on": "2018-09-15T00:21:10.730396+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-09-15T00:21:10.739120+00:00", "type": "pullrequest_comment", "id": 76085968}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50/comments/76081513.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50/_/diff#comment-76081513"}}, "parent": {"id": 76037026, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50/comments/76037026.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50/_/diff#comment-76037026"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}, "content": {"raw": "This is going to be a poorly formatted comment because Bitbucket is terrible on my phone but hopefully it makes sense!\n\nI think that maybe the labscript kwarg should be called something like requested\\_cycle\\_time so that your plugin can also save the actual cycle time and it implies by the name that it might not be met.\n\nAre we going to move/duplicate other things into shot\\_properties \\(that exist as root attributes currently\\)?\n\nThis feature only works if the plugin is enabled I'm BLACS, but is always available in labscript. Should we print a warning about that from labscript? Or maybe blacs should report a message to runmanager if there are shot properties not handled by BLACS that should be? Not sure\u2026this is binding labscript and blacs together more than usual!", "markup": "markdown", "html": "<p>This is going to be a poorly formatted comment because Bitbucket is terrible on my phone but hopefully it makes sense!</p>\n<p>I think that maybe the labscript kwarg should be called something like requested_cycle_time so that your plugin can also save the actual cycle time and it implies by the name that it might not be met.</p>\n<p>Are we going to move/duplicate other things into shot_properties (that exist as root attributes currently)?</p>\n<p>This feature only works if the plugin is enabled I'm BLACS, but is always available in labscript. Should we print a warning about that from labscript? Or maybe blacs should report a message to runmanager if there are shot properties not handled by BLACS that should be? Not sure\u2026this is binding labscript and blacs together more than usual!</p>", "type": "rendered"}, "created_on": "2018-09-14T22:01:36.002087+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "updated_on": "2018-09-14T22:01:36.017610+00:00", "type": "pullrequest_comment", "id": 76081513}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50/comments/76080124.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50/_/diff#comment-76080124"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}, "content": {"raw": "Good by me.", "markup": "markdown", "html": "<p>Good by me.</p>", "type": "rendered"}, "created_on": "2018-09-14T21:33:16.010912+00:00", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}, "updated_on": "2018-09-14T21:33:16.017020+00:00", "type": "pullrequest_comment", "id": 76080124}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50/comments/76037026.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50/_/diff#comment-76037026"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}, "content": {"raw": "In the interests of simplicity, I might just make it settable via labscript and not via the BLACS GUI. The appeal of having it set in BLACS is that the code is a fully self-contained BLACS plugin with no interaction between BLACS and labscript, but if it is going to be settable via labscript then there is less reason to have it settable via BLACS too. There is some argument that this flexibility is useful but I think simplicity wins.\n\nCould add an option to hook into the `\"science_starting\"` callback (added in pull request #52) instead to optionally avoid jitter from programming time. \n\nSo in light of those and Phil's other comments I propose:\n\n* Having BLACS just display the number rather than have it settable\n* Renaming this quantity to 'cycle time'\n* Adding a keyword argument `labscript.stop(..., cycle_time=None)`\n* Saving this as an attribute to a new group in the HDF5 file, proposed name `shot_properties`. I imagine future things like this will need a home in the HDF5 file and it makes sense to have a group for them so that BLACS' shot cleaning can copy over a whole group rather than having to know which attributes at the top level are present in a  clean shot file and which are not.\n* I reshuffle the code in the callback so that the timeout is calculated after all the GUI calls, preventing jitter from `inmain()` calls without having to think about the consequences of making them asynchronous.\n* Add another keyword argument `labscript.stop(..., cycle_time=None, cycle_time_delay_after_programming=False)`, which stores another attribute to the `shot_properties` group. The plugin will read this from each shot during the `\"pre_transition_to_buffered\"` callback and use that information to decide whether to do the delay then, or in the `\"science_starting\"` callback instead. I don't think there are any consequences to this that affect how aborts are handled.\n\nAll in favour?", "markup": "markdown", "html": "<p>In the interests of simplicity, I might just make it settable via labscript and not via the BLACS GUI. The appeal of having it set in BLACS is that the code is a fully self-contained BLACS plugin with no interaction between BLACS and labscript, but if it is going to be settable via labscript then there is less reason to have it settable via BLACS too. There is some argument that this flexibility is useful but I think simplicity wins.</p>\n<p>Could add an option to hook into the <code>\"science_starting\"</code> callback (added in <a href=\"#!/labscript_suite/blacs/pull-requests/52/progress-bar\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #52</a>) instead to optionally avoid jitter from programming time. </p>\n<p>So in light of those and Phil's other comments I propose:</p>\n<ul>\n<li>Having BLACS just display the number rather than have it settable</li>\n<li>Renaming this quantity to 'cycle time'</li>\n<li>Adding a keyword argument <code>labscript.stop(..., cycle_time=None)</code></li>\n<li>Saving this as an attribute to a new group in the HDF5 file, proposed name <code>shot_properties</code>. I imagine future things like this will need a home in the HDF5 file and it makes sense to have a group for them so that BLACS' shot cleaning can copy over a whole group rather than having to know which attributes at the top level are present in a  clean shot file and which are not.</li>\n<li>I reshuffle the code in the callback so that the timeout is calculated after all the GUI calls, preventing jitter from <code>inmain()</code> calls without having to think about the consequences of making them asynchronous.</li>\n<li>Add another keyword argument <code>labscript.stop(..., cycle_time=None, cycle_time_delay_after_programming=False)</code>, which stores another attribute to the <code>shot_properties</code> group. The plugin will read this from each shot during the <code>\"pre_transition_to_buffered\"</code> callback and use that information to decide whether to do the delay then, or in the <code>\"science_starting\"</code> callback instead. I don't think there are any consequences to this that affect how aborts are handled.</li>\n</ul>\n<p>All in favour?</p>", "type": "rendered"}, "created_on": "2018-09-14T14:03:55.058198+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-09-14T14:03:55.065468+00:00", "type": "pullrequest_comment", "id": 76037026}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50/comments/75971833.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50/_/diff#comment-75971833"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}, "content": {"raw": "Other comments I have:\n\n* Maybe we should make it configurable as to when the delay is inserted \\(before/after programming\\) so that labs can take advantage of the more precise timing if they don\u2019t have devices which start outputting after programming?\n* There's going to be some additional jitter due to the use of `inmain` instead of `inmain_later`. I suspect this might be able to be minimised by changing to the asynchronous version, which might also mean you want to pass the queue to `_abort` as an argument rather than storing it in `self.queue`. This would probably also require the addition of asynchronous methods to get/set the status of the queue manager. Maybe it\u2019s not worth it, just thought I\u2019d point out the options!\n\nI might have some more comments once the noise is cleared up from the merging of pull request #49", "markup": "markdown", "html": "<p>Other comments I have:</p>\n<ul>\n<li>Maybe we should make it configurable as to when the delay is inserted (before/after programming) so that labs can take advantage of the more precise timing if they don\u2019t have devices which start outputting after programming?</li>\n<li>There's going to be some additional jitter due to the use of <code>inmain</code> instead of <code>inmain_later</code>. I suspect this might be able to be minimised by changing to the asynchronous version, which might also mean you want to pass the queue to <code>_abort</code> as an argument rather than storing it in <code>self.queue</code>. This would probably also require the addition of asynchronous methods to get/set the status of the queue manager. Maybe it\u2019s not worth it, just thought I\u2019d point out the options!</li>\n</ul>\n<p>I might have some more comments once the noise is cleared up from the merging of <a href=\"#!/labscript_suite/blacs/pull-requests/49/plugin-callback-priorities\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #49</a></p>", "type": "rendered"}, "created_on": "2018-09-14T04:53:39.345466+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-09-14T04:53:39.354248+00:00", "type": "pullrequest_comment", "id": 75971833}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50/comments/75971412.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50/_/diff#comment-75971412"}}, "parent": {"id": 75917398, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50/comments/75917398.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50/_/diff#comment-75917398"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}, "content": {"raw": "Do we have a proposed labscript API syntax and HDF5 storage structure for experiment metadata like this? \\(I don\u2019t think we have anything comparable at the moment\\)  \nI guess we could add `cycle_time` as a keyword argument of `stop()` in this case\\(?\\), but perhaps it makes sense to work out something more general for other cases we might want in the future?\n\n@cbillington : Also, just to clarify, \u201cshot interval\u201d is actually the entire \u201ccycle time\u201d not just the programming time right? The name made me think the latter \\(and I wrote a bunch of arguments why it was bad\\) but then looked at the code and I think it does the former instead \\(which is what I was going to argue for\\).", "markup": "markdown", "html": "<p>Do we have a proposed labscript API syntax and HDF5 storage structure for experiment metadata like this? (I don\u2019t think we have anything comparable at the moment)<br />\nI guess we could add <code>cycle_time</code> as a keyword argument of <code>stop()</code> in this case(?), but perhaps it makes sense to work out something more general for other cases we might want in the future?</p>\n<p>@cbillington : Also, just to clarify, \u201cshot interval\u201d is actually the entire \u201ccycle time\u201d not just the programming time right? The name made me think the latter (and I wrote a bunch of arguments why it was bad) but then looked at the code and I think it does the former instead (which is what I was going to argue for).</p>", "type": "rendered"}, "created_on": "2018-09-14T04:41:41.090683+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-09-14T04:41:41.104077+00:00", "type": "pullrequest_comment", "id": 75971412}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50/comments/75920189.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50/_/diff#comment-75920189"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}, "content": {"raw": "Personally, I would say that this should not be defined in the GUI at all \\(but would be displayed\\), or perhaps add a checbox or pulldown that switches between three modes: \\(1\\) Use labscript only; \\(2\\) use labscript if provided, otherwise front panel; \\(3\\) over-ride with front panel always.  \\(2\\) would be the default.", "markup": "markdown", "html": "<p>Personally, I would say that this should not be defined in the GUI at all (but would be displayed), or perhaps add a checbox or pulldown that switches between three modes: (1) Use labscript only; (2) use labscript if provided, otherwise front panel; (3) over-ride with front panel always.  (2) would be the default.</p>", "type": "rendered"}, "created_on": "2018-09-13T15:45:46.779277+00:00", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}, "updated_on": "2018-09-13T15:45:46.786973+00:00", "type": "pullrequest_comment", "id": 75920189}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50/comments/75919736.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50/_/diff#comment-75919736"}}, "parent": {"id": 75917398, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50/comments/75917398.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50/_/diff#comment-75917398"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}, "content": {"raw": "Just wondering how the two might interact. Perhaps, if the shot has defined the interval, that will override what's in the BLACS GUI, which will grey out the box and say 'set by experiment script' or something in a tooltip. Possibly overridable still if you really want. And if subsequent shots don't define the inteval it will revert back to whatever was previously set in the BLACS GUI.", "markup": "markdown", "html": "<p>Just wondering how the two might interact. Perhaps, if the shot has defined the interval, that will override what's in the BLACS GUI, which will grey out the box and say 'set by experiment script' or something in a tooltip. Possibly overridable still if you really want. And if subsequent shots don't define the inteval it will revert back to whatever was previously set in the BLACS GUI.</p>", "type": "rendered"}, "created_on": "2018-09-13T15:42:21.100955+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-09-13T15:42:21.109024+00:00", "type": "pullrequest_comment", "id": 75919736}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50/comments/75917398.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50/_/diff#comment-75917398"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}, "content": {"raw": "Looks great, but for best performance, the shot duration should be definable in the script, not only the blacs front panel. ", "markup": "markdown", "html": "<p>Looks great, but for best performance, the shot duration should be definable in the script, not only the blacs front panel. </p>", "type": "rendered"}, "created_on": "2018-09-13T15:27:04.778364+00:00", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}, "updated_on": "2018-09-13T15:27:04.790317+00:00", "type": "pullrequest_comment", "id": 75917398}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"update": {"description": "Added a plugin that allows one to impose a fixed interval between the beginning of\r\nsubsequent shots. This is a feature present in the Spielman fork, and is used to ensure that the experiment that needs to be 'kept warm' can be put in an equilibrium state in which some process runs with a fixed duty cycle despite varying shot durations. For us this is UV desorption or rubidium during MOT loading. To keep a consistent pressure in the MOT cell during this state from one shot to the next, it's important that the UV is on a fixed fraction of the time.\r\n\r\nThis can be achieved by having BLACS wait before running the next shot, leaving a configurable buffer of time so that it can run shots at a fixed interval despite the shots having small variations in duration (for science reasons or software timing differences or otherwise).\r\n\r\nAlthough there is still software timing differences after this point, I decided to insert the delay just before transition_to_buffered is called on all devices. This is because transition_to_buffered may cause some devices to start outputting their initial instructions, which may be undesirable.\r\n\r\nhere's what it looks like:\r\n\r\n![blacs_fixed_plugin.png](https://bitbucket.org/repo/9pKE7ad/images/1175914126-blacs_fixed_plugin.png)\r\n\r\nIf the interval is set to zero, it instead displays 'none', and runs shots as they come without trying to impose a fixed interval. If shots take too long such that the interval is not able to be achieved, an error icon is displayed, but BLACS continues to run shots.\r\n\r\nWhilst waiting, the plugin attaches an additional callback to the abort button, so that it will stop waiting if the abort button is clicked.", "title": "Fixed shot interval", "destination": {"commit": {"hash": "adee644a72e1", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/adee644a72e1.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/adee644a72e1"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0cc464565463", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/0cc464565463"}, "html": {"href": "#!/cbillington/blacs/commits/0cc464565463"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "fixed-shot-interval"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-09-12T15:35:45.060998+00:00"}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"update": {"description": "Added a plugin that allows one to impose a fixed interval between the beginning of\r\nsubsequent shots. This is a feature present in the Spielman fork, and is used to ensure that the experiment that needs to be 'kept warm' can be put in an equilibrium state in which some process runs with a fixed duty cycle despite varying shot durations. For us this is UV desorption or rubidium during MOT loading. To keep a consistent pressure in the MOT cell during this state from one shot to the next, it's important that the UV is on a fixed fraction of the time.\r\n\r\nThis can be achieved by having BLACS wait before running the next shot, leaving a configurable buffer of time so that it can run shots at a fixed interval despite the shots having small variations in duration (for science reasons or software timing differences or otherwise).\r\n\r\nAlthough there is still software timing differences after this point, I decided to insert the delay just before transition_to_buffered is called on all devices. This is because transition_to_buffered may cause some devices to start outputting their initial instructions, which may be undesirable.\r\n\r\nhere's what it looks like:\r\n\r\n![blacs_fixed_plugin.png](https://bitbucket.org/repo/9pKE7ad/images/1175914126-blacs_fixed_plugin.png)\r\n\r\nIf the interval is set to zero, it instead displays 'none', and runs shots as they come without trying to impose a fixed interval. If shots take too long such that the interval is not able to be achieved, an error icon is displayed, but BLACS continues to run shots.\r\n\r\nWhilst waiting, the plugin attaches an additional callback to the abort button, so that it will stop waiting if the abort button is clicked.", "title": "Fixed shot interval", "destination": {"commit": {"hash": "adee644a72e1", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/adee644a72e1.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/adee644a72e1"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "67900c4607b7", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/67900c4607b7"}, "html": {"href": "#!/cbillington/blacs/commits/67900c4607b7"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "fixed-shot-interval"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-09-11T16:25:52.199219+00:00"}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"update": {"description": "Added a plugin that allows one to impose a fixed interval between the beginning of\r\nsubsequent shots. This is a feature present in the Spielman fork, and is used to ensure that the experiment that needs to be 'kept warm' can be put in an equilibrium state in which some process runs with a fixed duty cycle despite varying shot durations. For us this is UV desorption or rubidium during MOT loading. To keep a consistent pressure in the MOT cell during this state from one shot to the next, it's important that the UV is on a fixed fraction of the time.\r\n\r\nThis can be achieved by having BLACS wait before running the next shot, leaving a configurable buffer of time so that it can run shots at a fixed interval despite the shots having small variations in duration (for science reasons or software timing differences or otherwise).\r\n\r\nAlthough there is still software timing differences after this point, I decided to insert the delay just before transition_to_buffered is called on all devices. This is because transition_to_buffered may cause some devices to start outputting their initial instructions, which may be undesirable.\r\n\r\nhere's what it looks like:\r\n\r\n![blacs_fixed_plugin.png](https://bitbucket.org/repo/9pKE7ad/images/1175914126-blacs_fixed_plugin.png)\r\n\r\nIf the interval is set to zero, it instead displays 'none', and runs shots as they come without trying to impose a fixed interval. If shots take too long such that the interval is not able to be achieved, an error icon is displayed, but BLACS continues to run shots.\r\n\r\nWhilst waiting, the plugin attaches an additional callback to the abort button, so that it will stop waiting if the abort button is clicked.", "title": "Fixed shot interval", "destination": {"commit": {"hash": "adee644a72e1", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/adee644a72e1.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/adee644a72e1"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "edeb7c1b775b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/edeb7c1b775b"}, "html": {"href": "#!/cbillington/blacs/commits/edeb7c1b775b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "fixed-shot-interval"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-09-10T22:28:41.249620+00:00"}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50/comments/75532493.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50/_/diff#comment-75532493"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}, "content": {"raw": "This pull request's diff is presently noisy because it depends on pull request #49. Once that one is merged it will be more obvious what has changed about this one.", "markup": "markdown", "html": "<p>This pull request's diff is presently noisy because it depends on <a href=\"#!/labscript_suite/blacs/pull-requests/49/plugin-callback-priorities\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #49</a>. Once that one is merged it will be more obvious what has changed about this one.</p>", "type": "rendered"}, "created_on": "2018-09-10T22:24:30.730211+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-09-10T22:24:30.737408+00:00", "type": "pullrequest_comment", "id": 75532493}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"update": {"description": "Added a plugin that allows one to impose a fixed interval between the beginning of\r\nsubsequent shots. This is a feature present in the Spielman fork, and is used to ensure that the experiment that needs to be 'kept warm' can be put in an equilibrium state in which some process runs with a fixed duty cycle despite varying shot durations. For us this is UV desorption or rubidium during MOT loading. To keep a consistent pressure in the MOT cell during this state from one shot to the next, it's important that the UV is on a fixed fraction of the time.\r\n\r\nThis can be achieved by having BLACS wait before running the next shot, leaving a configurable buffer of time so that it can run shots at a fixed interval despite the shots having small variations in duration (for science reasons or software timing differences or otherwise).\r\n\r\nAlthough there is still software timing differences after this point, I decided to insert the delay just before transition_to_buffered is called on all devices. This is because transition_to_buffered may cause some devices to start outputting their initial instructions, which may be undesirable.\r\n\r\nhere's what it looks like:\r\n\r\n![blacs_fixed_plugin.png](https://bitbucket.org/repo/9pKE7ad/images/1175914126-blacs_fixed_plugin.png)\r\n\r\nIf the interval is set to zero, it instead displays 'none', and runs shots as they come without trying to impose a fixed interval. If shots take too long such that the interval is not able to be achieved, an error icon is displayed, but BLACS continues to run shots.\r\n\r\nWhilst waiting, the plugin attaches an additional callback to the abort button, so that it will stop waiting if the abort button is clicked.", "title": "Fixed shot interval", "destination": {"commit": {"hash": "adee644a72e1", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/adee644a72e1.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/adee644a72e1"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f9facb450864", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/f9facb450864"}, "html": {"href": "#!/cbillington/blacs/commits/f9facb450864"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "fixed-shot-interval"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-09-10T22:23:12.502450+00:00"}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}, {"update": {"description": "Added a plugin that allows one to impose a fixed interval between the beginning of\r\nsubsequent shots. This is a feature present in the Spielman fork, and is used to ensure that the experiment that needs to be 'kept warm' can be put in an equilibrium state in which some process runs with a fixed duty cycle despite varying shot durations. For us this is UV desorption or rubidium during MOT loading. To keep a consistent pressure in the MOT cell during this state from one shot to the next, it's important that the UV is on a fixed fraction of the time.\r\n\r\nThis can be achieved by having BLACS wait before running the next shot, leaving a configurable buffer of time so that it can run shots at a fixed interval despite the shots having small variations in duration (for science reasons or software timing differences or otherwise).\r\n\r\nAlthough there is still software timing differences after this point, I decided to insert the delay just before transition_to_buffered is called on all devices. This is because transition_to_buffered may cause some devices to start outputting their initial instructions, which may be undesirable.\r\n\r\nhere's what it looks like:\r\n\r\n![blacs_fixed_plugin.png](https://bitbucket.org/repo/9pKE7ad/images/1175914126-blacs_fixed_plugin.png)\r\n\r\nIf the interval is set to zero, it instead displays 'none', and runs shots as they come without trying to impose a fixed interval. If shots take too long such that the interval is not able to be achieved, an error icon is displayed, but BLACS continues to run shots.\r\n\r\nWhilst waiting, the plugin attaches an additional callback to the abort button, so that it will stop waiting if the abort button is clicked.", "title": "Fixed shot interval", "destination": {"commit": {"hash": "adee644a72e1", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/adee644a72e1.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/adee644a72e1"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f9facb450864", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/f9facb450864"}, "html": {"href": "#!/cbillington/blacs/commits/f9facb450864"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "fixed-shot-interval"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-09-10T22:23:12.452242+00:00"}, "pull_request": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/50"}}, "title": "Fixed shot interval"}}]}