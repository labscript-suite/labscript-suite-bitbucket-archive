{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/56/comments/79313211.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/56/_/diff#comment-79313211"}}, "parent": {"id": 79311908, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/56/comments/79311908.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/56/_/diff#comment-79311908"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/56.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/56"}}, "title": "Defer starting the worker process until _initialise_worker"}, "content": {"raw": "So it looks like the Pulseblaster's status monitor timeout is added after its worker is configured, and `program_manual()` is called by `DeviceTab.__init__` only after `initialise_GUI()` is called. \n\nNeither the DAQmx tab or the PulseBlaster use `initialise_workers()`, they put their worker initialisation in `initialise_GUI()`. Even if they did use `initialise_workers()`, it still runs before the first `program_manual()`.\n\nSo that's why there's no issue so far.\n\nMany of our devices don't use `initialise_workers()`, they just put everything in `initialise_GUI()`. Looks like the only difference is that save data is restored after `initialise_GUI()` but before `initialise_workers()`, so if you're using the save data in the initialisation of the worker, but it also needs to be put in the (previously set up) GUI, then you have to do them separately. Maybe I should change the DAQmx class to use `initialise_workers()` as a better example. Making the PulseBlaster use it would only work if the `statemachine_timeout_add` were also moved to `initialise_workers()`.\n\nSo I'm thinking maybe a priority mechanism for the queue, or, maybe just raising an error in the mainloop if some worker job has been queued up before the worker was initialised.", "markup": "markdown", "html": "<p>So it looks like the Pulseblaster's status monitor timeout is added after its worker is configured, and <code>program_manual()</code> is called by <code>DeviceTab.__init__</code> only after <code>initialise_GUI()</code> is called. </p>\n<p>Neither the DAQmx tab or the PulseBlaster use <code>initialise_workers()</code>, they put their worker initialisation in <code>initialise_GUI()</code>. Even if they did use <code>initialise_workers()</code>, it still runs before the first <code>program_manual()</code>.</p>\n<p>So that's why there's no issue so far.</p>\n<p>Many of our devices don't use <code>initialise_workers()</code>, they just put everything in <code>initialise_GUI()</code>. Looks like the only difference is that save data is restored after <code>initialise_GUI()</code> but before <code>initialise_workers()</code>, so if you're using the save data in the initialisation of the worker, but it also needs to be put in the (previously set up) GUI, then you have to do them separately. Maybe I should change the DAQmx class to use <code>initialise_workers()</code> as a better example. Making the PulseBlaster use it would only work if the <code>statemachine_timeout_add</code> were also moved to <code>initialise_workers()</code>.</p>\n<p>So I'm thinking maybe a priority mechanism for the queue, or, maybe just raising an error in the mainloop if some worker job has been queued up before the worker was initialised.</p>", "type": "rendered"}, "created_on": "2018-10-17T00:53:22.672653+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-10-17T00:53:22.683164+00:00", "type": "pullrequest_comment", "id": 79313211}