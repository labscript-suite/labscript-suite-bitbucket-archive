{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/67/comments/100238599.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/67/_/diff#comment-100238599"}}, "parent": {"id": 100238439, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/67/comments/100238439.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/67/_/diff#comment-100238439"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 67, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/67.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/67"}}, "title": "Implement remote workers in BLACS"}, "content": {"raw": "Just to expand on this: strictly speaking, the server has one security key you need in order to talk to it, but in principle the processes it launches may use a different security key to talk to their parent - they will use whatever the parent tells them to use \\(that secret being communicated securely from the parent to the server, then passed to the child at startup\\). So the key being passed into the child processes is not necessarily even on that computer as a file \\(even though for labscript it will be\\). So if we passed it in by file, we would need to create a tempfile to do so. So environment variables make sense. `Popen()`  accepts an argument for environment variables - will have to modify this a little bit to be a copy of the _target_ environment plus the extra arg\\(s\\) \\(since the parent process might on a totally different OS where the environment variables don\u2019t make sense in the context of the other computer\\), but otherwise is straightforward.\n\n\u200c", "markup": "markdown", "html": "<p>Just to expand on this: strictly speaking, the server has one security key you need in order to talk to it, but in principle the processes it launches may use a different security key to talk to their parent - they will use whatever the parent tells them to use (that secret being communicated securely from the parent to the server, then passed to the child at startup). So the key being passed into the child processes is not necessarily even on that computer as a file (even though for labscript it will be). So if we passed it in by file, we would need to create a tempfile to do so. So environment variables make sense. <code>Popen()</code>  accepts an argument for environment variables - will have to modify this a little bit to be a copy of the <em>target</em> environment plus the extra arg(s) (since the parent process might on a totally different OS where the environment variables don\u2019t make sense in the context of the other computer), but otherwise is straightforward.</p>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2019-04-29T01:37:51.277296+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-04-29T01:47:12.580663+00:00", "type": "pullrequest_comment", "id": 100238599}