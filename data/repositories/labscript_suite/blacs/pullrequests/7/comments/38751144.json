{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38751144.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38751144"}}, "parent": {"id": 38707272, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38707272.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38707272"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "The qtutils resource paths are only relevant for Qt designer. If you open the .ui files in Qt designer, you will see an error to the effect of \"can't find resource file, please tell me where it is\". So basically anyone who wants to edit a .ui file using Qt designer will have to set this path to the location of their installation of qtutils.\n\nThe application code however only has to `import qtutils.icons` in order to install the resource, so BLACS will display the icons fine even if the path is incorrect.\n\nI thought about this when I first started bundling icons with `qtutils`, and it seems that whilst relative paths are accepted, that would require a copy or link to the resource file to live in every project directory. So this is the situation we have for the moment!\n\nAs for text, how about I make it that we keep icons, but the text turns red whenever an error message is displayed (including \"not responding for x seconds\" messages)? That way, you might have an hourglass icon indicating \"tab is waiting on the worker process\", and red text indicating \"tab is taking a while\". And the text will stay red if there is an actual error, as well as the icon indicating the type of error - it's a yellow exclamation icon for non-fatal error and a red exclamation for fatal error (contrary to the screenshot which shows yellow for a fatal error). It's a lot of information density about different things packed into the tab, and I think it probably will be pretty compatible with skimming and quickly noticing what's happening. Red text would mean \"something is up\", and then looking at the icon would immediately tell you if the something is \"non fatal error\", \"fatal error\" or \"it's just being slow\".\n\nOK so I've added a commit to make the text red again whenever a message is being displayed. My capacity to test the tab icons and text is a little limited, so while I have tested each behaviour in isolation, more realistic testing would be appreciated.", "markup": "markdown", "html": "<p>The qtutils resource paths are only relevant for Qt designer. If you open the .ui files in Qt designer, you will see an error to the effect of \"can't find resource file, please tell me where it is\". So basically anyone who wants to edit a .ui file using Qt designer will have to set this path to the location of their installation of qtutils.</p>\n<p>The application code however only has to <code>import qtutils.icons</code> in order to install the resource, so BLACS will display the icons fine even if the path is incorrect.</p>\n<p>I thought about this when I first started bundling icons with <code>qtutils</code>, and it seems that whilst relative paths are accepted, that would require a copy or link to the resource file to live in every project directory. So this is the situation we have for the moment!</p>\n<p>As for text, how about I make it that we keep icons, but the text turns red whenever an error message is displayed (including \"not responding for x seconds\" messages)? That way, you might have an hourglass icon indicating \"tab is waiting on the worker process\", and red text indicating \"tab is taking a while\". And the text will stay red if there is an actual error, as well as the icon indicating the type of error - it's a yellow exclamation icon for non-fatal error and a red exclamation for fatal error (contrary to the screenshot which shows yellow for a fatal error). It's a lot of information density about different things packed into the tab, and I think it probably will be pretty compatible with skimming and quickly noticing what's happening. Red text would mean \"something is up\", and then looking at the icon would immediately tell you if the something is \"non fatal error\", \"fatal error\" or \"it's just being slow\".</p>\n<p>OK so I've added a commit to make the text red again whenever a message is being displayed. My capacity to test the tab icons and text is a little limited, so while I have tested each behaviour in isolation, more realistic testing would be appreciated.</p>", "type": "rendered"}, "created_on": "2017-06-13T18:04:05.049941+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-13T23:39:15.672755+00:00", "type": "pullrequest_comment", "id": 38751144}