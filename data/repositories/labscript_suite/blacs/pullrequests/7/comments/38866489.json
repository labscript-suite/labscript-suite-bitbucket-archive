{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38866489.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38866489"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Thoughts:\n\n* In analysis_submission.py: There seems to be a finite set of values for the 'server_online` property. Since we use that property as a dictionary index now, perhaps we should be doing checking the value that is set (or not use a string anymore?) to avoid raising an exception in a random part of the code (aka I think the exception would currently be raised when trying to set the icon, which doesn't help you diagnose where the issue is).\n\n* In tab_base_classes.py: Is there a reason you've added calls to `self._update_error()` everywhere? I mean I think it sort of makes sense, but if it's needed now, how did it work properly before? I'm concerned that maybe the change could result in something hiding the error message when it shouldn't be hidden, but perhaps there is not a path to that\n\n* I believe there was a reason for having the restart and smart programming buttons on a separate line in the layout. I suspect it was to do with minimum widths of the tab. Either they enforced a minimum width (which would be poor programming) or they were there so that if the tab was narrow, you could still see long device names/connections as well as the buttons. Maybe it should be replaced with our custom toolpallete or similar so that it resizes nicely? I'm suspecting the current code though either doesn't let things shrink very far, or wraps poorly.", "markup": "markdown", "html": "<p>Thoughts:</p>\n<ul>\n<li>\n<p>In analysis_submission.py: There seems to be a finite set of values for the 'server_online` property. Since we use that property as a dictionary index now, perhaps we should be doing checking the value that is set (or not use a string anymore?) to avoid raising an exception in a random part of the code (aka I think the exception would currently be raised when trying to set the icon, which doesn't help you diagnose where the issue is).</p>\n</li>\n<li>\n<p>In tab_base_classes.py: Is there a reason you've added calls to <code>self._update_error()</code> everywhere? I mean I think it sort of makes sense, but if it's needed now, how did it work properly before? I'm concerned that maybe the change could result in something hiding the error message when it shouldn't be hidden, but perhaps there is not a path to that</p>\n</li>\n<li>\n<p>I believe there was a reason for having the restart and smart programming buttons on a separate line in the layout. I suspect it was to do with minimum widths of the tab. Either they enforced a minimum width (which would be poor programming) or they were there so that if the tab was narrow, you could still see long device names/connections as well as the buttons. Maybe it should be replaced with our custom toolpallete or similar so that it resizes nicely? I'm suspecting the current code though either doesn't let things shrink very far, or wraps poorly.</p>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2017-06-15T01:30:19.697942+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-06-15T01:30:19.700562+00:00", "type": "pullrequest_comment", "id": 38866489}