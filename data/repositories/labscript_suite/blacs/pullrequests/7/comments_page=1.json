{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38707272.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38707272"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "I think this is all OK.\n\nI notice there are some hard-coded paths to qtutils resources in the .ui files that have changed from a windows path to a linux path. Is this actually a problem? Was something broken on linux that will now be broken on windows? I guess it would probably show up in Shaun's testing, but thought I'd flag it.\n\nAlso, I'll reserve judgement for now, but I might argue for the red text to come back in the tab as it does make the broken tab more obvious (and I believe we did sometimes have difficulty immediately seeing which tab was broken when we had icons in GTK BLACS).\n", "markup": "markdown", "html": "<p>I think this is all OK.</p>\n<p>I notice there are some hard-coded paths to qtutils resources in the .ui files that have changed from a windows path to a linux path. Is this actually a problem? Was something broken on linux that will now be broken on windows? I guess it would probably show up in Shaun's testing, but thought I'd flag it.</p>\n<p>Also, I'll reserve judgement for now, but I might argue for the red text to come back in the tab as it does make the broken tab more obvious (and I believe we did sometimes have difficulty immediately seeing which tab was broken when we had icons in GTK BLACS).</p>", "type": "rendered"}, "created_on": "2017-06-13T10:02:33.507135+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-06-13T10:02:33.510342+00:00", "type": "pullrequest_comment", "id": 38707272}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38751144.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38751144"}}, "parent": {"id": 38707272, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38707272.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38707272"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "The qtutils resource paths are only relevant for Qt designer. If you open the .ui files in Qt designer, you will see an error to the effect of \"can't find resource file, please tell me where it is\". So basically anyone who wants to edit a .ui file using Qt designer will have to set this path to the location of their installation of qtutils.\n\nThe application code however only has to `import qtutils.icons` in order to install the resource, so BLACS will display the icons fine even if the path is incorrect.\n\nI thought about this when I first started bundling icons with `qtutils`, and it seems that whilst relative paths are accepted, that would require a copy or link to the resource file to live in every project directory. So this is the situation we have for the moment!\n\nAs for text, how about I make it that we keep icons, but the text turns red whenever an error message is displayed (including \"not responding for x seconds\" messages)? That way, you might have an hourglass icon indicating \"tab is waiting on the worker process\", and red text indicating \"tab is taking a while\". And the text will stay red if there is an actual error, as well as the icon indicating the type of error - it's a yellow exclamation icon for non-fatal error and a red exclamation for fatal error (contrary to the screenshot which shows yellow for a fatal error). It's a lot of information density about different things packed into the tab, and I think it probably will be pretty compatible with skimming and quickly noticing what's happening. Red text would mean \"something is up\", and then looking at the icon would immediately tell you if the something is \"non fatal error\", \"fatal error\" or \"it's just being slow\".\n\nOK so I've added a commit to make the text red again whenever a message is being displayed. My capacity to test the tab icons and text is a little limited, so while I have tested each behaviour in isolation, more realistic testing would be appreciated.", "markup": "markdown", "html": "<p>The qtutils resource paths are only relevant for Qt designer. If you open the .ui files in Qt designer, you will see an error to the effect of \"can't find resource file, please tell me where it is\". So basically anyone who wants to edit a .ui file using Qt designer will have to set this path to the location of their installation of qtutils.</p>\n<p>The application code however only has to <code>import qtutils.icons</code> in order to install the resource, so BLACS will display the icons fine even if the path is incorrect.</p>\n<p>I thought about this when I first started bundling icons with <code>qtutils</code>, and it seems that whilst relative paths are accepted, that would require a copy or link to the resource file to live in every project directory. So this is the situation we have for the moment!</p>\n<p>As for text, how about I make it that we keep icons, but the text turns red whenever an error message is displayed (including \"not responding for x seconds\" messages)? That way, you might have an hourglass icon indicating \"tab is waiting on the worker process\", and red text indicating \"tab is taking a while\". And the text will stay red if there is an actual error, as well as the icon indicating the type of error - it's a yellow exclamation icon for non-fatal error and a red exclamation for fatal error (contrary to the screenshot which shows yellow for a fatal error). It's a lot of information density about different things packed into the tab, and I think it probably will be pretty compatible with skimming and quickly noticing what's happening. Red text would mean \"something is up\", and then looking at the icon would immediately tell you if the something is \"non fatal error\", \"fatal error\" or \"it's just being slow\".</p>\n<p>OK so I've added a commit to make the text red again whenever a message is being displayed. My capacity to test the tab icons and text is a little limited, so while I have tested each behaviour in isolation, more realistic testing would be appreciated.</p>", "type": "rendered"}, "created_on": "2017-06-13T18:04:05.049941+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-13T23:39:15.672755+00:00", "type": "pullrequest_comment", "id": 38751144}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38723551.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38723551"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Can I add to this that a number of the file menu actions are not connected and none have icons (not that they need to, but the runmanager has them and I like how they look personally).\n\nActions that aren't connected are 'actionAdd_to_queue', 'actionExit', and maybe all of the memory profiler menu items, though I might just not be using them correctly.\n\nIt's much less important but runviewer has similar issues.", "markup": "markdown", "html": "<p>Can I add to this that a number of the file menu actions are not connected and none have icons (not that they need to, but the runmanager has them and I like how they look personally).</p>\n<p>Actions that aren't connected are 'actionAdd_to_queue', 'actionExit', and maybe all of the memory profiler menu items, though I might just not be using them correctly.</p>\n<p>It's much less important but runviewer has similar issues.</p>", "type": "rendered"}, "created_on": "2017-06-13T13:09:34.706483+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2017-06-13T13:09:34.772613+00:00", "type": "pullrequest_comment", "id": 38723551}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38769595.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38769595"}}, "parent": {"id": 38723551, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38723551.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38723551"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Ah, I forgot about them. I'll add some icons. As for the disconnected actions, I'll file a bug report for the moment as it's a separate issue.", "markup": "markdown", "html": "<p>Ah, I forgot about them. I'll add some icons. As for the disconnected actions, I'll file a bug report for the moment as it's a separate issue.</p>", "type": "rendered"}, "created_on": "2017-06-13T23:36:41.752999+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-13T23:36:41.756095+00:00", "type": "pullrequest_comment", "id": 38769595}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38776563.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38776563"}}, "parent": {"id": 38723551, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38723551.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38723551"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "@dihm In the meantime, you can add shots to the queue manually by dragging and dropping them onto the filelist :)\n\nAs for the memory profiler, I believe it works, it just dumps the output to a text file in the BLACS directory I think. To operate:\n* Click \"reset profiler\".\n* Do whatever it is you think might leak memory\n* Click \"garbage collect\"\n* Click \"Diff memory usage\"\n\nYou should then get a text file output containing a list of objects that have either been created or deleted since the profiler was started that were not garbage collected.", "markup": "markdown", "html": "<p>@dihm In the meantime, you can add shots to the queue manually by dragging and dropping them onto the filelist :)</p>\n<p>As for the memory profiler, I believe it works, it just dumps the output to a text file in the BLACS directory I think. To operate:\n<em> Click \"reset profiler\".\n</em> Do whatever it is you think might leak memory\n<em> Click \"garbage collect\"\n</em> Click \"Diff memory usage\"</p>\n<p>You should then get a text file output containing a list of objects that have either been created or deleted since the profiler was started that were not garbage collected.</p>", "type": "rendered"}, "created_on": "2017-06-14T03:50:57.263954+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-06-14T03:50:57.274562+00:00", "type": "pullrequest_comment", "id": 38776563}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38771566.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38771566"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "OK, I'm running this (along with the labscript_utils \"Icons and smaller buttons for toolpalette widget\" pull request 8). The first issue I've noticed is that Pulseblaster tabs are constantly jiggling. They poll the device quite frequently, and when they do so, the icon that is added to the tab heading pushes the heading off to the side, expanding the size of the tab, pushing others to its right further across, and also increases the total height of the tab.\n\nI would suggest one of 2 solutions: 1) Add some padding to all tabs where the icon goes if it is not currently displaying an icon\nor 2) Add a green tick/other \"everything is ok\" icon, like we used to in gtk ([see Fig 5 in the paper](http://aip.scitation.org/na101/home/literatum/publisher/aip/journals/content/rsi/2013/rsi.2013.84.issue-8/1.4817213/production/images/large/1.4817213.figures.f5.jpeg))", "markup": "markdown", "html": "<p>OK, I'm running this (along with the labscript_utils \"Icons and smaller buttons for toolpalette widget\" pull request 8). The first issue I've noticed is that Pulseblaster tabs are constantly jiggling. They poll the device quite frequently, and when they do so, the icon that is added to the tab heading pushes the heading off to the side, expanding the size of the tab, pushing others to its right further across, and also increases the total height of the tab.</p>\n<p>I would suggest one of 2 solutions: 1) Add some padding to all tabs where the icon goes if it is not currently displaying an icon\nor 2) Add a green tick/other \"everything is ok\" icon, like we used to in gtk (<a data-is-external-link=\"true\" href=\"http://aip.scitation.org/na101/home/literatum/publisher/aip/journals/content/rsi/2013/rsi.2013.84.issue-8/1.4817213/production/images/large/1.4817213.figures.f5.jpeg\" rel=\"nofollow\">see Fig 5 in the paper</a>)</p>", "type": "rendered"}, "created_on": "2017-06-14T00:41:05.286041+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-14T00:41:05.288230+00:00", "type": "pullrequest_comment", "id": 38771566}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38778523.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38778523"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Ah, how annoying. I've gone for the \"green tick\" option.\n\nI've also added icons to the menu items.\n\nI was going to move the delete button to be more like the delete button in lyse - close to the listview and with no text, just an icon - but now that the other pull request has touched the `main.ui` file, it's a little trickier to stop the pull requests from stepping on each other's toes, so I'm going to leave it for now.", "markup": "markdown", "html": "<p>Ah, how annoying. I've gone for the \"green tick\" option.</p>\n<p>I've also added icons to the menu items.</p>\n<p>I was going to move the delete button to be more like the delete button in lyse - close to the listview and with no text, just an icon - but now that the other pull request has touched the <code>main.ui</code> file, it's a little trickier to stop the pull requests from stepping on each other's toes, so I'm going to leave it for now.</p>", "type": "rendered"}, "created_on": "2017-06-14T05:01:18.225382+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-14T05:07:09.496754+00:00", "type": "pullrequest_comment", "id": 38778523}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38780658.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38780658"}}, "parent": {"id": 38778523, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38778523.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38778523"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "That's much better! As for the movement of the delete button, I can see that working, especially if you add a \"+\" button to add shots too, like in lyse, but let's leave that for a separate pull request, as it's a separate change to the UI anyway.", "markup": "markdown", "html": "<p>That's much better! As for the movement of the delete button, I can see that working, especially if you add a \"+\" button to add shots too, like in lyse, but let's leave that for a separate pull request, as it's a separate change to the UI anyway.</p>", "type": "rendered"}, "created_on": "2017-06-14T06:04:05.231773+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-14T06:04:05.234844+00:00", "type": "pullrequest_comment", "id": 38780658}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38844550.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38844550"}}, "parent": {"id": 38780658, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38780658.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38780658"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Yep, that's what I was thinking, but sure, will do with a separate pull request.", "markup": "markdown", "html": "<p>Yep, that's what I was thinking, but sure, will do with a separate pull request.</p>", "type": "rendered"}, "created_on": "2017-06-14T17:53:24.033206+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-14T17:53:24.036600+00:00", "type": "pullrequest_comment", "id": 38844550}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38781343.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38781343"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "One last thing I've noticed that is worth improving before I merge this pull request, the button to apply changes in the \"tab_value_changed\" interface is not obvious without a border (see picture below).\nIt is a full-width button the same colour as the background. Can you make it a regular sized button and put an icon on it (perhaps \"arrow-curve\" or \"arrow-continue\"?). Perhaps we could add something to the default css to give it a different background colour too, but then there are plenty of other buttons now where the icon is the indication that the text is a button.\n\nOnce this is done, there are no obvious detrimental side-effects of the change and I'm happy to merge.\n\n![values_changed.PNG](data/bitbucket.org/repo/dR5qxr/images/3626669778-values_changed.PNG) \n\n", "markup": "markdown", "html": "<p>One last thing I've noticed that is worth improving before I merge this pull request, the button to apply changes in the \"tab_value_changed\" interface is not obvious without a border (see picture below).\nIt is a full-width button the same colour as the background. Can you make it a regular sized button and put an icon on it (perhaps \"arrow-curve\" or \"arrow-continue\"?). Perhaps we could add something to the default css to give it a different background colour too, but then there are plenty of other buttons now where the icon is the indication that the text is a button.</p>\n<p>Once this is done, there are no obvious detrimental side-effects of the change and I'm happy to merge.</p>\n<p><img alt=\"values_changed.PNG\" src=\"data/bitbucket.org/repo/dR5qxr/images/3626669778-values_changed.PNG\" /> </p>", "type": "rendered"}, "created_on": "2017-06-14T06:18:58.788916+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-14T06:18:58.791112+00:00", "type": "pullrequest_comment", "id": 38781343}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38781632.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38781632"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Thanks for testing! Looks like I missed that button, I'll get it tomorrow.", "markup": "markdown", "html": "<p>Thanks for testing! Looks like I missed that button, I'll get it tomorrow.</p>", "type": "rendered"}, "created_on": "2017-06-14T06:24:40.068154+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-14T06:24:40.071755+00:00", "type": "pullrequest_comment", "id": 38781632}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38784260.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38784260"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "I just found another case that you might want to look into tomorrow. When there is an error in the worker, the text in the tab heading goes red, but the green tick remains. I assume that this is supposed to be a yellow exclamation based on what you said above?\n\n![worker_error.PNG](data/bitbucket.org/repo/dR5qxr/images/1344058073-worker_error.PNG)\n", "markup": "markdown", "html": "<p>I just found another case that you might want to look into tomorrow. When there is an error in the worker, the text in the tab heading goes red, but the green tick remains. I assume that this is supposed to be a yellow exclamation based on what you said above?</p>\n<p><img alt=\"worker_error.PNG\" src=\"data/bitbucket.org/repo/dR5qxr/images/1344058073-worker_error.PNG\" /></p>", "type": "rendered"}, "created_on": "2017-06-14T07:05:09.580671+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-14T07:05:26.152381+00:00", "type": "pullrequest_comment", "id": 38784260}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38784526.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38784526"}}, "parent": {"id": 38784260, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38784260.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38784260"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Ah yes, that's not right. Will fix!", "markup": "markdown", "html": "<p>Ah yes, that's not right. Will fix!</p>", "type": "rendered"}, "created_on": "2017-06-14T07:08:37.373554+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-14T07:08:37.376957+00:00", "type": "pullrequest_comment", "id": 38784526}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38845505.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38845505"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "OK! The tab icon business should be fixed, and the apply button in the \"remote values changed\" GUI should be fixed too, but I haven't tested this one.", "markup": "markdown", "html": "<p>OK! The tab icon business should be fixed, and the apply button in the \"remote values changed\" GUI should be fixed too, but I haven't tested this one.</p>", "type": "rendered"}, "created_on": "2017-06-14T18:07:32.837691+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-14T18:07:32.841236+00:00", "type": "pullrequest_comment", "id": 38845505}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38864262.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38864262"}}, "parent": {"id": 38845505, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38845505.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38845505"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "There is an issue with the \"Apply\" buttons. It is putting one after each value that is changed, whereas previously there was only one at the bottom of the page. None of the buttons except the bottom one are doing anything.\n\nI believe that there should only be the one button at the bottom, as you are supposed to select what you want to do with each channel first, then push all of the changes in one go to avoid over-writing settings on other channels in the reprogramming process.\n\nAlso, I think that it might look better to have the button left-aligned at the bottom now?", "markup": "markdown", "html": "<p>There is an issue with the \"Apply\" buttons. It is putting one after each value that is changed, whereas previously there was only one at the bottom of the page. None of the buttons except the bottom one are doing anything.</p>\n<p>I believe that there should only be the one button at the bottom, as you are supposed to select what you want to do with each channel first, then push all of the changes in one go to avoid over-writing settings on other channels in the reprogramming process.</p>\n<p>Also, I think that it might look better to have the button left-aligned at the bottom now?</p>", "type": "rendered"}, "created_on": "2017-06-15T00:12:49.317692+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-15T00:12:49.320428+00:00", "type": "pullrequest_comment", "id": 38864262}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38864342.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38864342"}}, "parent": {"id": 38864262, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38864262.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38864262"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Thanks! I know what I did wrong - I misunderstood something. I'll fix it and left-align. Right align would be more standard I think but I suppose tabs might be scrolled off to the side so on the left it's more likely to be visible.", "markup": "markdown", "html": "<p>Thanks! I know what I did wrong - I misunderstood something. I'll fix it and left-align. Right align would be more standard I think but I suppose tabs might be scrolled off to the side so on the left it's more likely to be visible.</p>", "type": "rendered"}, "created_on": "2017-06-15T00:15:34.952118+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-15T00:15:34.954907+00:00", "type": "pullrequest_comment", "id": 38864342}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38864457.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38864457"}}, "parent": {"id": 38864342, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38864342.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38864342"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Yeah, that was my thought about right alignment. It just looks a bit weird\nfloating in the middle now.\n", "markup": "markdown", "html": "<p>Yeah, that was my thought about right alignment. It just looks a bit weird\nfloating in the middle now.</p>", "type": "rendered"}, "created_on": "2017-06-15T00:20:06.617737+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-15T00:20:06.640485+00:00", "type": "pullrequest_comment", "id": 38864457}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38864809.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38864809"}}, "parent": {"id": 38864262, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38864262.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38864262"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Ok, this should be fixed now!", "markup": "markdown", "html": "<p>Ok, this should be fixed now!</p>", "type": "rendered"}, "created_on": "2017-06-15T00:32:23.250386+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-15T00:32:23.253565+00:00", "type": "pullrequest_comment", "id": 38864809}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38864006.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38864006"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Although seemingly unrelated to the tab-dragging issue Shaun is talking about in pull request #8, I found a NameError in the tab icon updating code, which was being hidden by an exception catching block. I've fixed the NameError and refactored the `update_tab_icon_and_colour()` function to not use broad exception-catching for its control flow.", "markup": "markdown", "html": "<p>Although seemingly unrelated to the tab-dragging issue Shaun is talking about in <a href=\"#!/labscript_suite/blacs/pull-requests/8/repeat-last-functionality\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #8</a>, I found a NameError in the tab icon updating code, which was being hidden by an exception catching block. I've fixed the NameError and refactored the <code>update_tab_icon_and_colour()</code> function to not use broad exception-catching for its control flow.</p>", "type": "rendered"}, "created_on": "2017-06-15T00:04:03.624376+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-15T00:04:03.626360+00:00", "type": "pullrequest_comment", "id": 38864006}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38864940.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38864940"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "OK, are we good to merge this pull request now?", "markup": "markdown", "html": "<p>OK, are we good to merge this pull request now?</p>", "type": "rendered"}, "created_on": "2017-06-15T00:37:23.682277+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-15T00:37:23.685523+00:00", "type": "pullrequest_comment", "id": 38864940}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38865009.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38865009"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Fine by me! Thanks again for the testing.", "markup": "markdown", "html": "<p>Fine by me! Thanks again for the testing.</p>", "type": "rendered"}, "created_on": "2017-06-15T00:39:57.970115+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-15T00:39:57.972125+00:00", "type": "pullrequest_comment", "id": 38865009}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38865271.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38865271"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "If this catches you in time, can I review the code again before merging? It's changed a bit since I last looked at it I think", "markup": "markdown", "html": "<p>If this catches you in time, can I review the code again before merging? It's changed a bit since I last looked at it I think</p>", "type": "rendered"}, "created_on": "2017-06-15T00:49:29.828812+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-06-15T00:49:29.831157+00:00", "type": "pullrequest_comment", "id": 38865271}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38865407.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38865407"}}, "parent": {"id": 38865271, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38865271.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38865271"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Sure, I'll leave it up to you to merge this, along with the labsript_utils one too. May as well leave it running in the lab for a bit longer in case there are any other subtle issues that we haven't come across yet.", "markup": "markdown", "html": "<p>Sure, I'll leave it up to you to merge this, along with the labsript_utils one too. May as well leave it running in the lab for a bit longer in case there are any other subtle issues that we haven't come across yet.</p>", "type": "rendered"}, "created_on": "2017-06-15T00:54:37.385182+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-15T00:54:37.387712+00:00", "type": "pullrequest_comment", "id": 38865407}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38865450.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38865450"}}, "parent": {"id": 38865271, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38865271.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38865271"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Sounds good to me too.", "markup": "markdown", "html": "<p>Sounds good to me too.</p>", "type": "rendered"}, "created_on": "2017-06-15T00:56:17.973033+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-15T00:56:17.976376+00:00", "type": "pullrequest_comment", "id": 38865450}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38866489.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38866489"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Thoughts:\n\n* In analysis_submission.py: There seems to be a finite set of values for the 'server_online` property. Since we use that property as a dictionary index now, perhaps we should be doing checking the value that is set (or not use a string anymore?) to avoid raising an exception in a random part of the code (aka I think the exception would currently be raised when trying to set the icon, which doesn't help you diagnose where the issue is).\n\n* In tab_base_classes.py: Is there a reason you've added calls to `self._update_error()` everywhere? I mean I think it sort of makes sense, but if it's needed now, how did it work properly before? I'm concerned that maybe the change could result in something hiding the error message when it shouldn't be hidden, but perhaps there is not a path to that\n\n* I believe there was a reason for having the restart and smart programming buttons on a separate line in the layout. I suspect it was to do with minimum widths of the tab. Either they enforced a minimum width (which would be poor programming) or they were there so that if the tab was narrow, you could still see long device names/connections as well as the buttons. Maybe it should be replaced with our custom toolpallete or similar so that it resizes nicely? I'm suspecting the current code though either doesn't let things shrink very far, or wraps poorly.", "markup": "markdown", "html": "<p>Thoughts:</p>\n<ul>\n<li>\n<p>In analysis_submission.py: There seems to be a finite set of values for the 'server_online` property. Since we use that property as a dictionary index now, perhaps we should be doing checking the value that is set (or not use a string anymore?) to avoid raising an exception in a random part of the code (aka I think the exception would currently be raised when trying to set the icon, which doesn't help you diagnose where the issue is).</p>\n</li>\n<li>\n<p>In tab_base_classes.py: Is there a reason you've added calls to <code>self._update_error()</code> everywhere? I mean I think it sort of makes sense, but if it's needed now, how did it work properly before? I'm concerned that maybe the change could result in something hiding the error message when it shouldn't be hidden, but perhaps there is not a path to that</p>\n</li>\n<li>\n<p>I believe there was a reason for having the restart and smart programming buttons on a separate line in the layout. I suspect it was to do with minimum widths of the tab. Either they enforced a minimum width (which would be poor programming) or they were there so that if the tab was narrow, you could still see long device names/connections as well as the buttons. Maybe it should be replaced with our custom toolpallete or similar so that it resizes nicely? I'm suspecting the current code though either doesn't let things shrink very far, or wraps poorly.</p>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2017-06-15T01:30:19.697942+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-06-15T01:30:19.700562+00:00", "type": "pullrequest_comment", "id": 38866489}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38866846.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38866846"}}, "parent": {"id": 38866489, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38866489.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38866489"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Can confirm that the width of each tab section is now limited by the tab in it with the widest smart programming button + name + restart device combination.", "markup": "markdown", "html": "<p>Can confirm that the width of each tab section is now limited by the tab in it with the widest smart programming button + name + restart device combination.</p>", "type": "rendered"}, "created_on": "2017-06-15T01:42:00.105589+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-15T01:42:00.108256+00:00", "type": "pullrequest_comment", "id": 38866846}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38873114.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38873114"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "With the analysis submission, I've changed it to not crash if it encounters an invalid 'server online' status, but I think in general improvements to there is a separate matter, we shouldn't be swapping strings for enums or anything along with GUI changes, but I've at least made the added GUI code more robust than perhaps the existing code is.\n\nI did add a \"clear\" button which deletes the pending shots - the functionality was already there and I just connected a button to it, but I noticed during testing that it doesn't work very well. The main loop there retries sending every shot before getting a \"clear\" signal, so the clearing doesn't happen immediately, only 2 seconds * number of shots later (I think), which is pretty ridiculous. Rather than modify things further I figured I'd file a bug report about making things work more smoothly here.\n\nWith the extra calls to `self._update_error()`, you're right, most were unnecessary. One was necessary because when a tab transitions to some non-idle state but there is no error message yet, I still want to change the icon to the hourglass icon, which `_update_error` is doing the logic for. So I suppose `_update_error` is poorly named now - so I've renamed it to `_update_error_and_tab_icon()`.\n\nI've also renamed `update_tab_icon_and_colour()` to `set_tab_icon_and_colour()` to help differentiate it from `_update_error_and_tab_icon()`, since it's more about setting the things that have already been figured out than figuring out what they should be.\n\nThe additional lines:\n\n\n```\n#!python\n\nself._tab_text_colour = 'black'\nself.set_tab_icon_and_colour()\n```\n\nin `hide_error()` are because without them, the tab text would stay red once you hide the \"not responding for x seconds\" message. But, I can't put a call to `update_tab_icon_and_colour()` there because that actually immediately *shows* the error again. \n\nAs for the device name and connection now making tabs take up more horizontal space, how about this instead?\n\n![blacs_title.png](data/bitbucket.org/repo/dR5qxr/images/3412042888-blacs_title.png)\n\nSo the name and connection are in their own row again, but on a single line of text.\n\nI've pushed these changes to this pull request.", "markup": "markdown", "html": "<p>With the analysis submission, I've changed it to not crash if it encounters an invalid 'server online' status, but I think in general improvements to there is a separate matter, we shouldn't be swapping strings for enums or anything along with GUI changes, but I've at least made the added GUI code more robust than perhaps the existing code is.</p>\n<p>I did add a \"clear\" button which deletes the pending shots - the functionality was already there and I just connected a button to it, but I noticed during testing that it doesn't work very well. The main loop there retries sending every shot before getting a \"clear\" signal, so the clearing doesn't happen immediately, only 2 seconds * number of shots later (I think), which is pretty ridiculous. Rather than modify things further I figured I'd file a bug report about making things work more smoothly here.</p>\n<p>With the extra calls to <code>self._update_error()</code>, you're right, most were unnecessary. One was necessary because when a tab transitions to some non-idle state but there is no error message yet, I still want to change the icon to the hourglass icon, which <code>_update_error</code> is doing the logic for. So I suppose <code>_update_error</code> is poorly named now - so I've renamed it to <code>_update_error_and_tab_icon()</code>.</p>\n<p>I've also renamed <code>update_tab_icon_and_colour()</code> to <code>set_tab_icon_and_colour()</code> to help differentiate it from <code>_update_error_and_tab_icon()</code>, since it's more about setting the things that have already been figured out than figuring out what they should be.</p>\n<p>The additional lines:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_tab_text_colour</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;black&#39;</span>\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_tab_icon_and_colour</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>in <code>hide_error()</code> are because without them, the tab text would stay red once you hide the \"not responding for x seconds\" message. But, I can't put a call to <code>update_tab_icon_and_colour()</code> there because that actually immediately <em>shows</em> the error again. </p>\n<p>As for the device name and connection now making tabs take up more horizontal space, how about this instead?</p>\n<p><img alt=\"blacs_title.png\" src=\"data/bitbucket.org/repo/dR5qxr/images/3412042888-blacs_title.png\" /></p>\n<p>So the name and connection are in their own row again, but on a single line of text.</p>\n<p>I've pushed these changes to this pull request.</p>", "type": "rendered"}, "created_on": "2017-06-15T05:41:32.814507+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-15T05:41:32.817134+00:00", "type": "pullrequest_comment", "id": 38873114}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38935465.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38935465"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Actually I have a better solution. Let the name and connection be on separate lines (good for if they are long!), on the same row as the buttons - but shrink the buttons to have no text.\n\nBelow I've shrank the restart button and replaced the smart programming checkbox with a button. It's not a checkbutton, it's just a regular button for clearing the smart programming cache. This is how the \"refresh smart programming\" checkbox works already in essence, it does not remain checked, it gets automatically unchecked again after the next `transition_to_buffered()`.  So checking it essentially said \"please clear the smart programming cache\", the only difference being that you could uncheck it before the next `transition_to_buffered()` in order to change your mind. So I've now replaced it with a button which does the same thing except you can't change your mind - it greys out once you click it, and is re-enabled after `transition_to_buffered()` the same way as the checkbox was unchecked after `transition_to_buffered()`. This is a 4-line change in code (there are other changed lines but they are just renames of the button):\n\n\n```\n#!diff\ndiff -r 2a757fed2b41 tab_base_classes.py\n--- a/tab_base_classes.py\tThu Jun 15 12:22:45 2017 -0400\n+++ b/tab_base_classes.py\tThu Jun 15 14:58:12 2017 -0400\n@@ -257,8 +257,8 @@\n         self.BLACS_connection = self.settings['connection_table'].find_by_name(self.device_name).BLACS_connection\n         self._ui.device_name.setText(\"<b>%s</b> <br />Connection: %s\"%(str(self.device_name),str(self.BLACS_connection)))\n         # connect signals\n-        self._ui.smart_programming.toggled.connect(self.on_force_full_buffered_reprogram)\n-        self._ui.smart_programming.setEnabled(False)\n+        self._ui.button_clear_smart_programming.clicked.connect(self.on_force_full_buffered_reprogram)\n+        self._ui.button_clear_smart_programming.setEnabled(False)\n         self.force_full_buffered_reprogram = True\n         self._ui.button_close.clicked.connect(self.hide_error)\n         self._ui.button_restart.clicked.connect(self.restart)        \n@@ -288,13 +288,13 @@\n     def supports_smart_programming(self,support):\n         self._supports_smart_programming = bool(support)\n         if self._supports_smart_programming:\n-            self._ui.smart_programming.show()\n+            self._ui.button_clear_smart_programming.show()\n         else:\n-            self._ui.smart_programming.hide()\n+            self._ui.button_clear_smart_programming.hide()\n     \n-    def on_force_full_buffered_reprogram(self,toggled):\n-        self.force_full_buffered_reprogram = toggled\n-    \n+    def on_force_full_buffered_reprogram(self):\n+        self.force_full_buffered_reprogram = True\n+\n     @property\n     def force_full_buffered_reprogram(self):\n         return self._force_full_buffered_reprogram\n@@ -302,7 +302,7 @@\n     @force_full_buffered_reprogram.setter\n     def force_full_buffered_reprogram(self,value):\n         self._force_full_buffered_reprogram = bool(value)\n-        self._ui.smart_programming.setChecked(bool(value))\n+        self._ui.button_clear_smart_programming.setEnabled(not bool(value))\n     \n     @property\n     @inmain_decorator(True)\n\n```\n\nAnd it looks like this:\n\n![blacs_smart_1.png](data/bitbucket.org/repo/dR5qxr/images/2623603173-blacs_smart_1.png)\n\n![blacs_smart_2.png](data/bitbucket.org/repo/dR5qxr/images/1569926385-blacs_smart_2.png)\n\n![blacs_smart_3.png](data/bitbucket.org/repo/dR5qxr/images/1348597199-blacs_smart_3.png)\n\nAllows for things to be very compact. The icon by the way is a brain with a minus sign to represent clearing the \"smart programming\" cache.\n\nThis is pushed to the pull request if anyone wants to test if I haven't caused any regressions, since I've done what I can but my ability to test this is limited.\n\n", "markup": "markdown", "html": "<p>Actually I have a better solution. Let the name and connection be on separate lines (good for if they are long!), on the same row as the buttons - but shrink the buttons to have no text.</p>\n<p>Below I've shrank the restart button and replaced the smart programming checkbox with a button. It's not a checkbutton, it's just a regular button for clearing the smart programming cache. This is how the \"refresh smart programming\" checkbox works already in essence, it does not remain checked, it gets automatically unchecked again after the next <code>transition_to_buffered()</code>.  So checking it essentially said \"please clear the smart programming cache\", the only difference being that you could uncheck it before the next <code>transition_to_buffered()</code> in order to change your mind. So I've now replaced it with a button which does the same thing except you can't change your mind - it greys out once you click it, and is re-enabled after <code>transition_to_buffered()</code> the same way as the checkbox was unchecked after <code>transition_to_buffered()</code>. This is a 4-line change in code (there are other changed lines but they are just renames of the button):</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gh\">diff -r 2a757fed2b41 tab_base_classes.py</span>\n<span class=\"gd\">--- a/tab_base_classes.py   Thu Jun 15 12:22:45 2017 -0400</span>\n<span class=\"gi\">+++ b/tab_base_classes.py   Thu Jun 15 14:58:12 2017 -0400</span>\n<span class=\"gu\">@@ -257,8 +257,8 @@</span>\n         self.BLACS_connection = self.settings[&#39;connection_table&#39;].find_by_name(self.device_name).BLACS_connection\n         self._ui.device_name.setText(&quot;&lt;b&gt;%s&lt;/b&gt; &lt;br /&gt;Connection: %s&quot;%(str(self.device_name),str(self.BLACS_connection)))\n         # connect signals\n<span class=\"gd\">-        self._ui.smart_programming.toggled.connect(self.on_force_full_buffered_reprogram)</span>\n<span class=\"gd\">-        self._ui.smart_programming.setEnabled(False)</span>\n<span class=\"gi\">+        self._ui.button_clear_smart_programming.clicked.connect(self.on_force_full_buffered_reprogram)</span>\n<span class=\"gi\">+        self._ui.button_clear_smart_programming.setEnabled(False)</span>\n         self.force_full_buffered_reprogram = True\n         self._ui.button_close.clicked.connect(self.hide_error)\n         self._ui.button_restart.clicked.connect(self.restart)        \n<span class=\"gu\">@@ -288,13 +288,13 @@</span>\n     def supports_smart_programming(self,support):\n         self._supports_smart_programming = bool(support)\n         if self._supports_smart_programming:\n<span class=\"gd\">-            self._ui.smart_programming.show()</span>\n<span class=\"gi\">+            self._ui.button_clear_smart_programming.show()</span>\n         else:\n<span class=\"gd\">-            self._ui.smart_programming.hide()</span>\n<span class=\"gi\">+            self._ui.button_clear_smart_programming.hide()</span>\n\n<span class=\"gd\">-    def on_force_full_buffered_reprogram(self,toggled):</span>\n<span class=\"gd\">-        self.force_full_buffered_reprogram = toggled</span>\n<span class=\"gd\">-    </span>\n<span class=\"gi\">+    def on_force_full_buffered_reprogram(self):</span>\n<span class=\"gi\">+        self.force_full_buffered_reprogram = True</span>\n<span class=\"gi\">+</span>\n     @property\n     def force_full_buffered_reprogram(self):\n         return self._force_full_buffered_reprogram\n<span class=\"gu\">@@ -302,7 +302,7 @@</span>\n     @force_full_buffered_reprogram.setter\n     def force_full_buffered_reprogram(self,value):\n         self._force_full_buffered_reprogram = bool(value)\n<span class=\"gd\">-        self._ui.smart_programming.setChecked(bool(value))</span>\n<span class=\"gi\">+        self._ui.button_clear_smart_programming.setEnabled(not bool(value))</span>\n\n     @property\n     @inmain_decorator(True)\n</pre></div>\n\n\n<p>And it looks like this:</p>\n<p><img alt=\"blacs_smart_1.png\" src=\"data/bitbucket.org/repo/dR5qxr/images/2623603173-blacs_smart_1.png\" /></p>\n<p><img alt=\"blacs_smart_2.png\" src=\"data/bitbucket.org/repo/dR5qxr/images/1569926385-blacs_smart_2.png\" /></p>\n<p><img alt=\"blacs_smart_3.png\" src=\"data/bitbucket.org/repo/dR5qxr/images/1348597199-blacs_smart_3.png\" /></p>\n<p>Allows for things to be very compact. The icon by the way is a brain with a minus sign to represent clearing the \"smart programming\" cache.</p>\n<p>This is pushed to the pull request if anyone wants to test if I haven't caused any regressions, since I've done what I can but my ability to test this is limited.</p>", "type": "rendered"}, "created_on": "2017-06-15T19:11:52.989057+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-15T19:11:53.014971+00:00", "type": "pullrequest_comment", "id": 38935465}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38938687.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38938687"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "I also removed a border on one of the tab frames and shrank some excessive margins. All in all, this is what things now look like, before and after:\n\n![blacs_oldgui.png](data/bitbucket.org/repo/dR5qxr/images/1459724894-blacs_oldgui.png)\n\n![blacs_newgui.png](data/bitbucket.org/repo/dR5qxr/images/2343329615-blacs_newgui.png)", "markup": "markdown", "html": "<p>I also removed a border on one of the tab frames and shrank some excessive margins. All in all, this is what things now look like, before and after:</p>\n<p><img alt=\"blacs_oldgui.png\" src=\"data/bitbucket.org/repo/dR5qxr/images/1459724894-blacs_oldgui.png\" /></p>\n<p><img alt=\"blacs_newgui.png\" src=\"data/bitbucket.org/repo/dR5qxr/images/2343329615-blacs_newgui.png\" /></p>", "type": "rendered"}, "created_on": "2017-06-15T20:04:51.969109+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-15T20:28:01.256415+00:00", "type": "pullrequest_comment", "id": 38938687}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38947164.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38947164"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Looks like you missed a name change:\n\n```\n#!python\n\nFatal exception in main process - Fri Jun 16, 09:10:01 :\n Traceback (most recent call last):\n  File \"C:\\labscript_suite\\blacs\\tab_base_classes.py\", line 703, in mainloop\n    next_yield = inmain(generator.send,results)\n  File \"C:\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 74, in inmain\n    return get_inmain_result(in_main_later(fn,False,*args,**kwargs))\n  File \"C:\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 94, in get_inmain_result\n    exec('raise type, value, traceback')\n  File \"C:\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 53, in event\n    result = event.fn(*event.args, **event.kwargs)\n  File \"C:\\labscript_suite\\blacs\\device_base_class.py\", line 565, in transition_to_buffered\n    self._ui.smart_programming.setEnabled(True)\nAttributeError: 'QFrame' object has no attribute 'smart_programming'\n```\n\n", "markup": "markdown", "html": "<p>Looks like you missed a name change:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Fatal</span> <span class=\"n\">exception</span> <span class=\"ow\">in</span> <span class=\"n\">main</span> <span class=\"n\">process</span> <span class=\"o\">-</span> <span class=\"n\">Fri</span> <span class=\"n\">Jun</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">09</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">01</span> <span class=\"p\">:</span>\n <span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite</span><span class=\"se\">\\b</span><span class=\"s2\">lacs</span><span class=\"se\">\\t</span><span class=\"s2\">ab_base_classes.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">703</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">mainloop</span>\n    <span class=\"n\">next_yield</span> <span class=\"o\">=</span> <span class=\"n\">inmain</span><span class=\"p\">(</span><span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">,</span><span class=\"n\">results</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">74</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">inmain</span>\n    <span class=\"k\">return</span> <span class=\"n\">get_inmain_result</span><span class=\"p\">(</span><span class=\"n\">in_main_later</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"p\">,</span><span class=\"bp\">False</span><span class=\"p\">,</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">))</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">94</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">get_inmain_result</span>\n    <span class=\"k\">exec</span><span class=\"p\">(</span><span class=\"s1\">&#39;raise type, value, traceback&#39;</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">53</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">event</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">fn</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite</span><span class=\"se\">\\b</span><span class=\"s2\">lacs\\device_base_class.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">565</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">transition_to_buffered</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ui</span><span class=\"o\">.</span><span class=\"n\">smart_programming</span><span class=\"o\">.</span><span class=\"n\">setEnabled</span><span class=\"p\">(</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n<span class=\"ne\">AttributeError</span><span class=\"p\">:</span> <span class=\"s1\">&#39;QFrame&#39;</span> <span class=\"nb\">object</span> <span class=\"n\">has</span> <span class=\"n\">no</span> <span class=\"n\">attribute</span> <span class=\"s1\">&#39;smart_programming&#39;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-06-15T23:16:18.585136+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-15T23:16:18.590072+00:00", "type": "pullrequest_comment", "id": 38947164}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38947279.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38947279"}}, "parent": {"id": 38947164, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38947164.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38947164"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Thanks, got it.", "markup": "markdown", "html": "<p>Thanks, got it.</p>", "type": "rendered"}, "created_on": "2017-06-15T23:20:35.229499+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-15T23:20:35.231647+00:00", "type": "pullrequest_comment", "id": 38947279}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38947850.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38947850"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "A few thoughts on the latest changes:\n\n* Is there a reason why you made it so that you can't change your mind about refreshing smart programming? You could have used a toggle button, allowing the same functionality as the old checkbox. Not that it really matters, the functionality is only used in rare cases (e.g. a Novatech has been power cycled without BLACS noticing). I'm happy to leave it as is.\n\n* Perhaps you should change the tooltip once the button has been checked, so say something like \"Smart programming buffer to be cleared: all instructions will be reprogrammed for this device on the next shot\"\n\n* Is the vertical bar to the left of the buttons needed?\n\n\nI also just noticed that if you shrink a tab down to be too narrow, it can become limited in width by the status line at the bottom. If this changes to something longer (e.g. pulseblasters being polled) then the tab resizes to fit, then shrinks back to the original size once the status is short again. Is there an easy way to get this to truncate the status message rather than stretch the whole tab to fit it?", "markup": "markdown", "html": "<p>A few thoughts on the latest changes:</p>\n<ul>\n<li>\n<p>Is there a reason why you made it so that you can't change your mind about refreshing smart programming? You could have used a toggle button, allowing the same functionality as the old checkbox. Not that it really matters, the functionality is only used in rare cases (e.g. a Novatech has been power cycled without BLACS noticing). I'm happy to leave it as is.</p>\n</li>\n<li>\n<p>Perhaps you should change the tooltip once the button has been checked, so say something like \"Smart programming buffer to be cleared: all instructions will be reprogrammed for this device on the next shot\"</p>\n</li>\n<li>\n<p>Is the vertical bar to the left of the buttons needed?</p>\n</li>\n</ul>\n<p>I also just noticed that if you shrink a tab down to be too narrow, it can become limited in width by the status line at the bottom. If this changes to something longer (e.g. pulseblasters being polled) then the tab resizes to fit, then shrinks back to the original size once the status is short again. Is there an easy way to get this to truncate the status message rather than stretch the whole tab to fit it?</p>", "type": "rendered"}, "created_on": "2017-06-15T23:41:03.504343+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-15T23:41:03.506638+00:00", "type": "pullrequest_comment", "id": 38947850}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38948273.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38948273"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Leaving it as a toggle seemed confusing, sacrificing the ability to change your mind about it seemed worth the reduction in confusion.\n\nGiven that it's not a toggle, I don't think I should change the tooltip, as the button is now about an action rather than a state. I'm treating it as if clicking that button clears the smart cache, even though internally the request to clear the cache doesn't get to the child process until later. I don't think there's any usefulness in distinguishing between \"there's no smart cache yet\", and \"there is a smart cache, but it's going to be ignored\". It's an implementation detail and the next `transition_to_buffered()` is going to proceed the same in either case. So the button is just grey for both, and the tooltip indicates what the button does when you click it.\n\nNope, vertical bar not needed - you vote to remove? I have no opinion.\n\nThere's no immediately obvious  way to make the status bar do what we want there, but I'm figuring out the best way to make QLabels elide text in general, then we can use it for the status bar as well as the queue status label, which also makes the GUI jump around when it contains a long h5 filename. If this works well we could make the device name and connection a single line of text with elision as well - would save a few more vertical pixels without preventing shrinking the tab in the case of a long name or connection.", "markup": "markdown", "html": "<p>Leaving it as a toggle seemed confusing, sacrificing the ability to change your mind about it seemed worth the reduction in confusion.</p>\n<p>Given that it's not a toggle, I don't think I should change the tooltip, as the button is now about an action rather than a state. I'm treating it as if clicking that button clears the smart cache, even though internally the request to clear the cache doesn't get to the child process until later. I don't think there's any usefulness in distinguishing between \"there's no smart cache yet\", and \"there is a smart cache, but it's going to be ignored\". It's an implementation detail and the next <code>transition_to_buffered()</code> is going to proceed the same in either case. So the button is just grey for both, and the tooltip indicates what the button does when you click it.</p>\n<p>Nope, vertical bar not needed - you vote to remove? I have no opinion.</p>\n<p>There's no immediately obvious  way to make the status bar do what we want there, but I'm figuring out the best way to make QLabels elide text in general, then we can use it for the status bar as well as the queue status label, which also makes the GUI jump around when it contains a long h5 filename. If this works well we could make the device name and connection a single line of text with elision as well - would save a few more vertical pixels without preventing shrinking the tab in the case of a long name or connection.</p>", "type": "rendered"}, "created_on": "2017-06-15T23:57:24.150098+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-15T23:57:24.153363+00:00", "type": "pullrequest_comment", "id": 38948273}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38948352.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38948352"}}, "parent": {"id": 38948273, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38948273.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38948273"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "I would prefer to save the text elision for a separate pull request given it's not super trivial.", "markup": "markdown", "html": "<p>I would prefer to save the text elision for a separate pull request given it's not super trivial.</p>", "type": "rendered"}, "created_on": "2017-06-16T00:00:30.710845+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-16T00:00:30.712994+00:00", "type": "pullrequest_comment", "id": 38948352}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38948649.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38948649"}}, "parent": {"id": 38948273, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38948273.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38948273"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Yeah, my vote is to remove the vertical bar, though perhaps I'll change my mind in the future if we get the elision working for the device name.\n\nHappy to leave the cache refresh button as it is", "markup": "markdown", "html": "<p>Yeah, my vote is to remove the vertical bar, though perhaps I'll change my mind in the future if we get the elision working for the device name.</p>\n<p>Happy to leave the cache refresh button as it is</p>", "type": "rendered"}, "created_on": "2017-06-16T00:11:49.893433+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-16T00:11:49.895343+00:00", "type": "pullrequest_comment", "id": 38948649}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38948883.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38948883"}}, "parent": {"id": 38948273, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38948273.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38948273"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Excellent, OK, vertical bar is gone.", "markup": "markdown", "html": "<p>Excellent, OK, vertical bar is gone.</p>", "type": "rendered"}, "created_on": "2017-06-16T00:20:46.907686+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-16T00:20:46.909553+00:00", "type": "pullrequest_comment", "id": 38948883}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38949221.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38949221"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Is there a reason why you can extend the vertical extent of the title area? I assume that it's always been the case, but I don't see the need for it.\n\nI assume that the ability to drag is what is adding the few pixels of grey above the darker border? I'd lose the resizing and the extra grey pixels!\n\n![extra_pixels.PNG](data/bitbucket.org/repo/dR5qxr/images/3014307522-extra_pixels.PNG)\n", "markup": "markdown", "html": "<p>Is there a reason why you can extend the vertical extent of the title area? I assume that it's always been the case, but I don't see the need for it.</p>\n<p>I assume that the ability to drag is what is adding the few pixels of grey above the darker border? I'd lose the resizing and the extra grey pixels!</p>\n<p><img alt=\"extra_pixels.PNG\" src=\"data/bitbucket.org/repo/dR5qxr/images/3014307522-extra_pixels.PNG\" /></p>", "type": "rendered"}, "created_on": "2017-06-16T00:34:35.627555+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-16T00:34:35.629691+00:00", "type": "pullrequest_comment", "id": 38949221}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38949356.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38949356"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "The slider lets you expand to see more of the error message when there's an error displayed, which is pretty useful, but it would be cool if it could go away when there is no error displayed.", "markup": "markdown", "html": "<p>The slider lets you expand to see more of the error message when there's an error displayed, which is pretty useful, but it would be cool if it could go away when there is no error displayed.</p>", "type": "rendered"}, "created_on": "2017-06-16T00:40:31.586625+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-16T00:40:31.588821+00:00", "type": "pullrequest_comment", "id": 38949356}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38949535.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38949535"}}, "parent": {"id": 38949356, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38949356.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38949356"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Looks like it's probably not trivial to make it go away only sometimes, and it's pretty useful being able to increase the size of the remote-values-changed display and error messages when you have them, so getting rid of it always is not great. So I'd say we get comfortable with grey pixels for the time being.", "markup": "markdown", "html": "<p>Looks like it's probably not trivial to make it go away only sometimes, and it's pretty useful being able to increase the size of the remote-values-changed display and error messages when you have them, so getting rid of it always is not great. So I'd say we get comfortable with grey pixels for the time being.</p>", "type": "rendered"}, "created_on": "2017-06-16T00:49:05.759190+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-16T00:49:05.761565+00:00", "type": "pullrequest_comment", "id": 38949535}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38951035.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38951035"}}, "parent": {"id": 38949535, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38949535.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38949535"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "The remote values changed area is not resizable, as it is in the same scroll area as the tab's main interface (perhaps this is something that we can look at changing around slightly in the future).\n\nIt looks like removing the extra \"layout\" that the error message sits (see picture) in does result in the resizing only being active when there is an error, however, it introduces a new \"feature\" of being able to completely hide the error message area by dragging it smaller. Currently the message will take up a finite minimum area. Let's leave this for another time for now, it's not a huge issue!\n\n![extra_layout.PNG](data/bitbucket.org/repo/dR5qxr/images/62444314-extra_layout.PNG)\n", "markup": "markdown", "html": "<p>The remote values changed area is not resizable, as it is in the same scroll area as the tab's main interface (perhaps this is something that we can look at changing around slightly in the future).</p>\n<p>It looks like removing the extra \"layout\" that the error message sits (see picture) in does result in the resizing only being active when there is an error, however, it introduces a new \"feature\" of being able to completely hide the error message area by dragging it smaller. Currently the message will take up a finite minimum area. Let's leave this for another time for now, it's not a huge issue!</p>\n<p><img alt=\"extra_layout.PNG\" src=\"data/bitbucket.org/repo/dR5qxr/images/62444314-extra_layout.PNG\" /></p>", "type": "rendered"}, "created_on": "2017-06-16T01:46:48.952128+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-16T01:46:48.954675+00:00", "type": "pullrequest_comment", "id": 38951035}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38951076.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38951076"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "@philipstarkey are you happy with the resolution of your comments earlier, and the other changes that have been implemented since?", "markup": "markdown", "html": "<p>@philipstarkey are you happy with the resolution of your comments earlier, and the other changes that have been implemented since?</p>", "type": "rendered"}, "created_on": "2017-06-16T01:48:40.127763+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-16T01:48:40.136888+00:00", "type": "pullrequest_comment", "id": 38951076}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7/comments/38953776.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7/_/diff#comment-38953776"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/7"}}, "title": "Icons and some pixel-saving"}, "content": {"raw": "Thanks again for all the testing and feedback!", "markup": "markdown", "html": "<p>Thanks again for all the testing and feedback!</p>", "type": "rendered"}, "created_on": "2017-06-16T03:43:04.754693+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-16T03:43:04.757642+00:00", "type": "pullrequest_comment", "id": 38953776}], "page": 1, "size": 42}