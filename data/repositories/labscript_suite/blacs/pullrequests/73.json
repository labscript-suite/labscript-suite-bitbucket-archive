{"rendered": {"description": {"raw": "This PR makes transitioning devices back to manual mode at the end of a shot parallel, as was already the case with transitioning them to buffered mode at the start of a shot.  This fixes issue #34.\r\n\r\nThis PR also implements the BLACS side of 'start order' and 'stop order', which were introduced in labscript in [labscript PR 37](#!/labscript_suite/labscript/pull-requests/37/). This allows users to optionally deserialise transitioning of specific devices to buffered or manual mode by specifying integers `start_order` and `stop_order` respectively as keyword arguments to the labscript device class. Devices will be transitioned in order from lowest to highest, with devices having equal orders transitioned simultaneously (by default all devices have `start_order = stop_order = 0` and so are all transitioned in parallel).\r\n\r\nThe remaining issue Phil raised with my previous attempt at deserialising transition_to_manual has been resolved, this is that the queue manager now continues transitioning all devices into manual mode even if one of them has an error.", "markup": "markdown", "html": "<p>This PR makes transitioning devices back to manual mode at the end of a shot parallel, as was already the case with transitioning them to buffered mode at the start of a shot.  This fixes issue <a href=\"#!/labscript_suite/blacs/issues/34/calls-to-transition_to_manual-are\" rel=\"nofollow\" title=\"calls to transition_to_manual are serialised by the queue manager\" class=\"ap-connect-link\"><s>#34</s></a>.</p>\n<p>This PR also implements the BLACS side of 'start order' and 'stop order', which were introduced in labscript in <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/pull-requests/37/\" rel=\"nofollow\">labscript PR 37</a>. This allows users to optionally deserialise transitioning of specific devices to buffered or manual mode by specifying integers <code>start_order</code> and <code>stop_order</code> respectively as keyword arguments to the labscript device class. Devices will be transitioned in order from lowest to highest, with devices having equal orders transitioned simultaneously (by default all devices have <code>start_order = stop_order = 0</code> and so are all transitioned in parallel).</p>\n<p>The remaining issue Phil raised with my previous attempt at deserialising transition_to_manual has been resolved, this is that the queue manager now continues transitioning all devices into manual mode even if one of them has an error.</p>", "type": "rendered"}, "title": {"raw": "Deserialise transition to manual and implement start_order and stop_order", "markup": "markdown", "html": "<p>Deserialise transition to manual and implement start_order and stop_order</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This PR makes transitioning devices back to manual mode at the end of a shot parallel, as was already the case with transitioning them to buffered mode at the start of a shot.  This fixes issue #34.\r\n\r\nThis PR also implements the BLACS side of 'start order' and 'stop order', which were introduced in labscript in [labscript PR 37](#!/labscript_suite/labscript/pull-requests/37/). This allows users to optionally deserialise transitioning of specific devices to buffered or manual mode by specifying integers `start_order` and `stop_order` respectively as keyword arguments to the labscript device class. Devices will be transitioned in order from lowest to highest, with devices having equal orders transitioned simultaneously (by default all devices have `start_order = stop_order = 0` and so are all transitioned in parallel).\r\n\r\nThe remaining issue Phil raised with my previous attempt at deserialising transition_to_manual has been resolved, this is that the queue manager now continues transitioning all devices into manual mode even if one of them has an error.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/pullrequests/73/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diffstat/labscript_suite/blacs:b99aec349c6b%0Df2b66b426b03?from_pullrequest_id=73"}, "commits": {"href": "data/repositories/labscript_suite/blacs/pullrequests/73/commits.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/73.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/pullrequests/73/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/pullrequests/73/merge"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/73"}, "activity": {"href": "data/repositories/labscript_suite/blacs/pullrequests/73/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/labscript_suite/blacs:b99aec349c6b%0Df2b66b426b03?from_pullrequest_id=73"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/pullrequests/73/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/pullrequests/73/statuses_page=1.json"}}, "title": "Deserialise transition to manual and implement start_order and stop_order", "close_source_branch": true, "reviewers": [{"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}], "id": 73, "destination": {"commit": {"hash": "f2b66b426b03", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/f2b66b426b03.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/f2b66b426b03"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "created_on": "2019-05-17T03:56:38.513345+00:00", "summary": {"raw": "This PR makes transitioning devices back to manual mode at the end of a shot parallel, as was already the case with transitioning them to buffered mode at the start of a shot.  This fixes issue #34.\r\n\r\nThis PR also implements the BLACS side of 'start order' and 'stop order', which were introduced in labscript in [labscript PR 37](#!/labscript_suite/labscript/pull-requests/37/). This allows users to optionally deserialise transitioning of specific devices to buffered or manual mode by specifying integers `start_order` and `stop_order` respectively as keyword arguments to the labscript device class. Devices will be transitioned in order from lowest to highest, with devices having equal orders transitioned simultaneously (by default all devices have `start_order = stop_order = 0` and so are all transitioned in parallel).\r\n\r\nThe remaining issue Phil raised with my previous attempt at deserialising transition_to_manual has been resolved, this is that the queue manager now continues transitioning all devices into manual mode even if one of them has an error.", "markup": "markdown", "html": "<p>This PR makes transitioning devices back to manual mode at the end of a shot parallel, as was already the case with transitioning them to buffered mode at the start of a shot.  This fixes issue <a href=\"#!/labscript_suite/blacs/issues/34/calls-to-transition_to_manual-are\" rel=\"nofollow\" title=\"calls to transition_to_manual are serialised by the queue manager\" class=\"ap-connect-link\"><s>#34</s></a>.</p>\n<p>This PR also implements the BLACS side of 'start order' and 'stop order', which were introduced in labscript in <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/pull-requests/37/\" rel=\"nofollow\">labscript PR 37</a>. This allows users to optionally deserialise transitioning of specific devices to buffered or manual mode by specifying integers <code>start_order</code> and <code>stop_order</code> respectively as keyword arguments to the labscript device class. Devices will be transitioned in order from lowest to highest, with devices having equal orders transitioned simultaneously (by default all devices have <code>start_order = stop_order = 0</code> and so are all transitioned in parallel).</p>\n<p>The remaining issue Phil raised with my previous attempt at deserialising transition_to_manual has been resolved, this is that the queue manager now continues transitioning all devices into manual mode even if one of them has an error.</p>", "type": "rendered"}, "source": {"commit": {"hash": "832987fd9392", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/832987fd9392"}, "html": {"href": "#!/cbillington/blacs/commits/832987fd9392"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "deserialise-transition-to-manual"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, {"role": "PARTICIPANT", "participated_on": "2019-06-01T16:37:32.787679+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}}], "reason": "", "updated_on": "2019-06-01T16:37:48.396556+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "b99aec349c6b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/b99aec349c6b.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/b99aec349c6b"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}