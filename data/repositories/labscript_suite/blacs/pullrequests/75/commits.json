{"pagelen": 100, "values": [{"hash": "8b5909f70bbf0e1956047f67bceab9b3096d03ae", "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs"}, "html": {"href": "#!/dihm/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5d6c277c-4faa-4fa2-af9f-e3e49c4673b3}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "dihm/blacs", "uuid": "{5d6c277c-4faa-4fa2-af9f-e3e49c4673b3}"}, "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/8b5909f70bbf0e1956047f67bceab9b3096d03ae"}, "comments": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/8b5909f70bbf0e1956047f67bceab9b3096d03ae/comments"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/patch/8b5909f70bbf0e1956047f67bceab9b3096d03ae"}, "html": {"href": "#!/dihm/blacs/commits/8b5909f70bbf0e1956047f67bceab9b3096d03ae"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/diff/8b5909f70bbf0e1956047f67bceab9b3096d03ae"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/8b5909f70bbf0e1956047f67bceab9b3096d03ae/approve"}, "statuses": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/8b5909f70bbf0e1956047f67bceab9b3096d03ae/statuses"}}, "author": {"raw": "Warm Vapor Control <dihm.meyer@gmail.com>", "type": "author", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}}, "summary": {"raw": "Allow DO label text to be overridden by kwarg and configure device property DOs to\nuse this feature to default show the property name.\n\nThe displayed name can be configure in the device_properties dictionary using the 'display_name' kwarg.", "markup": "markdown", "html": "<p>Allow DO label text to be overridden by kwarg and configure device property DOs to<br />\nuse this feature to default show the property name.</p>\n<p>The displayed name can be configure in the device_properties dictionary using the 'display_name' kwarg.</p>", "type": "rendered"}, "parents": [{"hash": "c75191703cf8215c930a606c4d6ac71516df9b9a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/c75191703cf8215c930a606c4d6ac71516df9b9a"}, "html": {"href": "#!/dihm/blacs/commits/c75191703cf8215c930a606c4d6ac71516df9b9a"}}}], "date": "2019-10-29T20:34:34+00:00", "message": "Allow DO label text to be overridden by kwarg and configure device property DOs to\nuse this feature to default show the property name.\n\nThe displayed name can be configure in the device_properties dictionary using the 'display_name' kwarg.", "type": "commit"}, {"hash": "c75191703cf8215c930a606c4d6ac71516df9b9a", "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs"}, "html": {"href": "#!/dihm/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5d6c277c-4faa-4fa2-af9f-e3e49c4673b3}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "dihm/blacs", "uuid": "{5d6c277c-4faa-4fa2-af9f-e3e49c4673b3}"}, "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/c75191703cf8215c930a606c4d6ac71516df9b9a"}, "comments": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/c75191703cf8215c930a606c4d6ac71516df9b9a/comments"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/patch/c75191703cf8215c930a606c4d6ac71516df9b9a"}, "html": {"href": "#!/dihm/blacs/commits/c75191703cf8215c930a606c4d6ac71516df9b9a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/diff/c75191703cf8215c930a606c4d6ac71516df9b9a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/c75191703cf8215c930a606c4d6ac71516df9b9a/approve"}, "statuses": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/c75191703cf8215c930a606c4d6ac71516df9b9a/statuses"}}, "author": {"raw": "Warm Vapor Control <dihm.meyer@gmail.com>", "type": "author", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}}, "summary": {"raw": "Update docstring for EO class.", "markup": "markdown", "html": "<p>Update docstring for EO class.</p>", "type": "rendered"}, "parents": [{"hash": "f84e0c354e7b20c256430872dde91f6dedb6b35b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/f84e0c354e7b20c256430872dde91f6dedb6b35b"}, "html": {"href": "#!/dihm/blacs/commits/f84e0c354e7b20c256430872dde91f6dedb6b35b"}}}], "date": "2019-10-28T19:19:58+00:00", "message": "Update docstring for EO class.", "type": "commit"}, {"hash": "f84e0c354e7b20c256430872dde91f6dedb6b35b", "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs"}, "html": {"href": "#!/dihm/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5d6c277c-4faa-4fa2-af9f-e3e49c4673b3}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "dihm/blacs", "uuid": "{5d6c277c-4faa-4fa2-af9f-e3e49c4673b3}"}, "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/f84e0c354e7b20c256430872dde91f6dedb6b35b"}, "comments": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/f84e0c354e7b20c256430872dde91f6dedb6b35b/comments"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/patch/f84e0c354e7b20c256430872dde91f6dedb6b35b"}, "html": {"href": "#!/dihm/blacs/commits/f84e0c354e7b20c256430872dde91f6dedb6b35b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/diff/f84e0c354e7b20c256430872dde91f6dedb6b35b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/f84e0c354e7b20c256430872dde91f6dedb6b35b/approve"}, "statuses": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/f84e0c354e7b20c256430872dde91f6dedb6b35b/statuses"}}, "author": {"raw": "Warm Vapor Control <dihm.meyer@gmail.com>", "type": "author", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}}, "summary": {"raw": "Add ability to set EO class return type.\n\nThe Enum object can now return the string value of the index integer of the combobox control.\nDefining the return type is not optional.", "markup": "markdown", "html": "<p>Add ability to set EO class return type.</p>\n<p>The Enum object can now return the string value of the index integer of the combobox control.<br />\nDefining the return type is not optional.</p>", "type": "rendered"}, "parents": [{"hash": "80366167a9afb8ddf14f8c43baf816368f4369df", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/80366167a9afb8ddf14f8c43baf816368f4369df"}, "html": {"href": "#!/dihm/blacs/commits/80366167a9afb8ddf14f8c43baf816368f4369df"}}}], "date": "2019-10-28T19:19:33+00:00", "message": "Add ability to set EO class return type.\n\nThe Enum object can now return the string value of the index integer of the combobox control.\nDefining the return type is not optional.", "type": "commit"}, {"hash": "80366167a9afb8ddf14f8c43baf816368f4369df", "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs"}, "html": {"href": "#!/dihm/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5d6c277c-4faa-4fa2-af9f-e3e49c4673b3}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "dihm/blacs", "uuid": "{5d6c277c-4faa-4fa2-af9f-e3e49c4673b3}"}, "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/80366167a9afb8ddf14f8c43baf816368f4369df"}, "comments": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/80366167a9afb8ddf14f8c43baf816368f4369df/comments"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/patch/80366167a9afb8ddf14f8c43baf816368f4369df"}, "html": {"href": "#!/dihm/blacs/commits/80366167a9afb8ddf14f8c43baf816368f4369df"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/diff/80366167a9afb8ddf14f8c43baf816368f4369df"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/80366167a9afb8ddf14f8c43baf816368f4369df/approve"}, "statuses": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/80366167a9afb8ddf14f8c43baf816368f4369df/statuses"}}, "author": {"raw": "Warm Vapor Control <dihm.meyer@gmail.com>", "type": "author", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}}, "summary": {"raw": "Update auto device property functions to use default values and parents.", "markup": "markdown", "html": "<p>Update auto device property functions to use default values and parents.</p>", "type": "rendered"}, "parents": [{"hash": "398ceadeb5faf719e8afc92959ba846655122ddc", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/398ceadeb5faf719e8afc92959ba846655122ddc"}, "html": {"href": "#!/dihm/blacs/commits/398ceadeb5faf719e8afc92959ba846655122ddc"}}}], "date": "2019-10-28T12:29:54+00:00", "message": "Update auto device property functions to use default values and parents.", "type": "commit"}, {"hash": "398ceadeb5faf719e8afc92959ba846655122ddc", "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs"}, "html": {"href": "#!/dihm/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5d6c277c-4faa-4fa2-af9f-e3e49c4673b3}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "dihm/blacs", "uuid": "{5d6c277c-4faa-4fa2-af9f-e3e49c4673b3}"}, "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/398ceadeb5faf719e8afc92959ba846655122ddc"}, "comments": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/398ceadeb5faf719e8afc92959ba846655122ddc/comments"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/patch/398ceadeb5faf719e8afc92959ba846655122ddc"}, "html": {"href": "#!/dihm/blacs/commits/398ceadeb5faf719e8afc92959ba846655122ddc"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/diff/398ceadeb5faf719e8afc92959ba846655122ddc"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/398ceadeb5faf719e8afc92959ba846655122ddc/approve"}, "statuses": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/398ceadeb5faf719e8afc92959ba846655122ddc/statuses"}}, "author": {"raw": "Warm Vapor Control <dihm.meyer@gmail.com>", "type": "author", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}}, "summary": {"raw": "Add `default_value` optional kwarg to AO/DO classes. If the AO/DO does not\nhave a `'base_value'` entry in the settings dictionary, this value is the initial\nvalue set upon starting BLACS.", "markup": "markdown", "html": "<p>Add <code>default_value</code> optional kwarg to AO/DO classes. If the AO/DO does not<br />\nhave a <code>'base_value'</code> entry in the settings dictionary, this value is the initial<br />\nvalue set upon starting BLACS.</p>", "type": "rendered"}, "parents": [{"hash": "860dfd39ef8f0e0efa254243ba2d5470b859cc2e", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/860dfd39ef8f0e0efa254243ba2d5470b859cc2e"}, "html": {"href": "#!/dihm/blacs/commits/860dfd39ef8f0e0efa254243ba2d5470b859cc2e"}}}], "date": "2019-10-25T19:49:30+00:00", "message": "Add `default_value` optional kwarg to AO/DO classes. If the AO/DO does not\nhave a `'base_value'` entry in the settings dictionary, this value is the initial\nvalue set upon starting BLACS.", "type": "commit"}, {"hash": "860dfd39ef8f0e0efa254243ba2d5470b859cc2e", "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs"}, "html": {"href": "#!/dihm/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5d6c277c-4faa-4fa2-af9f-e3e49c4673b3}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "dihm/blacs", "uuid": "{5d6c277c-4faa-4fa2-af9f-e3e49c4673b3}"}, "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/860dfd39ef8f0e0efa254243ba2d5470b859cc2e"}, "comments": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/860dfd39ef8f0e0efa254243ba2d5470b859cc2e/comments"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/patch/860dfd39ef8f0e0efa254243ba2d5470b859cc2e"}, "html": {"href": "#!/dihm/blacs/commits/860dfd39ef8f0e0efa254243ba2d5470b859cc2e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/diff/860dfd39ef8f0e0efa254243ba2d5470b859cc2e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/860dfd39ef8f0e0efa254243ba2d5470b859cc2e/approve"}, "statuses": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/860dfd39ef8f0e0efa254243ba2d5470b859cc2e/statuses"}}, "author": {"raw": "Warm Vapor Control <dihm.meyer@gmail.com>", "type": "author", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}}, "summary": {"raw": "Modify EO class to use new shared model paradigm for EnumOutputs.\n\nThe EO class now directly populates the shared model then updates attached\nwidgets with that model. This allows for more complicated enum controls and immediately\nallows for the addition of tooltips to options in the pull-down menu.\n\nThis also implements the default_value control of the EO, so if settings does not\nhave a setting, the specified default value is used instead.\n\nThis also allows for specifying the parent object of the EO widgets.\n\nFinally, property AO,EO widgets now default to using their short name as the label.", "markup": "markdown", "html": "<p>Modify EO class to use new shared model paradigm for EnumOutputs.</p>\n<p>The EO class now directly populates the shared model then updates attached<br />\nwidgets with that model. This allows for more complicated enum controls and immediately<br />\nallows for the addition of tooltips to options in the pull-down menu.</p>\n<p>This also implements the default_value control of the EO, so if settings does not<br />\nhave a setting, the specified default value is used instead.</p>\n<p>This also allows for specifying the parent object of the EO widgets.</p>\n<p>Finally, property AO,EO widgets now default to using their short name as the label.</p>", "type": "rendered"}, "parents": [{"hash": "31e89d623afea2b6212125d26e1d271e44a47d6d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/31e89d623afea2b6212125d26e1d271e44a47d6d"}, "html": {"href": "#!/dihm/blacs/commits/31e89d623afea2b6212125d26e1d271e44a47d6d"}}}], "date": "2019-10-25T15:11:11+00:00", "message": "Modify EO class to use new shared model paradigm for EnumOutputs.\n\nThe EO class now directly populates the shared model then updates attached\nwidgets with that model. This allows for more complicated enum controls and immediately\nallows for the addition of tooltips to options in the pull-down menu.\n\nThis also implements the default_value control of the EO, so if settings does not\nhave a setting, the specified default value is used instead.\n\nThis also allows for specifying the parent object of the EO widgets.\n\nFinally, property AO,EO widgets now default to using their short name as the label.", "type": "commit"}, {"hash": "31e89d623afea2b6212125d26e1d271e44a47d6d", "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs"}, "html": {"href": "#!/dihm/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5d6c277c-4faa-4fa2-af9f-e3e49c4673b3}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "dihm/blacs", "uuid": "{5d6c277c-4faa-4fa2-af9f-e3e49c4673b3}"}, "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/31e89d623afea2b6212125d26e1d271e44a47d6d"}, "comments": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/31e89d623afea2b6212125d26e1d271e44a47d6d/comments"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/patch/31e89d623afea2b6212125d26e1d271e44a47d6d"}, "html": {"href": "#!/dihm/blacs/commits/31e89d623afea2b6212125d26e1d271e44a47d6d"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/diff/31e89d623afea2b6212125d26e1d271e44a47d6d"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/31e89d623afea2b6212125d26e1d271e44a47d6d/approve"}, "statuses": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/31e89d623afea2b6212125d26e1d271e44a47d6d/statuses"}}, "author": {"raw": "Warm Vapor Control <dihm.meyer@gmail.com>", "type": "author", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}}, "summary": {"raw": "Implement enum object handling the automated device property widget creation.", "markup": "markdown", "html": "<p>Implement enum object handling the automated device property widget creation.</p>", "type": "rendered"}, "parents": [{"hash": "ee3a1dfa9ffa565e05c1706433126140af4c7eca", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/ee3a1dfa9ffa565e05c1706433126140af4c7eca"}, "html": {"href": "#!/dihm/blacs/commits/ee3a1dfa9ffa565e05c1706433126140af4c7eca"}}}], "date": "2019-10-18T11:15:10+00:00", "message": "Implement enum object handling the automated device property widget creation.", "type": "commit"}, {"hash": "ee3a1dfa9ffa565e05c1706433126140af4c7eca", "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs"}, "html": {"href": "#!/dihm/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5d6c277c-4faa-4fa2-af9f-e3e49c4673b3}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "dihm/blacs", "uuid": "{5d6c277c-4faa-4fa2-af9f-e3e49c4673b3}"}, "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/ee3a1dfa9ffa565e05c1706433126140af4c7eca"}, "comments": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/ee3a1dfa9ffa565e05c1706433126140af4c7eca/comments"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/patch/ee3a1dfa9ffa565e05c1706433126140af4c7eca"}, "html": {"href": "#!/dihm/blacs/commits/ee3a1dfa9ffa565e05c1706433126140af4c7eca"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/diff/ee3a1dfa9ffa565e05c1706433126140af4c7eca"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/ee3a1dfa9ffa565e05c1706433126140af4c7eca/approve"}, "statuses": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/ee3a1dfa9ffa565e05c1706433126140af4c7eca/statuses"}}, "author": {"raw": "Warm Vapor Control <dihm.meyer@gmail.com>", "type": "author", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}}, "summary": {"raw": "Add support for enumerated outputs.\n\nThis requires PR #__ from labscript_utils.\nThis is particularly geared for device property settings.", "markup": "markdown", "html": "<p>Add support for enumerated outputs.</p>\n<p>This requires PR #__ from labscript_utils.<br />\nThis is particularly geared for device property settings.</p>", "type": "rendered"}, "parents": [{"hash": "9ad4c3733eb6d8f0803e81007fd549f0c167becc", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/9ad4c3733eb6d8f0803e81007fd549f0c167becc"}, "html": {"href": "#!/dihm/blacs/commits/9ad4c3733eb6d8f0803e81007fd549f0c167becc"}}}], "date": "2019-10-08T22:05:21+00:00", "message": "Add support for enumerated outputs.\n\nThis requires PR #__ from labscript_utils.\nThis is particularly geared for device property settings.", "type": "commit"}, {"hash": "9ad4c3733eb6d8f0803e81007fd549f0c167becc", "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs"}, "html": {"href": "#!/dihm/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5d6c277c-4faa-4fa2-af9f-e3e49c4673b3}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "dihm/blacs", "uuid": "{5d6c277c-4faa-4fa2-af9f-e3e49c4673b3}"}, "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/9ad4c3733eb6d8f0803e81007fd549f0c167becc"}, "comments": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/9ad4c3733eb6d8f0803e81007fd549f0c167becc/comments"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/patch/9ad4c3733eb6d8f0803e81007fd549f0c167becc"}, "html": {"href": "#!/dihm/blacs/commits/9ad4c3733eb6d8f0803e81007fd549f0c167becc"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/diff/9ad4c3733eb6d8f0803e81007fd549f0c167becc"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/9ad4c3733eb6d8f0803e81007fd549f0c167becc/approve"}, "statuses": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/9ad4c3733eb6d8f0803e81007fd549f0c167becc/statuses"}}, "author": {"raw": "Warm Vapor Control <dihm.meyer@gmail.com>", "type": "author", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}}, "summary": {"raw": "Add initial framework for device_properties widgets in a device BLACS tab.\n\nConfiguration is done using a new style of property dictionary that uses either\nand AO or DO output for each property.\n\n```\ndevice_properties = {'device_property':{'default':value,\n                                        'type':'num',\n                                        'min':0,\n                                        'max':1,\n                                        'base_unit':'V',\n                                        'step':0.1,\n                                        'decimals':1},\n                     'device_property2'}:{'default':value,\n                                          'type':'bool'}\n```\n\nAlso establishes the `program_device_properties` state machine method.\nIn order to program these properties, the BLACS_worker must define\na `program_properties` method. The `check_remote_values` method of the worker\nshould populate the properties values as well as the output values as well.\n\nCurrently, automatic layout is done using the existing `auto-place-widgets` method\nwith a custom group name defined by the user. When mixing types of outputs, it\nisn't particularly pretty. A separate method for property widgets with more refined\nlayout control is likely necessary.", "markup": "markdown", "html": "<p>Add initial framework for device_properties widgets in a device BLACS tab.</p>\n<p>Configuration is done using a new style of property dictionary that uses either<br />\nand AO or DO output for each property.</p>\n<div class=\"codehilite\"><pre><span></span>device_properties = {&#39;device_property&#39;:{&#39;default&#39;:value,\n                                        &#39;type&#39;:&#39;num&#39;,\n                                        &#39;min&#39;:0,\n                                        &#39;max&#39;:1,\n                                        &#39;base_unit&#39;:&#39;V&#39;,\n                                        &#39;step&#39;:0.1,\n                                        &#39;decimals&#39;:1},\n                     &#39;device_property2&#39;}:{&#39;default&#39;:value,\n                                          &#39;type&#39;:&#39;bool&#39;}\n</pre></div>\n\n\n<p>Also establishes the <code>program_device_properties</code> state machine method.<br />\nIn order to program these properties, the BLACS_worker must define<br />\na <code>program_properties</code> method. The <code>check_remote_values</code> method of the worker<br />\nshould populate the properties values as well as the output values as well.</p>\n<p>Currently, automatic layout is done using the existing <code>auto-place-widgets</code> method<br />\nwith a custom group name defined by the user. When mixing types of outputs, it<br />\nisn't particularly pretty. A separate method for property widgets with more refined<br />\nlayout control is likely necessary.</p>", "type": "rendered"}, "parents": [{"hash": "1b4c69c290bddf43a5573d9e6c0e27d6cc67875b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/blacs/commit/1b4c69c290bddf43a5573d9e6c0e27d6cc67875b"}, "html": {"href": "#!/dihm/blacs/commits/1b4c69c290bddf43a5573d9e6c0e27d6cc67875b"}}}], "date": "2019-10-08T17:33:04+00:00", "message": "Add initial framework for device_properties widgets in a device BLACS tab.\n\nConfiguration is done using a new style of property dictionary that uses either\nand AO or DO output for each property.\n\n```\ndevice_properties = {'device_property':{'default':value,\n                                        'type':'num',\n                                        'min':0,\n                                        'max':1,\n                                        'base_unit':'V',\n                                        'step':0.1,\n                                        'decimals':1},\n                     'device_property2'}:{'default':value,\n                                          'type':'bool'}\n```\n\nAlso establishes the `program_device_properties` state machine method.\nIn order to program these properties, the BLACS_worker must define\na `program_properties` method. The `check_remote_values` method of the worker\nshould populate the properties values as well as the output values as well.\n\nCurrently, automatic layout is done using the existing `auto-place-widgets` method\nwith a custom group name defined by the user. When mixing types of outputs, it\nisn't particularly pretty. A separate method for property widgets with more refined\nlayout control is likely necessary.", "type": "commit"}], "page": 1}