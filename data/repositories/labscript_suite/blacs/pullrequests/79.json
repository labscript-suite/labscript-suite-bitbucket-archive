{"rendered": {"description": {"raw": "Unconditionally convert `h5_file` to network agnostic when sending to workers. Have a method in the worker convert them to local before calling the worker's `transition_to_buffered()`.\r\n\r\nSince `shared_drive.path_to_local` is idempotent, this is backward compatible\r\nwith devices that convert the path to local manually.\r\n\r\nThis means all devices will work as remote devices now without having to be updated to convert the path to local themselves. Devices that already do that will not be broken by this change, but they can remove those lines and depend on this version of BLACS instead.\r\n\r\nWe still have the issue whereby the different sides of remote connections don't check the versions on the other side, so you get obtuse error messages instead of version errors when things don't match. That's a work in progress, but this PR makes things at least work when the versions are right!\r\n\r\nI don't know why I didn't make this change earlier - I think I thought I would need a metaclass or something a bit too magical for my tastes, but of course just defining an extra method as in the PR is the obvious solution.", "markup": "markdown", "html": "<p>Unconditionally convert <code>h5_file</code> to network agnostic when sending to workers. Have a method in the worker convert them to local before calling the worker's <code>transition_to_buffered()</code>.</p>\n<p>Since <code>shared_drive.path_to_local</code> is idempotent, this is backward compatible\nwith devices that convert the path to local manually.</p>\n<p>This means all devices will work as remote devices now without having to be updated to convert the path to local themselves. Devices that already do that will not be broken by this change, but they can remove those lines and depend on this version of BLACS instead.</p>\n<p>We still have the issue whereby the different sides of remote connections don't check the versions on the other side, so you get obtuse error messages instead of version errors when things don't match. That's a work in progress, but this PR makes things at least work when the versions are right!</p>\n<p>I don't know why I didn't make this change earlier - I think I thought I would need a metaclass or something a bit too magical for my tastes, but of course just defining an extra method as in the PR is the obvious solution.</p>", "type": "rendered"}, "title": {"raw": "Convert filepaths to network format unconditionally", "markup": "markdown", "html": "<p>Convert filepaths to network format unconditionally</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Unconditionally convert `h5_file` to network agnostic when sending to workers. Have a method in the worker convert them to local before calling the worker's `transition_to_buffered()`.\r\n\r\nSince `shared_drive.path_to_local` is idempotent, this is backward compatible\r\nwith devices that convert the path to local manually.\r\n\r\nThis means all devices will work as remote devices now without having to be updated to convert the path to local themselves. Devices that already do that will not be broken by this change, but they can remove those lines and depend on this version of BLACS instead.\r\n\r\nWe still have the issue whereby the different sides of remote connections don't check the versions on the other side, so you get obtuse error messages instead of version errors when things don't match. That's a work in progress, but this PR makes things at least work when the versions are right!\r\n\r\nI don't know why I didn't make this change earlier - I think I thought I would need a metaclass or something a bit too magical for my tastes, but of course just defining an extra method as in the PR is the obvious solution.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/pullrequests/79/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diffstat/labscript_suite/blacs:634d076ccf54%0D9dd6d90723eb?from_pullrequest_id=79"}, "commits": {"href": "data/repositories/labscript_suite/blacs/pullrequests/79/commits.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/79.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/pullrequests/79/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/pullrequests/79/merge"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/79"}, "activity": {"href": "data/repositories/labscript_suite/blacs/pullrequests/79/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/labscript_suite/blacs:634d076ccf54%0D9dd6d90723eb?from_pullrequest_id=79"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/pullrequests/79/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/pullrequests/79/statuses_page=1.json"}}, "title": "Convert filepaths to network format unconditionally", "close_source_branch": true, "reviewers": [{"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}], "id": 79, "destination": {"commit": {"hash": "9dd6d90723eb", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/9dd6d90723eb.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/9dd6d90723eb"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "created_on": "2019-12-12T14:43:46.883342+00:00", "summary": {"raw": "Unconditionally convert `h5_file` to network agnostic when sending to workers. Have a method in the worker convert them to local before calling the worker's `transition_to_buffered()`.\r\n\r\nSince `shared_drive.path_to_local` is idempotent, this is backward compatible\r\nwith devices that convert the path to local manually.\r\n\r\nThis means all devices will work as remote devices now without having to be updated to convert the path to local themselves. Devices that already do that will not be broken by this change, but they can remove those lines and depend on this version of BLACS instead.\r\n\r\nWe still have the issue whereby the different sides of remote connections don't check the versions on the other side, so you get obtuse error messages instead of version errors when things don't match. That's a work in progress, but this PR makes things at least work when the versions are right!\r\n\r\nI don't know why I didn't make this change earlier - I think I thought I would need a metaclass or something a bit too magical for my tastes, but of course just defining an extra method as in the PR is the obvious solution.", "markup": "markdown", "html": "<p>Unconditionally convert <code>h5_file</code> to network agnostic when sending to workers. Have a method in the worker convert them to local before calling the worker's <code>transition_to_buffered()</code>.</p>\n<p>Since <code>shared_drive.path_to_local</code> is idempotent, this is backward compatible\nwith devices that convert the path to local manually.</p>\n<p>This means all devices will work as remote devices now without having to be updated to convert the path to local themselves. Devices that already do that will not be broken by this change, but they can remove those lines and depend on this version of BLACS instead.</p>\n<p>We still have the issue whereby the different sides of remote connections don't check the versions on the other side, so you get obtuse error messages instead of version errors when things don't match. That's a work in progress, but this PR makes things at least work when the versions are right!</p>\n<p>I don't know why I didn't make this change earlier - I think I thought I would need a metaclass or something a bit too magical for my tastes, but of course just defining an extra method as in the PR is the obvious solution.</p>", "type": "rendered"}, "source": {"commit": {"hash": "413498c6364f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/413498c6364f"}, "html": {"href": "#!/cbillington/blacs/commits/413498c6364f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "remote_filepaths"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, {"role": "PARTICIPANT", "participated_on": "2020-01-16T10:50:46.496569+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": "2020-01-16T11:37:14.927619+00:00", "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}}], "reason": "", "updated_on": "2020-01-28T20:44:53.046263+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "634d076ccf54", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/634d076ccf54.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/634d076ccf54"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}