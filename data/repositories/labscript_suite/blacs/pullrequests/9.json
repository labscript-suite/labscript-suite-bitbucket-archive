{"rendered": {"description": {"raw": "Functionality to delete repeated shots such that only a finite number of repeated shots are kept on disk at any one time. This prevents consuming disk space in the case of an experiment being \"kept warm\" by being left in repeat mode.\r\n\r\nThis functionality is implemented via a plugin, using a new callback for BLACS\r\nplugins called \"shot_complete\". The shot deletion is done in a\r\nseparate thread so as not to slow down the experiment in the case of blocking\r\ncalls, and a zlock lock is acquired on the file prior to deletion\r\nto minimise the harm done if say, a lyse routine is reading the file.\r\n\r\nThere is sensible behaviour in the case of the user decreasing the number of\r\nshots to retain on disk. Shots that are queued for deletion are kept in a queue,\r\nand when the number of shots to keep is decreased, shots are released from the\r\nfront of the queue (without being deleted) until the queue is the\r\nsame size as the number of shots now being retained. This means\r\nthat if the user set to keep 100 shots, and then goes ahead and runs a\r\nhundred shots, if they then set it to keep 5 shots it won't delete\r\nthe 95 oldest shots in the deletion queue. Rather it will only delete the\r\nmost recent 5 (and not immediately - over the next 5 shots). I think this is\r\nclose to what people will expect when changing the number, and it errs on the\r\nside of keeping shots.\r\n\r\nIf the added GUI elements seem like clutter to anyone, I'm sympathetic to perhaps adding a menu entry to the menu next to the \"repeat\" button, that would toggle whether this feature is active, or I'm open to any other suggestions.\r\n\r\nThis functionality is used all the time at JQI as the apparatuses are all of the type that need to be constantly running after they've warmed up.\r\n\r\nTooltip on the label and spinbox says what the feature does:\r\n\r\n![blacs_delete_shots_1.png](data/bitbucket.org/repo/9pKE7ad/images/561283090-blacs_delete_shots_1.png)\r\n\r\n\r\nSpinbox has a \"special\" entry: \"all\" which means no shots will be deleted. A small button resets it to this setting - any shots that were scheduled for deletion will not be deleted if you click this button:\r\n\r\n![blacs_delete_shots_2.png](data/bitbucket.org/repo/9pKE7ad/images/2346199116-blacs_delete_shots_2.png)\r\n\r\nControls are disabled if not in repeat mode:\r\n\r\n![blacs_delete_shots_3.png](data/bitbucket.org/repo/9pKE7ad/images/2512159685-blacs_delete_shots_3.png)", "markup": "markdown", "html": "<p>Functionality to delete repeated shots such that only a finite number of repeated shots are kept on disk at any one time. This prevents consuming disk space in the case of an experiment being \"kept warm\" by being left in repeat mode.</p>\n<p>This functionality is implemented via a plugin, using a new callback for BLACS\nplugins called \"shot_complete\". The shot deletion is done in a\nseparate thread so as not to slow down the experiment in the case of blocking\ncalls, and a zlock lock is acquired on the file prior to deletion\nto minimise the harm done if say, a lyse routine is reading the file.</p>\n<p>There is sensible behaviour in the case of the user decreasing the number of\nshots to retain on disk. Shots that are queued for deletion are kept in a queue,\nand when the number of shots to keep is decreased, shots are released from the\nfront of the queue (without being deleted) until the queue is the\nsame size as the number of shots now being retained. This means\nthat if the user set to keep 100 shots, and then goes ahead and runs a\nhundred shots, if they then set it to keep 5 shots it won't delete\nthe 95 oldest shots in the deletion queue. Rather it will only delete the\nmost recent 5 (and not immediately - over the next 5 shots). I think this is\nclose to what people will expect when changing the number, and it errs on the\nside of keeping shots.</p>\n<p>If the added GUI elements seem like clutter to anyone, I'm sympathetic to perhaps adding a menu entry to the menu next to the \"repeat\" button, that would toggle whether this feature is active, or I'm open to any other suggestions.</p>\n<p>This functionality is used all the time at JQI as the apparatuses are all of the type that need to be constantly running after they've warmed up.</p>\n<p>Tooltip on the label and spinbox says what the feature does:</p>\n<p><img alt=\"blacs_delete_shots_1.png\" src=\"data/bitbucket.org/repo/9pKE7ad/images/561283090-blacs_delete_shots_1.png\" /></p>\n<p>Spinbox has a \"special\" entry: \"all\" which means no shots will be deleted. A small button resets it to this setting - any shots that were scheduled for deletion will not be deleted if you click this button:</p>\n<p><img alt=\"blacs_delete_shots_2.png\" src=\"data/bitbucket.org/repo/9pKE7ad/images/2346199116-blacs_delete_shots_2.png\" /></p>\n<p>Controls are disabled if not in repeat mode:</p>\n<p><img alt=\"blacs_delete_shots_3.png\" src=\"data/bitbucket.org/repo/9pKE7ad/images/2512159685-blacs_delete_shots_3.png\" /></p>", "type": "rendered"}, "title": {"raw": "\"delete repeated shots\" functionality", "markup": "markdown", "html": "<p>\"delete repeated shots\" functionality</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Functionality to delete repeated shots such that only a finite number of repeated shots are kept on disk at any one time. This prevents consuming disk space in the case of an experiment being \"kept warm\" by being left in repeat mode.\r\n\r\nThis functionality is implemented via a plugin, using a new callback for BLACS\r\nplugins called \"shot_complete\". The shot deletion is done in a\r\nseparate thread so as not to slow down the experiment in the case of blocking\r\ncalls, and a zlock lock is acquired on the file prior to deletion\r\nto minimise the harm done if say, a lyse routine is reading the file.\r\n\r\nThere is sensible behaviour in the case of the user decreasing the number of\r\nshots to retain on disk. Shots that are queued for deletion are kept in a queue,\r\nand when the number of shots to keep is decreased, shots are released from the\r\nfront of the queue (without being deleted) until the queue is the\r\nsame size as the number of shots now being retained. This means\r\nthat if the user set to keep 100 shots, and then goes ahead and runs a\r\nhundred shots, if they then set it to keep 5 shots it won't delete\r\nthe 95 oldest shots in the deletion queue. Rather it will only delete the\r\nmost recent 5 (and not immediately - over the next 5 shots). I think this is\r\nclose to what people will expect when changing the number, and it errs on the\r\nside of keeping shots.\r\n\r\nIf the added GUI elements seem like clutter to anyone, I'm sympathetic to perhaps adding a menu entry to the menu next to the \"repeat\" button, that would toggle whether this feature is active, or I'm open to any other suggestions.\r\n\r\nThis functionality is used all the time at JQI as the apparatuses are all of the type that need to be constantly running after they've warmed up.\r\n\r\nTooltip on the label and spinbox says what the feature does:\r\n\r\n![blacs_delete_shots_1.png](data/bitbucket.org/repo/9pKE7ad/images/561283090-blacs_delete_shots_1.png)\r\n\r\n\r\nSpinbox has a \"special\" entry: \"all\" which means no shots will be deleted. A small button resets it to this setting - any shots that were scheduled for deletion will not be deleted if you click this button:\r\n\r\n![blacs_delete_shots_2.png](data/bitbucket.org/repo/9pKE7ad/images/2346199116-blacs_delete_shots_2.png)\r\n\r\nControls are disabled if not in repeat mode:\r\n\r\n![blacs_delete_shots_3.png](data/bitbucket.org/repo/9pKE7ad/images/2512159685-blacs_delete_shots_3.png)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/pullrequests/9/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diffstat/labscript_suite/blacs:e034e96e504b%0Dffb1d34aaec7?from_pullrequest_id=9"}, "commits": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/commits.json"}, "self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "comments": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/pullrequests/9/merge"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}, "activity": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/diff/labscript_suite/blacs:e034e96e504b%0Dffb1d34aaec7?from_pullrequest_id=9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/blacs/pullrequests/9/approve"}, "statuses": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/statuses_page=1.json"}}, "title": "\"delete repeated shots\" functionality", "close_source_branch": true, "reviewers": [{"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}], "id": 9, "destination": {"commit": {"hash": "ffb1d34aaec7", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/ffb1d34aaec7.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/ffb1d34aaec7"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/blacs.json"}, "html": {"href": "#!/labscript_suite/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}ts=249915"}}, "type": "repository", "name": "BLACS", "full_name": "labscript_suite/blacs", "uuid": "{50ed1eb9-8c1b-4afe-a8b8-8e0a33b39a05}"}, "branch": {"name": "default"}}, "created_on": "2017-06-16T04:13:19.689612+00:00", "summary": {"raw": "Functionality to delete repeated shots such that only a finite number of repeated shots are kept on disk at any one time. This prevents consuming disk space in the case of an experiment being \"kept warm\" by being left in repeat mode.\r\n\r\nThis functionality is implemented via a plugin, using a new callback for BLACS\r\nplugins called \"shot_complete\". The shot deletion is done in a\r\nseparate thread so as not to slow down the experiment in the case of blocking\r\ncalls, and a zlock lock is acquired on the file prior to deletion\r\nto minimise the harm done if say, a lyse routine is reading the file.\r\n\r\nThere is sensible behaviour in the case of the user decreasing the number of\r\nshots to retain on disk. Shots that are queued for deletion are kept in a queue,\r\nand when the number of shots to keep is decreased, shots are released from the\r\nfront of the queue (without being deleted) until the queue is the\r\nsame size as the number of shots now being retained. This means\r\nthat if the user set to keep 100 shots, and then goes ahead and runs a\r\nhundred shots, if they then set it to keep 5 shots it won't delete\r\nthe 95 oldest shots in the deletion queue. Rather it will only delete the\r\nmost recent 5 (and not immediately - over the next 5 shots). I think this is\r\nclose to what people will expect when changing the number, and it errs on the\r\nside of keeping shots.\r\n\r\nIf the added GUI elements seem like clutter to anyone, I'm sympathetic to perhaps adding a menu entry to the menu next to the \"repeat\" button, that would toggle whether this feature is active, or I'm open to any other suggestions.\r\n\r\nThis functionality is used all the time at JQI as the apparatuses are all of the type that need to be constantly running after they've warmed up.\r\n\r\nTooltip on the label and spinbox says what the feature does:\r\n\r\n![blacs_delete_shots_1.png](data/bitbucket.org/repo/9pKE7ad/images/561283090-blacs_delete_shots_1.png)\r\n\r\n\r\nSpinbox has a \"special\" entry: \"all\" which means no shots will be deleted. A small button resets it to this setting - any shots that were scheduled for deletion will not be deleted if you click this button:\r\n\r\n![blacs_delete_shots_2.png](data/bitbucket.org/repo/9pKE7ad/images/2346199116-blacs_delete_shots_2.png)\r\n\r\nControls are disabled if not in repeat mode:\r\n\r\n![blacs_delete_shots_3.png](data/bitbucket.org/repo/9pKE7ad/images/2512159685-blacs_delete_shots_3.png)", "markup": "markdown", "html": "<p>Functionality to delete repeated shots such that only a finite number of repeated shots are kept on disk at any one time. This prevents consuming disk space in the case of an experiment being \"kept warm\" by being left in repeat mode.</p>\n<p>This functionality is implemented via a plugin, using a new callback for BLACS\nplugins called \"shot_complete\". The shot deletion is done in a\nseparate thread so as not to slow down the experiment in the case of blocking\ncalls, and a zlock lock is acquired on the file prior to deletion\nto minimise the harm done if say, a lyse routine is reading the file.</p>\n<p>There is sensible behaviour in the case of the user decreasing the number of\nshots to retain on disk. Shots that are queued for deletion are kept in a queue,\nand when the number of shots to keep is decreased, shots are released from the\nfront of the queue (without being deleted) until the queue is the\nsame size as the number of shots now being retained. This means\nthat if the user set to keep 100 shots, and then goes ahead and runs a\nhundred shots, if they then set it to keep 5 shots it won't delete\nthe 95 oldest shots in the deletion queue. Rather it will only delete the\nmost recent 5 (and not immediately - over the next 5 shots). I think this is\nclose to what people will expect when changing the number, and it errs on the\nside of keeping shots.</p>\n<p>If the added GUI elements seem like clutter to anyone, I'm sympathetic to perhaps adding a menu entry to the menu next to the \"repeat\" button, that would toggle whether this feature is active, or I'm open to any other suggestions.</p>\n<p>This functionality is used all the time at JQI as the apparatuses are all of the type that need to be constantly running after they've warmed up.</p>\n<p>Tooltip on the label and spinbox says what the feature does:</p>\n<p><img alt=\"blacs_delete_shots_1.png\" src=\"data/bitbucket.org/repo/9pKE7ad/images/561283090-blacs_delete_shots_1.png\" /></p>\n<p>Spinbox has a \"special\" entry: \"all\" which means no shots will be deleted. A small button resets it to this setting - any shots that were scheduled for deletion will not be deleted if you click this button:</p>\n<p><img alt=\"blacs_delete_shots_2.png\" src=\"data/bitbucket.org/repo/9pKE7ad/images/2346199116-blacs_delete_shots_2.png\" /></p>\n<p>Controls are disabled if not in repeat mode:</p>\n<p><img alt=\"blacs_delete_shots_3.png\" src=\"data/bitbucket.org/repo/9pKE7ad/images/2512159685-blacs_delete_shots_3.png\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "ffe4cabd272a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs/commit/ffe4cabd272a"}, "html": {"href": "#!/cbillington/blacs/commits/ffe4cabd272a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/blacs"}, "html": {"href": "#!/cbillington/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}ts=python"}}, "type": "repository", "name": "BLACS", "full_name": "cbillington/blacs", "uuid": "{1ffc697c-0cdc-43c3-b124-343fa9d9cc95}"}, "branch": {"name": "feature"}}, "comment_count": 30, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2018-02-27T11:31:54.116211+00:00", "type": "participant", "approved": false, "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}}, {"role": "PARTICIPANT", "participated_on": "2017-08-18T11:57:01.017669+00:00", "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}}, {"role": "PARTICIPANT", "participated_on": "2017-06-17T03:18:46.734668+00:00", "type": "participant", "approved": false, "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}}, {"role": "REVIEWER", "participated_on": "2017-08-11T05:53:52.902125+00:00", "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"role": "REVIEWER", "participated_on": "2017-06-16T05:25:52.521503+00:00", "type": "participant", "approved": false, "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}}, {"role": "PARTICIPANT", "participated_on": "2018-02-27T12:42:07.379603+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}], "reason": "", "updated_on": "2018-02-27T12:42:07.438496+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "e034e96e504b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/blacs/commit/e034e96e504b.json"}, "html": {"href": "#!/labscript_suite/blacs/commits/e034e96e504b"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}