{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/43098339.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-43098339"}}, "parent": {"id": 43058625, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/43058625.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-43058625"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "Couple of additional points:\n\n* There is a long standing issue (#8) where the resolution involves turning the queue manager (and analysis submission) into a plugin (this also ties in with issue #13). I expect that `ExperimentServer` in `__main__.py` will also be relocated to this plugin. I expect that we'll make it easy for plugins to interact with each other (although this is nominally what `plugin_setup_complete` is for). This may not necessarily affect what you plan to do, but please consider whether it makes sense to intercept things in `process_request` or whether it makes more sense to have a separate `ZMQServer` listening for commands that resides within your plugin. If you do end up interacting with the existing `QueueManager` (or related) implementation, be aware that this may not always be available (if say someone replaces their future queue plugin with a different one - e.g. for secondary BLACS control systems when issue #13 gets completed).\n\n* Having your plugin create a tab is going to introduce a bunch of regressions in the save/restore of front panel state (which can even happen on menu trigger or at BLACS start) if the new tab is anywhere but the last tab (I suspect there will be more regressions if you have more than one \"custom tab\"). However it is definitely worth solving these as they'll pave the way for virtual devices to be implemented as a plugin (this is probably one of the biggest show stoppers for that feature)\n", "markup": "markdown", "html": "<p>Couple of additional points:</p>\n<ul>\n<li>\n<p>There is a long standing issue (<a href=\"#!/labscript_suite/blacs/issues/8/compile-and-restart-improvements-making\" rel=\"nofollow\" title=\"&#39;Compile and restart&#39; improvements - making sure it can happen when other things are borked\" class=\"ap-connect-link\"><s>#8</s></a>) where the resolution involves turning the queue manager (and analysis submission) into a plugin (this also ties in with issue <a href=\"#!/labscript_suite/blacs/issues/13/launch-blacs-as-a-secondary-control-system\" rel=\"nofollow\" title=\"Launch BLACS as a secondary control system\" class=\"ap-connect-link\">#13</a>). I expect that <code>ExperimentServer</code> in <code>__main__.py</code> will also be relocated to this plugin. I expect that we'll make it easy for plugins to interact with each other (although this is nominally what <code>plugin_setup_complete</code> is for). This may not necessarily affect what you plan to do, but please consider whether it makes sense to intercept things in <code>process_request</code> or whether it makes more sense to have a separate <code>ZMQServer</code> listening for commands that resides within your plugin. If you do end up interacting with the existing <code>QueueManager</code> (or related) implementation, be aware that this may not always be available (if say someone replaces their future queue plugin with a different one - e.g. for secondary BLACS control systems when issue <a href=\"#!/labscript_suite/blacs/issues/13/launch-blacs-as-a-secondary-control-system\" rel=\"nofollow\" title=\"Launch BLACS as a secondary control system\" class=\"ap-connect-link\">#13</a> gets completed).</p>\n</li>\n<li>\n<p>Having your plugin create a tab is going to introduce a bunch of regressions in the save/restore of front panel state (which can even happen on menu trigger or at BLACS start) if the new tab is anywhere but the last tab (I suspect there will be more regressions if you have more than one \"custom tab\"). However it is definitely worth solving these as they'll pave the way for virtual devices to be implemented as a plugin (this is probably one of the biggest show stoppers for that feature)</p>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2017-08-18T11:57:00.912010+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "updated_on": "2017-08-18T11:57:01.017669+00:00", "type": "pullrequest_comment", "id": 43098339}