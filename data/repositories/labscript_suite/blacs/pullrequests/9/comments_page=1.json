{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/38954890.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-38954890"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "A few questions, mostly just to understand how you guys are using this functionality over there:\n\n* How does lyse cope with shots being deleted once they've been loaded? Would it make sense to disable sending for analysis when in this mode? I imagine you might leave the experiment on repeat and wait for your atom number to stabilise, or the cloud to move to a particular position as the experiment warms up, so you'd probably want to send to lyse, do some fits, then plot the values you care about over time. In this case, it'd make more sense to let lyse do the deleting once it had finished with the h5 file and had the calculated quantities to plot stored in its dataframe.\n\n* Does this work in both repeat modes? Do you ever use it in \"repeat all\" mode, or just in repeat last? If used in \"repeat all\" mode, does it keep n copies of each individual file being repeated?\n\n* I assume that you often want to keep more than 1 (or 0?), otherwise it'd be easier to just have the option to simply repeat a single experiment and delete the file each time, which could just be a 3rd option in the dropdown.\n\n", "markup": "markdown", "html": "<p>A few questions, mostly just to understand how you guys are using this functionality over there:</p>\n<ul>\n<li>\n<p>How does lyse cope with shots being deleted once they've been loaded? Would it make sense to disable sending for analysis when in this mode? I imagine you might leave the experiment on repeat and wait for your atom number to stabilise, or the cloud to move to a particular position as the experiment warms up, so you'd probably want to send to lyse, do some fits, then plot the values you care about over time. In this case, it'd make more sense to let lyse do the deleting once it had finished with the h5 file and had the calculated quantities to plot stored in its dataframe.</p>\n</li>\n<li>\n<p>Does this work in both repeat modes? Do you ever use it in \"repeat all\" mode, or just in repeat last? If used in \"repeat all\" mode, does it keep n copies of each individual file being repeated?</p>\n</li>\n<li>\n<p>I assume that you often want to keep more than 1 (or 0?), otherwise it'd be easier to just have the option to simply repeat a single experiment and delete the file each time, which could just be a 3rd option in the dropdown.</p>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2017-06-16T04:31:09.826632+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-16T04:31:09.829405+00:00", "type": "pullrequest_comment", "id": 38954890}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/39025874.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-39025874"}}, "parent": {"id": 38954890, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/38954890.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-38954890"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "We often want to use lyse to look at the shots even when they are deleted so we have a monitor of number, for example.  But I don't like the idea of assuming that lyse is running to ensure the desired behavior.  ", "markup": "markdown", "html": "<p>We often want to use lyse to look at the shots even when they are deleted so we have a monitor of number, for example.  But I don't like the idea of assuming that lyse is running to ensure the desired behavior.  </p>", "type": "rendered"}, "created_on": "2017-06-17T02:51:28.019561+00:00", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}, "updated_on": "2017-06-17T02:51:28.021922+00:00", "type": "pullrequest_comment", "id": 39025874}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/38955770.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-38955770"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "- So as of a [recent pull request](#!/labscript_suite/lyse/pull-requests/10/make-lyse-handle-gracefully-shot-files/) (explicitly motivated by the need for this feature), lyse handles it well. However, JQI's current implementation doesn't handle it so well, this pull request is a re-implementation rather than a straight copy of it - the problem with JQI's current implementation is that it overwrites old shot files - just loops around the rep numbers and overwrites the files. There's basically no way for lyse to deal with that without insidious race conditions, so whilst lyse here was modified so that at least it wouldn't crash by itself, it would still crash if you ran single-shot analysis on old shots. The recent pull request makes lyse deal well with deleted shots so long as they have unique filenames still, which whilst incompatible with JQI's current implementation of shot deletion, should work well with this pull request's way of doing it, since the shot filenames are unique. You should check out that pull request if you want to know more about what lyse does there, but basically it will handle things well. Even if user code crashes due to file deletion (which is improbable - but not impossible - because lyse checks before running each analysis routine if the shot exists), lyse can see afterward that the shot no longer exists and that clearly the error doesn't matter, so it moves on without pausing. Shot data remains in the dataframe so that multishot analysis can still be done with deleted files.\n\n- It does work in both repeat modes. No, it doesn't keep n copies of each individual file, it keeps n shot files in total, regardless of whether they are reps from the same shot or not.\n\n- The idea of keeping a few shots is to leave time to run and re-run some single-shot analysis before the shots go poof. I did make zero the lowest option originally, but then the shots were deleted immediately and BLACS was unable to use them to make the next rep file, so it seems 1 is a sensible minimum. Whilst there are a small number of broad categories of behaviour people are likely to use at any one time: (keep not many, keep an intermediate amount, keep a lot), making extra GUI controls for any of those categories, when they could also be entered via the spinbox, might be more GUI clutter than it's worth.", "markup": "markdown", "html": "<ul>\n<li>\n<p>So as of a <a data-is-external-link=\"true\" href=\"#!/labscript_suite/lyse/pull-requests/10/make-lyse-handle-gracefully-shot-files/\" rel=\"nofollow\">recent pull request</a> (explicitly motivated by the need for this feature), lyse handles it well. However, JQI's current implementation doesn't handle it so well, this pull request is a re-implementation rather than a straight copy of it - the problem with JQI's current implementation is that it overwrites old shot files - just loops around the rep numbers and overwrites the files. There's basically no way for lyse to deal with that without insidious race conditions, so whilst lyse here was modified so that at least it wouldn't crash by itself, it would still crash if you ran single-shot analysis on old shots. The recent pull request makes lyse deal well with deleted shots so long as they have unique filenames still, which whilst incompatible with JQI's current implementation of shot deletion, should work well with this pull request's way of doing it, since the shot filenames are unique. You should check out that pull request if you want to know more about what lyse does there, but basically it will handle things well. Even if user code crashes due to file deletion (which is improbable - but not impossible - because lyse checks before running each analysis routine if the shot exists), lyse can see afterward that the shot no longer exists and that clearly the error doesn't matter, so it moves on without pausing. Shot data remains in the dataframe so that multishot analysis can still be done with deleted files.</p>\n</li>\n<li>\n<p>It does work in both repeat modes. No, it doesn't keep n copies of each individual file, it keeps n shot files in total, regardless of whether they are reps from the same shot or not.</p>\n</li>\n<li>\n<p>The idea of keeping a few shots is to leave time to run and re-run some single-shot analysis before the shots go poof. I did make zero the lowest option originally, but then the shots were deleted immediately and BLACS was unable to use them to make the next rep file, so it seems 1 is a sensible minimum. Whilst there are a small number of broad categories of behaviour people are likely to use at any one time: (keep not many, keep an intermediate amount, keep a lot), making extra GUI controls for any of those categories, when they could also be entered via the spinbox, might be more GUI clutter than it's worth.</p>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2017-06-16T05:03:25.030420+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-16T05:03:25.032956+00:00", "type": "pullrequest_comment", "id": 38955770}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/38956422.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-38956422"}}, "parent": {"id": 38955770, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/38955770.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-38955770"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "Ah, I hadn't seen that new feature in lyse, I'm running a version that is a couple of weeks behind\n\nTo me, it would make more sense to keep the last n repeats of each file, rather than n files in total. But I suppose that you are using this as more of a buffer to give lyse time to analyse files then it makes sense to just keep n shots in total. In this case, it really feels as though lyse should be the one deleting though.", "markup": "markdown", "html": "<p>Ah, I hadn't seen that new feature in lyse, I'm running a version that is a couple of weeks behind</p>\n<p>To me, it would make more sense to keep the last n repeats of each file, rather than n files in total. But I suppose that you are using this as more of a buffer to give lyse time to analyse files then it makes sense to just keep n shots in total. In this case, it really feels as though lyse should be the one deleting though.</p>", "type": "rendered"}, "created_on": "2017-06-16T05:25:52.519151+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-16T05:25:52.521503+00:00", "type": "pullrequest_comment", "id": 38956422}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/38956680.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-38956680"}}, "parent": {"id": 38956422, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/38956422.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-38956422"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "It's also about total hard drive space consumed - the way this patch works, if BLACS is in repeat-last mode and you are submitting shots to BLACS throughout the day, so long as you leave that \"keep n reps\" setting on all day, you'll only have n reps on disk by the end of the day, regardless of how many shots you submitted. Whereas if it keeps n per shot, then the number you have left at the end of the day scales roughly with the number of shots you submitted. Our repeated shots are almost always useless, so we'd really like to throw them all out. Keeping n per shot submitted means that once you stop repeating that shot, n will be left on disk and never deleted, wheres in the way this patch is implemented, all repeated shots eventually get deleted.\n\nSo yes, it's just about keeping a buffer to let you do whatever you like with the files, analyse them with lyse, decide you don't want to delete them after all, or whatever. But having BLACS do it ensures pretty reliable deletion (BLACS even saves the files queued for deletion upon restart). I would agree that it would be sort of natural for lyse to do the deletion, since it's at the end of the line, but having it done from BLACS is more reliable I think.", "markup": "markdown", "html": "<p>It's also about total hard drive space consumed - the way this patch works, if BLACS is in repeat-last mode and you are submitting shots to BLACS throughout the day, so long as you leave that \"keep n reps\" setting on all day, you'll only have n reps on disk by the end of the day, regardless of how many shots you submitted. Whereas if it keeps n per shot, then the number you have left at the end of the day scales roughly with the number of shots you submitted. Our repeated shots are almost always useless, so we'd really like to throw them all out. Keeping n per shot submitted means that once you stop repeating that shot, n will be left on disk and never deleted, wheres in the way this patch is implemented, all repeated shots eventually get deleted.</p>\n<p>So yes, it's just about keeping a buffer to let you do whatever you like with the files, analyse them with lyse, decide you don't want to delete them after all, or whatever. But having BLACS do it ensures pretty reliable deletion (BLACS even saves the files queued for deletion upon restart). I would agree that it would be sort of natural for lyse to do the deletion, since it's at the end of the line, but having it done from BLACS is more reliable I think.</p>", "type": "rendered"}, "created_on": "2017-06-16T05:35:25.507788+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-16T05:42:48.357694+00:00", "type": "pullrequest_comment", "id": 38956680}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/38955959.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-38955959"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "Just to add, I did think about lyse doing the deletion, but since lyse is not necessarily running and may be paused (possibly due to an unforeseen error) and not analysing shots, I figured it made less sense to make lyse delete shots \"after analysis\". \"after analysis\" may never come! And it's nice to make it sort of time-based so that you can always change your mind and keep some shots if lyse shows interesting results, which would mean we would want probably lyse to have some delay before deletion anyway, making it once again shot-number of time dependent. It seems that at JQI this works pretty well, so long as you don't accidentally crash lyse, which hopefully will not be an issue after the JQI labs get this patch.", "markup": "markdown", "html": "<p>Just to add, I did think about lyse doing the deletion, but since lyse is not necessarily running and may be paused (possibly due to an unforeseen error) and not analysing shots, I figured it made less sense to make lyse delete shots \"after analysis\". \"after analysis\" may never come! And it's nice to make it sort of time-based so that you can always change your mind and keep some shots if lyse shows interesting results, which would mean we would want probably lyse to have some delay before deletion anyway, making it once again shot-number of time dependent. It seems that at JQI this works pretty well, so long as you don't accidentally crash lyse, which hopefully will not be an issue after the JQI labs get this patch.</p>", "type": "rendered"}, "created_on": "2017-06-16T05:09:55.949056+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-16T05:10:24.347211+00:00", "type": "pullrequest_comment", "id": 38955959}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/38956109.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-38956109"}}, "parent": {"id": 38955959, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/38955959.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-38955959"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "Ah, OK, I was going to say that it'd be much simpler to write a single-shot analysis script which deletes the h5 file, and set it to run last. That way, each shot would go into lyse, have its single-shot routines done (e.g. fit to get atom number), results are saved in the dataframe, then the h5 file is deleted. Multi-shot routines can then continue plotting that atom number as you repeat the experiment. But I guess if you don't have lyse running or it's paused/crashed then this doesn't work (though at least in the case of it being paused it will then still go through and analyse & delete each shot).", "markup": "markdown", "html": "<p>Ah, OK, I was going to say that it'd be much simpler to write a single-shot analysis script which deletes the h5 file, and set it to run last. That way, each shot would go into lyse, have its single-shot routines done (e.g. fit to get atom number), results are saved in the dataframe, then the h5 file is deleted. Multi-shot routines can then continue plotting that atom number as you repeat the experiment. But I guess if you don't have lyse running or it's paused/crashed then this doesn't work (though at least in the case of it being paused it will then still go through and analyse &amp; delete each shot).</p>", "type": "rendered"}, "created_on": "2017-06-16T05:15:38.767110+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-16T05:15:38.770735+00:00", "type": "pullrequest_comment", "id": 38956109}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/39025427.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-39025427"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "Any chance of including a GUI for enabling/disabling plugins as part of this pull request? That way this plugin could default to \"disabled\" so it doesn't change the default look of the interface for everyone currently using BLACS who doesn't need this feature (I would also like to disable the memory profiler plugin by default too). That would also allow Shaun to make a pull request for his labwatch plugin that is just sitting in a branch at the moment.\n\nSorry to be a pain, but I figured I'd raise it here since it's the first pull request with a plugin :P \n\nI'm thinking just a basic page in the preferences menu that allows you to tick/untick plugin names that are autogenerated from the folder names in much the same way that plugins are found and instantiated now.", "markup": "markdown", "html": "<p>Any chance of including a GUI for enabling/disabling plugins as part of this pull request? That way this plugin could default to \"disabled\" so it doesn't change the default look of the interface for everyone currently using BLACS who doesn't need this feature (I would also like to disable the memory profiler plugin by default too). That would also allow Shaun to make a pull request for his labwatch plugin that is just sitting in a branch at the moment.</p>\n<p>Sorry to be a pain, but I figured I'd raise it here since it's the first pull request with a plugin :P </p>\n<p>I'm thinking just a basic page in the preferences menu that allows you to tick/untick plugin names that are autogenerated from the folder names in much the same way that plugins are found and instantiated now.</p>", "type": "rendered"}, "created_on": "2017-06-17T01:31:30.484027+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-06-17T01:31:30.486167+00:00", "type": "pullrequest_comment", "id": 39025427}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/39025463.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-39025463"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "Yeah that sounds great! I'm happy to do that, it's something BLACS should have anyway. I might make that a separate pull request, this one can be merged once it's done. I'll also strip out adding a widget for this plugin to the main UI file - the plugin itself can be responsible for inserting itself into a sensible place in the GUI without having a space explicitly set aside for it.", "markup": "markdown", "html": "<p>Yeah that sounds great! I'm happy to do that, it's something BLACS should have anyway. I might make that a separate pull request, this one can be merged once it's done. I'll also strip out adding a widget for this plugin to the main UI file - the plugin itself can be responsible for inserting itself into a sensible place in the GUI without having a space explicitly set aside for it.</p>", "type": "rendered"}, "created_on": "2017-06-17T01:36:52.512564+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-17T01:36:52.514808+00:00", "type": "pullrequest_comment", "id": 39025463}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/39025939.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-39025939"}}, "parent": {"id": 39025463, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/39025463.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-39025463"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "I'd suggest the plugin manager goes in labscript_utils so it can be re-used by runmanager, lyse, runviewer in the future if we decide it's a good idea (the preferences panel code should already be in labscript_utils anyway I think)", "markup": "markdown", "html": "<p>I'd suggest the plugin manager goes in labscript_utils so it can be re-used by runmanager, lyse, runviewer in the future if we decide it's a good idea (the preferences panel code should already be in labscript_utils anyway I think)</p>", "type": "rendered"}, "created_on": "2017-06-17T03:08:10.637941+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-06-17T03:08:10.640105+00:00", "type": "pullrequest_comment", "id": 39025939}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/39025905.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-39025905"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "I hate to be a stinker on this matter, but I am not sure about the use of plug-ins for things that seem like core features.  For these features the GUI must considered with care and will will be poorly constructed either with the plugin present or absent, depending.  Of course I could be convinced otherwise in specific cases, but the gui image Chris has posted is a great example of a cluttered looking gui.  My general finding is that adding a few features in many/most cases (except for things like toolbars) requires fairly significant redo's of a GUI to make it workable and intuitive.", "markup": "markdown", "html": "<p>I hate to be a stinker on this matter, but I am not sure about the use of plug-ins for things that seem like core features.  For these features the GUI must considered with care and will will be poorly constructed either with the plugin present or absent, depending.  Of course I could be convinced otherwise in specific cases, but the gui image Chris has posted is a great example of a cluttered looking gui.  My general finding is that adding a few features in many/most cases (except for things like toolbars) requires fairly significant redo's of a GUI to make it workable and intuitive.</p>", "type": "rendered"}, "created_on": "2017-06-17T02:58:53.882388+00:00", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}, "updated_on": "2017-06-17T02:58:53.884824+00:00", "type": "pullrequest_comment", "id": 39025905}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/39025930.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-39025930"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "Well, that's where I was going to put it whether it was an optional feature or not. What would be a better way for configuring shot deletion to fit into the GUI (irrespective of whether it's a plugin) in your opinion? I admit I didn't put a super amount of thought into its placement - I was mostly trying to balance making it describe what it does without taking up much space.", "markup": "markdown", "html": "<p>Well, that's where I was going to put it whether it was an optional feature or not. What would be a better way for configuring shot deletion to fit into the GUI (irrespective of whether it's a plugin) in your opinion? I admit I didn't put a super amount of thought into its placement - I was mostly trying to balance making it describe what it does without taking up much space.</p>", "type": "rendered"}, "created_on": "2017-06-17T03:06:22.465884+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-17T03:06:22.468431+00:00", "type": "pullrequest_comment", "id": 39025930}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/39025977.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-39025977"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "As you will discover when you write papers with me I am very carful about visual placement, so issues of alignment, organization of like items, and such are important to me.  I would honestly enjoy debating the GUI arrangement, but since it will be a holistic evaluation of the whole GUI (how all thing are placed in relation to all other things), I just don't understand how we can have such a discussion to decide on all the set of all arrangements that will be allowed when users can make random interface elements appear or vanish. \n\nA lesson from MS over the years is that user configurable GUI's are a very very bad plan (think of toolbar chaos in 200x versions of office tools), and that the right approach is a careful design that exposes all the features present in the software.", "markup": "markdown", "html": "<p>As you will discover when you write papers with me I am very carful about visual placement, so issues of alignment, organization of like items, and such are important to me.  I would honestly enjoy debating the GUI arrangement, but since it will be a holistic evaluation of the whole GUI (how all thing are placed in relation to all other things), I just don't understand how we can have such a discussion to decide on all the set of all arrangements that will be allowed when users can make random interface elements appear or vanish. </p>\n<p>A lesson from MS over the years is that user configurable GUI's are a very very bad plan (think of toolbar chaos in 200x versions of office tools), and that the right approach is a careful design that exposes all the features present in the software.</p>", "type": "rendered"}, "created_on": "2017-06-17T03:18:46.732439+00:00", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}, "updated_on": "2017-06-17T03:18:46.734668+00:00", "type": "pullrequest_comment", "id": 39025977}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/39026112.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-39026112"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "I am sympathetic to that - I think some plugin functionality being enablable and disablable makes sense and doesn't introduce GUI clutter if a plugin just adds a button to a toolbar or an entry to a menu. But this shot deletion functionality, since you want to be able to see what it's set to when you're running experiments, it can't be hidden away in a menu or controlled with just a tool button.\n\nI'm also sympathetic to it being core functionality. There seem to be more experiments out there that need to be kept warm than don't. However, the plugin architecture is a good way of keeping the code well separated though, so even if something is \"core\" it can still be implemented in code mostly as a plugin even if the GUI is designed to have its controls in a specific place with the assumption that they will always be there. Though BLACS' plugin interface is simple enough that this argument is not that much different from just saying that code should be separated into components in a logical way that minimises coupling, which projects ought to do whether they call the components \"plugins\" or not.", "markup": "markdown", "html": "<p>I am sympathetic to that - I think some plugin functionality being enablable and disablable makes sense and doesn't introduce GUI clutter if a plugin just adds a button to a toolbar or an entry to a menu. But this shot deletion functionality, since you want to be able to see what it's set to when you're running experiments, it can't be hidden away in a menu or controlled with just a tool button.</p>\n<p>I'm also sympathetic to it being core functionality. There seem to be more experiments out there that need to be kept warm than don't. However, the plugin architecture is a good way of keeping the code well separated though, so even if something is \"core\" it can still be implemented in code mostly as a plugin even if the GUI is designed to have its controls in a specific place with the assumption that they will always be there. Though BLACS' plugin interface is simple enough that this argument is not that much different from just saying that code should be separated into components in a logical way that minimises coupling, which projects ought to do whether they call the components \"plugins\" or not.</p>", "type": "rendered"}, "created_on": "2017-06-17T04:08:10.972373+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-17T04:08:10.975606+00:00", "type": "pullrequest_comment", "id": 39026112}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/42144910.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-42144910"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "What is keeping this pull request from merging? (there hasn't been activity for about 2 months)\nThe code seems fine. I'm asking because I'm thinking about adding it in our lab (replacing a feature thats doing similar things but is more hacky) and don't want things to break.", "markup": "markdown", "html": "<p>What is keeping this pull request from merging? (there hasn't been activity for about 2 months)\nThe code seems fine. I'm asking because I'm thinking about adding it in our lab (replacing a feature thats doing similar things but is more hacky) and don't want things to break.</p>", "type": "rendered"}, "created_on": "2017-08-03T21:04:29.292358+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-03T21:04:29.338629+00:00", "type": "pullrequest_comment", "id": 42144910}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/42145530.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-42145530"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "We were only going to merge once there was the ability to turn plugins on and off with a GUI - which  I was going to work on next but have been distracted with PyQt5 and Python3 :p. I'm sympathetic to merging it sooner, if there's demand, but I don't mind myself because the labs here are using a fork with a similar feature (also more hacky), and they won't switch to mainline until I get a few more features into mainline that the experiments rely on anyway. So for us there is no hurry until I get those few other features in.", "markup": "markdown", "html": "<p>We were only going to merge once there was the ability to turn plugins on and off with a GUI - which  I was going to work on next but have been distracted with PyQt5 and Python3 :p. I'm sympathetic to merging it sooner, if there's demand, but I don't mind myself because the labs here are using a fork with a similar feature (also more hacky), and they won't switch to mainline until I get a few more features into mainline that the experiments rely on anyway. So for us there is no hurry until I get those few other features in.</p>", "type": "rendered"}, "created_on": "2017-08-03T21:14:05.297416+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-03T21:14:05.301171+00:00", "type": "pullrequest_comment", "id": 42145530}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/42146263.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-42146263"}}, "parent": {"id": 42145530, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/42145530.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-42145530"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "Ok got it, thanks! I guess sticking to the hacky approches isn't too bad for now. And sorry for derailing you with my Python3 enthusiasm. ;)  \n\nI'm currently trying to make our line of labscript converge rather than doing a switch. Replacing hacky features with more clean implementations and then adding them here as well. There are at least 5 more features on my todo list to add to the mainline. ", "markup": "markdown", "html": "<p>Ok got it, thanks! I guess sticking to the hacky approches isn't too bad for now. And sorry for derailing you with my Python3 enthusiasm. ;)  </p>\n<p>I'm currently trying to make our line of labscript converge rather than doing a switch. Replacing hacky features with more clean implementations and then adding them here as well. There are at least 5 more features on my todo list to add to the mainline. </p>", "type": "rendered"}, "created_on": "2017-08-03T21:25:05.963537+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-03T21:25:06.030308+00:00", "type": "pullrequest_comment", "id": 42146263}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/42627214.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-42627214"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "Ian proposed that the plugin enablement/disablement be set in labconfig. We already have some app settings in labconfig, and configparser allows for this multiline syntax:\n\n\n```\n#!ini\n\n\n[blacs]\nplugins:\n    foo\n    # bar\n    baz\n```\nWhich results in:\n\n```\n#!python\n\n>>> LabConfig().get('blacs', 'plugins')\nu'\\nfoo\\nbaz'\n```\nwhich is a newline delimited list of values (spurious newline at the start but we should ignore whitespace in it anyway) with commented-out lines not returned. This way a fresh labconfig file from the installer can come with a list of all the plugins, but commented out, or possibly sanctioned 'core' plugins uncommented.\n\nHow does this sound? A GUI is easy to whip up as well but  I think I prefer this. It's how mercurial plugins are enabled and disabled for example, though tortoisehg wraps a GUI full of checkboxes around actually editing the file, and it uses this syntax instead (still configparser I assume):\n\n\n```\n#!ini\n\n[extensions]\nconvert = \nmq =\nchurn = \nhgext.bookmarks =\ngit =\ncolor =\n\n```\n", "markup": "markdown", "html": "<p>Ian proposed that the plugin enablement/disablement be set in labconfig. We already have some app settings in labconfig, and configparser allows for this multiline syntax:</p>\n<div class=\"codehilite language-ini\"><pre><span></span><span class=\"k\">[blacs]</span>\n<span class=\"na\">plugins:</span>\n    <span class=\"na\">foo</span>\n    <span class=\"c1\"># bar</span>\n    <span class=\"na\">baz</span>\n</pre></div>\n\n\n<p>Which results in:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">LabConfig</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;blacs&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;plugins&#39;</span><span class=\"p\">)</span>\n<span class=\"sa\">u</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">foo</span><span class=\"se\">\\n</span><span class=\"s1\">baz&#39;</span>\n</pre></div>\n\n\n<p>which is a newline delimited list of values (spurious newline at the start but we should ignore whitespace in it anyway) with commented-out lines not returned. This way a fresh labconfig file from the installer can come with a list of all the plugins, but commented out, or possibly sanctioned 'core' plugins uncommented.</p>\n<p>How does this sound? A GUI is easy to whip up as well but  I think I prefer this. It's how mercurial plugins are enabled and disabled for example, though tortoisehg wraps a GUI full of checkboxes around actually editing the file, and it uses this syntax instead (still configparser I assume):</p>\n<div class=\"codehilite language-ini\"><pre><span></span><span class=\"k\">[extensions]</span>\n<span class=\"na\">convert</span> <span class=\"o\">=</span> \n<span class=\"na\">mq</span> <span class=\"o\">=</span>\n<span class=\"na\">churn</span> <span class=\"o\">=</span> \n<span class=\"na\">hgext.bookmarks</span> <span class=\"o\">=</span>\n<span class=\"na\">git</span> <span class=\"o\">=</span>\n<span class=\"na\">color</span> <span class=\"o\">=</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-08-11T04:24:24.744398+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-11T04:28:01.701859+00:00", "type": "pullrequest_comment", "id": 42627214}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/42629650.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-42629650"}}, "parent": {"id": 42627214, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/42627214.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-42627214"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "Should it not be stored in the .ini config file for the application? I suppose that leads to dynamic lead/unload of plugins which is awful and also BLACS has a h5 file not a .ini file....so maybe labconfig is fine! Hmm...not sure. Modifying the labconfig file from a BLACS settings page doesn't really fit the model we currently have (the `Settings` class in labscript_utils was designed to abstract away the saving/loading of things like this into the BLACS hdf5 file (and was written so it should be easily extensible to .ini files). Might need to think about it some more...maybe we need a consistent set of rules for what is in lab config, what is in app config (and where that is saved on the HDD) and what is stored in a user loadable config during runtime (and where that is saved on the HDD).\n\nAnyway, I kind of like the hg syntax a bit more, except we could just explicitly put True/False after the equals. And you can have subgroups right(?) by doing `[blacs/plugins]` so it's still a reasonable hierarchy I think.", "markup": "markdown", "html": "<p>Should it not be stored in the .ini config file for the application? I suppose that leads to dynamic lead/unload of plugins which is awful and also BLACS has a h5 file not a .ini file....so maybe labconfig is fine! Hmm...not sure. Modifying the labconfig file from a BLACS settings page doesn't really fit the model we currently have (the <code>Settings</code> class in labscript_utils was designed to abstract away the saving/loading of things like this into the BLACS hdf5 file (and was written so it should be easily extensible to .ini files). Might need to think about it some more...maybe we need a consistent set of rules for what is in lab config, what is in app config (and where that is saved on the HDD) and what is stored in a user loadable config during runtime (and where that is saved on the HDD).</p>\n<p>Anyway, I kind of like the hg syntax a bit more, except we could just explicitly put True/False after the equals. And you can have subgroups right(?) by doing <code>[blacs/plugins]</code> so it's still a reasonable hierarchy I think.</p>", "type": "rendered"}, "created_on": "2017-08-11T05:53:52.899641+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-08-11T05:53:52.902125+00:00", "type": "pullrequest_comment", "id": 42629650}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/42630815.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-42630815"}}, "parent": {"id": 42629650, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/42629650.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-42629650"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "I would say we use a ini file call it ```plugins.ini``` and put it in the blacs app config folder using the newly created ```app_saved_configs```. From what we discussed over at the lyse pull request this is the place to put it as it is a app specific thing.\n\nAnd I think the same way that @pstarkey does about the syntax for it to be user editable there should be True and False values attached to the keys.", "markup": "markdown", "html": "<p>I would say we use a ini file call it <code>plugins.ini</code> and put it in the blacs app config folder using the newly created <code>app_saved_configs</code>. From what we discussed over at the lyse pull request this is the place to put it as it is a app specific thing.</p>\n<p>And I think the same way that @pstarkey does about the syntax for it to be user editable there should be True and False values attached to the keys.</p>", "type": "rendered"}, "created_on": "2017-08-11T06:25:12.081061+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-11T06:25:31.479741+00:00", "type": "pullrequest_comment", "id": 42630815}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/42678086.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-42678086"}}, "parent": {"id": 42629650, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/42629650.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-42629650"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "So far the separation I've been mentally using is that:\n\nThe app configs are for things that can be changed in the GUI while the app is running, and can be saved and loaded, and are not designed to be user-editable in a text editor (even though they are .ini files, apps are free to store settings in a format that might not be particularly conducive to a human actually looking at - like we make no effort to logically group things into categories or format things particularly nicely - runmanager's list of strings that it's saved all have `u''` prefixes on them, etc), rather they are programatically written and any human readability is a bonus. So it's fine that BLACS uses a .h5 file in this regard. Apps may want to store binary data in this files at some point - the .ini format might not be conducive to that and apps should feel free to change their saved configuration file format as they like.\n\nLabconfig is for things that are more permenent, likely require app restarts to take effect, and are human-written. It's to be formatted in a sensible way into logical sections because humans are interacting with it. It can't be saved and loaded easily, but since it's not expected to change often, putting it under version control is the intended mechanism of \"saving and loading\" different configurations - though it's unlikely you'll need to do this, in general.\n\nSo I don't think the per-app settings belong in the saved configs. If they don't belong in labconfig, they belong in separate config files for each app. But I see little difference between having multiple config files vs multiple sections in a single config file. It is also possible that certain extensions will require components in multiple programs, in which case the settings will be coupled - there will either have to be a \"general plugins\" section for turning on and off behaviour labscript-suite-wide, or both apps would have to have their corresponding part of the plugin enabled. So it's appealing to me to have it all in once place.\n\nI agree that I don't like the idea of apps editing the labconfig file - it should be human editable only. I would probably vote to just not add GUIs to the apps for editing the list of plugins. If we like we could make a general \"labconfig\" GUI specifically for editing labconfig, with a tabbled GUI for editing the different sections, and it could have sole permission to edit the labconfig file, and there could be shortcuts to it from the menus of all the programs. But I would probably argue that the best GUI for this is a text editor, and that if an \"edit labconfig\" shortcut is added to the menus it should just launch your text editor the same as when you click \"edit connection table\".\n\nI like the \"plugin=True\" syntax: True means enabled, False or absent/commented out means not enabled. I didn't think hierarchical sections were possible and so I was looking for something else, but the `[blacs/plugins]` way of making 'hierarchies' seems good to me. \n\nconfigparser ignores indentation so we can make the sections visibly hierarchical (at least in the default labconfig at install time):\n\n```\n#!ini\n[blacs]\n    [blacs/plugins]\n        delete-repeated-shots = True\n```\n\n```\n#!python\n>>> LabConfig().get('blacs/plugins', 'delete-repeated-shots')\nu'True'\n```\n\nMy experience with mercurial plugins is that you settle on what set is required for the type of work you're doing and then you never change them again. So I think that well suits using labconfig for it. If there are things about plugins that you want to change while the app is running, it should be a setting within the plugin itself that the plugin provides a GUI for changing - and which it saves to the app's saved config file the way BLACs currently saves and loads the data for its plugins.", "markup": "markdown", "html": "<p>So far the separation I've been mentally using is that:</p>\n<p>The app configs are for things that can be changed in the GUI while the app is running, and can be saved and loaded, and are not designed to be user-editable in a text editor (even though they are .ini files, apps are free to store settings in a format that might not be particularly conducive to a human actually looking at - like we make no effort to logically group things into categories or format things particularly nicely - runmanager's list of strings that it's saved all have <code>u''</code> prefixes on them, etc), rather they are programatically written and any human readability is a bonus. So it's fine that BLACS uses a .h5 file in this regard. Apps may want to store binary data in this files at some point - the .ini format might not be conducive to that and apps should feel free to change their saved configuration file format as they like.</p>\n<p>Labconfig is for things that are more permenent, likely require app restarts to take effect, and are human-written. It's to be formatted in a sensible way into logical sections because humans are interacting with it. It can't be saved and loaded easily, but since it's not expected to change often, putting it under version control is the intended mechanism of \"saving and loading\" different configurations - though it's unlikely you'll need to do this, in general.</p>\n<p>So I don't think the per-app settings belong in the saved configs. If they don't belong in labconfig, they belong in separate config files for each app. But I see little difference between having multiple config files vs multiple sections in a single config file. It is also possible that certain extensions will require components in multiple programs, in which case the settings will be coupled - there will either have to be a \"general plugins\" section for turning on and off behaviour labscript-suite-wide, or both apps would have to have their corresponding part of the plugin enabled. So it's appealing to me to have it all in once place.</p>\n<p>I agree that I don't like the idea of apps editing the labconfig file - it should be human editable only. I would probably vote to just not add GUIs to the apps for editing the list of plugins. If we like we could make a general \"labconfig\" GUI specifically for editing labconfig, with a tabbled GUI for editing the different sections, and it could have sole permission to edit the labconfig file, and there could be shortcuts to it from the menus of all the programs. But I would probably argue that the best GUI for this is a text editor, and that if an \"edit labconfig\" shortcut is added to the menus it should just launch your text editor the same as when you click \"edit connection table\".</p>\n<p>I like the \"plugin=True\" syntax: True means enabled, False or absent/commented out means not enabled. I didn't think hierarchical sections were possible and so I was looking for something else, but the <code>[blacs/plugins]</code> way of making 'hierarchies' seems good to me. </p>\n<p>configparser ignores indentation so we can make the sections visibly hierarchical (at least in the default labconfig at install time):</p>\n<div class=\"codehilite language-ini\"><pre><span></span><span class=\"k\">[blacs]</span>\n    <span class=\"k\">[blacs/plugins]</span>\n        <span class=\"na\">delete-repeated-shots</span> <span class=\"o\">=</span> <span class=\"s\">True</span>\n</pre></div>\n\n\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">LabConfig</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;blacs/plugins&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;delete-repeated-shots&#39;</span><span class=\"p\">)</span>\n<span class=\"sa\">u</span><span class=\"s1\">&#39;True&#39;</span>\n</pre></div>\n\n\n<p>My experience with mercurial plugins is that you settle on what set is required for the type of work you're doing and then you never change them again. So I think that well suits using labconfig for it. If there are things about plugins that you want to change while the app is running, it should be a setting within the plugin itself that the plugin provides a GUI for changing - and which it saves to the app's saved config file the way BLACs currently saves and loads the data for its plugins.</p>", "type": "rendered"}, "created_on": "2017-08-11T16:14:48.680772+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-11T16:14:48.684088+00:00", "type": "pullrequest_comment", "id": 42678086}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/43058625.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-43058625"}}, "parent": {"id": 42678086, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/42678086.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-42678086"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "You made good points for no GUI and putting plugins into labconfig. I still think a GUI would be nice, but we could add that at any time in the future.\n\nunrelated questions about plugins:\n\n* Is there a easy way to make a plugin create a 'device tab'?\n\n* I'm currently playing around with the plugins and I would like to have callbacks (as filters) in 'process_request'. This would allow for filtering of commands being send to BLACS server to be processed in a corresponding plugin as well as doing things with incoming files (like [progress bars](#!/PhyNerd/blacs/branch/Progressbar-Plugin#diff)). Is this type of callback something that has a chance of being approved and merged?", "markup": "markdown", "html": "<p>You made good points for no GUI and putting plugins into labconfig. I still think a GUI would be nice, but we could add that at any time in the future.</p>\n<p>unrelated questions about plugins:</p>\n<ul>\n<li>\n<p>Is there a easy way to make a plugin create a 'device tab'?</p>\n</li>\n<li>\n<p>I'm currently playing around with the plugins and I would like to have callbacks (as filters) in 'process_request'. This would allow for filtering of commands being send to BLACS server to be processed in a corresponding plugin as well as doing things with incoming files (like <a data-is-external-link=\"true\" href=\"#!/PhyNerd/blacs/branch/Progressbar-Plugin#diff\" rel=\"nofollow\">progress bars</a>). Is this type of callback something that has a chance of being approved and merged?</p>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2017-08-17T22:28:37.549259+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-17T22:28:37.607949+00:00", "type": "pullrequest_comment", "id": 43058625}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/43068423.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-43068423"}}, "parent": {"id": 43058625, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/43058625.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-43058625"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "So you could make a tab, but it wouldn't be a 'device' tab, and BLACS would not remember where it is located and might get confused if it is ever looping over tabs - which I'm not sure it does. So the only breakage if you tried to insert a tab into the GUI might be that the tab would always end up in the same place after a BLACS restart - though you could definitely make your plugin remember what tab widget it was in and move it.\n\nTo create a tab, you would have your plugin grab the BLACS instance that gets passed into it in `plugin_setup_complete()` (this is the main class of BLACS), and find a tabWidget in its GUI - I think they're at `BLACS.tab_widgets[i]` where i is 0, 1, 2, 3, and call the appropriate Qt method to insert a tab of your own into the widget. This might not be a bad way for a plugin to present a somewhat permanent interface if that's what you're going for (rather than something that only pops up when you access a menu item). There might be some undesirable interaction if BLACS is making assumptions about all the tabs being devices - I'm not sure if it is, but testing would reveal if there are any problems and any assumption-making code could be modified to allow for some tabs to not be device tabs. Probably give your tab an icon so that it is visibly not a device!\n\nAdding callbacks wherever plugins might plausibly want them is totally fine - we have so far just been adding callbacks as needed. Keep in mind that you can interact with other parts of the code directly too - you could access the TreeView for the queue (again via the BLACS instance - everything in the whole app is ultimately in there somewhere) and connect to some signal of it to detect when a shot was added, or something like that too. Sticking to our callbacks is clean, and is to be preferred though, whereas interacting directly with other stuff makes your plugin liable to break if those things change.", "markup": "markdown", "html": "<p>So you could make a tab, but it wouldn't be a 'device' tab, and BLACS would not remember where it is located and might get confused if it is ever looping over tabs - which I'm not sure it does. So the only breakage if you tried to insert a tab into the GUI might be that the tab would always end up in the same place after a BLACS restart - though you could definitely make your plugin remember what tab widget it was in and move it.</p>\n<p>To create a tab, you would have your plugin grab the BLACS instance that gets passed into it in <code>plugin_setup_complete()</code> (this is the main class of BLACS), and find a tabWidget in its GUI - I think they're at <code>BLACS.tab_widgets[i]</code> where i is 0, 1, 2, 3, and call the appropriate Qt method to insert a tab of your own into the widget. This might not be a bad way for a plugin to present a somewhat permanent interface if that's what you're going for (rather than something that only pops up when you access a menu item). There might be some undesirable interaction if BLACS is making assumptions about all the tabs being devices - I'm not sure if it is, but testing would reveal if there are any problems and any assumption-making code could be modified to allow for some tabs to not be device tabs. Probably give your tab an icon so that it is visibly not a device!</p>\n<p>Adding callbacks wherever plugins might plausibly want them is totally fine - we have so far just been adding callbacks as needed. Keep in mind that you can interact with other parts of the code directly too - you could access the TreeView for the queue (again via the BLACS instance - everything in the whole app is ultimately in there somewhere) and connect to some signal of it to detect when a shot was added, or something like that too. Sticking to our callbacks is clean, and is to be preferred though, whereas interacting directly with other stuff makes your plugin liable to break if those things change.</p>", "type": "rendered"}, "created_on": "2017-08-18T04:24:08.901875+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-18T04:24:08.905280+00:00", "type": "pullrequest_comment", "id": 43068423}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/43098339.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-43098339"}}, "parent": {"id": 43058625, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/43058625.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-43058625"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "Couple of additional points:\n\n* There is a long standing issue (#8) where the resolution involves turning the queue manager (and analysis submission) into a plugin (this also ties in with issue #13). I expect that `ExperimentServer` in `__main__.py` will also be relocated to this plugin. I expect that we'll make it easy for plugins to interact with each other (although this is nominally what `plugin_setup_complete` is for). This may not necessarily affect what you plan to do, but please consider whether it makes sense to intercept things in `process_request` or whether it makes more sense to have a separate `ZMQServer` listening for commands that resides within your plugin. If you do end up interacting with the existing `QueueManager` (or related) implementation, be aware that this may not always be available (if say someone replaces their future queue plugin with a different one - e.g. for secondary BLACS control systems when issue #13 gets completed).\n\n* Having your plugin create a tab is going to introduce a bunch of regressions in the save/restore of front panel state (which can even happen on menu trigger or at BLACS start) if the new tab is anywhere but the last tab (I suspect there will be more regressions if you have more than one \"custom tab\"). However it is definitely worth solving these as they'll pave the way for virtual devices to be implemented as a plugin (this is probably one of the biggest show stoppers for that feature)\n", "markup": "markdown", "html": "<p>Couple of additional points:</p>\n<ul>\n<li>\n<p>There is a long standing issue (<a href=\"#!/labscript_suite/blacs/issues/8/compile-and-restart-improvements-making\" rel=\"nofollow\" title=\"&#39;Compile and restart&#39; improvements - making sure it can happen when other things are borked\" class=\"ap-connect-link\"><s>#8</s></a>) where the resolution involves turning the queue manager (and analysis submission) into a plugin (this also ties in with issue <a href=\"#!/labscript_suite/blacs/issues/13/launch-blacs-as-a-secondary-control-system\" rel=\"nofollow\" title=\"Launch BLACS as a secondary control system\" class=\"ap-connect-link\">#13</a>). I expect that <code>ExperimentServer</code> in <code>__main__.py</code> will also be relocated to this plugin. I expect that we'll make it easy for plugins to interact with each other (although this is nominally what <code>plugin_setup_complete</code> is for). This may not necessarily affect what you plan to do, but please consider whether it makes sense to intercept things in <code>process_request</code> or whether it makes more sense to have a separate <code>ZMQServer</code> listening for commands that resides within your plugin. If you do end up interacting with the existing <code>QueueManager</code> (or related) implementation, be aware that this may not always be available (if say someone replaces their future queue plugin with a different one - e.g. for secondary BLACS control systems when issue <a href=\"#!/labscript_suite/blacs/issues/13/launch-blacs-as-a-secondary-control-system\" rel=\"nofollow\" title=\"Launch BLACS as a secondary control system\" class=\"ap-connect-link\">#13</a> gets completed).</p>\n</li>\n<li>\n<p>Having your plugin create a tab is going to introduce a bunch of regressions in the save/restore of front panel state (which can even happen on menu trigger or at BLACS start) if the new tab is anywhere but the last tab (I suspect there will be more regressions if you have more than one \"custom tab\"). However it is definitely worth solving these as they'll pave the way for virtual devices to be implemented as a plugin (this is probably one of the biggest show stoppers for that feature)</p>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2017-08-18T11:57:00.912010+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "updated_on": "2017-08-18T11:57:01.017669+00:00", "type": "pullrequest_comment", "id": 43098339}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/43099313.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-43099313"}}, "parent": {"id": 43098339, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/43098339.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-43098339"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "First of all thank you both for your comprehensive answers.\n\n* I'm no fan of the overhead of another server if there already is a server running (ports being blocked, thread started etc.). So I'd really much like to see the possibility to have plugins interact with the server. Adding that stuff in ```process_request``` was more problems then it was worth, so I'll probably do something different or start off with another server. But for the future this is something that might make sense.\n\n* Mh I'll look into getting things working with plugin tabs when I'm done with familiarizing with plugins if no one beats me to it.", "markup": "markdown", "html": "<p>First of all thank you both for your comprehensive answers.</p>\n<ul>\n<li>\n<p>I'm no fan of the overhead of another server if there already is a server running (ports being blocked, thread started etc.). So I'd really much like to see the possibility to have plugins interact with the server. Adding that stuff in <code>process_request</code> was more problems then it was worth, so I'll probably do something different or start off with another server. But for the future this is something that might make sense.</p>\n</li>\n<li>\n<p>Mh I'll look into getting things working with plugin tabs when I'm done with familiarizing with plugins if no one beats me to it.</p>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2017-08-18T12:09:26.261007+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-18T12:09:26.320044+00:00", "type": "pullrequest_comment", "id": 43099313}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/43080694.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-43080694"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "The ```manage()``` function in which this plugin would run is run in a thread you might want to wrap all your Qt calls in  ```inmain()``` or add some inmain decorators.\nAlso you might want to change the Qt imports to qtutils 2 or remove them I don't see why you would need them.", "markup": "markdown", "html": "<p>The <code>manage()</code> function in which this plugin would run is run in a thread you might want to wrap all your Qt calls in  <code>inmain()</code> or add some inmain decorators.\nAlso you might want to change the Qt imports to qtutils 2 or remove them I don't see why you would need them.</p>", "type": "rendered"}, "created_on": "2017-08-18T08:14:20.171359+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-18T08:49:08.265472+00:00", "type": "pullrequest_comment", "id": 43080694}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/43099190.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-43099190"}}, "parent": {"id": 43080694, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/43080694.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-43080694"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "Yep, the Qt4 imports can go.\n\nThe callback called from the queue doesn't touch the GUI, so no inmain() required there, and the other methods that do touch the GUI are already in the main thread, so that's all good.", "markup": "markdown", "html": "<p>Yep, the Qt4 imports can go.</p>\n<p>The callback called from the queue doesn't touch the GUI, so no inmain() required there, and the other methods that do touch the GUI are already in the main thread, so that's all good.</p>", "type": "rendered"}, "created_on": "2017-08-18T12:07:58.752212+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-18T12:07:58.756558+00:00", "type": "pullrequest_comment", "id": 43099190}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/57251375.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-57251375"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "Updated to remove redundant Qt imports and resolve merge conflict (which was in queue.py, in new_rep_name()). Given the plugin management feature has been implemented by @PhyNerd, this should be OK to merge (I've tested and it is disabled by default, and is loaded if you edit labconfig to enable it).", "markup": "markdown", "html": "<p>Updated to remove redundant Qt imports and resolve merge conflict (which was in queue.py, in new_rep_name()). Given the plugin management feature has been implemented by @PhyNerd, this should be OK to merge (I've tested and it is disabled by default, and is loaded if you edit labconfig to enable it).</p>", "type": "rendered"}, "created_on": "2018-02-26T08:11:40.491898+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-02-26T08:13:23.449005+00:00", "type": "pullrequest_comment", "id": 57251375}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/57405890.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-57405890"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "@cbillington Could you replace the callback code \\(queue.py line 912-918\\) with this:\n\n```python\n            for callback in self.get_callbacks('shot_complete'):\n                try:\n                    callback(path)\n                except Exception:\n                    logger.exception(\"Plugin callback raised an exception\")\n```\n\nIt's a bit shorter and uses the new `self.get_callbacks` function", "markup": "markdown", "html": "<p>@cbillington Could you replace the callback code (queue.py line 912-918) with this:</p>\n<div class=\"codehilite language-python\"><pre><span></span>            <span class=\"k\">for</span> <span class=\"n\">callback</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_callbacks</span><span class=\"p\">(</span><span class=\"s1\">&#39;shot_complete&#39;</span><span class=\"p\">):</span>\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n                    <span class=\"n\">callback</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n                <span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n                    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">exception</span><span class=\"p\">(</span><span class=\"s2\">&quot;Plugin callback raised an exception&quot;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>It's a bit shorter and uses the new <code>self.get_callbacks</code> function</p>", "type": "rendered"}, "created_on": "2018-02-27T11:31:29.287409+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-02-27T11:31:54.116211+00:00", "type": "pullrequest_comment", "id": 57405890}, {"links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/57414467.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-57414467"}}, "parent": {"id": 57405890, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9/comments/57405890.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9/_/diff#comment-57405890"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/blacs/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/blacs/pull-requests/9"}}, "title": "\"delete repeated shots\" functionality"}, "content": {"raw": "Ah, yep, sure.", "markup": "markdown", "html": "<p>Ah, yep, sure.</p>", "type": "rendered"}, "created_on": "2018-02-27T12:42:07.375379+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-02-27T12:42:07.379603+00:00", "type": "pullrequest_comment", "id": 57414467}], "page": 1, "size": 30}