{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/installer/issues/31/comments/54702353.json"}, "html": {"href": "#!/labscript_suite/installer/issues/31#comment-54702353"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/installer/issues/31.json"}}, "type": "issue", "id": 31, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/installer.json"}, "html": {"href": "#!/labscript_suite/installer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{65cd9685-3e8c-4275-9b89-1a7873b341d0}ts=python"}}, "type": "repository", "name": "installer", "full_name": "labscript_suite/installer", "uuid": "{65cd9685-3e8c-4275-9b89-1a7873b341d0}"}, "title": "Tasks required before moving to standard Python packages"}, "content": {"raw": "Concerning your list there.\n\n* Would number three not make number one and two simpler to test ?\n* If we implement number three, it might not be very clear anymore what the installer is for no ?\n\nI also wonder if one should first move to github and then start the disentanglement on the new platform ? So make issue #32 blocking for this one here ?", "markup": "markdown", "html": "<p>Concerning your list there.</p>\n<ul>\n<li>Would number three not make number one and two simpler to test ?</li>\n<li>If we implement number three, it might not be very clear anymore what the installer is for no ?</li>\n</ul>\n<p>I also wonder if one should first move to github and then start the disentanglement on the new platform ? So make issue <a href=\"#!/labscript_suite/installer/issues/32/tasks-relating-to-leaving-bitbucket\" rel=\"nofollow\" title=\"Tasks relating to leaving BitBucket hosting\" class=\"ap-connect-link\">#32</a> blocking for this one here ?</p>", "type": "rendered"}, "created_on": "2019-11-07T07:53:12.693137+00:00", "user": {"display_name": "fretchen", "uuid": "{b6b916e1-4953-477a-9f8e-fd6c910a01a4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb6b916e1-4953-477a-9f8e-fd6c910a01a4%7D"}, "html": {"href": "https://bitbucket.org/%7Bb6b916e1-4953-477a-9f8e-fd6c910a01a4%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b2ed07ddccdb457c8862cc2b3ce6fbed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsF-2.png"}}, "nickname": "fretchen", "type": "user", "account_id": "557058:cd123654-63a1-43af-be5e-8c5e274f4b65"}, "updated_on": "2019-11-07T07:56:06.134778+00:00", "type": "issue_comment", "id": 54702353}, {"links": {"self": {"href": "data/repositories/labscript_suite/installer/issues/31/comments/54895873.json"}, "html": {"href": "#!/labscript_suite/installer/issues/31#comment-54895873"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/installer/issues/31.json"}}, "type": "issue", "id": 31, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/installer.json"}, "html": {"href": "#!/labscript_suite/installer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{65cd9685-3e8c-4275-9b89-1a7873b341d0}ts=python"}}, "type": "repository", "name": "installer", "full_name": "labscript_suite/installer", "uuid": "{65cd9685-3e8c-4275-9b89-1a7873b341d0}"}, "title": "Tasks required before moving to standard Python packages"}, "content": {"raw": "@{557058:cd123654-63a1-43af-be5e-8c5e274f4b65}, number 1 is already implemented, and was actually fairly unrelated to how labscript_devices itself is laid out. Changing the repositories to be normal packages should not interfere with this.\n\nIt may be possible to remove the intaller package altogether, and relegate the creation of shortcuts to the individual programs. However, the responsibility to create the default labconfig file, and choose its location, will still need to be delegated to some package. So perhaps a package playing that role will be created and shipped as 'labscript-suite' or similar, depending on the latest stable versions of the other packages. If installed with a 'dev' option it could basically do what it does now and clone the repositories (perhaps the development versions). Still thinking about it!\n\nI am happy to move to github, yes. Once there, existing users will be without the ability to update unless they are enthusiastic and re-clone all the repositories as git ones. So enthused users can do that, and everyone else can just be without updates until we restructure the repositories. Messing with things sooner will create an additional breaking change, so might as well be avoided. Switching the two at exactly the same time would be ideal, so if things are looking good we will do that.", "markup": "markdown", "html": "<p><span class=\"ap-mention\" data-atlassian-id=\"557058:cd123654-63a1-43af-be5e-8c5e274f4b65\">@fretchen</span>, number 1 is already implemented, and was actually fairly unrelated to how labscript_devices itself is laid out. Changing the repositories to be normal packages should not interfere with this.</p>\n<p>It may be possible to remove the intaller package altogether, and relegate the creation of shortcuts to the individual programs. However, the responsibility to create the default labconfig file, and choose its location, will still need to be delegated to some package. So perhaps a package playing that role will be created and shipped as 'labscript-suite' or similar, depending on the latest stable versions of the other packages. If installed with a 'dev' option it could basically do what it does now and clone the repositories (perhaps the development versions). Still thinking about it!</p>\n<p>I am happy to move to github, yes. Once there, existing users will be without the ability to update unless they are enthusiastic and re-clone all the repositories as git ones. So enthused users can do that, and everyone else can just be without updates until we restructure the repositories. Messing with things sooner will create an additional breaking change, so might as well be avoided. Switching the two at exactly the same time would be ideal, so if things are looking good we will do that.</p>", "type": "rendered"}, "created_on": "2019-11-20T22:17:22.032664+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 54895873}, {"links": {"self": {"href": "data/repositories/labscript_suite/installer/issues/31/comments/54910752.json"}, "html": {"href": "#!/labscript_suite/installer/issues/31#comment-54910752"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/installer/issues/31.json"}}, "type": "issue", "id": 31, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/installer.json"}, "html": {"href": "#!/labscript_suite/installer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{65cd9685-3e8c-4275-9b89-1a7873b341d0}ts=python"}}, "type": "repository", "name": "installer", "full_name": "labscript_suite/installer", "uuid": "{65cd9685-3e8c-4275-9b89-1a7873b341d0}"}, "title": "Tasks required before moving to standard Python packages"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2019-11-21T20:49:52.688464+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 54910752}, {"links": {"self": {"href": "data/repositories/labscript_suite/installer/issues/31/comments/55030821.json"}, "html": {"href": "#!/labscript_suite/installer/issues/31#comment-55030821"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/installer/issues/31.json"}}, "type": "issue", "id": 31, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/installer.json"}, "html": {"href": "#!/labscript_suite/installer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{65cd9685-3e8c-4275-9b89-1a7873b341d0}ts=python"}}, "type": "repository", "name": "installer", "full_name": "labscript_suite/installer", "uuid": "{65cd9685-3e8c-4275-9b89-1a7873b341d0}"}, "title": "Tasks required before moving to standard Python packages"}, "content": {"raw": "I thought about what the installer should be, and it's pretty obvious in hindsight!\n\nAll the repos `labscript`, `labscript_devices`, `runviewer`, `runmanager`, `blacs`, `labscript_utils`, will be their own PyPI/conda packages, that depend on each other with specific versions as required. Then there'll be a package which I think would best be called 'labscript-suite', that will depend on all the others - not on any particular versions except as required by the functionality of a script that will come with this package - such that `conda install labscript-suite` or `pip install labscript-suite` will install the latest releases of all the others.\n\nThe problem with `pip/conda` packages alone is that they have no state outside of of site-packages. We still need something that can prompt the user to ask them where they want to put the folder containing `labconfig`, log files, their `userlib`, and app saved configs, create start menu shortcuts, etc (i.e. everything that used to be considered part of a labscript suite 'installation' other then the actual applications/modules).\n\nIt is possible to make post-install scripts that will run after conda/pip install, and even be interactive, but I don't think we want this since we wouldn't want it to run on every upgrade, and there are other things we would want a manually-run script to do anyway, so I think the best solution is to just have the user run a script after doing `pip/conda install`\n\nTo that end, all the stuff that the installer currently creates other than the mercurial clones will be called a 'profile', and the `labscript-suite` package will come with a `labscript-suite-profile` script, with the following subcommands:\n\n`labscript-suite-profile new`\n\nThis is what you will run after a `pip/conda install labscript-suite`. The end result will be the same as if you ran `python setup.py install` with the existing `installer` package.\nThis command will:\n\n* Ask user for a path to create a new profile (default C:\\\\labscript_suite or ~/labscript_suite).\n* Ask the user for a name for the profile. Defaults to nothing, or the conda env name if there is one.\n* Creates all the same things as the current installer, except for cloning repos:\n    * labconfig\n    * log folder\n    * userlib\n    * \"Registers\" the profile with the currently running Python interpreter - see below\n\n`labscript-suite-profile register`\n\nThis is run when creating a new profile, and is what you would run manually if you reinstalled Python (to recreate the .pth file and get the launchers working again), or you wanted to associate the same userlib and labconfig etc with multiple Python installations\n\n* If being run manually, prompts for the path of an existing labscript suite profile (default C:\\\\labscript_suite or ~/labscript_suite).\n* Creates a .pth file in site-packages so that the userlib modules are in the python import path for that interpreter\n* Creates the launchers and their start menu shortcuts.\n\n`labscript-suite-profile deregister`\n\n* Deletes .pth file\n* Deletes launchers and start menu shortcuts. You can do this to intentionally disable a labscript suite profile and switch to another one with the same Python interpreter. You might do this before upgrading Python or similar, to avoid broken launchers and shortcuts in the meantime, though neglecting to do so will not stop the 'register' step from working.\n\n\n`labscript-suite-profile develop`\n\nConfigure the python import path to import some modules directly from git repos instead of from `site-packages`, similar to `python setup.py develop` except not requiring *uninstallation* of the corresponding pip/conda package to work (you can put the repo first in the import path so that it takes precedent, unlike `python setup.py develop` which puts it last), and not requiring manual deletion of files from `site-packages` to reverse.\n\n* With no arguments, or maybe an argument like 'list', lists which repos are currently in development mode.\n* If adding repos to development mode, creates a `development_repos` directory within the profile directory if it doesn't exist.\n* takes a list of repos that should be put into or out of development mode, maybe in a format like \"+labscript, +runmanager, -lyse\" or \"+all\" \"-all\" to add or remove repos from development mode\n* If putting a repo into development mode, clones it into `development_repos` from the given URL prefix (defaulting to labscript suite mainline) if it's not already there. If turning off development mode for a repo, doesn't delete it or anything, just leaves it as is.\n* prepends/removes each repo to the python import path by modifying the labscript suite `.pth` file.\n\nI am pretty sure that if the package is made correctly, the script should end up in the bin directory where the Python interpreter lives, such that the user will be able to run it just as `labscript-suite-profile`, i.e. without the full path or anything. If that turns out not the case then it would be a little more verbose: `python -m labscript-suite-profile`.", "markup": "markdown", "html": "<p>I thought about what the installer should be, and it's pretty obvious in hindsight!</p>\n<p>All the repos <code>labscript</code>, <code>labscript_devices</code>, <code>runviewer</code>, <code>runmanager</code>, <code>blacs</code>, <code>labscript_utils</code>, will be their own PyPI/conda packages, that depend on each other with specific versions as required. Then there'll be a package which I think would best be called 'labscript-suite', that will depend on all the others - not on any particular versions except as required by the functionality of a script that will come with this package - such that <code>conda install labscript-suite</code> or <code>pip install labscript-suite</code> will install the latest releases of all the others.</p>\n<p>The problem with <code>pip/conda</code> packages alone is that they have no state outside of of site-packages. We still need something that can prompt the user to ask them where they want to put the folder containing <code>labconfig</code>, log files, their <code>userlib</code>, and app saved configs, create start menu shortcuts, etc (i.e. everything that used to be considered part of a labscript suite 'installation' other then the actual applications/modules).</p>\n<p>It is possible to make post-install scripts that will run after conda/pip install, and even be interactive, but I don't think we want this since we wouldn't want it to run on every upgrade, and there are other things we would want a manually-run script to do anyway, so I think the best solution is to just have the user run a script after doing <code>pip/conda install</code></p>\n<p>To that end, all the stuff that the installer currently creates other than the mercurial clones will be called a 'profile', and the <code>labscript-suite</code> package will come with a <code>labscript-suite-profile</code> script, with the following subcommands:</p>\n<p><code>labscript-suite-profile new</code></p>\n<p>This is what you will run after a <code>pip/conda install labscript-suite</code>. The end result will be the same as if you ran <code>python setup.py install</code> with the existing <code>installer</code> package.\nThis command will:</p>\n<ul>\n<li>Ask user for a path to create a new profile (default C:\\labscript_suite or ~/labscript_suite).</li>\n<li>Ask the user for a name for the profile. Defaults to nothing, or the conda env name if there is one.</li>\n<li>Creates all the same things as the current installer, except for cloning repos:<ul>\n<li>labconfig</li>\n<li>log folder</li>\n<li>userlib</li>\n<li>\"Registers\" the profile with the currently running Python interpreter - see below</li>\n</ul>\n</li>\n</ul>\n<p><code>labscript-suite-profile register</code></p>\n<p>This is run when creating a new profile, and is what you would run manually if you reinstalled Python (to recreate the .pth file and get the launchers working again), or you wanted to associate the same userlib and labconfig etc with multiple Python installations</p>\n<ul>\n<li>If being run manually, prompts for the path of an existing labscript suite profile (default C:\\labscript_suite or ~/labscript_suite).</li>\n<li>Creates a .pth file in site-packages so that the userlib modules are in the python import path for that interpreter</li>\n<li>Creates the launchers and their start menu shortcuts.</li>\n</ul>\n<p><code>labscript-suite-profile deregister</code></p>\n<ul>\n<li>Deletes .pth file</li>\n<li>Deletes launchers and start menu shortcuts. You can do this to intentionally disable a labscript suite profile and switch to another one with the same Python interpreter. You might do this before upgrading Python or similar, to avoid broken launchers and shortcuts in the meantime, though neglecting to do so will not stop the 'register' step from working.</li>\n</ul>\n<p><code>labscript-suite-profile develop</code></p>\n<p>Configure the python import path to import some modules directly from git repos instead of from <code>site-packages</code>, similar to <code>python setup.py develop</code> except not requiring <em>uninstallation</em> of the corresponding pip/conda package to work (you can put the repo first in the import path so that it takes precedent, unlike <code>python setup.py develop</code> which puts it last), and not requiring manual deletion of files from <code>site-packages</code> to reverse.</p>\n<ul>\n<li>With no arguments, or maybe an argument like 'list', lists which repos are currently in development mode.</li>\n<li>If adding repos to development mode, creates a <code>development_repos</code> directory within the profile directory if it doesn't exist.</li>\n<li>takes a list of repos that should be put into or out of development mode, maybe in a format like \"+labscript, +runmanager, -lyse\" or \"+all\" \"-all\" to add or remove repos from development mode</li>\n<li>If putting a repo into development mode, clones it into <code>development_repos</code> from the given URL prefix (defaulting to labscript suite mainline) if it's not already there. If turning off development mode for a repo, doesn't delete it or anything, just leaves it as is.</li>\n<li>prepends/removes each repo to the python import path by modifying the labscript suite <code>.pth</code> file.</li>\n</ul>\n<p>I am pretty sure that if the package is made correctly, the script should end up in the bin directory where the Python interpreter lives, such that the user will be able to run it just as <code>labscript-suite-profile</code>, i.e. without the full path or anything. If that turns out not the case then it would be a little more verbose: <code>python -m labscript-suite-profile</code>.</p>", "type": "rendered"}, "created_on": "2019-11-29T16:53:37.622733+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-11-29T16:55:54.238680+00:00", "type": "issue_comment", "id": 55030821}, {"links": {"self": {"href": "data/repositories/labscript_suite/installer/issues/31/comments/55031959.json"}, "html": {"href": "#!/labscript_suite/installer/issues/31#comment-55031959"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/installer/issues/31.json"}}, "type": "issue", "id": 31, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/installer.json"}, "html": {"href": "#!/labscript_suite/installer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{65cd9685-3e8c-4275-9b89-1a7873b341d0}ts=python"}}, "type": "repository", "name": "installer", "full_name": "labscript_suite/installer", "uuid": "{65cd9685-3e8c-4275-9b89-1a7873b341d0}"}, "title": "Tasks required before moving to standard Python packages"}, "content": {"raw": "Thanks so much for this.", "markup": "markdown", "html": "<p>Thanks so much for this.</p>", "type": "rendered"}, "created_on": "2019-11-29T19:22:20.121073+00:00", "user": {"display_name": "fretchen", "uuid": "{b6b916e1-4953-477a-9f8e-fd6c910a01a4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb6b916e1-4953-477a-9f8e-fd6c910a01a4%7D"}, "html": {"href": "https://bitbucket.org/%7Bb6b916e1-4953-477a-9f8e-fd6c910a01a4%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b2ed07ddccdb457c8862cc2b3ce6fbed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsF-2.png"}}, "nickname": "fretchen", "type": "user", "account_id": "557058:cd123654-63a1-43af-be5e-8c5e274f4b65"}, "updated_on": null, "type": "issue_comment", "id": 55031959}, {"links": {"self": {"href": "data/repositories/labscript_suite/installer/issues/31/comments/55032945.json"}, "html": {"href": "#!/labscript_suite/installer/issues/31#comment-55032945"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/installer/issues/31.json"}}, "type": "issue", "id": 31, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/installer.json"}, "html": {"href": "#!/labscript_suite/installer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{65cd9685-3e8c-4275-9b89-1a7873b341d0}ts=python"}}, "type": "repository", "name": "installer", "full_name": "labscript_suite/installer", "uuid": "{65cd9685-3e8c-4275-9b89-1a7873b341d0}"}, "title": "Tasks required before moving to standard Python packages"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2019-11-29T22:27:33.809535+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 55032945}, {"links": {"self": {"href": "data/repositories/labscript_suite/installer/issues/31/comments/55117147.json"}, "html": {"href": "#!/labscript_suite/installer/issues/31#comment-55117147"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/installer/issues/31.json"}}, "type": "issue", "id": 31, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/installer.json"}, "html": {"href": "#!/labscript_suite/installer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{65cd9685-3e8c-4275-9b89-1a7873b341d0}ts=python"}}, "type": "repository", "name": "installer", "full_name": "labscript_suite/installer", "uuid": "{65cd9685-3e8c-4275-9b89-1a7873b341d0}"}, "title": "Tasks required before moving to standard Python packages"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2019-12-05T03:29:36.942025+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 55117147}, {"links": {"self": {"href": "data/repositories/labscript_suite/installer/issues/31/comments/55758627.json"}, "html": {"href": "#!/labscript_suite/installer/issues/31#comment-55758627"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/installer/issues/31.json"}}, "type": "issue", "id": 31, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/installer.json"}, "html": {"href": "#!/labscript_suite/installer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{65cd9685-3e8c-4275-9b89-1a7873b341d0}ts=python"}}, "type": "repository", "name": "installer", "full_name": "labscript_suite/installer", "uuid": "{65cd9685-3e8c-4275-9b89-1a7873b341d0}"}, "title": "Tasks required before moving to standard Python packages"}, "content": {"raw": "FYI: I figured out today how to automate the publishing of packages to PyPI using GitHub actions. You can check out the github workflow and setup.py files for the [autoscrub](https://github.com/philipstarkey/autoscrub) project Russ and I made. It automatically publishes every version to Test PyPI, and tagged versions to real PyPI.\n\n\u200c", "markup": "markdown", "html": "<p>FYI: I figured out today how to automate the publishing of packages to PyPI using GitHub actions. You can check out the github workflow and setup.py files for the <a data-is-external-link=\"true\" href=\"https://github.com/philipstarkey/autoscrub\" rel=\"nofollow\">autoscrub</a> project Russ and I made. It automatically publishes every version to Test PyPI, and tagged versions to real PyPI.</p>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2020-01-18T14:04:40.116486+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "updated_on": null, "type": "issue_comment", "id": 55758627}, {"links": {"self": {"href": "data/repositories/labscript_suite/installer/issues/31/comments/55768105.json"}, "html": {"href": "#!/labscript_suite/installer/issues/31#comment-55768105"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/installer/issues/31.json"}}, "type": "issue", "id": 31, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/installer.json"}, "html": {"href": "#!/labscript_suite/installer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{65cd9685-3e8c-4275-9b89-1a7873b341d0}ts=python"}}, "type": "repository", "name": "installer", "full_name": "labscript_suite/installer", "uuid": "{65cd9685-3e8c-4275-9b89-1a7873b341d0}"}, "title": "Tasks required before moving to standard Python packages"}, "content": {"raw": "Ah, that's great! We should definitely get that happening for labscript suite packages.", "markup": "markdown", "html": "<p>Ah, that's great! We should definitely get that happening for labscript suite packages.</p>", "type": "rendered"}, "created_on": "2020-01-20T00:46:04.215616+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 55768105}, {"links": {"self": {"href": "data/repositories/labscript_suite/installer/issues/31/comments/55872492.json"}, "html": {"href": "#!/labscript_suite/installer/issues/31#comment-55872492"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/installer/issues/31.json"}}, "type": "issue", "id": 31, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/installer.json"}, "html": {"href": "#!/labscript_suite/installer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{65cd9685-3e8c-4275-9b89-1a7873b341d0}ts=python"}}, "type": "repository", "name": "installer", "full_name": "labscript_suite/installer", "uuid": "{65cd9685-3e8c-4275-9b89-1a7873b341d0}"}, "title": "Tasks required before moving to standard Python packages"}, "content": {"raw": "Just leaving a note about this here so I don\u2019t forget: I think there might be a bug in my \u201cbuild and publish to PyPI\u201d GitHub action code. I had attempted to make the git tag the authoritative version \\(overriding the version in setup.py in case we forgot to update it\\). However, while I think this works for wheels, I don\u2019t think it works for installing from source builds \\(aka `sdist` builds\\) uploaded to PyPI. There are some solutions involving only writing out `__version__.py` if it doesn\u2019t exist, but that probably doesn\u2019t play nice with installing with the `-e` option. Given that installing with `-e` requires the version in setup.py to be accurate anyway, perhaps the answer is not to make the git tag authoritative, but have the build fail if the git tag does not match the version specified in the setup.py file in order to prevent publishing versions where we forgot to update the version number.\n\nAnyway, something to resolve when it comes time to implement this.\n\n\u200c", "markup": "markdown", "html": "<p>Just leaving a note about this here so I don\u2019t forget: I think there might be a bug in my \u201cbuild and publish to PyPI\u201d GitHub action code. I had attempted to make the git tag the authoritative version (overriding the version in setup.py in case we forgot to update it). However, while I think this works for wheels, I don\u2019t think it works for installing from source builds (aka <code>sdist</code> builds) uploaded to PyPI. There are some solutions involving only writing out <code>__version__.py</code> if it doesn\u2019t exist, but that probably doesn\u2019t play nice with installing with the <code>-e</code> option. Given that installing with <code>-e</code> requires the version in setup.py to be accurate anyway, perhaps the answer is not to make the git tag authoritative, but have the build fail if the git tag does not match the version specified in the setup.py file in order to prevent publishing versions where we forgot to update the version number.</p>\n<p>Anyway, something to resolve when it comes time to implement this.</p>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2020-01-26T04:46:42.144540+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "updated_on": null, "type": "issue_comment", "id": 55872492}], "page": 1, "size": 10}