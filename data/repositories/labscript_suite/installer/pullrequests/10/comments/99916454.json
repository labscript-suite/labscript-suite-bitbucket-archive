{"links": {"self": {"href": "data/repositories/labscript_suite/installer/pullrequests/10/comments/99916454.json"}, "html": {"href": "#!/labscript_suite/installer/pull-requests/10/_/diff#comment-99916454"}}, "parent": {"id": 99912482, "links": {"self": {"href": "data/repositories/labscript_suite/installer/pullrequests/10/comments/99912482.json"}, "html": {"href": "#!/labscript_suite/installer/pull-requests/10/_/diff#comment-99912482"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 10, "links": {"self": {"href": "data/repositories/labscript_suite/installer/pullrequests/10.json"}, "html": {"href": "#!/labscript_suite/installer/pull-requests/10"}}, "title": "configparser dependency, and dependency cleanups."}, "content": {"raw": "We could look for [registered applications](https://docs.microsoft.com/en-us/windows/desktop/shell/app-registration#registering-applications) in standard registry locations:\n\n* `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths`\n* `HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths`\n* `HKEY_CLASSES_ROOT\\Applications\\ApplicationName.exe`\n\nHere\u2019s how:\n\n```python\nimport winreg, errno\r\n\r\nlocations = [\r\n    [winreg.HKEY_LOCAL_MACHINE, r\"Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\"],\r\n    [winreg.HKEY_CURRENT_USER,  r\"Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\"],\r\n    [winreg.HKEY_CLASSES_ROOT,  r\"Applications\", r\"shell\\open\\command\"]\r\n    ]\r\n\r\napplications = {}\r\n\r\nfor location in locations:\r\n    key = winreg.OpenKey(*location[:2])\r\n    for i in range(winreg.QueryInfoKey(key)[0]):\r\n        executable = winreg.EnumKey(key, i)\r\n        skey_name = '\\\\'.join([executable] + location[2:])\r\n        try:\r\n            skey = winreg.OpenKey(key, skey_name)\r\n            path = winreg.EnumValue(skey, 0)[1]\r\n            if isinstance(path, str) and len(path):\r\n                applications[executable] = path\r\n                print('Found path to {}'.format(executable))\r\n        except FileNotFoundError as e:\r\n            if e.errno == errno.ENOENT:\r\n                pass\r\n        finally:\r\n            skey.Close()\r\n\r\n    key.Close()\n```", "markup": "markdown", "html": "<p>We could look for <a data-is-external-link=\"true\" href=\"https://docs.microsoft.com/en-us/windows/desktop/shell/app-registration#registering-applications\" rel=\"nofollow\">registered applications</a> in standard registry locations:</p>\n<ul>\n<li><code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths</code></li>\n<li><code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths</code></li>\n<li><code>HKEY_CLASSES_ROOT\\Applications\\ApplicationName.exe</code></li>\n</ul>\n<p>Here\u2019s how:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">winreg</span><span class=\"o\">,</span> <span class=\"nn\">errno</span>\n\n<span class=\"n\">locations</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">[</span><span class=\"n\">winreg</span><span class=\"o\">.</span><span class=\"n\">HKEY_LOCAL_MACHINE</span><span class=\"p\">,</span> <span class=\"sa\">r</span><span class=\"s2\">&quot;Software\\Microsoft\\Windows\\CurrentVersion\\App Paths&quot;</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"n\">winreg</span><span class=\"o\">.</span><span class=\"n\">HKEY_CURRENT_USER</span><span class=\"p\">,</span>  <span class=\"sa\">r</span><span class=\"s2\">&quot;Software\\Microsoft\\Windows\\CurrentVersion\\App Paths&quot;</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"n\">winreg</span><span class=\"o\">.</span><span class=\"n\">HKEY_CLASSES_ROOT</span><span class=\"p\">,</span>  <span class=\"sa\">r</span><span class=\"s2\">&quot;Applications&quot;</span><span class=\"p\">,</span> <span class=\"sa\">r</span><span class=\"s2\">&quot;shell\\open\\command&quot;</span><span class=\"p\">]</span>\n    <span class=\"p\">]</span>\n\n<span class=\"n\">applications</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n<span class=\"k\">for</span> <span class=\"n\">location</span> <span class=\"ow\">in</span> <span class=\"n\">locations</span><span class=\"p\">:</span>\n    <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">winreg</span><span class=\"o\">.</span><span class=\"n\">OpenKey</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">location</span><span class=\"p\">[:</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">winreg</span><span class=\"o\">.</span><span class=\"n\">QueryInfoKey</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]):</span>\n        <span class=\"n\">executable</span> <span class=\"o\">=</span> <span class=\"n\">winreg</span><span class=\"o\">.</span><span class=\"n\">EnumKey</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"n\">skey_name</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\\\</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"n\">executable</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">:])</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">skey</span> <span class=\"o\">=</span> <span class=\"n\">winreg</span><span class=\"o\">.</span><span class=\"n\">OpenKey</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">skey_name</span><span class=\"p\">)</span>\n            <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">winreg</span><span class=\"o\">.</span><span class=\"n\">EnumValue</span><span class=\"p\">(</span><span class=\"n\">skey</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">):</span>\n                <span class=\"n\">applications</span><span class=\"p\">[</span><span class=\"n\">executable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">path</span>\n                <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Found path to {}&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">executable</span><span class=\"p\">))</span>\n        <span class=\"k\">except</span> <span class=\"n\">FileNotFoundError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">errno</span> <span class=\"o\">==</span> <span class=\"n\">errno</span><span class=\"o\">.</span><span class=\"n\">ENOENT</span><span class=\"p\">:</span>\n                <span class=\"k\">pass</span>\n        <span class=\"k\">finally</span><span class=\"p\">:</span>\n            <span class=\"n\">skey</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n\n    <span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Close</span><span class=\"p\">()</span>\n</pre></div>", "type": "rendered"}, "created_on": "2019-04-25T02:39:48.396389+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": "2019-04-25T02:39:48.407846+00:00", "type": "pullrequest_comment", "id": 99916454}