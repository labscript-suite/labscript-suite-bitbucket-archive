{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/1/comments/18326943.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/1#comment-18326943"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/1.json"}}, "type": "issue", "id": 1, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Device.stop_time does not take into account initial_trigger_time"}, "content": {"raw": "Upgrading the status of this to critical. This bug means that the PineBlaster is useless as a secondary pseudoclock if `PineBlaster.set_initial_trigger_times(t)` is called with a time `t>0`.\r\n\r\nThis is because the PineBlaster cannot be asked what its status is, and the only way to tell output was successful is by waiting for the pulse sequence to finish. This bug means the PineBlaster runs for longer than it should (by the initial trigger offset), and when BLACS sees that the master pseudoclock has finished, but the secondary PineBlaster pseudoclock has not, BLACS assumes the device has crashed and dumps the shot.\r\n\r\nI have a solution in the works (looks like a simple bug). Will commit to my fork and make a pull request for review.", "markup": "markdown", "html": "<p>Upgrading the status of this to critical. This bug means that the PineBlaster is useless as a secondary pseudoclock if <code>PineBlaster.set_initial_trigger_times(t)</code> is called with a time <code>t&gt;0</code>.</p>\n<p>This is because the PineBlaster cannot be asked what its status is, and the only way to tell output was successful is by waiting for the pulse sequence to finish. This bug means the PineBlaster runs for longer than it should (by the initial trigger offset), and when BLACS sees that the master pseudoclock has finished, but the secondary PineBlaster pseudoclock has not, BLACS assumes the device has crashed and dumps the shot.</p>\n<p>I have a solution in the works (looks like a simple bug). Will commit to my fork and make a pull request for review.</p>", "type": "rendered"}, "created_on": "2015-05-25T06:58:57.127606+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 18326943}