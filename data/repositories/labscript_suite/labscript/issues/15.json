{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/labscript/issues/15/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/issues/15.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/issues/15/watch"}, "comments": {"href": "data/repositories/labscript_suite/labscript/issues/15/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/15/basic-connection-tables-with-no-outputs-do"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/issues/15/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Basic connection tables (with no outputs) do not compile", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Take this simple connection table:\r\n\r\n\r\n```\r\n#!python\r\n\r\nfrom labscript import *\r\nfrom labscript_devices.PineBlaster import PineBlaster\r\nfrom labscript_utils.unitconversions import *\r\nfrom labscript_devices.NI_PCI_6733 import NI_PCI_6733\r\n\r\nPineBlaster(name='pineblaster_0', trigger_device = None, trigger_connection = None, usbport='com6')\r\nNI_PCI_6733(name='ni_card_1', parent_device=pineblaster_0.clockline, clock_terminal='ni_pcie_6733_0/PFI0', MAX_name='ni_pci_6733_0')\r\n\r\nstart()\r\nstop(1)\r\n```\r\n\r\nThis produces the traceback\r\n```\r\n#!python\r\n\r\nTraceback (most recent call last):\r\nFile \"C:\\user_scripts\\labscriptlib\\example_experiment\\connectiontable.py\", line 8, in <module>\r\nstop(0.1)\r\nFile \"C:\\pythonlib\\labscript\\labscript.py\", line 1772, in stop\r\ngenerate_code()\r\nFile \"C:\\pythonlib\\labscript\\labscript.py\", line 1686, in generate_code\r\ndevice.generate_code(hdf5_file)\r\nFile \"C:\\pythonlib\\labscript_devices\\PineBlaster.py\", line 76, in generate_code\r\nPseudoclockDevice.generate_code(self, hdf5_file)\r\nFile \"C:\\pythonlib\\labscript\\labscript.py\", line 763, in generate_code\r\nDevice.generate_code(self, hdf5_file)\r\nFile \"C:\\pythonlib\\labscript\\labscript.py\", line 276, in generate_code\r\ndevice.generate_code(hdf5_file)\r\nFile \"C:\\pythonlib\\labscript\\labscript.py\", line 659, in generate_code\r\nDevice.generate_code(self, hdf5_file)\r\nFile \"C:\\pythonlib\\labscript\\labscript.py\", line 276, in generate_code\r\ndevice.generate_code(hdf5_file)\r\nFile \"C:\\pythonlib\\labscript\\labscript.py\", line 276, in generate_code\r\ndevice.generate_code(hdf5_file)\r\nFile \"C:\\pythonlib\\labscript_devices\\NI_PCI_6733.py\", line 31, in generate_code\r\nparent.NIBoard.generate_code(self, hdf5_file)\r\nFile \"C:\\pythonlib\\labscript_devices\\NIBoard.py\", line 56, in generate_code\r\ntimes = pseudoclock.times[clockline]\r\nKeyError: <labscript.labscript.ClockLine object at 0x07153530>\r\n```\r\n\r\nAdding two `AnalogOut`s  to the connection table allows it to be successfully compiled.\r\n\r\nWe should fix this, but we also need to make sure that BLACS isn't going to get upset if an experiment is submitted with a device that has no outputs. ", "markup": "markdown", "html": "<p>Take this simple connection table:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">labscript</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">labscript_devices.PineBlaster</span> <span class=\"kn\">import</span> <span class=\"n\">PineBlaster</span>\n<span class=\"kn\">from</span> <span class=\"nn\">labscript_utils.unitconversions</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">labscript_devices.NI_PCI_6733</span> <span class=\"kn\">import</span> <span class=\"n\">NI_PCI_6733</span>\n\n<span class=\"n\">PineBlaster</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;pineblaster_0&#39;</span><span class=\"p\">,</span> <span class=\"n\">trigger_device</span> <span class=\"o\">=</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">trigger_connection</span> <span class=\"o\">=</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">usbport</span><span class=\"o\">=</span><span class=\"s1\">&#39;com6&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">NI_PCI_6733</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;ni_card_1&#39;</span><span class=\"p\">,</span> <span class=\"n\">parent_device</span><span class=\"o\">=</span><span class=\"n\">pineblaster_0</span><span class=\"o\">.</span><span class=\"n\">clockline</span><span class=\"p\">,</span> <span class=\"n\">clock_terminal</span><span class=\"o\">=</span><span class=\"s1\">&#39;ni_pcie_6733_0/PFI0&#39;</span><span class=\"p\">,</span> <span class=\"n\">MAX_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;ni_pci_6733_0&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"n\">stop</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>This produces the traceback</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n<span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\user_scripts\\labscriptlib\\example_experiment\\connectiontable.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n<span class=\"n\">stop</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n<span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\pythonlib\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1772</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">stop</span>\n<span class=\"n\">generate_code</span><span class=\"p\">()</span>\n<span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\pythonlib\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1686</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_code</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">generate_code</span><span class=\"p\">(</span><span class=\"n\">hdf5_file</span><span class=\"p\">)</span>\n<span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\pythonlib\\labscript_devices\\PineBlaster.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">76</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_code</span>\n<span class=\"n\">PseudoclockDevice</span><span class=\"o\">.</span><span class=\"n\">generate_code</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">hdf5_file</span><span class=\"p\">)</span>\n<span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\pythonlib\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">763</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_code</span>\n<span class=\"n\">Device</span><span class=\"o\">.</span><span class=\"n\">generate_code</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">hdf5_file</span><span class=\"p\">)</span>\n<span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\pythonlib\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">276</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_code</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">generate_code</span><span class=\"p\">(</span><span class=\"n\">hdf5_file</span><span class=\"p\">)</span>\n<span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\pythonlib\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">659</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_code</span>\n<span class=\"n\">Device</span><span class=\"o\">.</span><span class=\"n\">generate_code</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">hdf5_file</span><span class=\"p\">)</span>\n<span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\pythonlib\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">276</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_code</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">generate_code</span><span class=\"p\">(</span><span class=\"n\">hdf5_file</span><span class=\"p\">)</span>\n<span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\pythonlib\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">276</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_code</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">generate_code</span><span class=\"p\">(</span><span class=\"n\">hdf5_file</span><span class=\"p\">)</span>\n<span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\pythonlib\\labscript_devices\\NI_PCI_6733.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">31</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_code</span>\n<span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">NIBoard</span><span class=\"o\">.</span><span class=\"n\">generate_code</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">hdf5_file</span><span class=\"p\">)</span>\n<span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\pythonlib\\labscript_devices\\NIBoard.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">56</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_code</span>\n<span class=\"n\">times</span> <span class=\"o\">=</span> <span class=\"n\">pseudoclock</span><span class=\"o\">.</span><span class=\"n\">times</span><span class=\"p\">[</span><span class=\"n\">clockline</span><span class=\"p\">]</span>\n<span class=\"ne\">KeyError</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">labscript</span><span class=\"o\">.</span><span class=\"n\">labscript</span><span class=\"o\">.</span><span class=\"n\">ClockLine</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x07153530</span><span class=\"o\">&gt;</span>\n</pre></div>\n\n\n<p>Adding two <code>AnalogOut</code>s  to the connection table allows it to be successfully compiled.</p>\n<p>We should fix this, but we also need to make sure that BLACS isn't going to get upset if an experiment is submitted with a device that has no outputs. </p>", "type": "rendered"}, "assignee": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "state": "new", "version": null, "edited_on": null, "created_on": "2014-12-05T23:53:51.350756+00:00", "milestone": null, "updated_on": "2017-07-19T22:18:10.107519+00:00", "type": "issue", "id": 15}