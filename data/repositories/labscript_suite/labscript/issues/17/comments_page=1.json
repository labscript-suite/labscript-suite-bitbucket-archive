{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/17/comments/24567115.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/17#comment-24567115"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/17.json"}}, "type": "issue", "id": 17, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "While setting values for the NI PCI 6733 DAQ..."}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-01-08T16:23:18.017221+00:00", "user": {"display_name": "Jesse Evans", "uuid": "{3f9ae0ef-8c02-4174-a140-9c1e3f0c4f31}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3f9ae0ef-8c02-4174-a140-9c1e3f0c4f31%7D"}, "html": {"href": "https://bitbucket.org/%7B3f9ae0ef-8c02-4174-a140-9c1e3f0c4f31%7D/"}, "avatar": {"href": "https://bitbucket.org/account/jcevans/avatar/"}}, "nickname": "jcevans", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 24567115}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/17/comments/24575578.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/17#comment-24575578"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/17.json"}}, "type": "issue", "id": 17, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "While setting values for the NI PCI 6733 DAQ..."}, "content": {"raw": "Hi Jesse,\n\nThis error happens when there are not enough instructions for the device in the compiled HDF5 file. The NI PCI 6733 requires a minimum of 2 instructions. If you add an additional instruction at a later time, this error should go away. For example, in your labscript (experiment logic) file:\n\n```\n#!python\n\nt = Li72DP_amp.t0\nLi72DP_amp.constant(t, 0.5)\nt += 1\nLi72DP_amp.constant(t, 0.5)\nt += 1\nstop(t)\n```\n\nNote that in this example, the experiment will last for 2 seconds. You can adjust the times as you like, as long as there are at least two commands to channels on the NI PCI 6733 at different times, the error should not exist.\n\nWe should however, put a check in the labscript_devices.NI_PCI_6733 code to display an error at compilation time, rather than the obtuse error you have seen in BLACS. I've logged it as a bug [here](#!/labscript_suite/labscript_devices/issues/14/ni-pci-6733-must-have-at-least-2).\n\nLet me know if this doesn't solve the issue :)", "markup": "markdown", "html": "<p>Hi Jesse,</p>\n<p>This error happens when there are not enough instructions for the device in the compiled HDF5 file. The NI PCI 6733 requires a minimum of 2 instructions. If you add an additional instruction at a later time, this error should go away. For example, in your labscript (experiment logic) file:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">Li72DP_amp</span><span class=\"o\">.</span><span class=\"n\">t0</span>\n<span class=\"n\">Li72DP_amp</span><span class=\"o\">.</span><span class=\"n\">constant</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"n\">t</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n<span class=\"n\">Li72DP_amp</span><span class=\"o\">.</span><span class=\"n\">constant</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"n\">t</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n<span class=\"n\">stop</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Note that in this example, the experiment will last for 2 seconds. You can adjust the times as you like, as long as there are at least two commands to channels on the NI PCI 6733 at different times, the error should not exist.</p>\n<p>We should however, put a check in the labscript_devices.NI_PCI_6733 code to display an error at compilation time, rather than the obtuse error you have seen in BLACS. I've logged it as a bug <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript_devices/issues/14/ni-pci-6733-must-have-at-least-2\" rel=\"nofollow\">here</a>.</p>\n<p>Let me know if this doesn't solve the issue :)</p>", "type": "rendered"}, "created_on": "2016-01-09T01:11:28.895978+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 24575578}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/17/comments/24650753.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/17#comment-24650753"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/17.json"}}, "type": "issue", "id": 17, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "While setting values for the NI PCI 6733 DAQ..."}, "content": {"raw": "Thanks for the help, Philip. I tried what you suggested, and got a different (but also indecipherable) error.\n\n\n\nTraceback (most recent call last):\n\nFile \"C:\\labscript_suite\\labscript_devices\\NI_PCI_6733.py\", line 233, in transition_to_manual\n\n  self.ao_task.StopTask()\n\n  File \"<string>\", line 3, in StopTask\n\n  File \"<string>\", line 2, in function\n\n  File \"C:\\Anaconda\\lib\\site-packages\\PyDAQmx\\DAQmxFunctions.py\", line 33, in mafunction\n\n raise DAQError(error,errBuff.value.decode(\"utf-8\"), f.__name__)\n\nDAQError: Finite acquisition or generation has been stopped before the requested number of samples were acquired or generated.\n\nin function DAQmxStopTask\n\nFatal exception in main process - Tue Jan 12, 12:53:30 :\n\n Traceback (most recent call last):\n\n  File \"C:\\labscript_suite\\blacs\\tab_base_classes.py\", line 670, in mainloop\n\n next_yield = inmain(generator.send,results)\n\n  File \"C:\\Anaconda\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 68, in inmain\n\n return get_inmain_result(in_main_later(fn,False,*args,**kwargs))\n\n  File \"C:\\Anaconda\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 47, in event\n\n  result = event.fn(*event.args, **event.kwargs)\n\n  File \"C:\\labscript_suite\\blacs\\device_base_class.py\", line 627, in transition_to_manual\n\nraise Exception('Could not transition to manual. You must restart this device to continue')\n\nException: Could not transition to manual. You must restart this device to continue\n\n\n\nI think the key complaint here is the transition to manual part, but I don't know what that means.\n\n\nRegards\n\nJesse Evans", "markup": "markdown", "html": "<p>Thanks for the help, Philip. I tried what you suggested, and got a different (but also indecipherable) error.</p>\n<p>Traceback (most recent call last):</p>\n<p>File \"C:\\labscript_suite\\labscript_devices\\NI_PCI_6733.py\", line 233, in transition_to_manual</p>\n<p>self.ao_task.StopTask()</p>\n<p>File \"&lt;string&gt;\", line 3, in StopTask</p>\n<p>File \"&lt;string&gt;\", line 2, in function</p>\n<p>File \"C:\\Anaconda\\lib\\site-packages\\PyDAQmx\\DAQmxFunctions.py\", line 33, in mafunction</p>\n<p>raise DAQError(error,errBuff.value.decode(\"utf-8\"), f.<strong>name</strong>)</p>\n<p>DAQError: Finite acquisition or generation has been stopped before the requested number of samples were acquired or generated.</p>\n<p>in function DAQmxStopTask</p>\n<p>Fatal exception in main process - Tue Jan 12, 12:53:30 :</p>\n<p>Traceback (most recent call last):</p>\n<p>File \"C:\\labscript_suite\\blacs\\tab_base_classes.py\", line 670, in mainloop</p>\n<p>next_yield = inmain(generator.send,results)</p>\n<p>File \"C:\\Anaconda\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 68, in inmain</p>\n<p>return get_inmain_result(in_main_later(fn,False,<em>args,</em>*kwargs))</p>\n<p>File \"C:\\Anaconda\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 47, in event</p>\n<p>result = event.fn(<em>event.args, </em>*event.kwargs)</p>\n<p>File \"C:\\labscript_suite\\blacs\\device_base_class.py\", line 627, in transition_to_manual</p>\n<p>raise Exception('Could not transition to manual. You must restart this device to continue')</p>\n<p>Exception: Could not transition to manual. You must restart this device to continue</p>\n<p>I think the key complaint here is the transition to manual part, but I don't know what that means.</p>\n<p>Regards</p>\n<p>Jesse Evans</p>", "type": "rendered"}, "created_on": "2016-01-12T17:56:54.793273+00:00", "user": {"display_name": "Jesse Evans", "uuid": "{3f9ae0ef-8c02-4174-a140-9c1e3f0c4f31}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3f9ae0ef-8c02-4174-a140-9c1e3f0c4f31%7D"}, "html": {"href": "https://bitbucket.org/%7B3f9ae0ef-8c02-4174-a140-9c1e3f0c4f31%7D/"}, "avatar": {"href": "https://bitbucket.org/account/jcevans/avatar/"}}, "nickname": "jcevans", "type": "user", "account_id": null}, "updated_on": "2016-01-12T18:00:40.610090+00:00", "type": "issue_comment", "id": 24650753}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/17/comments/24654186.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/17#comment-24654186"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/17.json"}}, "type": "issue", "id": 17, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "While setting values for the NI PCI 6733 DAQ..."}, "content": {"raw": "Nevermind, our clock was connected. We're all good here. Thanks for your help!", "markup": "markdown", "html": "<p>Nevermind, our clock was connected. We're all good here. Thanks for your help!</p>", "type": "rendered"}, "created_on": "2016-01-12T20:55:16.808232+00:00", "user": {"display_name": "Jesse Evans", "uuid": "{3f9ae0ef-8c02-4174-a140-9c1e3f0c4f31}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3f9ae0ef-8c02-4174-a140-9c1e3f0c4f31%7D"}, "html": {"href": "https://bitbucket.org/%7B3f9ae0ef-8c02-4174-a140-9c1e3f0c4f31%7D/"}, "avatar": {"href": "https://bitbucket.org/account/jcevans/avatar/"}}, "nickname": "jcevans", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 24654186}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/17/comments/24656029.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/17#comment-24656029"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/17.json"}}, "type": "issue", "id": 17, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "While setting values for the NI PCI 6733 DAQ..."}, "content": {"raw": "Hi Jesse,\n\nGlad it is fixed!\n\nFor future reference on decoding the BLACS exceptions: In the error above there are two exceptions raised. The first was from PyDAQmx:\n>DAQError: Finite acquisition or generation has been stopped before the requested number of samples were acquired or generated.\n\nThis then causes the second exception:\n> Exception: Could not transition to manual. You must restart this device to continue\n\nWhat this tells us is that PyDAQmx had an exception during the BLACS mode of \"transition_to_manual\". BLACS has 4 modes; manual, transition_to_buffered, buffered and transition_to_manual. BLACS moves each device tab through these modes as it prepares and finishes running an experiment. Tabs are in manual mode when you are not running a shot, buffered mode when they are in the middle of a shot and the transition modes to prepare and finalise the shot.\n\nIn this case, the NI card reported that it had not generated all of it's programmed samples by the time the experiment shot was finished. As you found out, that was because the clock line was not connected!\n\nLet us know if you have any further issues!", "markup": "markdown", "html": "<p>Hi Jesse,</p>\n<p>Glad it is fixed!</p>\n<p>For future reference on decoding the BLACS exceptions: In the error above there are two exceptions raised. The first was from PyDAQmx:</p>\n<blockquote>\n<p>DAQError: Finite acquisition or generation has been stopped before the requested number of samples were acquired or generated.</p>\n</blockquote>\n<p>This then causes the second exception:</p>\n<blockquote>\n<p>Exception: Could not transition to manual. You must restart this device to continue</p>\n</blockquote>\n<p>What this tells us is that PyDAQmx had an exception during the BLACS mode of \"transition_to_manual\". BLACS has 4 modes; manual, transition_to_buffered, buffered and transition_to_manual. BLACS moves each device tab through these modes as it prepares and finishes running an experiment. Tabs are in manual mode when you are not running a shot, buffered mode when they are in the middle of a shot and the transition modes to prepare and finalise the shot.</p>\n<p>In this case, the NI card reported that it had not generated all of it's programmed samples by the time the experiment shot was finished. As you found out, that was because the clock line was not connected!</p>\n<p>Let us know if you have any further issues!</p>", "type": "rendered"}, "created_on": "2016-01-12T22:23:34.926113+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 24656029}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/17/comments/24656030.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/17#comment-24656030"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/17.json"}}, "type": "issue", "id": 17, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "While setting values for the NI PCI 6733 DAQ..."}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-01-12T22:23:46.755287+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 24656030}], "page": 1, "size": 6}