{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/18/comments/36111828.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/18#comment-36111828"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/18.json"}}, "type": "issue", "id": 18, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Execution of small or time-critical analysis scripts as part of running shot"}, "content": {"raw": "The design goal of this is to perform computations that are an essential part of the execution of the script, for example providing information that must be ready for the desired execution of the next script.  \n\nWe have a tool like this in place already and we use it to stabilize the magnet field, but ChrisB rightly objects that it is a bit of a hack.\n\n2. Yes.  These scripts are intended to be used when they are an essential part of the experiment logic, and therefor should be included in the script defining the execution of the experiment.  They should not be used for \"analysis;\" in fact my attitude (that ChrisB does not subscribe to)  is that \"everything\" about the execution of your sequence should work 100% without lyse running at all.  to me, it is an analysis and rendering tool, not part of the closed loop operation of the sequencer.  \n\n1. I don't care strongly.  My opinion is that the desired functionality should not require the programmer know anything about lyse, but rather assume that they just know numpy scipy and enough about h5py to get the desired data out of the h5 file.  The minimal functionality should be provided by the python return statement, and our vision is to somehow get this information back to runmanager globals [I do very much think that these functions should have their results dumped into the h5 file because they are being treated as a device, and this would allow lyse to plot the results later on to track performance or whatever.].  ChrisB and I are still in discussions about how this looks in practice.  All of this is not to say that the lyse machinery could not be leveraged, but I do not think it should be required.\n\nWe already have a number of camera devices implemented in 100% python (they are indeed just devices that are given a tab of some sort in Blacs), and part of pushing the JQI changes back to the main branch will get these there for everybody.  You will shortly see a feature request appearing regarding giving Blacs the ability to launch worker processes on remote computers, which is required for this camera functionality.", "markup": "markdown", "html": "<p>The design goal of this is to perform computations that are an essential part of the execution of the script, for example providing information that must be ready for the desired execution of the next script.  </p>\n<p>We have a tool like this in place already and we use it to stabilize the magnet field, but ChrisB rightly objects that it is a bit of a hack.</p>\n<ol>\n<li>\n<p>Yes.  These scripts are intended to be used when they are an essential part of the experiment logic, and therefor should be included in the script defining the execution of the experiment.  They should not be used for \"analysis;\" in fact my attitude (that ChrisB does not subscribe to)  is that \"everything\" about the execution of your sequence should work 100% without lyse running at all.  to me, it is an analysis and rendering tool, not part of the closed loop operation of the sequencer.  </p>\n</li>\n<li>\n<p>I don't care strongly.  My opinion is that the desired functionality should not require the programmer know anything about lyse, but rather assume that they just know numpy scipy and enough about h5py to get the desired data out of the h5 file.  The minimal functionality should be provided by the python return statement, and our vision is to somehow get this information back to runmanager globals [I do very much think that these functions should have their results dumped into the h5 file because they are being treated as a device, and this would allow lyse to plot the results later on to track performance or whatever.].  ChrisB and I are still in discussions about how this looks in practice.  All of this is not to say that the lyse machinery could not be leveraged, but I do not think it should be required.</p>\n</li>\n</ol>\n<p>We already have a number of camera devices implemented in 100% python (they are indeed just devices that are given a tab of some sort in Blacs), and part of pushing the JQI changes back to the main branch will get these there for everybody.  You will shortly see a feature request appearing regarding giving Blacs the ability to launch worker processes on remote computers, which is required for this camera functionality.</p>", "type": "rendered"}, "created_on": "2017-04-21T00:40:26.051479+00:00", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}, "updated_on": null, "type": "issue_comment", "id": 36111828}