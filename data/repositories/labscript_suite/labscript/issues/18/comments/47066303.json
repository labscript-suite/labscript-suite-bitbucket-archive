{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/18/comments/47066303.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/18#comment-47066303"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/18.json"}}, "type": "issue", "id": 18, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Execution of small or time-critical analysis scripts as part of running shot"}, "content": {"raw": "Here's a checklist of what needs to be done to get this working:\n\n### labscript: ###\n* ~~The ability to specify an order in which devices transition to static and to buffered mode~~. Addressed in [labscript pull request 37](#!/labscript_suite/labscript/pull-requests/37/start_order-and-stop_order/)\n\n### zprocess: ###\n* ~~Allow an event to connect to a remote broker by specifying a host and port numbers~~. Implemented in [zprocess 2.6](https://bitbucket.org/cbillington/zprocess/commits/835c5017d7ce12341bb2713e8190ba51a3fa886a)\n\n### BLACS: ###\n* Server should have a method to give BLACS version number (so that future dependencies on communication with the server can be tracked), and another to give broker\n  ports to allow subscribers to subscribe to its events.\n* Emit a zprocess event (which is a wrapper around a zmq.PUB message) whenever the queue decreases in size saying how many shots are left in the queue (including zero)\n* Implement ordered transition to static and transition to buffered based on settings\n  saved by labscript as above. Backward compatible if the settings don't exist.\n\n### runmanager: ###\n* A \"remote API\", `runmanager.remote` for interacting with a running instance of runmanager and setting globals, getting globals, clicking 'engage', and more to be added later.\n\n* A tab showing the compilation queue, including variables that differ between different shots in the queue. Support re-ordering and deletion, and make it a TreeView grouping by sequence. Show compilation progress bars.\n\n* A checkbox for \"just-in-time\" compilation vs ahead of time compilation. The 'set\n  global' remote command can have a 'where' argument that says whether to set it\n  in the globals interface, or the queued shots, or both.\n\n* A setting for when the shots should be compiled in \"just-in-time\" mode - when BLACS has an empty queue, or when it has one remaining shot, or ten? This is optional - as a first implementation this should be just \"compile them when BLACS has an empty queue\"\n\n* depend on the version of zprocess allowing connection to remote broker, and listen for events telling you when to submit a shot.\n\n* There needs to be an option to keep the apparatus warm if the compilation queue runs dry. This could probably be implemented at first as 'repeat all/repeat last' options to the compilation queue, identical to those in the BLACS queue, which is the mechanism currently used to keep experiments warm in ahead-of-time-compiled shots. In the longer run, a notion of a \"default shot\", could be useful, in which runmanager has a 'current value' and a 'default value' for globals. the 'default value' could be used to submit 'keep warm' shots. A diff between default globals and current globals would also be super useful for quickly inspecting what has changed about the globals. But this is a separate feature.\n\n### labscript_devices: ###\n* A \"script_runner\" device that either stores functions or whole scripts to execute\n  at the end of a shot, specified at compile time. Leaning toward letting these\n  be functions rather than actually being runnable lyse routines - I think they are distinct, though there's\n  no reason why the lyse API can't be used to save results. The script runner may need\n  to interact with the lyse API to specify the name of the group to which any results\n  are saved, since it cannot be introspected as it usually is in a lyse routine.", "markup": "markdown", "html": "<p>Here's a checklist of what needs to be done to get this working:</p>\n<h3 id=\"markdown-header-labscript\">labscript:</h3>\n<ul>\n<li><del>The ability to specify an order in which devices transition to static and to buffered mode</del>. Addressed in <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/pull-requests/37/start_order-and-stop_order/\" rel=\"nofollow\">labscript pull request 37</a></li>\n</ul>\n<h3 id=\"markdown-header-zprocess\">zprocess:</h3>\n<ul>\n<li><del>Allow an event to connect to a remote broker by specifying a host and port numbers</del>. Implemented in <a data-is-external-link=\"true\" href=\"https://bitbucket.org/cbillington/zprocess/commits/835c5017d7ce12341bb2713e8190ba51a3fa886a\" rel=\"nofollow\">zprocess 2.6</a></li>\n</ul>\n<h3 id=\"markdown-header-blacs\">BLACS:</h3>\n<ul>\n<li>Server should have a method to give BLACS version number (so that future dependencies on communication with the server can be tracked), and another to give broker\n  ports to allow subscribers to subscribe to its events.</li>\n<li>Emit a zprocess event (which is a wrapper around a zmq.PUB message) whenever the queue decreases in size saying how many shots are left in the queue (including zero)</li>\n<li>Implement ordered transition to static and transition to buffered based on settings\n  saved by labscript as above. Backward compatible if the settings don't exist.</li>\n</ul>\n<h3 id=\"markdown-header-runmanager\">runmanager:</h3>\n<ul>\n<li>\n<p>A \"remote API\", <code>runmanager.remote</code> for interacting with a running instance of runmanager and setting globals, getting globals, clicking 'engage', and more to be added later.</p>\n</li>\n<li>\n<p>A tab showing the compilation queue, including variables that differ between different shots in the queue. Support re-ordering and deletion, and make it a TreeView grouping by sequence. Show compilation progress bars.</p>\n</li>\n<li>\n<p>A checkbox for \"just-in-time\" compilation vs ahead of time compilation. The 'set\n  global' remote command can have a 'where' argument that says whether to set it\n  in the globals interface, or the queued shots, or both.</p>\n</li>\n<li>\n<p>A setting for when the shots should be compiled in \"just-in-time\" mode - when BLACS has an empty queue, or when it has one remaining shot, or ten? This is optional - as a first implementation this should be just \"compile them when BLACS has an empty queue\"</p>\n</li>\n<li>\n<p>depend on the version of zprocess allowing connection to remote broker, and listen for events telling you when to submit a shot.</p>\n</li>\n<li>\n<p>There needs to be an option to keep the apparatus warm if the compilation queue runs dry. This could probably be implemented at first as 'repeat all/repeat last' options to the compilation queue, identical to those in the BLACS queue, which is the mechanism currently used to keep experiments warm in ahead-of-time-compiled shots. In the longer run, a notion of a \"default shot\", could be useful, in which runmanager has a 'current value' and a 'default value' for globals. the 'default value' could be used to submit 'keep warm' shots. A diff between default globals and current globals would also be super useful for quickly inspecting what has changed about the globals. But this is a separate feature.</p>\n</li>\n</ul>\n<h3 id=\"markdown-header-labscript_devices\">labscript_devices:</h3>\n<ul>\n<li>A \"script_runner\" device that either stores functions or whole scripts to execute\n  at the end of a shot, specified at compile time. Leaning toward letting these\n  be functions rather than actually being runnable lyse routines - I think they are distinct, though there's\n  no reason why the lyse API can't be used to save results. The script runner may need\n  to interact with the lyse API to specify the name of the group to which any results\n  are saved, since it cannot be introspected as it usually is in a lyse routine.</li>\n</ul>", "type": "rendered"}, "created_on": "2018-08-01T16:03:50.166893+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-08-01T20:30:55.832683+00:00", "type": "issue_comment", "id": 47066303}