{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/18/comments/47066563.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/18#comment-47066563"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/18.json"}}, "type": "issue", "id": 18, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Execution of small or time-critical analysis scripts as part of running shot"}, "content": {"raw": "For cases where we want to perform feedback, would the running script directly send the updated variables to runmanager using the new interface?\n\nI think that functions are the at least \"a\" way to go, if not \"the\" way to go.  What kind of call signature were you expecting for these functions?  It could be as simple as,\n\n    def mini_function(h5file):\n        \"\"\"\n        h5file is an open reference to the current shot file in its current state.  \n        It has already been locked by h5lock and will be closed when the script\n        is done\n        \"\"\"\n\n        # do stuff\n\n        pass\n\nIf these functions return anything, what should that mean?  If we want access to the current variables are they to be extracted from the h5 file, or provided as an additional argument to the function?\n\nIf we want persistence of information how should that be managed?  It could be 100% in the runmanager variables that are sent to run-manager, or ...", "markup": "markdown", "html": "<p>For cases where we want to perform feedback, would the running script directly send the updated variables to runmanager using the new interface?</p>\n<p>I think that functions are the at least \"a\" way to go, if not \"the\" way to go.  What kind of call signature were you expecting for these functions?  It could be as simple as,</p>\n<div class=\"codehilite\"><pre><span></span>def mini_function(h5file):\n    &quot;&quot;&quot;\n    h5file is an open reference to the current shot file in its current state.  \n    It has already been locked by h5lock and will be closed when the script\n    is done\n    &quot;&quot;&quot;\n\n    # do stuff\n\n    pass\n</pre></div>\n\n\n<p>If these functions return anything, what should that mean?  If we want access to the current variables are they to be extracted from the h5 file, or provided as an additional argument to the function?</p>\n<p>If we want persistence of information how should that be managed?  It could be 100% in the runmanager variables that are sent to run-manager, or ...</p>", "type": "rendered"}, "created_on": "2018-08-01T16:24:33.708207+00:00", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}, "updated_on": null, "type": "issue_comment", "id": 47066563}