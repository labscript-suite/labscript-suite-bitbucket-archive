{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/18/comments/47180183.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/18#comment-47180183"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/18.json"}}, "type": "issue", "id": 18, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Execution of small or time-critical analysis scripts as part of running shot"}, "content": {"raw": "I think that would be a bit tricky! Ensuring the data gets to the next HDF5 file would require it be stored somewhere in the meantime, since the next HDF5 file may not exist yet. And if the next shot file does exist because shots have been pre-compiled, then the notion of 'next' is a bit fuzzy since shots can be re-ordered before execution. For just-in-time-compiled shots, if the data is stored in runmanager ready to be added to the next shot file, then runmanager will need to store it to disk, since runmanager can be restarted and the data would be lost.\n\nWe could do that, but it's many hoops to jump though considering that there are a number of ways to do disk persistence in Python, from manually using `h5py` to using the `shelve` standard library module, or np.save, or pickle (`shelve` is probably the best for this kind of purpose), I suspect users using these things directly for disk persistence is the best solution (and when we get around to documenting this functionality, pointing users in that direction would be good). For non-disk-persistent  data, some object that attributes can just be saved to as in lyse would be adequate. We could instantiate a `shelf` for the user so they don't have to choose a filename, but other than that there isn't much functionality I think we could add that isn't best served by the user using the standard library themselves.", "markup": "markdown", "html": "<p>I think that would be a bit tricky! Ensuring the data gets to the next HDF5 file would require it be stored somewhere in the meantime, since the next HDF5 file may not exist yet. And if the next shot file does exist because shots have been pre-compiled, then the notion of 'next' is a bit fuzzy since shots can be re-ordered before execution. For just-in-time-compiled shots, if the data is stored in runmanager ready to be added to the next shot file, then runmanager will need to store it to disk, since runmanager can be restarted and the data would be lost.</p>\n<p>We could do that, but it's many hoops to jump though considering that there are a number of ways to do disk persistence in Python, from manually using <code>h5py</code> to using the <code>shelve</code> standard library module, or np.save, or pickle (<code>shelve</code> is probably the best for this kind of purpose), I suspect users using these things directly for disk persistence is the best solution (and when we get around to documenting this functionality, pointing users in that direction would be good). For non-disk-persistent  data, some object that attributes can just be saved to as in lyse would be adequate. We could instantiate a <code>shelf</code> for the user so they don't have to choose a filename, but other than that there isn't much functionality I think we could add that isn't best served by the user using the standard library themselves.</p>", "type": "rendered"}, "created_on": "2018-08-08T19:48:08.821780+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 47180183}