{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/19/comments/36130616.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/19#comment-36130616"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/19.json"}}, "type": "issue", "id": 19, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "#19: Remerge JQI with Monash.  Then get ground rules down for proper behavior with rules."}, "content": {"raw": "Ah, no, this plugin system is about how code and settings are organised and in BLACS. Rather than putting code at the start and end of the queue managing code, we'll put a \"run_pre_shot_actions()\" function at the start and a \"run_post_shot_actions()\" or similar at the end, and BLACS plugins will register actions that they want to take place. The plugin code is all still within BLACS, it's just a neater way of organising the code and settings. We ought to implement many features as BLACS plugins regardless of whether that code is calling out to runmanager. Plugins can register actions as well as insert things into the GUI, so I think even the progress bar should be implemented as a \"plugin\", even though it's unlikely to ever be disabled - it's a clean way of organising the code in the presence of uncertain feature growth.", "markup": "markdown", "html": "<p>Ah, no, this plugin system is about how code and settings are organised and in BLACS. Rather than putting code at the start and end of the queue managing code, we'll put a \"run_pre_shot_actions()\" function at the start and a \"run_post_shot_actions()\" or similar at the end, and BLACS plugins will register actions that they want to take place. The plugin code is all still within BLACS, it's just a neater way of organising the code and settings. We ought to implement many features as BLACS plugins regardless of whether that code is calling out to runmanager. Plugins can register actions as well as insert things into the GUI, so I think even the progress bar should be implemented as a \"plugin\", even though it's unlikely to ever be disabled - it's a clean way of organising the code in the presence of uncertain feature growth.</p>", "type": "rendered"}, "created_on": "2017-04-21T15:51:45.284717+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 36130616}