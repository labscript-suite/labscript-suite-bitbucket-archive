{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/19/comments/36113841.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/19#comment-36113841"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/19.json"}}, "type": "issue", "id": 19, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "#19: Remerge JQI with Monash.  Then get ground rules down for proper behavior with rules."}, "content": {"raw": "I would like to suggest that many of the BLACS features logged so far could be incorporated into a more expanded \"plugin\" system so that they can be easily turned on/off by people who are not looking for that functionality and there is less inter-dependency between the core framework of BLACS and features. The plugin system also exposes access to the BLACS preferences panel, meaning configuration is possible without having to delve into the labconfig file and without needing to restart the application. Particularly #31 and #32 should be able to be implemented as plugins provided some additional callbacks are exposed through the plugin system.", "markup": "markdown", "html": "<p>I would like to suggest that many of the BLACS features logged so far could be incorporated into a more expanded \"plugin\" system so that they can be easily turned on/off by people who are not looking for that functionality and there is less inter-dependency between the core framework of BLACS and features. The plugin system also exposes access to the BLACS preferences panel, meaning configuration is possible without having to delve into the labconfig file and without needing to restart the application. Particularly <a href=\"#!/labscript_suite/labscript/issues/31/automatic-backup-of-shot-files-after-blacs\" rel=\"nofollow\" title=\"Automatic backup of shot files after BLACS runs them\" class=\"ap-connect-link\">#31</a> and <a href=\"#!/labscript_suite/labscript/issues/32/smarter-dealing-with-errors-so-not-every\" rel=\"nofollow\" title=\"Smarter dealing with errors, so not every error causes a stop.\" class=\"ap-connect-link\">#32</a> should be able to be implemented as plugins provided some additional callbacks are exposed through the plugin system.</p>", "type": "rendered"}, "created_on": "2017-04-21T04:09:19.078254+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 36113841}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/19/comments/36130103.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/19#comment-36130103"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/19.json"}}, "type": "issue", "id": 19, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "#19: Remerge JQI with Monash.  Then get ground rules down for proper behavior with rules."}, "content": {"raw": "Agreed, and the plugin system is a good way to keep the code maintainable regardless of preferences for what should be enabled and not. So basically instead of putting code at the beginning and end of the queue, we'd add things like a \"pre_shot_actions\" hook and a \"post_shot_actions\" hook to the plugin system, and then have the plugins register actions to occur at those points and keep track of their state internally.", "markup": "markdown", "html": "<p>Agreed, and the plugin system is a good way to keep the code maintainable regardless of preferences for what should be enabled and not. So basically instead of putting code at the beginning and end of the queue, we'd add things like a \"pre_shot_actions\" hook and a \"post_shot_actions\" hook to the plugin system, and then have the plugins register actions to occur at those points and keep track of their state internally.</p>", "type": "rendered"}, "created_on": "2017-04-21T15:28:38.609831+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 36130103}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/19/comments/36130490.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/19#comment-36130490"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/19.json"}}, "type": "issue", "id": 19, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "#19: Remerge JQI with Monash.  Then get ground rules down for proper behavior with rules."}, "content": {"raw": "So really runmanager would be telling blacs what pre and post-shot actions come with each shot?  What about cases where Blacs is giving itself shots (like reps)?  In such a case we do not want backups, for example, so Blacs would have to contain some added logic that replicates runmanager logic.  I think this adds to the argument that the primary shot queue should be in runmanager and that Blacs should be asking runmanager for the next shot when it is ready for it.", "markup": "markdown", "html": "<p>So really runmanager would be telling blacs what pre and post-shot actions come with each shot?  What about cases where Blacs is giving itself shots (like reps)?  In such a case we do not want backups, for example, so Blacs would have to contain some added logic that replicates runmanager logic.  I think this adds to the argument that the primary shot queue should be in runmanager and that Blacs should be asking runmanager for the next shot when it is ready for it.</p>", "type": "rendered"}, "created_on": "2017-04-21T15:45:02.991927+00:00", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}, "updated_on": null, "type": "issue_comment", "id": 36130490}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/19/comments/36130616.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/19#comment-36130616"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/19.json"}}, "type": "issue", "id": 19, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "#19: Remerge JQI with Monash.  Then get ground rules down for proper behavior with rules."}, "content": {"raw": "Ah, no, this plugin system is about how code and settings are organised and in BLACS. Rather than putting code at the start and end of the queue managing code, we'll put a \"run_pre_shot_actions()\" function at the start and a \"run_post_shot_actions()\" or similar at the end, and BLACS plugins will register actions that they want to take place. The plugin code is all still within BLACS, it's just a neater way of organising the code and settings. We ought to implement many features as BLACS plugins regardless of whether that code is calling out to runmanager. Plugins can register actions as well as insert things into the GUI, so I think even the progress bar should be implemented as a \"plugin\", even though it's unlikely to ever be disabled - it's a clean way of organising the code in the presence of uncertain feature growth.", "markup": "markdown", "html": "<p>Ah, no, this plugin system is about how code and settings are organised and in BLACS. Rather than putting code at the start and end of the queue managing code, we'll put a \"run_pre_shot_actions()\" function at the start and a \"run_post_shot_actions()\" or similar at the end, and BLACS plugins will register actions that they want to take place. The plugin code is all still within BLACS, it's just a neater way of organising the code and settings. We ought to implement many features as BLACS plugins regardless of whether that code is calling out to runmanager. Plugins can register actions as well as insert things into the GUI, so I think even the progress bar should be implemented as a \"plugin\", even though it's unlikely to ever be disabled - it's a clean way of organising the code in the presence of uncertain feature growth.</p>", "type": "rendered"}, "created_on": "2017-04-21T15:51:45.284717+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 36130616}], "page": 1, "size": 4}