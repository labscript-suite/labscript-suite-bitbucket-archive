{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/26/comments/38342950.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/26#comment-38342950"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/26.json"}}, "type": "issue", "id": 26, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Port to pyqt5 and python3."}, "content": {"raw": "importing `__future__` things will be a necessary part of porting to Python 3 whilst supporting Python 2 still. Whilst I agree with Phil that it will break things, they are things that will break in a port to Python 3 anyway, so there's not much way around it. Turning on each `__future__` import one by one and testing I think is a good idea as a first step toward Python 3  porting, but yes I definitely expect things to break.  I suspect `division` to probably be alright, `unicode_literals` could possibly be trickier but I'm not sure. But considering them one by one could be a good way to get these aspects of the Python 3 port done in a regression-testing friendly way.", "markup": "markdown", "html": "<p>importing <code>__future__</code> things will be a necessary part of porting to Python 3 whilst supporting Python 2 still. Whilst I agree with Phil that it will break things, they are things that will break in a port to Python 3 anyway, so there's not much way around it. Turning on each <code>__future__</code> import one by one and testing I think is a good idea as a first step toward Python 3  porting, but yes I definitely expect things to break.  I suspect <code>division</code> to probably be alright, <code>unicode_literals</code> could possibly be trickier but I'm not sure. But considering them one by one could be a good way to get these aspects of the Python 3 port done in a regression-testing friendly way.</p>", "type": "rendered"}, "created_on": "2017-07-20T01:20:07.397409+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 38342950}