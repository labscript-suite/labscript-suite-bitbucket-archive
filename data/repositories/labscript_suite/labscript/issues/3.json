{"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/labscript/issues/3/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/issues/3.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/issues/3/watch"}, "comments": {"href": "data/repositories/labscript_suite/labscript/issues/3/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/3/better-control-of-shutters"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/issues/3/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Better control of shutters", "component": null, "votes": 0, "watches": 2, "content": {"raw": "At the moment labscript is quite simple when it comes to shutters. The open() and close() commands offset the triggers by the appropriate delays (see also issue #2).\r\n\r\nIn reality, shutters are more complicated, they take a finite time to open and close, and may have other timing requirements.\r\n\r\nFor example, our SRS shutters will stay open for a fixed minimum time if the close trigger is too soon after the open trigger, and similar for minimum close times.\r\n\r\nPhil and I propose the introduction of new commands to allow the user to be sure that the shutter does what they want:\r\n\r\n```\r\nopen_by(t)\r\nclose_by(t)\r\nopen_from(t)\r\nclose_from(t)\r\n```\r\nThe _by commands would take the open/close delays and the shutter rise/fall time to ensure that the trigger is sent such that the shutter is completely open/closed at the time requested.\r\n\r\nThe _from commands would use the delays to trigger the shutter to start opening/closing at the requested time.\r\n\r\nFurther, the triggering should be aware of minimum opened/closed state times, and not trigger faster than these such that the timing of the trigger commands matches the timing of the physical state of the shutter. This helps debugging experimental problems in runviewer.\r\nThe safest option for dealing with user requests to open/close this would be to raise an error.\r\nThis should be implemented generally enough to account for the fact that the min open and min close times are not always equal.\r\n\r\nThe \"delay\" parameters that will be supplied for each shutter will now be\r\n```\r\n(open_delay,\r\nopen_time,\r\nmin_opened_time,\r\nclose_delay,\r\nclose_time,\r\nmin_closed_time)\r\n```\r\nOpen and close delays should be the time from the trigger until the shutter is half way between the fully open and fully closed states (as is currently assumed).\r\nThis will allow backwards compatibility with open and close commands.\r\n\r\nThe _by and _from commands will then add or subtract half the open/close time as needed. The user can choose how strict they want to be with their open/close times depending on what level of leakage is acceptable (e.g. time taken from 10% open to 90% open vs 1% to 99%)\r\n\r\nThe min_opened/closed_time should be the maximum time allowed between triggers such that the shutter state remains the same as a short/delta pulse would produce.\r\n\r\nThese parameters are stored as attributes of the shutters. This is useful, for example the user could request a shutter to open for the minimum possible time by calling\r\n\r\n```\r\nshutter.open(t)\r\nshutter.close(t+shutter.min_opened_time)\r\n```", "markup": "markdown", "html": "<p>At the moment labscript is quite simple when it comes to shutters. The open() and close() commands offset the triggers by the appropriate delays (see also issue <a href=\"#!/labscript_suite/labscript/issues/2/shutter-commands-can-be-reordered-due-to\" rel=\"nofollow\" title=\"Shutter commands can be reordered due to shutter delays\" class=\"ap-connect-link\">#2</a>).</p>\n<p>In reality, shutters are more complicated, they take a finite time to open and close, and may have other timing requirements.</p>\n<p>For example, our SRS shutters will stay open for a fixed minimum time if the close trigger is too soon after the open trigger, and similar for minimum close times.</p>\n<p>Phil and I propose the introduction of new commands to allow the user to be sure that the shutter does what they want:</p>\n<div class=\"codehilite\"><pre><span></span>open_by(t)\nclose_by(t)\nopen_from(t)\nclose_from(t)\n</pre></div>\n\n\n<p>The _by commands would take the open/close delays and the shutter rise/fall time to ensure that the trigger is sent such that the shutter is completely open/closed at the time requested.</p>\n<p>The _from commands would use the delays to trigger the shutter to start opening/closing at the requested time.</p>\n<p>Further, the triggering should be aware of minimum opened/closed state times, and not trigger faster than these such that the timing of the trigger commands matches the timing of the physical state of the shutter. This helps debugging experimental problems in runviewer.\nThe safest option for dealing with user requests to open/close this would be to raise an error.\nThis should be implemented generally enough to account for the fact that the min open and min close times are not always equal.</p>\n<p>The \"delay\" parameters that will be supplied for each shutter will now be</p>\n<div class=\"codehilite\"><pre><span></span>(open_delay,\nopen_time,\nmin_opened_time,\nclose_delay,\nclose_time,\nmin_closed_time)\n</pre></div>\n\n\n<p>Open and close delays should be the time from the trigger until the shutter is half way between the fully open and fully closed states (as is currently assumed).\nThis will allow backwards compatibility with open and close commands.</p>\n<p>The _by and _from commands will then add or subtract half the open/close time as needed. The user can choose how strict they want to be with their open/close times depending on what level of leakage is acceptable (e.g. time taken from 10% open to 90% open vs 1% to 99%)</p>\n<p>The min_opened/closed_time should be the maximum time allowed between triggers such that the shutter state remains the same as a short/delta pulse would produce.</p>\n<p>These parameters are stored as attributes of the shutters. This is useful, for example the user could request a shutter to open for the minimum possible time by calling</p>\n<div class=\"codehilite\"><pre><span></span>shutter.open(t)\nshutter.close(t+shutter.min_opened_time)\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "new", "version": null, "edited_on": null, "created_on": "2014-06-11T07:35:16.666374+00:00", "milestone": null, "updated_on": "2014-06-12T01:50:30.016391+00:00", "type": "issue", "id": 3}