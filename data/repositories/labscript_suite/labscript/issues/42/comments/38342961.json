{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/42/comments/38342961.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/42#comment-38342961"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/42.json"}}, "type": "issue", "id": 42, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Loop recognition"}, "content": {"raw": "Mainly the lack of support is because we've just never needed to do a repeated pulse sequence. The few times we have done something with sequential digital pulses, we've typically ended up wanting to do something non-linear in time which then rules out any sort of looping (at least with the standard set of hardware we support),\n\nThere is a version of the PineBlaster called the [BitBlaster](#!/martijnj/bitblaster/), which has 8 digital outputs, but it doesn't support looping and has yet to have a labscript_devices interface written for it. I've also begun merging the code-base for the PineBlaster and BitBlaster (along with support for a better spec'd ChipKit device) in the [PineBlasterv2](#!/labscript_suite/pineblasterv2) project. This one again doesn't have a labscript_devices interface, needs comprehensive testing around trigger timing (had some issues where assembly instructions weren't executing with the same timing due to instruction caching in the CPU which I've hopefully fixed, but isn't tested enough of my liking) and doesn't bring additional looping functionality (the main advantage of the newer chipkit board is additional memory for more instructions, faster timing in bitblaster mode and it's easier to externally reference it to 10MHz).\n\nYou could also construct a dummy intermediate device in labscript (I may have code for something like this somewhere...) that you attach to a PineBlaster clockline in order to generate the required set of pulses on the pineblasters single clockline output, and then just use that output directly. Doing this avoids the issue of intersecting loops since each PineBlaster only has one output (although you may run into issues with synchronisation since they are running off crystals and it's non-trivial to reference the original PineBlaster to 10MHz).", "markup": "markdown", "html": "<p>Mainly the lack of support is because we've just never needed to do a repeated pulse sequence. The few times we have done something with sequential digital pulses, we've typically ended up wanting to do something non-linear in time which then rules out any sort of looping (at least with the standard set of hardware we support),</p>\n<p>There is a version of the PineBlaster called the <a data-is-external-link=\"true\" href=\"#!/martijnj/bitblaster/\" rel=\"nofollow\">BitBlaster</a>, which has 8 digital outputs, but it doesn't support looping and has yet to have a labscript_devices interface written for it. I've also begun merging the code-base for the PineBlaster and BitBlaster (along with support for a better spec'd ChipKit device) in the <a data-is-external-link=\"true\" href=\"#!/labscript_suite/pineblasterv2\" rel=\"nofollow\">PineBlasterv2</a> project. This one again doesn't have a labscript_devices interface, needs comprehensive testing around trigger timing (had some issues where assembly instructions weren't executing with the same timing due to instruction caching in the CPU which I've hopefully fixed, but isn't tested enough of my liking) and doesn't bring additional looping functionality (the main advantage of the newer chipkit board is additional memory for more instructions, faster timing in bitblaster mode and it's easier to externally reference it to 10MHz).</p>\n<p>You could also construct a dummy intermediate device in labscript (I may have code for something like this somewhere...) that you attach to a PineBlaster clockline in order to generate the required set of pulses on the pineblasters single clockline output, and then just use that output directly. Doing this avoids the issue of intersecting loops since each PineBlaster only has one output (although you may run into issues with synchronisation since they are running off crystals and it's non-trivial to reference the original PineBlaster to 10MHz).</p>", "type": "rendered"}, "created_on": "2017-07-20T01:21:35.852764+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 38342961}