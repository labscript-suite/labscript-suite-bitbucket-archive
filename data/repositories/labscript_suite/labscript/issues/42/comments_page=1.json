{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/42/comments/38325536.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/42#comment-38325536"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/42.json"}}, "type": "issue", "id": 42, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Loop recognition"}, "content": {"raw": "What device is the digital output on? If it is an output on a device (such as an NI card) that is clocked by a PulseBlaster, then you can use the [`repeat_pulse_sequence`](#!/labscript_suite/labscript/src/c4a6c99d54d3a66c1dc600eca47821f6665d5089/labscript.py?at=default&fileviewer=file-view-default#labscript.py-1475) method.\n\nUnfortunately I don't see anyway to do this simply on a direct output of a PulseBlaster since managing intersecting ramps between clocklines and the direct output is going to be really hard, if not actually impossible.", "markup": "markdown", "html": "<p>What device is the digital output on? If it is an output on a device (such as an NI card) that is clocked by a PulseBlaster, then you can use the <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/src/c4a6c99d54d3a66c1dc600eca47821f6665d5089/labscript.py?at=default&amp;fileviewer=file-view-default#labscript.py-1475\" rel=\"nofollow\"><code>repeat_pulse_sequence</code></a> method.</p>\n<p>Unfortunately I don't see anyway to do this simply on a direct output of a PulseBlaster since managing intersecting ramps between clocklines and the direct output is going to be really hard, if not actually impossible.</p>", "type": "rendered"}, "created_on": "2017-07-19T10:29:08.390150+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 38325536}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/42/comments/38325618.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/42#comment-38325618"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/42.json"}}, "type": "issue", "id": 42, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Loop recognition"}, "content": {"raw": "Yes it's a NI card, I'll take a look at repeat_pulse_sequence definitely sounds good hadn't seen that function before.\n\nBut I was thinking of a more general solution.\nMaybe some sort of syntax to analogous to \"for\" in python to indicate loops. Or a pattern recognition on the pulsblaster instructions that reduces them at the cost of compile time.", "markup": "markdown", "html": "<p>Yes it's a NI card, I'll take a look at repeat_pulse_sequence definitely sounds good hadn't seen that function before.</p>\n<p>But I was thinking of a more general solution.\nMaybe some sort of syntax to analogous to \"for\" in python to indicate loops. Or a pattern recognition on the pulsblaster instructions that reduces them at the cost of compile time.</p>", "type": "rendered"}, "created_on": "2017-07-19T10:33:12.481043+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 38325618}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/42/comments/38325865.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/42#comment-38325865"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/42.json"}}, "type": "issue", "id": 42, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Loop recognition"}, "content": {"raw": "Yes, a pattern recognition algorithm to minimise PulseBlaster instructions is something we've thought about before, but never found the need to implement. If you want to go down that route you are welcome. We've found it easier to add another PulseBlaster or PineBlaster in order to increase the number of independent pseudoclocks which ultimately cuts down on instructions, rather than write the optimisation algorithm!\n\nPersonally, I think many PineBlasters are the future of PseudoClocks and PulseBlasters will be used in just standalone mode (which saves significant instructions since you don't need to tick any clocks and is already supported!), if used at all, but don't let that stop you!", "markup": "markdown", "html": "<p>Yes, a pattern recognition algorithm to minimise PulseBlaster instructions is something we've thought about before, but never found the need to implement. If you want to go down that route you are welcome. We've found it easier to add another PulseBlaster or PineBlaster in order to increase the number of independent pseudoclocks which ultimately cuts down on instructions, rather than write the optimisation algorithm!</p>\n<p>Personally, I think many PineBlasters are the future of PseudoClocks and PulseBlasters will be used in just standalone mode (which saves significant instructions since you don't need to tick any clocks and is already supported!), if used at all, but don't let that stop you!</p>", "type": "rendered"}, "created_on": "2017-07-19T10:44:39.123004+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 38325865}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/42/comments/38337334.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/42#comment-38337334"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/42.json"}}, "type": "issue", "id": 42, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Loop recognition"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2017-07-19T18:06:18.348667+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 38337334}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/42/comments/38340153.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/42#comment-38340153"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/42.json"}}, "type": "issue", "id": 42, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Loop recognition"}, "content": {"raw": "I gave repeat_pulse_sequence a try and it seems to do what I want it to but is sadly not as user friendly as for loops are.\n\nOut of curiosity and a bit off topic: As you mentioned Pineblasters why don't they support direct digital outputs like Pulseblasters do? (we don't have any atm but I'm thinking about getting one as you made a good point earlier)\n\nI could imagine there being great benefit in using direct pulsblaster/pineblaster outputs for the purpose of loops as they support them and Ni cards just get overloaded with instructions.(depending in the amount of samples and loops) You already mentioned problems with things intersecting the loop but besides those issues are there other things that could cause problems?", "markup": "markdown", "html": "<p>I gave repeat_pulse_sequence a try and it seems to do what I want it to but is sadly not as user friendly as for loops are.</p>\n<p>Out of curiosity and a bit off topic: As you mentioned Pineblasters why don't they support direct digital outputs like Pulseblasters do? (we don't have any atm but I'm thinking about getting one as you made a good point earlier)</p>\n<p>I could imagine there being great benefit in using direct pulsblaster/pineblaster outputs for the purpose of loops as they support them and Ni cards just get overloaded with instructions.(depending in the amount of samples and loops) You already mentioned problems with things intersecting the loop but besides those issues are there other things that could cause problems?</p>", "type": "rendered"}, "created_on": "2017-07-19T20:52:11.048559+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 38340153}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/42/comments/38342961.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/42#comment-38342961"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/42.json"}}, "type": "issue", "id": 42, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Loop recognition"}, "content": {"raw": "Mainly the lack of support is because we've just never needed to do a repeated pulse sequence. The few times we have done something with sequential digital pulses, we've typically ended up wanting to do something non-linear in time which then rules out any sort of looping (at least with the standard set of hardware we support),\n\nThere is a version of the PineBlaster called the [BitBlaster](#!/martijnj/bitblaster/), which has 8 digital outputs, but it doesn't support looping and has yet to have a labscript_devices interface written for it. I've also begun merging the code-base for the PineBlaster and BitBlaster (along with support for a better spec'd ChipKit device) in the [PineBlasterv2](#!/labscript_suite/pineblasterv2) project. This one again doesn't have a labscript_devices interface, needs comprehensive testing around trigger timing (had some issues where assembly instructions weren't executing with the same timing due to instruction caching in the CPU which I've hopefully fixed, but isn't tested enough of my liking) and doesn't bring additional looping functionality (the main advantage of the newer chipkit board is additional memory for more instructions, faster timing in bitblaster mode and it's easier to externally reference it to 10MHz).\n\nYou could also construct a dummy intermediate device in labscript (I may have code for something like this somewhere...) that you attach to a PineBlaster clockline in order to generate the required set of pulses on the pineblasters single clockline output, and then just use that output directly. Doing this avoids the issue of intersecting loops since each PineBlaster only has one output (although you may run into issues with synchronisation since they are running off crystals and it's non-trivial to reference the original PineBlaster to 10MHz).", "markup": "markdown", "html": "<p>Mainly the lack of support is because we've just never needed to do a repeated pulse sequence. The few times we have done something with sequential digital pulses, we've typically ended up wanting to do something non-linear in time which then rules out any sort of looping (at least with the standard set of hardware we support),</p>\n<p>There is a version of the PineBlaster called the <a data-is-external-link=\"true\" href=\"#!/martijnj/bitblaster/\" rel=\"nofollow\">BitBlaster</a>, which has 8 digital outputs, but it doesn't support looping and has yet to have a labscript_devices interface written for it. I've also begun merging the code-base for the PineBlaster and BitBlaster (along with support for a better spec'd ChipKit device) in the <a data-is-external-link=\"true\" href=\"#!/labscript_suite/pineblasterv2\" rel=\"nofollow\">PineBlasterv2</a> project. This one again doesn't have a labscript_devices interface, needs comprehensive testing around trigger timing (had some issues where assembly instructions weren't executing with the same timing due to instruction caching in the CPU which I've hopefully fixed, but isn't tested enough of my liking) and doesn't bring additional looping functionality (the main advantage of the newer chipkit board is additional memory for more instructions, faster timing in bitblaster mode and it's easier to externally reference it to 10MHz).</p>\n<p>You could also construct a dummy intermediate device in labscript (I may have code for something like this somewhere...) that you attach to a PineBlaster clockline in order to generate the required set of pulses on the pineblasters single clockline output, and then just use that output directly. Doing this avoids the issue of intersecting loops since each PineBlaster only has one output (although you may run into issues with synchronisation since they are running off crystals and it's non-trivial to reference the original PineBlaster to 10MHz).</p>", "type": "rendered"}, "created_on": "2017-07-20T01:21:35.852764+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 38342961}], "page": 1, "size": 6}