{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/44/comments/43986074.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/44#comment-43986074"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/44.json"}}, "type": "issue", "id": 44, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "limits should be stored in the connection table"}, "content": {"raw": "I'm in favor of this change but I see one problem with storing limits in connection table properties. The limits of a experiment file need to be the exact same as those of the connection table or connection table comparison fails. \nIt would make more sense if any limits that are within the limits of the connection table would be allowed. \nSo experiment limits (2, 3) with connection table limits of (1, 5) should pass comparison but  experiment limits of (2, 6) with connection table limits of (1, 5) should fail.\n\nThis could be done by checking them separately in Connection.compare_to. \nIs this the way to go or does anyone have a better idea? I'd be happy to make the 2 pull requests if there should be no other suggestions on how to get around this.", "markup": "markdown", "html": "<p>I'm in favor of this change but I see one problem with storing limits in connection table properties. The limits of a experiment file need to be the exact same as those of the connection table or connection table comparison fails. \nIt would make more sense if any limits that are within the limits of the connection table would be allowed. \nSo experiment limits (2, 3) with connection table limits of (1, 5) should pass comparison but  experiment limits of (2, 6) with connection table limits of (1, 5) should fail.</p>\n<p>This could be done by checking them separately in Connection.compare_to. \nIs this the way to go or does anyone have a better idea? I'd be happy to make the 2 pull requests if there should be no other suggestions on how to get around this.</p>", "type": "rendered"}, "created_on": "2018-03-18T12:46:29.343364+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 43986074}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/44/comments/43991084.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/44#comment-43991084"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/44.json"}}, "type": "issue", "id": 44, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "limits should be stored in the connection table"}, "content": {"raw": "Unfortunately I don't have a better idea. I don't particularly like having to treat \"limits\" as a special key of the connection table properties dictionary, but don't see any other option other than not allowing you to have limits that differ from the connection table.\n\nI'm not sure...maybe you shouldn't be able to set limits that are different to the main connection table? What are the scenarios where you might want different limits set?", "markup": "markdown", "html": "<p>Unfortunately I don't have a better idea. I don't particularly like having to treat \"limits\" as a special key of the connection table properties dictionary, but don't see any other option other than not allowing you to have limits that differ from the connection table.</p>\n<p>I'm not sure...maybe you shouldn't be able to set limits that are different to the main connection table? What are the scenarios where you might want different limits set?</p>", "type": "rendered"}, "created_on": "2018-03-19T00:04:50.519914+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 43991084}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/44/comments/43991121.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/44#comment-43991121"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/44.json"}}, "type": "issue", "id": 44, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "limits should be stored in the connection table"}, "content": {"raw": "Don't have any example handy, but I would feel better with allowing subranges. This prevents the user from recompiling the connection table in some cases and that always a good thing.\nI'd consider the connection table limits to be the values to not be exceeded to save connected hardware failure or damage.\nIn a experiment script however one could try to not exceed a sublimit (for some obscure reason) and the compiler could help do that.", "markup": "markdown", "html": "<p>Don't have any example handy, but I would feel better with allowing subranges. This prevents the user from recompiling the connection table in some cases and that always a good thing.\nI'd consider the connection table limits to be the values to not be exceeded to save connected hardware failure or damage.\nIn a experiment script however one could try to not exceed a sublimit (for some obscure reason) and the compiler could help do that.</p>", "type": "rendered"}, "created_on": "2018-03-19T00:12:23.397131+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 43991121}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/44/comments/44091651.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/44#comment-44091651"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/44.json"}}, "type": "issue", "id": 44, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "limits should be stored in the connection table"}, "content": {"raw": "Another idea I have is that we could encode the method of comparison inside the key of the JSON dictionary. This is similar to the way you define [SQL clauses using Pythonic syntax in Django](https://docs.djangoproject.com/en/2.0/ref/models/querysets/#field-lookups). For example, instead of saving it as `'limits': [0, 10]` we could save it as `'limits__allow_interval_subset': [0,10]` to indicate the values that are a subset are allowed during connection table comparisons.\n\nNot sure if I like this a 100%, but could be preferable to hardcoding a special case for `limits` since it's a) more general (we update the connection table comparison to handle `__allow_interval_subset` for any parameter in the connection table properties) and b) contains information about the need to do a special comparison in the connection table itself (so it is self-documenting, which is a key principle of the labscript suite).\n\nNote: I realise `__allow_interval_subset` is an awful suffix, it was just a descriptive example and not necessarily what I would want it to be!", "markup": "markdown", "html": "<p>Another idea I have is that we could encode the method of comparison inside the key of the JSON dictionary. This is similar to the way you define <a data-is-external-link=\"true\" href=\"https://docs.djangoproject.com/en/2.0/ref/models/querysets/#field-lookups\" rel=\"nofollow\">SQL clauses using Pythonic syntax in Django</a>. For example, instead of saving it as <code>'limits': [0, 10]</code> we could save it as <code>'limits__allow_interval_subset': [0,10]</code> to indicate the values that are a subset are allowed during connection table comparisons.</p>\n<p>Not sure if I like this a 100%, but could be preferable to hardcoding a special case for <code>limits</code> since it's a) more general (we update the connection table comparison to handle <code>__allow_interval_subset</code> for any parameter in the connection table properties) and b) contains information about the need to do a special comparison in the connection table itself (so it is self-documenting, which is a key principle of the labscript suite).</p>\n<p>Note: I realise <code>__allow_interval_subset</code> is an awful suffix, it was just a descriptive example and not necessarily what I would want it to be!</p>", "type": "rendered"}, "created_on": "2018-03-22T02:30:43.205837+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 44091651}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/44/comments/44093927.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/44#comment-44093927"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/44.json"}}, "type": "issue", "id": 44, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "limits should be stored in the connection table"}, "content": {"raw": "While that sounds more elegant it is equivalent in my opinion. I don't think there is any other case where we store a 2-tuple in the connection table properties that would need this subset feature. Also limits allowing subsets doesn't really need documenting as that is expected behavior.\nSo I'd opt for making limits special and checking it separately in compare to.", "markup": "markdown", "html": "<p>While that sounds more elegant it is equivalent in my opinion. I don't think there is any other case where we store a 2-tuple in the connection table properties that would need this subset feature. Also limits allowing subsets doesn't really need documenting as that is expected behavior.\nSo I'd opt for making limits special and checking it separately in compare to.</p>", "type": "rendered"}, "created_on": "2018-03-22T06:25:13.074786+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 44093927}], "page": 1, "size": 5}