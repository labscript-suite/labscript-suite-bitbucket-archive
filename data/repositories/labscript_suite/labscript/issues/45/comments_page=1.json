{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/45/comments/43870469.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/45#comment-43870469"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Restructure properties and BLACS connections"}, "content": {"raw": "I agree with the first half of this.\n\nI don't think it solves labscript_devices pull request 27 though because (in my view) that data should be in connection_table_properties because it describes a fixed hardware configuration that cannot be configured at runtime and if it is different, it should invalidate the connection table (especially since the new kwarg in that pull request actually modifies the instruction set stored in the HDF5 file). What we need is a way to do backwards compatible checks on the connection_table_properties between different versions of labscript_devices that doesn't invalidate the connection table if the default behaviour of the new code matches the old code (and so the lack of a parameter is not important). I think I'll make a new issue for this so we don't clutter this one.\n\nI'm ambivalent about changing the BLACS_connection column. We could do it, but the connection information would need to be stored in connection_table_properties with a consistent name (e.g. {\"BLACS_connection\":...}) in order for the forthcoming secondary control system/remote worker code to work (I'm assuming here that BLACS itself, rather than individual devices, needs to be able to determine which PC the BLACS tab/worker process are to be launched on and so BLACS needs to be able to find this information in a device agnostic way).", "markup": "markdown", "html": "<p>I agree with the first half of this.</p>\n<p>I don't think it solves labscript_devices pull request 27 though because (in my view) that data should be in connection_table_properties because it describes a fixed hardware configuration that cannot be configured at runtime and if it is different, it should invalidate the connection table (especially since the new kwarg in that pull request actually modifies the instruction set stored in the HDF5 file). What we need is a way to do backwards compatible checks on the connection_table_properties between different versions of labscript_devices that doesn't invalidate the connection table if the default behaviour of the new code matches the old code (and so the lack of a parameter is not important). I think I'll make a new issue for this so we don't clutter this one.</p>\n<p>I'm ambivalent about changing the BLACS_connection column. We could do it, but the connection information would need to be stored in connection_table_properties with a consistent name (e.g. {\"BLACS_connection\":...}) in order for the forthcoming secondary control system/remote worker code to work (I'm assuming here that BLACS itself, rather than individual devices, needs to be able to determine which PC the BLACS tab/worker process are to be launched on and so BLACS needs to be able to find this information in a device agnostic way).</p>", "type": "rendered"}, "created_on": "2018-03-12T23:27:17.934474+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 43870469}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/45/comments/43870530.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/45#comment-43870530"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Restructure properties and BLACS connections"}, "content": {"raw": "I've made my related proposal in [labscript_devices issue 24](#!/labscript_suite/labscript_devices/issues/24/backwards-compatible-connection-table)", "markup": "markdown", "html": "<p>I've made my related proposal in <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript_devices/issues/24/backwards-compatible-connection-table\" rel=\"nofollow\">labscript_devices issue 24</a></p>", "type": "rendered"}, "created_on": "2018-03-12T23:38:29.951241+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 43870530}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/45/comments/43870531.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/45#comment-43870531"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Restructure properties and BLACS connections"}, "content": {"raw": "Right, I see. So with labscript_devices pull request 27, BLACS will run the code just fine, but because it semantically represents the way the hardware is configured, BLACS should refuse to because it implies the hardware configuration is not consistent with the assumptions the shot file compiled with. Makes sense.\n\nPerhaps the BLACS connection column could change into solely storing the hostname where the device resides? 'control_system_host'. Possible confusion: the hostname would be relative to whatever computer BLACS was running on though, so BLACS would be 'localhost'.", "markup": "markdown", "html": "<p>Right, I see. So with labscript_devices pull request 27, BLACS will run the code just fine, but because it semantically represents the way the hardware is configured, BLACS should refuse to because it implies the hardware configuration is not consistent with the assumptions the shot file compiled with. Makes sense.</p>\n<p>Perhaps the BLACS connection column could change into solely storing the hostname where the device resides? 'control_system_host'. Possible confusion: the hostname would be relative to whatever computer BLACS was running on though, so BLACS would be 'localhost'.</p>", "type": "rendered"}, "created_on": "2018-03-12T23:38:56.820900+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 43870531}], "page": 1, "size": 3}