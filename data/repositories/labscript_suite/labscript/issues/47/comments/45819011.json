{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/47/comments/45819011.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/47#comment-45819011"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/47.json"}}, "type": "issue", "id": 47, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Missing WAIT instruction(s)"}, "content": {"raw": "While I agree that modifying the code to quantise relative to each trigger point (as if t=0 each trigger time) is the best solution to resolving the issue, I suspect it's more practical to leave that until the next major version of labscript.\n\nI actually think the bug might just be that we quantise the stop time and don't quantise the trigger times [here](#!/labscript_suite/labscript/src/c7fd00487ddf54772bcd28de426d29bebeb56cf0/labscript.py#lines-1001). I'm not sure if there would be a lingering issue with the fact that the outputs offset their instructions times using pre-quantised trigger times (and then quantise after the subtraction) but I suspect that the rounding to 0.1ns we do everywhere probably prevents issues with that (by removing floating point rounding errors).\n\nRuss, do you want to try adding `self.trigger_times = self.quantise_to_pseudoclock(self.trigger_times)` at the bottom of `PseudoclockDevice.offset_instructions_from_trigger` to see if it fixes it?", "markup": "markdown", "html": "<p>While I agree that modifying the code to quantise relative to each trigger point (as if t=0 each trigger time) is the best solution to resolving the issue, I suspect it's more practical to leave that until the next major version of labscript.</p>\n<p>I actually think the bug might just be that we quantise the stop time and don't quantise the trigger times <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/src/c7fd00487ddf54772bcd28de426d29bebeb56cf0/labscript.py#lines-1001\" rel=\"nofollow\">here</a>. I'm not sure if there would be a lingering issue with the fact that the outputs offset their instructions times using pre-quantised trigger times (and then quantise after the subtraction) but I suspect that the rounding to 0.1ns we do everywhere probably prevents issues with that (by removing floating point rounding errors).</p>\n<p>Russ, do you want to try adding <code>self.trigger_times = self.quantise_to_pseudoclock(self.trigger_times)</code> at the bottom of <code>PseudoclockDevice.offset_instructions_from_trigger</code> to see if it fixes it?</p>", "type": "rendered"}, "created_on": "2018-05-30T04:07:56.075684+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 45819011}