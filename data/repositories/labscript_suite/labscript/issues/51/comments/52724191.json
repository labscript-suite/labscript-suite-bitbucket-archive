{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/51/comments/52724191.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/51#comment-52724191"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/51.json"}}, "type": "issue", "id": 51, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Recent GatedClocks-bugfix merge breaks (at least) Novatech DDS9m timing"}, "content": {"raw": "I don\u2019t believe this is actually a timing bug. I think that my fix for a timing bug has identified a region of your code that was not technically safe \\(although no doubt worked\\). The issue I fixed was ensuring that a clock tick that updated a Novatech was never cut short \\(to ensure it is always 100us long\\). It\u2019s not that the Novatech is enforcing it\u2019s clock limit on the digital flag, but that the interaction between the clockline for the novatech and the clockline for the digital flag must be taken into account when determining the set of instructions for the pseudoclock.\n\nIn your example in the other thread, you are attempting to change a digital flag 40us after a call to update the Novatech. As the pseudoclock is common between the Novatech and the device controlling the digital gate, this necessitates that the Novatech clock pulse is only 40us long \\(20us high, 20us low\\), which is a violation of it\u2019s specified clock rate. Now, in the case of the Novatech, because the pulse only needs to be high for 100ns, and low for 100us, the previous code worked for you even if the pulse was shortened \\(because it was held low for the appropriate length of time when the clockline was not is use for subsequent instructions\\). But that\u2019s a very device specific example of something that happened to work, even though we were violating our own rules. Other devices are not so forgiving, and this fix was to identify \\(and prohibit\\) timing issues that were causing instructions to be missed on the G99 apparatus.\n\nThe only ways to work around this are awful to implement:\n\n* asymmetric clock pulses \\(as the Novatech can be driven faster with asymmetric clock pulses\\). This would not be supported by the PineBlaster though \\(but PulseBlaster and OpalKelly board should be able to handle it\\)\n* A modification to gated clocks that allows the instruction to go high, and the instruction to go low, on one clockline to be spread out either side of other clocklines. But this would only be supported on devices like the PulseBlaster, and not pseudoclocks like the PineBlaster or OpalKelly board. This might help with issue #39 but I don\u2019t really like it\u2026\n\nThe preferred solution would be to put your Novatechs on a separate pseudoclock. But I realise that may not be feasible for everyone. \n\nI\u2019m obviously not going to be able to work on this any time soon, so I assume someone else will be making the changes, but my preference would be to not remove these extra checks because they serve a purpose ensuring the \u2018gated clocks\u2019 feature does not bypass the specified \\(symmetric\\) clock rate of a device.", "markup": "markdown", "html": "<p>I don\u2019t believe this is actually a timing bug. I think that my fix for a timing bug has identified a region of your code that was not technically safe (although no doubt worked). The issue I fixed was ensuring that a clock tick that updated a Novatech was never cut short (to ensure it is always 100us long). It\u2019s not that the Novatech is enforcing it\u2019s clock limit on the digital flag, but that the interaction between the clockline for the novatech and the clockline for the digital flag must be taken into account when determining the set of instructions for the pseudoclock.</p>\n<p>In your example in the other thread, you are attempting to change a digital flag 40us after a call to update the Novatech. As the pseudoclock is common between the Novatech and the device controlling the digital gate, this necessitates that the Novatech clock pulse is only 40us long (20us high, 20us low), which is a violation of it\u2019s specified clock rate. Now, in the case of the Novatech, because the pulse only needs to be high for 100ns, and low for 100us, the previous code worked for you even if the pulse was shortened (because it was held low for the appropriate length of time when the clockline was not is use for subsequent instructions). But that\u2019s a very device specific example of something that happened to work, even though we were violating our own rules. Other devices are not so forgiving, and this fix was to identify (and prohibit) timing issues that were causing instructions to be missed on the G99 apparatus.</p>\n<p>The only ways to work around this are awful to implement:</p>\n<ul>\n<li>asymmetric clock pulses (as the Novatech can be driven faster with asymmetric clock pulses). This would not be supported by the PineBlaster though (but PulseBlaster and OpalKelly board should be able to handle it)</li>\n<li>A modification to gated clocks that allows the instruction to go high, and the instruction to go low, on one clockline to be spread out either side of other clocklines. But this would only be supported on devices like the PulseBlaster, and not pseudoclocks like the PineBlaster or OpalKelly board. This might help with issue <a href=\"#!/labscript_suite/labscript/issues/39/non-looping-clock-ticks-may-be-too-short\" rel=\"nofollow\" title=\"Non-looping clock ticks may be too short if they happen during a ramp\" class=\"ap-connect-link\">#39</a> but I don\u2019t really like it\u2026</li>\n</ul>\n<p>The preferred solution would be to put your Novatechs on a separate pseudoclock. But I realise that may not be feasible for everyone. </p>\n<p>I\u2019m obviously not going to be able to work on this any time soon, so I assume someone else will be making the changes, but my preference would be to not remove these extra checks because they serve a purpose ensuring the \u2018gated clocks\u2019 feature does not bypass the specified (symmetric) clock rate of a device.</p>", "type": "rendered"}, "created_on": "2019-06-25T08:57:19.523535+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "updated_on": null, "type": "issue_comment", "id": 52724191}