{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/labscript/issues/53/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/issues/53.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/issues/53/watch"}, "comments": {"href": "data/repositories/labscript_suite/labscript/issues/53/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/53/pseudoclock-clockline-collision"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/issues/53/vote"}}, "reporter": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "title": "Pseudoclock/clockline collision", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The other project in my lab has encountered a strange issue that produces the following traceback during compilation.\r\n\r\n![](data/bitbucket.org/repo/g75Ex9/images/888255601-image_2.png)\r\nI don\u2019t really understand the error message at all. Why is the clock limitation of our slow clockline being applied to updates of the master pseudoclock? Am I just reading that wrong.\r\n\r\nAnyway, doing some digging we found the offending portion of the script to be\r\n\r\n```python\r\n    ### note t=0.8047 here ###\r\n    Shutter_MOT.go_high(t)\r\n    Shutter_Repump.go_high(t)\r\n\r\n    MOT_BN.setfreq(t,91.7*MHz) #65.8+(266)/16+157/16 #Tuned by looking at imaging\r\n    REP_BN.setfreq(t,83.8*MHz) #Use Horizontal Repumping beam (along xhat (table) (that is, the y coil in Blacs)) to pump 1-1'.\r\n    zCoil.constant(t,value = -0.35) #-.365 #SET FIELD Vertical for opt Pump\r\n    xCoil.constant(t, value = -0.02) #-0.02\r\n    yCoil.constant(t, value = -1.5) #0.25\r\n    print(\"there: \", t)\r\n    #xCoil.constant(t,value = bx_sweep)\r\n    #yCoil.constant(t,value = by_sweep)\r\n    #zCoil.constant(t,value = bz_sweep)\r\n    \r\n    t +=2.011e-3 #Coils update.\r\n    #Keep this short, so that don't get too much extra pumping.\r\n    #Turn on light to Pump to F=1\r\n\r\n    MOT_AOM_Switch.go_high(t)\r\n    Rep_AOM_Switch.go_high(t)\r\n    t += 0.10e-3\r\n    Rep_AOM_Switch.go_low(t)\r\n\r\n    t+= 0.3e-3\r\n    MOT_AOM_Switch.go_low(t)\r\n    \r\n   #Blow away\r\n    MOT_BN.setfreq(t,65.5*MHz)\r\n    t+=0.2e-3\r\n    MOT_AOM_Switch.go_high(t)\r\n    t+=0.7e-3\r\n    MOT_AOM_Switch.go_low(t)\r\n    \r\n    MOT_BN.setfreq(t,30*MHz)\r\n    REP_BN.setfreq(t,30*MHz)\r\n    MOT_AOM_Switch.go_low(t)\r\n    \r\n    t += 0.15e-3\r\n    Shutter_MOT.go_low(t)\r\n```\r\n\r\nIf the time in line 14 is set to <=2.01ms the error occurs. The relevant devices are the analog outputs on a fast clocked NI-6733, direct digital outputs of the pulseblaster, and DDS updates from a Novatech 409B-AC on a slow clockline in asynchronous mode. The slow clockline only goes to novatechs and the fast clockline goes to NI-DAQs.\r\n\r\nUsing runviewer we can look at the clocklines as this time is decreased up to this limit. \r\n\r\n![](data/bitbucket.org/repo/g75Ex9/images/550794617-image_1.png)\r\nThis raises a few questions: Why are the fast and slow clocklines identical? What exactly is updating at 804.8 ms? Why does the timing of instructions happening after the offending one matter?\r\n\r\n I don\u2019t spend as much time on this experiment so I\u2019m not intimately familiar with their script, but I believe it is configured correctly. Two of the corresponding shots to those shown in runviewer are attached \\(accidentally grabbed an error shot as well, T170000\\).\r\n\r\nHelp diagnosing \\(and hopefully fixing this\\) would be appreciated.", "markup": "markdown", "html": "<p>The other project in my lab has encountered a strange issue that produces the following traceback during compilation.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/g75Ex9/images/888255601-image_2.png\" />\nI don\u2019t really understand the error message at all. Why is the clock limitation of our slow clockline being applied to updates of the master pseudoclock? Am I just reading that wrong.</p>\n<p>Anyway, doing some digging we found the offending portion of the script to be</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"c1\">### note t=0.8047 here ###</span>\n    <span class=\"n\">Shutter_MOT</span><span class=\"o\">.</span><span class=\"n\">go_high</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n    <span class=\"n\">Shutter_Repump</span><span class=\"o\">.</span><span class=\"n\">go_high</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n\n    <span class=\"n\">MOT_BN</span><span class=\"o\">.</span><span class=\"n\">setfreq</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span><span class=\"mf\">91.7</span><span class=\"o\">*</span><span class=\"n\">MHz</span><span class=\"p\">)</span> <span class=\"c1\">#65.8+(266)/16+157/16 #Tuned by looking at imaging</span>\n    <span class=\"n\">REP_BN</span><span class=\"o\">.</span><span class=\"n\">setfreq</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span><span class=\"mf\">83.8</span><span class=\"o\">*</span><span class=\"n\">MHz</span><span class=\"p\">)</span> <span class=\"c1\">#Use Horizontal Repumping beam (along xhat (table) (that is, the y coil in Blacs)) to pump 1-1&#39;.</span>\n    <span class=\"n\">zCoil</span><span class=\"o\">.</span><span class=\"n\">constant</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">0.35</span><span class=\"p\">)</span> <span class=\"c1\">#-.365 #SET FIELD Vertical for opt Pump</span>\n    <span class=\"n\">xCoil</span><span class=\"o\">.</span><span class=\"n\">constant</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">0.02</span><span class=\"p\">)</span> <span class=\"c1\">#-0.02</span>\n    <span class=\"n\">yCoil</span><span class=\"o\">.</span><span class=\"n\">constant</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">1.5</span><span class=\"p\">)</span> <span class=\"c1\">#0.25</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;there: &quot;</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">)</span>\n    <span class=\"c1\">#xCoil.constant(t,value = bx_sweep)</span>\n    <span class=\"c1\">#yCoil.constant(t,value = by_sweep)</span>\n    <span class=\"c1\">#zCoil.constant(t,value = bz_sweep)</span>\n\n    <span class=\"n\">t</span> <span class=\"o\">+=</span><span class=\"mf\">2.011e-3</span> <span class=\"c1\">#Coils update.</span>\n    <span class=\"c1\">#Keep this short, so that don&#39;t get too much extra pumping.</span>\n    <span class=\"c1\">#Turn on light to Pump to F=1</span>\n\n    <span class=\"n\">MOT_AOM_Switch</span><span class=\"o\">.</span><span class=\"n\">go_high</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n    <span class=\"n\">Rep_AOM_Switch</span><span class=\"o\">.</span><span class=\"n\">go_high</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n    <span class=\"n\">t</span> <span class=\"o\">+=</span> <span class=\"mf\">0.10e-3</span>\n    <span class=\"n\">Rep_AOM_Switch</span><span class=\"o\">.</span><span class=\"n\">go_low</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n\n    <span class=\"n\">t</span><span class=\"o\">+=</span> <span class=\"mf\">0.3e-3</span>\n    <span class=\"n\">MOT_AOM_Switch</span><span class=\"o\">.</span><span class=\"n\">go_low</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n\n   <span class=\"c1\">#Blow away</span>\n    <span class=\"n\">MOT_BN</span><span class=\"o\">.</span><span class=\"n\">setfreq</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span><span class=\"mf\">65.5</span><span class=\"o\">*</span><span class=\"n\">MHz</span><span class=\"p\">)</span>\n    <span class=\"n\">t</span><span class=\"o\">+=</span><span class=\"mf\">0.2e-3</span>\n    <span class=\"n\">MOT_AOM_Switch</span><span class=\"o\">.</span><span class=\"n\">go_high</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n    <span class=\"n\">t</span><span class=\"o\">+=</span><span class=\"mf\">0.7e-3</span>\n    <span class=\"n\">MOT_AOM_Switch</span><span class=\"o\">.</span><span class=\"n\">go_low</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n\n    <span class=\"n\">MOT_BN</span><span class=\"o\">.</span><span class=\"n\">setfreq</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span><span class=\"mi\">30</span><span class=\"o\">*</span><span class=\"n\">MHz</span><span class=\"p\">)</span>\n    <span class=\"n\">REP_BN</span><span class=\"o\">.</span><span class=\"n\">setfreq</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span><span class=\"mi\">30</span><span class=\"o\">*</span><span class=\"n\">MHz</span><span class=\"p\">)</span>\n    <span class=\"n\">MOT_AOM_Switch</span><span class=\"o\">.</span><span class=\"n\">go_low</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n\n    <span class=\"n\">t</span> <span class=\"o\">+=</span> <span class=\"mf\">0.15e-3</span>\n    <span class=\"n\">Shutter_MOT</span><span class=\"o\">.</span><span class=\"n\">go_low</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>If the time in line 14 is set to &lt;=2.01ms the error occurs. The relevant devices are the analog outputs on a fast clocked NI-6733, direct digital outputs of the pulseblaster, and DDS updates from a Novatech 409B-AC on a slow clockline in asynchronous mode. The slow clockline only goes to novatechs and the fast clockline goes to NI-DAQs.</p>\n<p>Using runviewer we can look at the clocklines as this time is decreased up to this limit. </p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/g75Ex9/images/550794617-image_1.png\" />\nThis raises a few questions: Why are the fast and slow clocklines identical? What exactly is updating at 804.8 ms? Why does the timing of instructions happening after the offending one matter?</p>\n<p>I don\u2019t spend as much time on this experiment so I\u2019m not intimately familiar with their script, but I believe it is configured correctly. Two of the corresponding shots to those shown in runviewer are attached (accidentally grabbed an error shot as well, T170000).</p>\n<p>Help diagnosing (and hopefully fixing this) would be appreciated.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-07-27T14:36:17.069766+00:00", "milestone": null, "updated_on": "2019-08-02T05:48:13.011534+00:00", "type": "issue", "id": 53}