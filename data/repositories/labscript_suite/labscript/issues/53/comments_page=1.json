{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/53/comments/53169884.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/53#comment-53169884"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/53.json"}}, "type": "issue", "id": 53, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Pseudoclock/clockline collision"}, "content": {"raw": "This sounds similar to #51. I am not sure when I'll get a chance to look at your h5 files so you might want to read through that issue and see if it is relevant. Even if it not the same, it might shed some light on how clocklines and pseudoclocks interact, and thus why you get the error.\n\nLet me know if this helps! Hopefully Chris or I can take a look at the h5 files soon.", "markup": "markdown", "html": "<p>This sounds similar to <a href=\"#!/labscript_suite/labscript/issues/51/recent-gatedclocks-bugfix-merge-breaks-at\" rel=\"nofollow\" title=\"Recent GatedClocks-bugfix merge breaks (at least) Novatech DDS9m timing\" class=\"ap-connect-link\">#51</a>. I am not sure when I'll get a chance to look at your h5 files so you might want to read through that issue and see if it is relevant. Even if it not the same, it might shed some light on how clocklines and pseudoclocks interact, and thus why you get the error.</p>\n<p>Let me know if this helps! Hopefully Chris or I can take a look at the h5 files soon.</p>", "type": "rendered"}, "created_on": "2019-07-27T14:58:28.610725+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "updated_on": null, "type": "issue_comment", "id": 53169884}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/53/comments/53170533.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/53#comment-53170533"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/53.json"}}, "type": "issue", "id": 53, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Pseudoclock/clockline collision"}, "content": {"raw": "Ah yes. I remember reading that one when Lincoln first put it up and not really getting it. Reading it again, I can almost guarantee this is related to that. I do think it is different: for starters, there are no instructions to any devices for 2ms after the novatech updates, which should be plenty of time. I wonder if the NT asynchronous mode \\(which makes the precise falling edge timing beyond minimum pulse duration irrelevant\\) is finding an edge case of the gated-clocks?\n\nRegardless, it looks like I need to understand the gated clocks thing better. I was always under the impression that clocklines were subsets of the pseudo-clock rise-fall times, depending on what devices were connected to which clockline. Assuming that is true, why do the trigger times of one clockline dictate those of another for unrelated instructions? Taking Lincoln\u2019s example: if the DDS and digital out are on different clocklines, why does updating a DO 40us after the DDS force the trigger pulse to go low on the DDS clockline? Couldn\u2019t the DDS clockline just ignore that pseudoclock tick and put the fall at a later pseudoclock tick, completely independent of the other clockline? Sure it would result in a lot of pseudoclock ticks that would need to be tracked to prevent clock over-runs \\(scaling with independent clocklines\\), but that seems doable and would seem to allow for not having the entire experiment tied to slow devices.", "markup": "markdown", "html": "<p>Ah yes. I remember reading that one when Lincoln first put it up and not really getting it. Reading it again, I can almost guarantee this is related to that. I do think it is different: for starters, there are no instructions to any devices for 2ms after the novatech updates, which should be plenty of time. I wonder if the NT asynchronous mode (which makes the precise falling edge timing beyond minimum pulse duration irrelevant) is finding an edge case of the gated-clocks?</p>\n<p>Regardless, it looks like I need to understand the gated clocks thing better. I was always under the impression that clocklines were subsets of the pseudo-clock rise-fall times, depending on what devices were connected to which clockline. Assuming that is true, why do the trigger times of one clockline dictate those of another for unrelated instructions? Taking Lincoln\u2019s example: if the DDS and digital out are on different clocklines, why does updating a DO 40us after the DDS force the trigger pulse to go low on the DDS clockline? Couldn\u2019t the DDS clockline just ignore that pseudoclock tick and put the fall at a later pseudoclock tick, completely independent of the other clockline? Sure it would result in a lot of pseudoclock ticks that would need to be tracked to prevent clock over-runs (scaling with independent clocklines), but that seems doable and would seem to allow for not having the entire experiment tied to slow devices.</p>", "type": "rendered"}, "created_on": "2019-07-27T16:37:38.786544+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": null, "type": "issue_comment", "id": 53170533}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/53/comments/53246255.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/53#comment-53246255"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/53.json"}}, "type": "issue", "id": 53, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Pseudoclock/clockline collision"}, "content": {"raw": "Just updated a NIST lab to latest labscript and also hitting something similar:\n\n```python\nTraceback (most recent call last):\n  File \"20190523_BEC_F1_NewODT_DMD.py\", line 630, in <module>\n  File \"C:\\labscript_suite\\labscript\\labscript.py\", line 2467, in stop\n    generate_code()\n  File \"C:\\labscript_suite\\labscript\\labscript.py\", line 2304, in generate_code\n    device.generate_code(hdf5_file)\n  File \"C:\\labscript_suite\\labscript_devices\\PulseBlaster_No_DDS.py\", line 54, in generate_code\n    PseudoclockDevice.generate_code(self, hdf5_file)\n  File \"C:\\labscript_suite\\labscript\\labscript.py\", line 1095, in generate_code\n    Device.generate_code(self, hdf5_file)\n  File \"C:\\labscript_suite\\labscript\\labscript.py\", line 478, in generate_code\n    device.generate_code(hdf5_file)\n  File \"C:\\labscript_suite\\labscript\\labscript.py\", line 921, in generate_code\n    self.generate_clock()\n  File \"C:\\labscript_suite\\labscript\\labscript.py\", line 891, in generate_clock\n    all_change_times, change_times = self.collect_change_times(all_outputs, outputs_by_clockline)\n  File \"C:\\labscript_suite\\labscript\\labscript.py\", line 680, in collect_change_times\n    'One or more connected devices on ClockLine %s cannot support update delays shorter than %s sec.'%(clock_line.name, str(1.0/clock_line.clock_limit)))\nlabscript.labscript.LabscriptError: Commands have been issued to devices attached to pb_0_pseudoclock at t= 12.46651408 s and 12.466664080000001 s. One or more connected devices on ClockLine DMD_trig cannot support update delays shorter than 0.00025 sec.\nCompilation aborted.\n```\n\nBacking out the gated clocks commit seemingly resolves the issue, though I understand if this is just masking an underlying issue.\n\nAgain, the device in question (a LightCrafter DMD) is one with a much slower update rate than others. So it sounds like the same issue.", "markup": "markdown", "html": "<p>Just updated a NIST lab to latest labscript and also hitting something similar:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;20190523_BEC_F1_NewODT_DMD.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">630</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2467</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">stop</span>\n    <span class=\"n\">generate_code</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2304</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_code</span>\n    <span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">generate_code</span><span class=\"p\">(</span><span class=\"n\">hdf5_file</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript_devices\\PulseBlaster_No_DDS.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">54</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_code</span>\n    <span class=\"n\">PseudoclockDevice</span><span class=\"o\">.</span><span class=\"n\">generate_code</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">hdf5_file</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1095</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_code</span>\n    <span class=\"n\">Device</span><span class=\"o\">.</span><span class=\"n\">generate_code</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">hdf5_file</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">478</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_code</span>\n    <span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">generate_code</span><span class=\"p\">(</span><span class=\"n\">hdf5_file</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">921</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_code</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">generate_clock</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">891</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_clock</span>\n    <span class=\"n\">all_change_times</span><span class=\"p\">,</span> <span class=\"n\">change_times</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">collect_change_times</span><span class=\"p\">(</span><span class=\"n\">all_outputs</span><span class=\"p\">,</span> <span class=\"n\">outputs_by_clockline</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">680</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">collect_change_times</span>\n    <span class=\"s1\">&#39;One or more connected devices on ClockLine </span><span class=\"si\">%s</span><span class=\"s1\"> cannot support update delays shorter than </span><span class=\"si\">%s</span><span class=\"s1\"> sec.&#39;</span><span class=\"o\">%</span><span class=\"p\">(</span><span class=\"n\">clock_line</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"o\">/</span><span class=\"n\">clock_line</span><span class=\"o\">.</span><span class=\"n\">clock_limit</span><span class=\"p\">)))</span>\n<span class=\"n\">labscript</span><span class=\"o\">.</span><span class=\"n\">labscript</span><span class=\"o\">.</span><span class=\"n\">LabscriptError</span><span class=\"p\">:</span> <span class=\"n\">Commands</span> <span class=\"n\">have</span> <span class=\"n\">been</span> <span class=\"n\">issued</span> <span class=\"n\">to</span> <span class=\"n\">devices</span> <span class=\"n\">attached</span> <span class=\"n\">to</span> <span class=\"n\">pb_0_pseudoclock</span> <span class=\"n\">at</span> <span class=\"n\">t</span><span class=\"o\">=</span> <span class=\"mf\">12.46651408</span> <span class=\"n\">s</span> <span class=\"ow\">and</span> <span class=\"mf\">12.466664080000001</span> <span class=\"n\">s</span><span class=\"o\">.</span> <span class=\"n\">One</span> <span class=\"ow\">or</span> <span class=\"n\">more</span> <span class=\"n\">connected</span> <span class=\"n\">devices</span> <span class=\"n\">on</span> <span class=\"n\">ClockLine</span> <span class=\"n\">DMD_trig</span> <span class=\"n\">cannot</span> <span class=\"n\">support</span> <span class=\"n\">update</span> <span class=\"n\">delays</span> <span class=\"n\">shorter</span> <span class=\"n\">than</span> <span class=\"mf\">0.00025</span> <span class=\"n\">sec</span><span class=\"o\">.</span>\n<span class=\"n\">Compilation</span> <span class=\"n\">aborted</span><span class=\"o\">.</span>\n</pre></div>\n\n\n<p>Backing out the gated clocks commit seemingly resolves the issue, though I understand if this is just masking an underlying issue.</p>\n<p>Again, the device in question (a LightCrafter DMD) is one with a much slower update rate than others. So it sounds like the same issue.</p>", "type": "rendered"}, "created_on": "2019-08-01T17:03:22.288083+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 53246255}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/53/comments/53253600.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/53#comment-53253600"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/53.json"}}, "type": "issue", "id": 53, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Pseudoclock/clockline collision"}, "content": {"raw": "@{557058:411f7712-e1fa-438c-b578-0359da2d9f06} Yes, in theory you could have the falling pulse happen in a later pseudoclock instruction, provided the pseudoclock uses 2 hardware instructions per change in clock frequency. But not all devices do this \\(however currently those that do not do this also only have one output, so don't use gated clocks anyway\\). The underlying labscript algorithm doesn't know anything about this sort of capability though, so we'd have to add that in so that `PseudoclockDevice` subclasses to indicate if they support the proposed behaviour. You might also find it's difficult to do if the subsequent instruction is a ramp \\(because you would have to break that ramp up into two or three instructions in order to insert the falling transition of the slower clock\\). It seems like it would be quite complicated, and personally I would just advocate for people adding more \\(10 MHz referenced\\) pseudoclock devices to their experiment rather than trying to clock multiple devices from one pseudoclock.\n\nBut I\u2019m not opposed to someone trying to do this, although such a complicated change would benefit from having some test cases to test against to make sure we don\u2019t introduce more regressions \\(I kind of hope we might be able to use runviewer to compare output signals to see if things are generated the same?\\). An attempt to fix #39 should probably be made at the same time, as it is sort of related.\n\n\u200c\n\nEdit: The alternative of course is to allow intermediate devices to specify the minimum high time for a clock tick as well as the clock frequency, thus adding information regarding support for asymmetric clock pulses. My recent commit could then be update to check if the time between adjacent instructions is longer than the minimum high time and also if the time between instructions with the clockline enabled is longer than that derived from the maximum clock rate \\(I think this was suggested as an option in #51\\)", "markup": "markdown", "html": "<p><span class=\"ap-mention\" data-atlassian-id=\"557058:411f7712-e1fa-438c-b578-0359da2d9f06\">@David Meyer</span> Yes, in theory you could have the falling pulse happen in a later pseudoclock instruction, provided the pseudoclock uses 2 hardware instructions per change in clock frequency. But not all devices do this (however currently those that do not do this also only have one output, so don't use gated clocks anyway). The underlying labscript algorithm doesn't know anything about this sort of capability though, so we'd have to add that in so that <code>PseudoclockDevice</code> subclasses to indicate if they support the proposed behaviour. You might also find it's difficult to do if the subsequent instruction is a ramp (because you would have to break that ramp up into two or three instructions in order to insert the falling transition of the slower clock). It seems like it would be quite complicated, and personally I would just advocate for people adding more (10 MHz referenced) pseudoclock devices to their experiment rather than trying to clock multiple devices from one pseudoclock.</p>\n<p>But I\u2019m not opposed to someone trying to do this, although such a complicated change would benefit from having some test cases to test against to make sure we don\u2019t introduce more regressions (I kind of hope we might be able to use runviewer to compare output signals to see if things are generated the same?). An attempt to fix <a href=\"#!/labscript_suite/labscript/issues/39/non-looping-clock-ticks-may-be-too-short\" rel=\"nofollow\" title=\"Non-looping clock ticks may be too short if they happen during a ramp\" class=\"ap-connect-link\">#39</a> should probably be made at the same time, as it is sort of related.</p>\n<p>\u200c</p>\n<p>Edit: The alternative of course is to allow intermediate devices to specify the minimum high time for a clock tick as well as the clock frequency, thus adding information regarding support for asymmetric clock pulses. My recent commit could then be update to check if the time between adjacent instructions is longer than the minimum high time and also if the time between instructions with the clockline enabled is longer than that derived from the maximum clock rate (I think this was suggested as an option in <a href=\"#!/labscript_suite/labscript/issues/51/recent-gatedclocks-bugfix-merge-breaks-at\" rel=\"nofollow\" title=\"Recent GatedClocks-bugfix merge breaks (at least) Novatech DDS9m timing\" class=\"ap-connect-link\">#51</a>)</p>", "type": "rendered"}, "created_on": "2019-08-02T05:48:12.963451+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "updated_on": "2019-08-02T05:51:21.396533+00:00", "type": "issue_comment", "id": 53253600}], "page": 1, "size": 4}