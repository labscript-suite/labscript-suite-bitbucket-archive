{"pagelen": 100, "values": [{"changes": {"assignee_account_id": {"new": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd", "old": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "assignee": {"new": "philipstarkey", "old": "cbillington"}}, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/9/changes/12579976.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/9#comment-12579976"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/9.json"}}, "type": "issue", "id": 9, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Additional column in the connection table"}, "created_on": "2014-09-26T04:34:05.880929+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "message": {"raw": "Copying from the email thread for the record:\r\n\r\nThis seems totally fine to me, it makes sense that we want a spot to put arbitrary data that if changed should invalidate the connection table.\r\nAnd a generic getter and setter and the device class seems like a good way to implement it.\r\n\r\nYou could define `__setitem__` and `__getitem__` to make the device objects behave like a dictionary with the getting and setting of these properties, but that's a bit magical, an explicit `get_property(name)` and `set_property(name, value)` would be more obvious and non-magical as to what was going on.", "markup": "markdown", "html": "<p>Copying from the email thread for the record:</p>\n<p>This seems totally fine to me, it makes sense that we want a spot to put arbitrary data that if changed should invalidate the connection table.\nAnd a generic getter and setter and the device class seems like a good way to implement it.</p>\n<p>You could define <code>__setitem__</code> and <code>__getitem__</code> to make the device objects behave like a dictionary with the getting and setting of these properties, but that's a bit magical, an explicit <code>get_property(name)</code> and <code>set_property(name, value)</code> would be more obvious and non-magical as to what was going on.</p>", "type": "rendered"}, "type": "issue_change", "id": 12579976}, {"changes": {"state": {"new": "resolved", "old": "new"}}, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/9/changes/14112911.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/9#comment-14112911"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/9.json"}}, "type": "issue", "id": 9, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Additional column in the connection table"}, "created_on": "2014-12-05T23:48:24.249652+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "message": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "type": "issue_change", "id": 14112911}], "page": 1, "size": 2}