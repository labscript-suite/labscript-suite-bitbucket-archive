{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/9/comments/12579800.json"}, "html": {"href": "#!/labscript_suite/labscript/issues/9#comment-12579800"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/issues/9.json"}}, "type": "issue", "id": 9, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "title": "Additional column in the connection table"}, "content": {"raw": "Further thoughts,\n\nWe add some methods to the Device class of labscript which allow you to set arbitrary key/value pairs for \"Device Properties\" that will be stored in the connection table and compared as part of the usual connection table comparisons. This dict is put through repr and stored in a new \"device_properties\" column of the connection table. \n\nAlternatively, we could just have an attribute containing a dictionary that people directly access, but I'm growing fond of explicit methods to set information like this (so that we can build in type checking, overwriting checking, etc, into those functions)", "markup": "markdown", "html": "<p>Further thoughts,</p>\n<p>We add some methods to the Device class of labscript which allow you to set arbitrary key/value pairs for \"Device Properties\" that will be stored in the connection table and compared as part of the usual connection table comparisons. This dict is put through repr and stored in a new \"device_properties\" column of the connection table. </p>\n<p>Alternatively, we could just have an attribute containing a dictionary that people directly access, but I'm growing fond of explicit methods to set information like this (so that we can build in type checking, overwriting checking, etc, into those functions)</p>", "type": "rendered"}, "created_on": "2014-09-26T04:13:59.286914+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 12579800}