{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/10/comments/39035781.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/10/_/diff#comment-39035781"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 10, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/10.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/10"}}, "title": "Added basis for runviewer marker functionality"}, "content": {"raw": "As Phil suggested, I do have a viewpoint.  I don't think we want to introduce a new language construct for runviewer.  In the end this will lead to language clutter.  In the context of the discussion above I have two comments: \n\n* I instead think that we should use the device infrastructure to make a new device class for runviewer markers.  This will feel very logical since markers are placed at times just like other events occur at times.  The data would then be stored in the same tabular manner as for anything else.\n\n* I understand that a specific storage location is already implement in PhyNerd's lab, and can say two things on this.  First, in our labs were are tolerating local incompatibilities that are occurring as our changes are merged into the main branch, or second, we could add a language construct the allows the addition of hard links in the h5 file to deal with this.  ", "markup": "markdown", "html": "<p>As Phil suggested, I do have a viewpoint.  I don't think we want to introduce a new language construct for runviewer.  In the end this will lead to language clutter.  In the context of the discussion above I have two comments: </p>\n<ul>\n<li>\n<p>I instead think that we should use the device infrastructure to make a new device class for runviewer markers.  This will feel very logical since markers are placed at times just like other events occur at times.  The data would then be stored in the same tabular manner as for anything else.</p>\n</li>\n<li>\n<p>I understand that a specific storage location is already implement in PhyNerd's lab, and can say two things on this.  First, in our labs were are tolerating local incompatibilities that are occurring as our changes are merged into the main branch, or second, we could add a language construct the allows the addition of hard links in the h5 file to deal with this.  </p>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2017-06-18T15:21:11.310995+00:00", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}, "updated_on": "2017-06-18T15:21:11.313247+00:00", "type": "pullrequest_comment", "id": 39035781}