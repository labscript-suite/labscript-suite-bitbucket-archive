{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/10/comments/39038851.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/10/_/diff#comment-39038851"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 10, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/10.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/10"}}, "title": "Added basis for runviewer marker functionality"}, "content": {"raw": "Sorry if I was misleading, labscript time *does* correspond to the time (excluding the duration of waits) since the first instruction of the master pseudoclock. But not to the time since the first instruction of *other* pseudoclocks.  And when commanding output from devices that are not clocked by the master pseudoclock, one nonetheless uses labscript time. so `output.constant(0, something)` is an error for an output clocked by a secondary pseudoclock because you can't command output until at least the triggering delay has elapsed. Every output device has a `t0` attribute that tells you when the earliest you can command output is.\n\nIf it's confusing I think documentation is the answer rather than defining a time class. It's very easy to lose a custom class representing numbers when letting users do arithmetic with it, I'd strongly suggest sticking with standard types.\n\nIf you'd like to debate further and seek input from others as well, I'd suggest filing a feature request. Since waits already take an absolute time, any change to the way we treat times is bigger than this pull request, which is simple and does not create much technical debt if we decide to change it later.", "markup": "markdown", "html": "<p>Sorry if I was misleading, labscript time <em>does</em> correspond to the time (excluding the duration of waits) since the first instruction of the master pseudoclock. But not to the time since the first instruction of <em>other</em> pseudoclocks.  And when commanding output from devices that are not clocked by the master pseudoclock, one nonetheless uses labscript time. so <code>output.constant(0, something)</code> is an error for an output clocked by a secondary pseudoclock because you can't command output until at least the triggering delay has elapsed. Every output device has a <code>t0</code> attribute that tells you when the earliest you can command output is.</p>\n<p>If it's confusing I think documentation is the answer rather than defining a time class. It's very easy to lose a custom class representing numbers when letting users do arithmetic with it, I'd strongly suggest sticking with standard types.</p>\n<p>If you'd like to debate further and seek input from others as well, I'd suggest filing a feature request. Since waits already take an absolute time, any change to the way we treat times is bigger than this pull request, which is simple and does not create much technical debt if we decide to change it later.</p>", "type": "rendered"}, "created_on": "2017-06-18T23:35:50.885571+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-18T23:36:07.312119+00:00", "type": "pullrequest_comment", "id": 39038851}