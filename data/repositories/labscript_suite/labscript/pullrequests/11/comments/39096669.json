{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/11/comments/39096669.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/11/_/diff#comment-39096669"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 11, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/11.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/11"}}, "title": "Added the ability to split ramps."}, "content": {"raw": "Just to clarify, the problem you were having is that when you update a digital line, an extra tick is inserted for an analogue ramp? Is this when the analog and digital output are on the same ClockLine of the same Pseudoclock, or something different?\n\nThe thing is that labscript already splits up ramps when there is an instruction on the same ClockLine mid-ramp so I'm wondering what your solution does differently.\n\nLabscript's current behaviour is that a ramp interrupted by an instruction on another output will be identical to a if you had requested a new ramp at the time the other instructions was inserted, but with the same function used to evaluate both \"sub-ramps\".\n\nCould you provide an example of labscript code that demonstrates the problem? If it's practical, a screenshot of traces on runviewer pointing out the undesired extra ticks or whatnot would be good too.", "markup": "markdown", "html": "<p>Just to clarify, the problem you were having is that when you update a digital line, an extra tick is inserted for an analogue ramp? Is this when the analog and digital output are on the same ClockLine of the same Pseudoclock, or something different?</p>\n<p>The thing is that labscript already splits up ramps when there is an instruction on the same ClockLine mid-ramp so I'm wondering what your solution does differently.</p>\n<p>Labscript's current behaviour is that a ramp interrupted by an instruction on another output will be identical to a if you had requested a new ramp at the time the other instructions was inserted, but with the same function used to evaluate both \"sub-ramps\".</p>\n<p>Could you provide an example of labscript code that demonstrates the problem? If it's practical, a screenshot of traces on runviewer pointing out the undesired extra ticks or whatnot would be good too.</p>", "type": "rendered"}, "created_on": "2017-06-19T15:27:56.287714+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-19T15:51:46.210741+00:00", "type": "pullrequest_comment", "id": 39096669}