{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/11/comments/39235129.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/11/_/diff#comment-39235129"}}, "parent": {"id": 39234804, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/11/comments/39234804.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/11/_/diff#comment-39234804"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 11, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/11.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/11"}}, "title": "Added the ability to split ramps."}, "content": {"raw": "I'm not sure it is. To me it looks like the rounding-nearest is already happening in labscript, and that the problem might be that device APIs are then rounding down or up and changing what we intended by a whole unit (whereas if they rounded nearest it would be fine). \n\nIf pseudoclocks do have different rounding shemes in their APIs/hardware then each one will need a `rounding_type` attribute to tell you whether the hardware/driver whatever rounds up or down or nearest, and then we'll need to do the adding, subtracting or nothing of 0.5 to the nearest-rounded numbers that we have right at the end of compilation to ensure that after the driver rounds it, it ends up being what we intended.", "markup": "markdown", "html": "<p>I'm not sure it is. To me it looks like the rounding-nearest is already happening in labscript, and that the problem might be that device APIs are then rounding down or up and changing what we intended by a whole unit (whereas if they rounded nearest it would be fine). </p>\n<p>If pseudoclocks do have different rounding shemes in their APIs/hardware then each one will need a <code>rounding_type</code> attribute to tell you whether the hardware/driver whatever rounds up or down or nearest, and then we'll need to do the adding, subtracting or nothing of 0.5 to the nearest-rounded numbers that we have right at the end of compilation to ensure that after the driver rounds it, it ends up being what we intended.</p>", "type": "rendered"}, "created_on": "2017-06-21T03:52:40.583907+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-21T03:52:40.586002+00:00", "type": "pullrequest_comment", "id": 39235129}