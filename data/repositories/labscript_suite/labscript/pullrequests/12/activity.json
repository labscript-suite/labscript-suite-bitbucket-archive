{"pagelen": 50, "values": [{"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41593353.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41593353"}}, "parent": {"id": 41588641, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41588641.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41588641"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "Oh...because we do have intermediate devices which are not BLACS devices (I'd originally assumed `IntermediateDevice` would just inherit from `BLACSDevice` but that's wrong).\n\nMaybe we should just have `BLACSIntermediateDevice` (inherits from `BLACSDevice`) and `IntermediateDevice`. Then I think `PseudoclockDevice` could always inherit from `BLACSDevice`. Then if you want to use the new keyword arguments, you need to explicitly update your device code to inherit from the new `IntermediateDevice` code (pseudoclocks will of course be automatically given the new features in the above suggestion).\n\nI like this more than hacking line 1901...in the future we could update `BLACSIntermediateDevice` to use the mixin you propose and then ultimately deprecate it.", "markup": "markdown", "html": "<p>Oh...because we do have intermediate devices which are not BLACS devices (I'd originally assumed <code>IntermediateDevice</code> would just inherit from <code>BLACSDevice</code> but that's wrong).</p>\n<p>Maybe we should just have <code>BLACSIntermediateDevice</code> (inherits from <code>BLACSDevice</code>) and <code>IntermediateDevice</code>. Then I think <code>PseudoclockDevice</code> could always inherit from <code>BLACSDevice</code>. Then if you want to use the new keyword arguments, you need to explicitly update your device code to inherit from the new <code>IntermediateDevice</code> code (pseudoclocks will of course be automatically given the new features in the above suggestion).</p>\n<p>I like this more than hacking line 1901...in the future we could update <code>BLACSIntermediateDevice</code> to use the mixin you propose and then ultimately deprecate it.</p>", "type": "rendered"}, "created_on": "2017-07-27T02:30:57.645660+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-07-27T02:30:57.647861+00:00", "type": "pullrequest_comment", "id": 41593353}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41588641.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41588641"}}, "parent": {"id": 41588208, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41588208.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41588208"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "That's almost what a mixin would do.\n\nThe problem is that your BLACS class might be an IntermediateDevice instead of just a Device, for example. What then? Do you  make a BlacsIntermediateDevice that inherits from BlacsDevice? No. That's where mixins come in. What you do is you have your NovatechDDS9M inherit from both IntermediateDevice and BLACSDevice. Something like this:\n\n\n```\n#!python\n\nclass Device(object):\n    pass\n\nclass BLACSDevice(Device):\n    pass    \n\nclass IntermediateDevice(Device):\n    pass\n\nclass NovatechDDS9M(IntermediateDevice, BLACSDevice):\n    pass\n\n```\nBLACSDevice is then a mixin - it overrides just one method, so you inherit from it *as well* when you want all of the class hierarchy that's in place *except* to make sure that BLACSDevice comes in and overrides one of Device's methods near the top of the class hierarchy.\n\nYou have to change all of the `__init__` calls to call the `__init__` methods of their parent classes using `super` instead of directly naming the parent class, but then you'd be surprised how logically it all works out. NovatechDDS9M's `__init__` runs first, then IntermediateDevice's, then BLACSDevice, then Device, which is exactly what you would want.\n\nSo long as `__init__` is the only method being overridden in BLACSDevice, then it's the only one that super() needs to be used for when calling the parent class's method. But it's good practice to use super a bit more than we have been doing, to allow for these sorts of things.\n\nThis is the \"right\" way to do it in my opinion but I'll be happy with anything for now, even if it's a bit hacky. Allowing for multiple inheritance like this is something I've been thinking about for labscript 3 anyway. When I get around to making some more progress on that we can make some of these things \"right\".", "markup": "markdown", "html": "<p>That's almost what a mixin would do.</p>\n<p>The problem is that your BLACS class might be an IntermediateDevice instead of just a Device, for example. What then? Do you  make a BlacsIntermediateDevice that inherits from BlacsDevice? No. That's where mixins come in. What you do is you have your NovatechDDS9M inherit from both IntermediateDevice and BLACSDevice. Something like this:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Device</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">BLACSDevice</span><span class=\"p\">(</span><span class=\"n\">Device</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>    \n\n<span class=\"k\">class</span> <span class=\"nc\">IntermediateDevice</span><span class=\"p\">(</span><span class=\"n\">Device</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">NovatechDDS9M</span><span class=\"p\">(</span><span class=\"n\">IntermediateDevice</span><span class=\"p\">,</span> <span class=\"n\">BLACSDevice</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n\n\n<p>BLACSDevice is then a mixin - it overrides just one method, so you inherit from it <em>as well</em> when you want all of the class hierarchy that's in place <em>except</em> to make sure that BLACSDevice comes in and overrides one of Device's methods near the top of the class hierarchy.</p>\n<p>You have to change all of the <code>__init__</code> calls to call the <code>__init__</code> methods of their parent classes using <code>super</code> instead of directly naming the parent class, but then you'd be surprised how logically it all works out. NovatechDDS9M's <code>__init__</code> runs first, then IntermediateDevice's, then BLACSDevice, then Device, which is exactly what you would want.</p>\n<p>So long as <code>__init__</code> is the only method being overridden in BLACSDevice, then it's the only one that super() needs to be used for when calling the parent class's method. But it's good practice to use super a bit more than we have been doing, to allow for these sorts of things.</p>\n<p>This is the \"right\" way to do it in my opinion but I'll be happy with anything for now, even if it's a bit hacky. Allowing for multiple inheritance like this is something I've been thinking about for labscript 3 anyway. When I get around to making some more progress on that we can make some of these things \"right\".</p>", "type": "rendered"}, "created_on": "2017-07-26T23:54:03.834787+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-26T23:54:55.974718+00:00", "type": "pullrequest_comment", "id": 41588641}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41588208.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41588208"}}, "parent": {"id": 41578216, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41578216.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41578216"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "I think a better solution (slightly more complex) would be to create a subclass of `Device` which includes instantiation arguments of `BLACS_connection, initialization_order, finalization_order`. Then, things like `IntermediateDevice`, and `PseudoclockDevice` (plus some of our more custom/independent devices like RFBlaster and PhaseMatrix that directly subclass `Device`) should be updated to subclass this new class rather than directly subclassing `Device`. I don't have a good name for this class (something like `DirectlyProgrammableDevice`?)...\n\nThis then makes clear the distinction between devices that can directly communicate with a PC and those that are attached to such devices.\n\nWhen implementing the programming order feature in BLACS, we'd want to ensure that those devices that do not have an order specified (because they don't subclass this new class) are still programmed (but probably programmed last)", "markup": "markdown", "html": "<p>I think a better solution (slightly more complex) would be to create a subclass of <code>Device</code> which includes instantiation arguments of <code>BLACS_connection, initialization_order, finalization_order</code>. Then, things like <code>IntermediateDevice</code>, and <code>PseudoclockDevice</code> (plus some of our more custom/independent devices like RFBlaster and PhaseMatrix that directly subclass <code>Device</code>) should be updated to subclass this new class rather than directly subclassing <code>Device</code>. I don't have a good name for this class (something like <code>DirectlyProgrammableDevice</code>?)...</p>\n<p>This then makes clear the distinction between devices that can directly communicate with a PC and those that are attached to such devices.</p>\n<p>When implementing the programming order feature in BLACS, we'd want to ensure that those devices that do not have an order specified (because they don't subclass this new class) are still programmed (but probably programmed last)</p>", "type": "rendered"}, "created_on": "2017-07-26T23:41:28.193314+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-07-26T23:41:28.195895+00:00", "type": "pullrequest_comment", "id": 41588208}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41578216.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41578216"}}, "parent": {"id": 41576007, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41576007.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41576007"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "Ok quick fix could be to add this on line 1901 (untested):\n\n```\n#!python\n\nif not hasattr(device,\"BLACS_connection\"):\n    continue\n```", "markup": "markdown", "html": "<p>Ok quick fix could be to add this on line 1901 (untested):</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"p\">,</span><span class=\"s2\">&quot;BLACS_connection&quot;</span><span class=\"p\">):</span>\n    <span class=\"k\">continue</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-07-26T20:24:21.812249+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-26T20:25:41.186018+00:00", "type": "pullrequest_comment", "id": 41578216}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41577326.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41577326"}}, "parent": {"id": 41576007, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41576007.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41576007"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "mh I'll have a look at the way that device properties work and see if we can fix there or if the BLACS fix might be the way to go and just except that the hdf5 file is bloated with devices.\n\nI would have not expected a short pull request like this to break anything. We should think about that test suite proposed by @philipstarkey in issue #41 (that would not have caught this) and maybe unit testing(which is hard). Or at least run down a test workflow by hand before merging features (starting with compiling a shot and ending with analysis).", "markup": "markdown", "html": "<p>mh I'll have a look at the way that device properties work and see if we can fix there or if the BLACS fix might be the way to go and just except that the hdf5 file is bloated with devices.</p>\n<p>I would have not expected a short pull request like this to break anything. We should think about that test suite proposed by @philipstarkey in issue <a href=\"#!/labscript_suite/labscript/issues/41/test-suite-for-labscript\" rel=\"nofollow\" title=\"Test suite for labscript\" class=\"ap-connect-link\">#41</a> (that would not have caught this) and maybe unit testing(which is hard). Or at least run down a test workflow by hand before merging features (starting with compiling a shot and ending with analysis).</p>", "type": "rendered"}, "created_on": "2017-07-26T20:11:19.425616+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-26T20:11:33.522759+00:00", "type": "pullrequest_comment", "id": 41577326}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41576007.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41576007"}}, "parent": {"id": 41567387, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41567387.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41567387"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "I see. Yes. The addition of the device_properties forces the group to be created, which makes BLACS assume there is something to be programmed into the device.\n\nBasically, only devices that are actually the thing you program should have device_properties.\n\nOther devices should not have `initialization_order` and `finalization_order` properties.\n\nso like BLACS_connection, we need to figure out how to make only the devices that need it have it. I would naturally want to do it with a [mixin](https://en.wikipedia.org/wiki/Mixin), but I'd like to think of a way that makes other classes not have to change. In labscript 3 it can be a mixin...\n\nI'll rollback this change for now since it breaks experiment runs for others.\n", "markup": "markdown", "html": "<p>I see. Yes. The addition of the device_properties forces the group to be created, which makes BLACS assume there is something to be programmed into the device.</p>\n<p>Basically, only devices that are actually the thing you program should have device_properties.</p>\n<p>Other devices should not have <code>initialization_order</code> and <code>finalization_order</code> properties.</p>\n<p>so like BLACS_connection, we need to figure out how to make only the devices that need it have it. I would naturally want to do it with a <a data-is-external-link=\"true\" href=\"https://en.wikipedia.org/wiki/Mixin\" rel=\"nofollow\">mixin</a>, but I'd like to think of a way that makes other classes not have to change. In labscript 3 it can be a mixin...</p>\n<p>I'll rollback this change for now since it breaks experiment runs for others.</p>", "type": "rendered"}, "created_on": "2017-07-26T19:50:37.458497+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-26T19:50:55.012966+00:00", "type": "pullrequest_comment", "id": 41576007}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41575758.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41575758"}}, "parent": {"id": 41567387, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41567387.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41567387"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "If the stuff I wrote in the update should be the cause of the problem this should break scripts for everyone not just our lab. And we should fix up that BLACS iteration to just iterate \"tab\" devices. ", "markup": "markdown", "html": "<p>If the stuff I wrote in the update should be the cause of the problem this should break scripts for everyone not just our lab. And we should fix up that BLACS iteration to just iterate \"tab\" devices. </p>", "type": "rendered"}, "created_on": "2017-07-26T19:46:36.974328+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-26T19:46:37.022576+00:00", "type": "pullrequest_comment", "id": 41575758}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41567387.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41567387"}}, "parent": {"id": 41565323, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41565323.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41565323"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "There was no trace back it just said:\n\nERROR BLACS.queue_manager.thread: Exception while transitioning A1_Clockline to buffered mode. Exception was: u'A1_clockline'\n\nAs we are currently not using BLACS that often (we are restructuring the experiment) I was on my way out when the guys in the lab found this error so I didn't do much investigating. But any ideas on where I could look tomorrow?\n\n\nUpdate: Ok so I looked at the BLACS code an think I found the problem (just looking at the code no testing). In queue.py there are [lines 550-553](#!/labscript_suite/blacs/src/f8a0c186837ae09abdb39f356416cfa94d451d4c/queue.py?at=default&fileviewer=file-view-default#queue.py-550) iterating all devices in the hdf5 file in the devices category. Then each of them is supposed to transition to buffered calling self.transition_device_to_buffered() which internally trys to get the tab from the tab list. however Clocklines, Shutter,... don't have tabs. The tabs are created in main.py where there is a iteration over self.connection_table.get_attached_devices(). \n\nCould that cause the problem I'm seeing or am I totally in the wrong here?", "markup": "markdown", "html": "<p>There was no trace back it just said:</p>\n<p>ERROR BLACS.queue_manager.thread: Exception while transitioning A1_Clockline to buffered mode. Exception was: u'A1_clockline'</p>\n<p>As we are currently not using BLACS that often (we are restructuring the experiment) I was on my way out when the guys in the lab found this error so I didn't do much investigating. But any ideas on where I could look tomorrow?</p>\n<p>Update: Ok so I looked at the BLACS code an think I found the problem (just looking at the code no testing). In queue.py there are <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/src/f8a0c186837ae09abdb39f356416cfa94d451d4c/queue.py?at=default&amp;fileviewer=file-view-default#queue.py-550\" rel=\"nofollow\">lines 550-553</a> iterating all devices in the hdf5 file in the devices category. Then each of them is supposed to transition to buffered calling self.transition_device_to_buffered() which internally trys to get the tab from the tab list. however Clocklines, Shutter,... don't have tabs. The tabs are created in main.py where there is a iteration over self.connection_table.get_attached_devices(). </p>\n<p>Could that cause the problem I'm seeing or am I totally in the wrong here?</p>", "type": "rendered"}, "created_on": "2017-07-26T17:44:43.516799+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-26T19:35:50.433928+00:00", "type": "pullrequest_comment", "id": 41567387}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41565323.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41565323"}}, "parent": {"id": 41565109, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41565109.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41565109"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "Could you paste the traceback, if any, that you get from BLACS?\n\nThere might be a device that is looping over all device properties and making assumptions about them, in which case that device should be fixed.", "markup": "markdown", "html": "<p>Could you paste the traceback, if any, that you get from BLACS?</p>\n<p>There might be a device that is looping over all device properties and making assumptions about them, in which case that device should be fixed.</p>", "type": "rendered"}, "created_on": "2017-07-26T17:18:27.827624+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-26T17:18:27.830912+00:00", "type": "pullrequest_comment", "id": 41565323}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41565109.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41565109"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "Today I added this change and compiling worked just fine but execution of script with BLACS didn't work. \n\nIt said that a device hat a error during programming, but non of the devices showed errors. Starting BLACS with python instead of pythonw said that a clockline didn't get programmed correctly. I looked at the hdf5 file and every digitaloutput, clockline, ... was now under devices. This could have caused the problem maybe? I don't know, but this pull request definitely broke stuff as removing\n```\n#!python\n\n\"initialization_order\", \"finalization_order\" \n```\n\nfrom device proprties fixed everything.", "markup": "markdown", "html": "<p>Today I added this change and compiling worked just fine but execution of script with BLACS didn't work. </p>\n<p>It said that a device hat a error during programming, but non of the devices showed errors. Starting BLACS with python instead of pythonw said that a clockline didn't get programmed correctly. I looked at the hdf5 file and every digitaloutput, clockline, ... was now under devices. This could have caused the problem maybe? I don't know, but this pull request definitely broke stuff as removing</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"s2\">&quot;initialization_order&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;finalization_order&quot;</span> \n</pre></div>\n\n\n<p>from device proprties fixed everything.</p>", "type": "rendered"}, "created_on": "2017-07-26T17:15:57.521465+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-26T17:15:57.585140+00:00", "type": "pullrequest_comment", "id": 41565109}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"update": {"description": "Added kwards \"start_order\" and \"stop_order\" at the base Device() object.  These are enforced to be integer in the range ORDER_MINIMUM to ORDER_MAXIMUM that\r\nare defined constants.  This is the first part of providing the functionality\r\nof programming devices in different batches grouped by their device order.  These\r\nwill be saved into the device properties, and used by blacs.", "title": "Provides start_order and stop_order as per Issue #18.", "destination": {"commit": {"hash": "c4a6c99d54d3", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/c4a6c99d54d3.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/c4a6c99d54d3"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": null, "repository": null, "branch": {"name": "default"}}, "state": "MERGED", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2017-07-23T23:45:41.719503+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41304686.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41304686"}}, "parent": {"id": 41304653, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41304653.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41304653"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "I'll leave it up to you.", "markup": "markdown", "html": "<p>I'll leave it up to you.</p>", "type": "rendered"}, "created_on": "2017-07-23T23:43:29.532757+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-07-23T23:43:29.535791+00:00", "type": "pullrequest_comment", "id": 41304686}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41304653.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41304653"}}, "parent": {"id": 41304624, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41304624.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41304624"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "Ah. Sigh, I don't know - we have mostly british/australian spelling except for a few exceptions like \"analog\" for some reason.\n\nI don't think I care either way. I've googled it before and the internet basically says open source projects should settle on american spelling, which as patriotic as I might feel I think makes sense since it's pretty funny writing things like `colour = QColor()`.", "markup": "markdown", "html": "<p>Ah. Sigh, I don't know - we have mostly british/australian spelling except for a few exceptions like \"analog\" for some reason.</p>\n<p>I don't think I care either way. I've googled it before and the internet basically says open source projects should settle on american spelling, which as patriotic as I might feel I think makes sense since it's pretty funny writing things like <code>colour = QColor()</code>.</p>", "type": "rendered"}, "created_on": "2017-07-23T23:40:09.987238+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-23T23:40:09.989708+00:00", "type": "pullrequest_comment", "id": 41304653}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41304625.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41304625"}}, "parent": {"id": 41304615, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41304615.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41304615"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "Fair enough. Merge?", "markup": "markdown", "html": "<p>Fair enough. Merge?</p>", "type": "rendered"}, "created_on": "2017-07-23T23:37:07.697164+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-23T23:37:07.699247+00:00", "type": "pullrequest_comment", "id": 41304625}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41304624.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41304624"}}, "parent": {"id": 41304615, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41304615.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41304615"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "Actually, the names are americanised (with z's). That doesn't match anything else I think? Should we be consistent?", "markup": "markdown", "html": "<p>Actually, the names are americanised (with z's). That doesn't match anything else I think? Should we be consistent?</p>", "type": "rendered"}, "created_on": "2017-07-23T23:37:05.469891+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-07-23T23:37:05.472108+00:00", "type": "pullrequest_comment", "id": 41304624}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41304615.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41304615"}}, "parent": {"id": 41303121, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41303121.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41303121"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "I think so. I maybe have some reservations about the names (since changing them will be a pain in the future) but I don't think I care enough about such a small change to raise them (there are bigger changes to be spending time reviewing!)", "markup": "markdown", "html": "<p>I think so. I maybe have some reservations about the names (since changing them will be a pain in the future) but I don't think I care enough about such a small change to raise them (there are bigger changes to be spending time reviewing!)</p>", "type": "rendered"}, "created_on": "2017-07-23T23:35:47.404672+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-07-23T23:35:47.407058+00:00", "type": "pullrequest_comment", "id": 41304615}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41303121.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41303121"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "@philipstarkey are you happy with this?", "markup": "markdown", "html": "<p>@philipstarkey are you happy with this?</p>", "type": "rendered"}, "created_on": "2017-07-23T20:17:00.907977+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-23T20:17:00.919738+00:00", "type": "pullrequest_comment", "id": 41303121}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"approval": {"date": "2017-07-23T20:16:38.096675+00:00", "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"update": {"description": "Added kwards \"start_order\" and \"stop_order\" at the base Device() object.  These are enforced to be integer in the range ORDER_MINIMUM to ORDER_MAXIMUM that\r\nare defined constants.  This is the first part of providing the functionality\r\nof programming devices in different batches grouped by their device order.  These\r\nwill be saved into the device properties, and used by blacs.", "title": "Provides start_order and stop_order as per Issue #18.", "destination": {"commit": {"hash": "65e73d592c8f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/65e73d592c8f.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/65e73d592c8f"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": null, "repository": null, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "date": "2017-07-18T00:56:13.138859+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/39600472.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-39600472"}}, "parent": {"id": 39232988, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/39232988.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-39232988"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "FYI `transition_static_order` should really be `transition_manual_order` (new language as of Qt BLACS as it's more descriptive of the mode of operation)", "markup": "markdown", "html": "<p>FYI <code>transition_static_order</code> should really be <code>transition_manual_order</code> (new language as of Qt BLACS as it's more descriptive of the mode of operation)</p>", "type": "rendered"}, "created_on": "2017-06-27T06:56:58.267978+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-06-27T06:56:58.270807+00:00", "type": "pullrequest_comment", "id": 39600472}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"update": {"description": "Added kwards \"start_order\" and \"stop_order\" at the base Device() object.  These are enforced to be integer in the range ORDER_MINIMUM to ORDER_MAXIMUM that\r\nare defined constants.  This is the first part of providing the functionality\r\nof programming devices in different batches grouped by their device order.  These\r\nwill be saved into the device properties, and used by blacs.", "title": "Provides start_order and stop_order as per Issue #18.", "destination": {"commit": {"hash": "72f10b9ab0a0", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/72f10b9ab0a0.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/72f10b9ab0a0"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": null, "repository": null, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "date": "2017-06-27T06:00:15.744884+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"update": {"description": "Added kwards \"start_order\" and \"stop_order\" at the base Device() object.  These are enforced to be integer in the range ORDER_MINIMUM to ORDER_MAXIMUM that\r\nare defined constants.  This is the first part of providing the functionality\r\nof programming devices in different batches grouped by their device order.  These\r\nwill be saved into the device properties, and used by blacs.", "title": "Provides start_order and stop_order as per Issue #18.", "destination": {"commit": {"hash": "4ba0ef7c8d36", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/4ba0ef7c8d36.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/4ba0ef7c8d36"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": null, "repository": null, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}, "date": "2017-06-21T14:47:17.134317+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/39277830.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-39277830"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "Yes, I'd agree with that I think.", "markup": "markdown", "html": "<p>Yes, I'd agree with that I think.</p>", "type": "rendered"}, "created_on": "2017-06-21T13:18:03.185885+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-21T13:18:03.188235+00:00", "type": "pullrequest_comment", "id": 39277830}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/39276762.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-39276762"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "It might make sense to have the language that the user sees in BLACS be more like \"initializing shot\", \"executing shot\", and \"finalizing shot\".", "markup": "markdown", "html": "<p>It might make sense to have the language that the user sees in BLACS be more like \"initializing shot\", \"executing shot\", and \"finalizing shot\".</p>", "type": "rendered"}, "created_on": "2017-06-21T13:08:06.269881+00:00", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}, "updated_on": "2017-06-21T13:08:06.272702+00:00", "type": "pullrequest_comment", "id": 39276762}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/39276416.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-39276416"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "That seems fine to me. Upside: they're better words, downside: less consistency with BLACS. I think it's a wash.", "markup": "markdown", "html": "<p>That seems fine to me. Upside: they're better words, downside: less consistency with BLACS. I think it's a wash.</p>", "type": "rendered"}, "created_on": "2017-06-21T13:04:58.604950+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-21T13:04:58.607568+00:00", "type": "pullrequest_comment", "id": 39276416}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/39276213.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-39276213"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "I understand that in the code it is all about buffered mode, but buffered and static are terms that do not capture what a reasonable user would think they would be doing.   So how about\n\n`initialization_order` and `finalization_order`, and likewise for the constants?  Or some similar description that really captures the actions they do within the script (i.e., what vs how).", "markup": "markdown", "html": "<p>I understand that in the code it is all about buffered mode, but buffered and static are terms that do not capture what a reasonable user would think they would be doing.   So how about</p>\n<p><code>initialization_order</code> and <code>finalization_order</code>, and likewise for the constants?  Or some similar description that really captures the actions they do within the script (i.e., what vs how).</p>", "type": "rendered"}, "created_on": "2017-06-21T13:02:55.120459+00:00", "user": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}, "updated_on": "2017-06-21T13:04:13.634071+00:00", "type": "pullrequest_comment", "id": 39276213}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"update": {"description": "Added kwards \"start_order\" and \"stop_order\" at the base Device() object.  These are enforced to be integer in the range ORDER_MINIMUM to ORDER_MAXIMUM that\r\nare defined constants.  This is the first part of providing the functionality\r\nof programming devices in different batches grouped by their device order.  These\r\nwill be saved into the device properties, and used by blacs.", "title": "Provides start_order and stop_order as per Issue #18.", "destination": {"commit": {"hash": "4ba0ef7c8d36", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/4ba0ef7c8d36.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/4ba0ef7c8d36"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": null, "repository": null, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2017-06-21T03:49:34.698158+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/39232988.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-39232988"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "Although I'm leaning toward preferring a BLACS plugin for the feedback stuff, this is nonetheless an important thing to be able to configure. I think Dimitri and I hacked a fixed programming order into BLACS solely to debug NovaTech triggering - otherwise it was impossible to tell whether the seemingly random failures were due to differences in programming order.\n\nI have one quibble, which is to make variable names more specific. \"start\" and \"stop\" are somewhat overloaded terms in the context of labscript (and even in BLACS, where 'starting' the master pseudoclock is the last thing done even if it was programmed first), and if the order constants are to be global variables then they should probably be a little more descriptive as to what order they're referring to.\n\nCould I suggest `transition_buffered_order`, `transition_static_order`, `TRANSITION_ORDER_MINIMUM` and `TRANSITION_ORDER_MAXIMUM`?\n\nAlso, could you add @philipstarkey and me as reviewers to the pull request? I've now set it so that this should automatically for future pull requests.", "markup": "markdown", "html": "<p>Although I'm leaning toward preferring a BLACS plugin for the feedback stuff, this is nonetheless an important thing to be able to configure. I think Dimitri and I hacked a fixed programming order into BLACS solely to debug NovaTech triggering - otherwise it was impossible to tell whether the seemingly random failures were due to differences in programming order.</p>\n<p>I have one quibble, which is to make variable names more specific. \"start\" and \"stop\" are somewhat overloaded terms in the context of labscript (and even in BLACS, where 'starting' the master pseudoclock is the last thing done even if it was programmed first), and if the order constants are to be global variables then they should probably be a little more descriptive as to what order they're referring to.</p>\n<p>Could I suggest <code>transition_buffered_order</code>, <code>transition_static_order</code>, <code>TRANSITION_ORDER_MINIMUM</code> and <code>TRANSITION_ORDER_MAXIMUM</code>?</p>\n<p>Also, could you add @philipstarkey and me as reviewers to the pull request? I've now set it so that this should automatically for future pull requests.</p>", "type": "rendered"}, "created_on": "2017-06-21T02:33:08.748212+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-21T02:33:08.758411+00:00", "type": "pullrequest_comment", "id": 39232988}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"update": {"description": "Added kwards \"start_order\" and \"stop_order\" at the base Device() object.  These are enforced to be integer in the range ORDER_MINIMUM to ORDER_MAXIMUM that\r\nare defined constants.  This is the first part of providing the functionality\r\nof programming devices in different batches grouped by their device order.  These\r\nwill be saved into the device properties, and used by blacs.", "title": "Provides start_order and stop_order as per Issue #18.", "destination": {"commit": {"hash": "7f4bffa24052", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/7f4bffa24052.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/7f4bffa24052"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": null, "repository": null, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}, "date": "2017-06-19T22:20:26.233452+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}, {"update": {"description": "Added kwards \"start_order\" and \"stop_order\" at the base Device() object.  These are enforced to be integer in the range ORDER_MINIMUM to ORDER_MAXIMUM that\r\nare defined constants.  This is the first part of providing the functionality\r\nof programming devices in different batches grouped by their device order.  These\r\nwill be saved into the device properties, and used by blacs.", "title": "Provides start_order and stop_order as per Issue #18.", "destination": {"commit": {"hash": "7f4bffa24052", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/7f4bffa24052.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/7f4bffa24052"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": null, "repository": null, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}, "date": "2017-06-19T22:20:26.205547+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}}]}