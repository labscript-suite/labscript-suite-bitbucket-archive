{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41588208.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41588208"}}, "parent": {"id": 41578216, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments/41578216.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12/_/diff#comment-41578216"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}}, "title": "Provides start_order and stop_order as per Issue #18."}, "content": {"raw": "I think a better solution (slightly more complex) would be to create a subclass of `Device` which includes instantiation arguments of `BLACS_connection, initialization_order, finalization_order`. Then, things like `IntermediateDevice`, and `PseudoclockDevice` (plus some of our more custom/independent devices like RFBlaster and PhaseMatrix that directly subclass `Device`) should be updated to subclass this new class rather than directly subclassing `Device`. I don't have a good name for this class (something like `DirectlyProgrammableDevice`?)...\n\nThis then makes clear the distinction between devices that can directly communicate with a PC and those that are attached to such devices.\n\nWhen implementing the programming order feature in BLACS, we'd want to ensure that those devices that do not have an order specified (because they don't subclass this new class) are still programmed (but probably programmed last)", "markup": "markdown", "html": "<p>I think a better solution (slightly more complex) would be to create a subclass of <code>Device</code> which includes instantiation arguments of <code>BLACS_connection, initialization_order, finalization_order</code>. Then, things like <code>IntermediateDevice</code>, and <code>PseudoclockDevice</code> (plus some of our more custom/independent devices like RFBlaster and PhaseMatrix that directly subclass <code>Device</code>) should be updated to subclass this new class rather than directly subclassing <code>Device</code>. I don't have a good name for this class (something like <code>DirectlyProgrammableDevice</code>?)...</p>\n<p>This then makes clear the distinction between devices that can directly communicate with a PC and those that are attached to such devices.</p>\n<p>When implementing the programming order feature in BLACS, we'd want to ensure that those devices that do not have an order specified (because they don't subclass this new class) are still programmed (but probably programmed last)</p>", "type": "rendered"}, "created_on": "2017-07-26T23:41:28.193314+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-07-26T23:41:28.195895+00:00", "type": "pullrequest_comment", "id": 41588208}