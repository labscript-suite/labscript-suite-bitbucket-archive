{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/14/comments/41015834.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/14/_/diff#comment-41015834"}}, "parent": {"id": 40975130, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/14/comments/40975130.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/14/_/diff#comment-40975130"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 14, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/14.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/14"}}, "title": "Fixed bug with timing in labscript"}, "content": {"raw": "Oh, Looks like Line 539 just undoes a lot of the quantisation. Good catch!\n\n@shaunj can you remove line 539 (`all_change_times = list(set(all_change_times))`) and test that it still works? Then issue a new pull request for me? Thanks!", "markup": "markdown", "html": "<p>Oh, Looks like Line 539 just undoes a lot of the quantisation. Good catch!</p>\n<p>@shaunj can you remove line 539 (<code>all_change_times = list(set(all_change_times))</code>) and test that it still works? Then issue a new pull request for me? Thanks!</p>", "type": "rendered"}, "created_on": "2017-07-18T23:22:10.106056+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-07-18T23:22:10.113994+00:00", "type": "pullrequest_comment", "id": 41015834}