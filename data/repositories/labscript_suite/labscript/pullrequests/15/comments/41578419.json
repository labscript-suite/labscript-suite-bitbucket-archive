{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/41578419.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-41578419"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15"}}, "title": "Added inverted Digitaloutputs"}, "content": {"raw": "I think this should be able to be done without a new class. It think it should be able to be done with a unit conversion, such that digital outputs would have two types of units they accept: \"hardware\" which is just high/low, and \"semantic\" or something, which may or may not be inverted. The unit conversion class would take a boolean parameter saying whether semantic units are inverted compared to hardware units or not, and enable() and disable() would be aliases for constant(1, units='semantic) and constant(0, units='semantic'). in BLACS we would figure out a way to make the buttons be switchable between 'semantic' units and hardware units, and they would be coloured differently to show which they were set to (i.e they would be blue if they were set to 'semantic' units regardless of whether that was inverted compared to hardware or not)\n\nThe digital output class could automatically instantiate the unit conversion class - it could be the default unit conversion class for digital outputs.", "markup": "markdown", "html": "<p>I think this should be able to be done without a new class. It think it should be able to be done with a unit conversion, such that digital outputs would have two types of units they accept: \"hardware\" which is just high/low, and \"semantic\" or something, which may or may not be inverted. The unit conversion class would take a boolean parameter saying whether semantic units are inverted compared to hardware units or not, and enable() and disable() would be aliases for constant(1, units='semantic) and constant(0, units='semantic'). in BLACS we would figure out a way to make the buttons be switchable between 'semantic' units and hardware units, and they would be coloured differently to show which they were set to (i.e they would be blue if they were set to 'semantic' units regardless of whether that was inverted compared to hardware or not)</p>\n<p>The digital output class could automatically instantiate the unit conversion class - it could be the default unit conversion class for digital outputs.</p>", "type": "rendered"}, "created_on": "2017-07-26T20:27:27.537541+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-26T20:27:27.539757+00:00", "type": "pullrequest_comment", "id": 41578419}