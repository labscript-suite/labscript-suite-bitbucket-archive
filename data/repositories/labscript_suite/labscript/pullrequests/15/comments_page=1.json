{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/41501636.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-41501636"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15"}}, "title": "Added inverted Digitaloutputs"}, "content": {"raw": "It's going to take me a while to review this (and the related BLACS pull request) as I'm busy with other projects at the moment. I want to think carefully about where/what we store in the connection table and whether the BLACS implementation doesn't break the groundwork I've laid for future features before I click approve.\n\nIn terms of this pull request, I think it would be good if on/off was enable/disable (or at least provide both sets of methods) so that it matches the current DDS syntax.\n\nI'm also wary of introducing yet another labscript class for digital outputs. I would like to explore the option of consolidating them if possible (and if it makes sense) while maintaining the current API.", "markup": "markdown", "html": "<p>It's going to take me a while to review this (and the related BLACS pull request) as I'm busy with other projects at the moment. I want to think carefully about where/what we store in the connection table and whether the BLACS implementation doesn't break the groundwork I've laid for future features before I click approve.</p>\n<p>In terms of this pull request, I think it would be good if on/off was enable/disable (or at least provide both sets of methods) so that it matches the current DDS syntax.</p>\n<p>I'm also wary of introducing yet another labscript class for digital outputs. I would like to explore the option of consolidating them if possible (and if it makes sense) while maintaining the current API.</p>", "type": "rendered"}, "created_on": "2017-07-26T06:00:25.854169+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-07-26T06:00:25.857705+00:00", "type": "pullrequest_comment", "id": 41501636}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/41503072.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-41503072"}}, "parent": {"id": 41501636, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/41501636.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-41501636"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15"}}, "title": "Added inverted Digitaloutputs"}, "content": {"raw": "Sure no problem. Id say that the connection table is the right place as device properties have more overhead. Do you feel likes sharing what features that might be?\n\nAdding enable/disable for consistency seems reasonable. I'll think about adding it instead of or in addition to on/off.\n\nWell the Digital Device and shutters are basically the same thing except for delays. So we could make shutters inherit from Digital Device. But I do feel you pain creating yet another class. But I would argue that this class has it's right of existing. No other class currently allows for the abstraction of the actual hardware signals (except Shutter).\n\nUpdate: Ok so i'll renamed on/off to enable/disable as this really makes a lot more sense :)", "markup": "markdown", "html": "<p>Sure no problem. Id say that the connection table is the right place as device properties have more overhead. Do you feel likes sharing what features that might be?</p>\n<p>Adding enable/disable for consistency seems reasonable. I'll think about adding it instead of or in addition to on/off.</p>\n<p>Well the Digital Device and shutters are basically the same thing except for delays. So we could make shutters inherit from Digital Device. But I do feel you pain creating yet another class. But I would argue that this class has it's right of existing. No other class currently allows for the abstraction of the actual hardware signals (except Shutter).</p>\n<p>Update: Ok so i'll renamed on/off to enable/disable as this really makes a lot more sense :)</p>", "type": "rendered"}, "created_on": "2017-07-26T06:30:12.822413+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-26T09:26:09.443599+00:00", "type": "pullrequest_comment", "id": 41503072}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/41578419.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-41578419"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15"}}, "title": "Added inverted Digitaloutputs"}, "content": {"raw": "I think this should be able to be done without a new class. It think it should be able to be done with a unit conversion, such that digital outputs would have two types of units they accept: \"hardware\" which is just high/low, and \"semantic\" or something, which may or may not be inverted. The unit conversion class would take a boolean parameter saying whether semantic units are inverted compared to hardware units or not, and enable() and disable() would be aliases for constant(1, units='semantic) and constant(0, units='semantic'). in BLACS we would figure out a way to make the buttons be switchable between 'semantic' units and hardware units, and they would be coloured differently to show which they were set to (i.e they would be blue if they were set to 'semantic' units regardless of whether that was inverted compared to hardware or not)\n\nThe digital output class could automatically instantiate the unit conversion class - it could be the default unit conversion class for digital outputs.", "markup": "markdown", "html": "<p>I think this should be able to be done without a new class. It think it should be able to be done with a unit conversion, such that digital outputs would have two types of units they accept: \"hardware\" which is just high/low, and \"semantic\" or something, which may or may not be inverted. The unit conversion class would take a boolean parameter saying whether semantic units are inverted compared to hardware units or not, and enable() and disable() would be aliases for constant(1, units='semantic) and constant(0, units='semantic'). in BLACS we would figure out a way to make the buttons be switchable between 'semantic' units and hardware units, and they would be coloured differently to show which they were set to (i.e they would be blue if they were set to 'semantic' units regardless of whether that was inverted compared to hardware or not)</p>\n<p>The digital output class could automatically instantiate the unit conversion class - it could be the default unit conversion class for digital outputs.</p>", "type": "rendered"}, "created_on": "2017-07-26T20:27:27.537541+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-26T20:27:27.539757+00:00", "type": "pullrequest_comment", "id": 41578419}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/41579175.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-41579175"}}, "parent": {"id": 41578419, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/41578419.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-41578419"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15"}}, "title": "Added inverted Digitaloutputs"}, "content": {"raw": "Thats a lot harder to do but is way better as everyone can give Ouputs their own way of saying 'activate'/decativate', 'on/off' and 'enable/disable'. I'll be looking into how this could be done tomorrow but will probably not have anything like this ready for a week or so as I'll be a bit short on time in the next few days.\n\nThe pull request over at labscript_utils and blacs would also need to be changed for this to work so we would just let them wait until this here is done.\n\nUpdate: I reread the proposal and saw that I was misunderstanding on my first quick read.\nJust to clarify you mean, that a digital output should have unit conversions, that act upon enable(), disable() right? And your saying we could add the initialization of these units to the constructor of digital outputs. Like this\n\n```\n#!python\n\n DigitalOutput(name, parent_device, connection, inverted_BLACS) \n```\n\nand inverted_BLACS would be passed to the constructor of the semantic unit conversion?\n\n\nWhat I was understanding on first read was that we have the unit conversion also besides the inverted property have the option to name the function that aliases constant(1, units='semantic). I know thats not what you wrote but I quite like the idea of flexibility in the naming of enable/disable , on/off, activate/deactivate, ... . What do you think of this idea?", "markup": "markdown", "html": "<p>Thats a lot harder to do but is way better as everyone can give Ouputs their own way of saying 'activate'/decativate', 'on/off' and 'enable/disable'. I'll be looking into how this could be done tomorrow but will probably not have anything like this ready for a week or so as I'll be a bit short on time in the next few days.</p>\n<p>The pull request over at labscript_utils and blacs would also need to be changed for this to work so we would just let them wait until this here is done.</p>\n<p>Update: I reread the proposal and saw that I was misunderstanding on my first quick read.\nJust to clarify you mean, that a digital output should have unit conversions, that act upon enable(), disable() right? And your saying we could add the initialization of these units to the constructor of digital outputs. Like this</p>\n<div class=\"codehilite language-python\"><pre><span></span> <span class=\"n\">DigitalOutput</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">parent_device</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"n\">inverted_BLACS</span><span class=\"p\">)</span> \n</pre></div>\n\n\n<p>and inverted_BLACS would be passed to the constructor of the semantic unit conversion?</p>\n<p>What I was understanding on first read was that we have the unit conversion also besides the inverted property have the option to name the function that aliases constant(1, units='semantic). I know thats not what you wrote but I quite like the idea of flexibility in the naming of enable/disable , on/off, activate/deactivate, ... . What do you think of this idea?</p>", "type": "rendered"}, "created_on": "2017-07-26T20:38:04.148761+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-26T21:39:51.888726+00:00", "type": "pullrequest_comment", "id": 41579175}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/41583391.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-41583391"}}, "parent": {"id": 41579175, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/41579175.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-41579175"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15"}}, "title": "Added inverted Digitaloutputs"}, "content": {"raw": "Exactly, except 'inverted_BLACS' would be a misnomer because it would not have only to do with BLACS specifically - so a better name might be called for but I can't think of one off the top of my head...\"semantic_inverted\" or \"enabled_high\" or something.\n\nAh, well I think if all you are going to do is rename methods, then a subclass is the right way of doing that. In labscript 3 I'm planning on having all instructions be able to have delays, which would make that functionality of the shutter class redundant. With this change about invertable digital outs, shutters would then be fully redundant. However a subclass that merely renamed enable()/disable() to open()/close() still serves a purpose, and I don't think that purpose is served better by having a constructor monkey-patch methods onto a class - I think this sort of thing is one of the most defensible uses of subclassing!", "markup": "markdown", "html": "<p>Exactly, except 'inverted_BLACS' would be a misnomer because it would not have only to do with BLACS specifically - so a better name might be called for but I can't think of one off the top of my head...\"semantic_inverted\" or \"enabled_high\" or something.</p>\n<p>Ah, well I think if all you are going to do is rename methods, then a subclass is the right way of doing that. In labscript 3 I'm planning on having all instructions be able to have delays, which would make that functionality of the shutter class redundant. With this change about invertable digital outs, shutters would then be fully redundant. However a subclass that merely renamed enable()/disable() to open()/close() still serves a purpose, and I don't think that purpose is served better by having a constructor monkey-patch methods onto a class - I think this sort of thing is one of the most defensible uses of subclassing!</p>", "type": "rendered"}, "created_on": "2017-07-26T21:47:16.013128+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-26T21:47:44.197828+00:00", "type": "pullrequest_comment", "id": 41583391}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/41583603.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-41583603"}}, "parent": {"id": 41583391, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/41583391.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-41583391"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15"}}, "title": "Added inverted Digitaloutputs"}, "content": {"raw": "Ok so enable/disable it is! \nIf you have a good name for it just update your comment ;) I'll also do some thinking about naming.\nSince coding can happen without it I'll try and do it in the unit conversion way tomorrow.\n\nUpdate: how about 'enabled_state'? as we are calling the functions enable/disable", "markup": "markdown", "html": "<p>Ok so enable/disable it is! \nIf you have a good name for it just update your comment ;) I'll also do some thinking about naming.\nSince coding can happen without it I'll try and do it in the unit conversion way tomorrow.</p>\n<p>Update: how about 'enabled_state'? as we are calling the functions enable/disable</p>", "type": "rendered"}, "created_on": "2017-07-26T21:52:58.621299+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-26T21:59:24.962763+00:00", "type": "pullrequest_comment", "id": 41583603}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/41587465.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-41587465"}}, "parent": {"id": 41578419, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/41578419.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-41578419"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15"}}, "title": "Added inverted Digitaloutputs"}, "content": {"raw": "I still don't know if I like the idea of using a unit conversion for this. Our implementation of unit conversions has a lot of machinery that is totally irrelevant to a *Boolean not* operation (which is the only unit conversion we could possibly ever want for digital outputs). None of the unit conversion machinery exists for digital outputs in BLACS (although I think it does exist in labscript). It just seems excessive to me to be using that when we just want `if inverted: state = not state`", "markup": "markdown", "html": "<p>I still don't know if I like the idea of using a unit conversion for this. Our implementation of unit conversions has a lot of machinery that is totally irrelevant to a <em>Boolean not</em> operation (which is the only unit conversion we could possibly ever want for digital outputs). None of the unit conversion machinery exists for digital outputs in BLACS (although I think it does exist in labscript). It just seems excessive to me to be using that when we just want <code>if inverted: state = not state</code></p>", "type": "rendered"}, "created_on": "2017-07-26T23:23:27.252656+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-07-26T23:23:27.255027+00:00", "type": "pullrequest_comment", "id": 41587465}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/41587716.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-41587716"}}, "parent": {"id": 41587465, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/41587465.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-41587465"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15"}}, "title": "Added inverted Digitaloutputs"}, "content": {"raw": "Yeah ok you convinced me.\n\n* smaller amount of code changes this way\n\n* Not much point re-using code when it's 99% boilerplate around a simple inversion\n\n* unit conversion code can change in future without having to think about how it affects the digital lines\n\n* blue buttons will tell you if the output is inverted, not that you have to *check* whether it's inverted or not. So you can know more by immediately looking without having to see a tooltip or anything.", "markup": "markdown", "html": "<p>Yeah ok you convinced me.</p>\n<ul>\n<li>\n<p>smaller amount of code changes this way</p>\n</li>\n<li>\n<p>Not much point re-using code when it's 99% boilerplate around a simple inversion</p>\n</li>\n<li>\n<p>unit conversion code can change in future without having to think about how it affects the digital lines</p>\n</li>\n<li>\n<p>blue buttons will tell you if the output is inverted, not that you have to <em>check</em> whether it's inverted or not. So you can know more by immediately looking without having to see a tooltip or anything.</p>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2017-07-26T23:30:06.366114+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-26T23:30:06.368877+00:00", "type": "pullrequest_comment", "id": 41587716}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/41600282.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-41600282"}}, "parent": {"id": 41587716, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/41587716.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-41587716"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15"}}, "title": "Added inverted Digitaloutputs"}, "content": {"raw": "Ok so I'll just leave my code as is. Making this and it's 2 sister pull requests 'done' again.\n\nAnd as we figured out that device properties currently break stuff I'd stick to connection table properties for now.", "markup": "markdown", "html": "<p>Ok so I'll just leave my code as is. Making this and it's 2 sister pull requests 'done' again.</p>\n<p>And as we figured out that device properties currently break stuff I'd stick to connection table properties for now.</p>", "type": "rendered"}, "created_on": "2017-07-27T06:20:28.085662+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-27T06:20:28.154154+00:00", "type": "pullrequest_comment", "id": 41600282}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/43154309.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-43154309"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15"}}, "title": "Added inverted Digitaloutputs"}, "content": {"raw": "It has almost been a month since I created this pull request. I'd like to deploy this (and the two related pull requests) soon. \n\nIt would be nice If we could agree on the syntax introduced in this pull request so I can be sure that won't change. \n\nThis pull request alone won't change anything but syntax and could be merged if we agree. Discussion on the rest of the implementation of the feature could then still happen over at BLACS.", "markup": "markdown", "html": "<p>It has almost been a month since I created this pull request. I'd like to deploy this (and the two related pull requests) soon. </p>\n<p>It would be nice If we could agree on the syntax introduced in this pull request so I can be sure that won't change. </p>\n<p>This pull request alone won't change anything but syntax and could be merged if we agree. Discussion on the rest of the implementation of the feature could then still happen over at BLACS.</p>", "type": "rendered"}, "created_on": "2017-08-20T07:06:49.860967+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-20T07:06:49.927610+00:00", "type": "pullrequest_comment", "id": 43154309}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/44050786.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-44050786"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15"}}, "title": "Added inverted Digitaloutputs"}, "content": {"raw": "I'd also be fine with removing ```DigitalDevice``` and ```inverted_BLACS``` and adding a keyword ```inverted``` which switches ```go_high``` with ```go_low``` this would also allow for removing the code in the shutter class that deals with the open_state. \n\nActually that what we are doing in our lab now already but I'm not sure if this is really that great, as scripts imply the hardware is doing one thing but it's doing the other.", "markup": "markdown", "html": "<p>I'd also be fine with removing <code>DigitalDevice</code> and <code>inverted_BLACS</code> and adding a keyword <code>inverted</code> which switches <code>go_high</code> with <code>go_low</code> this would also allow for removing the code in the shutter class that deals with the open_state. </p>\n<p>Actually that what we are doing in our lab now already but I'm not sure if this is really that great, as scripts imply the hardware is doing one thing but it's doing the other.</p>", "type": "rendered"}, "created_on": "2017-09-01T06:47:43.071501+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-09-01T06:47:43.121734+00:00", "type": "pullrequest_comment", "id": 44050786}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/44402604.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-44402604"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15"}}, "title": "Added inverted Digitaloutputs"}, "content": {"raw": "Yes, I think I like that approach. It makes `Shutter` slightly less readable (since `open` will always call `go_high`, but `go_high` may actually mean `go_low`, however, a few comments in the shutter class explaining this would solve that. We should keep `open_state` as the keyword argument for `Shutter`, but not store it in the connection table (and update runviewer to use `inverted`)", "markup": "markdown", "html": "<p>Yes, I think I like that approach. It makes <code>Shutter</code> slightly less readable (since <code>open</code> will always call <code>go_high</code>, but <code>go_high</code> may actually mean <code>go_low</code>, however, a few comments in the shutter class explaining this would solve that. We should keep <code>open_state</code> as the keyword argument for <code>Shutter</code>, but not store it in the connection table (and update runviewer to use <code>inverted</code>)</p>", "type": "rendered"}, "created_on": "2017-09-07T02:12:42.370074+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-09-07T02:12:42.372530+00:00", "type": "pullrequest_comment", "id": 44402604}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/44413297.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-44413297"}}, "parent": {"id": 44402604, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/44402604.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-44402604"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15"}}, "title": "Added inverted Digitaloutputs"}, "content": {"raw": "I'll wait with changing the pull request until @cbillington states his opinion/concerns with this approach when he comes back.\n\nUpdate: After a bit of thinking I decided to go ahead and change this pull request as I can always change it back", "markup": "markdown", "html": "<p>I'll wait with changing the pull request until @cbillington states his opinion/concerns with this approach when he comes back.</p>\n<p>Update: After a bit of thinking I decided to go ahead and change this pull request as I can always change it back</p>", "type": "rendered"}, "created_on": "2017-09-07T07:00:53.482576+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-09-26T14:47:34.786453+00:00", "type": "pullrequest_comment", "id": 44413297}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/54313874.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-54313874"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15"}}, "title": "Added inverted Digitaloutputs"}, "content": {"raw": "Ok, so I've reviewed this again \\(after not looking at it for 4 months\\) and I'm not sure I like the fact that `inverted` switches the behaviour of `go_high`/`go_low` as those words literally translate to the logic level of the hardware output.\n\nLooking back over the above discussion, it looks like we lost the `enable`/`disable` methods somewhere? I'm thinking maybe the best approach is to have `go_high`/`go_low` ignore the `inverted` parameter but `enable`/`disable` use the `inverted` parameter. `Shutter` would then be updated to use `enable`/`disable` so that shutters were faithful to the `inverted` parameter.\n\nDoes that sounds reasonable?\n\nAlso, we need to resolve the merge conflict before merging this in!", "markup": "markdown", "html": "<p>Ok, so I've reviewed this again (after not looking at it for 4 months) and I'm not sure I like the fact that <code>inverted</code> switches the behaviour of <code>go_high</code>/<code>go_low</code> as those words literally translate to the logic level of the hardware output.</p>\n<p>Looking back over the above discussion, it looks like we lost the <code>enable</code>/<code>disable</code> methods somewhere? I'm thinking maybe the best approach is to have <code>go_high</code>/<code>go_low</code> ignore the <code>inverted</code> parameter but <code>enable</code>/<code>disable</code> use the <code>inverted</code> parameter. <code>Shutter</code> would then be updated to use <code>enable</code>/<code>disable</code> so that shutters were faithful to the <code>inverted</code> parameter.</p>\n<p>Does that sounds reasonable?</p>\n<p>Also, we need to resolve the merge conflict before merging this in!</p>", "type": "rendered"}, "created_on": "2018-01-22T22:45:11.795294+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-01-22T22:45:11.798702+00:00", "type": "pullrequest_comment", "id": 54313874}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/54429493.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-54429493"}}, "parent": {"id": 54313874, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/54313874.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-54313874"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15"}}, "title": "Added inverted Digitaloutputs"}, "content": {"raw": "Sounds good to me. \n\nI applied the requested changes. ", "markup": "markdown", "html": "<p>Sounds good to me. </p>\n<p>I applied the requested changes. </p>", "type": "rendered"}, "created_on": "2018-01-23T20:46:28.883202+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-01-23T20:46:28.919282+00:00", "type": "pullrequest_comment", "id": 54429493}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/54445898.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-54445898"}}, "parent": {"id": 54429493, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments/54429493.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15/_/diff#comment-54429493"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15"}}, "title": "Added inverted Digitaloutputs"}, "content": {"raw": "Great! I tested with our main experiment labscript file and it doesn't change the hardware instructions generated \\(compared HDF5 files using h5diff\\), so I'm approving and merging.", "markup": "markdown", "html": "<p>Great! I tested with our main experiment labscript file and it doesn't change the hardware instructions generated (compared HDF5 files using h5diff), so I'm approving and merging.</p>", "type": "rendered"}, "created_on": "2018-01-24T01:20:45.754140+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-01-24T01:20:45.757146+00:00", "type": "pullrequest_comment", "id": 54445898}], "page": 1, "size": 16}