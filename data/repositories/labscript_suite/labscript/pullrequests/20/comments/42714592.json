{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/20/comments/42714592.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/20/_/diff#comment-42714592"}}, "parent": {"id": 42714479, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/20/comments/42714479.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/20/_/diff#comment-42714479"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/20"}}, "title": "Added default_value to Output's constructor"}, "content": {"raw": "Yes - I am actually struggling to find a single example where this closing worked like I thought it did. The only time bitbucket has actually closed the source branch is when I was merging my own pull request.\n\nI thought that this is how it worked:\n\n1. Main repo pulls from the fork\n\n2. Main repo now has the extra branch\n\n3. Main repo makes a \"close branch\" commit in the branch\n\n4. Main repo makes a merge commit into the target branch\n\n5. Author of the pull request does not see their fork's branch closed until they pull the commit that closed it from the main repo\n\nThe above doesn't require the merger to have commit access to the pull request author's fork. But bitbucket seems to only be closing the source branches when either the merger *does* have commit access to the fork, or where the merger is actually the author of the pull request.\n\nMaybe this is fine for the bitbucket interface where it draws a distinction between active and merged branches, but in mercurial itself, typing 'hg heads' shows all branches.\n\nI'll have to investigate and re-thing what the best workflow is here.\n", "markup": "markdown", "html": "<p>Yes - I am actually struggling to find a single example where this closing worked like I thought it did. The only time bitbucket has actually closed the source branch is when I was merging my own pull request.</p>\n<p>I thought that this is how it worked:</p>\n<ol>\n<li>\n<p>Main repo pulls from the fork</p>\n</li>\n<li>\n<p>Main repo now has the extra branch</p>\n</li>\n<li>\n<p>Main repo makes a \"close branch\" commit in the branch</p>\n</li>\n<li>\n<p>Main repo makes a merge commit into the target branch</p>\n</li>\n<li>\n<p>Author of the pull request does not see their fork's branch closed until they pull the commit that closed it from the main repo</p>\n</li>\n</ol>\n<p>The above doesn't require the merger to have commit access to the pull request author's fork. But bitbucket seems to only be closing the source branches when either the merger <em>does</em> have commit access to the fork, or where the merger is actually the author of the pull request.</p>\n<p>Maybe this is fine for the bitbucket interface where it draws a distinction between active and merged branches, but in mercurial itself, typing 'hg heads' shows all branches.</p>\n<p>I'll have to investigate and re-thing what the best workflow is here.</p>", "type": "rendered"}, "created_on": "2017-08-13T23:51:55.066635+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-13T23:51:55.068987+00:00", "type": "pullrequest_comment", "id": 42714592}