{"rendered": {"description": {"raw": "This moves most of the state calculation to numpy and there by reduces compile time for sequences with many samples drastically.\r\n\r\nThis script went from 2681 ms to 313 ms compile time with this change:\r\n\r\n```Python\r\nstart()\r\nt = 0\r\nduration =  200 * ms\r\nperiode = 1 * us\r\nsequence = [(0, 1), (periode/2.0, 0)]\r\nsequence2 = [(0, 0), (periode/2.0, 1)]\r\nsamplerate = len(sequence)/periode\r\nOutput1.repeat_pulse_sequence(t, duration, sequence, periode, samplerate)\r\nOutput2.repeat_pulse_sequence(t, duration, sequence2, periode, samplerate)\r\nt += duration\r\nstop(t)\r\n```", "markup": "markdown", "html": "<p>This moves most of the state calculation to numpy and there by reduces compile time for sequences with many samples drastically.</p>\n<p>This script went from 2681 ms to 313 ms compile time with this change:</p>\n<div class=\"codehilite language-Python\"><pre><span></span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">duration</span> <span class=\"o\">=</span>  <span class=\"mi\">200</span> <span class=\"o\">*</span> <span class=\"n\">ms</span>\n<span class=\"n\">periode</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">*</span> <span class=\"n\">us</span>\n<span class=\"n\">sequence</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">periode</span><span class=\"o\">/</span><span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)]</span>\n<span class=\"n\">sequence2</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">periode</span><span class=\"o\">/</span><span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)]</span>\n<span class=\"n\">samplerate</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sequence</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"n\">periode</span>\n<span class=\"n\">Output1</span><span class=\"o\">.</span><span class=\"n\">repeat_pulse_sequence</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"n\">sequence</span><span class=\"p\">,</span> <span class=\"n\">periode</span><span class=\"p\">,</span> <span class=\"n\">samplerate</span><span class=\"p\">)</span>\n<span class=\"n\">Output2</span><span class=\"o\">.</span><span class=\"n\">repeat_pulse_sequence</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"n\">sequence2</span><span class=\"p\">,</span> <span class=\"n\">periode</span><span class=\"p\">,</span> <span class=\"n\">samplerate</span><span class=\"p\">)</span>\n<span class=\"n\">t</span> <span class=\"o\">+=</span> <span class=\"n\">duration</span>\n<span class=\"n\">stop</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n</pre></div>", "type": "rendered"}, "title": {"raw": "Faster pulse_sequence", "markup": "markdown", "html": "<p>Faster pulse_sequence</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This moves most of the state calculation to numpy and there by reduces compile time for sequences with many samples drastically.\r\n\r\nThis script went from 2681 ms to 313 ms compile time with this change:\r\n\r\n```Python\r\nstart()\r\nt = 0\r\nduration =  200 * ms\r\nperiode = 1 * us\r\nsequence = [(0, 1), (periode/2.0, 0)]\r\nsequence2 = [(0, 0), (periode/2.0, 1)]\r\nsamplerate = len(sequence)/periode\r\nOutput1.repeat_pulse_sequence(t, duration, sequence, periode, samplerate)\r\nOutput2.repeat_pulse_sequence(t, duration, sequence2, periode, samplerate)\r\nt += duration\r\nstop(t)\r\n```", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/21/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:9aba96c50c4b%0D028edc9b979e?from_pullrequest_id=21"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/21/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/21.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/21/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/21/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/21"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/21/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:9aba96c50c4b%0D028edc9b979e?from_pullrequest_id=21"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/21/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/21/statuses_page=1.json"}}, "title": "Faster pulse_sequence", "close_source_branch": false, "reviewers": [{"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}], "id": 21, "destination": {"commit": {"hash": "028edc9b979e", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/028edc9b979e.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/028edc9b979e"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2017-09-15T13:10:49.456599+00:00", "summary": {"raw": "This moves most of the state calculation to numpy and there by reduces compile time for sequences with many samples drastically.\r\n\r\nThis script went from 2681 ms to 313 ms compile time with this change:\r\n\r\n```Python\r\nstart()\r\nt = 0\r\nduration =  200 * ms\r\nperiode = 1 * us\r\nsequence = [(0, 1), (periode/2.0, 0)]\r\nsequence2 = [(0, 0), (periode/2.0, 1)]\r\nsamplerate = len(sequence)/periode\r\nOutput1.repeat_pulse_sequence(t, duration, sequence, periode, samplerate)\r\nOutput2.repeat_pulse_sequence(t, duration, sequence2, periode, samplerate)\r\nt += duration\r\nstop(t)\r\n```", "markup": "markdown", "html": "<p>This moves most of the state calculation to numpy and there by reduces compile time for sequences with many samples drastically.</p>\n<p>This script went from 2681 ms to 313 ms compile time with this change:</p>\n<div class=\"codehilite language-Python\"><pre><span></span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">duration</span> <span class=\"o\">=</span>  <span class=\"mi\">200</span> <span class=\"o\">*</span> <span class=\"n\">ms</span>\n<span class=\"n\">periode</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">*</span> <span class=\"n\">us</span>\n<span class=\"n\">sequence</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">periode</span><span class=\"o\">/</span><span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)]</span>\n<span class=\"n\">sequence2</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">periode</span><span class=\"o\">/</span><span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)]</span>\n<span class=\"n\">samplerate</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sequence</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"n\">periode</span>\n<span class=\"n\">Output1</span><span class=\"o\">.</span><span class=\"n\">repeat_pulse_sequence</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"n\">sequence</span><span class=\"p\">,</span> <span class=\"n\">periode</span><span class=\"p\">,</span> <span class=\"n\">samplerate</span><span class=\"p\">)</span>\n<span class=\"n\">Output2</span><span class=\"o\">.</span><span class=\"n\">repeat_pulse_sequence</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"n\">sequence2</span><span class=\"p\">,</span> <span class=\"n\">periode</span><span class=\"p\">,</span> <span class=\"n\">samplerate</span><span class=\"p\">)</span>\n<span class=\"n\">t</span> <span class=\"o\">+=</span> <span class=\"n\">duration</span>\n<span class=\"n\">stop</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "f4461240942f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript/commit/f4461240942f"}, "html": {"href": "#!/PhyNerd/labscript/commits/f4461240942f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript"}, "html": {"href": "#!/PhyNerd/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7ae7c0f3-4119-4307-8b3f-652003761155}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "PhyNerd/labscript", "uuid": "{7ae7c0f3-4119-4307-8b3f-652003761155}"}, "branch": {"name": "pulse_sequence_performance"}}, "comment_count": 7, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-09-25T06:50:24.313861+00:00", "type": "participant", "approved": false, "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}}, {"role": "REVIEWER", "participated_on": "2017-10-03T00:01:44.061868+00:00", "type": "participant", "approved": true, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}], "reason": "", "updated_on": "2017-10-03T00:02:07.189282+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "9aba96c50c4b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/9aba96c50c4b.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/9aba96c50c4b"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}