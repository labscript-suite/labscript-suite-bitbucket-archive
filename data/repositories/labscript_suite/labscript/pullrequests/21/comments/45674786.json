{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/21/comments/45674786.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/21/_/diff#comment-45674786"}}, "parent": {"id": 45674406, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/21/comments/45674406.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/21/_/diff#comment-45674406"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/21"}}, "title": "Faster pulse_sequence"}, "content": {"raw": "In a terminal, I've done:\n\n```Python\n>> x = np.array([1,2,3,4])\n>> np.digitize(2.5,x, right=False)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nValueError: object of too small depth for desired array\n```\n\nSimilarly, I can do `np.digitize([2.5], x, right=False)` but then I get `array([2])` as the result, and `x[np.digitize(2.5,x, right=False)]` results in `array([3])` as the result \\(and so you need to index it with 0 in order to get a single value out.\n\n\u200c", "markup": "markdown", "html": "<p>In a terminal, I've done:</p>\n<div class=\"codehilite language-Python\"><pre><span></span><span class=\"o\">&gt;&gt;</span> <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">digitize</span><span class=\"p\">(</span><span class=\"mf\">2.5</span><span class=\"p\">,</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">right</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;&lt;stdin&gt;&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n<span class=\"ne\">ValueError</span><span class=\"p\">:</span> <span class=\"nb\">object</span> <span class=\"n\">of</span> <span class=\"n\">too</span> <span class=\"n\">small</span> <span class=\"n\">depth</span> <span class=\"k\">for</span> <span class=\"n\">desired</span> <span class=\"n\">array</span>\n</pre></div>\n\n\n<p>Similarly, I can do <code>np.digitize([2.5], x, right=False)</code> but then I get <code>array([2])</code> as the result, and <code>x[np.digitize(2.5,x, right=False)]</code> results in <code>array([3])</code> as the result (and so you need to index it with 0 in order to get a single value out.</p>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2017-09-25T05:51:43.120830+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-09-25T05:59:45.708454+00:00", "type": "pullrequest_comment", "id": 45674786}