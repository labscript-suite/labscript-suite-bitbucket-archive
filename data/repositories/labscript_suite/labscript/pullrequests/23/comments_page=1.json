{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/23/comments/59283283.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/23/_/diff#comment-59283283"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 23, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/23.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/23"}}, "title": "Python3"}, "content": {"raw": "Can we merge this? The changes are not that great:\n\n-future imports  \n-a few casts to list  \n-dtypeworkaround  \n-`__builtin__` -> `builtins`\n\n\u200c\n\nI'm not trying to rush things but I think that we can merge all python 3 pull request \\(but the devices\\) \"soonish\". Their changes are not that great \\(again except for devices\\) and we can avoid merge conflicts by merging them earlier. There should not be major bugs in any of the python 3 pull request as I have tested them for a while now.", "markup": "markdown", "html": "<p>Can we merge this? The changes are not that great:</p>\n<p>-future imports<br />\n-a few casts to list<br />\n-dtypeworkaround<br />\n-<code>__builtin__</code> -&gt; <code>builtins</code></p>\n<p>\u200c</p>\n<p>I'm not trying to rush things but I think that we can merge all python 3 pull request (but the devices) \"soonish\". Their changes are not that great (again except for devices) and we can avoid merge conflicts by merging them earlier. There should not be major bugs in any of the python 3 pull request as I have tested them for a while now.</p>", "type": "rendered"}, "created_on": "2018-03-20T07:10:51.220675+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-20T07:10:51.305841+00:00", "type": "pullrequest_comment", "id": 59283283}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/23/comments/59399232.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/23/_/diff#comment-59399232"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 23, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/23.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/23"}}, "title": "Python3"}, "content": {"raw": "This one will require a bit of thought and testing still, making more strings unicode may confuse code that is reading HDF5 files, particularly the labview programs that are reading connection tables. It is probably the case that connection tables are still storing bytestrings for everything in these changes, but I would want to make sure, and I'm not sure what else the LabVIEW programs are reading and whether they can handle unicode strings. I'll have to look into this.", "markup": "markdown", "html": "<p>This one will require a bit of thought and testing still, making more strings unicode may confuse code that is reading HDF5 files, particularly the labview programs that are reading connection tables. It is probably the case that connection tables are still storing bytestrings for everything in these changes, but I would want to make sure, and I'm not sure what else the LabVIEW programs are reading and whether they can handle unicode strings. I'll have to look into this.</p>", "type": "rendered"}, "created_on": "2018-03-20T23:44:24.024131+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-20T23:44:24.027454+00:00", "type": "pullrequest_comment", "id": 59399232}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/23/comments/59416495.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/23/_/diff#comment-59416495"}}, "parent": {"id": 59399232, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/23/comments/59399232.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/23/_/diff#comment-59399232"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 23, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/23.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/23"}}, "title": "Python3"}, "content": {"raw": "I didn't think about LabVIEW.\n\nIf I understand [http://docs.h5py.org/en/latest/strings.html#how-to-store-text-strings](http://docs.h5py.org/en/latest/strings.html#how-to-store-text-strings) correctly h5py stores everything as ascii or utf8 internally anyway. Looking at the connection table the dtypes are all still byte strings so that should not change in the hdf5 file.\n\nBut testing will reveal if I'm right or not.", "markup": "markdown", "html": "<p>I didn't think about LabVIEW.</p>\n<p>If I understand <a data-is-external-link=\"true\" href=\"http://docs.h5py.org/en/latest/strings.html#how-to-store-text-strings\" rel=\"nofollow\">http://docs.h5py.org/en/latest/strings.html#how-to-store-text-strings</a> correctly h5py stores everything as ascii or utf8 internally anyway. Looking at the connection table the dtypes are all still byte strings so that should not change in the hdf5 file.</p>\n<p>But testing will reveal if I'm right or not.</p>", "type": "rendered"}, "created_on": "2018-03-21T07:16:33.473000+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-21T07:16:33.529292+00:00", "type": "pullrequest_comment", "id": 59416495}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/23/comments/59935641.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/23/_/diff#comment-59935641"}}, "parent": {"id": 59416495, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/23/comments/59416495.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/23/_/diff#comment-59416495"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 23, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/23.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/23"}}, "title": "Python3"}, "content": {"raw": "Yes, you are correct about this. For a while we had a workaround (the fixed length strings hack in labscript_utils) in place that would save all strings in h5 files as fixed-length strings for the sake of LabVIEW, but h5labview changed a long time ago to be able to read the vlen types so we haven't had to use that workaround.", "markup": "markdown", "html": "<p>Yes, you are correct about this. For a while we had a workaround (the fixed length strings hack in labscript_utils) in place that would save all strings in h5 files as fixed-length strings for the sake of LabVIEW, but h5labview changed a long time ago to be able to read the vlen types so we haven't had to use that workaround.</p>", "type": "rendered"}, "created_on": "2018-03-27T04:55:31.657243+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-27T04:55:31.661170+00:00", "type": "pullrequest_comment", "id": 59935641}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/23/comments/59935677.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/23/_/diff#comment-59935677"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 23, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/23.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/23"}}, "title": "Python3"}, "content": {"raw": "Thanks as always for the patches!", "markup": "markdown", "html": "<p>Thanks as always for the patches!</p>", "type": "rendered"}, "created_on": "2018-03-27T04:56:41.206752+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-27T04:56:41.211586+00:00", "type": "pullrequest_comment", "id": 59935677}], "page": 1, "size": 5}