{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/31/comments/59018242.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/31/_/diff#comment-59018242"}}, "parent": {"id": 59017760, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/31/comments/59017760.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/31/_/diff#comment-59017760"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/31"}}, "title": "Updates to RemoteWorker and similar classes"}, "content": {"raw": "To answer your questions:\n\n* `raspberry_pi_1.RemoteGUI` by itself implies that the worker is on the same machine as the GUI \\(but that it is remote to the primary instance of BLACS\\). The alternative would be to have the worker on a separate PC again \\(see the third example above\\) in which case communication for coordinating the shot goes from the primary BLACS to the remote GUI to the remote worker.  \n    \n  Please feel free to suggest other names for `RemoteGUI`, we just couldn't come up with anything better at the time.\n* `SecondaryControlSystem` is to indicate that the GUI \\(and worker, although that could be chained with `RemoteWorker` in order to shift the worker somewhere else if that made sense\\) is for control systems that work like our imaging system BIAS. In a way it's aim is to be like a generalised version of the `Camera` class in the sense that there is a tab in BLACS that mediates the communication to another program \\(that's likely running on another computer\\). The distinction between this and `RemoteGUI` is that the software that makes up your secondary control system should be launched manually by the user \\(and so can be anything that conforms to the specifications\\) where as `RemoteGUI` and `RemoteWorker` are assumed to be directly running the BLACS tab and BLACS worker code and will be managed by the upcoming zprocess command server \\(aka a generalised version of the remote worker broker that will be built into zprocess\\). Otherwise there is not much difference. We basically introduced it to distinguish between remote GUIs that were managed by the user and those that were managed remotely by primary BLACS \\(aka restarted when connection table is recompiled, etc.\\)\n\nDoes that help to clarify? Happy to expand more on our thought process today if you wish!", "markup": "markdown", "html": "<p>To answer your questions:</p>\n<ul>\n<li><code>raspberry_pi_1.RemoteGUI</code> by itself implies that the worker is on the same machine as the GUI (but that it is remote to the primary instance of BLACS). The alternative would be to have the worker on a separate PC again (see the third example above) in which case communication for coordinating the shot goes from the primary BLACS to the remote GUI to the remote worker.  </li>\n</ul>\n<p>Please feel free to suggest other names for <code>RemoteGUI</code>, we just couldn't come up with anything better at the time.\n* <code>SecondaryControlSystem</code> is to indicate that the GUI (and worker, although that could be chained with <code>RemoteWorker</code> in order to shift the worker somewhere else if that made sense) is for control systems that work like our imaging system BIAS. In a way it's aim is to be like a generalised version of the <code>Camera</code> class in the sense that there is a tab in BLACS that mediates the communication to another program (that's likely running on another computer). The distinction between this and <code>RemoteGUI</code> is that the software that makes up your secondary control system should be launched manually by the user (and so can be anything that conforms to the specifications) where as <code>RemoteGUI</code> and <code>RemoteWorker</code> are assumed to be directly running the BLACS tab and BLACS worker code and will be managed by the upcoming zprocess command server (aka a generalised version of the remote worker broker that will be built into zprocess). Otherwise there is not much difference. We basically introduced it to distinguish between remote GUIs that were managed by the user and those that were managed remotely by primary BLACS (aka restarted when connection table is recompiled, etc.)</p>\n<p>Does that help to clarify? Happy to expand more on our thought process today if you wish!</p>", "type": "rendered"}, "created_on": "2018-03-16T06:39:24.790588+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-03-16T06:39:24.794502+00:00", "type": "pullrequest_comment", "id": 59018242}