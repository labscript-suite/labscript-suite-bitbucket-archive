{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/31/comments/59394686.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/31/_/diff#comment-59394686"}}, "parent": {"id": 59272671, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/31/comments/59272671.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/31/_/diff#comment-59272671"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/31"}}, "title": "Updates to RemoteWorker and similar classes"}, "content": {"raw": "There is actually already a device created for the local \\(primary\\) BLACS instance which becomes the parent of all the `RemoteBLACS` and `SecondaryControlSystem` \"devices\". This is an instance of the `_PrimaryBLACS` class, but is not really expected to be accessed by the user. \n\nIt is also not automatically used for devices which don't explicitly specify a `gui` and `worker` kwarg. There are a couple of reasons for this:\n\n* In order to maintain backwards compatibility between a version of BLACS that supports remote devices and HDF5 files produced by a version of labscript that does not, we need to make BLACS assume that devices missing `gui` and `worker` are attached to the primary instance \\(only instance in this case\\) of BLACS anyway. \n* We maintain forwards compatibility between new labscript \\(supporting remote gui and workers\\) and old BLACS, if you don't use any of the new features \\(you are not required to recompile your BLACS connection table just to ensure that experiments are able to run\\). \n* I suspect that we will have a tab in BLACS which provides the status of remote devices \\(queried via the ZMQ command server or secondary control system\\). This ultimately corresponds to the device in the connection table for the `_PrimaryBLACS` that is created internally. Importantly, this object is only placed in the connection table if you create a `RemoteBLACS` or `SecondaryControlSystem` device. This is useful in the situation where your BLACS connection table has many remote devices, but your compiled experiment is only using devices connected to the primary BLACS PC. If you remove the unused `RemoteBLACS` and `SecondaryControlSystem` definitions in your experiment logic connection table, the device for primary BLACS is not created  and the current architecture of the queue is already set up to then ignore unused/missing devices, in this case the tab \\(and thus presumably communication\\) with all remote devices.\n\nWhile I'm not married to any particular class name, personally I think I prefer `RemoteBLACS` to `BlacsHost` simply because it makes it clear this is to run on a separate PC \\(I think it unlikely we would have a second instance of BLACS on the same PC, mainly because the easier solution to that is just to add support for tabs that can pop-out of the main BLACS window\\).", "markup": "markdown", "html": "<p>There is actually already a device created for the local (primary) BLACS instance which becomes the parent of all the <code>RemoteBLACS</code> and <code>SecondaryControlSystem</code> \"devices\". This is an instance of the <code>_PrimaryBLACS</code> class, but is not really expected to be accessed by the user. </p>\n<p>It is also not automatically used for devices which don't explicitly specify a <code>gui</code> and <code>worker</code> kwarg. There are a couple of reasons for this:</p>\n<ul>\n<li>In order to maintain backwards compatibility between a version of BLACS that supports remote devices and HDF5 files produced by a version of labscript that does not, we need to make BLACS assume that devices missing <code>gui</code> and <code>worker</code> are attached to the primary instance (only instance in this case) of BLACS anyway. </li>\n<li>We maintain forwards compatibility between new labscript (supporting remote gui and workers) and old BLACS, if you don't use any of the new features (you are not required to recompile your BLACS connection table just to ensure that experiments are able to run). </li>\n<li>I suspect that we will have a tab in BLACS which provides the status of remote devices (queried via the ZMQ command server or secondary control system). This ultimately corresponds to the device in the connection table for the <code>_PrimaryBLACS</code> that is created internally. Importantly, this object is only placed in the connection table if you create a <code>RemoteBLACS</code> or <code>SecondaryControlSystem</code> device. This is useful in the situation where your BLACS connection table has many remote devices, but your compiled experiment is only using devices connected to the primary BLACS PC. If you remove the unused <code>RemoteBLACS</code> and <code>SecondaryControlSystem</code> definitions in your experiment logic connection table, the device for primary BLACS is not created  and the current architecture of the queue is already set up to then ignore unused/missing devices, in this case the tab (and thus presumably communication) with all remote devices.</li>\n</ul>\n<p>While I'm not married to any particular class name, personally I think I prefer <code>RemoteBLACS</code> to <code>BlacsHost</code> simply because it makes it clear this is to run on a separate PC (I think it unlikely we would have a second instance of BLACS on the same PC, mainly because the easier solution to that is just to add support for tabs that can pop-out of the main BLACS window).</p>", "type": "rendered"}, "created_on": "2018-03-20T22:23:23.162500+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-03-20T22:23:23.165960+00:00", "type": "pullrequest_comment", "id": 59394686}