{"rendered": {"description": {"raw": "Re-do of pull request #12, which was backed out due to a bug.\r\n\r\nProvide start_order and stop_order for devices, to specify what order BLACS should transition them to buffered mode and manual mode respectively. Allows any integer, default is zero, max and min not specified. If specified on a device without a BLACS_connection attribute, a TypeError is raised during compilation. start_order and stop_order are saved as device_properties, and thus can vary from shot-to-shot without a connection table recompilation.\r\n\r\nAt a later date (labscript 3?), devices connected directly to BLACS will\r\nprobably be a subclass of a BLACSDevice mixin class or something like that,\r\nat which point we can make only these classes have the keyword arguments in the\r\nfirst place. For the moment however this seems like a workable implementation - for all devices to have it, and to raise an error on the ones to which it does not apply.\r\n\r\nThis feature is aimed at the creation of a 'device' for running scripts during transition to manual or transition to buffered, and typically one would want a script to run at the end of the shot after other devices have transitioned to manual. Being able to run some basic analysis in a synchronous way (i.e. not waiting for lyse, which might be busy) at the end of a shot, in order to influence the next shot (with the upcoming runmanager just-in-time compilation feature), is important for some feedback/feed-forward applications such as dynamic magnetic field cancellation. This is discussed in issue #18.\r\n\r\nThere are other reasons to specify transition orders too, such as debugging the effect of spurious pulses from PulseBlasters during transition_to_buffered.", "markup": "markdown", "html": "<p>Re-do of <a href=\"#!/labscript_suite/labscript/pull-requests/12/provides-start_order-and-stop_order-as-per\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #12</a>, which was backed out due to a bug.</p>\n<p>Provide start_order and stop_order for devices, to specify what order BLACS should transition them to buffered mode and manual mode respectively. Allows any integer, default is zero, max and min not specified. If specified on a device without a BLACS_connection attribute, a TypeError is raised during compilation. start_order and stop_order are saved as device_properties, and thus can vary from shot-to-shot without a connection table recompilation.</p>\n<p>At a later date (labscript 3?), devices connected directly to BLACS will\nprobably be a subclass of a BLACSDevice mixin class or something like that,\nat which point we can make only these classes have the keyword arguments in the\nfirst place. For the moment however this seems like a workable implementation - for all devices to have it, and to raise an error on the ones to which it does not apply.</p>\n<p>This feature is aimed at the creation of a 'device' for running scripts during transition to manual or transition to buffered, and typically one would want a script to run at the end of the shot after other devices have transitioned to manual. Being able to run some basic analysis in a synchronous way (i.e. not waiting for lyse, which might be busy) at the end of a shot, in order to influence the next shot (with the upcoming runmanager just-in-time compilation feature), is important for some feedback/feed-forward applications such as dynamic magnetic field cancellation. This is discussed in issue <a href=\"#!/labscript_suite/labscript/issues/18/execution-of-small-or-time-critical\" rel=\"nofollow\" title=\"Execution of small or time-critical analysis scripts as part of running shot\" class=\"ap-connect-link\">#18</a>.</p>\n<p>There are other reasons to specify transition orders too, such as debugging the effect of spurious pulses from PulseBlasters during transition_to_buffered.</p>", "type": "rendered"}, "title": {"raw": "start_order and stop_order", "markup": "markdown", "html": "<p>start_order and stop_order</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Re-do of pull request #12, which was backed out due to a bug.\r\n\r\nProvide start_order and stop_order for devices, to specify what order BLACS should transition them to buffered mode and manual mode respectively. Allows any integer, default is zero, max and min not specified. If specified on a device without a BLACS_connection attribute, a TypeError is raised during compilation. start_order and stop_order are saved as device_properties, and thus can vary from shot-to-shot without a connection table recompilation.\r\n\r\nAt a later date (labscript 3?), devices connected directly to BLACS will\r\nprobably be a subclass of a BLACSDevice mixin class or something like that,\r\nat which point we can make only these classes have the keyword arguments in the\r\nfirst place. For the moment however this seems like a workable implementation - for all devices to have it, and to raise an error on the ones to which it does not apply.\r\n\r\nThis feature is aimed at the creation of a 'device' for running scripts during transition to manual or transition to buffered, and typically one would want a script to run at the end of the shot after other devices have transitioned to manual. Being able to run some basic analysis in a synchronous way (i.e. not waiting for lyse, which might be busy) at the end of a shot, in order to influence the next shot (with the upcoming runmanager just-in-time compilation feature), is important for some feedback/feed-forward applications such as dynamic magnetic field cancellation. This is discussed in issue #18.\r\n\r\nThere are other reasons to specify transition orders too, such as debugging the effect of spurious pulses from PulseBlasters during transition_to_buffered.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/37/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:c504488c533e%0D4b83a4b8a6c2?from_pullrequest_id=37"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/37/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/37.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/37/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/37/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/37"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/37/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:c504488c533e%0D4b83a4b8a6c2?from_pullrequest_id=37"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/37/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/37/statuses_page=1.json"}}, "title": "start_order and stop_order", "close_source_branch": true, "reviewers": [{"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}], "id": 37, "destination": {"commit": {"hash": "4b83a4b8a6c2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/4b83a4b8a6c2.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/4b83a4b8a6c2"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2018-08-01T15:40:46.368463+00:00", "summary": {"raw": "Re-do of pull request #12, which was backed out due to a bug.\r\n\r\nProvide start_order and stop_order for devices, to specify what order BLACS should transition them to buffered mode and manual mode respectively. Allows any integer, default is zero, max and min not specified. If specified on a device without a BLACS_connection attribute, a TypeError is raised during compilation. start_order and stop_order are saved as device_properties, and thus can vary from shot-to-shot without a connection table recompilation.\r\n\r\nAt a later date (labscript 3?), devices connected directly to BLACS will\r\nprobably be a subclass of a BLACSDevice mixin class or something like that,\r\nat which point we can make only these classes have the keyword arguments in the\r\nfirst place. For the moment however this seems like a workable implementation - for all devices to have it, and to raise an error on the ones to which it does not apply.\r\n\r\nThis feature is aimed at the creation of a 'device' for running scripts during transition to manual or transition to buffered, and typically one would want a script to run at the end of the shot after other devices have transitioned to manual. Being able to run some basic analysis in a synchronous way (i.e. not waiting for lyse, which might be busy) at the end of a shot, in order to influence the next shot (with the upcoming runmanager just-in-time compilation feature), is important for some feedback/feed-forward applications such as dynamic magnetic field cancellation. This is discussed in issue #18.\r\n\r\nThere are other reasons to specify transition orders too, such as debugging the effect of spurious pulses from PulseBlasters during transition_to_buffered.", "markup": "markdown", "html": "<p>Re-do of <a href=\"#!/labscript_suite/labscript/pull-requests/12/provides-start_order-and-stop_order-as-per\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #12</a>, which was backed out due to a bug.</p>\n<p>Provide start_order and stop_order for devices, to specify what order BLACS should transition them to buffered mode and manual mode respectively. Allows any integer, default is zero, max and min not specified. If specified on a device without a BLACS_connection attribute, a TypeError is raised during compilation. start_order and stop_order are saved as device_properties, and thus can vary from shot-to-shot without a connection table recompilation.</p>\n<p>At a later date (labscript 3?), devices connected directly to BLACS will\nprobably be a subclass of a BLACSDevice mixin class or something like that,\nat which point we can make only these classes have the keyword arguments in the\nfirst place. For the moment however this seems like a workable implementation - for all devices to have it, and to raise an error on the ones to which it does not apply.</p>\n<p>This feature is aimed at the creation of a 'device' for running scripts during transition to manual or transition to buffered, and typically one would want a script to run at the end of the shot after other devices have transitioned to manual. Being able to run some basic analysis in a synchronous way (i.e. not waiting for lyse, which might be busy) at the end of a shot, in order to influence the next shot (with the upcoming runmanager just-in-time compilation feature), is important for some feedback/feed-forward applications such as dynamic magnetic field cancellation. This is discussed in issue <a href=\"#!/labscript_suite/labscript/issues/18/execution-of-small-or-time-critical\" rel=\"nofollow\" title=\"Execution of small or time-critical analysis scripts as part of running shot\" class=\"ap-connect-link\">#18</a>.</p>\n<p>There are other reasons to specify transition orders too, such as debugging the effect of spurious pulses from PulseBlasters during transition_to_buffered.</p>", "type": "rendered"}, "source": {"commit": {"hash": "d1577a35c6cb", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/d1577a35c6cb"}, "html": {"href": "#!/cbillington/labscript/commits/d1577a35c6cb"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "branch": {"name": "transition_order"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}}, {"role": "PARTICIPANT", "participated_on": "2018-08-14T19:23:41.314930+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}}], "reason": "", "updated_on": "2018-08-20T14:45:39.436281+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "c504488c533e", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/c504488c533e.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/c504488c533e"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}