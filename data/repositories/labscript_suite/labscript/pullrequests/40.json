{"rendered": {"description": {"raw": "Slightly modified semantics of set_passed_properties.\r\n\r\n* non-keyword arguments can now be saved as well as keyword arguments.\r\n* If an instance attribute exists with the same name as an argument after\r\n   `__init__` runs, its value will be saved instead.\r\n\r\nThe non-keyword arguments simply fixes a deficiency, presently, to get auto-saving of properties you have to pass in the properties as keyword arguments - if you pass them in as positional args, things break pretty confusingly. There is a workaround in the NI devices at the moment in which clock_terminal is saved as a property at the end of `generate_code` instead of using `set_passed_properties` to get around this.\r\n\r\nInstance attributes taking precedence over passed args allows you to be smarter with default arguments. For example it's bad form to have mutable default arguments, and so where one would be used, common idiom is to instead set the default argument to `None` and within the method do something like:\r\n```python\r\nself. foo = foo if foo is not None else {}\r\n```\r\nSimilarly in our NI_DAQmx classes, the default for `MAX_name`, if not specified, is to use the labscript device name. The logic for this is in `NIBoard.__init__`:\r\n```python\r\nself.MAX_name = name if MAX_name is None else MAX_name\r\n```\r\n Although BLACS_connection is used to talk to the device and so it doesn't matter, the value of `MAX_name` saved as a device_property, doesn't respect this processing that may have been done, and so might simply be wrong.", "markup": "markdown", "html": "<p>Slightly modified semantics of set_passed_properties.</p>\n<ul>\n<li>non-keyword arguments can now be saved as well as keyword arguments.</li>\n<li>If an instance attribute exists with the same name as an argument after\n   <code>__init__</code> runs, its value will be saved instead.</li>\n</ul>\n<p>The non-keyword arguments simply fixes a deficiency, presently, to get auto-saving of properties you have to pass in the properties as keyword arguments - if you pass them in as positional args, things break pretty confusingly. There is a workaround in the NI devices at the moment in which clock_terminal is saved as a property at the end of <code>generate_code</code> instead of using <code>set_passed_properties</code> to get around this.</p>\n<p>Instance attributes taking precedence over passed args allows you to be smarter with default arguments. For example it's bad form to have mutable default arguments, and so where one would be used, common idiom is to instead set the default argument to <code>None</code> and within the method do something like:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"bp\">self</span><span class=\"o\">.</span> <span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">foo</span> <span class=\"k\">if</span> <span class=\"n\">foo</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span> <span class=\"k\">else</span> <span class=\"p\">{}</span>\n</pre></div>\n\n\n<p>Similarly in our NI_DAQmx classes, the default for <code>MAX_name</code>, if not specified, is to use the labscript device name. The logic for this is in <code>NIBoard.__init__</code>:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">MAX_name</span> <span class=\"o\">=</span> <span class=\"n\">name</span> <span class=\"k\">if</span> <span class=\"n\">MAX_name</span> <span class=\"ow\">is</span> <span class=\"bp\">None</span> <span class=\"k\">else</span> <span class=\"n\">MAX_name</span>\n</pre></div>\n\n\n<p>Although BLACS_connection is used to talk to the device and so it doesn't matter, the value of <code>MAX_name</code> saved as a device_property, doesn't respect this processing that may have been done, and so might simply be wrong.</p>", "type": "rendered"}, "title": {"raw": "Changes to set_passed_properties", "markup": "markdown", "html": "<p>Changes to set_passed_properties</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Slightly modified semantics of set_passed_properties.\r\n\r\n* non-keyword arguments can now be saved as well as keyword arguments.\r\n* If an instance attribute exists with the same name as an argument after\r\n   `__init__` runs, its value will be saved instead.\r\n\r\nThe non-keyword arguments simply fixes a deficiency, presently, to get auto-saving of properties you have to pass in the properties as keyword arguments - if you pass them in as positional args, things break pretty confusingly. There is a workaround in the NI devices at the moment in which clock_terminal is saved as a property at the end of `generate_code` instead of using `set_passed_properties` to get around this.\r\n\r\nInstance attributes taking precedence over passed args allows you to be smarter with default arguments. For example it's bad form to have mutable default arguments, and so where one would be used, common idiom is to instead set the default argument to `None` and within the method do something like:\r\n```python\r\nself. foo = foo if foo is not None else {}\r\n```\r\nSimilarly in our NI_DAQmx classes, the default for `MAX_name`, if not specified, is to use the labscript device name. The logic for this is in `NIBoard.__init__`:\r\n```python\r\nself.MAX_name = name if MAX_name is None else MAX_name\r\n```\r\n Although BLACS_connection is used to talk to the device and so it doesn't matter, the value of `MAX_name` saved as a device_property, doesn't respect this processing that may have been done, and so might simply be wrong.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/40/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:567ec578e997%0D9180bd362618?from_pullrequest_id=40"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/40/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/40.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/40/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/40/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/40"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/40/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:567ec578e997%0D9180bd362618?from_pullrequest_id=40"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/40/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/40/statuses_page=1.json"}}, "title": "Changes to set_passed_properties", "close_source_branch": true, "reviewers": [{"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}], "id": 40, "destination": {"commit": {"hash": "9180bd362618", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/9180bd362618.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/9180bd362618"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2018-10-02T21:40:05.133739+00:00", "summary": {"raw": "Slightly modified semantics of set_passed_properties.\r\n\r\n* non-keyword arguments can now be saved as well as keyword arguments.\r\n* If an instance attribute exists with the same name as an argument after\r\n   `__init__` runs, its value will be saved instead.\r\n\r\nThe non-keyword arguments simply fixes a deficiency, presently, to get auto-saving of properties you have to pass in the properties as keyword arguments - if you pass them in as positional args, things break pretty confusingly. There is a workaround in the NI devices at the moment in which clock_terminal is saved as a property at the end of `generate_code` instead of using `set_passed_properties` to get around this.\r\n\r\nInstance attributes taking precedence over passed args allows you to be smarter with default arguments. For example it's bad form to have mutable default arguments, and so where one would be used, common idiom is to instead set the default argument to `None` and within the method do something like:\r\n```python\r\nself. foo = foo if foo is not None else {}\r\n```\r\nSimilarly in our NI_DAQmx classes, the default for `MAX_name`, if not specified, is to use the labscript device name. The logic for this is in `NIBoard.__init__`:\r\n```python\r\nself.MAX_name = name if MAX_name is None else MAX_name\r\n```\r\n Although BLACS_connection is used to talk to the device and so it doesn't matter, the value of `MAX_name` saved as a device_property, doesn't respect this processing that may have been done, and so might simply be wrong.", "markup": "markdown", "html": "<p>Slightly modified semantics of set_passed_properties.</p>\n<ul>\n<li>non-keyword arguments can now be saved as well as keyword arguments.</li>\n<li>If an instance attribute exists with the same name as an argument after\n   <code>__init__</code> runs, its value will be saved instead.</li>\n</ul>\n<p>The non-keyword arguments simply fixes a deficiency, presently, to get auto-saving of properties you have to pass in the properties as keyword arguments - if you pass them in as positional args, things break pretty confusingly. There is a workaround in the NI devices at the moment in which clock_terminal is saved as a property at the end of <code>generate_code</code> instead of using <code>set_passed_properties</code> to get around this.</p>\n<p>Instance attributes taking precedence over passed args allows you to be smarter with default arguments. For example it's bad form to have mutable default arguments, and so where one would be used, common idiom is to instead set the default argument to <code>None</code> and within the method do something like:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"bp\">self</span><span class=\"o\">.</span> <span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">foo</span> <span class=\"k\">if</span> <span class=\"n\">foo</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span> <span class=\"k\">else</span> <span class=\"p\">{}</span>\n</pre></div>\n\n\n<p>Similarly in our NI_DAQmx classes, the default for <code>MAX_name</code>, if not specified, is to use the labscript device name. The logic for this is in <code>NIBoard.__init__</code>:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">MAX_name</span> <span class=\"o\">=</span> <span class=\"n\">name</span> <span class=\"k\">if</span> <span class=\"n\">MAX_name</span> <span class=\"ow\">is</span> <span class=\"bp\">None</span> <span class=\"k\">else</span> <span class=\"n\">MAX_name</span>\n</pre></div>\n\n\n<p>Although BLACS_connection is used to talk to the device and so it doesn't matter, the value of <code>MAX_name</code> saved as a device_property, doesn't respect this processing that may have been done, and so might simply be wrong.</p>", "type": "rendered"}, "source": {"commit": {"hash": "a13f253e2182", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/a13f253e2182"}, "html": {"href": "#!/cbillington/labscript/commits/a13f253e2182"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "branch": {"name": "properties"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2018-10-22T17:51:01.904770+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"role": "PARTICIPANT", "participated_on": "2018-10-22T14:41:08.102777+00:00", "type": "participant", "approved": false, "user": {"display_name": "Lars Kohfahl", "uuid": "{14b59397-cbc0-4d8c-8a4a-fe99fb4d2d4a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B14b59397-cbc0-4d8c-8a4a-fe99fb4d2d4a%7D"}, "html": {"href": "https://bitbucket.org/%7B14b59397-cbc0-4d8c-8a4a-fe99fb4d2d4a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/630642264cd55e22515678a3a0489ac7d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLK-2.png"}}, "nickname": "lkohfahl", "type": "user", "account_id": "5aafc5d11396802a57aa7f3b"}}], "reason": "", "updated_on": "2018-10-22T17:51:08.614700+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "567ec578e997", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/567ec578e997.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/567ec578e997"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}