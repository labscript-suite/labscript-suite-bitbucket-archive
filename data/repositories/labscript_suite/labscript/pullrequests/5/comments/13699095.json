{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13699095.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13699095"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}}, "title": "Truncation decorator for ramp functions"}, "content": {"raw": "Yeah, it's a little hacky, but how else are we to do it? You'll get spurious warnings about timing collisions of the end of the would-be ramp, and an error if it is too close but not actually on top of an instruction (but if your code is linear in time you shouldn't have made future instructions yet, so that is even less likely). I was talking to Russ and he's probably going to include this caveat in the docstring as a warning.\n\nThe actual correct solution is to redesign labscript to have an `Instruction` class that is created and modified at will before the actual compilation does error checking all at once at the end (but being able to refer back to specific line numbers because they were all stored at creation time of the `Instruction` object). But that's for labscript 3.0, and in the meantime, unfortunately, hacking on instruction dictionaries is the normal way to do things. So I'm happy with it out of a pragmatic desire to not do the redesign right now :p", "markup": "markdown", "html": "<p>Yeah, it's a little hacky, but how else are we to do it? You'll get spurious warnings about timing collisions of the end of the would-be ramp, and an error if it is too close but not actually on top of an instruction (but if your code is linear in time you shouldn't have made future instructions yet, so that is even less likely). I was talking to Russ and he's probably going to include this caveat in the docstring as a warning.</p>\n<p>The actual correct solution is to redesign labscript to have an <code>Instruction</code> class that is created and modified at will before the actual compilation does error checking all at once at the end (but being able to refer back to specific line numbers because they were all stored at creation time of the <code>Instruction</code> object). But that's for labscript 3.0, and in the meantime, unfortunately, hacking on instruction dictionaries is the normal way to do things. So I'm happy with it out of a pragmatic desire to not do the redesign right now :p</p>", "type": "rendered"}, "created_on": "2016-01-21T04:26:08.975254+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2016-01-21T04:26:08.977115+00:00", "type": "pullrequest_comment", "id": 13699095}