{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13699461.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13699461"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}}, "title": "Truncation decorator for ramp functions"}, "content": {"raw": "Ok, I think that's a good point. Russ and I are now thinking of doing this in order to include the error checking:\n\n\n```\n#!python\n\nclass AnalogQuantity(Output):\n\n    ...\n\n    @staticmethod\n    def _check_truncation(truncation):\n        if not (0 <= truncation <= 1):\n            raise LabscriptError('Truncation argument must be between 0 and 1 (inclusive), but is %f.' % truncation)\n\n    ...\n\n    def sine_ramp(self, t, duration, initial, final, samplerate, units=None, truncation=1.):\n        self._check_truncation(truncation)\n        if truncation > 0:\n            self.add_instruction(t, {'function': functions.sine_ramp(duration, initial, final), 'description': 'sinusoidal ramp',\n                                 'initial time': t, 'end time': t + truncation*duration, 'clock rate': samplerate, 'units': units})\n        return truncation*duration\n\n\n```\n", "markup": "markdown", "html": "<p>Ok, I think that's a good point. Russ and I are now thinking of doing this in order to include the error checking:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">AnalogQuantity</span><span class=\"p\">(</span><span class=\"n\">Output</span><span class=\"p\">):</span>\n\n    <span class=\"o\">...</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_check_truncation</span><span class=\"p\">(</span><span class=\"n\">truncation</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"p\">(</span><span class=\"mi\">0</span> <span class=\"o\">&lt;=</span> <span class=\"n\">truncation</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">1</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"n\">LabscriptError</span><span class=\"p\">(</span><span class=\"s1\">&#39;Truncation argument must be between 0 and 1 (inclusive), but is </span><span class=\"si\">%f</span><span class=\"s1\">.&#39;</span> <span class=\"o\">%</span> <span class=\"n\">truncation</span><span class=\"p\">)</span>\n\n    <span class=\"o\">...</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">sine_ramp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"n\">initial</span><span class=\"p\">,</span> <span class=\"n\">final</span><span class=\"p\">,</span> <span class=\"n\">samplerate</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">truncation</span><span class=\"o\">=</span><span class=\"mf\">1.</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_check_truncation</span><span class=\"p\">(</span><span class=\"n\">truncation</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">truncation</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_instruction</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;function&#39;</span><span class=\"p\">:</span> <span class=\"n\">functions</span><span class=\"o\">.</span><span class=\"n\">sine_ramp</span><span class=\"p\">(</span><span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"n\">initial</span><span class=\"p\">,</span> <span class=\"n\">final</span><span class=\"p\">),</span> <span class=\"s1\">&#39;description&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;sinusoidal ramp&#39;</span><span class=\"p\">,</span>\n                                 <span class=\"s1\">&#39;initial time&#39;</span><span class=\"p\">:</span> <span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"s1\">&#39;end time&#39;</span><span class=\"p\">:</span> <span class=\"n\">t</span> <span class=\"o\">+</span> <span class=\"n\">truncation</span><span class=\"o\">*</span><span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"s1\">&#39;clock rate&#39;</span><span class=\"p\">:</span> <span class=\"n\">samplerate</span><span class=\"p\">,</span> <span class=\"s1\">&#39;units&#39;</span><span class=\"p\">:</span> <span class=\"n\">units</span><span class=\"p\">})</span>\n        <span class=\"k\">return</span> <span class=\"n\">truncation</span><span class=\"o\">*</span><span class=\"n\">duration</span>\n</pre></div>", "type": "rendered"}, "created_on": "2016-01-21T04:53:49.926946+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2016-01-21T04:53:49.937906+00:00", "type": "pullrequest_comment", "id": 13699461}