{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13695046.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13695046"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}}, "title": "Truncation decorator for ramp functions"}, "content": {"raw": "An alternative implementation (suggested many moons ago by @cbillington) that avoids the above problem, is to modify relevant ramp functions of `AnalogQuantity`, having them take an optional `truncation` parameter, and modify the returned `duration` and `end_time` of the instruction passed to `add_instruction`. For example, `AnalogQuantity.sine_ramp` would go from\n```\n#!python\ndef sine_ramp(self, t, duration, initial, final, samplerate, units=None):\n    self.add_instruction(t, {'function': functions.sine_ramp(duration, initial, final), 'description': 'sinusoidal ramp',\n                             'initial time': t, 'end time': t + duration, 'clock rate': samplerate, 'units': units})\n    return duration\n```\n... to...\n```\n#!python\ndef sine_ramp(self, t, duration, initial, final, samplerate, units=None, truncation=1.):\n    self.add_instruction(t, {'function': functions.sine_ramp(duration, initial, final), 'description': 'sinusoidal ramp',\n                             'initial time': t, 'end time': t + truncation*duration, 'clock rate': samplerate, 'units': units})\n    return truncation*duration\n```\nThis does not include error checking such as the value constraint on `truncation`.", "markup": "markdown", "html": "<p>An alternative implementation (suggested many moons ago by @cbillington) that avoids the above problem, is to modify relevant ramp functions of <code>AnalogQuantity</code>, having them take an optional <code>truncation</code> parameter, and modify the returned <code>duration</code> and <code>end_time</code> of the instruction passed to <code>add_instruction</code>. For example, <code>AnalogQuantity.sine_ramp</code> would go from</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">sine_ramp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"n\">initial</span><span class=\"p\">,</span> <span class=\"n\">final</span><span class=\"p\">,</span> <span class=\"n\">samplerate</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_instruction</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;function&#39;</span><span class=\"p\">:</span> <span class=\"n\">functions</span><span class=\"o\">.</span><span class=\"n\">sine_ramp</span><span class=\"p\">(</span><span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"n\">initial</span><span class=\"p\">,</span> <span class=\"n\">final</span><span class=\"p\">),</span> <span class=\"s1\">&#39;description&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;sinusoidal ramp&#39;</span><span class=\"p\">,</span>\n                             <span class=\"s1\">&#39;initial time&#39;</span><span class=\"p\">:</span> <span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"s1\">&#39;end time&#39;</span><span class=\"p\">:</span> <span class=\"n\">t</span> <span class=\"o\">+</span> <span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"s1\">&#39;clock rate&#39;</span><span class=\"p\">:</span> <span class=\"n\">samplerate</span><span class=\"p\">,</span> <span class=\"s1\">&#39;units&#39;</span><span class=\"p\">:</span> <span class=\"n\">units</span><span class=\"p\">})</span>\n    <span class=\"k\">return</span> <span class=\"n\">duration</span>\n</pre></div>\n\n\n<p>... to...</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">sine_ramp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"n\">initial</span><span class=\"p\">,</span> <span class=\"n\">final</span><span class=\"p\">,</span> <span class=\"n\">samplerate</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">truncation</span><span class=\"o\">=</span><span class=\"mf\">1.</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_instruction</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;function&#39;</span><span class=\"p\">:</span> <span class=\"n\">functions</span><span class=\"o\">.</span><span class=\"n\">sine_ramp</span><span class=\"p\">(</span><span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"n\">initial</span><span class=\"p\">,</span> <span class=\"n\">final</span><span class=\"p\">),</span> <span class=\"s1\">&#39;description&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;sinusoidal ramp&#39;</span><span class=\"p\">,</span>\n                             <span class=\"s1\">&#39;initial time&#39;</span><span class=\"p\">:</span> <span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"s1\">&#39;end time&#39;</span><span class=\"p\">:</span> <span class=\"n\">t</span> <span class=\"o\">+</span> <span class=\"n\">truncation</span><span class=\"o\">*</span><span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"s1\">&#39;clock rate&#39;</span><span class=\"p\">:</span> <span class=\"n\">samplerate</span><span class=\"p\">,</span> <span class=\"s1\">&#39;units&#39;</span><span class=\"p\">:</span> <span class=\"n\">units</span><span class=\"p\">})</span>\n    <span class=\"k\">return</span> <span class=\"n\">truncation</span><span class=\"o\">*</span><span class=\"n\">duration</span>\n</pre></div>\n\n\n<p>This does not include error checking such as the value constraint on <code>truncation</code>.</p>", "type": "rendered"}, "created_on": "2016-01-21T00:14:45.336628+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": "2016-01-21T00:14:45.343223+00:00", "type": "pullrequest_comment", "id": 13695046}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13696640.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13696640"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}}, "title": "Truncation decorator for ramp functions"}, "content": {"raw": "This is a really clean way of doing it!\n\nIs truncation as a fraction of the total duration in practice more useful to specify than a duration (non-fractional) to truncate to? I suppose you can easily divide by your duration if you want to specify an non-fractional truncation, but I was just wondering.", "markup": "markdown", "html": "<p>This is a really clean way of doing it!</p>\n<p>Is truncation as a fraction of the total duration in practice more useful to specify than a duration (non-fractional) to truncate to? I suppose you can easily divide by your duration if you want to specify an non-fractional truncation, but I was just wondering.</p>", "type": "rendered"}, "created_on": "2016-01-21T01:33:15.589091+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2016-01-21T01:33:15.590965+00:00", "type": "pullrequest_comment", "id": 13696640}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13696855.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13696855"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}}, "title": "Truncation decorator for ramp functions"}, "content": {"raw": "The place the decorator itself is defined is a little odd though, it looks like an instance method, but if you call it on an instance then 'self' will be passed in instead of a ramp func. To make it clear what it's for and how it's supposed to be called, it should be made a static method:\n\n```\n#!python\n    @staticmethod\n    def truncate(ramp_func):\n        \"\"\"Decorator to add to a ramp function the ability to truncate it to a\n        given fractional proportion of its duration using a keyword argument\n        \"truncation\" (1.0 by default - no truncation).\"\"\"\n```\nThis way `AnalogQuantity` is just a namespace for holding the function, and if called on an instance, the instance won't be passed in as an argument. Other classes can use it (as `AnalogQuantity.truncate`) without regard for whether they are a subclass. In fact I would suggest referring to it in full as `@AnalogQuantity.truncate` even within `AnalogQuantity` itself, just to make clear that it is a generically usable decorator that is not necessarily limited to use within `AnalogQuantity`.\n\nAlso a docstring!", "markup": "markdown", "html": "<p>The place the decorator itself is defined is a little odd though, it looks like an instance method, but if you call it on an instance then 'self' will be passed in instead of a ramp func. To make it clear what it's for and how it's supposed to be called, it should be made a static method:</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">truncate</span><span class=\"p\">(</span><span class=\"n\">ramp_func</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Decorator to add to a ramp function the ability to truncate it to a</span>\n<span class=\"sd\">        given fractional proportion of its duration using a keyword argument</span>\n<span class=\"sd\">        &quot;truncation&quot; (1.0 by default - no truncation).&quot;&quot;&quot;</span>\n</pre></div>\n\n\n<p>This way <code>AnalogQuantity</code> is just a namespace for holding the function, and if called on an instance, the instance won't be passed in as an argument. Other classes can use it (as <code>AnalogQuantity.truncate</code>) without regard for whether they are a subclass. In fact I would suggest referring to it in full as <code>@AnalogQuantity.truncate</code> even within <code>AnalogQuantity</code> itself, just to make clear that it is a generically usable decorator that is not necessarily limited to use within <code>AnalogQuantity</code>.</p>\n<p>Also a docstring!</p>", "type": "rendered"}, "created_on": "2016-01-21T01:48:43.627191+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2016-01-21T01:54:10.232928+00:00", "type": "pullrequest_comment", "id": 13696855}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13698750.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13698750"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}}, "title": "Truncation decorator for ramp functions"}, "content": {"raw": "Ah, so, staticmethods can't be called from within the class definition, and classes cant refer to themselves from within class definitions. What a shame. Both of my suggestions won't work. Annoying, but whatever.", "markup": "markdown", "html": "<p>Ah, so, staticmethods can't be called from within the class definition, and classes cant refer to themselves from within class definitions. What a shame. Both of my suggestions won't work. Annoying, but whatever.</p>", "type": "rendered"}, "created_on": "2016-01-21T04:00:43.155878+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2016-01-21T04:00:43.158561+00:00", "type": "pullrequest_comment", "id": 13698750}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13698841.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13698841"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}}, "title": "Truncation decorator for ramp functions"}, "content": {"raw": "I can't say I'm a big fan of the incorrect error checking with the decorator approach, and the fact that we're manually adjusting `self.instructions` and `self.ramp_limits`. This means we have to keep the decorator up to date if we modify the internals of `Output`. Modifying the duration before adding the instruction would be more maintainable in the long run.", "markup": "markdown", "html": "<p>I can't say I'm a big fan of the incorrect error checking with the decorator approach, and the fact that we're manually adjusting <code>self.instructions</code> and <code>self.ramp_limits</code>. This means we have to keep the decorator up to date if we modify the internals of <code>Output</code>. Modifying the duration before adding the instruction would be more maintainable in the long run.</p>", "type": "rendered"}, "created_on": "2016-01-21T04:07:12.883357+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2016-01-21T04:07:12.889210+00:00", "type": "pullrequest_comment", "id": 13698841}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13699095.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13699095"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}}, "title": "Truncation decorator for ramp functions"}, "content": {"raw": "Yeah, it's a little hacky, but how else are we to do it? You'll get spurious warnings about timing collisions of the end of the would-be ramp, and an error if it is too close but not actually on top of an instruction (but if your code is linear in time you shouldn't have made future instructions yet, so that is even less likely). I was talking to Russ and he's probably going to include this caveat in the docstring as a warning.\n\nThe actual correct solution is to redesign labscript to have an `Instruction` class that is created and modified at will before the actual compilation does error checking all at once at the end (but being able to refer back to specific line numbers because they were all stored at creation time of the `Instruction` object). But that's for labscript 3.0, and in the meantime, unfortunately, hacking on instruction dictionaries is the normal way to do things. So I'm happy with it out of a pragmatic desire to not do the redesign right now :p", "markup": "markdown", "html": "<p>Yeah, it's a little hacky, but how else are we to do it? You'll get spurious warnings about timing collisions of the end of the would-be ramp, and an error if it is too close but not actually on top of an instruction (but if your code is linear in time you shouldn't have made future instructions yet, so that is even less likely). I was talking to Russ and he's probably going to include this caveat in the docstring as a warning.</p>\n<p>The actual correct solution is to redesign labscript to have an <code>Instruction</code> class that is created and modified at will before the actual compilation does error checking all at once at the end (but being able to refer back to specific line numbers because they were all stored at creation time of the <code>Instruction</code> object). But that's for labscript 3.0, and in the meantime, unfortunately, hacking on instruction dictionaries is the normal way to do things. So I'm happy with it out of a pragmatic desire to not do the redesign right now :p</p>", "type": "rendered"}, "created_on": "2016-01-21T04:26:08.975254+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2016-01-21T04:26:08.977115+00:00", "type": "pullrequest_comment", "id": 13699095}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13699218.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13699218"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}}, "title": "Truncation decorator for ramp functions"}, "content": {"raw": "Well the other solution is to add code to each method as per the first comment (with an appropriate `if truncation > 1 or truncation < 0: raise RuntimeError()` statement added if you want) which matches what we've done for the `exp_ramp` methods. I know it requires changing every method, but what is the down side?", "markup": "markdown", "html": "<p>Well the other solution is to add code to each method as per the first comment (with an appropriate <code>if truncation &gt; 1 or truncation &lt; 0: raise RuntimeError()</code> statement added if you want) which matches what we've done for the <code>exp_ramp</code> methods. I know it requires changing every method, but what is the down side?</p>", "type": "rendered"}, "created_on": "2016-01-21T04:36:07.584643+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2016-01-21T04:36:07.586855+00:00", "type": "pullrequest_comment", "id": 13699218}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13699461.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13699461"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}}, "title": "Truncation decorator for ramp functions"}, "content": {"raw": "Ok, I think that's a good point. Russ and I are now thinking of doing this in order to include the error checking:\n\n\n```\n#!python\n\nclass AnalogQuantity(Output):\n\n    ...\n\n    @staticmethod\n    def _check_truncation(truncation):\n        if not (0 <= truncation <= 1):\n            raise LabscriptError('Truncation argument must be between 0 and 1 (inclusive), but is %f.' % truncation)\n\n    ...\n\n    def sine_ramp(self, t, duration, initial, final, samplerate, units=None, truncation=1.):\n        self._check_truncation(truncation)\n        if truncation > 0:\n            self.add_instruction(t, {'function': functions.sine_ramp(duration, initial, final), 'description': 'sinusoidal ramp',\n                                 'initial time': t, 'end time': t + truncation*duration, 'clock rate': samplerate, 'units': units})\n        return truncation*duration\n\n\n```\n", "markup": "markdown", "html": "<p>Ok, I think that's a good point. Russ and I are now thinking of doing this in order to include the error checking:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">AnalogQuantity</span><span class=\"p\">(</span><span class=\"n\">Output</span><span class=\"p\">):</span>\n\n    <span class=\"o\">...</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_check_truncation</span><span class=\"p\">(</span><span class=\"n\">truncation</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"p\">(</span><span class=\"mi\">0</span> <span class=\"o\">&lt;=</span> <span class=\"n\">truncation</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">1</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"n\">LabscriptError</span><span class=\"p\">(</span><span class=\"s1\">&#39;Truncation argument must be between 0 and 1 (inclusive), but is </span><span class=\"si\">%f</span><span class=\"s1\">.&#39;</span> <span class=\"o\">%</span> <span class=\"n\">truncation</span><span class=\"p\">)</span>\n\n    <span class=\"o\">...</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">sine_ramp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"n\">initial</span><span class=\"p\">,</span> <span class=\"n\">final</span><span class=\"p\">,</span> <span class=\"n\">samplerate</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">truncation</span><span class=\"o\">=</span><span class=\"mf\">1.</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_check_truncation</span><span class=\"p\">(</span><span class=\"n\">truncation</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">truncation</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_instruction</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;function&#39;</span><span class=\"p\">:</span> <span class=\"n\">functions</span><span class=\"o\">.</span><span class=\"n\">sine_ramp</span><span class=\"p\">(</span><span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"n\">initial</span><span class=\"p\">,</span> <span class=\"n\">final</span><span class=\"p\">),</span> <span class=\"s1\">&#39;description&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;sinusoidal ramp&#39;</span><span class=\"p\">,</span>\n                                 <span class=\"s1\">&#39;initial time&#39;</span><span class=\"p\">:</span> <span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"s1\">&#39;end time&#39;</span><span class=\"p\">:</span> <span class=\"n\">t</span> <span class=\"o\">+</span> <span class=\"n\">truncation</span><span class=\"o\">*</span><span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"s1\">&#39;clock rate&#39;</span><span class=\"p\">:</span> <span class=\"n\">samplerate</span><span class=\"p\">,</span> <span class=\"s1\">&#39;units&#39;</span><span class=\"p\">:</span> <span class=\"n\">units</span><span class=\"p\">})</span>\n        <span class=\"k\">return</span> <span class=\"n\">truncation</span><span class=\"o\">*</span><span class=\"n\">duration</span>\n</pre></div>", "type": "rendered"}, "created_on": "2016-01-21T04:53:49.926946+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2016-01-21T04:53:49.937906+00:00", "type": "pullrequest_comment", "id": 13699461}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13699544.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13699544"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}}, "title": "Truncation decorator for ramp functions"}, "content": {"raw": "That approach seems good to me. We could also add that check to just before [this](#!/monashspinor/labscript/src/ea38bf9a6d83993965972e801decd5901980afdc/labscript.py?fileviewer=file-view-default#labscript.py-1299) and [this](#!/monashspinor/labscript/src/ea38bf9a6d83993965972e801decd5901980afdc/labscript.py?fileviewer=file-view-default#labscript.py-1281) line.", "markup": "markdown", "html": "<p>That approach seems good to me. We could also add that check to just before <a data-is-external-link=\"true\" href=\"#!/monashspinor/labscript/src/ea38bf9a6d83993965972e801decd5901980afdc/labscript.py?fileviewer=file-view-default#labscript.py-1299\" rel=\"nofollow\">this</a> and <a data-is-external-link=\"true\" href=\"#!/monashspinor/labscript/src/ea38bf9a6d83993965972e801decd5901980afdc/labscript.py?fileviewer=file-view-default#labscript.py-1281\" rel=\"nofollow\">this</a> line.</p>", "type": "rendered"}, "created_on": "2016-01-21T05:00:16.416657+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2016-01-21T05:00:16.419554+00:00", "type": "pullrequest_comment", "id": 13699544}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13741444.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13741444"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}}, "title": "Truncation decorator for ramp functions"}, "content": {"raw": "I don't think the modifications to `exp_ramp` and `exp_ramp_t` are correct in the latest change.\n\nThe truncation type determines whether it is a direct truncation of the duration or a truncation to a final output value (at least that was my understanding). The `_check_truncation()` method should only be run on direct truncations of the duration, as the value of `truncation` for a truncation of a ramp to a specific output value is not necessarily going to fall within the range `0 <= truncation <= 1`. That was why I suggested adding the `_check_truncation()` function before specific lines (which apply only to the cases of a direct truncation of the duration)", "markup": "markdown", "html": "<p>I don't think the modifications to <code>exp_ramp</code> and <code>exp_ramp_t</code> are correct in the latest change.</p>\n<p>The truncation type determines whether it is a direct truncation of the duration or a truncation to a final output value (at least that was my understanding). The <code>_check_truncation()</code> method should only be run on direct truncations of the duration, as the value of <code>truncation</code> for a truncation of a ramp to a specific output value is not necessarily going to fall within the range <code>0 &lt;= truncation &lt;= 1</code>. That was why I suggested adding the <code>_check_truncation()</code> function before specific lines (which apply only to the cases of a direct truncation of the duration)</p>", "type": "rendered"}, "created_on": "2016-01-22T00:49:59.619006+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2016-01-22T00:49:59.624308+00:00", "type": "pullrequest_comment", "id": 13741444}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13743092.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13743092"}}, "parent": {"id": 13741444, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13741444.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13741444"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}}, "title": "Truncation decorator for ramp functions"}, "content": {"raw": "Absolutely, Phil! I knew that with `truncation_type=linear`, the `truncation` parameter of the `exp_ramp` and `exp_ramp_t` functions corresponded to the *value* to stop the ramp at, rather than a fraction of the range to stop at. There is still a value check that can be done, to see if `truncation` lies between the `initial` and `final` value of the ramp. If it doesn't, a potentially obscure error will be thrown when each of these functions attempts to compute/use the truncated ramp duration, as `trunc_duration` will be a complex number. I've modified `_check_truncation` to include optional bounds, and used this accordingly based on the `truncation_type` of these ramp functions.\n\nThe different meaning of `truncation` based on the `truncation_type` also affects the conditionals used to inform whether or not a truncated duration should be computed, or a ramp instruction issued at all. I've fixed this as well.", "markup": "markdown", "html": "<p>Absolutely, Phil! I knew that with <code>truncation_type=linear</code>, the <code>truncation</code> parameter of the <code>exp_ramp</code> and <code>exp_ramp_t</code> functions corresponded to the <em>value</em> to stop the ramp at, rather than a fraction of the range to stop at. There is still a value check that can be done, to see if <code>truncation</code> lies between the <code>initial</code> and <code>final</code> value of the ramp. If it doesn't, a potentially obscure error will be thrown when each of these functions attempts to compute/use the truncated ramp duration, as <code>trunc_duration</code> will be a complex number. I've modified <code>_check_truncation</code> to include optional bounds, and used this accordingly based on the <code>truncation_type</code> of these ramp functions.</p>\n<p>The different meaning of <code>truncation</code> based on the <code>truncation_type</code> also affects the conditionals used to inform whether or not a truncated duration should be computed, or a ramp instruction issued at all. I've fixed this as well.</p>", "type": "rendered"}, "created_on": "2016-01-22T02:44:20.062621+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": "2016-01-22T02:44:20.064821+00:00", "type": "pullrequest_comment", "id": 13743092}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13743587.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13743587"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}}, "title": "Truncation decorator for ramp functions"}, "content": {"raw": "One final bug:\n\nOn line 1312 of the new labscript.py there is a reference to `trunc` which should be changed to `truncation`\n\nThe final line of this code snippet:\n```\n#!python\n\nif truncation_type == 'linear':\n    self._check_truncation(truncation, min(initial, final), max(initial, final))\n    trunc_duration = time_constant * \\\n        log((initial-zero)/(trunc-zero))\n```\n\nshould be\n\n```\n#!python\n\nif truncation_type == 'linear':\n    self._check_truncation(truncation, min(initial, final), max(initial, final))\n    trunc_duration = time_constant * \\\n        log((initial-zero)/(truncation-zero))\n```", "markup": "markdown", "html": "<p>One final bug:</p>\n<p>On line 1312 of the new labscript.py there is a reference to <code>trunc</code> which should be changed to <code>truncation</code></p>\n<p>The final line of this code snippet:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">if</span> <span class=\"n\">truncation_type</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;linear&#39;</span><span class=\"p\">:</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_check_truncation</span><span class=\"p\">(</span><span class=\"n\">truncation</span><span class=\"p\">,</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">initial</span><span class=\"p\">,</span> <span class=\"n\">final</span><span class=\"p\">),</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">initial</span><span class=\"p\">,</span> <span class=\"n\">final</span><span class=\"p\">))</span>\n    <span class=\"n\">trunc_duration</span> <span class=\"o\">=</span> <span class=\"n\">time_constant</span> <span class=\"o\">*</span> \\\n        <span class=\"n\">log</span><span class=\"p\">((</span><span class=\"n\">initial</span><span class=\"o\">-</span><span class=\"n\">zero</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"p\">(</span><span class=\"n\">trunc</span><span class=\"o\">-</span><span class=\"n\">zero</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>should be</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">if</span> <span class=\"n\">truncation_type</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;linear&#39;</span><span class=\"p\">:</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_check_truncation</span><span class=\"p\">(</span><span class=\"n\">truncation</span><span class=\"p\">,</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">initial</span><span class=\"p\">,</span> <span class=\"n\">final</span><span class=\"p\">),</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">initial</span><span class=\"p\">,</span> <span class=\"n\">final</span><span class=\"p\">))</span>\n    <span class=\"n\">trunc_duration</span> <span class=\"o\">=</span> <span class=\"n\">time_constant</span> <span class=\"o\">*</span> \\\n        <span class=\"n\">log</span><span class=\"p\">((</span><span class=\"n\">initial</span><span class=\"o\">-</span><span class=\"n\">zero</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"p\">(</span><span class=\"n\">truncation</span><span class=\"o\">-</span><span class=\"n\">zero</span><span class=\"p\">))</span>\n</pre></div>", "type": "rendered"}, "created_on": "2016-01-22T03:26:39.911719+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2016-01-22T03:26:39.913859+00:00", "type": "pullrequest_comment", "id": 13743587}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13744726.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13744726"}}, "parent": {"id": 13743587, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13743587.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13743587"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}}, "title": "Truncation decorator for ramp functions"}, "content": {"raw": "Thanks, Phil. I've made this change in 1d4118b. If you'd pulled from the [monashspinor/labscript](#!/monashspinor/labscript) fork, made this change, and pushed to [labscript_suite](#!/labscript_suite/labscript), this would've merged the pull request (in case you didn't know).", "markup": "markdown", "html": "<p>Thanks, Phil. I've made this change in <a href=\"#!/labscript_suite/labscript/commits/1d4118b\" rel=\"nofollow\" class=\"ap-connect-link\">1d4118b</a>. If you'd pulled from the <a data-is-external-link=\"true\" href=\"#!/monashspinor/labscript\" rel=\"nofollow\">monashspinor/labscript</a> fork, made this change, and pushed to <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript\" rel=\"nofollow\">labscript_suite</a>, this would've merged the pull request (in case you didn't know).</p>", "type": "rendered"}, "created_on": "2016-01-22T04:55:47.722260+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": "2016-01-22T04:55:47.724522+00:00", "type": "pullrequest_comment", "id": 13744726}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13780660.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13780660"}}, "parent": {"id": 13743587, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13743587.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13743587"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}}, "title": "Truncation decorator for ramp functions"}, "content": {"raw": "Hi Phil,\n\nThanks for your diligent appraisal of this pull request. Is there anything\nelse you wanted to do before merging it?\n\nCheers,\nRuss", "markup": "markdown", "html": "<p>Hi Phil,</p>\n<p>Thanks for your diligent appraisal of this pull request. Is there anything\nelse you wanted to do before merging it?</p>\n<p>Cheers,\nRuss</p>", "type": "rendered"}, "created_on": "2016-01-23T00:50:10.276145+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": "2016-01-23T00:50:10.322929+00:00", "type": "pullrequest_comment", "id": 13780660}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13785029.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13785029"}}, "parent": {"id": 13780660, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13780660.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13780660"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}}, "title": "Truncation decorator for ramp functions"}, "content": {"raw": "Hi Russ, \n\nIt looks good now! I'll merge", "markup": "markdown", "html": "<p>Hi Russ, </p>\n<p>It looks good now! I'll merge</p>", "type": "rendered"}, "created_on": "2016-01-24T00:51:00.804047+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2016-01-24T00:51:00.806551+00:00", "type": "pullrequest_comment", "id": 13785029}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13785032.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13785032"}}, "parent": {"id": 13780660, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13780660.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13780660"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}}, "title": "Truncation decorator for ramp functions"}, "content": {"raw": "Actually I won't do the merge just yet. It looks like you did the development in a branch. Do you want me to close your branch when I do the merge or would you like it left open (it is an option when merging...it seems odd I have control over whether your branch is closed!)?", "markup": "markdown", "html": "<p>Actually I won't do the merge just yet. It looks like you did the development in a branch. Do you want me to close your branch when I do the merge or would you like it left open (it is an option when merging...it seems odd I have control over whether your branch is closed!)?</p>", "type": "rendered"}, "created_on": "2016-01-24T00:53:46.328463+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2016-01-24T00:53:46.333466+00:00", "type": "pullrequest_comment", "id": 13785032}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13788835.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13788835"}}, "parent": {"id": 13785032, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13785032.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13785032"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}}, "title": "Truncation decorator for ramp functions"}, "content": {"raw": "Please go ahead and close the branch.\n\nAfter you've merged this pull request, please tag [labscript_suite/labscript](#!/labscript_suite/labscript) with 2.2.0. I pre-emptively did this in the [monashspinor/labscript](#!/monashspinor/labscript) fork, which I'll fix when I sync the monashspinor fork with the labscript_suite fork.", "markup": "markdown", "html": "<p>Please go ahead and close the branch.</p>\n<p>After you've merged this pull request, please tag <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript\" rel=\"nofollow\">labscript_suite/labscript</a> with 2.2.0. I pre-emptively did this in the <a data-is-external-link=\"true\" href=\"#!/monashspinor/labscript\" rel=\"nofollow\">monashspinor/labscript</a> fork, which I'll fix when I sync the monashspinor fork with the labscript_suite fork.</p>", "type": "rendered"}, "created_on": "2016-01-24T22:18:23.941781+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": "2016-01-24T22:21:48.511263+00:00", "type": "pullrequest_comment", "id": 13788835}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13788928.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13788928"}}, "parent": {"id": 13788835, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments/13788835.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5/_/diff#comment-13788835"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}}, "title": "Truncation decorator for ramp functions"}, "content": {"raw": "Done! (Although I don't think it actually closed the branch either in the main repo or the spinorlab repo...not sure it really matters though - we can always close it ourselves later if we care)!", "markup": "markdown", "html": "<p>Done! (Although I don't think it actually closed the branch either in the main repo or the spinorlab repo...not sure it really matters though - we can always close it ourselves later if we care)!</p>", "type": "rendered"}, "created_on": "2016-01-24T22:32:06.294216+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2016-01-24T22:32:06.297302+00:00", "type": "pullrequest_comment", "id": 13788928}], "page": 1, "size": 18}