{"pagelen": 50, "size": 51, "values": [{"description": "", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/1/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:dc96cc273b3f%0Df49f73ee29fb?from_pullrequest_id=1"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/1/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/1.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/1/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/1/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/1"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/1/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:dc96cc273b3f%0Df49f73ee29fb?from_pullrequest_id=1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/1/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/1/statuses_page=1.json"}}, "title": "remove duplicate line", "close_source_branch": false, "type": "pullrequest", "id": 1, "destination": {"commit": {"hash": "f49f73ee29fb", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/f49f73ee29fb.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/f49f73ee29fb"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "gated-clocks"}}, "created_on": "2014-07-02T10:33:51.935774+00:00", "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "source": {"commit": {"hash": "8d41f95db565", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mearnshaw/labscript/commit/8d41f95db565"}, "html": {"href": "#!/mearnshaw/labscript/commits/8d41f95db565"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mearnshaw/labscript"}, "html": {"href": "#!/mearnshaw/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{afb47966-1312-4d7f-9910-6833f9a5718d}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "mearnshaw/labscript", "uuid": "{afb47966-1312-4d7f-9910-6833f9a5718d}"}, "branch": {"name": "gated-clocks"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2014-07-02T11:17:17.613524+00:00", "author": {"display_name": "Matt Earnshaw", "uuid": "{17c89cfb-6d26-4163-b407-ca2461f38dc5}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17c89cfb-6d26-4163-b407-ca2461f38dc5%7D"}, "html": {"href": "https://bitbucket.org/%7B17c89cfb-6d26-4163-b407-ca2461f38dc5%7D/"}, "avatar": {"href": "https://bitbucket.org/account/mearnshaw/avatar/"}}, "nickname": "mearnshaw", "type": "user", "account_id": null}, "merge_commit": {"hash": "dc96cc273b3f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/dc96cc273b3f.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/dc96cc273b3f"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "just double check this is the intended logic?\r\nin any case, limits should be self.limits", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/2/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:000000000000%0Ddc96cc273b3f?from_pullrequest_id=2"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/2/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/2.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/2/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/2/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/2"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/2/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:000000000000%0Ddc96cc273b3f?from_pullrequest_id=2"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/2/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/2/statuses_page=1.json"}}, "title": "fix limit checking", "close_source_branch": false, "type": "pullrequest", "id": 2, "destination": {"commit": {"hash": "dc96cc273b3f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/dc96cc273b3f.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/dc96cc273b3f"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "gated-clocks"}}, "created_on": "2014-07-08T16:07:57.131784+00:00", "summary": {"raw": "just double check this is the intended logic?\r\nin any case, limits should be self.limits", "markup": "markdown", "html": "<p>just double check this is the intended logic?\nin any case, limits should be self.limits</p>", "type": "rendered"}, "source": {"commit": {"hash": "7569f6e30b86", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mearnshaw/labscript/commit/7569f6e30b86"}, "html": {"href": "#!/mearnshaw/labscript/commits/7569f6e30b86"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mearnshaw/labscript"}, "html": {"href": "#!/mearnshaw/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{afb47966-1312-4d7f-9910-6833f9a5718d}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "mearnshaw/labscript", "uuid": "{afb47966-1312-4d7f-9910-6833f9a5718d}"}, "branch": {"name": "gated-clocks"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2014-07-10T01:29:17.798162+00:00", "author": {"display_name": "Matt Earnshaw", "uuid": "{17c89cfb-6d26-4163-b407-ca2461f38dc5}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17c89cfb-6d26-4163-b407-ca2461f38dc5%7D"}, "html": {"href": "https://bitbucket.org/%7B17c89cfb-6d26-4163-b407-ca2461f38dc5%7D/"}, "avatar": {"href": "https://bitbucket.org/account/mearnshaw/avatar/"}}, "nickname": "mearnshaw", "type": "user", "account_id": null}, "merge_commit": null, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "fixes #1", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/3/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:000000000000%0Df482ebda1492?from_pullrequest_id=3"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/3/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/3.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/3/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/3/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/3"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/3/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:000000000000%0Df482ebda1492?from_pullrequest_id=3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/3/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/3/statuses_page=1.json"}}, "title": "Fixed a bug where the stop time was not updated to reflect the initial trigger time.", "close_source_branch": false, "type": "pullrequest", "id": 3, "destination": {"commit": {"hash": "f482ebda1492", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/f482ebda1492.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/f482ebda1492"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2015-05-25T07:08:15.052789+00:00", "summary": {"raw": "fixes #1", "markup": "markdown", "html": "<p>fixes <a href=\"#!/labscript_suite/labscript/issues/1/devicestop_time-does-not-take-into-account\" rel=\"nofollow\" title=\"Device.stop_time does not take into account initial_trigger_time\" class=\"ap-connect-link\"><s>#1</s></a></p>", "type": "rendered"}, "source": {"commit": {"hash": "3735fcca8ce8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/labscript/commit/3735fcca8ce8"}, "html": {"href": "#!/pstarkey/labscript/commits/3735fcca8ce8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/labscript"}, "html": {"href": "#!/pstarkey/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e07b8a11-58d9-46da-8368-724e708c5ac1}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "pstarkey/labscript", "uuid": "{e07b8a11-58d9-46da-8368-724e708c5ac1}"}, "branch": {"name": "default"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2015-08-04T23:28:21.837199+00:00", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "merge_commit": null, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "* Fixed bug where all wait timeouts were set to the timeout of the first wait.\r\n\r\n    This was due to a list comprehension leaking values into the namespace of the wait() function because we used a variable name in the list comprehension which was the same as one of the function arguments.\r\n    The list comprehension has been modified to use a dummy variable name\r\n\r\n * Fixed bug where the ClockLine clock_limits were not taken into account when determining the minimum time between a wait and subsequent output.\r\nThis meant that triggers to secondary pseudoclocks, immediately followed by output could be faster than the allowed update rate of IntermediateDevices. This was fortunately caught further down the line, but should have never been a problem.\r\nThe wait() function (via a fix to trigger_all_pseudoclocks) now returns the correct length of time before you can command further output.\r\nIt is possible this bug only affected wait() commands with a single pseudoclock where the pseudoclock trigger_duration was very short and the wait_monitor was on a clockline that had a high clock_limit.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/4/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:000000000000%0D3735fcca8ce8?from_pullrequest_id=4"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/4/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/4.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/4/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/4/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/4"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/4/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:000000000000%0D3735fcca8ce8?from_pullrequest_id=4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/4/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/4/statuses_page=1.json"}}, "title": "Fixed bugs with waits", "close_source_branch": false, "type": "pullrequest", "id": 4, "destination": {"commit": {"hash": "3735fcca8ce8", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/3735fcca8ce8.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/3735fcca8ce8"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2015-11-03T02:27:01.859755+00:00", "summary": {"raw": "* Fixed bug where all wait timeouts were set to the timeout of the first wait.\r\n\r\n    This was due to a list comprehension leaking values into the namespace of the wait() function because we used a variable name in the list comprehension which was the same as one of the function arguments.\r\n    The list comprehension has been modified to use a dummy variable name\r\n\r\n * Fixed bug where the ClockLine clock_limits were not taken into account when determining the minimum time between a wait and subsequent output.\r\nThis meant that triggers to secondary pseudoclocks, immediately followed by output could be faster than the allowed update rate of IntermediateDevices. This was fortunately caught further down the line, but should have never been a problem.\r\nThe wait() function (via a fix to trigger_all_pseudoclocks) now returns the correct length of time before you can command further output.\r\nIt is possible this bug only affected wait() commands with a single pseudoclock where the pseudoclock trigger_duration was very short and the wait_monitor was on a clockline that had a high clock_limit.", "markup": "markdown", "html": "<ul>\n<li>\n<p>Fixed bug where all wait timeouts were set to the timeout of the first wait.</p>\n<p>This was due to a list comprehension leaking values into the namespace of the wait() function because we used a variable name in the list comprehension which was the same as one of the function arguments.\nThe list comprehension has been modified to use a dummy variable name</p>\n</li>\n<li>\n<p>Fixed bug where the ClockLine clock_limits were not taken into account when determining the minimum time between a wait and subsequent output.\nThis meant that triggers to secondary pseudoclocks, immediately followed by output could be faster than the allowed update rate of IntermediateDevices. This was fortunately caught further down the line, but should have never been a problem.\nThe wait() function (via a fix to trigger_all_pseudoclocks) now returns the correct length of time before you can command further output.\nIt is possible this bug only affected wait() commands with a single pseudoclock where the pseudoclock trigger_duration was very short and the wait_monitor was on a clockline that had a high clock_limit.</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "9d7795077896", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/labscript/commit/9d7795077896"}, "html": {"href": "#!/monashkrb/labscript/commits/9d7795077896"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/labscript"}, "html": {"href": "#!/monashkrb/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4d42e2d0-41cf-4474-ac4a-eaf59f1279fb}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "monashkrb/labscript", "uuid": "{4d42e2d0-41cf-4474-ac4a-eaf59f1279fb}"}, "branch": {"name": "default"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2015-11-03T09:14:23.473607+00:00", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "merge_commit": null, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "Allows a truncation kwarg to be passed to decorated ramp functions, whose effect is to keep the same functional form of the ramp, but truncate the duration by a fraction between 0 and 1.\r\nThis works by modifying the `end_time` of the instruction generated by the ramp, prior to sampling. One issue with this implementation is that the collision detection of ramps in `Output.add_instruction` uses the `end_time` of the full ramp, which cannot be readily circumvented.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/5/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:b3f8b00dc393%0D37583afb8ab9?from_pullrequest_id=5"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/5/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/5"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:b3f8b00dc393%0D37583afb8ab9?from_pullrequest_id=5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/5/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/5/statuses_page=1.json"}}, "title": "Truncation decorator for ramp functions", "close_source_branch": true, "type": "pullrequest", "id": 5, "destination": {"commit": {"hash": "37583afb8ab9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/37583afb8ab9.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/37583afb8ab9"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2016-01-21T00:14:30.510298+00:00", "summary": {"raw": "Allows a truncation kwarg to be passed to decorated ramp functions, whose effect is to keep the same functional form of the ramp, but truncate the duration by a fraction between 0 and 1.\r\nThis works by modifying the `end_time` of the instruction generated by the ramp, prior to sampling. One issue with this implementation is that the collision detection of ramps in `Output.add_instruction` uses the `end_time` of the full ramp, which cannot be readily circumvented.", "markup": "markdown", "html": "<p>Allows a truncation kwarg to be passed to decorated ramp functions, whose effect is to keep the same functional form of the ramp, but truncate the duration by a fraction between 0 and 1.\nThis works by modifying the <code>end_time</code> of the instruction generated by the ramp, prior to sampling. One issue with this implementation is that the collision detection of ramps in <code>Output.add_instruction</code> uses the <code>end_time</code> of the full ramp, which cannot be readily circumvented.</p>", "type": "rendered"}, "source": {"commit": {"hash": "1d4118b06183", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/labscript/commit/1d4118b06183"}, "html": {"href": "#!/monashspinor/labscript/commits/1d4118b06183"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/labscript"}, "html": {"href": "#!/monashspinor/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{73852c03-7486-4603-be8a-3bf277ec77cc}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "monashspinor/labscript", "uuid": "{73852c03-7486-4603-be8a-3bf277ec77cc}"}, "branch": {"name": "truncate_ramp"}}, "comment_count": 18, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2016-01-24T22:32:06.306836+00:00", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "merge_commit": {"hash": "b3f8b00dc393", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/b3f8b00dc393.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/b3f8b00dc393"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "Seems appropriate as we migrated labscript_suite source to Mercurial in January 2013.\r\nChances are that most user side code, e.g. labscript_suite/userlib/labscriptlib\r\nwill be under Mercurial control, as has been the case @ Monash since June 2014.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/6/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/monashspinor/labscript:dd7d076cf937%0D069374a6825a?from_pullrequest_id=6"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/6/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/6.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/6/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/6/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/6"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/6/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/monashspinor/labscript:dd7d076cf937%0D069374a6825a?from_pullrequest_id=6"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/6/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/6/statuses_page=1.json"}}, "title": "Save Mercurial (instead of Subversion) revision data of labscript file in h5 file", "close_source_branch": false, "type": "pullrequest", "id": 6, "destination": {"commit": {"hash": "069374a6825a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/069374a6825a.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/069374a6825a"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2016-01-25T05:57:19.526517+00:00", "summary": {"raw": "Seems appropriate as we migrated labscript_suite source to Mercurial in January 2013.\r\nChances are that most user side code, e.g. labscript_suite/userlib/labscriptlib\r\nwill be under Mercurial control, as has been the case @ Monash since June 2014.", "markup": "markdown", "html": "<p>Seems appropriate as we migrated labscript_suite source to Mercurial in January 2013.\nChances are that most user side code, e.g. labscript_suite/userlib/labscriptlib\nwill be under Mercurial control, as has been the case @ Monash since June 2014.</p>", "type": "rendered"}, "source": {"commit": {"hash": "dd7d076cf937", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/labscript/commit/dd7d076cf937"}, "html": {"href": "#!/monashspinor/labscript/commits/dd7d076cf937"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/labscript"}, "html": {"href": "#!/monashspinor/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{73852c03-7486-4603-be8a-3bf277ec77cc}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "monashspinor/labscript", "uuid": "{73852c03-7486-4603-be8a-3bf277ec77cc}"}, "branch": {"name": "hg_info"}}, "comment_count": 1, "state": "DECLINED", "task_count": 0, "reason": "", "updated_on": "2016-01-25T07:18:45.776502+00:00", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "merge_commit": null, "closed_by": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, {"description": "Seems appropriate as we migrated labscript_suite source to Mercurial in January 2013. Chances are that most user side code, e.g. labscript_suite/userlib/labscriptlib will be under Mercurial control, as has been the case @ Monash since June 2014.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/7/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:8605d16ba9c6%0Df5dadbb93aef?from_pullrequest_id=7"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/7/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/7.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/7/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/7/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/7"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/7/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:8605d16ba9c6%0Df5dadbb93aef?from_pullrequest_id=7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/7/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/7/statuses_page=1.json"}}, "title": "Save Mercurial (instead of Subversion) revision data of labscript file in h5 file", "close_source_branch": true, "type": "pullrequest", "id": 7, "destination": {"commit": {"hash": "f5dadbb93aef", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/f5dadbb93aef.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/f5dadbb93aef"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2016-01-25T07:17:46.436119+00:00", "summary": {"raw": "Seems appropriate as we migrated labscript_suite source to Mercurial in January 2013. Chances are that most user side code, e.g. labscript_suite/userlib/labscriptlib will be under Mercurial control, as has been the case @ Monash since June 2014.", "markup": "markdown", "html": "<p>Seems appropriate as we migrated labscript_suite source to Mercurial in January 2013. Chances are that most user side code, e.g. labscript_suite/userlib/labscriptlib will be under Mercurial control, as has been the case @ Monash since June 2014.</p>", "type": "rendered"}, "source": {"commit": {"hash": "2717fb07bf95", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/labscript/commit/2717fb07bf95"}, "html": {"href": "#!/monashspinor/labscript/commits/2717fb07bf95"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/labscript"}, "html": {"href": "#!/monashspinor/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{73852c03-7486-4603-be8a-3bf277ec77cc}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "monashspinor/labscript", "uuid": "{73852c03-7486-4603-be8a-3bf277ec77cc}"}, "branch": {"name": "hg_info"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-02-22T17:09:02.720171+00:00", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "merge_commit": {"hash": "8605d16ba9c6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/8605d16ba9c6.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/8605d16ba9c6"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "* Fixed a bunch of bugs related to time rounding of triggers and associated offsets\r\n\r\n* Fixed typo in changeset: fcfd28a48cb6\r\n    (note, changeset: fcfd28a48cb6 was actually done by me!)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/8/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:f5dadbb93aef%0Dae4925e16706?from_pullrequest_id=8"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/8/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/8.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/8/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/8/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/8"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/8/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:f5dadbb93aef%0Dae4925e16706?from_pullrequest_id=8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/8/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/8/statuses_page=1.json"}}, "title": "Fixed a bunch of bugs related to time rounding of triggers and associated offsets", "close_source_branch": false, "type": "pullrequest", "id": 8, "destination": {"commit": {"hash": "ae4925e16706", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/ae4925e16706.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/ae4925e16706"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2016-09-05T02:23:49.238819+00:00", "summary": {"raw": "* Fixed a bunch of bugs related to time rounding of triggers and associated offsets\r\n\r\n* Fixed typo in changeset: fcfd28a48cb6\r\n    (note, changeset: fcfd28a48cb6 was actually done by me!)", "markup": "markdown", "html": "<ul>\n<li>\n<p>Fixed a bunch of bugs related to time rounding of triggers and associated offsets</p>\n</li>\n<li>\n<p>Fixed typo in changeset: <a href=\"#!/labscript_suite/labscript/commits/fcfd28a48cb6\" rel=\"nofollow\" class=\"ap-connect-link\">fcfd28a48cb6</a>\n    (note, changeset: <a href=\"#!/labscript_suite/labscript/commits/fcfd28a48cb6\" rel=\"nofollow\" class=\"ap-connect-link\">fcfd28a48cb6</a> was actually done by me!)</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "f5dadbb93aef", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/labscript/commit/f5dadbb93aef"}, "html": {"href": "#!/monashkrb/labscript/commits/f5dadbb93aef"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/labscript"}, "html": {"href": "#!/monashkrb/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4d42e2d0-41cf-4474-ac4a-eaf59f1279fb}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "monashkrb/labscript", "uuid": "{4d42e2d0-41cf-4474-ac4a-eaf59f1279fb}"}, "branch": {"name": "default"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-02-22T17:03:55.906392+00:00", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "merge_commit": {"hash": "f5dadbb93aef83ca8c7aed7265fa756e1ad27663", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/f5dadbb93aef83ca8c7aed7265fa756e1ad27663.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/f5dadbb93aef83ca8c7aed7265fa756e1ad27663"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "* Check that no other instruction is during a ramp on one output\r\n\r\n* Close branch ReneKolb/Ramp_Collide_Check\r\n\r\n* A check has been added which checks whether the shutter is to be closed during the opening process and vice versa. If the new instruction is during the open or close delay, a warning message is emitted.\r\n\r\n* Close branch ReneKolb/Check_Shutter_Delays", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/9/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:acd6abf3f7c2%0D8605d16ba9c6?from_pullrequest_id=9"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/9/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/9.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/9/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/9/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/9"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/9/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:acd6abf3f7c2%0D8605d16ba9c6?from_pullrequest_id=9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/9/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/9/statuses_page=1.json"}}, "title": "Check ramp collision and shutter delays", "close_source_branch": false, "type": "pullrequest", "id": 9, "destination": {"commit": {"hash": "8605d16ba9c6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/8605d16ba9c6.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/8605d16ba9c6"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2017-05-30T12:22:17.069609+00:00", "summary": {"raw": "* Check that no other instruction is during a ramp on one output\r\n\r\n* Close branch ReneKolb/Ramp_Collide_Check\r\n\r\n* A check has been added which checks whether the shutter is to be closed during the opening process and vice versa. If the new instruction is during the open or close delay, a warning message is emitted.\r\n\r\n* Close branch ReneKolb/Check_Shutter_Delays", "markup": "markdown", "html": "<ul>\n<li>\n<p>Check that no other instruction is during a ramp on one output</p>\n</li>\n<li>\n<p>Close branch ReneKolb/Ramp_Collide_Check</p>\n</li>\n<li>\n<p>A check has been added which checks whether the shutter is to be closed during the opening process and vice versa. If the new instruction is during the open or close delay, a warning message is emitted.</p>\n</li>\n<li>\n<p>Close branch ReneKolb/Check_Shutter_Delays</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "acd6abf3f7c2", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ReneKolb/labscript/commit/acd6abf3f7c2"}, "html": {"href": "#!/ReneKolb/labscript/commits/acd6abf3f7c2"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ReneKolb/labscript"}, "html": {"href": "#!/ReneKolb/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e5bcc338-0f71-423d-a5e3-5e9b093934f9}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "ReneKolb/labscript", "uuid": "{e5bcc338-0f71-423d-a5e3-5e9b093934f9}"}, "branch": {"name": "default"}}, "comment_count": 11, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-07-08T15:42:29.284674+00:00", "author": {"display_name": "ReneKolb", "uuid": "{a14da38a-5a42-4215-a657-8d03e2e12c62}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D"}, "html": {"href": "https://bitbucket.org/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fdb60d6ad1bfc79b620af131e1ff76acd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsR-3.png"}}, "nickname": "ReneKolb", "type": "user", "account_id": "557058:cee66bea-c1f2-4230-9ace-11e2dc725285"}, "merge_commit": {"hash": "acd6abf3f7c2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/acd6abf3f7c2.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/acd6abf3f7c2"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Added basis for runviewer marker functionality from runviewer [issue #5](#!/labscript_suite/runviewer/issues/5/markers-and-nonlinear-timescale)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/10/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:4ba0ef7c8d36%0D7f4bffa24052?from_pullrequest_id=10"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/10/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/10.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/10/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/10/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/10"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/10/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:4ba0ef7c8d36%0D7f4bffa24052?from_pullrequest_id=10"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/10/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/10/statuses_page=1.json"}}, "title": "Added basis for runviewer marker functionality", "close_source_branch": false, "type": "pullrequest", "id": 10, "destination": {"commit": {"hash": "7f4bffa24052", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/7f4bffa24052.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/7f4bffa24052"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2017-06-18T08:00:53.873140+00:00", "summary": {"raw": "Added basis for runviewer marker functionality from runviewer [issue #5](#!/labscript_suite/runviewer/issues/5/markers-and-nonlinear-timescale)", "markup": "markdown", "html": "<p>Added basis for runviewer marker functionality from runviewer <a data-is-external-link=\"true\" href=\"#!/labscript_suite/runviewer/issues/5/markers-and-nonlinear-timescale\" rel=\"nofollow\">issue #5</a></p>", "type": "rendered"}, "source": {"commit": null, "repository": null, "branch": {"name": "PhyNerd/added-basis-for-runviewer-marker-functio-1497772849761"}}, "comment_count": 15, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-06-21T03:49:34.555340+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "4ba0ef7c8d36", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/4ba0ef7c8d36.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/4ba0ef7c8d36"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "We notices that there is a problem when we update a DigitalOut during an analog ramp. Since this occures quite often, we added code to help labscript deal with this. We achiev this by splitting the ramp into multiple subramps. This allows for the DigitalOut to change in between subramps and no Analog tick is emmitted. This allows the analog cards to cope with the update rates.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/11/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/ReneKolb/labscript:5a331fb0eb9c%0D24006128e68f?from_pullrequest_id=11"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/11/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/11.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/11/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/11/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/11"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/11/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/ReneKolb/labscript:5a331fb0eb9c%0D24006128e68f?from_pullrequest_id=11"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/11/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/11/statuses_page=1.json"}}, "title": "Added the ability to split ramps.", "close_source_branch": false, "type": "pullrequest", "id": 11, "destination": {"commit": {"hash": "24006128e68f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/24006128e68f.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/24006128e68f"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2017-06-19T13:37:37.918857+00:00", "summary": {"raw": "We notices that there is a problem when we update a DigitalOut during an analog ramp. Since this occures quite often, we added code to help labscript deal with this. We achiev this by splitting the ramp into multiple subramps. This allows for the DigitalOut to change in between subramps and no Analog tick is emmitted. This allows the analog cards to cope with the update rates.", "markup": "markdown", "html": "<p>We notices that there is a problem when we update a DigitalOut during an analog ramp. Since this occures quite often, we added code to help labscript deal with this. We achiev this by splitting the ramp into multiple subramps. This allows for the DigitalOut to change in between subramps and no Analog tick is emmitted. This allows the analog cards to cope with the update rates.</p>", "type": "rendered"}, "source": {"commit": {"hash": "5a331fb0eb9c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ReneKolb/labscript/commit/5a331fb0eb9c"}, "html": {"href": "#!/ReneKolb/labscript/commits/5a331fb0eb9c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/ReneKolb/labscript"}, "html": {"href": "#!/ReneKolb/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e5bcc338-0f71-423d-a5e3-5e9b093934f9}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "ReneKolb/labscript", "uuid": "{e5bcc338-0f71-423d-a5e3-5e9b093934f9}"}, "branch": {"name": "default"}}, "comment_count": 25, "state": "DECLINED", "task_count": 0, "reason": "Most issues now fixed by other pull requests, remaining issue is known (#39) and a solution has been proposed. As a result, this pull request is no longer needed.", "updated_on": "2018-01-22T06:16:06.321675+00:00", "author": {"display_name": "ReneKolb", "uuid": "{a14da38a-5a42-4215-a657-8d03e2e12c62}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D"}, "html": {"href": "https://bitbucket.org/%7Ba14da38a-5a42-4215-a657-8d03e2e12c62%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fdb60d6ad1bfc79b620af131e1ff76acd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsR-3.png"}}, "nickname": "ReneKolb", "type": "user", "account_id": "557058:cee66bea-c1f2-4230-9ace-11e2dc725285"}, "merge_commit": null, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "Added kwards \"start_order\" and \"stop_order\" at the base Device() object.  These are enforced to be integer in the range ORDER_MINIMUM to ORDER_MAXIMUM that\r\nare defined constants.  This is the first part of providing the functionality\r\nof programming devices in different batches grouped by their device order.  These\r\nwill be saved into the device properties, and used by blacs.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/12/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:8a84f74ed498%0Dc4a6c99d54d3?from_pullrequest_id=12"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/12/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/12"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:8a84f74ed498%0Dc4a6c99d54d3?from_pullrequest_id=12"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/12/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/12/statuses_page=1.json"}}, "title": "Provides start_order and stop_order as per Issue #18.", "close_source_branch": false, "type": "pullrequest", "id": 12, "destination": {"commit": {"hash": "c4a6c99d54d3", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/c4a6c99d54d3.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/c4a6c99d54d3"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2017-06-19T22:20:26.191525+00:00", "summary": {"raw": "Added kwards \"start_order\" and \"stop_order\" at the base Device() object.  These are enforced to be integer in the range ORDER_MINIMUM to ORDER_MAXIMUM that\r\nare defined constants.  This is the first part of providing the functionality\r\nof programming devices in different batches grouped by their device order.  These\r\nwill be saved into the device properties, and used by blacs.", "markup": "markdown", "html": "<p>Added kwards \"start_order\" and \"stop_order\" at the base Device() object.  These are enforced to be integer in the range ORDER_MINIMUM to ORDER_MAXIMUM that\nare defined constants.  This is the first part of providing the functionality\nof programming devices in different batches grouped by their device order.  These\nwill be saved into the device properties, and used by blacs.</p>", "type": "rendered"}, "source": {"commit": null, "repository": null, "branch": {"name": "default"}}, "comment_count": 22, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-07-27T02:30:57.668954+00:00", "author": {"display_name": "Ian B. Spielman", "uuid": "{bff0d3df-2ed5-4ff6-b13d-ce6cd935edb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D"}, "html": {"href": "https://bitbucket.org/%7Bbff0d3df-2ed5-4ff6-b13d-ce6cd935edb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/54beee087619e1a612011791e203f277d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsIS-0.png"}}, "nickname": "Ian Spielman", "type": "user", "account_id": "557058:b0e98d01-12e7-4a9d-a274-a195def255d2"}, "merge_commit": {"hash": "8a84f74ed498", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/8a84f74ed498.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/8a84f74ed498"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Added Shutter open_state to the connection_table_properties. \r\nThis is needed because one can currently not derive the open_state property from the h5 file of a shot. One can currently not tell a inverted shutter from a not inverted one.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/13/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:72f10b9ab0a0%0D4ba0ef7c8d36?from_pullrequest_id=13"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/13/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/13.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/13/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/13/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/13"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/13/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:72f10b9ab0a0%0D4ba0ef7c8d36?from_pullrequest_id=13"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/13/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/13/statuses_page=1.json"}}, "title": "Added Shutter open_state to the connection_table_properties", "close_source_branch": false, "type": "pullrequest", "id": 13, "destination": {"commit": {"hash": "4ba0ef7c8d36", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/4ba0ef7c8d36.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/4ba0ef7c8d36"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2017-06-26T17:54:37.793501+00:00", "summary": {"raw": "Added Shutter open_state to the connection_table_properties. \r\nThis is needed because one can currently not derive the open_state property from the h5 file of a shot. One can currently not tell a inverted shutter from a not inverted one.", "markup": "markdown", "html": "<p>Added Shutter open_state to the connection_table_properties. \nThis is needed because one can currently not derive the open_state property from the h5 file of a shot. One can currently not tell a inverted shutter from a not inverted one.</p>", "type": "rendered"}, "source": {"commit": {"hash": "5683f10d5e9a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript/commit/5683f10d5e9a"}, "html": {"href": "#!/PhyNerd/labscript/commits/5683f10d5e9a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript"}, "html": {"href": "#!/PhyNerd/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7ae7c0f3-4119-4307-8b3f-652003761155}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "PhyNerd/labscript", "uuid": "{7ae7c0f3-4119-4307-8b3f-652003761155}"}, "branch": {"name": "PhyNerd/added-shutter-open_state-to-the-connecti-1498499670777"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-06-27T06:00:15.348624+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "72f10b9ab0a0", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/72f10b9ab0a0.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/72f10b9ab0a0"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "Fixed several bugs in labscript\r\n\r\n* The duration of triggers were forcing clock ticks for other devices to be shorter than allowed for those devices. The duration is now calculated such that any simultaneous clock ticks for other children will be of an allowed length.\r\n* Also fixed issue #40", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/14/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:65e73d592c8f%0D72f10b9ab0a0?from_pullrequest_id=14"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/14/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/14.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/14/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/14/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/14"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/14/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:65e73d592c8f%0D72f10b9ab0a0?from_pullrequest_id=14"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/14/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/14/statuses_page=1.json"}}, "title": "Fixed bug with timing in labscript", "close_source_branch": true, "type": "pullrequest", "id": 14, "destination": {"commit": {"hash": "72f10b9ab0a0", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/72f10b9ab0a0.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/72f10b9ab0a0"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2017-06-27T05:21:14.753290+00:00", "summary": {"raw": "Fixed several bugs in labscript\r\n\r\n* The duration of triggers were forcing clock ticks for other devices to be shorter than allowed for those devices. The duration is now calculated such that any simultaneous clock ticks for other children will be of an allowed length.\r\n* Also fixed issue #40", "markup": "markdown", "html": "<p>Fixed several bugs in labscript</p>\n<ul>\n<li>The duration of triggers were forcing clock ticks for other devices to be shorter than allowed for those devices. The duration is now calculated such that any simultaneous clock ticks for other children will be of an allowed length.</li>\n<li>Also fixed issue <a href=\"#!/labscript_suite/labscript/issues/40/instruction-times-should-be-quantised-to\" rel=\"nofollow\" title=\"instruction times should be quantised to the pseudoclock clock_resolution\" class=\"ap-connect-link\"><s>#40</s></a></li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "e94cd1c3f954", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/labscript/commit/e94cd1c3f954"}, "html": {"href": "#!/monashkrb/labscript/commits/e94cd1c3f954"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/labscript"}, "html": {"href": "#!/monashkrb/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4d42e2d0-41cf-4474-ac4a-eaf59f1279fb}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "monashkrb/labscript", "uuid": "{4d42e2d0-41cf-4474-ac4a-eaf59f1279fb}"}, "branch": {"name": "bugfix"}}, "comment_count": 10, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-07-19T06:27:09.582562+00:00", "author": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "merge_commit": {"hash": "65e73d592c8f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/65e73d592c8f.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/65e73d592c8f"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "This pullrequest has 2 purposes: \r\n\r\n* It lays the groundwork for having BLACS display digital outputs in a inverted fashion. The idea being, that all shutters and digital devices displayed in BLACS are open/on when the button is check an closed/off if the button is unchecked. To distinguish the inverted digital outputs there will be the option to let them be displayed in different colors\r\n* ~~It introduces a new DigitalDevice class. A digital Device is a device that has a on and a off state and is attached to a digital output. This can be anything from a switch for magnetic fields to a TTL signal for some device.~~\r\n* It also switches `go_high` and `go_low` for inverted digital outputs and simplifies the Shutter class\r\n\r\nAs a Example here is a screenshot of how things could look ![active.png](data/bitbucket.org/repo/8zXB58L/images/3470798428-active.png) ![deactive.png](data/bitbucket.org/repo/8zXB58L/images/124420321-deactive.png)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/15/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:9bc19f4e1b0d%0Dddfae009e953?from_pullrequest_id=15"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/15/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/15"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:9bc19f4e1b0d%0Dddfae009e953?from_pullrequest_id=15"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/15/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/15/statuses_page=1.json"}}, "title": "Added inverted Digitaloutputs", "close_source_branch": false, "type": "pullrequest", "id": 15, "destination": {"commit": {"hash": "ddfae009e953", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/ddfae009e953.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/ddfae009e953"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2017-07-25T16:20:34.812427+00:00", "summary": {"raw": "This pullrequest has 2 purposes: \r\n\r\n* It lays the groundwork for having BLACS display digital outputs in a inverted fashion. The idea being, that all shutters and digital devices displayed in BLACS are open/on when the button is check an closed/off if the button is unchecked. To distinguish the inverted digital outputs there will be the option to let them be displayed in different colors\r\n* ~~It introduces a new DigitalDevice class. A digital Device is a device that has a on and a off state and is attached to a digital output. This can be anything from a switch for magnetic fields to a TTL signal for some device.~~\r\n* It also switches `go_high` and `go_low` for inverted digital outputs and simplifies the Shutter class\r\n\r\nAs a Example here is a screenshot of how things could look ![active.png](data/bitbucket.org/repo/8zXB58L/images/3470798428-active.png) ![deactive.png](data/bitbucket.org/repo/8zXB58L/images/124420321-deactive.png)", "markup": "markdown", "html": "<p>This pullrequest has 2 purposes: </p>\n<ul>\n<li>It lays the groundwork for having BLACS display digital outputs in a inverted fashion. The idea being, that all shutters and digital devices displayed in BLACS are open/on when the button is check an closed/off if the button is unchecked. To distinguish the inverted digital outputs there will be the option to let them be displayed in different colors</li>\n<li><del>It introduces a new DigitalDevice class. A digital Device is a device that has a on and a off state and is attached to a digital output. This can be anything from a switch for magnetic fields to a TTL signal for some device.</del></li>\n<li>It also switches <code>go_high</code> and <code>go_low</code> for inverted digital outputs and simplifies the Shutter class</li>\n</ul>\n<p>As a Example here is a screenshot of how things could look <img alt=\"active.png\" src=\"data/bitbucket.org/repo/8zXB58L/images/3470798428-active.png\" /> <img alt=\"deactive.png\" src=\"data/bitbucket.org/repo/8zXB58L/images/124420321-deactive.png\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "02eb98181ee1", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript/commit/02eb98181ee1"}, "html": {"href": "#!/PhyNerd/labscript/commits/02eb98181ee1"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript"}, "html": {"href": "#!/PhyNerd/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7ae7c0f3-4119-4307-8b3f-652003761155}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "PhyNerd/labscript", "uuid": "{7ae7c0f3-4119-4307-8b3f-652003761155}"}, "branch": {"name": "InvertedDO"}}, "comment_count": 16, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-01-24T01:20:54.303123+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "9bc19f4e1b0d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/9bc19f4e1b0d.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/9bc19f4e1b0d"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "This pull request aims at laying the groundwork for the execution of devices remotely.\r\nAs dissussed in #28.\r\n\r\nThe changes here are as minimal as possible. It's basicly just adding the worker_host keyword to the Devices class and adds it to the connectiontable properties. I think it belongs there as it describes the connection to the device.\r\n\r\nSorry for spamming with pull request but someone somewhere said that they are more visible than issues disscussion.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/16/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/PhyNerd/labscript:881414ddfda3%0D028edc9b979e?from_pullrequest_id=16"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/16/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/16.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/16/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/16/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/16"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/16/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/PhyNerd/labscript:881414ddfda3%0D028edc9b979e?from_pullrequest_id=16"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/16/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/16/statuses_page=1.json"}}, "title": "Remote Workers", "close_source_branch": false, "type": "pullrequest", "id": 16, "destination": {"commit": {"hash": "028edc9b979e", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/028edc9b979e.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/028edc9b979e"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2017-07-25T18:40:02.508753+00:00", "summary": {"raw": "This pull request aims at laying the groundwork for the execution of devices remotely.\r\nAs dissussed in #28.\r\n\r\nThe changes here are as minimal as possible. It's basicly just adding the worker_host keyword to the Devices class and adds it to the connectiontable properties. I think it belongs there as it describes the connection to the device.\r\n\r\nSorry for spamming with pull request but someone somewhere said that they are more visible than issues disscussion.", "markup": "markdown", "html": "<p>This pull request aims at laying the groundwork for the execution of devices remotely.\nAs dissussed in <a href=\"#!/labscript_suite/labscript/issues/28/remote-launching-of-all-blacs-devices\" rel=\"nofollow\" title=\"Remote launching of all Blacs devices\" class=\"ap-connect-link\">#28</a>.</p>\n<p>The changes here are as minimal as possible. It's basicly just adding the worker_host keyword to the Devices class and adds it to the connectiontable properties. I think it belongs there as it describes the connection to the device.</p>\n<p>Sorry for spamming with pull request but someone somewhere said that they are more visible than issues disscussion.</p>", "type": "rendered"}, "source": {"commit": {"hash": "881414ddfda3", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript/commit/881414ddfda3"}, "html": {"href": "#!/PhyNerd/labscript/commits/881414ddfda3"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript"}, "html": {"href": "#!/PhyNerd/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7ae7c0f3-4119-4307-8b3f-652003761155}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "PhyNerd/labscript", "uuid": "{7ae7c0f3-4119-4307-8b3f-652003761155}"}, "branch": {"name": "Remote-Workers"}}, "comment_count": 4, "state": "DECLINED", "task_count": 0, "reason": "Declined in favor of the more general pull request #22", "updated_on": "2017-10-02T07:30:15.265536+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": null, "closed_by": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}}, {"description": "This replaces ramps with constants if the initial and final value are equal. This should save clock ticks and samples. \r\n\r\nThis was already merged as part of a bigger pull request and backed out of because of performance issues ([Pull Request #9](#!/labscript_suite/labscript/pull-requests/9/check-ramp-collision-and-shutter-delays/diff)) in other parts of the code. As @ReneKolb doesn't seem to be active (at the moment) and the changes were useful I'm splitting said pull request into smaller (improved) ones to get them back into discussion.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/17/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:f08a44cc5c31%0D2dd1d808c449?from_pullrequest_id=17"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/17/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/17.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/17/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/17/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/17"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/17/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:f08a44cc5c31%0D2dd1d808c449?from_pullrequest_id=17"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/17/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/17/statuses_page=1.json"}}, "title": "Ramp optimization", "close_source_branch": false, "type": "pullrequest", "id": 17, "destination": {"commit": {"hash": "2dd1d808c449", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/2dd1d808c449.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/2dd1d808c449"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2017-08-06T09:58:16.888561+00:00", "summary": {"raw": "This replaces ramps with constants if the initial and final value are equal. This should save clock ticks and samples. \r\n\r\nThis was already merged as part of a bigger pull request and backed out of because of performance issues ([Pull Request #9](#!/labscript_suite/labscript/pull-requests/9/check-ramp-collision-and-shutter-delays/diff)) in other parts of the code. As @ReneKolb doesn't seem to be active (at the moment) and the changes were useful I'm splitting said pull request into smaller (improved) ones to get them back into discussion.", "markup": "markdown", "html": "<p>This replaces ramps with constants if the initial and final value are equal. This should save clock ticks and samples. </p>\n<p>This was already merged as part of a bigger pull request and backed out of because of performance issues (<a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/pull-requests/9/check-ramp-collision-and-shutter-delays/diff\" rel=\"nofollow\">Pull Request #9</a>) in other parts of the code. As @ReneKolb doesn't seem to be active (at the moment) and the changes were useful I'm splitting said pull request into smaller (improved) ones to get them back into discussion.</p>", "type": "rendered"}, "source": {"commit": {"hash": "d63ab8bad02d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript/commit/d63ab8bad02d"}, "html": {"href": "#!/PhyNerd/labscript/commits/d63ab8bad02d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript"}, "html": {"href": "#!/PhyNerd/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7ae7c0f3-4119-4307-8b3f-652003761155}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "PhyNerd/labscript", "uuid": "{7ae7c0f3-4119-4307-8b3f-652003761155}"}, "branch": {"name": "Ramp-optimization"}}, "comment_count": 6, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-07T23:26:01.337120+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "f08a44cc5c31", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/f08a44cc5c31.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/f08a44cc5c31"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "This adds a check for instructions colliding with ramps on a output.\r\n\r\nThis was already merged as part of a bigger pull request and backed out of because of performance issues ([Pull Request #9](#!/labscript_suite/labscript/pull-requests/9/check-ramp-collision-and-shutter-delays/diff)). As @ReneKolb doesn't seem to be active (at the moment) and the changes were useful I'm splitting said pull request into smaller (improved) ones to get them back into discussion.\r\n\r\nThe old version of check scaled with O(N^2) the new one (proposed by @pstarkey) scales with O(N)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/18/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:2dd1d808c449%0D9d065d0821da?from_pullrequest_id=18"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/18/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/18.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/18/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/18/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/18"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/18/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:2dd1d808c449%0D9d065d0821da?from_pullrequest_id=18"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/18/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/18/statuses_page=1.json"}}, "title": "Ramp collision checks", "close_source_branch": false, "type": "pullrequest", "id": 18, "destination": {"commit": {"hash": "9d065d0821da", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/9d065d0821da.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/9d065d0821da"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2017-08-06T10:16:08.969759+00:00", "summary": {"raw": "This adds a check for instructions colliding with ramps on a output.\r\n\r\nThis was already merged as part of a bigger pull request and backed out of because of performance issues ([Pull Request #9](#!/labscript_suite/labscript/pull-requests/9/check-ramp-collision-and-shutter-delays/diff)). As @ReneKolb doesn't seem to be active (at the moment) and the changes were useful I'm splitting said pull request into smaller (improved) ones to get them back into discussion.\r\n\r\nThe old version of check scaled with O(N^2) the new one (proposed by @pstarkey) scales with O(N)", "markup": "markdown", "html": "<p>This adds a check for instructions colliding with ramps on a output.</p>\n<p>This was already merged as part of a bigger pull request and backed out of because of performance issues (<a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/pull-requests/9/check-ramp-collision-and-shutter-delays/diff\" rel=\"nofollow\">Pull Request #9</a>). As @ReneKolb doesn't seem to be active (at the moment) and the changes were useful I'm splitting said pull request into smaller (improved) ones to get them back into discussion.</p>\n<p>The old version of check scaled with O(N^2) the new one (proposed by @pstarkey) scales with O(N)</p>", "type": "rendered"}, "source": {"commit": {"hash": "bb861d67ab6b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript/commit/bb861d67ab6b"}, "html": {"href": "#!/PhyNerd/labscript/commits/bb861d67ab6b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript"}, "html": {"href": "#!/PhyNerd/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7ae7c0f3-4119-4307-8b3f-652003761155}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "PhyNerd/labscript", "uuid": "{7ae7c0f3-4119-4307-8b3f-652003761155}"}, "branch": {"name": "Ramp-collision"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-07T05:58:09.453517+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "2dd1d808c449", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/2dd1d808c449.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/2dd1d808c449"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "A check has been added which checks whether the shutter is to be closed during the opening process and vice versa. If the new instruction is during the open or close delay, a warning message is emitted.\r\nThis should fix issue #2.\r\n\r\nThis was already merged as part of a bigger pull request and backed out of because of performance issues ([Pull Request #9](#!/labscript_suite/labscript/pull-requests/9/check-ramp-collision-and-shutter-delays/diff)). As @ReneKolb doesn't seem to be active (at the moment) and the changes were useful I'm splitting said pull request into smaller (improved) ones to get them back into discussion.\r\n\r\nThe old version of checks scaled with O(N^2) the new ones (proposed by @pstarkey) scale with O(N)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/19/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:83b2f9c5f137%0Ddeb8e2b499cc?from_pullrequest_id=19"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/19/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/19.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/19/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/19/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/19"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/19/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:83b2f9c5f137%0Ddeb8e2b499cc?from_pullrequest_id=19"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/19/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/19/statuses_page=1.json"}}, "title": "Shutter checks", "close_source_branch": false, "type": "pullrequest", "id": 19, "destination": {"commit": {"hash": "deb8e2b499cc", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/deb8e2b499cc.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/deb8e2b499cc"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2017-08-06T12:14:22.055036+00:00", "summary": {"raw": "A check has been added which checks whether the shutter is to be closed during the opening process and vice versa. If the new instruction is during the open or close delay, a warning message is emitted.\r\nThis should fix issue #2.\r\n\r\nThis was already merged as part of a bigger pull request and backed out of because of performance issues ([Pull Request #9](#!/labscript_suite/labscript/pull-requests/9/check-ramp-collision-and-shutter-delays/diff)). As @ReneKolb doesn't seem to be active (at the moment) and the changes were useful I'm splitting said pull request into smaller (improved) ones to get them back into discussion.\r\n\r\nThe old version of checks scaled with O(N^2) the new ones (proposed by @pstarkey) scale with O(N)", "markup": "markdown", "html": "<p>A check has been added which checks whether the shutter is to be closed during the opening process and vice versa. If the new instruction is during the open or close delay, a warning message is emitted.\nThis should fix issue <a href=\"#!/labscript_suite/labscript/issues/2/shutter-commands-can-be-reordered-due-to\" rel=\"nofollow\" title=\"Shutter commands can be reordered due to shutter delays\" class=\"ap-connect-link\">#2</a>.</p>\n<p>This was already merged as part of a bigger pull request and backed out of because of performance issues (<a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/pull-requests/9/check-ramp-collision-and-shutter-delays/diff\" rel=\"nofollow\">Pull Request #9</a>). As @ReneKolb doesn't seem to be active (at the moment) and the changes were useful I'm splitting said pull request into smaller (improved) ones to get them back into discussion.</p>\n<p>The old version of checks scaled with O(N^2) the new ones (proposed by @pstarkey) scale with O(N)</p>", "type": "rendered"}, "source": {"commit": {"hash": "758d760aac43", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript/commit/758d760aac43"}, "html": {"href": "#!/PhyNerd/labscript/commits/758d760aac43"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript"}, "html": {"href": "#!/PhyNerd/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7ae7c0f3-4119-4307-8b3f-652003761155}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "PhyNerd/labscript", "uuid": "{7ae7c0f3-4119-4307-8b3f-652003761155}"}, "branch": {"name": "Shutter-collision"}}, "comment_count": 9, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-01-22T06:03:41.124863+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "83b2f9c5f137", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/83b2f9c5f137.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/83b2f9c5f137"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "This should make ```Output.default_value``` user configurable.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/20/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:56793a6cd74a%0Df08a44cc5c31?from_pullrequest_id=20"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/20/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/20.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/20/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/20/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/20"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/20/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:56793a6cd74a%0Df08a44cc5c31?from_pullrequest_id=20"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/20/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/20/statuses_page=1.json"}}, "title": "Added default_value to Output's constructor", "close_source_branch": false, "type": "pullrequest", "id": 20, "destination": {"commit": {"hash": "f08a44cc5c31", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/f08a44cc5c31.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/f08a44cc5c31"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2017-08-13T21:52:55.268895+00:00", "summary": {"raw": "This should make ```Output.default_value``` user configurable.", "markup": "markdown", "html": "<p>This should make <code>Output.default_value</code> user configurable.</p>", "type": "rendered"}, "source": {"commit": {"hash": "c20bc6245b7d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript/commit/c20bc6245b7d"}, "html": {"href": "#!/PhyNerd/labscript/commits/c20bc6245b7d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript"}, "html": {"href": "#!/PhyNerd/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7ae7c0f3-4119-4307-8b3f-652003761155}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "PhyNerd/labscript", "uuid": "{7ae7c0f3-4119-4307-8b3f-652003761155}"}, "branch": {"name": "default_value"}}, "comment_count": 23, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-14T19:20:52.040796+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "56793a6cd74a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/56793a6cd74a.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/56793a6cd74a"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This moves most of the state calculation to numpy and there by reduces compile time for sequences with many samples drastically.\r\n\r\nThis script went from 2681 ms to 313 ms compile time with this change:\r\n\r\n```Python\r\nstart()\r\nt = 0\r\nduration =  200 * ms\r\nperiode = 1 * us\r\nsequence = [(0, 1), (periode/2.0, 0)]\r\nsequence2 = [(0, 0), (periode/2.0, 1)]\r\nsamplerate = len(sequence)/periode\r\nOutput1.repeat_pulse_sequence(t, duration, sequence, periode, samplerate)\r\nOutput2.repeat_pulse_sequence(t, duration, sequence2, periode, samplerate)\r\nt += duration\r\nstop(t)\r\n```", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/21/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:9aba96c50c4b%0D028edc9b979e?from_pullrequest_id=21"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/21/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/21.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/21/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/21/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/21"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/21/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:9aba96c50c4b%0D028edc9b979e?from_pullrequest_id=21"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/21/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/21/statuses_page=1.json"}}, "title": "Faster pulse_sequence", "close_source_branch": false, "type": "pullrequest", "id": 21, "destination": {"commit": {"hash": "028edc9b979e", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/028edc9b979e.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/028edc9b979e"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2017-09-15T13:10:49.456599+00:00", "summary": {"raw": "This moves most of the state calculation to numpy and there by reduces compile time for sequences with many samples drastically.\r\n\r\nThis script went from 2681 ms to 313 ms compile time with this change:\r\n\r\n```Python\r\nstart()\r\nt = 0\r\nduration =  200 * ms\r\nperiode = 1 * us\r\nsequence = [(0, 1), (periode/2.0, 0)]\r\nsequence2 = [(0, 0), (periode/2.0, 1)]\r\nsamplerate = len(sequence)/periode\r\nOutput1.repeat_pulse_sequence(t, duration, sequence, periode, samplerate)\r\nOutput2.repeat_pulse_sequence(t, duration, sequence2, periode, samplerate)\r\nt += duration\r\nstop(t)\r\n```", "markup": "markdown", "html": "<p>This moves most of the state calculation to numpy and there by reduces compile time for sequences with many samples drastically.</p>\n<p>This script went from 2681 ms to 313 ms compile time with this change:</p>\n<div class=\"codehilite language-Python\"><pre><span></span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">duration</span> <span class=\"o\">=</span>  <span class=\"mi\">200</span> <span class=\"o\">*</span> <span class=\"n\">ms</span>\n<span class=\"n\">periode</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">*</span> <span class=\"n\">us</span>\n<span class=\"n\">sequence</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">periode</span><span class=\"o\">/</span><span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)]</span>\n<span class=\"n\">sequence2</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">periode</span><span class=\"o\">/</span><span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)]</span>\n<span class=\"n\">samplerate</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sequence</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"n\">periode</span>\n<span class=\"n\">Output1</span><span class=\"o\">.</span><span class=\"n\">repeat_pulse_sequence</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"n\">sequence</span><span class=\"p\">,</span> <span class=\"n\">periode</span><span class=\"p\">,</span> <span class=\"n\">samplerate</span><span class=\"p\">)</span>\n<span class=\"n\">Output2</span><span class=\"o\">.</span><span class=\"n\">repeat_pulse_sequence</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"n\">sequence2</span><span class=\"p\">,</span> <span class=\"n\">periode</span><span class=\"p\">,</span> <span class=\"n\">samplerate</span><span class=\"p\">)</span>\n<span class=\"n\">t</span> <span class=\"o\">+=</span> <span class=\"n\">duration</span>\n<span class=\"n\">stop</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "f4461240942f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript/commit/f4461240942f"}, "html": {"href": "#!/PhyNerd/labscript/commits/f4461240942f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript"}, "html": {"href": "#!/PhyNerd/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7ae7c0f3-4119-4307-8b3f-652003761155}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "PhyNerd/labscript", "uuid": "{7ae7c0f3-4119-4307-8b3f-652003761155}"}, "branch": {"name": "pulse_sequence_performance"}}, "comment_count": 7, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-10-03T00:02:07.189282+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "9aba96c50c4b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/9aba96c50c4b.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/9aba96c50c4b"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "As per BLACS [issue #13](#!/labscript_suite/blacs/issues/13/launch-blacs-as-a-secondary-control-system), this code provides a new syntax for defining the connections to remote workers and secondary control systems.\r\n\r\nThe syntax should be used as `SecondaryControlSystem('control2', 'bec-control2.physics.monash.edu:42518')` to define the connection to the secondary control system (similarly for remote worker brokers). To use this, then modify your usual device instantiation as so `NovaTechDDS9M('novatech1', my_clockline, com_port = control2('com14'))`", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/22/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:ddfae009e953%0D24006128e68f?from_pullrequest_id=22"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/22/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/22.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/22/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/22/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/22"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/22/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:ddfae009e953%0D24006128e68f?from_pullrequest_id=22"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/22/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/22/statuses_page=1.json"}}, "title": "Syntax for remote worker brokers and secondary control systems", "close_source_branch": true, "type": "pullrequest", "id": 22, "destination": {"commit": {"hash": "24006128e68f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/24006128e68f.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/24006128e68f"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2017-10-02T06:42:42.601869+00:00", "summary": {"raw": "As per BLACS [issue #13](#!/labscript_suite/blacs/issues/13/launch-blacs-as-a-secondary-control-system), this code provides a new syntax for defining the connections to remote workers and secondary control systems.\r\n\r\nThe syntax should be used as `SecondaryControlSystem('control2', 'bec-control2.physics.monash.edu:42518')` to define the connection to the secondary control system (similarly for remote worker brokers). To use this, then modify your usual device instantiation as so `NovaTechDDS9M('novatech1', my_clockline, com_port = control2('com14'))`", "markup": "markdown", "html": "<p>As per BLACS <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/issues/13/launch-blacs-as-a-secondary-control-system\" rel=\"nofollow\">issue #13</a>, this code provides a new syntax for defining the connections to remote workers and secondary control systems.</p>\n<p>The syntax should be used as <code>SecondaryControlSystem('control2', 'bec-control2.physics.monash.edu:42518')</code> to define the connection to the secondary control system (similarly for remote worker brokers). To use this, then modify your usual device instantiation as so <code>NovaTechDDS9M('novatech1', my_clockline, com_port = control2('com14'))</code></p>", "type": "rendered"}, "source": {"commit": {"hash": "381e07d73270", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/381e07d73270.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/381e07d73270"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "remote-device-connections"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-01-22T22:27:31.678684+00:00", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "merge_commit": {"hash": "ddfae009e953", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/ddfae009e953.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/ddfae009e953"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "This should make the compiler Python 3 compatible.\r\n\r\n* **future** imports and Python3 changes\r\n* replaced **builtins** with builtins in python3\r\n* added future imports to devices folder\r\n* fixed dtype strings\r\n* keys\\(\\) to list\r\n* explicitly made config and compiler objects and replaced unicode with str", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/23/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:ee4464bfd9e1%0De3ac76acb92b?from_pullrequest_id=23"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/23/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/23.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/23/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/23/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/23"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/23/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:ee4464bfd9e1%0De3ac76acb92b?from_pullrequest_id=23"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/23/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/23/statuses_page=1.json"}}, "title": "Python3", "close_source_branch": true, "type": "pullrequest", "id": 23, "destination": {"commit": {"hash": "e3ac76acb92b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/e3ac76acb92b.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/e3ac76acb92b"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2017-10-19T13:42:46.241042+00:00", "summary": {"raw": "This should make the compiler Python 3 compatible.\r\n\r\n* **future** imports and Python3 changes\r\n* replaced **builtins** with builtins in python3\r\n* added future imports to devices folder\r\n* fixed dtype strings\r\n* keys\\(\\) to list\r\n* explicitly made config and compiler objects and replaced unicode with str", "markup": "markdown", "html": "<p>This should make the compiler Python 3 compatible.</p>\n<ul>\n<li><strong>future</strong> imports and Python3 changes</li>\n<li>replaced <strong>builtins</strong> with builtins in python3</li>\n<li>added future imports to devices folder</li>\n<li>fixed dtype strings</li>\n<li>keys() to list</li>\n<li>explicitly made config and compiler objects and replaced unicode with str</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "ba4359876cb9", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript/commit/ba4359876cb9"}, "html": {"href": "#!/PhyNerd/labscript/commits/ba4359876cb9"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript"}, "html": {"href": "#!/PhyNerd/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7ae7c0f3-4119-4307-8b3f-652003761155}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "PhyNerd/labscript", "uuid": "{7ae7c0f3-4119-4307-8b3f-652003761155}"}, "branch": {"name": "Python3"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-03-27T04:56:41.239249+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "ee4464bfd9e1", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/ee4464bfd9e1.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/ee4464bfd9e1"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This sets the correct dtype for the raw output arrays of static outputs.\r\n\r\nThis should fix the following crashes when using StaticOutputs with NI Cards:\r\n\r\n    Traceback (most recent call last):\r\n      File \"test_analogin_samplerate.py\", line 70, in <module>\r\n      File \"E:\\labscript_suite\\labscript\\labscript.py\", line 2132, in stop\r\n        generate_code()\r\n      File \"E:\\labscript_suite\\labscript\\labscript.py\", line 2034, in generate_code\r\n        device.generate_code(hdf5_file)\r\n      File \"E:\\labscript_suite\\labscript_devices\\PulseBlaster_No_DDS.py\", line 72, in generate_code\r\n        PseudoclockDevice.generate_code(self, hdf5_file)\r\n      File \"E:\\labscript_suite\\labscript\\labscript.py\", line 948, in generate_code\r\n        Device.generate_code(self, hdf5_file)\r\n      File \"E:\\labscript_suite\\labscript\\labscript.py\", line 428, in generate_code\r\n        device.generate_code(hdf5_file)\r\n      File \"E:\\labscript_suite\\labscript\\labscript.py\", line 832, in generate_code\r\n        Device.generate_code(self, hdf5_file)\r\n      File \"E:\\labscript_suite\\labscript\\labscript.py\", line 428, in generate_code\r\n        device.generate_code(hdf5_file)\r\n      File \"E:\\labscript_suite\\labscript\\labscript.py\", line 428, in generate_code\r\n        device.generate_code(hdf5_file)\r\n      File \"E:\\labscript_suite\\labscript_devices\\NI_DAQmx.py\", line 202, in generate_code\r\n        digital_out_table = self.convert_bools_to_bytes(digitals.values())\r\n      File \"E:\\labscript_suite\\labscript_devices\\NIBoard.py\", line 75, in convert_bools_to_bytes\r\n        bits = bitfield(outputarray,dtype=self.dtype_DO)\r\n      File \"E:\\labscript_suite\\labscript\\labscript.py\", line 109, in bitfield\r\n        y |= arrays[i]<<i\r\n    TypeError: ufunc 'bitwise_or' output (typecode 'i') could not be coerced to provided output parameter (typecode 'B') according to the casting rule ''same_kind''\r\n    Compilation aborted.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/24/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:f9c77cf84e84%0D9bc19f4e1b0d?from_pullrequest_id=24"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/24/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/24.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/24/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/24/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/24"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/24/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:f9c77cf84e84%0D9bc19f4e1b0d?from_pullrequest_id=24"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/24/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/24/statuses_page=1.json"}}, "title": "Bugfix for StaticOutputs", "close_source_branch": false, "type": "pullrequest", "id": 24, "destination": {"commit": {"hash": "9bc19f4e1b0d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/9bc19f4e1b0d.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/9bc19f4e1b0d"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2017-11-10T08:56:30.833669+00:00", "summary": {"raw": "This sets the correct dtype for the raw output arrays of static outputs.\r\n\r\nThis should fix the following crashes when using StaticOutputs with NI Cards:\r\n\r\n    Traceback (most recent call last):\r\n      File \"test_analogin_samplerate.py\", line 70, in <module>\r\n      File \"E:\\labscript_suite\\labscript\\labscript.py\", line 2132, in stop\r\n        generate_code()\r\n      File \"E:\\labscript_suite\\labscript\\labscript.py\", line 2034, in generate_code\r\n        device.generate_code(hdf5_file)\r\n      File \"E:\\labscript_suite\\labscript_devices\\PulseBlaster_No_DDS.py\", line 72, in generate_code\r\n        PseudoclockDevice.generate_code(self, hdf5_file)\r\n      File \"E:\\labscript_suite\\labscript\\labscript.py\", line 948, in generate_code\r\n        Device.generate_code(self, hdf5_file)\r\n      File \"E:\\labscript_suite\\labscript\\labscript.py\", line 428, in generate_code\r\n        device.generate_code(hdf5_file)\r\n      File \"E:\\labscript_suite\\labscript\\labscript.py\", line 832, in generate_code\r\n        Device.generate_code(self, hdf5_file)\r\n      File \"E:\\labscript_suite\\labscript\\labscript.py\", line 428, in generate_code\r\n        device.generate_code(hdf5_file)\r\n      File \"E:\\labscript_suite\\labscript\\labscript.py\", line 428, in generate_code\r\n        device.generate_code(hdf5_file)\r\n      File \"E:\\labscript_suite\\labscript_devices\\NI_DAQmx.py\", line 202, in generate_code\r\n        digital_out_table = self.convert_bools_to_bytes(digitals.values())\r\n      File \"E:\\labscript_suite\\labscript_devices\\NIBoard.py\", line 75, in convert_bools_to_bytes\r\n        bits = bitfield(outputarray,dtype=self.dtype_DO)\r\n      File \"E:\\labscript_suite\\labscript\\labscript.py\", line 109, in bitfield\r\n        y |= arrays[i]<<i\r\n    TypeError: ufunc 'bitwise_or' output (typecode 'i') could not be coerced to provided output parameter (typecode 'B') according to the casting rule ''same_kind''\r\n    Compilation aborted.", "markup": "markdown", "html": "<p>This sets the correct dtype for the raw output arrays of static outputs.</p>\n<p>This should fix the following crashes when using StaticOutputs with NI Cards:</p>\n<div class=\"codehilite\"><pre><span></span>Traceback (most recent call last):\n  File &quot;test_analogin_samplerate.py&quot;, line 70, in &lt;module&gt;\n  File &quot;E:\\labscript_suite\\labscript\\labscript.py&quot;, line 2132, in stop\n    generate_code()\n  File &quot;E:\\labscript_suite\\labscript\\labscript.py&quot;, line 2034, in generate_code\n    device.generate_code(hdf5_file)\n  File &quot;E:\\labscript_suite\\labscript_devices\\PulseBlaster_No_DDS.py&quot;, line 72, in generate_code\n    PseudoclockDevice.generate_code(self, hdf5_file)\n  File &quot;E:\\labscript_suite\\labscript\\labscript.py&quot;, line 948, in generate_code\n    Device.generate_code(self, hdf5_file)\n  File &quot;E:\\labscript_suite\\labscript\\labscript.py&quot;, line 428, in generate_code\n    device.generate_code(hdf5_file)\n  File &quot;E:\\labscript_suite\\labscript\\labscript.py&quot;, line 832, in generate_code\n    Device.generate_code(self, hdf5_file)\n  File &quot;E:\\labscript_suite\\labscript\\labscript.py&quot;, line 428, in generate_code\n    device.generate_code(hdf5_file)\n  File &quot;E:\\labscript_suite\\labscript\\labscript.py&quot;, line 428, in generate_code\n    device.generate_code(hdf5_file)\n  File &quot;E:\\labscript_suite\\labscript_devices\\NI_DAQmx.py&quot;, line 202, in generate_code\n    digital_out_table = self.convert_bools_to_bytes(digitals.values())\n  File &quot;E:\\labscript_suite\\labscript_devices\\NIBoard.py&quot;, line 75, in convert_bools_to_bytes\n    bits = bitfield(outputarray,dtype=self.dtype_DO)\n  File &quot;E:\\labscript_suite\\labscript\\labscript.py&quot;, line 109, in bitfield\n    y |= arrays[i]&lt;&lt;i\nTypeError: ufunc &#39;bitwise_or&#39; output (typecode &#39;i&#39;) could not be coerced to provided output parameter (typecode &#39;B&#39;) according to the casting rule &#39;&#39;same_kind&#39;&#39;\nCompilation aborted.\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "3eb94488bdf9", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript/commit/3eb94488bdf9"}, "html": {"href": "#!/PhyNerd/labscript/commits/3eb94488bdf9"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript"}, "html": {"href": "#!/PhyNerd/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7ae7c0f3-4119-4307-8b3f-652003761155}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "PhyNerd/labscript", "uuid": "{7ae7c0f3-4119-4307-8b3f-652003761155}"}, "branch": {"name": "staticoutput-dytpes"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-01-24T01:27:14.234167+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "f9c77cf84e84", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/f9c77cf84e84.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/f9c77cf84e84"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "Currently if one wants to use a NI Card with no Outputs this will result in a Exception \\(see issue #15\\). This pullrequest addresses this issue, by modifying `Pseudoclock.get_outputs_by_clockline` to add a empty list for clocklines with no outputs.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/25/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:24006128e68f%0D83b2f9c5f137?from_pullrequest_id=25"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/25/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/25.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/25/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/25/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/25"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/25/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:24006128e68f%0D83b2f9c5f137?from_pullrequest_id=25"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/25/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/25/statuses_page=1.json"}}, "title": "Fixed compilation errors for clocklines with no Outputs", "close_source_branch": false, "type": "pullrequest", "id": 25, "destination": {"commit": {"hash": "83b2f9c5f137", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/83b2f9c5f137.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/83b2f9c5f137"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2017-11-11T14:01:43.792630+00:00", "summary": {"raw": "Currently if one wants to use a NI Card with no Outputs this will result in a Exception \\(see issue #15\\). This pullrequest addresses this issue, by modifying `Pseudoclock.get_outputs_by_clockline` to add a empty list for clocklines with no outputs.", "markup": "markdown", "html": "<p>Currently if one wants to use a NI Card with no Outputs this will result in a Exception (see issue <a href=\"#!/labscript_suite/labscript/issues/15/basic-connection-tables-with-no-outputs-do\" rel=\"nofollow\" title=\"Basic connection tables (with no outputs) do not compile\" class=\"ap-connect-link\">#15</a>). This pullrequest addresses this issue, by modifying <code>Pseudoclock.get_outputs_by_clockline</code> to add a empty list for clocklines with no outputs.</p>", "type": "rendered"}, "source": {"commit": {"hash": "88b4d1eab7a7", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript/commit/88b4d1eab7a7"}, "html": {"href": "#!/PhyNerd/labscript/commits/88b4d1eab7a7"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript"}, "html": {"href": "#!/PhyNerd/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7ae7c0f3-4119-4307-8b3f-652003761155}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "PhyNerd/labscript", "uuid": "{7ae7c0f3-4119-4307-8b3f-652003761155}"}, "branch": {"name": "clockline-no-outputs"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-01-22T06:08:21.466385+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "24006128e68f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/24006128e68f.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/24006128e68f"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "While diffing our lab branch with the current default labscript branch I stumbled upon this bug and typo fix.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/26/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:6e993a63ccb9%0Df9c77cf84e84?from_pullrequest_id=26"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/26/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/26.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/26/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/26/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/26"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/26/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:6e993a63ccb9%0Df9c77cf84e84?from_pullrequest_id=26"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/26/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/26/statuses_page=1.json"}}, "title": "Minor bugfix", "close_source_branch": false, "type": "pullrequest", "id": 26, "destination": {"commit": {"hash": "f9c77cf84e84", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/f9c77cf84e84.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/f9c77cf84e84"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2018-03-04T11:02:29.653093+00:00", "summary": {"raw": "While diffing our lab branch with the current default labscript branch I stumbled upon this bug and typo fix.", "markup": "markdown", "html": "<p>While diffing our lab branch with the current default labscript branch I stumbled upon this bug and typo fix.</p>", "type": "rendered"}, "source": {"commit": {"hash": "cbef06529214", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript/commit/cbef06529214"}, "html": {"href": "#!/PhyNerd/labscript/commits/cbef06529214"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript"}, "html": {"href": "#!/PhyNerd/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7ae7c0f3-4119-4307-8b3f-652003761155}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "PhyNerd/labscript", "uuid": "{7ae7c0f3-4119-4307-8b3f-652003761155}"}, "branch": {"name": "minor-bugfix"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-03-04T11:08:47.471320+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "6e993a63ccb9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/6e993a63ccb9.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/6e993a63ccb9"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "I'm about to make a pull request for runmanager which allows arbitrary batch compiler scripts to be  run that may invoke something other than labscript. As part of this, I'm moving the globals loading and builtins cleanup code over to runmanager. \r\n\r\nThis pull request adds an additional kwargs to labscript init and cleanup methods which allows for the labscript global loading/cleanup code to be disabled. In order to maintain compatibility with old runmanager with this version of labscript, the loading/cleanup is enabled by default in this version of labscript. This can likely be removed in labscript 3.0 though and I've left comments to help with the cleanup when this happens.\r\n\r\nPlease leave me to do the actual merging so that the branch gets closed properly! I'll merge once approved.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/27/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:d2e6c5a45151%0Defc543b4e71c?from_pullrequest_id=27"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/27/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/27.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/27/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/27/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/27"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/27/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:d2e6c5a45151%0Defc543b4e71c?from_pullrequest_id=27"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/27/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/27/statuses_page=1.json"}}, "title": "Disabled loading/cleanup of globals into builtins, ready for it to be moved to runmanager", "close_source_branch": true, "type": "pullrequest", "id": 27, "destination": {"commit": {"hash": "efc543b4e71c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/efc543b4e71c.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/efc543b4e71c"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2018-03-13T05:10:21.518062+00:00", "summary": {"raw": "I'm about to make a pull request for runmanager which allows arbitrary batch compiler scripts to be  run that may invoke something other than labscript. As part of this, I'm moving the globals loading and builtins cleanup code over to runmanager. \r\n\r\nThis pull request adds an additional kwargs to labscript init and cleanup methods which allows for the labscript global loading/cleanup code to be disabled. In order to maintain compatibility with old runmanager with this version of labscript, the loading/cleanup is enabled by default in this version of labscript. This can likely be removed in labscript 3.0 though and I've left comments to help with the cleanup when this happens.\r\n\r\nPlease leave me to do the actual merging so that the branch gets closed properly! I'll merge once approved.", "markup": "markdown", "html": "<p>I'm about to make a pull request for runmanager which allows arbitrary batch compiler scripts to be  run that may invoke something other than labscript. As part of this, I'm moving the globals loading and builtins cleanup code over to runmanager. </p>\n<p>This pull request adds an additional kwargs to labscript init and cleanup methods which allows for the labscript global loading/cleanup code to be disabled. In order to maintain compatibility with old runmanager with this version of labscript, the loading/cleanup is enabled by default in this version of labscript. This can likely be removed in labscript 3.0 though and I've left comments to help with the cleanup when this happens.</p>\n<p>Please leave me to do the actual merging so that the branch gets closed properly! I'll merge once approved.</p>", "type": "rendered"}, "source": {"commit": {"hash": "d475f0e29665", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/labscript/commit/d475f0e29665"}, "html": {"href": "#!/pstarkey/labscript/commits/d475f0e29665"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/labscript"}, "html": {"href": "#!/pstarkey/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e07b8a11-58d9-46da-8368-724e708c5ac1}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "pstarkey/labscript", "uuid": "{e07b8a11-58d9-46da-8368-724e708c5ac1}"}, "branch": {"name": "agnostic-runmanager-batchcompiler"}}, "comment_count": 7, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-03-16T01:29:00.711412+00:00", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "merge_commit": {"hash": "d2e6c5a45151", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/d2e6c5a45151.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/d2e6c5a45151"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "When limits are exceeded during a ramp there is a exception. This exception is currently not being raised properly as it uses the variabe `limits` which is not defined. This fix changes `limits` to `self.limits` which is definded.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/28/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:c60f6b865902%0D6e993a63ccb9?from_pullrequest_id=28"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/28/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/28.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/28/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/28/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/28"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/28/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:c60f6b865902%0D6e993a63ccb9?from_pullrequest_id=28"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/28/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/28/statuses_page=1.json"}}, "title": "Minor bug fix", "close_source_branch": false, "type": "pullrequest", "id": 28, "destination": {"commit": {"hash": "6e993a63ccb9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/6e993a63ccb9.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/6e993a63ccb9"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2018-03-13T09:16:26.956890+00:00", "summary": {"raw": "When limits are exceeded during a ramp there is a exception. This exception is currently not being raised properly as it uses the variabe `limits` which is not defined. This fix changes `limits` to `self.limits` which is definded.", "markup": "markdown", "html": "<p>When limits are exceeded during a ramp there is a exception. This exception is currently not being raised properly as it uses the variabe <code>limits</code> which is not defined. This fix changes <code>limits</code> to <code>self.limits</code> which is definded.</p>", "type": "rendered"}, "source": {"commit": {"hash": "982c6284c576", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript/commit/982c6284c576"}, "html": {"href": "#!/PhyNerd/labscript/commits/982c6284c576"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript"}, "html": {"href": "#!/PhyNerd/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7ae7c0f3-4119-4307-8b3f-652003761155}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "PhyNerd/labscript", "uuid": "{7ae7c0f3-4119-4307-8b3f-652003761155}"}, "branch": {"name": "range-Exception-Fix"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-03-13T09:21:11.545456+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "c60f6b865902", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/c60f6b865902.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/c60f6b865902"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "This pull request does nothing (for novatechs) without [labscript_devices pull request #24](#!/labscript_suite/labscript_devices/pull-requests/24/default-unit-conversions-for-novatech/diff)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/29/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:efc543b4e71c%0Dc60f6b865902?from_pullrequest_id=29"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/29/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/29.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/29/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/29/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/29"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/29/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:efc543b4e71c%0Dc60f6b865902?from_pullrequest_id=29"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/29/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/29/statuses_page=1.json"}}, "title": "Allow static DDSs to get default unit conversion classes", "close_source_branch": true, "type": "pullrequest", "id": 29, "destination": {"commit": {"hash": "c60f6b865902", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/c60f6b865902.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/c60f6b865902"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2018-03-16T01:08:13.449387+00:00", "summary": {"raw": "This pull request does nothing (for novatechs) without [labscript_devices pull request #24](#!/labscript_suite/labscript_devices/pull-requests/24/default-unit-conversions-for-novatech/diff)", "markup": "markdown", "html": "<p>This pull request does nothing (for novatechs) without <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript_devices/pull-requests/24/default-unit-conversions-for-novatech/diff\" rel=\"nofollow\">labscript_devices pull request #24</a></p>", "type": "rendered"}, "source": {"commit": {"hash": "8fbbc07ef550", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/8fbbc07ef550"}, "html": {"href": "#!/cbillington/labscript/commits/8fbbc07ef550"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "branch": {"name": "staticdds_units"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-03-16T01:12:29.595242+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "efc543b4e71c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/efc543b4e71c.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/efc543b4e71c"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Hopefully this fixes issue #46", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/30/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:39ffde64a415%0Dd2e6c5a45151?from_pullrequest_id=30"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/30/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/30.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/30/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/30/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/30"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/30/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:39ffde64a415%0Dd2e6c5a45151?from_pullrequest_id=30"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/30/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/30/statuses_page=1.json"}}, "title": "Fixes issue #46", "close_source_branch": false, "type": "pullrequest", "id": 30, "destination": {"commit": {"hash": "d2e6c5a45151", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/d2e6c5a45151.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/d2e6c5a45151"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2018-03-16T01:35:16.212518+00:00", "summary": {"raw": "Hopefully this fixes issue #46", "markup": "markdown", "html": "<p>Hopefully this fixes issue <a href=\"#!/labscript_suite/labscript/issues/46/ramps-can-over-undershoot-their-final\" rel=\"nofollow\" title=\"Ramps can over-/undershoot their final value\" class=\"ap-connect-link\"><s>#46</s></a></p>", "type": "rendered"}, "source": {"commit": {"hash": "39ffde64a415", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/labscript/commit/39ffde64a415"}, "html": {"href": "#!/pstarkey/labscript/commits/39ffde64a415"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/labscript"}, "html": {"href": "#!/pstarkey/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e07b8a11-58d9-46da-8368-724e708c5ac1}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "pstarkey/labscript", "uuid": "{e07b8a11-58d9-46da-8368-724e708c5ac1}"}, "branch": {"name": "default"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-03-20T03:59:07.562001+00:00", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "merge_commit": {"hash": "39ffde64a415", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/39ffde64a415.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/39ffde64a415"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Updates to RemoteWorker and similar classes for launching workers, BLACS tabs, etc. after discussions with Chris Billington\r\n\r\nSome examples of use would be:\r\n\r\n```python\r\n# remote devices\r\nRemoteBLACS('raspberry_pi_1', 'rpi1.physics.monash.edu')\r\nRemoteBLACS('raspberry_pi_2', '192.168.0.13', parent=raspberry_pi_1) # pi-2 on private network only accessible to pi-1\r\nRemoteBLACS('raspberry_pi_3', 'rpi3.physics.monash.edu')\r\n\r\n# Connection Table\r\nNovaTechDDS9m(name='n1', com_port='COM1', gui=raspberry_pi_1) # worker and GUI on same machine\r\nNovaTechDDS9m(name='n2', com_port='COM1', gui=raspberry_pi_1, worker=raspberry_pi_2) # worker and GUI on separate remote machines\r\nNovaTechDDS9m(name='n3', com_port='COM1', worker=raspberry_pi_3) # only worker on remote machine\r\n```\r\n\r\nThese launch remote BLACS tabs and workers as appropriate \\(and are automatically managed/restarted/etc by a zprocess based broker system under development by Chris Billington\\). SecondaryControlSystem will be used to handle communication with other programs \\(which could include BLACS theoretically\\) that are not to be automatically managed, but require starting/restarting by the user manually.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/31/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:e3ac76acb92b%0D39ffde64a415?from_pullrequest_id=31"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/31/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/31.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/31/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/31/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/31"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/31/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:e3ac76acb92b%0D39ffde64a415?from_pullrequest_id=31"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/31/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/31/statuses_page=1.json"}}, "title": "Updates to RemoteWorker and similar classes", "close_source_branch": true, "type": "pullrequest", "id": 31, "destination": {"commit": {"hash": "39ffde64a415", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/39ffde64a415.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/39ffde64a415"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2018-03-16T01:51:34.982014+00:00", "summary": {"raw": "Updates to RemoteWorker and similar classes for launching workers, BLACS tabs, etc. after discussions with Chris Billington\r\n\r\nSome examples of use would be:\r\n\r\n```python\r\n# remote devices\r\nRemoteBLACS('raspberry_pi_1', 'rpi1.physics.monash.edu')\r\nRemoteBLACS('raspberry_pi_2', '192.168.0.13', parent=raspberry_pi_1) # pi-2 on private network only accessible to pi-1\r\nRemoteBLACS('raspberry_pi_3', 'rpi3.physics.monash.edu')\r\n\r\n# Connection Table\r\nNovaTechDDS9m(name='n1', com_port='COM1', gui=raspberry_pi_1) # worker and GUI on same machine\r\nNovaTechDDS9m(name='n2', com_port='COM1', gui=raspberry_pi_1, worker=raspberry_pi_2) # worker and GUI on separate remote machines\r\nNovaTechDDS9m(name='n3', com_port='COM1', worker=raspberry_pi_3) # only worker on remote machine\r\n```\r\n\r\nThese launch remote BLACS tabs and workers as appropriate \\(and are automatically managed/restarted/etc by a zprocess based broker system under development by Chris Billington\\). SecondaryControlSystem will be used to handle communication with other programs \\(which could include BLACS theoretically\\) that are not to be automatically managed, but require starting/restarting by the user manually.", "markup": "markdown", "html": "<p>Updates to RemoteWorker and similar classes for launching workers, BLACS tabs, etc. after discussions with Chris Billington</p>\n<p>Some examples of use would be:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"c1\"># remote devices</span>\n<span class=\"n\">RemoteBLACS</span><span class=\"p\">(</span><span class=\"s1\">&#39;raspberry_pi_1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rpi1.physics.monash.edu&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">RemoteBLACS</span><span class=\"p\">(</span><span class=\"s1\">&#39;raspberry_pi_2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;192.168.0.13&#39;</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"n\">raspberry_pi_1</span><span class=\"p\">)</span> <span class=\"c1\"># pi-2 on private network only accessible to pi-1</span>\n<span class=\"n\">RemoteBLACS</span><span class=\"p\">(</span><span class=\"s1\">&#39;raspberry_pi_3&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rpi3.physics.monash.edu&#39;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Connection Table</span>\n<span class=\"n\">NovaTechDDS9m</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;n1&#39;</span><span class=\"p\">,</span> <span class=\"n\">com_port</span><span class=\"o\">=</span><span class=\"s1\">&#39;COM1&#39;</span><span class=\"p\">,</span> <span class=\"n\">gui</span><span class=\"o\">=</span><span class=\"n\">raspberry_pi_1</span><span class=\"p\">)</span> <span class=\"c1\"># worker and GUI on same machine</span>\n<span class=\"n\">NovaTechDDS9m</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;n2&#39;</span><span class=\"p\">,</span> <span class=\"n\">com_port</span><span class=\"o\">=</span><span class=\"s1\">&#39;COM1&#39;</span><span class=\"p\">,</span> <span class=\"n\">gui</span><span class=\"o\">=</span><span class=\"n\">raspberry_pi_1</span><span class=\"p\">,</span> <span class=\"n\">worker</span><span class=\"o\">=</span><span class=\"n\">raspberry_pi_2</span><span class=\"p\">)</span> <span class=\"c1\"># worker and GUI on separate remote machines</span>\n<span class=\"n\">NovaTechDDS9m</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;n3&#39;</span><span class=\"p\">,</span> <span class=\"n\">com_port</span><span class=\"o\">=</span><span class=\"s1\">&#39;COM1&#39;</span><span class=\"p\">,</span> <span class=\"n\">worker</span><span class=\"o\">=</span><span class=\"n\">raspberry_pi_3</span><span class=\"p\">)</span> <span class=\"c1\"># only worker on remote machine</span>\n</pre></div>\n\n\n<p>These launch remote BLACS tabs and workers as appropriate (and are automatically managed/restarted/etc by a zprocess based broker system under development by Chris Billington). SecondaryControlSystem will be used to handle communication with other programs (which could include BLACS theoretically) that are not to be automatically managed, but require starting/restarting by the user manually.</p>", "type": "rendered"}, "source": {"commit": {"hash": "2c3324d18131", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/labscript/commit/2c3324d18131"}, "html": {"href": "#!/pstarkey/labscript/commits/2c3324d18131"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/labscript"}, "html": {"href": "#!/pstarkey/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e07b8a11-58d9-46da-8368-724e708c5ac1}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "pstarkey/labscript", "uuid": "{e07b8a11-58d9-46da-8368-724e708c5ac1}"}, "branch": {"name": "remote-device-connections"}}, "comment_count": 10, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-03-21T23:25:13.363903+00:00", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "merge_commit": {"hash": "e3ac76acb92b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/e3ac76acb92b.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/e3ac76acb92b"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "As issue #38 correctly states saving the mercurial information of experiment scripts is really slow. This adds the ability to disable mercurial. \r\n\r\nMercurial is still active as default but I would opt for making the default inactive.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/32/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:f968e0ddd37b%0Dee4464bfd9e1?from_pullrequest_id=32"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/32/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/32.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/32/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/32/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/32"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/32/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:f968e0ddd37b%0Dee4464bfd9e1?from_pullrequest_id=32"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/32/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/32/statuses_page=1.json"}}, "title": "Added ability to not store hg information", "close_source_branch": true, "type": "pullrequest", "id": 32, "destination": {"commit": {"hash": "ee4464bfd9e1", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/ee4464bfd9e1.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/ee4464bfd9e1"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2018-03-27T20:31:25.914765+00:00", "summary": {"raw": "As issue #38 correctly states saving the mercurial information of experiment scripts is really slow. This adds the ability to disable mercurial. \r\n\r\nMercurial is still active as default but I would opt for making the default inactive.", "markup": "markdown", "html": "<p>As issue <a href=\"#!/labscript_suite/labscript/issues/38/saving-of-hg-info-slows-down-compilation\" rel=\"nofollow\" title=\"Saving of hg info slows down compilation\" class=\"ap-connect-link\">#38</a> correctly states saving the mercurial information of experiment scripts is really slow. This adds the ability to disable mercurial. </p>\n<p>Mercurial is still active as default but I would opt for making the default inactive.</p>", "type": "rendered"}, "source": {"commit": {"hash": "46e862b26110", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript/commit/46e862b26110"}, "html": {"href": "#!/PhyNerd/labscript/commits/46e862b26110"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript"}, "html": {"href": "#!/PhyNerd/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7ae7c0f3-4119-4307-8b3f-652003761155}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "PhyNerd/labscript", "uuid": "{7ae7c0f3-4119-4307-8b3f-652003761155}"}, "branch": {"name": "optional-hg"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-03-27T23:33:37.482668+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "f968e0ddd37b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/f968e0ddd37b.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/f968e0ddd37b"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "* Added optional printing of markers during compilation\r\n\r\nUsing the keyword argument \"verbose\" you can turn on printing so that when compiling, your markers will be printed as \"t = 1.234567890 s: Marker description\"\r\n\r\nAlso introduced a print_time function, which seems to be in use in the Monash Spinor lab, and was used in a pulse function for DDS devices, despite the function not actually existing. I've made this print function in the functions.py file, so fixed the function call in the DDS class to point to this.\r\n\r\nPrint time is currently printing time to 9 decimal places.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/33/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:c7fd00487ddf%0Df968e0ddd37b?from_pullrequest_id=33"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/33/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/33.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/33/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/33/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/33"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/33/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:c7fd00487ddf%0Df968e0ddd37b?from_pullrequest_id=33"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/33/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/33/statuses_page=1.json"}}, "title": "Verbose markers", "close_source_branch": true, "type": "pullrequest", "id": 33, "destination": {"commit": {"hash": "f968e0ddd37b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/f968e0ddd37b.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/f968e0ddd37b"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2018-05-09T08:50:16.566158+00:00", "summary": {"raw": "* Added optional printing of markers during compilation\r\n\r\nUsing the keyword argument \"verbose\" you can turn on printing so that when compiling, your markers will be printed as \"t = 1.234567890 s: Marker description\"\r\n\r\nAlso introduced a print_time function, which seems to be in use in the Monash Spinor lab, and was used in a pulse function for DDS devices, despite the function not actually existing. I've made this print function in the functions.py file, so fixed the function call in the DDS class to point to this.\r\n\r\nPrint time is currently printing time to 9 decimal places.", "markup": "markdown", "html": "<ul>\n<li>Added optional printing of markers during compilation</li>\n</ul>\n<p>Using the keyword argument \"verbose\" you can turn on printing so that when compiling, your markers will be printed as \"t = 1.<a href=\"#!/labscript_suite/labscript/commits/234567890\" rel=\"nofollow\" class=\"ap-connect-link\">234567890</a> s: Marker description\"</p>\n<p>Also introduced a print_time function, which seems to be in use in the Monash Spinor lab, and was used in a pulse function for DDS devices, despite the function not actually existing. I've made this print function in the functions.py file, so fixed the function call in the DDS class to point to this.</p>\n<p>Print time is currently printing time to 9 decimal places.</p>", "type": "rendered"}, "source": {"commit": {"hash": "af9fd0a1739f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/shjohnst/labscript/commit/af9fd0a1739f"}, "html": {"href": "#!/shjohnst/labscript/commits/af9fd0a1739f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/shjohnst/labscript"}, "html": {"href": "#!/shjohnst/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7abe33d7-0b22-49e6-bb15-ec1d22835819}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "shjohnst/labscript", "uuid": "{7abe33d7-0b22-49e6-bb15-ec1d22835819}"}, "branch": {"name": "verbose-markers"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-05-11T01:29:22.599886+00:00", "author": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "merge_commit": {"hash": "c7fd00487ddf", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/c7fd00487ddf.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/c7fd00487ddf"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Permit the trigger slope to be specified \\(rising or falling\\) for the timeout trigger device of a wait \\(`timeout_connection`\\). This is distinct from the `trigger_edge_type` of the `WaitMonitor.connection`, which is by default rising, unless specificied otherwise in the kwargs of `WaitMonitor.__init`\\_\\_. This is useful for PulseBlaster devices that trigger off a falling edge.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/34/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:e6b5718fe9e0%0Dc504488c533e?from_pullrequest_id=34"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/34/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/34.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/34/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/34/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/34"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/34/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:e6b5718fe9e0%0Dc504488c533e?from_pullrequest_id=34"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/34/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/34/statuses_page=1.json"}}, "title": "Permit trigger slope to be specified for wait timeouts", "close_source_branch": true, "type": "pullrequest", "id": 34, "destination": {"commit": {"hash": "c504488c533e", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/c504488c533e.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/c504488c533e"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2018-05-30T02:11:58.000002+00:00", "summary": {"raw": "Permit the trigger slope to be specified \\(rising or falling\\) for the timeout trigger device of a wait \\(`timeout_connection`\\). This is distinct from the `trigger_edge_type` of the `WaitMonitor.connection`, which is by default rising, unless specificied otherwise in the kwargs of `WaitMonitor.__init`\\_\\_. This is useful for PulseBlaster devices that trigger off a falling edge.", "markup": "markdown", "html": "<p>Permit the trigger slope to be specified (rising or falling) for the timeout trigger device of a wait (<code>timeout_connection</code>). This is distinct from the <code>trigger_edge_type</code> of the <code>WaitMonitor.connection</code>, which is by default rising, unless specificied otherwise in the kwargs of <code>WaitMonitor.__init</code>__. This is useful for PulseBlaster devices that trigger off a falling edge.</p>", "type": "rendered"}, "source": {"commit": {"hash": "6022c9a542ae", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/labscript/commit/6022c9a542ae"}, "html": {"href": "#!/monashspinor/labscript/commits/6022c9a542ae"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/labscript"}, "html": {"href": "#!/monashspinor/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{73852c03-7486-4603-be8a-3bf277ec77cc}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "monashspinor/labscript", "uuid": "{73852c03-7486-4603-be8a-3bf277ec77cc}"}, "branch": {"name": "timeout_trigger_type"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-09-12T20:35:19.735363+00:00", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "merge_commit": {"hash": "e6b5718fe9e0", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/e6b5718fe9e0.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/e6b5718fe9e0"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/35/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:2a7301468eb0%0Dc7fd00487ddf?from_pullrequest_id=35"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/35/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/35.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/35/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/35/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/35"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/35/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:2a7301468eb0%0Dc7fd00487ddf?from_pullrequest_id=35"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/35/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/35/statuses_page=1.json"}}, "title": "Resolves issue #47, where WAIT instructions were not issued to a clock.", "close_source_branch": true, "type": "pullrequest", "id": 35, "destination": {"commit": {"hash": "c7fd00487ddf", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/c7fd00487ddf.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/c7fd00487ddf"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2018-05-30T05:50:04.846900+00:00", "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "source": {"commit": {"hash": "0f189af625ad", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/labscript/commit/0f189af625ad"}, "html": {"href": "#!/monashspinor/labscript/commits/0f189af625ad"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/labscript"}, "html": {"href": "#!/monashspinor/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{73852c03-7486-4603-be8a-3bf277ec77cc}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "monashspinor/labscript", "uuid": "{73852c03-7486-4603-be8a-3bf277ec77cc}"}, "branch": {"name": "missing_wait_bugfix"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-05-30T07:09:26.614102+00:00", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "merge_commit": {"hash": "2a7301468eb0", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/2a7301468eb0.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/2a7301468eb0"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "The equal comparison `t == \u2018initial\u2019` when `t` is numeric  \\(`numpy.float64`\\) results in `UnicodeWarning`. This is avoided by type checking `t` first.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/36/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:a5f5fb8262eb%0D2a7301468eb0?from_pullrequest_id=36"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/36/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/36.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/36/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/36/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/36"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/36/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:a5f5fb8262eb%0D2a7301468eb0?from_pullrequest_id=36"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/36/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/36/statuses_page=1.json"}}, "title": "Avoid UnicodeWarning when checking t == 'initial'", "close_source_branch": true, "type": "pullrequest", "id": 36, "destination": {"commit": {"hash": "2a7301468eb0", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/2a7301468eb0.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/2a7301468eb0"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2018-06-01T05:54:36.301795+00:00", "summary": {"raw": "The equal comparison `t == \u2018initial\u2019` when `t` is numeric  \\(`numpy.float64`\\) results in `UnicodeWarning`. This is avoided by type checking `t` first.", "markup": "markdown", "html": "<p>The equal comparison <code>t == \u2018initial\u2019</code> when <code>t</code> is numeric  (<code>numpy.float64</code>) results in <code>UnicodeWarning</code>. This is avoided by type checking <code>t</code> first.</p>", "type": "rendered"}, "source": {"commit": {"hash": "804348a9120f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/labscript/commit/804348a9120f"}, "html": {"href": "#!/monashspinor/labscript/commits/804348a9120f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/labscript"}, "html": {"href": "#!/monashspinor/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{73852c03-7486-4603-be8a-3bf277ec77cc}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "monashspinor/labscript", "uuid": "{73852c03-7486-4603-be8a-3bf277ec77cc}"}, "branch": {"name": "prevent_unicode_warning"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-06-01T06:17:49.558633+00:00", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "merge_commit": {"hash": "a5f5fb8262eb", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/a5f5fb8262eb.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/a5f5fb8262eb"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Re-do of pull request #12, which was backed out due to a bug.\r\n\r\nProvide start_order and stop_order for devices, to specify what order BLACS should transition them to buffered mode and manual mode respectively. Allows any integer, default is zero, max and min not specified. If specified on a device without a BLACS_connection attribute, a TypeError is raised during compilation. start_order and stop_order are saved as device_properties, and thus can vary from shot-to-shot without a connection table recompilation.\r\n\r\nAt a later date (labscript 3?), devices connected directly to BLACS will\r\nprobably be a subclass of a BLACSDevice mixin class or something like that,\r\nat which point we can make only these classes have the keyword arguments in the\r\nfirst place. For the moment however this seems like a workable implementation - for all devices to have it, and to raise an error on the ones to which it does not apply.\r\n\r\nThis feature is aimed at the creation of a 'device' for running scripts during transition to manual or transition to buffered, and typically one would want a script to run at the end of the shot after other devices have transitioned to manual. Being able to run some basic analysis in a synchronous way (i.e. not waiting for lyse, which might be busy) at the end of a shot, in order to influence the next shot (with the upcoming runmanager just-in-time compilation feature), is important for some feedback/feed-forward applications such as dynamic magnetic field cancellation. This is discussed in issue #18.\r\n\r\nThere are other reasons to specify transition orders too, such as debugging the effect of spurious pulses from PulseBlasters during transition_to_buffered.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/37/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:c504488c533e%0D4b83a4b8a6c2?from_pullrequest_id=37"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/37/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/37.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/37/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/37/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/37"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/37/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:c504488c533e%0D4b83a4b8a6c2?from_pullrequest_id=37"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/37/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/37/statuses_page=1.json"}}, "title": "start_order and stop_order", "close_source_branch": true, "type": "pullrequest", "id": 37, "destination": {"commit": {"hash": "4b83a4b8a6c2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/4b83a4b8a6c2.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/4b83a4b8a6c2"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2018-08-01T15:40:46.368463+00:00", "summary": {"raw": "Re-do of pull request #12, which was backed out due to a bug.\r\n\r\nProvide start_order and stop_order for devices, to specify what order BLACS should transition them to buffered mode and manual mode respectively. Allows any integer, default is zero, max and min not specified. If specified on a device without a BLACS_connection attribute, a TypeError is raised during compilation. start_order and stop_order are saved as device_properties, and thus can vary from shot-to-shot without a connection table recompilation.\r\n\r\nAt a later date (labscript 3?), devices connected directly to BLACS will\r\nprobably be a subclass of a BLACSDevice mixin class or something like that,\r\nat which point we can make only these classes have the keyword arguments in the\r\nfirst place. For the moment however this seems like a workable implementation - for all devices to have it, and to raise an error on the ones to which it does not apply.\r\n\r\nThis feature is aimed at the creation of a 'device' for running scripts during transition to manual or transition to buffered, and typically one would want a script to run at the end of the shot after other devices have transitioned to manual. Being able to run some basic analysis in a synchronous way (i.e. not waiting for lyse, which might be busy) at the end of a shot, in order to influence the next shot (with the upcoming runmanager just-in-time compilation feature), is important for some feedback/feed-forward applications such as dynamic magnetic field cancellation. This is discussed in issue #18.\r\n\r\nThere are other reasons to specify transition orders too, such as debugging the effect of spurious pulses from PulseBlasters during transition_to_buffered.", "markup": "markdown", "html": "<p>Re-do of <a href=\"#!/labscript_suite/labscript/pull-requests/12/provides-start_order-and-stop_order-as-per\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #12</a>, which was backed out due to a bug.</p>\n<p>Provide start_order and stop_order for devices, to specify what order BLACS should transition them to buffered mode and manual mode respectively. Allows any integer, default is zero, max and min not specified. If specified on a device without a BLACS_connection attribute, a TypeError is raised during compilation. start_order and stop_order are saved as device_properties, and thus can vary from shot-to-shot without a connection table recompilation.</p>\n<p>At a later date (labscript 3?), devices connected directly to BLACS will\nprobably be a subclass of a BLACSDevice mixin class or something like that,\nat which point we can make only these classes have the keyword arguments in the\nfirst place. For the moment however this seems like a workable implementation - for all devices to have it, and to raise an error on the ones to which it does not apply.</p>\n<p>This feature is aimed at the creation of a 'device' for running scripts during transition to manual or transition to buffered, and typically one would want a script to run at the end of the shot after other devices have transitioned to manual. Being able to run some basic analysis in a synchronous way (i.e. not waiting for lyse, which might be busy) at the end of a shot, in order to influence the next shot (with the upcoming runmanager just-in-time compilation feature), is important for some feedback/feed-forward applications such as dynamic magnetic field cancellation. This is discussed in issue <a href=\"#!/labscript_suite/labscript/issues/18/execution-of-small-or-time-critical\" rel=\"nofollow\" title=\"Execution of small or time-critical analysis scripts as part of running shot\" class=\"ap-connect-link\">#18</a>.</p>\n<p>There are other reasons to specify transition orders too, such as debugging the effect of spurious pulses from PulseBlasters during transition_to_buffered.</p>", "type": "rendered"}, "source": {"commit": {"hash": "d1577a35c6cb", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/d1577a35c6cb"}, "html": {"href": "#!/cbillington/labscript/commits/d1577a35c6cb"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "branch": {"name": "transition_order"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-08-20T14:45:39.436281+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "c504488c533e", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/c504488c533e.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/c504488c533e"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Fixes broken \"pulse\" function for DDS outputs, including option to pass in units, and compatibility with DDS outputs that do not have a gate.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/38/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:4b83a4b8a6c2%0Da5f5fb8262eb?from_pullrequest_id=38"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/38/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/38.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/38/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/38/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/38"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/38/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:4b83a4b8a6c2%0Da5f5fb8262eb?from_pullrequest_id=38"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/38/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/38/statuses_page=1.json"}}, "title": "DDS pulse bugfix", "close_source_branch": true, "type": "pullrequest", "id": 38, "destination": {"commit": {"hash": "a5f5fb8262eb", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/a5f5fb8262eb.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/a5f5fb8262eb"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2018-08-10T03:11:48.369831+00:00", "summary": {"raw": "Fixes broken \"pulse\" function for DDS outputs, including option to pass in units, and compatibility with DDS outputs that do not have a gate.", "markup": "markdown", "html": "<p>Fixes broken \"pulse\" function for DDS outputs, including option to pass in units, and compatibility with DDS outputs that do not have a gate.</p>", "type": "rendered"}, "source": {"commit": {"hash": "b0ac55fd6a45", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/labscript/commit/b0ac55fd6a45"}, "html": {"href": "#!/monashkrb/labscript/commits/b0ac55fd6a45"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/labscript"}, "html": {"href": "#!/monashkrb/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4d42e2d0-41cf-4474-ac4a-eaf59f1279fb}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "monashkrb/labscript", "uuid": "{4d42e2d0-41cf-4474-ac4a-eaf59f1279fb}"}, "branch": {"name": "dds_pulse_bugfix"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-08-10T04:21:24.594411+00:00", "author": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "merge_commit": {"hash": "4b83a4b8a6c2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/4b83a4b8a6c2.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/4b83a4b8a6c2"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Fix bug where setting static digital quantities had no effect.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/39/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:fa1636c366f2%0De6b5718fe9e0?from_pullrequest_id=39"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/39/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/39.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/39/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/39/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/39"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/39/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:fa1636c366f2%0De6b5718fe9e0?from_pullrequest_id=39"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/39/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/39/statuses_page=1.json"}}, "title": "Static DO fix", "close_source_branch": true, "type": "pullrequest", "id": 39, "destination": {"commit": {"hash": "e6b5718fe9e0", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/e6b5718fe9e0.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/e6b5718fe9e0"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2018-09-14T20:56:33.656360+00:00", "summary": {"raw": "Fix bug where setting static digital quantities had no effect.", "markup": "markdown", "html": "<p>Fix bug where setting static digital quantities had no effect.</p>", "type": "rendered"}, "source": {"commit": {"hash": "43a5d2f031e6", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/43a5d2f031e6"}, "html": {"href": "#!/cbillington/labscript/commits/43a5d2f031e6"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "branch": {"name": "bugfix"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-09-25T19:54:15.487214+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "fa1636c366f2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/fa1636c366f2.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/fa1636c366f2"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Slightly modified semantics of set_passed_properties.\r\n\r\n* non-keyword arguments can now be saved as well as keyword arguments.\r\n* If an instance attribute exists with the same name as an argument after\r\n   `__init__` runs, its value will be saved instead.\r\n\r\nThe non-keyword arguments simply fixes a deficiency, presently, to get auto-saving of properties you have to pass in the properties as keyword arguments - if you pass them in as positional args, things break pretty confusingly. There is a workaround in the NI devices at the moment in which clock_terminal is saved as a property at the end of `generate_code` instead of using `set_passed_properties` to get around this.\r\n\r\nInstance attributes taking precedence over passed args allows you to be smarter with default arguments. For example it's bad form to have mutable default arguments, and so where one would be used, common idiom is to instead set the default argument to `None` and within the method do something like:\r\n```python\r\nself. foo = foo if foo is not None else {}\r\n```\r\nSimilarly in our NI_DAQmx classes, the default for `MAX_name`, if not specified, is to use the labscript device name. The logic for this is in `NIBoard.__init__`:\r\n```python\r\nself.MAX_name = name if MAX_name is None else MAX_name\r\n```\r\n Although BLACS_connection is used to talk to the device and so it doesn't matter, the value of `MAX_name` saved as a device_property, doesn't respect this processing that may have been done, and so might simply be wrong.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/40/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:567ec578e997%0D9180bd362618?from_pullrequest_id=40"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/40/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/40.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/40/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/40/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/40"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/40/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:567ec578e997%0D9180bd362618?from_pullrequest_id=40"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/40/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/40/statuses_page=1.json"}}, "title": "Changes to set_passed_properties", "close_source_branch": true, "type": "pullrequest", "id": 40, "destination": {"commit": {"hash": "9180bd362618", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/9180bd362618.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/9180bd362618"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2018-10-02T21:40:05.133739+00:00", "summary": {"raw": "Slightly modified semantics of set_passed_properties.\r\n\r\n* non-keyword arguments can now be saved as well as keyword arguments.\r\n* If an instance attribute exists with the same name as an argument after\r\n   `__init__` runs, its value will be saved instead.\r\n\r\nThe non-keyword arguments simply fixes a deficiency, presently, to get auto-saving of properties you have to pass in the properties as keyword arguments - if you pass them in as positional args, things break pretty confusingly. There is a workaround in the NI devices at the moment in which clock_terminal is saved as a property at the end of `generate_code` instead of using `set_passed_properties` to get around this.\r\n\r\nInstance attributes taking precedence over passed args allows you to be smarter with default arguments. For example it's bad form to have mutable default arguments, and so where one would be used, common idiom is to instead set the default argument to `None` and within the method do something like:\r\n```python\r\nself. foo = foo if foo is not None else {}\r\n```\r\nSimilarly in our NI_DAQmx classes, the default for `MAX_name`, if not specified, is to use the labscript device name. The logic for this is in `NIBoard.__init__`:\r\n```python\r\nself.MAX_name = name if MAX_name is None else MAX_name\r\n```\r\n Although BLACS_connection is used to talk to the device and so it doesn't matter, the value of `MAX_name` saved as a device_property, doesn't respect this processing that may have been done, and so might simply be wrong.", "markup": "markdown", "html": "<p>Slightly modified semantics of set_passed_properties.</p>\n<ul>\n<li>non-keyword arguments can now be saved as well as keyword arguments.</li>\n<li>If an instance attribute exists with the same name as an argument after\n   <code>__init__</code> runs, its value will be saved instead.</li>\n</ul>\n<p>The non-keyword arguments simply fixes a deficiency, presently, to get auto-saving of properties you have to pass in the properties as keyword arguments - if you pass them in as positional args, things break pretty confusingly. There is a workaround in the NI devices at the moment in which clock_terminal is saved as a property at the end of <code>generate_code</code> instead of using <code>set_passed_properties</code> to get around this.</p>\n<p>Instance attributes taking precedence over passed args allows you to be smarter with default arguments. For example it's bad form to have mutable default arguments, and so where one would be used, common idiom is to instead set the default argument to <code>None</code> and within the method do something like:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"bp\">self</span><span class=\"o\">.</span> <span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">foo</span> <span class=\"k\">if</span> <span class=\"n\">foo</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span> <span class=\"k\">else</span> <span class=\"p\">{}</span>\n</pre></div>\n\n\n<p>Similarly in our NI_DAQmx classes, the default for <code>MAX_name</code>, if not specified, is to use the labscript device name. The logic for this is in <code>NIBoard.__init__</code>:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">MAX_name</span> <span class=\"o\">=</span> <span class=\"n\">name</span> <span class=\"k\">if</span> <span class=\"n\">MAX_name</span> <span class=\"ow\">is</span> <span class=\"bp\">None</span> <span class=\"k\">else</span> <span class=\"n\">MAX_name</span>\n</pre></div>\n\n\n<p>Although BLACS_connection is used to talk to the device and so it doesn't matter, the value of <code>MAX_name</code> saved as a device_property, doesn't respect this processing that may have been done, and so might simply be wrong.</p>", "type": "rendered"}, "source": {"commit": {"hash": "a13f253e2182", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/a13f253e2182"}, "html": {"href": "#!/cbillington/labscript/commits/a13f253e2182"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "branch": {"name": "properties"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-10-22T17:51:08.614700+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "567ec578e997", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/567ec578e997.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/567ec578e997"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Allow parent of IntermediateDevice to be None. This is useful for devices that can operate in static or buffered mode depending on instantiation settings.\r\n\r\nUse case: some DAQmx devices have only static outputs, and even those that\r\nhave buffered outputs can be operated in static mode without a clock. It doesn't make\r\na lot of sense to change what type of class they are based on how they are\r\nconfigured (e.g. with instantiation arguments), so I figure the least odd thing\r\nto do is just extend IntermediateDevice's definition into devices that *might*\r\nbe clocked, but don't necessarily have to be.\r\n\r\nNot 100% sure if it's related, but also have the t0 property return zero when an output doesn't have a pseudoclock. This prevents an error when calling go_high() on a static digital out for example, the underlying implementation of which sets an instruction at t=0 which comes with error checking that it isn't before t0 for that device.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/41/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:9180bd362618%0D0b6236239c05?from_pullrequest_id=41"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/41/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/41.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/41/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/41/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/41"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/41/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:9180bd362618%0D0b6236239c05?from_pullrequest_id=41"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/41/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/41/statuses_page=1.json"}}, "title": "Allow parent of IntermediateDevice to be None", "close_source_branch": true, "type": "pullrequest", "id": 41, "destination": {"commit": {"hash": "0b6236239c05", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/0b6236239c05.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/0b6236239c05"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2018-10-04T21:04:20.772221+00:00", "summary": {"raw": "Allow parent of IntermediateDevice to be None. This is useful for devices that can operate in static or buffered mode depending on instantiation settings.\r\n\r\nUse case: some DAQmx devices have only static outputs, and even those that\r\nhave buffered outputs can be operated in static mode without a clock. It doesn't make\r\na lot of sense to change what type of class they are based on how they are\r\nconfigured (e.g. with instantiation arguments), so I figure the least odd thing\r\nto do is just extend IntermediateDevice's definition into devices that *might*\r\nbe clocked, but don't necessarily have to be.\r\n\r\nNot 100% sure if it's related, but also have the t0 property return zero when an output doesn't have a pseudoclock. This prevents an error when calling go_high() on a static digital out for example, the underlying implementation of which sets an instruction at t=0 which comes with error checking that it isn't before t0 for that device.", "markup": "markdown", "html": "<p>Allow parent of IntermediateDevice to be None. This is useful for devices that can operate in static or buffered mode depending on instantiation settings.</p>\n<p>Use case: some DAQmx devices have only static outputs, and even those that\nhave buffered outputs can be operated in static mode without a clock. It doesn't make\na lot of sense to change what type of class they are based on how they are\nconfigured (e.g. with instantiation arguments), so I figure the least odd thing\nto do is just extend IntermediateDevice's definition into devices that <em>might</em>\nbe clocked, but don't necessarily have to be.</p>\n<p>Not 100% sure if it's related, but also have the t0 property return zero when an output doesn't have a pseudoclock. This prevents an error when calling go_high() on a static digital out for example, the underlying implementation of which sets an instruction at t=0 which comes with error checking that it isn't before t0 for that device.</p>", "type": "rendered"}, "source": {"commit": {"hash": "57600d57c73a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/57600d57c73a"}, "html": {"href": "#!/cbillington/labscript/commits/57600d57c73a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "branch": {"name": "parentless_IntermediateDevice"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-10-22T17:49:01.818736+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "9180bd362618", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/9180bd362618.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/9180bd362618"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "If the wait monitor acquisition device has a 'wait_monitor_minimum_pulse_width'\r\nattribute indicating the shortest pulse the wait monitor acquisition device can\r\nmeasure, then have labscript not produce wait monitor pulses shorter than this.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/42/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:0b6236239c05%0Dfa1636c366f2?from_pullrequest_id=42"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/42/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/42.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/42/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/42/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/42"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/42/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:0b6236239c05%0Dfa1636c366f2?from_pullrequest_id=42"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/42/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/42/statuses_page=1.json"}}, "title": "Have wait monitor pulses not exceed acquisition device's capabilities", "close_source_branch": true, "type": "pullrequest", "id": 42, "destination": {"commit": {"hash": "fa1636c366f2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/fa1636c366f2.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/fa1636c366f2"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2018-10-16T18:32:22.539182+00:00", "summary": {"raw": "If the wait monitor acquisition device has a 'wait_monitor_minimum_pulse_width'\r\nattribute indicating the shortest pulse the wait monitor acquisition device can\r\nmeasure, then have labscript not produce wait monitor pulses shorter than this.", "markup": "markdown", "html": "<p>If the wait monitor acquisition device has a 'wait_monitor_minimum_pulse_width'\nattribute indicating the shortest pulse the wait monitor acquisition device can\nmeasure, then have labscript not produce wait monitor pulses shorter than this.</p>", "type": "rendered"}, "source": {"commit": {"hash": "9eccd319a2bd", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/9eccd319a2bd"}, "html": {"href": "#!/cbillington/labscript/commits/9eccd319a2bd"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "branch": {"name": "wait_monitor_minimum_pulse_width"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-10-22T17:48:46.929222+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "0b6236239c05", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/0b6236239c05.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/0b6236239c05"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "We previously only checked that instructions on clocklines were not too close together for the clock limit \\(i.e. was an instruction on clockline A too close to the next instruction on clockline A, and was instruction B too close to the next instruction on clockline B\\). However, this does not catch the case where an instruction on clockline B is close to an instruction on clockline A, thus forcing the pulse on clockline A to be shorter than it would otherwise.\r\n\r\nThis case is now caught in the below patch.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/43/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:83f160ced6d6%0D05cf8b9676a9?from_pullrequest_id=43"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/43/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/43.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/43/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/43/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/43"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/43/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:83f160ced6d6%0D05cf8b9676a9?from_pullrequest_id=43"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/43/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/43/statuses_page=1.json"}}, "title": "Fixed bug in gated clocks feature", "close_source_branch": true, "type": "pullrequest", "id": 43, "destination": {"commit": {"hash": "05cf8b9676a9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/05cf8b9676a9.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/05cf8b9676a9"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2019-01-15T01:19:48.001875+00:00", "summary": {"raw": "We previously only checked that instructions on clocklines were not too close together for the clock limit \\(i.e. was an instruction on clockline A too close to the next instruction on clockline A, and was instruction B too close to the next instruction on clockline B\\). However, this does not catch the case where an instruction on clockline B is close to an instruction on clockline A, thus forcing the pulse on clockline A to be shorter than it would otherwise.\r\n\r\nThis case is now caught in the below patch.", "markup": "markdown", "html": "<p>We previously only checked that instructions on clocklines were not too close together for the clock limit (i.e. was an instruction on clockline A too close to the next instruction on clockline A, and was instruction B too close to the next instruction on clockline B). However, this does not catch the case where an instruction on clockline B is close to an instruction on clockline A, thus forcing the pulse on clockline A to be shorter than it would otherwise.</p>\n<p>This case is now caught in the below patch.</p>", "type": "rendered"}, "source": {"commit": {"hash": "b74958231436", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/labscript/commit/b74958231436"}, "html": {"href": "#!/pstarkey/labscript/commits/b74958231436"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/labscript"}, "html": {"href": "#!/pstarkey/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e07b8a11-58d9-46da-8368-724e708c5ac1}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "pstarkey/labscript", "uuid": "{e07b8a11-58d9-46da-8368-724e708c5ac1}"}, "branch": {"name": "GatedClocks-bugfix"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-06-11T18:48:40.478123+00:00", "author": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "merge_commit": {"hash": "83f160ced6d6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/83f160ced6d6.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/83f160ced6d6"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "We have discovered in a few places now that just because a module has a `__file__` attribute, doesn't mean it's not `None`. I think a submodule of a recent version of matplotlib has a `__file__` that exists but is `None`.\r\n\r\nThis PR removes one more such assumption that otherwise led to a crash.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/44/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:e6076d69c4da%0D86dd1508623e?from_pullrequest_id=44"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/44/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/44.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/44/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/44/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/44"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/44/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:e6076d69c4da%0D86dd1508623e?from_pullrequest_id=44"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/44/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/44/statuses_page=1.json"}}, "title": "Do not assume `__file__` is not None if it exists.", "close_source_branch": true, "type": "pullrequest", "id": 44, "destination": {"commit": {"hash": "86dd1508623e", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/86dd1508623e.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/86dd1508623e"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2019-01-17T22:24:39.445583+00:00", "summary": {"raw": "We have discovered in a few places now that just because a module has a `__file__` attribute, doesn't mean it's not `None`. I think a submodule of a recent version of matplotlib has a `__file__` that exists but is `None`.\r\n\r\nThis PR removes one more such assumption that otherwise led to a crash.", "markup": "markdown", "html": "<p>We have discovered in a few places now that just because a module has a <code>__file__</code> attribute, doesn't mean it's not <code>None</code>. I think a submodule of a recent version of matplotlib has a <code>__file__</code> that exists but is <code>None</code>.</p>\n<p>This PR removes one more such assumption that otherwise led to a crash.</p>", "type": "rendered"}, "source": {"commit": {"hash": "0599ca70fb6b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/0599ca70fb6b"}, "html": {"href": "#!/cbillington/labscript/commits/0599ca70fb6b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "branch": {"name": "bugfix"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-01-18T03:06:22.228150+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "e6076d69c4da", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/e6076d69c4da.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/e6076d69c4da"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Move trigger validity checks into TriggerableDevice from the Camera class.\r\n\r\nThey are applicable to all triggerable devices, not just the Camera, so\r\nit avoids code duplication to have them here. Devices requesting triggers at\r\nparticular times should call self.trigger() instead of self.trigger_device.trigger(),\r\nin order to take advantage of the checks.\r\n\r\nThis was motivated by me implementing a new camera class, this way I will\r\nnot be duplicating code.\r\n\r\nI'll make a separate change to the Camera class in labscript_devices,\r\nremoving the code from there and depending on this version of labscript.\r\nIt is harmless having the checks be in both places, the checks in\r\nlabscript will not find any triggers to throw errors about until device classes\r\nare updated to call self.trigger() instead of self.trigger_device.trigger().\r\n\r\nSpurious errors could be thrown if some devices called self.trigger() and others\r\ncalled self.trigger_device.trigger(), so all the devices in labscript_devices\r\nwill be updated at once (I think it's just the camera, but I'll check).\r\n\r\nThis is worth testing on an existing setup to confirm I haven't overlooked anything major, if anyone is interested.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/45/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:a4c98a2bb5db%0Dd69295135157?from_pullrequest_id=45"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/45/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/45.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/45/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/45/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/45"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/45/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:a4c98a2bb5db%0Dd69295135157?from_pullrequest_id=45"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/45/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/45/statuses_page=1.json"}}, "title": "Move trigger validity checks into TriggerableDevice from the Camera class.", "close_source_branch": true, "type": "pullrequest", "id": 45, "destination": {"commit": {"hash": "d69295135157", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/d69295135157.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/d69295135157"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2019-03-29T01:07:30.658394+00:00", "summary": {"raw": "Move trigger validity checks into TriggerableDevice from the Camera class.\r\n\r\nThey are applicable to all triggerable devices, not just the Camera, so\r\nit avoids code duplication to have them here. Devices requesting triggers at\r\nparticular times should call self.trigger() instead of self.trigger_device.trigger(),\r\nin order to take advantage of the checks.\r\n\r\nThis was motivated by me implementing a new camera class, this way I will\r\nnot be duplicating code.\r\n\r\nI'll make a separate change to the Camera class in labscript_devices,\r\nremoving the code from there and depending on this version of labscript.\r\nIt is harmless having the checks be in both places, the checks in\r\nlabscript will not find any triggers to throw errors about until device classes\r\nare updated to call self.trigger() instead of self.trigger_device.trigger().\r\n\r\nSpurious errors could be thrown if some devices called self.trigger() and others\r\ncalled self.trigger_device.trigger(), so all the devices in labscript_devices\r\nwill be updated at once (I think it's just the camera, but I'll check).\r\n\r\nThis is worth testing on an existing setup to confirm I haven't overlooked anything major, if anyone is interested.", "markup": "markdown", "html": "<p>Move trigger validity checks into TriggerableDevice from the Camera class.</p>\n<p>They are applicable to all triggerable devices, not just the Camera, so\nit avoids code duplication to have them here. Devices requesting triggers at\nparticular times should call self.trigger() instead of self.trigger_device.trigger(),\nin order to take advantage of the checks.</p>\n<p>This was motivated by me implementing a new camera class, this way I will\nnot be duplicating code.</p>\n<p>I'll make a separate change to the Camera class in labscript_devices,\nremoving the code from there and depending on this version of labscript.\nIt is harmless having the checks be in both places, the checks in\nlabscript will not find any triggers to throw errors about until device classes\nare updated to call self.trigger() instead of self.trigger_device.trigger().</p>\n<p>Spurious errors could be thrown if some devices called self.trigger() and others\ncalled self.trigger_device.trigger(), so all the devices in labscript_devices\nwill be updated at once (I think it's just the camera, but I'll check).</p>\n<p>This is worth testing on an existing setup to confirm I haven't overlooked anything major, if anyone is interested.</p>", "type": "rendered"}, "source": {"commit": {"hash": "a498d2d7f3d8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/a498d2d7f3d8"}, "html": {"href": "#!/cbillington/labscript/commits/a498d2d7f3d8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "branch": {"name": "trigger_checks"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-04-15T17:36:03.927633+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "a4c98a2bb5db", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/a4c98a2bb5db.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/a4c98a2bb5db"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Use 7341 as default port for remote processes rather than 7340.\r\n\r\n7340 has since been claimed by zlog, so this would conflict.\r\n\r\nThis was a mistake - I picked the port for zlog not remembering we had already picked it as the default remote port. Nonetheless this seems like the right place to change it now since zlog is more established than remote processes.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/46/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:e1db3c1169a6%0D9ab9d2b389ab?from_pullrequest_id=46"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/46/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/46.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/46/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/46/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/46"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/46/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:e1db3c1169a6%0D9ab9d2b389ab?from_pullrequest_id=46"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/46/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/46/statuses_page=1.json"}}, "title": "Use 7341 as default port for remote processes rather than 7340.", "close_source_branch": true, "type": "pullrequest", "id": 46, "destination": {"commit": {"hash": "9ab9d2b389ab", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/9ab9d2b389ab.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/9ab9d2b389ab"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2019-04-24T18:20:59.416028+00:00", "summary": {"raw": "Use 7341 as default port for remote processes rather than 7340.\r\n\r\n7340 has since been claimed by zlog, so this would conflict.\r\n\r\nThis was a mistake - I picked the port for zlog not remembering we had already picked it as the default remote port. Nonetheless this seems like the right place to change it now since zlog is more established than remote processes.", "markup": "markdown", "html": "<p>Use 7341 as default port for remote processes rather than 7340.</p>\n<p>7340 has since been claimed by zlog, so this would conflict.</p>\n<p>This was a mistake - I picked the port for zlog not remembering we had already picked it as the default remote port. Nonetheless this seems like the right place to change it now since zlog is more established than remote processes.</p>", "type": "rendered"}, "source": {"commit": {"hash": "9599dd2f1904", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/9599dd2f1904"}, "html": {"href": "#!/cbillington/labscript/commits/9599dd2f1904"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "branch": {"name": "bugfix"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-04-24T23:12:06.709278+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "e1db3c1169a6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/e1db3c1169a6.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/e1db3c1169a6"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This pull request makes some changes to the class structure of DDS devices to allow the proper implementation of [labscript\\_devices pull request 62](#!/labscript_suite/labscript_devices/pull-requests/62/pulseblaster-phase-resets/), for PulseBlaster DDS phase resets.\r\n\r\n* Renamed class DDS to DDSQuantity, which can be subclassed to create more customized subclasses for devices with extra functionality \\(e.g. PulseBlasters\\).\r\n* Created new stub class DDS to take the place of the previous DDS class, for general use by most devices.\r\n* Added keyword argument to allow the calling of parent\\_device.add\\_device\\(\\) to be turned off to allow flexibility in subclasses \\(see PulseBlasterDDS subclass\\).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/47/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:2000799294b1%0De1db3c1169a6?from_pullrequest_id=47"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/47/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/47.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/47/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/47/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/47"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/47/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:2000799294b1%0De1db3c1169a6?from_pullrequest_id=47"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/47/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/47/statuses_page=1.json"}}, "title": "Changes to the structure of the DDS device class for the implementation of labscript_devices pull request 62.", "close_source_branch": true, "type": "pullrequest", "id": 47, "destination": {"commit": {"hash": "e1db3c1169a6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/e1db3c1169a6.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/e1db3c1169a6"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2019-05-01T00:44:29.647619+00:00", "summary": {"raw": "This pull request makes some changes to the class structure of DDS devices to allow the proper implementation of [labscript\\_devices pull request 62](#!/labscript_suite/labscript_devices/pull-requests/62/pulseblaster-phase-resets/), for PulseBlaster DDS phase resets.\r\n\r\n* Renamed class DDS to DDSQuantity, which can be subclassed to create more customized subclasses for devices with extra functionality \\(e.g. PulseBlasters\\).\r\n* Created new stub class DDS to take the place of the previous DDS class, for general use by most devices.\r\n* Added keyword argument to allow the calling of parent\\_device.add\\_device\\(\\) to be turned off to allow flexibility in subclasses \\(see PulseBlasterDDS subclass\\).", "markup": "markdown", "html": "<p>This pull request makes some changes to the class structure of DDS devices to allow the proper implementation of <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript_devices/pull-requests/62/pulseblaster-phase-resets/\" rel=\"nofollow\">labscript_devices pull request 62</a>, for PulseBlaster DDS phase resets.</p>\n<ul>\n<li>Renamed class DDS to DDSQuantity, which can be subclassed to create more customized subclasses for devices with extra functionality (e.g. PulseBlasters).</li>\n<li>Created new stub class DDS to take the place of the previous DDS class, for general use by most devices.</li>\n<li>Added keyword argument to allow the calling of parent_device.add_device() to be turned off to allow flexibility in subclasses (see PulseBlasterDDS subclass).</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "09e7fab55b17", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/labscript/commit/09e7fab55b17"}, "html": {"href": "#!/monashkrb/labscript/commits/09e7fab55b17"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/labscript"}, "html": {"href": "#!/monashkrb/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4d42e2d0-41cf-4474-ac4a-eaf59f1279fb}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "monashkrb/labscript", "uuid": "{4d42e2d0-41cf-4474-ac4a-eaf59f1279fb}"}, "branch": {"name": "DDS class changes"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-05-01T22:09:58.443745+00:00", "author": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "merge_commit": {"hash": "2000799294b1", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/2000799294b1.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/2000799294b1"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Allow setting marker colors using strings such as 'red' or '#ff8g80'.\r\nIf no colour is set, save the color as (-1, -1, -1), to distinguish 'no colour\r\nset' from black. This way, actually setting the colour to black can be done,\r\nwhereas the BLACS progress bar can fall back to default colours if no colour has\r\nbeen set (right now it uses default colours if it encounters black, precluding\r\none from actually using black).\r\n\r\nIf BLACS and runviewer are not updated after this change, they will encounter\r\ncolours that are (-1, -1, -1). They will not break, but they will print a\r\nwarning from Qt and will treat the colour as black. So this is fairly backward\r\ncompatible - the only visible consequence is the BLACS progress bar will be black\r\ninstead of blue for markers with no colour set, until BLACS is updated to be\r\naware of the change (I have tested that both apps are fine encountering shots compiled with this change).\r\n\r\nCorresponding changes to BLACS and runviewer will make them aware of the\r\ndistinction between black and 'unset'.\r\n\r\nThis change uses PIL, which whilst present on Anaconda already, I will add to the dependencies in the installer. The pending LightCrafter DMD pull request also requires PIL, so its inclusion is not solely for this.\r\n\r\nSince this is pretty simple, I will merge on Monday if there are no comments.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/48/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:05cf8b9676a9%0D789de78d2b75?from_pullrequest_id=48"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/48/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/48.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/48/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/48/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/48"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/48/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:05cf8b9676a9%0D789de78d2b75?from_pullrequest_id=48"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/48/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/48/statuses_page=1.json"}}, "title": "Marker colour enhancements", "close_source_branch": true, "type": "pullrequest", "id": 48, "destination": {"commit": {"hash": "789de78d2b75", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/789de78d2b75.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/789de78d2b75"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2019-05-08T18:13:32.447578+00:00", "summary": {"raw": "Allow setting marker colors using strings such as 'red' or '#ff8g80'.\r\nIf no colour is set, save the color as (-1, -1, -1), to distinguish 'no colour\r\nset' from black. This way, actually setting the colour to black can be done,\r\nwhereas the BLACS progress bar can fall back to default colours if no colour has\r\nbeen set (right now it uses default colours if it encounters black, precluding\r\none from actually using black).\r\n\r\nIf BLACS and runviewer are not updated after this change, they will encounter\r\ncolours that are (-1, -1, -1). They will not break, but they will print a\r\nwarning from Qt and will treat the colour as black. So this is fairly backward\r\ncompatible - the only visible consequence is the BLACS progress bar will be black\r\ninstead of blue for markers with no colour set, until BLACS is updated to be\r\naware of the change (I have tested that both apps are fine encountering shots compiled with this change).\r\n\r\nCorresponding changes to BLACS and runviewer will make them aware of the\r\ndistinction between black and 'unset'.\r\n\r\nThis change uses PIL, which whilst present on Anaconda already, I will add to the dependencies in the installer. The pending LightCrafter DMD pull request also requires PIL, so its inclusion is not solely for this.\r\n\r\nSince this is pretty simple, I will merge on Monday if there are no comments.", "markup": "markdown", "html": "<p>Allow setting marker colors using strings such as 'red' or '#ff8g80'.\nIf no colour is set, save the color as (-1, -1, -1), to distinguish 'no colour\nset' from black. This way, actually setting the colour to black can be done,\nwhereas the BLACS progress bar can fall back to default colours if no colour has\nbeen set (right now it uses default colours if it encounters black, precluding\none from actually using black).</p>\n<p>If BLACS and runviewer are not updated after this change, they will encounter\ncolours that are (-1, -1, -1). They will not break, but they will print a\nwarning from Qt and will treat the colour as black. So this is fairly backward\ncompatible - the only visible consequence is the BLACS progress bar will be black\ninstead of blue for markers with no colour set, until BLACS is updated to be\naware of the change (I have tested that both apps are fine encountering shots compiled with this change).</p>\n<p>Corresponding changes to BLACS and runviewer will make them aware of the\ndistinction between black and 'unset'.</p>\n<p>This change uses PIL, which whilst present on Anaconda already, I will add to the dependencies in the installer. The pending LightCrafter DMD pull request also requires PIL, so its inclusion is not solely for this.</p>\n<p>Since this is pretty simple, I will merge on Monday if there are no comments.</p>", "type": "rendered"}, "source": {"commit": {"hash": "c4caa2d24af0", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/c4caa2d24af0"}, "html": {"href": "#!/cbillington/labscript/commits/c4caa2d24af0"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "branch": {"name": "marker-colours"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-05-12T22:55:02.855176+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "05cf8b9676a9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/05cf8b9676a9.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/05cf8b9676a9"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Make wait monitors optional.\r\n\r\nIt will be up to individual devices whether to raise an exception if they are\r\nasked to do analog input and require a wait monitor when one is not present,\r\nor if they require a wait monitor for any other purpose.\r\n\r\nIf using a wait monitor, make the use of a timeout device optional.\r\n\r\nAdd a detailed docstring for WaitMonitor.\r\n\r\nThis has been something requested for a while, and hacked into a few labscript installations around here already. Our labs have a 60hz trigger firing constantly, that is not expected to fail, is not unsafe if it does fail, and most of the time we are not doing AI on NI DAQmx devices. So the complexity of implementing a wait monitor has been a hindrance.\r\n\r\nThis PR allows you to just to wait() without creating a wait monitor. The pseudoclock will just wait until retriggered, and it's up to you to ensure it is triggered or to deal with the consequences.\r\n\r\nA corresponding pull request to labscript_devices modifies the NI DAQmx driver to raise an exception if you try to use waits and AI at the same time without a wait monitor, since one is required in that case.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/49/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:8fa274e362e3%0D83f160ced6d6?from_pullrequest_id=49"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/49/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/49.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/49/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/49/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/49"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/49/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:8fa274e362e3%0D83f160ced6d6?from_pullrequest_id=49"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/49/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/49/statuses_page=1.json"}}, "title": "Make wait monitors optional", "close_source_branch": true, "type": "pullrequest", "id": 49, "destination": {"commit": {"hash": "83f160ced6d6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/83f160ced6d6.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/83f160ced6d6"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2019-06-27T20:52:02.717238+00:00", "summary": {"raw": "Make wait monitors optional.\r\n\r\nIt will be up to individual devices whether to raise an exception if they are\r\nasked to do analog input and require a wait monitor when one is not present,\r\nor if they require a wait monitor for any other purpose.\r\n\r\nIf using a wait monitor, make the use of a timeout device optional.\r\n\r\nAdd a detailed docstring for WaitMonitor.\r\n\r\nThis has been something requested for a while, and hacked into a few labscript installations around here already. Our labs have a 60hz trigger firing constantly, that is not expected to fail, is not unsafe if it does fail, and most of the time we are not doing AI on NI DAQmx devices. So the complexity of implementing a wait monitor has been a hindrance.\r\n\r\nThis PR allows you to just to wait() without creating a wait monitor. The pseudoclock will just wait until retriggered, and it's up to you to ensure it is triggered or to deal with the consequences.\r\n\r\nA corresponding pull request to labscript_devices modifies the NI DAQmx driver to raise an exception if you try to use waits and AI at the same time without a wait monitor, since one is required in that case.", "markup": "markdown", "html": "<p>Make wait monitors optional.</p>\n<p>It will be up to individual devices whether to raise an exception if they are\nasked to do analog input and require a wait monitor when one is not present,\nor if they require a wait monitor for any other purpose.</p>\n<p>If using a wait monitor, make the use of a timeout device optional.</p>\n<p>Add a detailed docstring for WaitMonitor.</p>\n<p>This has been something requested for a while, and hacked into a few labscript installations around here already. Our labs have a 60hz trigger firing constantly, that is not expected to fail, is not unsafe if it does fail, and most of the time we are not doing AI on NI DAQmx devices. So the complexity of implementing a wait monitor has been a hindrance.</p>\n<p>This PR allows you to just to wait() without creating a wait monitor. The pseudoclock will just wait until retriggered, and it's up to you to ensure it is triggered or to deal with the consequences.</p>\n<p>A corresponding pull request to labscript_devices modifies the NI DAQmx driver to raise an exception if you try to use waits and AI at the same time without a wait monitor, since one is required in that case.</p>", "type": "rendered"}, "source": {"commit": {"hash": "e9bfc529b103", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/e9bfc529b103"}, "html": {"href": "#!/cbillington/labscript/commits/e9bfc529b103"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "branch": {"name": "optional-wait-monitor"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-07-13T15:42:21.161201+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "8fa274e362e3", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/8fa274e362e3.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/8fa274e362e3"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This is the labscript side of the [BLACS cycle time plugin](#!/labscript_suite/blacs/pull-requests/50/).\r\n\r\nAdd `target_cycle_time` and `cycle_time_delay_after_programming` kwargs to `stop()`\r\n\r\nDocument them with a docstring to `stop()`.\r\n\r\nAdd a top-level group to the HDF5 file, `shot_properties`, for saving settings\r\nthat pertain to shots as a whole. Save the two cycle_time settings there.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/50/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diffstat/labscript_suite/labscript:5308a0ecbe94%0D8fa274e362e3?from_pullrequest_id=50"}, "commits": {"href": "data/repositories/labscript_suite/labscript/pullrequests/50/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript/pullrequests/50.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript/pullrequests/50/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/50/merge"}, "html": {"href": "#!/labscript_suite/labscript/pull-requests/50"}, "activity": {"href": "data/repositories/labscript_suite/labscript/pullrequests/50/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/diff/labscript_suite/labscript:5308a0ecbe94%0D8fa274e362e3?from_pullrequest_id=50"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript/pullrequests/50/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript/pullrequests/50/statuses_page=1.json"}}, "title": "Set the target cycle time", "close_source_branch": true, "type": "pullrequest", "id": 50, "destination": {"commit": {"hash": "8fa274e362e3", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/8fa274e362e3.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/8fa274e362e3"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript.json"}, "html": {"href": "#!/labscript_suite/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{48848b08-1db5-463b-bbdc-911beadf8bbf}ts=249917"}}, "type": "repository", "name": "labscript", "full_name": "labscript_suite/labscript", "uuid": "{48848b08-1db5-463b-bbdc-911beadf8bbf}"}, "branch": {"name": "default"}}, "created_on": "2019-06-28T22:31:56.984715+00:00", "summary": {"raw": "This is the labscript side of the [BLACS cycle time plugin](#!/labscript_suite/blacs/pull-requests/50/).\r\n\r\nAdd `target_cycle_time` and `cycle_time_delay_after_programming` kwargs to `stop()`\r\n\r\nDocument them with a docstring to `stop()`.\r\n\r\nAdd a top-level group to the HDF5 file, `shot_properties`, for saving settings\r\nthat pertain to shots as a whole. Save the two cycle_time settings there.", "markup": "markdown", "html": "<p>This is the labscript side of the <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/pull-requests/50/\" rel=\"nofollow\">BLACS cycle time plugin</a>.</p>\n<p>Add <code>target_cycle_time</code> and <code>cycle_time_delay_after_programming</code> kwargs to <code>stop()</code></p>\n<p>Document them with a docstring to <code>stop()</code>.</p>\n<p>Add a top-level group to the HDF5 file, <code>shot_properties</code>, for saving settings\nthat pertain to shots as a whole. Save the two cycle_time settings there.</p>", "type": "rendered"}, "source": {"commit": {"hash": "58ef4987b435", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript/commit/58ef4987b435"}, "html": {"href": "#!/cbillington/labscript/commits/58ef4987b435"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript"}, "html": {"href": "#!/cbillington/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b88125ae-abd7-48a2-9b60-fed8b7d6724b}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "cbillington/labscript", "uuid": "{b88125ae-abd7-48a2-9b60-fed8b7d6724b}"}, "branch": {"name": "cycle_time"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-07-13T15:42:48.335691+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "5308a0ecbe94", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript/commit/5308a0ecbe94.json"}, "html": {"href": "#!/labscript_suite/labscript/commits/5308a0ecbe94"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}], "page": 1, "next": "data/repositories/labscript_suite/labscript/pullrequests_state=MERGED&state=OPEN&state=SUPERSEDED&state=DECLINED&page=2.json"}