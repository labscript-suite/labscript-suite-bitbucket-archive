{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/1/comments/53372016.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/1#comment-53372016"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/1.json"}}, "type": "issue", "id": 1, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "Bug in NI_PCIe_6363 extract measurements"}, "content": {"raw": "This is still occurring in the new unified \u201cNI\\_DAQmx\u201d device code. \n\n```python\nTraceback (most recent call last):\r\n  File \"C:\\labscript_suite\\labscript_devices\\NI_DAQmx\\blacs_workers.py\", line 592, in transition_to_manual\r\n    self.extract_measurements(raw_data, waits_in_use)\r\n  File \"C:\\labscript_suite\\labscript_devices\\NI_DAQmx\\blacs_workers.py\", line 652, in extract_measurements\r\n    data['t'] = times\r\nValueError: could not broadcast input array from shape (1409738) into shape (1409500)\n```\n\nIt seems to just randomly occur, and after resetting the device it is usually fine to continue running the same shot again. The last few days it\u2019s been happening a few times a day, the only thing I\u2019ve changed in that time is that the total length of the experiments that I\u2019m running has grown, and so more data is being acquired for the duration.", "markup": "markdown", "html": "<p>This is still occurring in the new unified \u201cNI_DAQmx\u201d device code. </p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript_devices\\NI_DAQmx</span><span class=\"se\">\\b</span><span class=\"s2\">lacs_workers.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">592</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">transition_to_manual</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">extract_measurements</span><span class=\"p\">(</span><span class=\"n\">raw_data</span><span class=\"p\">,</span> <span class=\"n\">waits_in_use</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript_devices\\NI_DAQmx</span><span class=\"se\">\\b</span><span class=\"s2\">lacs_workers.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">652</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">extract_measurements</span>\n    <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">&#39;t&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">times</span>\n<span class=\"ne\">ValueError</span><span class=\"p\">:</span> <span class=\"n\">could</span> <span class=\"ow\">not</span> <span class=\"n\">broadcast</span> <span class=\"nb\">input</span> <span class=\"n\">array</span> <span class=\"kn\">from</span> <span class=\"nn\">shape</span> <span class=\"p\">(</span><span class=\"mi\">1409738</span><span class=\"p\">)</span> <span class=\"n\">into</span> <span class=\"n\">shape</span> <span class=\"p\">(</span><span class=\"mi\">1409500</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>It seems to just randomly occur, and after resetting the device it is usually fine to continue running the same shot again. The last few days it\u2019s been happening a few times a day, the only thing I\u2019ve changed in that time is that the total length of the experiments that I\u2019m running has grown, and so more data is being acquired for the duration.</p>", "type": "rendered"}, "created_on": "2019-08-12T05:22:44.880056+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": null, "type": "issue_comment", "id": 53372016}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/1/comments/53372342.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/1#comment-53372342"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/1.json"}}, "type": "issue", "id": 1, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "Bug in NI_PCIe_6363 extract measurements"}, "content": {"raw": "If it's happening semi-regularly now, could you add log lines that log the value of every time and index variable in that loop with the line it crashes on, as well as the shape of every array used in the loop \\(put the log lines just before the line that crashes\\)?\n\nAnd then post the log that includes values for a shot that works and one that doesn't? \n\nThat should help to track down the issue I think", "markup": "markdown", "html": "<p>If it's happening semi-regularly now, could you add log lines that log the value of every time and index variable in that loop with the line it crashes on, as well as the shape of every array used in the loop (put the log lines just before the line that crashes)?</p>\n<p>And then post the log that includes values for a shot that works and one that doesn't? </p>\n<p>That should help to track down the issue I think</p>", "type": "rendered"}, "created_on": "2019-08-12T06:11:10.014323+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "updated_on": null, "type": "issue_comment", "id": 53372342}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/1/comments/53372799.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/1#comment-53372799"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/1.json"}}, "type": "issue", "id": 1, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "Bug in NI_PCIe_6363 extract measurements"}, "content": {"raw": "It seems as though the raw\\_data array just doesn\u2019t have enough in it? Though then why is it not throwing an index error at the point where we\u2019re getting \u201cvalues\u201d by indexing \u201craw\\_data\u201d?\n\n\u200c\n\nSuccessful experiment:\n\n```\n2019-08-12 16:44:45,341 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extract_measurements\r\n2019-08-12 16:44:45,355 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extracting measurement with connection: \"b'ai9'\", label \"b'Quad_voltage'\", t_start = 0.01 and t_end = 28.204750000000008\r\n2019-08-12 16:44:45,355 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extracting measurement with NO waits\r\n2019-08-12 16:44:45,362 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extract_measurements i_start = 500, t_i = 0.01000007, i_end=1410237, t_f = 28.20474007\r\n2019-08-12 16:44:45,362 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: shape of times: (1409738,), shape of values: (1409738,), shape of data: (1409738,)\r\n2019-08-12 16:44:45,362 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: shape of raw_data: 1420000\r\n2019-08-12 16:44:45,386 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extracting measurement with connection: \"b'ai10'\", label \"b'Z_Bias_voltage'\", t_start = 0.01 and t_end = 28.204750000000008\r\n2019-08-12 16:44:45,386 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extracting measurement with NO waits\r\n2019-08-12 16:44:45,393 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extract_measurements i_start = 500, t_i = 0.01000007, i_end=1410237, t_f = 28.20474007\r\n2019-08-12 16:44:45,395 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: shape of times: (1409738,), shape of values: (1409738,), shape of data: (1409738,)\r\n2019-08-12 16:44:45,395 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: shape of raw_data: 1420000\r\n2019-08-12 16:44:45,417 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extracting measurement with connection: \"b'ai11'\", label \"b'MOT_Fluorescence'\", t_start = 0.01 and t_end = 28.204750000000008\r\n2019-08-12 16:44:45,417 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extracting measurement with NO waits\r\n2019-08-12 16:44:45,424 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extract_measurements i_start = 500, t_i = 0.01000007, i_end=1410237, t_f = 28.20474007\r\n2019-08-12 16:44:45,426 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: shape of times: (1409738,), shape of values: (1409738,), shape of data: (1409738,)\r\n2019-08-12 16:44:45,426 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: shape of raw_data: 1420000\r\n2019-08-12 16:44:45,449 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extracting measurement with connection: \"b'ai16'\", label \"b'IGC_voltage'\", t_start = 0.01 and t_end = 28.204750000000008\r\n2019-08-12 16:44:45,449 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extracting measurement with NO waits\r\n2019-08-12 16:44:45,456 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extract_measurements i_start = 500, t_i = 0.01000007, i_end=1410237, t_f = 28.20474007\r\n2019-08-12 16:44:45,459 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: shape of times: (1409738,), shape of values: (1409738,), shape of data: (1409738,)\r\n2019-08-12 16:44:45,459 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: shape of raw_data: 1420000\r\n2019-08-12 16:44:46,115 INFO BLACS.ni_pcie_6363_0_acquisition_worker.worker: data written, time taken: 0.7861306667327881s\r\n2019-08-12 16:44:46,115 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: Job complete\n```\n\n\u200c\n\nFailed experiment:\n\n```\n2019-08-12 16:49:20,853 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extract_measurements\r\n2019-08-12 16:49:20,868 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extracting measurement with connection: \"b'ai9'\", label \"b'Quad_voltage'\", t_start = 0.01 and t_end = 28.204750000000008\r\n2019-08-12 16:49:20,868 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extracting measurement with NO waits\r\n2019-08-12 16:49:20,874 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extract_measurements i_start = 500, t_i = 0.01000007, i_end=1410237, t_f = 28.20474007\r\n2019-08-12 16:49:20,874 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: shape of times: (1409738,), shape of values: (1409500,), shape of data: (1409500,)\r\n2019-08-12 16:49:20,874 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: shape of raw_data: 1410000\r\n2019-08-12 16:49:20,884 ERROR BLACS.ni_pcie_6363_0_acquisition_worker.worker: Exception in job:\r\nTraceback (most recent call last):\r\n  File \"C:\\labscript_suite\\labscript_devices\\NI_DAQmx\\blacs_workers.py\", line 592, in transition_to_manual\r\n    self.extract_measurements(raw_data, waits_in_use)\r\n  File \"C:\\labscript_suite\\labscript_devices\\NI_DAQmx\\blacs_workers.py\", line 659, in extract_measurements\r\n    data['t'] = times\r\nValueError: could not broadcast input array from shape (1409738) into shape (1409500)\r\n\r\n2019-08-12 16:49:20,888 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: Waiting for next job request\r\n2019-08-12 16:49:20,894 INFO BLACS.ni_pcie_6363_0.mainloop: Worker reported exception during job\r\n2019-08-12 16:49:20,896 DEBUG BLACS.ni_pcie_6363_0.mainloop: returning worker results to function _transition_to_manual\r\n2019-08-12 16:49:20,914 DEBUG BLACS.queue_manager.thread: ni_pcie_6363_0 failed to transition to manual\r\n2019-08-12 16:49:20,915 CRITICAL BLACS.ni_pcie_6363_0.mainloop: A fatal exception happened:\r\n Traceback (most recent call last):\r\n  File \"C:\\labscript_suite\\blacs\\tab_base_classes.py\", line 848, in mainloop\r\n    next_yield = inmain(generator.send,results)\r\n  File \"C:\\users\\beclab\\anaconda3\\envs\\labscript3.7\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 103, in inmain\r\n    return get_inmain_result(_in_main_later(fn, False, *args, **kwargs))\r\n  File \"C:\\users\\beclab\\anaconda3\\envs\\labscript3.7\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 164, in get_inmain_result\r\n    _reraise(exception)\r\n  File \"C:\\users\\beclab\\anaconda3\\envs\\labscript3.7\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 36, in _reraise\r\n    raise value.with_traceback(traceback)\r\n  File \"C:\\users\\beclab\\anaconda3\\envs\\labscript3.7\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 61, in event\r\n    result = event.fn(*event.args, **event.kwargs)\r\n  File \"C:\\labscript_suite\\blacs\\device_base_class.py\", line 686, in transition_to_manual\r\n    raise Exception('Could not transition to manual. You must restart this device to continue')\r\nException: Could not transition to manual. You must restart this device to continue\r\n\r\n2019-08-12 16:49:20,934 INFO BLACS.ni_pcie_6363_0.mainloop: Exiting\n```\n\n\u200c\n\nMy logging code \\(starting line 627 of blacs\\_workers.py\\):\n\n```python\nfor connection, label, t_start, t_end, _, _, _ in acquisitions:\n  self.logger.debug('extracting measurement with connection: \"%s\", label \"%s\", t_start = %s and t_end = %s'%(connection,label,t_start,t_end))\n  connection = _ensure_str(connection)\n  label = _ensure_str(label)\n  if waits_in_use:\n      self.logger.debug('extracting measurement with waits')\n      # add durations from all waits that start prior to t_start of\n      # acquisition\n      t_start += wait_durations[(wait_times < t_start)].sum()\n      # compare wait times to t_end to allow for waits during an\n      # acquisition\n      t_end += wait_durations[(wait_times < t_end)].sum()\n  else:\n      self.logger.debug('extracting measurement with NO waits')\n  i_start = int(np.ceil(self.buffered_rate * (t_start - t0)))\n  i_end = int(np.floor(self.buffered_rate * (t_end - t0)))\n  # np.ceil does what we want above, but float errors can miss the\n  # equality:\n  if t0 + (i_start - 1) / self.buffered_rate - t_start > -2e-16:\n      i_start -= 1\n  # We want np.floor(x) to yield the largest integer < x (not <=):\n  if t_end - t0 - i_end / self.buffered_rate < 2e-16:\n      i_end -= 1\n  t_i = t0 + i_start / self.buffered_rate\n  t_f = t0 + i_end / self.buffered_rate\n  times = np.linspace(t_i, t_f, i_end - i_start + 1, endpoint=True)\n  values = raw_data[connection][i_start : i_end + 1]\n  dtypes = [('t', np.float64), ('values', np.float32)]\n  self.logger.debug('extract_measurements i_start = %s, t_i = %s, i_end=%s, t_f = %s'%(i_start, t_i, i_end, t_f))\n  data = np.empty(len(values), dtype=dtypes)\n  self.logger.debug('shape of times: %s, shape of values: %s, shape of data: %s'%(np.shape(times),np.shape(values),np.shape(data)))\n  self.logger.debug('shape of raw_data: %s'%np.shape(raw_data))\n  data['t'] = times\n  data['values'] = values\n  measurements.create_dataset(label, data=data)\n```\n\n\u200c\n\n\u200c\n\nAny thoughts?", "markup": "markdown", "html": "<p>It seems as though the raw_data array just doesn\u2019t have enough in it? Though then why is it not throwing an index error at the point where we\u2019re getting \u201cvalues\u201d by indexing \u201craw_data\u201d?</p>\n<p>\u200c</p>\n<p>Successful experiment:</p>\n<div class=\"codehilite\"><pre><span></span>2019-08-12 16:44:45,341 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extract_measurements\n2019-08-12 16:44:45,355 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extracting measurement with connection: &quot;b&#39;ai9&#39;&quot;, label &quot;b&#39;Quad_voltage&#39;&quot;, t_start = 0.01 and t_end = 28.204750000000008\n2019-08-12 16:44:45,355 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extracting measurement with NO waits\n2019-08-12 16:44:45,362 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extract_measurements i_start = 500, t_i = 0.01000007, i_end=1410237, t_f = 28.20474007\n2019-08-12 16:44:45,362 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: shape of times: (1409738,), shape of values: (1409738,), shape of data: (1409738,)\n2019-08-12 16:44:45,362 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: shape of raw_data: 1420000\n2019-08-12 16:44:45,386 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extracting measurement with connection: &quot;b&#39;ai10&#39;&quot;, label &quot;b&#39;Z_Bias_voltage&#39;&quot;, t_start = 0.01 and t_end = 28.204750000000008\n2019-08-12 16:44:45,386 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extracting measurement with NO waits\n2019-08-12 16:44:45,393 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extract_measurements i_start = 500, t_i = 0.01000007, i_end=1410237, t_f = 28.20474007\n2019-08-12 16:44:45,395 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: shape of times: (1409738,), shape of values: (1409738,), shape of data: (1409738,)\n2019-08-12 16:44:45,395 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: shape of raw_data: 1420000\n2019-08-12 16:44:45,417 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extracting measurement with connection: &quot;b&#39;ai11&#39;&quot;, label &quot;b&#39;MOT_Fluorescence&#39;&quot;, t_start = 0.01 and t_end = 28.204750000000008\n2019-08-12 16:44:45,417 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extracting measurement with NO waits\n2019-08-12 16:44:45,424 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extract_measurements i_start = 500, t_i = 0.01000007, i_end=1410237, t_f = 28.20474007\n2019-08-12 16:44:45,426 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: shape of times: (1409738,), shape of values: (1409738,), shape of data: (1409738,)\n2019-08-12 16:44:45,426 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: shape of raw_data: 1420000\n2019-08-12 16:44:45,449 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extracting measurement with connection: &quot;b&#39;ai16&#39;&quot;, label &quot;b&#39;IGC_voltage&#39;&quot;, t_start = 0.01 and t_end = 28.204750000000008\n2019-08-12 16:44:45,449 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extracting measurement with NO waits\n2019-08-12 16:44:45,456 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extract_measurements i_start = 500, t_i = 0.01000007, i_end=1410237, t_f = 28.20474007\n2019-08-12 16:44:45,459 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: shape of times: (1409738,), shape of values: (1409738,), shape of data: (1409738,)\n2019-08-12 16:44:45,459 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: shape of raw_data: 1420000\n2019-08-12 16:44:46,115 INFO BLACS.ni_pcie_6363_0_acquisition_worker.worker: data written, time taken: 0.7861306667327881s\n2019-08-12 16:44:46,115 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: Job complete\n</pre></div>\n\n\n<p>\u200c</p>\n<p>Failed experiment:</p>\n<div class=\"codehilite\"><pre><span></span>2019-08-12 16:49:20,853 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extract_measurements\n2019-08-12 16:49:20,868 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extracting measurement with connection: &quot;b&#39;ai9&#39;&quot;, label &quot;b&#39;Quad_voltage&#39;&quot;, t_start = 0.01 and t_end = 28.204750000000008\n2019-08-12 16:49:20,868 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extracting measurement with NO waits\n2019-08-12 16:49:20,874 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: extract_measurements i_start = 500, t_i = 0.01000007, i_end=1410237, t_f = 28.20474007\n2019-08-12 16:49:20,874 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: shape of times: (1409738,), shape of values: (1409500,), shape of data: (1409500,)\n2019-08-12 16:49:20,874 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: shape of raw_data: 1410000\n2019-08-12 16:49:20,884 ERROR BLACS.ni_pcie_6363_0_acquisition_worker.worker: Exception in job:\nTraceback (most recent call last):\n  File &quot;C:\\labscript_suite\\labscript_devices\\NI_DAQmx\\blacs_workers.py&quot;, line 592, in transition_to_manual\n    self.extract_measurements(raw_data, waits_in_use)\n  File &quot;C:\\labscript_suite\\labscript_devices\\NI_DAQmx\\blacs_workers.py&quot;, line 659, in extract_measurements\n    data[&#39;t&#39;] = times\nValueError: could not broadcast input array from shape (1409738) into shape (1409500)\n\n2019-08-12 16:49:20,888 DEBUG BLACS.ni_pcie_6363_0_acquisition_worker.worker: Waiting for next job request\n2019-08-12 16:49:20,894 INFO BLACS.ni_pcie_6363_0.mainloop: Worker reported exception during job\n2019-08-12 16:49:20,896 DEBUG BLACS.ni_pcie_6363_0.mainloop: returning worker results to function _transition_to_manual\n2019-08-12 16:49:20,914 DEBUG BLACS.queue_manager.thread: ni_pcie_6363_0 failed to transition to manual\n2019-08-12 16:49:20,915 CRITICAL BLACS.ni_pcie_6363_0.mainloop: A fatal exception happened:\n Traceback (most recent call last):\n  File &quot;C:\\labscript_suite\\blacs\\tab_base_classes.py&quot;, line 848, in mainloop\n    next_yield = inmain(generator.send,results)\n  File &quot;C:\\users\\beclab\\anaconda3\\envs\\labscript3.7\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;, line 103, in inmain\n    return get_inmain_result(_in_main_later(fn, False, *args, **kwargs))\n  File &quot;C:\\users\\beclab\\anaconda3\\envs\\labscript3.7\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;, line 164, in get_inmain_result\n    _reraise(exception)\n  File &quot;C:\\users\\beclab\\anaconda3\\envs\\labscript3.7\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;, line 36, in _reraise\n    raise value.with_traceback(traceback)\n  File &quot;C:\\users\\beclab\\anaconda3\\envs\\labscript3.7\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;, line 61, in event\n    result = event.fn(*event.args, **event.kwargs)\n  File &quot;C:\\labscript_suite\\blacs\\device_base_class.py&quot;, line 686, in transition_to_manual\n    raise Exception(&#39;Could not transition to manual. You must restart this device to continue&#39;)\nException: Could not transition to manual. You must restart this device to continue\n\n2019-08-12 16:49:20,934 INFO BLACS.ni_pcie_6363_0.mainloop: Exiting\n</pre></div>\n\n\n<p>\u200c</p>\n<p>My logging code (starting line 627 of blacs_workers.py):</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">for</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"p\">,</span> <span class=\"n\">t_start</span><span class=\"p\">,</span> <span class=\"n\">t_end</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"n\">acquisitions</span><span class=\"p\">:</span>\n  <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">&#39;extracting measurement with connection: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;, label &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;, t_start = </span><span class=\"si\">%s</span><span class=\"s1\"> and t_end = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"p\">(</span><span class=\"n\">connection</span><span class=\"p\">,</span><span class=\"n\">label</span><span class=\"p\">,</span><span class=\"n\">t_start</span><span class=\"p\">,</span><span class=\"n\">t_end</span><span class=\"p\">))</span>\n  <span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"n\">_ensure_str</span><span class=\"p\">(</span><span class=\"n\">connection</span><span class=\"p\">)</span>\n  <span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"n\">_ensure_str</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"p\">)</span>\n  <span class=\"k\">if</span> <span class=\"n\">waits_in_use</span><span class=\"p\">:</span>\n      <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">&#39;extracting measurement with waits&#39;</span><span class=\"p\">)</span>\n      <span class=\"c1\"># add durations from all waits that start prior to t_start of</span>\n      <span class=\"c1\"># acquisition</span>\n      <span class=\"n\">t_start</span> <span class=\"o\">+=</span> <span class=\"n\">wait_durations</span><span class=\"p\">[(</span><span class=\"n\">wait_times</span> <span class=\"o\">&lt;</span> <span class=\"n\">t_start</span><span class=\"p\">)]</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span>\n      <span class=\"c1\"># compare wait times to t_end to allow for waits during an</span>\n      <span class=\"c1\"># acquisition</span>\n      <span class=\"n\">t_end</span> <span class=\"o\">+=</span> <span class=\"n\">wait_durations</span><span class=\"p\">[(</span><span class=\"n\">wait_times</span> <span class=\"o\">&lt;</span> <span class=\"n\">t_end</span><span class=\"p\">)]</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span>\n  <span class=\"k\">else</span><span class=\"p\">:</span>\n      <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">&#39;extracting measurement with NO waits&#39;</span><span class=\"p\">)</span>\n  <span class=\"n\">i_start</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ceil</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffered_rate</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">t_start</span> <span class=\"o\">-</span> <span class=\"n\">t0</span><span class=\"p\">)))</span>\n  <span class=\"n\">i_end</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">floor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffered_rate</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">t_end</span> <span class=\"o\">-</span> <span class=\"n\">t0</span><span class=\"p\">)))</span>\n  <span class=\"c1\"># np.ceil does what we want above, but float errors can miss the</span>\n  <span class=\"c1\"># equality:</span>\n  <span class=\"k\">if</span> <span class=\"n\">t0</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">i_start</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffered_rate</span> <span class=\"o\">-</span> <span class=\"n\">t_start</span> <span class=\"o\">&gt;</span> <span class=\"o\">-</span><span class=\"mf\">2e-16</span><span class=\"p\">:</span>\n      <span class=\"n\">i_start</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\n  <span class=\"c1\"># We want np.floor(x) to yield the largest integer &lt; x (not &lt;=):</span>\n  <span class=\"k\">if</span> <span class=\"n\">t_end</span> <span class=\"o\">-</span> <span class=\"n\">t0</span> <span class=\"o\">-</span> <span class=\"n\">i_end</span> <span class=\"o\">/</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffered_rate</span> <span class=\"o\">&lt;</span> <span class=\"mf\">2e-16</span><span class=\"p\">:</span>\n      <span class=\"n\">i_end</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\n  <span class=\"n\">t_i</span> <span class=\"o\">=</span> <span class=\"n\">t0</span> <span class=\"o\">+</span> <span class=\"n\">i_start</span> <span class=\"o\">/</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffered_rate</span>\n  <span class=\"n\">t_f</span> <span class=\"o\">=</span> <span class=\"n\">t0</span> <span class=\"o\">+</span> <span class=\"n\">i_end</span> <span class=\"o\">/</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffered_rate</span>\n  <span class=\"n\">times</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"n\">t_i</span><span class=\"p\">,</span> <span class=\"n\">t_f</span><span class=\"p\">,</span> <span class=\"n\">i_end</span> <span class=\"o\">-</span> <span class=\"n\">i_start</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n  <span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"n\">raw_data</span><span class=\"p\">[</span><span class=\"n\">connection</span><span class=\"p\">][</span><span class=\"n\">i_start</span> <span class=\"p\">:</span> <span class=\"n\">i_end</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n  <span class=\"n\">dtypes</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"s1\">&#39;t&#39;</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float64</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">&#39;values&#39;</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)]</span>\n  <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">&#39;extract_measurements i_start = </span><span class=\"si\">%s</span><span class=\"s1\">, t_i = </span><span class=\"si\">%s</span><span class=\"s1\">, i_end=</span><span class=\"si\">%s</span><span class=\"s1\">, t_f = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"p\">(</span><span class=\"n\">i_start</span><span class=\"p\">,</span> <span class=\"n\">t_i</span><span class=\"p\">,</span> <span class=\"n\">i_end</span><span class=\"p\">,</span> <span class=\"n\">t_f</span><span class=\"p\">))</span>\n  <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">empty</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">dtypes</span><span class=\"p\">)</span>\n  <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">&#39;shape of times: </span><span class=\"si\">%s</span><span class=\"s1\">, shape of values: </span><span class=\"si\">%s</span><span class=\"s1\">, shape of data: </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">(</span><span class=\"n\">times</span><span class=\"p\">),</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">),</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)))</span>\n  <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">&#39;shape of raw_data: </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">(</span><span class=\"n\">raw_data</span><span class=\"p\">))</span>\n  <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">&#39;t&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">times</span>\n  <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">&#39;values&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">values</span>\n  <span class=\"n\">measurements</span><span class=\"o\">.</span><span class=\"n\">create_dataset</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>\u200c</p>\n<p>\u200c</p>\n<p>Any thoughts?</p>", "type": "rendered"}, "created_on": "2019-08-12T06:56:23.283705+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": null, "type": "issue_comment", "id": 53372799}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/1/comments/53377974.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/1#comment-53377974"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/1.json"}}, "type": "issue", "id": 1, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "Bug in NI_PCIe_6363 extract measurements"}, "content": {"raw": "So I'm guessing that it could be due to a few things:\n\n* Your acquisition looks like it's probably as long as the experiment?\n* We are not referencing our acquisition clock to 10 MHz\n* The variable delay between experiment ending and acquisition stopping \\(which happens in software time\\) doesn't always quite make up for discrepancies in the AI clock frequency vs pseudoclocks reference frequency\n\nWe should probably put something in the code that catches \\(and handles\\) this nicely anyway, but I would be interested to see if it was possible to reference the AI clock to 10 MHz and if it fixed the problem \\(because in theory, the acquisition should run significantly longer than the shot, but it seems like it's only just about the same length\\)\n\n\u200c\n\nFYI: I think you can do this by configuring the external reference clock to be fed in via a PFI. I'm unclear if you can configure this via MAX permanently or if you need to add in some daqmx calls to set the source and rate. It is not well documented in the manual!", "markup": "markdown", "html": "<p>So I'm guessing that it could be due to a few things:</p>\n<ul>\n<li>Your acquisition looks like it's probably as long as the experiment?</li>\n<li>We are not referencing our acquisition clock to 10 MHz</li>\n<li>The variable delay between experiment ending and acquisition stopping (which happens in software time) doesn't always quite make up for discrepancies in the AI clock frequency vs pseudoclocks reference frequency</li>\n</ul>\n<p>We should probably put something in the code that catches (and handles) this nicely anyway, but I would be interested to see if it was possible to reference the AI clock to 10 MHz and if it fixed the problem (because in theory, the acquisition should run significantly longer than the shot, but it seems like it's only just about the same length)</p>\n<p>\u200c</p>\n<p>FYI: I think you can do this by configuring the external reference clock to be fed in via a PFI. I'm unclear if you can configure this via MAX permanently or if you need to add in some daqmx calls to set the source and rate. It is not well documented in the manual!</p>", "type": "rendered"}, "created_on": "2019-08-12T12:54:43.378778+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "updated_on": "2019-08-12T13:55:58.074591+00:00", "type": "issue_comment", "id": 53377974}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/1/comments/53378831.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/1#comment-53378831"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/1.json"}}, "type": "issue", "id": 1, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "Bug in NI_PCIe_6363 extract measurements"}, "content": {"raw": "It can be externally referenced! See edit above.", "markup": "markdown", "html": "<p>It can be externally referenced! See edit above.</p>", "type": "rendered"}, "created_on": "2019-08-12T13:57:02.977843+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "updated_on": null, "type": "issue_comment", "id": 53378831}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/1/comments/53380531.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/1#comment-53380531"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/1.json"}}, "type": "issue", "id": 1, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "Bug in NI_PCIe_6363 extract measurements"}, "content": {"raw": "Slices don't raise an `IndexError` if the final index is out of bounds, they just return what they got. Questionable design decision by Python maybe, but that's how it is, so that's probably why we don't see an error until later.\n\nWe can suppress the error just by truncating the time array to the length of however much data there is:\n```python\ndata['t'] = times[:len(values)]\n```\n\nAnd it's just the case that the data can't be trusted to have more accurate timing than what the card is capable of unless external referencing is implemented as Phil mentions. So the above is obviously a lie, but only because the measurements are inaccurate to that degree anyway, so it's not so bad.", "markup": "markdown", "html": "<p>Slices don't raise an <code>IndexError</code> if the final index is out of bounds, they just return what they got. Questionable design decision by Python maybe, but that's how it is, so that's probably why we don't see an error until later.</p>\n<p>We can suppress the error just by truncating the time array to the length of however much data there is:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">&#39;t&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">times</span><span class=\"p\">[:</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">)]</span>\n</pre></div>\n\n\n<p>And it's just the case that the data can't be trusted to have more accurate timing than what the card is capable of unless external referencing is implemented as Phil mentions. So the above is obviously a lie, but only because the measurements are inaccurate to that degree anyway, so it's not so bad.</p>", "type": "rendered"}, "created_on": "2019-08-12T15:56:13.007310+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-08-12T15:56:26.522348+00:00", "type": "issue_comment", "id": 53380531}], "page": 1, "size": 6}