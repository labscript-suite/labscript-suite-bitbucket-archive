{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/24/comments/43870567.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/24#comment-43870567"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/24.json"}}, "type": "issue", "id": 24, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "Backwards compatible connection table comparisons between different versions"}, "content": {"raw": "Since all properties get saved regardless of whether the user set them (they are keyword arguments that always have defaults), whenever a new property is introduced, it will definitely be present in all compilations.\n\nCan connections.py simply declare a connection table valid if it has additional properties not present in the lab connection table? Or you want a way to declare that some of them *should* invalidate the connection table, but some shouldn't, on a case by case basis?", "markup": "markdown", "html": "<p>Since all properties get saved regardless of whether the user set them (they are keyword arguments that always have defaults), whenever a new property is introduced, it will definitely be present in all compilations.</p>\n<p>Can connections.py simply declare a connection table valid if it has additional properties not present in the lab connection table? Or you want a way to declare that some of them <em>should</em> invalidate the connection table, but some shouldn't, on a case by case basis?</p>", "type": "rendered"}, "created_on": "2018-03-12T23:46:34.650029+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 43870567}