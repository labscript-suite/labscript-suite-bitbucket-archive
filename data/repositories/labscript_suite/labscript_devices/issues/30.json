{"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/labscript_devices/issues/30/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/30.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/issues/30/watch"}, "comments": {"href": "data/repositories/labscript_suite/labscript_devices/issues/30/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/30/device-code-should-have-a-version"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/issues/30/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Device code should have a version associated with it", "component": null, "votes": 0, "watches": 1, "content": {"raw": "In moving towards a more siloed set of device code, that may or may not be housed within labscript_devices module and/or may not be committed to the labscript_devices master repository, I think that we should tag devices code with versions. I think preferably, this would be a semver string or tuple as an attribute of the relevant class that labscript/BLACS(GUI/Worker)/runviewer instantiates (I think all classes in a given commit would be expected to have the same version). Labscript would be expected to save this information in the connection table properties.\r\n\r\nWe could then use standard semver logic to determine shot compatibility (although, it could be argued that you might want to restrict shots from running if they were compiled using a different version due to the potential interplay of a bug fix applied only to one side of labscript and BLACS, in which case perhaps the strictness of the comparison should be configurable via the connection table plugin preferences window)", "markup": "markdown", "html": "<p>In moving towards a more siloed set of device code, that may or may not be housed within labscript_devices module and/or may not be committed to the labscript_devices master repository, I think that we should tag devices code with versions. I think preferably, this would be a semver string or tuple as an attribute of the relevant class that labscript/BLACS(GUI/Worker)/runviewer instantiates (I think all classes in a given commit would be expected to have the same version). Labscript would be expected to save this information in the connection table properties.</p>\n<p>We could then use standard semver logic to determine shot compatibility (although, it could be argued that you might want to restrict shots from running if they were compiled using a different version due to the potential interplay of a bug fix applied only to one side of labscript and BLACS, in which case perhaps the strictness of the comparison should be configurable via the connection table plugin preferences window)</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-10-30T04:04:04.701673+00:00", "milestone": null, "updated_on": "2018-10-30T15:15:27.068466+00:00", "type": "issue", "id": 30}