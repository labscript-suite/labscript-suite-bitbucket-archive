{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/30/comments/48645021.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/30#comment-48645021"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/30.json"}}, "type": "issue", "id": 30, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "Device code should have a version associated with it"}, "content": {"raw": "Agreed. I'm doing something like this with the new DAQmx class. I think a single version saved as a connection table attribute, and a line in the BLACS and runviewer classes that checks it's not a major version higher than what they are is sufficient.\n\nI would forgo configuration in BLACS for the moment and just be aggressive about bumping the major version number and requiring recompilation. We can revisit this as needed.\n\nI might aim to wrap the version checking functionality into a simple function in labscript_devices like `check_version` but not for imports, and with an error message talking about recompilation or whatnot. At the moment I have this in the DAQmx classes but I should make it available to other devices.\n\nA separate issue is stability of the interface of device classes for the purpose of experiment scripts. It's like we have \"binary compatibility\" (will the shot file run the same?) and \"source compatibility\" (will the experiment script compile to a shot that will run the same?) So if we're bumping version numbers based on compiled-shot compatibility, semver logic will not apply for working out whether an experiment script will still compile. But I think it would be premature to address this at the moment since it has not been a problem in practice yet.", "markup": "markdown", "html": "<p>Agreed. I'm doing something like this with the new DAQmx class. I think a single version saved as a connection table attribute, and a line in the BLACS and runviewer classes that checks it's not a major version higher than what they are is sufficient.</p>\n<p>I would forgo configuration in BLACS for the moment and just be aggressive about bumping the major version number and requiring recompilation. We can revisit this as needed.</p>\n<p>I might aim to wrap the version checking functionality into a simple function in labscript_devices like <code>check_version</code> but not for imports, and with an error message talking about recompilation or whatnot. At the moment I have this in the DAQmx classes but I should make it available to other devices.</p>\n<p>A separate issue is stability of the interface of device classes for the purpose of experiment scripts. It's like we have \"binary compatibility\" (will the shot file run the same?) and \"source compatibility\" (will the experiment script compile to a shot that will run the same?) So if we're bumping version numbers based on compiled-shot compatibility, semver logic will not apply for working out whether an experiment script will still compile. But I think it would be premature to address this at the moment since it has not been a problem in practice yet.</p>", "type": "rendered"}, "created_on": "2018-10-30T15:15:27.027758+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-10-30T15:16:40.734243+00:00", "type": "issue_comment", "id": 48645021}], "page": 1, "size": 1}