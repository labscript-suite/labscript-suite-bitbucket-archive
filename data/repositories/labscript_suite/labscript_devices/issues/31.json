{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/labscript_devices/issues/31/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/31.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/issues/31/watch"}, "comments": {"href": "data/repositories/labscript_suite/labscript_devices/issues/31/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/31/imaqdx-camera-server-makes-model-specific"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/issues/31/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "imaqdx camera server makes model-specific assumptions", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I was setting up a Point Grey Flea 3 camera with the imaqdx camera server, and a bunch of the attributes have different names than what the server assumes.\r\n\r\nI'm not 100% sure how to go about fixing this, but I'm told perhaps some sub-part of the attribute string is universal, so perhaps the correct attribute can be found for a particular model by looking at all attributes and looking for that sub-part.\r\n\r\nHere's the changes I had to make to get it working. The exposure time attribute has no parts of the string in common with what the server was previously assuming it to be, though I haven't confirmed I can actually change the exposure time with this attribute, haven't gotten that far yet.\r\n\r\nAnyhow flagging this as inadequate, we need a better solution, hopefully something better than hard-coding attribute lists by camera model.\r\n\r\n\r\n```diff\r\n@@ -312,7 +316,7 @@\r\n \r\n         # Set the camera properties\r\n         timeout_attr = 'AcquisitionAttributes::Timeout'\r\n-        exposure_attr = 'CameraAttributes::Controls::Exposure::ExposureTimeAbs'\r\n+        exposure_attr = 'CameraAttributes::Shutter::Value'\r\n         if timeout_attr not in imaqdx_properties:\r\n             # Set acquisition timeout to fixed value\r\n             print('Setting {} to {:.3f}s'.format(timeout_attr, stop_time + 5))\r\n@@ -329,11 +333,11 @@\r\n \r\n         # Get the camera properties\r\n         self.exposure_time = self.camera.get_attribute(exposure_attr)\r\n-        self.width = self.camera.get_attribute('CameraAttributes::ImageFormat::Width')\r\n-        self.height = self.camera.get_attribute('CameraAttributes::ImageFormat::Height')\r\n+        self.width = self.camera.get_attribute('AcquisitionAttributes::Width')\r\n+        self.height = self.camera.get_attribute('AcquisitionAttributes::Height')\r\n         self.binning_horizontal = self.camera.get_attribute('CameraAttributes::ImageMode::BinningHorizontal')\r\n         self.binning_vertical = self.camera.get_attribute('CameraAttributes::ImageMode::BinningVertical')\r\n-        self.pixel_format = self.camera.get_attribute('CameraAttributes::ImageFormat::PixelFormat')\r\n+        self.pixel_format = self.camera.get_attribute('AcquisitionAttributes::PixelFormat')\r\n \r\n \r\n         print(f'Configuring camera for {self.n_images} images.')\r\n```", "markup": "markdown", "html": "<p>I was setting up a Point Grey Flea 3 camera with the imaqdx camera server, and a bunch of the attributes have different names than what the server assumes.</p>\n<p>I'm not 100% sure how to go about fixing this, but I'm told perhaps some sub-part of the attribute string is universal, so perhaps the correct attribute can be found for a particular model by looking at all attributes and looking for that sub-part.</p>\n<p>Here's the changes I had to make to get it working. The exposure time attribute has no parts of the string in common with what the server was previously assuming it to be, though I haven't confirmed I can actually change the exposure time with this attribute, haven't gotten that far yet.</p>\n<p>Anyhow flagging this as inadequate, we need a better solution, hopefully something better than hard-coding attribute lists by camera model.</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gu\">@@ -312,7 +316,7 @@</span>\n\n         # Set the camera properties\n         timeout_attr = &#39;AcquisitionAttributes::Timeout&#39;\n<span class=\"gd\">-        exposure_attr = &#39;CameraAttributes::Controls::Exposure::ExposureTimeAbs&#39;</span>\n<span class=\"gi\">+        exposure_attr = &#39;CameraAttributes::Shutter::Value&#39;</span>\n         if timeout_attr not in imaqdx_properties:\n             # Set acquisition timeout to fixed value\n             print(&#39;Setting {} to {:.3f}s&#39;.format(timeout_attr, stop_time + 5))\n<span class=\"gu\">@@ -329,11 +333,11 @@</span>\n\n         # Get the camera properties\n         self.exposure_time = self.camera.get_attribute(exposure_attr)\n<span class=\"gd\">-        self.width = self.camera.get_attribute(&#39;CameraAttributes::ImageFormat::Width&#39;)</span>\n<span class=\"gd\">-        self.height = self.camera.get_attribute(&#39;CameraAttributes::ImageFormat::Height&#39;)</span>\n<span class=\"gi\">+        self.width = self.camera.get_attribute(&#39;AcquisitionAttributes::Width&#39;)</span>\n<span class=\"gi\">+        self.height = self.camera.get_attribute(&#39;AcquisitionAttributes::Height&#39;)</span>\n         self.binning_horizontal = self.camera.get_attribute(&#39;CameraAttributes::ImageMode::BinningHorizontal&#39;)\n         self.binning_vertical = self.camera.get_attribute(&#39;CameraAttributes::ImageMode::BinningVertical&#39;)\n<span class=\"gd\">-        self.pixel_format = self.camera.get_attribute(&#39;CameraAttributes::ImageFormat::PixelFormat&#39;)</span>\n<span class=\"gi\">+        self.pixel_format = self.camera.get_attribute(&#39;AcquisitionAttributes::PixelFormat&#39;)</span>\n\n\n         print(f&#39;Configuring camera for {self.n_images} images.&#39;)\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-01-17T22:51:20.123010+00:00", "milestone": null, "updated_on": "2019-04-16T13:07:07.502385+00:00", "type": "issue", "id": 31}