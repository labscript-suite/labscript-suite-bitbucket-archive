{"pagelen": 100, "values": [{"changes": {"content": {"new": "If the PulseBlaster's `pulse_width` keyword argument is used, the shot ends up being approximately twice as long as it should be:\r\n\r\n```python\r\nfrom labscript import start, stop, ClockLine, labscript_init\r\nfrom labscript_devices.PulseBlaster import PulseBlaster\r\n\r\nlabscript_init('test.h5', new=True, overwrite=True)\r\nPulseBlaster('pulseblaster', pulse_width=1e-6)\r\nClockLine('clockline', pseudoclock=pulseblaster.pseudoclock, connection='flag 0')\r\n\r\n\r\nstart()\r\nstop(3)\r\n\r\nimport h5py\r\nwith h5py.File('test.h5') as f:\r\n    duration = f['devices/pulseblaster/PULSE_PROGRAM']['length'].sum() / 1e9\r\n    print(duration)\r\n```\r\n\r\nThis prints `6.000053678714858` as the total duration of PulseBlaster instructions, although the requested stop time was 3 seconds.\r\n\r\nThis is a regression introduced by 33d843a057e1. If I backout that changeset, the above prints the more expected value `3.0000429429718882`.\r\n\r\nBacking out the changeset had a minor merge conflict. It was trivial, but for what it's worth [here](#!/cbillington/labscript_devices/commits/729c72a6692b3a45021a05255fc4b528f481aa2a) is a commit that backs it out, if you want to see the diff without all the noise of what happened in between then and now.\r\n\r\nThere is also a spurious error raised if there is a single segment of the experiment in which no non-external clocks tick. The error is clearly intended to prevent you using pulse_width when there are *no* external clocks in use, but it is being tested on a per-instruction basis. It almost looks like the error checking can be removed with no consequence.\r\n\r\n```python\r\nfrom labscript import start, stop, ClockLine, labscript_init, DigitalOut, DDS\r\nfrom labscript_devices.PulseBlaster import PulseBlaster\r\nfrom labscript_devices.NovaTechDDS9M import NovaTechDDS9M\r\n\r\nlabscript_init('test.h5', new=True, overwrite=True)\r\nPulseBlaster('pulseblaster', pulse_width=1e-6)\r\nClockLine('clockline', pseudoclock=pulseblaster.pseudoclock, connection='flag 0')\r\nNovaTechDDS9M('novatech', parent_device=clockline)\r\nDDS('NTDDS', parent_device=novatech, connection='channel 1')\r\nDigitalOut('DO', parent_device=pulseblaster.direct_outputs, connection='flag 1')\r\n\r\nstart()\r\n\r\nDO.go_high(0.1)\r\nNTDDS.setamp(0.2, 1.0)\r\n\r\nstop(3)\r\n```\r\n```python\r\nTraceback (most recent call last):\r\n  File \"261.py\", line 17, in <module>\r\n    stop(3)\r\n  File \"/home/bilbo/labscript_suite/labscript/labscript.py\", line 2337, in stop\r\n    generate_code()\r\n  File \"/home/bilbo/labscript_suite/labscript/labscript.py\", line 2213, in generate_code\r\n    device.generate_code(hdf5_file)\r\n  File \"/home/bilbo/labscript_suite/labscript_devices/PulseBlaster.py\", line 579, in generate_code\r\n    pb_inst = self.convert_to_pb_inst(dig_outputs, dds_outputs, freqs, amps, phases)\r\n  File \"/home/bilbo/labscript_suite/labscript_devices/PulseBlaster.py\", line 405, in convert_to_pb_inst\r\n    raise LabscriptError('You cannot set a pulse_width for %s (%s) if it is not used as a pseudoclock for another device'%(self.name, self.description))\r\nlabscript.labscript.LabscriptError: You cannot set a pulse_width for pulseblaster (PB-DDSII-300) if it is not used as a pseudoclock for another device\r\n```", "old": "If the PulseBlaster's `pulse_width` keyword argument is used, the shot ends up being approximately twice as long as it should be:\r\n\r\n```python\r\nfrom labscript import start, stop, ClockLine, labscript_init\r\nfrom labscript_devices.PulseBlaster import PulseBlaster\r\n\r\nlabscript_init('test.h5', new=True, overwrite=True)\r\nPulseBlaster('pulseblaster', pulse_width=1e-6)\r\nClockLine('clockline', pseudoclock=pulseblaster.pseudoclock, connection='flag 0')\r\n\r\n\r\nstart()\r\nstop(3)\r\n\r\nimport h5py\r\nwith h5py.File('test.h5') as f:\r\n    duration = f['devices/pulseblaster/PULSE_PROGRAM']['length'].sum() / 1e9\r\n    print(duration)\r\n```\r\n\r\nThis prints `6.000053678714858` as the total duration of PulseBlaster instructions, although the requested stop time was 3 seconds.\r\n\r\nThis is a regression introduced by 33d843a057e1. If I backout that changeset, the above prints the more expected value `3.0000429429718882`.\r\n\r\nBacking out the changeset had a minor merge conflict. It was trivial, but for what it's worth [here](#!/cbillington/labscript_devices/commits/729c72a6692b3a45021a05255fc4b528f481aa2a) is a commit that backs it out, if you want to see the diff without all the noise of what happened in between then and now.\r\n\r\nThere is also a spurious error raised if there is a single segment of the experiment in which no non-external clocks tick. The error is clearly intended to prevent you using pulse_width when there are *no* external clocks in use, but it is being tested on a instruction basis. It almost looks like the error checking can be removed with no consequence.\r\n\r\n```python\r\nfrom labscript import start, stop, ClockLine, labscript_init, DigitalOut, DDS\r\nfrom labscript_devices.PulseBlaster import PulseBlaster\r\nfrom labscript_devices.NovaTechDDS9M import NovaTechDDS9M\r\n\r\nlabscript_init('test.h5', new=True, overwrite=True)\r\nPulseBlaster('pulseblaster', pulse_width=1e-6)\r\nClockLine('clockline', pseudoclock=pulseblaster.pseudoclock, connection='flag 0')\r\nNovaTechDDS9M('novatech', parent_device=clockline)\r\nDDS('NTDDS', parent_device=novatech, connection='channel 1')\r\nDigitalOut('DO', parent_device=pulseblaster.direct_outputs, connection='flag 1')\r\n\r\nstart()\r\n\r\nDO.go_high(0.1)\r\nNTDDS.setamp(0.2, 1.0)\r\n\r\nstop(3)\r\n```\r\n```python\r\nTraceback (most recent call last):\r\n  File \"261.py\", line 17, in <module>\r\n    stop(3)\r\n  File \"/home/bilbo/labscript_suite/labscript/labscript.py\", line 2337, in stop\r\n    generate_code()\r\n  File \"/home/bilbo/labscript_suite/labscript/labscript.py\", line 2213, in generate_code\r\n    device.generate_code(hdf5_file)\r\n  File \"/home/bilbo/labscript_suite/labscript_devices/PulseBlaster.py\", line 579, in generate_code\r\n    pb_inst = self.convert_to_pb_inst(dig_outputs, dds_outputs, freqs, amps, phases)\r\n  File \"/home/bilbo/labscript_suite/labscript_devices/PulseBlaster.py\", line 405, in convert_to_pb_inst\r\n    raise LabscriptError('You cannot set a pulse_width for %s (%s) if it is not used as a pseudoclock for another device'%(self.name, self.description))\r\nlabscript.labscript.LabscriptError: You cannot set a pulse_width for pulseblaster (PB-DDSII-300) if it is not used as a pseudoclock for another device\r\n```"}}, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/33/changes/52127639.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/33#comment-52127639"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/33.json"}}, "type": "issue", "id": 33, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "Setting pulseblaster pulse_width has incorrect results; spurious error."}, "created_on": "2019-05-14T20:37:53.943097+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "message": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "type": "issue_change", "id": 52127639}, {"changes": {"assignee_account_id": {"new": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3", "old": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "assignee": {"new": "cbillington", "old": "philipstarkey"}}, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/33/changes/52146982.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/33#comment-52146982"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/33.json"}}, "type": "issue", "id": 33, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "Setting pulseblaster pulse_width has incorrect results; spurious error."}, "created_on": "2019-05-15T22:00:30.980572+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "message": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "type": "issue_change", "id": 52146982}, {"changes": {"state": {"new": "resolved", "old": "new"}}, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/33/changes/52395741.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/33#comment-52395741"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/33.json"}}, "type": "issue", "id": 33, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "Setting pulseblaster pulse_width has incorrect results; spurious error."}, "created_on": "2019-06-01T16:36:22.209221+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "message": {"raw": "Resolve issue #33.\n\nPulseblasters now have a long delay time computed from their core clock freq,\nwhich has been added as an instance attribute to every subclass.\n(this is messy, as it is duplicated in the BLACS worker classes too. It should be\npassed as a connection table property ideally, but this will have to wait for a\nmore general 'pulseblaster unification' change I think, along the lines of the\nNI DAQ unification).\n\nFor each clock tick, the high time is half the clock period if\n`pulse_width='symmetric'` (the default), the minimum possible if\n`pulse_width='minimum'`, or a fixed value if `pulse_width` is given as a number.\n\nThe high time is then clipped to self.long_delay if it is larger, in which case\nthe pulse_width argument is not honoured, but 57 second high times ought to be\nvisible on scopes and not too fast for any devices, so this is preferable to\nthe alternative of adding LONG_DELAY instructions to *both* the high and low\ntimes of the clock ticks.\n\nThe low time is then computed as whatever is left, and split into a LONG_DELAY\ninstruction plus the remainder as an END_LOOP instruction, as before.\n\nIf the PulseBlaster has no external clocks for this clock tick, it uses a\nLONG_DELAY plus the remainder as a CONTINUE instruction, as before.\n\n\u2192 <<cset aba86b3cfc18>>", "markup": "markdown", "html": "<p>Resolve issue <a href=\"#!/labscript_suite/labscript_devices/issues/33/setting-pulseblaster-pulse_width-has\" rel=\"nofollow\" title=\"Setting pulseblaster pulse_width has incorrect results; spurious error.\" class=\"ap-connect-link\"><s>#33</s></a>.</p>\n<p>Pulseblasters now have a long delay time computed from their core clock freq,\nwhich has been added as an instance attribute to every subclass.\n(this is messy, as it is duplicated in the BLACS worker classes too. It should be\npassed as a connection table property ideally, but this will have to wait for a\nmore general 'pulseblaster unification' change I think, along the lines of the\nNI DAQ unification).</p>\n<p>For each clock tick, the high time is half the clock period if\n<code>pulse_width='symmetric'</code> (the default), the minimum possible if\n<code>pulse_width='minimum'</code>, or a fixed value if <code>pulse_width</code> is given as a number.</p>\n<p>The high time is then clipped to self.long_delay if it is larger, in which case\nthe pulse_width argument is not honoured, but 57 second high times ought to be\nvisible on scopes and not too fast for any devices, so this is preferable to\nthe alternative of adding LONG_DELAY instructions to <em>both</em> the high and low\ntimes of the clock ticks.</p>\n<p>The low time is then computed as whatever is left, and split into a LONG_DELAY\ninstruction plus the remainder as an END_LOOP instruction, as before.</p>\n<p>If the PulseBlaster has no external clocks for this clock tick, it uses a\nLONG_DELAY plus the remainder as a CONTINUE instruction, as before.</p>\n<p>\u2192 &lt;&lt;cset <a href=\"#!/labscript_suite/labscript_devices/commits/aba86b3cfc18\" rel=\"nofollow\" class=\"ap-connect-link\">aba86b3cfc18</a>&gt;&gt;</p>", "type": "rendered"}, "type": "issue_change", "id": 52395741}], "page": 1, "size": 3}