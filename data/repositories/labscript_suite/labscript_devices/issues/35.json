{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/labscript_devices/issues/35/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/35.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/issues/35/watch"}, "comments": {"href": "data/repositories/labscript_suite/labscript_devices/issues/35/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/35/novatech-dds9m-digital-gate-being"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/issues/35/vote"}}, "reporter": {"display_name": "Lincoln Turner", "uuid": "{7e35ca32-09d7-4a25-a548-32edef727dda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D"}, "html": {"href": "https://bitbucket.org/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2ac774c664cd58fc011cc65e0980b4c1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLT-3.png"}}, "nickname": "lincolndturner", "type": "user", "account_id": "5b46a53d845e7e2cdff75ad3"}, "title": "Novatech DDS9m digital-gate being inappropriately held to DDS table pseudoclock", "component": null, "votes": 0, "watches": 3, "content": {"raw": "# Background\r\n\r\nOur novatech dds9m based DDS devices \\(supernovae et al\\) have  \r\nfreq/amp/phase points stepped through by a pseudoclock. This  \r\npseudoclock is rate-limited to 9990 updates/sec, and labscript  \r\nenforces this.\r\n\r\nUnlike our other DDSes, our novatech boxes have a TTL enable line,  \r\nwhich gates the output rf. This is NOT necessarily off the same  \r\npseudoclock, and for example could come from an NI DO clocked off a  \r\nfaster pseudoclock.\r\n\r\nThe digital line connected to enable is set in the connection table  \r\nconstructor line as a dict-kwarg with key 'digital\\_gate'.\r\n\r\nThis allows the labscript DDS-object to have a enable/disable  \r\nmethods. For example `MOT.enable()`.\r\n\r\n# Issue\r\n\r\nIn \"previous versions\" \\(under python 2, and before recent py3isation\\)  \r\nthe enable/disable methods could be called with less than 100us  \r\nbetween them. Calling .setfreq\\(\\), .setamp\\(\\) or .setphase\\(\\) with <100us  \r\nspacing did raise a Labscript exception.\r\n\r\nHowever, with latest labscript and latest labscript\\_devices, having a  \r\n10us delay between MOT.enable\\(\\) and MOT.disable\\(\\) triggers a timing  \r\nerror \\(pseudoclock ticking too fast\\):\r\n\r\n```\r\n'One or more connected devices on ClockLine %s cannot support\r\nupdate delays shorter than %s sec.'%(clock_line.name,\r\nstr(1.0/clock_line.clock_limit))) labscript.labscript.LabscriptError:\r\nCommands have been issued to devices attached to\r\npulseblaster_0_pseudoclock at t= 19.9632 s and 19.9633 s. One or more\r\nconnected devices on ClockLine pulseblaster_0_novatech_clock cannot\r\nsupport update delays shorter than 0.0001001001001001001 sec.\r\n```", "markup": "markdown", "html": "<h1 id=\"markdown-header-background\">Background</h1>\n<p>Our novatech dds9m based DDS devices (supernovae et al) have<br />\nfreq/amp/phase points stepped through by a pseudoclock. This<br />\npseudoclock is rate-limited to 9990 updates/sec, and labscript<br />\nenforces this.</p>\n<p>Unlike our other DDSes, our novatech boxes have a TTL enable line,<br />\nwhich gates the output rf. This is NOT necessarily off the same<br />\npseudoclock, and for example could come from an NI DO clocked off a<br />\nfaster pseudoclock.</p>\n<p>The digital line connected to enable is set in the connection table<br />\nconstructor line as a dict-kwarg with key 'digital_gate'.</p>\n<p>This allows the labscript DDS-object to have a enable/disable<br />\nmethods. For example <code>MOT.enable()</code>.</p>\n<h1 id=\"markdown-header-issue\">Issue</h1>\n<p>In \"previous versions\" (under python 2, and before recent py3isation)<br />\nthe enable/disable methods could be called with less than 100us<br />\nbetween them. Calling .setfreq(), .setamp() or .setphase() with &lt;100us<br />\nspacing did raise a Labscript exception.</p>\n<p>However, with latest labscript and latest labscript_devices, having a<br />\n10us delay between MOT.enable() and MOT.disable() triggers a timing<br />\nerror (pseudoclock ticking too fast):</p>\n<div class=\"codehilite\"><pre><span></span>&#39;One or more connected devices on ClockLine %s cannot support\nupdate delays shorter than %s sec.&#39;%(clock_line.name,\nstr(1.0/clock_line.clock_limit))) labscript.labscript.LabscriptError:\nCommands have been issued to devices attached to\npulseblaster_0_pseudoclock at t= 19.9632 s and 19.9633 s. One or more\nconnected devices on ClockLine pulseblaster_0_novatech_clock cannot\nsupport update delays shorter than 0.0001001001001001001 sec.\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-20T04:02:50.925296+00:00", "milestone": null, "updated_on": "2019-06-25T06:36:02.585900+00:00", "type": "issue", "id": 35}