{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/35/comments/52661686.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/35#comment-52661686"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/35.json"}}, "type": "issue", "id": 35, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "Novatech DDS9m digital-gate being inappropriately held to DDS table pseudoclock"}, "content": {"raw": "Thank for the report.\n\nThere are definitely timing bugs in labscript still, I had labscript generate instructions too fast for an NI DAQmx device the other day and had to just lie to labscript about the capabilities of the DAQmx device to make it not generate too fast instructions. Probably not related to the bug you're reporting, but I'm not looking forward to trying to fix any more timing bugs until the timing code gets an overhaul (which is in the works).\n\nHowever I don't think your issue is precisely what you describe, or if it is it is triggered only in certain situations. This minimal example, which is what you described, works for me:\n\n```python\nfrom labscript import start, stop, DDS, ClockLine, labscript_init, DigitalOut\nfrom labscript_devices.NovaTechDDS9M import NovaTechDDS9M\nfrom labscript_devices.PulseBlaster import PulseBlaster\nfrom labscript_devices.NI_DAQmx.labscript_devices import NI_PCIe_6363\n\n\nlabscript_init('test.h5', new=True, overwrite=True)\nPulseBlaster('pulseblaster')\nClockLine('dds_clock', pulseblaster.pseudoclock, 'flag 1')\nClockLine('gate_clock', pulseblaster.pseudoclock, 'flag 2')\n\nNovaTechDDS9M('novatech', dds_clock)\nNI_PCIe_6363('ni_pcie_6363', gate_clock, clock_terminal='PFI0')\n\nDDS(\n    'dds',\n    novatech,\n    'dds 0',\n    digital_gate={'device': ni_pcie_6363, 'connection': 'port0/line0'},\n)\n\n# Must have an even number of DOs on an NI DAQmx device\nDigitalOut('dummy_do', ni_pcie_6363, 'port0/line1')\n\nstart()\nt = 0\ndds.enable(t)\nt += 5e-6\ndds.disable(t)\nt += 1\nstop(t)\n```\n\nAnd your exception implies an update interval of exactly 100us was requested somewhere, whereas the min update interval is 1.001us (though obviously the bug could be such that the exception can't be trusted). But if the exception is right, it seems like this is caused by requested update rates close to the 100us interval, and not a 10us update interval.\n\nDo you have an example which breaks (even if it is not a minimal one)? I don't doubt that there could be bugs causing this, but I'm skeptical that it has to do with the digital gate.", "markup": "markdown", "html": "<p>Thank for the report.</p>\n<p>There are definitely timing bugs in labscript still, I had labscript generate instructions too fast for an NI DAQmx device the other day and had to just lie to labscript about the capabilities of the DAQmx device to make it not generate too fast instructions. Probably not related to the bug you're reporting, but I'm not looking forward to trying to fix any more timing bugs until the timing code gets an overhaul (which is in the works).</p>\n<p>However I don't think your issue is precisely what you describe, or if it is it is triggered only in certain situations. This minimal example, which is what you described, works for me:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">labscript</span> <span class=\"kn\">import</span> <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"p\">,</span> <span class=\"n\">DDS</span><span class=\"p\">,</span> <span class=\"n\">ClockLine</span><span class=\"p\">,</span> <span class=\"n\">labscript_init</span><span class=\"p\">,</span> <span class=\"n\">DigitalOut</span>\n<span class=\"kn\">from</span> <span class=\"nn\">labscript_devices.NovaTechDDS9M</span> <span class=\"kn\">import</span> <span class=\"n\">NovaTechDDS9M</span>\n<span class=\"kn\">from</span> <span class=\"nn\">labscript_devices.PulseBlaster</span> <span class=\"kn\">import</span> <span class=\"n\">PulseBlaster</span>\n<span class=\"kn\">from</span> <span class=\"nn\">labscript_devices.NI_DAQmx.labscript_devices</span> <span class=\"kn\">import</span> <span class=\"n\">NI_PCIe_6363</span>\n\n\n<span class=\"n\">labscript_init</span><span class=\"p\">(</span><span class=\"s1\">&#39;test.h5&#39;</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n<span class=\"n\">PulseBlaster</span><span class=\"p\">(</span><span class=\"s1\">&#39;pulseblaster&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ClockLine</span><span class=\"p\">(</span><span class=\"s1\">&#39;dds_clock&#39;</span><span class=\"p\">,</span> <span class=\"n\">pulseblaster</span><span class=\"o\">.</span><span class=\"n\">pseudoclock</span><span class=\"p\">,</span> <span class=\"s1\">&#39;flag 1&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ClockLine</span><span class=\"p\">(</span><span class=\"s1\">&#39;gate_clock&#39;</span><span class=\"p\">,</span> <span class=\"n\">pulseblaster</span><span class=\"o\">.</span><span class=\"n\">pseudoclock</span><span class=\"p\">,</span> <span class=\"s1\">&#39;flag 2&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">NovaTechDDS9M</span><span class=\"p\">(</span><span class=\"s1\">&#39;novatech&#39;</span><span class=\"p\">,</span> <span class=\"n\">dds_clock</span><span class=\"p\">)</span>\n<span class=\"n\">NI_PCIe_6363</span><span class=\"p\">(</span><span class=\"s1\">&#39;ni_pcie_6363&#39;</span><span class=\"p\">,</span> <span class=\"n\">gate_clock</span><span class=\"p\">,</span> <span class=\"n\">clock_terminal</span><span class=\"o\">=</span><span class=\"s1\">&#39;PFI0&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">DDS</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;dds&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">novatech</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;dds 0&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">digital_gate</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;device&#39;</span><span class=\"p\">:</span> <span class=\"n\">ni_pcie_6363</span><span class=\"p\">,</span> <span class=\"s1\">&#39;connection&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;port0/line0&#39;</span><span class=\"p\">},</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Must have an even number of DOs on an NI DAQmx device</span>\n<span class=\"n\">DigitalOut</span><span class=\"p\">(</span><span class=\"s1\">&#39;dummy_do&#39;</span><span class=\"p\">,</span> <span class=\"n\">ni_pcie_6363</span><span class=\"p\">,</span> <span class=\"s1\">&#39;port0/line1&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">dds</span><span class=\"o\">.</span><span class=\"n\">enable</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n<span class=\"n\">t</span> <span class=\"o\">+=</span> <span class=\"mf\">5e-6</span>\n<span class=\"n\">dds</span><span class=\"o\">.</span><span class=\"n\">disable</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n<span class=\"n\">t</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n<span class=\"n\">stop</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>And your exception implies an update interval of exactly 100us was requested somewhere, whereas the min update interval is 1.001us (though obviously the bug could be such that the exception can't be trusted). But if the exception is right, it seems like this is caused by requested update rates close to the 100us interval, and not a 10us update interval.</p>\n<p>Do you have an example which breaks (even if it is not a minimal one)? I don't doubt that there could be bugs causing this, but I'm skeptical that it has to do with the digital gate.</p>", "type": "rendered"}, "created_on": "2019-06-20T04:28:51.558137+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-06-20T04:30:17.461854+00:00", "type": "issue_comment", "id": 52661686}