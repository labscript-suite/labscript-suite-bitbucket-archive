{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/35/comments/52661686.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/35#comment-52661686"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/35.json"}}, "type": "issue", "id": 35, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "Novatech DDS9m digital-gate being inappropriately held to DDS table pseudoclock"}, "content": {"raw": "Thank for the report.\n\nThere are definitely timing bugs in labscript still, I had labscript generate instructions too fast for an NI DAQmx device the other day and had to just lie to labscript about the capabilities of the DAQmx device to make it not generate too fast instructions. Probably not related to the bug you're reporting, but I'm not looking forward to trying to fix any more timing bugs until the timing code gets an overhaul (which is in the works).\n\nHowever I don't think your issue is precisely what you describe, or if it is it is triggered only in certain situations. This minimal example, which is what you described, works for me:\n\n```python\nfrom labscript import start, stop, DDS, ClockLine, labscript_init, DigitalOut\nfrom labscript_devices.NovaTechDDS9M import NovaTechDDS9M\nfrom labscript_devices.PulseBlaster import PulseBlaster\nfrom labscript_devices.NI_DAQmx.labscript_devices import NI_PCIe_6363\n\n\nlabscript_init('test.h5', new=True, overwrite=True)\nPulseBlaster('pulseblaster')\nClockLine('dds_clock', pulseblaster.pseudoclock, 'flag 1')\nClockLine('gate_clock', pulseblaster.pseudoclock, 'flag 2')\n\nNovaTechDDS9M('novatech', dds_clock)\nNI_PCIe_6363('ni_pcie_6363', gate_clock, clock_terminal='PFI0')\n\nDDS(\n    'dds',\n    novatech,\n    'dds 0',\n    digital_gate={'device': ni_pcie_6363, 'connection': 'port0/line0'},\n)\n\n# Must have an even number of DOs on an NI DAQmx device\nDigitalOut('dummy_do', ni_pcie_6363, 'port0/line1')\n\nstart()\nt = 0\ndds.enable(t)\nt += 5e-6\ndds.disable(t)\nt += 1\nstop(t)\n```\n\nAnd your exception implies an update interval of exactly 100us was requested somewhere, whereas the min update interval is 1.001us (though obviously the bug could be such that the exception can't be trusted). But if the exception is right, it seems like this is caused by requested update rates close to the 100us interval, and not a 10us update interval.\n\nDo you have an example which breaks (even if it is not a minimal one)? I don't doubt that there could be bugs causing this, but I'm skeptical that it has to do with the digital gate.", "markup": "markdown", "html": "<p>Thank for the report.</p>\n<p>There are definitely timing bugs in labscript still, I had labscript generate instructions too fast for an NI DAQmx device the other day and had to just lie to labscript about the capabilities of the DAQmx device to make it not generate too fast instructions. Probably not related to the bug you're reporting, but I'm not looking forward to trying to fix any more timing bugs until the timing code gets an overhaul (which is in the works).</p>\n<p>However I don't think your issue is precisely what you describe, or if it is it is triggered only in certain situations. This minimal example, which is what you described, works for me:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">labscript</span> <span class=\"kn\">import</span> <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"p\">,</span> <span class=\"n\">DDS</span><span class=\"p\">,</span> <span class=\"n\">ClockLine</span><span class=\"p\">,</span> <span class=\"n\">labscript_init</span><span class=\"p\">,</span> <span class=\"n\">DigitalOut</span>\n<span class=\"kn\">from</span> <span class=\"nn\">labscript_devices.NovaTechDDS9M</span> <span class=\"kn\">import</span> <span class=\"n\">NovaTechDDS9M</span>\n<span class=\"kn\">from</span> <span class=\"nn\">labscript_devices.PulseBlaster</span> <span class=\"kn\">import</span> <span class=\"n\">PulseBlaster</span>\n<span class=\"kn\">from</span> <span class=\"nn\">labscript_devices.NI_DAQmx.labscript_devices</span> <span class=\"kn\">import</span> <span class=\"n\">NI_PCIe_6363</span>\n\n\n<span class=\"n\">labscript_init</span><span class=\"p\">(</span><span class=\"s1\">&#39;test.h5&#39;</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n<span class=\"n\">PulseBlaster</span><span class=\"p\">(</span><span class=\"s1\">&#39;pulseblaster&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ClockLine</span><span class=\"p\">(</span><span class=\"s1\">&#39;dds_clock&#39;</span><span class=\"p\">,</span> <span class=\"n\">pulseblaster</span><span class=\"o\">.</span><span class=\"n\">pseudoclock</span><span class=\"p\">,</span> <span class=\"s1\">&#39;flag 1&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ClockLine</span><span class=\"p\">(</span><span class=\"s1\">&#39;gate_clock&#39;</span><span class=\"p\">,</span> <span class=\"n\">pulseblaster</span><span class=\"o\">.</span><span class=\"n\">pseudoclock</span><span class=\"p\">,</span> <span class=\"s1\">&#39;flag 2&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">NovaTechDDS9M</span><span class=\"p\">(</span><span class=\"s1\">&#39;novatech&#39;</span><span class=\"p\">,</span> <span class=\"n\">dds_clock</span><span class=\"p\">)</span>\n<span class=\"n\">NI_PCIe_6363</span><span class=\"p\">(</span><span class=\"s1\">&#39;ni_pcie_6363&#39;</span><span class=\"p\">,</span> <span class=\"n\">gate_clock</span><span class=\"p\">,</span> <span class=\"n\">clock_terminal</span><span class=\"o\">=</span><span class=\"s1\">&#39;PFI0&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">DDS</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;dds&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">novatech</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;dds 0&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">digital_gate</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;device&#39;</span><span class=\"p\">:</span> <span class=\"n\">ni_pcie_6363</span><span class=\"p\">,</span> <span class=\"s1\">&#39;connection&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;port0/line0&#39;</span><span class=\"p\">},</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Must have an even number of DOs on an NI DAQmx device</span>\n<span class=\"n\">DigitalOut</span><span class=\"p\">(</span><span class=\"s1\">&#39;dummy_do&#39;</span><span class=\"p\">,</span> <span class=\"n\">ni_pcie_6363</span><span class=\"p\">,</span> <span class=\"s1\">&#39;port0/line1&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">dds</span><span class=\"o\">.</span><span class=\"n\">enable</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n<span class=\"n\">t</span> <span class=\"o\">+=</span> <span class=\"mf\">5e-6</span>\n<span class=\"n\">dds</span><span class=\"o\">.</span><span class=\"n\">disable</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n<span class=\"n\">t</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n<span class=\"n\">stop</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>And your exception implies an update interval of exactly 100us was requested somewhere, whereas the min update interval is 1.001us (though obviously the bug could be such that the exception can't be trusted). But if the exception is right, it seems like this is caused by requested update rates close to the 100us interval, and not a 10us update interval.</p>\n<p>Do you have an example which breaks (even if it is not a minimal one)? I don't doubt that there could be bugs causing this, but I'm skeptical that it has to do with the digital gate.</p>", "type": "rendered"}, "created_on": "2019-06-20T04:28:51.558137+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-06-20T04:30:17.461854+00:00", "type": "issue_comment", "id": 52661686}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/35/comments/52661737.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/35#comment-52661737"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/35.json"}}, "type": "issue", "id": 35, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "Novatech DDS9m digital-gate being inappropriately held to DDS table pseudoclock"}, "content": {"raw": "The most recent merge commit in labscript was a bugfix to some timing code. If you are up-to-date in labscript, you might try reverting to the last commit in the default branch before that merge, in case that change caused a regression affecting your scripts.", "markup": "markdown", "html": "<p>The most recent merge commit in labscript was a bugfix to some timing code. If you are up-to-date in labscript, you might try reverting to the last commit in the default branch before that merge, in case that change caused a regression affecting your scripts.</p>", "type": "rendered"}, "created_on": "2019-06-20T04:35:18.301795+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 52661737}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/35/comments/52704655.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/35#comment-52704655"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/35.json"}}, "type": "issue", "id": 35, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "Novatech DDS9m digital-gate being inappropriately held to DDS table pseudoclock"}, "content": {"raw": "Thanks Chris. I\u2019ll try your MWE in a minute, and the reversion, but for now I\u2019m documenting the error I am seeing\u2026\n\nThe labscript output is: \n\n```\nt = 19.973200000 s: Stern-Gerlach kick\nWARNING: State of digital quantity MOT_repump_gate at t=19.9622s has already been set to low. Overwriting to high. (note: all values in base units where relevant)\nt = 19.963200000 s: fluorescence exposure\nt = 20.073310000 s: Close MOT shutter after fluorescence probe pulse\nt = 20.163310000 s: Zeeman loaded MOT\nt = 20.163310000 s: LF + HF amps active\nt = 23.243310000 s: Open Faraday shutter for alignment purposes...\nt = 23.243310000 s: experiment ends\nTraceback (most recent call last):\nFile \"crossed_beam_bec.py\", line 963, in <module>\nFile \"C:\\labscript_suite\\labscript\\labscript.py\", line 2350, in stop\ngenerate_code()\nFile \"C:\\labscript_suite\\labscript\\labscript.py\", line 2226, in generate_code\ndevice.generate_code(hdf5_file)\nFile \"C:\\labscript_suite\\labscript_devices\\PulseBlaster.py\", line 610, in generate_code\nPseudoclockDevice.generate_code(self, hdf5_file)\nFile \"C:\\labscript_suite\\labscript\\labscript.py\", line 1097, in generate_code\nDevice.generate_code(self, hdf5_file)\nFile \"C:\\labscript_suite\\labscript\\labscript.py\", line 477, in generate_code\ndevice.generate_code(hdf5_file)\nFile \"C:\\labscript_suite\\labscript\\labscript.py\", line 920, in generate_code\nself.generate_clock()\nFile \"C:\\labscript_suite\\labscript\\labscript.py\", line 890, in generate_clock\nall_change_times, change_times = self.collect_change_times(all_outputs, outputs_by_clockline)\nFile \"C:\\labscript_suite\\labscript\\labscript.py\", line 679, in collect_change_times\n'One or more connected devices on ClockLine %s cannot support update delays shorter than %s sec.'%(clock_line.name, str(1.0/clock_line.clock_limit)))\nlabscript.labscript.LabscriptError: Commands have been issued to devices attached to pulseblaster_0_pseudoclock at t= 19.9632 s and 19.96324 s. One or more connected devices on ClockLine pulseblaster_0_novatech_clock cannot support update delays shorter than 0.0001001001001001001 sec.\nCompilation aborted.\n```\n\n  \nThis happens at 19.9632s, which is at the time we print \u201cfluorescence exposure\u201d \\(line 3\\). The relevant labscript is:\n\n```\n # fluorescence exposure\r\n    print_time(t, 'fluorescence exposure')\r\n    avt_makog030b_0.expose('fluorescence', t, 'fluorescence', exposure_time=fluoro_exposure_time)\r\n    MOT_shutter.open(t-shutter_buffer)\r\n    MOT.setamp(t, MOT_imaging_amplitude)\r\n    MOT.setfreq(t, MOT_imaging_detuning, 'd_MHz') # go on resonance\r\n    #t += 10e-6\r\n    MOT.enable(t)\r\n    t += fluoro_exposure_time\r\n    MOT.disable(t-10e-6)\r\n    MOT_repump.disable(t-10e-6)\n```\n\nIndeed, the traceback clearly complains about times 19.963200 and 19.963240 s, i.e. separation by 40us. \n\nThat corresponds to line 8,9,10 in the labscript above. fluoro\\_exposure\\_time in this test was equal to 50us, and so the delay between MOT.enable\\(\\) and MOT.disable\\(\\) was 40us. \n\nHowever, the following works fine:\n\n\u200c\n\n```\n    ## MOT.setamp(t, MOT_imaging_amplitude)\r\n    ## MOT.setfreq(t, MOT_imaging_detuning, 'd_MHz') # go on resonance\r\n    ## t += 10e-6\r\n    MOT.enable(t)\r\n    t += fluoro_exposure_time\r\n    MOT.disable(t-10e-6)\r\n    ## MOT_repump.disable(t-10e-6)\n```\n\nSo it is not simply the short fluoro\\_exposure\\_time \\(50us\\) on the enable line. This is consistent with Chris\u2019s MWE.\n\nUncommenting the ## MOT.setamp\\(\u2026\\) line in the above then fails to compile as above. \n\nPutting t\\+=1e-3 above or below that setamp line doesn\u2019t help.\n\nAnd, worse, the times mentioned in the traceback become intermediate times  that t is never set set to in the code\u2026", "markup": "markdown", "html": "<p>Thanks Chris. I\u2019ll try your MWE in a minute, and the reversion, but for now I\u2019m documenting the error I am seeing\u2026</p>\n<p>The labscript output is: </p>\n<div class=\"codehilite\"><pre><span></span>t = 19.973200000 s: Stern-Gerlach kick\nWARNING: State of digital quantity MOT_repump_gate at t=19.9622s has already been set to low. Overwriting to high. (note: all values in base units where relevant)\nt = 19.963200000 s: fluorescence exposure\nt = 20.073310000 s: Close MOT shutter after fluorescence probe pulse\nt = 20.163310000 s: Zeeman loaded MOT\nt = 20.163310000 s: LF + HF amps active\nt = 23.243310000 s: Open Faraday shutter for alignment purposes...\nt = 23.243310000 s: experiment ends\nTraceback (most recent call last):\nFile &quot;crossed_beam_bec.py&quot;, line 963, in &lt;module&gt;\nFile &quot;C:\\labscript_suite\\labscript\\labscript.py&quot;, line 2350, in stop\ngenerate_code()\nFile &quot;C:\\labscript_suite\\labscript\\labscript.py&quot;, line 2226, in generate_code\ndevice.generate_code(hdf5_file)\nFile &quot;C:\\labscript_suite\\labscript_devices\\PulseBlaster.py&quot;, line 610, in generate_code\nPseudoclockDevice.generate_code(self, hdf5_file)\nFile &quot;C:\\labscript_suite\\labscript\\labscript.py&quot;, line 1097, in generate_code\nDevice.generate_code(self, hdf5_file)\nFile &quot;C:\\labscript_suite\\labscript\\labscript.py&quot;, line 477, in generate_code\ndevice.generate_code(hdf5_file)\nFile &quot;C:\\labscript_suite\\labscript\\labscript.py&quot;, line 920, in generate_code\nself.generate_clock()\nFile &quot;C:\\labscript_suite\\labscript\\labscript.py&quot;, line 890, in generate_clock\nall_change_times, change_times = self.collect_change_times(all_outputs, outputs_by_clockline)\nFile &quot;C:\\labscript_suite\\labscript\\labscript.py&quot;, line 679, in collect_change_times\n&#39;One or more connected devices on ClockLine %s cannot support update delays shorter than %s sec.&#39;%(clock_line.name, str(1.0/clock_line.clock_limit)))\nlabscript.labscript.LabscriptError: Commands have been issued to devices attached to pulseblaster_0_pseudoclock at t= 19.9632 s and 19.96324 s. One or more connected devices on ClockLine pulseblaster_0_novatech_clock cannot support update delays shorter than 0.0001001001001001001 sec.\nCompilation aborted.\n</pre></div>\n\n\n<p>This happens at 19.9632s, which is at the time we print \u201cfluorescence exposure\u201d (line 3). The relevant labscript is:</p>\n<div class=\"codehilite\"><pre><span></span> # fluorescence exposure\n    print_time(t, &#39;fluorescence exposure&#39;)\n    avt_makog030b_0.expose(&#39;fluorescence&#39;, t, &#39;fluorescence&#39;, exposure_time=fluoro_exposure_time)\n    MOT_shutter.open(t-shutter_buffer)\n    MOT.setamp(t, MOT_imaging_amplitude)\n    MOT.setfreq(t, MOT_imaging_detuning, &#39;d_MHz&#39;) # go on resonance\n    #t += 10e-6\n    MOT.enable(t)\n    t += fluoro_exposure_time\n    MOT.disable(t-10e-6)\n    MOT_repump.disable(t-10e-6)\n</pre></div>\n\n\n<p>Indeed, the traceback clearly complains about times 19.963200 and 19.963240 s, i.e. separation by 40us. </p>\n<p>That corresponds to line 8,9,10 in the labscript above. fluoro_exposure_time in this test was equal to 50us, and so the delay between MOT.enable() and MOT.disable() was 40us. </p>\n<p>However, the following works fine:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span>    ## MOT.setamp(t, MOT_imaging_amplitude)\n    ## MOT.setfreq(t, MOT_imaging_detuning, &#39;d_MHz&#39;) # go on resonance\n    ## t += 10e-6\n    MOT.enable(t)\n    t += fluoro_exposure_time\n    MOT.disable(t-10e-6)\n    ## MOT_repump.disable(t-10e-6)\n</pre></div>\n\n\n<p>So it is not simply the short fluoro_exposure_time (50us) on the enable line. This is consistent with Chris\u2019s MWE.</p>\n<p>Uncommenting the ## MOT.setamp(\u2026) line in the above then fails to compile as above. </p>\n<p>Putting t+=1e-3 above or below that setamp line doesn\u2019t help.</p>\n<p>And, worse, the times mentioned in the traceback become intermediate times  that t is never set set to in the code\u2026</p>", "type": "rendered"}, "created_on": "2019-06-24T05:47:39.593592+00:00", "user": {"display_name": "Lincoln Turner", "uuid": "{7e35ca32-09d7-4a25-a548-32edef727dda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D"}, "html": {"href": "https://bitbucket.org/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2ac774c664cd58fc011cc65e0980b4c1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLT-3.png"}}, "nickname": "lincolndturner", "type": "user", "account_id": "5b46a53d845e7e2cdff75ad3"}, "updated_on": "2019-06-25T06:25:13.947995+00:00", "type": "issue_comment", "id": 52704655}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/35/comments/52721939.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/35#comment-52721939"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/35.json"}}, "type": "issue", "id": 35, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "Novatech DDS9m digital-gate being inappropriately held to DDS table pseudoclock"}, "content": {"raw": "This made me suspicious that it was a deep-seated timing problem in labscript, as Chris alluded to the most recent bugfix. \n\nSo I reverted to `05cf8b9676a9`, removing the GatedClocks-bugfix merge. \n\nThen all is well!\n\nShots compile. And better, they run and produce nice fluoroscence images!\n\nAnd indeed @{557058:52a111e4-40da-4441-9143-417f95f2db97} 's commit `b74958231436` does seem to edit code in and around this error message\u2026", "markup": "markdown", "html": "<p>This made me suspicious that it was a deep-seated timing problem in labscript, as Chris alluded to the most recent bugfix. </p>\n<p>So I reverted to <code>05cf8b9676a9</code>, removing the GatedClocks-bugfix merge. </p>\n<p>Then all is well!</p>\n<p>Shots compile. And better, they run and produce nice fluoroscence images!</p>\n<p>And indeed <span class=\"ap-mention\" data-atlassian-id=\"557058:52a111e4-40da-4441-9143-417f95f2db97\">@Philip Starkey</span> 's commit <code>b74958231436</code> does seem to edit code in and around this error message\u2026</p>", "type": "rendered"}, "created_on": "2019-06-25T06:29:39.858411+00:00", "user": {"display_name": "Lincoln Turner", "uuid": "{7e35ca32-09d7-4a25-a548-32edef727dda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D"}, "html": {"href": "https://bitbucket.org/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2ac774c664cd58fc011cc65e0980b4c1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLT-3.png"}}, "nickname": "lincolndturner", "type": "user", "account_id": "5b46a53d845e7e2cdff75ad3"}, "updated_on": null, "type": "issue_comment", "id": 52721939}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/35/comments/52722047.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/35#comment-52722047"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/35.json"}}, "type": "issue", "id": 35, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "Novatech DDS9m digital-gate being inappropriately held to DDS table pseudoclock"}, "content": {"raw": "Not a labscript_devices issue.\n\nBut is a labscript issue. \n\nReposting there.", "markup": "markdown", "html": "<p>Not a labscript_devices issue.</p>\n<p>But is a labscript issue. </p>\n<p>Reposting there.</p>", "type": "rendered"}, "created_on": "2019-06-25T06:36:02.689462+00:00", "user": {"display_name": "Lincoln Turner", "uuid": "{7e35ca32-09d7-4a25-a548-32edef727dda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D"}, "html": {"href": "https://bitbucket.org/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2ac774c664cd58fc011cc65e0980b4c1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLT-3.png"}}, "nickname": "lincolndturner", "type": "user", "account_id": "5b46a53d845e7e2cdff75ad3"}, "updated_on": null, "type": "issue_comment", "id": 52722047}], "page": 1, "size": 5}