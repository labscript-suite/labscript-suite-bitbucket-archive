{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/52767076.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-52767076"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "Thanks for working out how to reproduce the issue! I'll see if I can get it to happen on one of my machines - once I can get it to lock up I should be able to fairly easily work out what the culprit is via using the faulthandler to dump tracebacks of all threads, or something like that.", "markup": "markdown", "html": "<p>Thanks for working out how to reproduce the issue! I'll see if I can get it to happen on one of my machines - once I can get it to lock up I should be able to fairly easily work out what the culprit is via using the faulthandler to dump tracebacks of all threads, or something like that.</p>", "type": "rendered"}, "created_on": "2019-06-27T19:54:46.706923+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 52767076}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/52841564.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-52841564"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "I was not able to reproduce this, with frame rates close to 180fps. I'll try again on a different computer later.\n\nHowever, I did find a deadlock if one clicks 'restart' for the tab while acquiring at high frame rates. So I have fixed that (PR #77). It doesn't seem like the same issue though, even though this one sounds like a deadlock of some sort too.\n\nIf you are able to reliably reproduce the problem, then I can tell you what I would be doing if I could reproduce it, and maybe you can show me the resulting tracebacks and we might be able to figure out what's going on.\n\nI would add at the top of `blacs/__main__.py`:\n\n```python\nimport faulthandler\nf = open(r'C:\\labscript_suite\\blacs\\faulthandler.log', 'a')\nf.write('\\n\\n---restart---\\n\\n')\nfaulthandler.dump_traceback_later(timeout=60, repeat=True, file=f)\n```\n\nThen, once the hang occurs, wait a full 60 seconds (or wait less if you decrease the timeout for dumping tracebacks), then quit BLACS. I don't know if it will flush the output file. If it doesn't and Python exits in an unclean way, the output file may not contain the final set of tracebacks. In which case I would switch it to `file=sys.stderr` and rely on reading it from the terminal, but you may need to increase the number of scrollback lines in the terminal settings, otherwise you won't be able to see all the tracebacks - it outputs one traceback per thread, and there are likely to be tens of threads, depending on how many devices you have.", "markup": "markdown", "html": "<p>I was not able to reproduce this, with frame rates close to 180fps. I'll try again on a different computer later.</p>\n<p>However, I did find a deadlock if one clicks 'restart' for the tab while acquiring at high frame rates. So I have fixed that (<a href=\"#!/labscript_suite/labscript_devices/pull-requests/77/fix-a-deadlock-restarting-imaqdxcamera\" rel=\"nofollow\" class=\"ap-connect-link\">PR #77</a>). It doesn't seem like the same issue though, even though this one sounds like a deadlock of some sort too.</p>\n<p>If you are able to reliably reproduce the problem, then I can tell you what I would be doing if I could reproduce it, and maybe you can show me the resulting tracebacks and we might be able to figure out what's going on.</p>\n<p>I would add at the top of <code>blacs/__main__.py</code>:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">faulthandler</span>\n<span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">&#39;C:\\labscript_suite\\blacs\\faulthandler.log&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;a&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n\\n</span><span class=\"s1\">---restart---</span><span class=\"se\">\\n\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">faulthandler</span><span class=\"o\">.</span><span class=\"n\">dump_traceback_later</span><span class=\"p\">(</span><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"n\">repeat</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"nb\">file</span><span class=\"o\">=</span><span class=\"n\">f</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Then, once the hang occurs, wait a full 60 seconds (or wait less if you decrease the timeout for dumping tracebacks), then quit BLACS. I don't know if it will flush the output file. If it doesn't and Python exits in an unclean way, the output file may not contain the final set of tracebacks. In which case I would switch it to <code>file=sys.stderr</code> and rely on reading it from the terminal, but you may need to increase the number of scrollback lines in the terminal settings, otherwise you won't be able to see all the tracebacks - it outputs one traceback per thread, and there are likely to be tens of threads, depending on how many devices you have.</p>", "type": "rendered"}, "created_on": "2019-07-03T20:48:03.284960+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-07-03T20:48:47.897866+00:00", "type": "issue_comment", "id": 52841564}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/52841962.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-52841962"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "OK, so I've made some progress. I have a traceback, which I'll just e-mail\nto you directly since it is pretty long.\n\nMore to the point, I've discovered another important step to reproduce the\nbug. It seems it only happens if I first load BLACS, change something in\nthe worker, save, then restart the tab. Could it be something with the\ncache updating?", "markup": "markdown", "html": "<p>OK, so I've made some progress. I have a traceback, which I'll just e-mail\nto you directly since it is pretty long.</p>\n<p>More to the point, I've discovered another important step to reproduce the\nbug. It seems it only happens if I first load BLACS, change something in\nthe worker, save, then restart the tab. Could it be something with the\ncache updating?</p>", "type": "rendered"}, "created_on": "2019-07-03T21:40:18.358270+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": null, "type": "issue_comment", "id": 52841962}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/53789351.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-53789351"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "We are hitting this issue again in the lab so I've taken some more time to characterize what is happening with added logging of some of the relevant players.\n\nFor starters, whatever is going on seems to be just intermittent enough that I can't reliably pin down exactly what steps are needed to reproduce in all cases. I can attest that we will often hit a long term steady-state where this is consistently an issue, particularly with the `PylonCamera` device, when the fps gets above ~25. For the logs below, I started BLACS, took a snap, started continuous, waited a couple seconds until the fps stabilized, then hit stop. After a few seconds Windows would recognize the GUI as not responding. In this instance, images appear to update correctly until I hit stop.\n\nIn order to better debug, I've added logging messages into `IMAQdxCameraWorker.continuous_loop()` and a bailout check where once 1000 images have been taken it adjusts dt down to 1/15 which I've found breaks the deadlock and allows me to get proper control back. I've also added logging messages to `ImageReceiver.handler()` in the IMAQdx blacs tab:\n\n```\nlogger.info('ImageReceiver Processing')\nif self.update_event is not None:\n        while True:\n            # Don't block, and check for self.stopping regularly in case we\nare\n            # shutting down. Otherwise if shutdown is called from the main\nthread we\n            # would deadlock.\n            try:\n                self.update_event.get(timeout=0.1)\n                logger.info('Update event cleared')\n                break\n            except Empty:\n                if self.stopping:\n                    return\n                logger.info('  Waiting for previous update!')\n    self.update_event = inmain_later(self.update, image, self.frame_rate)\n    return [b'ok']\n```\n\nWith these changes, I now have three logs: the normal BLACS log, one following the ImageReceiver of the BLACS tab, and one following the BLACS worker. Relevant snippets are below. It appears that the `BLACS.__main__` loop is getting hung up but the worker is not getting blocked to slow down the flood of images. This particular snippet of BLACS log is unusual in that there is some activity between the continuous start and the main loop hang, probably because I got lucky and started the acquisition just as the check\\_status jobs went out. Note that the SMF100A has a statemachine\\_timeout of 5 seconds. There is an NI\\_DAQ and two other cameras connected that don't appear in this snippet. The hang is seen when only the AnalysisSubmission loop is logging events and lasts for about a minute.\n\nChecking the task manager on this, the blacs worker thread barely changes but the `__main__` thread explodes, eating 50% of the processor time and the memory footprint ballooning from 170MB to nearly 500MB until the continuous loop is brought to heel.\n\nAt this point I'm a bit stuck as to what to do next. The next step in the chain is `qtutils.inmain_later`, which I don't understand very well. Unless someone has another thought, could I get a brief explanation of it and/or a pointer to where my next level of debug logging needs to be to track down this hang?\n\nBLACS.log \n\n```python\n2019-09-06 10:00:40,681 INFO BLACS.AnalysisSubmission.mainloop: Processed signal: check/retry\r\n2019-09-06 10:00:40,704 DEBUG BLACS.CCD_2.mainloop: Processing event _start_continuous\r\n2019-09-06 10:00:40,708 DEBUG BLACS.CCD_2.mainloop: Instructing worker main_worker to do job start_continuous\r\n2019-09-06 10:00:40,713 DEBUG BLACS.CCD_2.mainloop: Waiting for worker to acknowledge job request\r\n2019-09-06 10:00:40,714 DEBUG BLACS.CCD_2.mainloop: Worker reported job started, waiting for completion\r\n2019-09-06 10:00:40,742 DEBUG BLACS.CCD_2.mainloop: Job completed\r\n2019-09-06 10:00:40,743 DEBUG BLACS.CCD_2.mainloop: returning worker results to function _start_continuous\r\n2019-09-06 10:00:40,748 DEBUG BLACS.CCD_2.mainloop: Finalising function\r\n2019-09-06 10:00:40,751 DEBUG BLACS.CCD_2.mainloop: Waiting for next event\r\n2019-09-06 10:00:40,772 DEBUG BLACS.pulseblaster_0.mainloop: Processing event _status_monitor\r\n2019-09-06 10:00:40,776 DEBUG BLACS.pulseblaster_0.mainloop: Instructing worker main_worker to do job check_status\r\n2019-09-06 10:00:40,777 DEBUG BLACS.pulseblaster_0_main_worker.worker: Got job request check_status\r\n2019-09-06 10:00:40,777 DEBUG BLACS.pulseblaster_0_main_worker.worker: Starting job check_status\r\n2019-09-06 10:00:40,778 DEBUG BLACS.pulseblaster_0_main_worker.worker: Job complete\r\n2019-09-06 10:00:40,778 DEBUG BLACS.pulseblaster_0.mainloop: Waiting for worker to acknowledge job request\r\n2019-09-06 10:00:40,778 DEBUG BLACS.pulseblaster_0_main_worker.worker: Waiting for next job request\r\n2019-09-06 10:00:40,781 DEBUG BLACS.pulseblaster_0.mainloop: Worker reported job started, waiting for completion\r\n2019-09-06 10:00:40,782 DEBUG BLACS.pulseblaster_0.mainloop: Job completed\r\n2019-09-06 10:00:40,783 DEBUG BLACS.pulseblaster_0.mainloop: returning worker results to function _status_monitor\r\n2019-09-06 10:00:40,830 DEBUG BLACS.pulseblaster_0.mainloop: Finalising function\r\n2019-09-06 10:00:40,872 DEBUG BLACS.pulseblaster_0.mainloop: Waiting for next event\r\n2019-09-06 10:00:40,960 DEBUG BLACS.pulseblaster_0.mainloop: Processing event __timeout_add\r\n2019-09-06 10:00:41,146 DEBUG BLACS.pulseblaster_0.mainloop: Waiting for next event\r\n2019-09-06 10:00:47,502 DEBUG BLACS.SMF100A.mainloop: Processing event _status_monitor\r\n2019-09-06 10:00:47,506 DEBUG BLACS.pulseblaster_0.mainloop: Processing event _status_monitor\r\n2019-09-06 10:00:47,662 DEBUG BLACS.SMF100A.mainloop: Instructing worker main_worker to do job check_status\r\n2019-09-06 10:00:47,665 DEBUG BLACS.SMF100A_main_worker.worker: Got job request check_status\r\n2019-09-06 10:00:47,666 DEBUG BLACS.SMF100A_main_worker.worker: Starting job check_status\r\n2019-09-06 10:00:47,665 DEBUG BLACS.pulseblaster_0.mainloop: Instructing worker main_worker to do job check_status\r\n2019-09-06 10:00:47,667 DEBUG BLACS.SMF100A_main_worker.worker: Job complete\r\n2019-09-06 10:00:47,668 DEBUG BLACS.SMF100A_main_worker.worker: Waiting for next job request\r\n2019-09-06 10:00:47,668 DEBUG BLACS.pulseblaster_0_main_worker.worker: Got job request check_status\r\n2019-09-06 10:00:47,669 DEBUG BLACS.pulseblaster_0_main_worker.worker: Starting job check_status\r\n2019-09-06 10:00:47,669 DEBUG BLACS.pulseblaster_0_main_worker.worker: Job complete\r\n2019-09-06 10:00:47,669 DEBUG BLACS.pulseblaster_0_main_worker.worker: Waiting for next job request\r\n2019-09-06 10:00:47,742 DEBUG BLACS.SMF100A.mainloop: Waiting for worker to acknowledge job request\r\n2019-09-06 10:00:47,745 DEBUG BLACS.pulseblaster_0.mainloop: Waiting for worker to acknowledge job request\r\n2019-09-06 10:00:47,747 DEBUG BLACS.SMF100A.mainloop: Worker reported job started, waiting for completion\r\n2019-09-06 10:00:47,750 DEBUG BLACS.pulseblaster_0.mainloop: Worker reported job started, waiting for completion\r\n2019-09-06 10:00:47,752 DEBUG BLACS.SMF100A.mainloop: Job completed\r\n2019-09-06 10:00:47,753 DEBUG BLACS.pulseblaster_0.mainloop: Job completed\r\n2019-09-06 10:00:47,753 DEBUG BLACS.SMF100A.mainloop: returning worker results to function _status_monitor\r\n2019-09-06 10:00:47,753 DEBUG BLACS.pulseblaster_0.mainloop: returning worker results to function _status_monitor\r\n2019-09-06 10:00:47,878 DEBUG BLACS.SMF100A.mainloop: Finalising function\r\n2019-09-06 10:00:47,881 DEBUG BLACS.pulseblaster_0.mainloop: Finalising function\r\n2019-09-06 10:00:47,964 DEBUG BLACS.SMF100A.mainloop: Waiting for next event\r\n2019-09-06 10:00:47,966 DEBUG BLACS.pulseblaster_0.mainloop: Waiting for next event\r\n2019-09-06 10:00:48,128 DEBUG BLACS.SMF100A.mainloop: Processing event __timeout_add\r\n2019-09-06 10:00:48,129 DEBUG BLACS.pulseblaster_0.mainloop: Processing event __timeout_add\r\n2019-09-06 10:00:48,337 DEBUG BLACS.SMF100A.mainloop: Waiting for next event\r\n2019-09-06 10:00:48,339 DEBUG BLACS.pulseblaster_0.mainloop: Waiting for next event\r\n2019-09-06 10:00:50,838 INFO BLACS.AnalysisSubmission.mainloop: Processed signal: check/retry\r\n2019-09-06 10:01:00,994 INFO BLACS.AnalysisSubmission.mainloop: Processed signal: check/retry\r\n2019-09-06 10:01:11,153 INFO BLACS.AnalysisSubmission.mainloop: Processed signal: check/retry\r\n2019-09-06 10:01:19,017 DEBUG BLACS.CCD_2.mainloop: Processing event _stop_continuous\r\n2019-09-06 10:01:19,017 DEBUG BLACS.pulseblaster_0.mainloop: Processing event _status_monitor\r\n2019-09-06 10:01:19,017 DEBUG BLACS.SMF100A.mainloop: Processing event _status_monitor\r\n2019-09-06 10:01:19,017 DEBUG BLACS.novatech.mainloop: Processing event _check_remote_values\r\n2019-09-06 10:01:19,018 DEBUG BLACS.novatech_static.mainloop: Processing event _check_remote_values\r\n2019-09-06 10:01:19,088 DEBUG BLACS.CCD_2.mainloop: Instructing worker main_worker to do job stop_continuous\n```\n\nBLACS\\_tab log\n\n\u200c\n\n```\n2019-09-06 10:00:40,780 INFO Camera_Tab: ImageReceiver Processing\r\n2019-09-06 10:00:40,781 INFO Camera_Tab: Update event cleared\r\n2019-09-06 10:00:40,812 INFO Camera_Tab: ImageReceiver Processing\r\n2019-09-06 10:00:40,812 INFO Camera_Tab: Update event cleared\r\n2019-09-06 10:00:40,843 INFO Camera_Tab: ImageReceiver Processing\r\n2019-09-06 10:00:40,843 INFO Camera_Tab: Update event cleared\r\n2019-09-06 10:00:40,874 INFO Camera_Tab: ImageReceiver Processing\r\n2019-09-06 10:00:40,875 INFO Camera_Tab: Update event cleared\r\n<lots of repeats without any gaps in time>\r\n2019-09-06 10:01:00,137 INFO Camera_Tab: ImageReceiver Processing\r\n2019-09-06 10:01:00,161 INFO Camera_Tab: Update event cleared\r\n2019-09-06 10:01:00,175 INFO Camera_Tab: ImageReceiver Processing\r\n2019-09-06 10:01:00,199 INFO Camera_Tab: Update event cleared\r\n2019-09-06 10:01:00,213 INFO Camera_Tab: ImageReceiver Processing\r\n2019-09-06 10:01:00,236 INFO Camera_Tab: Update event cleared\r\n2019-09-06 10:01:00,250 INFO Camera_Tab: ImageReceiver Processing\r\n2019-09-06 10:01:00,274 INFO Camera_Tab: Update event cleared\r\n2019-09-06 10:01:00,287 INFO Camera_Tab: ImageReceiver Processing\r\n2019-09-06 10:01:00,310 INFO Camera_Tab: Update event cleared\r\n<more repeats without gaps>\r\n2019-09-06 10:01:18,937 INFO Camera_Tab: ImageReceiver Processing\r\n2019-09-06 10:01:18,940 INFO Camera_Tab: Update event cleared\r\n2019-09-06 10:01:19,003 INFO Camera_Tab: ImageReceiver Processing\r\n2019-09-06 10:01:19,004 INFO Camera_Tab: Update event cleared\r\n2019-09-06 10:01:19,081 INFO Camera_Tab: ImageReceiver Processing\r\n2019-09-06 10:01:19,082 INFO Camera_Tab: Update event cleared\n```\n\nBLACS\\_worker log\n\n\u200c\n\n```\n2019-09-06 10:00:32,921 DEBUG Camera_Worker_PylonCameraWorker: Job complete\r\n2019-09-06 10:00:32,922 DEBUG Camera_Worker_PylonCameraWorker: Waiting for next job request\r\n2019-09-06 10:00:32,958 DEBUG Camera_Worker_PylonCameraWorker: Got job request program_manual\r\n2019-09-06 10:00:32,958 DEBUG Camera_Worker_PylonCameraWorker: Starting job program_manual\r\n2019-09-06 10:00:32,959 DEBUG Camera_Worker_PylonCameraWorker: Job complete\r\n2019-09-06 10:00:32,959 DEBUG Camera_Worker_PylonCameraWorker: Waiting for next job request\r\n2019-09-06 10:00:39,562 DEBUG Camera_Worker_PylonCameraWorker: Got job request snap\r\n2019-09-06 10:00:39,563 DEBUG Camera_Worker_PylonCameraWorker: Starting job snap\r\n2019-09-06 10:00:39,719 DEBUG Camera_Worker_PylonCameraWorker: Job complete\r\n2019-09-06 10:00:39,719 DEBUG Camera_Worker_PylonCameraWorker: Waiting for next job request\r\n2019-09-06 10:00:40,709 DEBUG Camera_Worker_PylonCameraWorker: Got job request start_continuous\r\n2019-09-06 10:00:40,709 DEBUG Camera_Worker_PylonCameraWorker: Starting job start_continuous\r\n2019-09-06 10:00:40,728 INFO Camera_Worker_PylonCameraWorker: Grabbing 0th image\r\n2019-09-06 10:00:40,732 INFO Camera_Worker_PylonCameraWorker: Starting Continuous\r\n2019-09-06 10:00:40,741 DEBUG Camera_Worker_PylonCameraWorker: Job complete\r\n2019-09-06 10:00:40,741 DEBUG Camera_Worker_PylonCameraWorker: Waiting for next job request\r\n2019-09-06 10:00:40,770 INFO Camera_Worker_PylonCameraWorker: Sending 0th image to parent\r\n2019-09-06 10:00:40,783 INFO Camera_Worker_PylonCameraWorker: Grabbing 1th image\r\n2019-09-06 10:00:40,801 INFO Camera_Worker_PylonCameraWorker: Sending 1th image to parent\r\n2019-09-06 10:00:40,814 INFO Camera_Worker_PylonCameraWorker: Grabbing 2th image\r\n2019-09-06 10:00:40,833 INFO Camera_Worker_PylonCameraWorker: Sending 2th image to parent\r\n2019-09-06 10:00:40,844 INFO Camera_Worker_PylonCameraWorker: Grabbing 3th image\r\n2019-09-06 10:00:40,864 INFO Camera_Worker_PylonCameraWorker: Sending 3th image to parent\r\n2019-09-06 10:00:40,878 INFO Camera_Worker_PylonCameraWorker: Grabbing 4th image\r\n2019-09-06 10:00:40,896 INFO Camera_Worker_PylonCameraWorker: Sending 4th image to parent\r\n<lot's of lines without any gaps in time>\r\n2019-09-06 10:01:00,124 INFO Camera_Worker_PylonCameraWorker: Grabbing 507th image\r\n2019-09-06 10:01:00,126 INFO Camera_Worker_PylonCameraWorker: Sending 507th image to parent\r\n2019-09-06 10:01:00,162 INFO Camera_Worker_PylonCameraWorker: Grabbing 508th image\r\n2019-09-06 10:01:00,164 INFO Camera_Worker_PylonCameraWorker: Sending 508th image to parent\r\n2019-09-06 10:01:00,201 INFO Camera_Worker_PylonCameraWorker: Grabbing 509th image\r\n2019-09-06 10:01:00,202 INFO Camera_Worker_PylonCameraWorker: Sending 509th image to parent\r\n2019-09-06 10:01:00,238 INFO Camera_Worker_PylonCameraWorker: Grabbing 510th image\r\n2019-09-06 10:01:00,240 INFO Camera_Worker_PylonCameraWorker: Sending 510th image to parent\r\n2019-09-06 10:01:00,275 INFO Camera_Worker_PylonCameraWorker: Grabbing 511th image\r\n2019-09-06 10:01:00,277 INFO Camera_Worker_PylonCameraWorker: Sending 511th image to parent\r\n<more lines without gaps>\r\n2019-09-06 10:01:18,670 INFO Camera_Worker_PylonCameraWorker: Grabbing 994th image\r\n2019-09-06 10:01:18,672 INFO Camera_Worker_PylonCameraWorker: Sending 994th image to parent\r\n2019-09-06 10:01:18,708 INFO Camera_Worker_PylonCameraWorker: Grabbing 995th image\r\n2019-09-06 10:01:18,710 INFO Camera_Worker_PylonCameraWorker: Sending 995th image to parent\r\n2019-09-06 10:01:18,746 INFO Camera_Worker_PylonCameraWorker: Grabbing 996th image\r\n2019-09-06 10:01:18,748 INFO Camera_Worker_PylonCameraWorker: Sending 996th image to parent\r\n2019-09-06 10:01:18,784 INFO Camera_Worker_PylonCameraWorker: Grabbing 997th image\r\n2019-09-06 10:01:18,785 INFO Camera_Worker_PylonCameraWorker: Sending 997th image to parent\r\n2019-09-06 10:01:18,820 INFO Camera_Worker_PylonCameraWorker: Grabbing 998th image\r\n2019-09-06 10:01:18,822 INFO Camera_Worker_PylonCameraWorker: Sending 998th image to parent\r\n2019-09-06 10:01:18,857 INFO Camera_Worker_PylonCameraWorker: Grabbing 999th image\r\n2019-09-06 10:01:18,859 INFO Camera_Worker_PylonCameraWorker: Sending 999th image to parent\r\n2019-09-06 10:01:18,894 ERROR Camera_Worker_PylonCameraWorker: Adjusting dt from 0.000000 to 0.066667\r\n2019-09-06 10:01:18,924 INFO Camera_Worker_PylonCameraWorker: Grabbing 1000th image\r\n2019-09-06 10:01:18,926 INFO Camera_Worker_PylonCameraWorker: Sending 1000th image to parent\r\n2019-09-06 10:01:18,990 INFO Camera_Worker_PylonCameraWorker: Grabbing 1001th image\r\n2019-09-06 10:01:18,992 INFO Camera_Worker_PylonCameraWorker: Sending 1001th image to parent\r\n2019-09-06 10:01:19,069 INFO Camera_Worker_PylonCameraWorker: Grabbing 1002th image\r\n2019-09-06 10:01:19,071 INFO Camera_Worker_PylonCameraWorker: Sending 1002th image to parent\r\n2019-09-06 10:01:19,090 DEBUG Camera_Worker_PylonCameraWorker: Got job request stop_continuous\r\n2019-09-06 10:01:19,090 DEBUG Camera_Worker_PylonCameraWorker: Starting job stop_continuous\r\n2019-09-06 10:01:19,090 INFO Camera_Worker_PylonCameraWorker: Stopping Continuous\r\n2019-09-06 10:01:19,134 DEBUG Camera_Worker_PylonCameraWorker: Job complete\r\n2019-09-06 10:01:19,134 DEBUG Camera_Worker_PylonCameraWorker: Waiting for next job request\r\n2019-09-06 10:01:26,250 DEBUG Camera_Worker_PylonCameraWorker: Got job request shutdown\r\n2019-09-06 10:01:26,250 DEBUG Camera_Worker_PylonCameraWorker: Starting job shutdown\r\n2019-09-06 10:01:26,251 DEBUG Camera_Worker_PylonCameraWorker: Job complete\r\n2019-09-06 10:01:26,251 DEBUG Camera_Worker_PylonCameraWorker: Waiting for next job request\n```\n\nEdit: fixed wierdness in formatting and truncation due to replying by e-mail", "markup": "markdown", "html": "<p>We are hitting this issue again in the lab so I've taken some more time to characterize what is happening with added logging of some of the relevant players.</p>\n<p>For starters, whatever is going on seems to be just intermittent enough that I can't reliably pin down exactly what steps are needed to reproduce in all cases. I can attest that we will often hit a long term steady-state where this is consistently an issue, particularly with the <code>PylonCamera</code> device, when the fps gets above ~25. For the logs below, I started BLACS, took a snap, started continuous, waited a couple seconds until the fps stabilized, then hit stop. After a few seconds Windows would recognize the GUI as not responding. In this instance, images appear to update correctly until I hit stop.</p>\n<p>In order to better debug, I've added logging messages into <code>IMAQdxCameraWorker.continuous_loop()</code> and a bailout check where once 1000 images have been taken it adjusts dt down to 1/15 which I've found breaks the deadlock and allows me to get proper control back. I've also added logging messages to <code>ImageReceiver.handler()</code> in the IMAQdx blacs tab:</p>\n<div class=\"codehilite\"><pre><span></span>logger.info(&#39;ImageReceiver Processing&#39;)\nif self.update_event is not None:\n        while True:\n            # Don&#39;t block, and check for self.stopping regularly in case we\nare\n            # shutting down. Otherwise if shutdown is called from the main\nthread we\n            # would deadlock.\n            try:\n                self.update_event.get(timeout=0.1)\n                logger.info(&#39;Update event cleared&#39;)\n                break\n            except Empty:\n                if self.stopping:\n                    return\n                logger.info(&#39;  Waiting for previous update!&#39;)\n    self.update_event = inmain_later(self.update, image, self.frame_rate)\n    return [b&#39;ok&#39;]\n</pre></div>\n\n\n<p>With these changes, I now have three logs: the normal BLACS log, one following the ImageReceiver of the BLACS tab, and one following the BLACS worker. Relevant snippets are below. It appears that the <code>BLACS.__main__</code> loop is getting hung up but the worker is not getting blocked to slow down the flood of images. This particular snippet of BLACS log is unusual in that there is some activity between the continuous start and the main loop hang, probably because I got lucky and started the acquisition just as the check_status jobs went out. Note that the SMF100A has a statemachine_timeout of 5 seconds. There is an NI_DAQ and two other cameras connected that don't appear in this snippet. The hang is seen when only the AnalysisSubmission loop is logging events and lasts for about a minute.</p>\n<p>Checking the task manager on this, the blacs worker thread barely changes but the <code>__main__</code> thread explodes, eating 50% of the processor time and the memory footprint ballooning from 170MB to nearly 500MB until the continuous loop is brought to heel.</p>\n<p>At this point I'm a bit stuck as to what to do next. The next step in the chain is <code>qtutils.inmain_later</code>, which I don't understand very well. Unless someone has another thought, could I get a brief explanation of it and/or a pointer to where my next level of debug logging needs to be to track down this hang?</p>\n<p>BLACS.log </p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">681</span> <span class=\"n\">INFO</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">AnalysisSubmission</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Processed</span> <span class=\"n\">signal</span><span class=\"p\">:</span> <span class=\"n\">check</span><span class=\"o\">/</span><span class=\"n\">retry</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">704</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">CCD_2</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Processing</span> <span class=\"n\">event</span> <span class=\"n\">_start_continuous</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">708</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">CCD_2</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Instructing</span> <span class=\"n\">worker</span> <span class=\"n\">main_worker</span> <span class=\"n\">to</span> <span class=\"n\">do</span> <span class=\"n\">job</span> <span class=\"n\">start_continuous</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">713</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">CCD_2</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Waiting</span> <span class=\"k\">for</span> <span class=\"n\">worker</span> <span class=\"n\">to</span> <span class=\"n\">acknowledge</span> <span class=\"n\">job</span> <span class=\"n\">request</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">714</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">CCD_2</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Worker</span> <span class=\"n\">reported</span> <span class=\"n\">job</span> <span class=\"n\">started</span><span class=\"p\">,</span> <span class=\"n\">waiting</span> <span class=\"k\">for</span> <span class=\"n\">completion</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">742</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">CCD_2</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Job</span> <span class=\"n\">completed</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">743</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">CCD_2</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">returning</span> <span class=\"n\">worker</span> <span class=\"n\">results</span> <span class=\"n\">to</span> <span class=\"n\">function</span> <span class=\"n\">_start_continuous</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">748</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">CCD_2</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Finalising</span> <span class=\"n\">function</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">751</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">CCD_2</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Waiting</span> <span class=\"k\">for</span> <span class=\"nb\">next</span> <span class=\"n\">event</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">772</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Processing</span> <span class=\"n\">event</span> <span class=\"n\">_status_monitor</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">776</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Instructing</span> <span class=\"n\">worker</span> <span class=\"n\">main_worker</span> <span class=\"n\">to</span> <span class=\"n\">do</span> <span class=\"n\">job</span> <span class=\"n\">check_status</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">777</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0_main_worker</span><span class=\"o\">.</span><span class=\"n\">worker</span><span class=\"p\">:</span> <span class=\"n\">Got</span> <span class=\"n\">job</span> <span class=\"n\">request</span> <span class=\"n\">check_status</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">777</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0_main_worker</span><span class=\"o\">.</span><span class=\"n\">worker</span><span class=\"p\">:</span> <span class=\"n\">Starting</span> <span class=\"n\">job</span> <span class=\"n\">check_status</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">778</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0_main_worker</span><span class=\"o\">.</span><span class=\"n\">worker</span><span class=\"p\">:</span> <span class=\"n\">Job</span> <span class=\"n\">complete</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">778</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Waiting</span> <span class=\"k\">for</span> <span class=\"n\">worker</span> <span class=\"n\">to</span> <span class=\"n\">acknowledge</span> <span class=\"n\">job</span> <span class=\"n\">request</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">778</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0_main_worker</span><span class=\"o\">.</span><span class=\"n\">worker</span><span class=\"p\">:</span> <span class=\"n\">Waiting</span> <span class=\"k\">for</span> <span class=\"nb\">next</span> <span class=\"n\">job</span> <span class=\"n\">request</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">781</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Worker</span> <span class=\"n\">reported</span> <span class=\"n\">job</span> <span class=\"n\">started</span><span class=\"p\">,</span> <span class=\"n\">waiting</span> <span class=\"k\">for</span> <span class=\"n\">completion</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">782</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Job</span> <span class=\"n\">completed</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">783</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">returning</span> <span class=\"n\">worker</span> <span class=\"n\">results</span> <span class=\"n\">to</span> <span class=\"n\">function</span> <span class=\"n\">_status_monitor</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">830</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Finalising</span> <span class=\"n\">function</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">872</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Waiting</span> <span class=\"k\">for</span> <span class=\"nb\">next</span> <span class=\"n\">event</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">960</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Processing</span> <span class=\"n\">event</span> <span class=\"n\">__timeout_add</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">41</span><span class=\"p\">,</span><span class=\"mi\">146</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Waiting</span> <span class=\"k\">for</span> <span class=\"nb\">next</span> <span class=\"n\">event</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">502</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">SMF100A</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Processing</span> <span class=\"n\">event</span> <span class=\"n\">_status_monitor</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">506</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Processing</span> <span class=\"n\">event</span> <span class=\"n\">_status_monitor</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">662</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">SMF100A</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Instructing</span> <span class=\"n\">worker</span> <span class=\"n\">main_worker</span> <span class=\"n\">to</span> <span class=\"n\">do</span> <span class=\"n\">job</span> <span class=\"n\">check_status</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">665</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">SMF100A_main_worker</span><span class=\"o\">.</span><span class=\"n\">worker</span><span class=\"p\">:</span> <span class=\"n\">Got</span> <span class=\"n\">job</span> <span class=\"n\">request</span> <span class=\"n\">check_status</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">666</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">SMF100A_main_worker</span><span class=\"o\">.</span><span class=\"n\">worker</span><span class=\"p\">:</span> <span class=\"n\">Starting</span> <span class=\"n\">job</span> <span class=\"n\">check_status</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">665</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Instructing</span> <span class=\"n\">worker</span> <span class=\"n\">main_worker</span> <span class=\"n\">to</span> <span class=\"n\">do</span> <span class=\"n\">job</span> <span class=\"n\">check_status</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">667</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">SMF100A_main_worker</span><span class=\"o\">.</span><span class=\"n\">worker</span><span class=\"p\">:</span> <span class=\"n\">Job</span> <span class=\"n\">complete</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">668</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">SMF100A_main_worker</span><span class=\"o\">.</span><span class=\"n\">worker</span><span class=\"p\">:</span> <span class=\"n\">Waiting</span> <span class=\"k\">for</span> <span class=\"nb\">next</span> <span class=\"n\">job</span> <span class=\"n\">request</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">668</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0_main_worker</span><span class=\"o\">.</span><span class=\"n\">worker</span><span class=\"p\">:</span> <span class=\"n\">Got</span> <span class=\"n\">job</span> <span class=\"n\">request</span> <span class=\"n\">check_status</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">669</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0_main_worker</span><span class=\"o\">.</span><span class=\"n\">worker</span><span class=\"p\">:</span> <span class=\"n\">Starting</span> <span class=\"n\">job</span> <span class=\"n\">check_status</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">669</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0_main_worker</span><span class=\"o\">.</span><span class=\"n\">worker</span><span class=\"p\">:</span> <span class=\"n\">Job</span> <span class=\"n\">complete</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">669</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0_main_worker</span><span class=\"o\">.</span><span class=\"n\">worker</span><span class=\"p\">:</span> <span class=\"n\">Waiting</span> <span class=\"k\">for</span> <span class=\"nb\">next</span> <span class=\"n\">job</span> <span class=\"n\">request</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">742</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">SMF100A</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Waiting</span> <span class=\"k\">for</span> <span class=\"n\">worker</span> <span class=\"n\">to</span> <span class=\"n\">acknowledge</span> <span class=\"n\">job</span> <span class=\"n\">request</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">745</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Waiting</span> <span class=\"k\">for</span> <span class=\"n\">worker</span> <span class=\"n\">to</span> <span class=\"n\">acknowledge</span> <span class=\"n\">job</span> <span class=\"n\">request</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">747</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">SMF100A</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Worker</span> <span class=\"n\">reported</span> <span class=\"n\">job</span> <span class=\"n\">started</span><span class=\"p\">,</span> <span class=\"n\">waiting</span> <span class=\"k\">for</span> <span class=\"n\">completion</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">750</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Worker</span> <span class=\"n\">reported</span> <span class=\"n\">job</span> <span class=\"n\">started</span><span class=\"p\">,</span> <span class=\"n\">waiting</span> <span class=\"k\">for</span> <span class=\"n\">completion</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">752</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">SMF100A</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Job</span> <span class=\"n\">completed</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">753</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Job</span> <span class=\"n\">completed</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">753</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">SMF100A</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">returning</span> <span class=\"n\">worker</span> <span class=\"n\">results</span> <span class=\"n\">to</span> <span class=\"n\">function</span> <span class=\"n\">_status_monitor</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">753</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">returning</span> <span class=\"n\">worker</span> <span class=\"n\">results</span> <span class=\"n\">to</span> <span class=\"n\">function</span> <span class=\"n\">_status_monitor</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">878</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">SMF100A</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Finalising</span> <span class=\"n\">function</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">881</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Finalising</span> <span class=\"n\">function</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">964</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">SMF100A</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Waiting</span> <span class=\"k\">for</span> <span class=\"nb\">next</span> <span class=\"n\">event</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">966</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Waiting</span> <span class=\"k\">for</span> <span class=\"nb\">next</span> <span class=\"n\">event</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">48</span><span class=\"p\">,</span><span class=\"mi\">128</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">SMF100A</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Processing</span> <span class=\"n\">event</span> <span class=\"n\">__timeout_add</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">48</span><span class=\"p\">,</span><span class=\"mi\">129</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Processing</span> <span class=\"n\">event</span> <span class=\"n\">__timeout_add</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">48</span><span class=\"p\">,</span><span class=\"mi\">337</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">SMF100A</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Waiting</span> <span class=\"k\">for</span> <span class=\"nb\">next</span> <span class=\"n\">event</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">48</span><span class=\"p\">,</span><span class=\"mi\">339</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Waiting</span> <span class=\"k\">for</span> <span class=\"nb\">next</span> <span class=\"n\">event</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mi\">50</span><span class=\"p\">,</span><span class=\"mi\">838</span> <span class=\"n\">INFO</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">AnalysisSubmission</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Processed</span> <span class=\"n\">signal</span><span class=\"p\">:</span> <span class=\"n\">check</span><span class=\"o\">/</span><span class=\"n\">retry</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">01</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">,</span><span class=\"mi\">994</span> <span class=\"n\">INFO</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">AnalysisSubmission</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Processed</span> <span class=\"n\">signal</span><span class=\"p\">:</span> <span class=\"n\">check</span><span class=\"o\">/</span><span class=\"n\">retry</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">01</span><span class=\"p\">:</span><span class=\"mi\">11</span><span class=\"p\">,</span><span class=\"mi\">153</span> <span class=\"n\">INFO</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">AnalysisSubmission</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Processed</span> <span class=\"n\">signal</span><span class=\"p\">:</span> <span class=\"n\">check</span><span class=\"o\">/</span><span class=\"n\">retry</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">01</span><span class=\"p\">:</span><span class=\"mi\">19</span><span class=\"p\">,</span><span class=\"mo\">017</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">CCD_2</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Processing</span> <span class=\"n\">event</span> <span class=\"n\">_stop_continuous</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">01</span><span class=\"p\">:</span><span class=\"mi\">19</span><span class=\"p\">,</span><span class=\"mo\">017</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">pulseblaster_0</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Processing</span> <span class=\"n\">event</span> <span class=\"n\">_status_monitor</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">01</span><span class=\"p\">:</span><span class=\"mi\">19</span><span class=\"p\">,</span><span class=\"mo\">017</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">SMF100A</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Processing</span> <span class=\"n\">event</span> <span class=\"n\">_status_monitor</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">01</span><span class=\"p\">:</span><span class=\"mi\">19</span><span class=\"p\">,</span><span class=\"mo\">017</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">novatech</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Processing</span> <span class=\"n\">event</span> <span class=\"n\">_check_remote_values</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">01</span><span class=\"p\">:</span><span class=\"mi\">19</span><span class=\"p\">,</span><span class=\"mo\">01</span><span class=\"mi\">8</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">novatech_static</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Processing</span> <span class=\"n\">event</span> <span class=\"n\">_check_remote_values</span>\n<span class=\"mi\">2019</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mo\">06</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mo\">01</span><span class=\"p\">:</span><span class=\"mi\">19</span><span class=\"p\">,</span><span class=\"mi\">088</span> <span class=\"n\">DEBUG</span> <span class=\"n\">BLACS</span><span class=\"o\">.</span><span class=\"n\">CCD_2</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">:</span> <span class=\"n\">Instructing</span> <span class=\"n\">worker</span> <span class=\"n\">main_worker</span> <span class=\"n\">to</span> <span class=\"n\">do</span> <span class=\"n\">job</span> <span class=\"n\">stop_continuous</span>\n</pre></div>\n\n\n<p>BLACS_tab log</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span>2019-09-06 10:00:40,780 INFO Camera_Tab: ImageReceiver Processing\n2019-09-06 10:00:40,781 INFO Camera_Tab: Update event cleared\n2019-09-06 10:00:40,812 INFO Camera_Tab: ImageReceiver Processing\n2019-09-06 10:00:40,812 INFO Camera_Tab: Update event cleared\n2019-09-06 10:00:40,843 INFO Camera_Tab: ImageReceiver Processing\n2019-09-06 10:00:40,843 INFO Camera_Tab: Update event cleared\n2019-09-06 10:00:40,874 INFO Camera_Tab: ImageReceiver Processing\n2019-09-06 10:00:40,875 INFO Camera_Tab: Update event cleared\n&lt;lots of repeats without any gaps in time&gt;\n2019-09-06 10:01:00,137 INFO Camera_Tab: ImageReceiver Processing\n2019-09-06 10:01:00,161 INFO Camera_Tab: Update event cleared\n2019-09-06 10:01:00,175 INFO Camera_Tab: ImageReceiver Processing\n2019-09-06 10:01:00,199 INFO Camera_Tab: Update event cleared\n2019-09-06 10:01:00,213 INFO Camera_Tab: ImageReceiver Processing\n2019-09-06 10:01:00,236 INFO Camera_Tab: Update event cleared\n2019-09-06 10:01:00,250 INFO Camera_Tab: ImageReceiver Processing\n2019-09-06 10:01:00,274 INFO Camera_Tab: Update event cleared\n2019-09-06 10:01:00,287 INFO Camera_Tab: ImageReceiver Processing\n2019-09-06 10:01:00,310 INFO Camera_Tab: Update event cleared\n&lt;more repeats without gaps&gt;\n2019-09-06 10:01:18,937 INFO Camera_Tab: ImageReceiver Processing\n2019-09-06 10:01:18,940 INFO Camera_Tab: Update event cleared\n2019-09-06 10:01:19,003 INFO Camera_Tab: ImageReceiver Processing\n2019-09-06 10:01:19,004 INFO Camera_Tab: Update event cleared\n2019-09-06 10:01:19,081 INFO Camera_Tab: ImageReceiver Processing\n2019-09-06 10:01:19,082 INFO Camera_Tab: Update event cleared\n</pre></div>\n\n\n<p>BLACS_worker log</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span>2019-09-06 10:00:32,921 DEBUG Camera_Worker_PylonCameraWorker: Job complete\n2019-09-06 10:00:32,922 DEBUG Camera_Worker_PylonCameraWorker: Waiting for next job request\n2019-09-06 10:00:32,958 DEBUG Camera_Worker_PylonCameraWorker: Got job request program_manual\n2019-09-06 10:00:32,958 DEBUG Camera_Worker_PylonCameraWorker: Starting job program_manual\n2019-09-06 10:00:32,959 DEBUG Camera_Worker_PylonCameraWorker: Job complete\n2019-09-06 10:00:32,959 DEBUG Camera_Worker_PylonCameraWorker: Waiting for next job request\n2019-09-06 10:00:39,562 DEBUG Camera_Worker_PylonCameraWorker: Got job request snap\n2019-09-06 10:00:39,563 DEBUG Camera_Worker_PylonCameraWorker: Starting job snap\n2019-09-06 10:00:39,719 DEBUG Camera_Worker_PylonCameraWorker: Job complete\n2019-09-06 10:00:39,719 DEBUG Camera_Worker_PylonCameraWorker: Waiting for next job request\n2019-09-06 10:00:40,709 DEBUG Camera_Worker_PylonCameraWorker: Got job request start_continuous\n2019-09-06 10:00:40,709 DEBUG Camera_Worker_PylonCameraWorker: Starting job start_continuous\n2019-09-06 10:00:40,728 INFO Camera_Worker_PylonCameraWorker: Grabbing 0th image\n2019-09-06 10:00:40,732 INFO Camera_Worker_PylonCameraWorker: Starting Continuous\n2019-09-06 10:00:40,741 DEBUG Camera_Worker_PylonCameraWorker: Job complete\n2019-09-06 10:00:40,741 DEBUG Camera_Worker_PylonCameraWorker: Waiting for next job request\n2019-09-06 10:00:40,770 INFO Camera_Worker_PylonCameraWorker: Sending 0th image to parent\n2019-09-06 10:00:40,783 INFO Camera_Worker_PylonCameraWorker: Grabbing 1th image\n2019-09-06 10:00:40,801 INFO Camera_Worker_PylonCameraWorker: Sending 1th image to parent\n2019-09-06 10:00:40,814 INFO Camera_Worker_PylonCameraWorker: Grabbing 2th image\n2019-09-06 10:00:40,833 INFO Camera_Worker_PylonCameraWorker: Sending 2th image to parent\n2019-09-06 10:00:40,844 INFO Camera_Worker_PylonCameraWorker: Grabbing 3th image\n2019-09-06 10:00:40,864 INFO Camera_Worker_PylonCameraWorker: Sending 3th image to parent\n2019-09-06 10:00:40,878 INFO Camera_Worker_PylonCameraWorker: Grabbing 4th image\n2019-09-06 10:00:40,896 INFO Camera_Worker_PylonCameraWorker: Sending 4th image to parent\n&lt;lot&#39;s of lines without any gaps in time&gt;\n2019-09-06 10:01:00,124 INFO Camera_Worker_PylonCameraWorker: Grabbing 507th image\n2019-09-06 10:01:00,126 INFO Camera_Worker_PylonCameraWorker: Sending 507th image to parent\n2019-09-06 10:01:00,162 INFO Camera_Worker_PylonCameraWorker: Grabbing 508th image\n2019-09-06 10:01:00,164 INFO Camera_Worker_PylonCameraWorker: Sending 508th image to parent\n2019-09-06 10:01:00,201 INFO Camera_Worker_PylonCameraWorker: Grabbing 509th image\n2019-09-06 10:01:00,202 INFO Camera_Worker_PylonCameraWorker: Sending 509th image to parent\n2019-09-06 10:01:00,238 INFO Camera_Worker_PylonCameraWorker: Grabbing 510th image\n2019-09-06 10:01:00,240 INFO Camera_Worker_PylonCameraWorker: Sending 510th image to parent\n2019-09-06 10:01:00,275 INFO Camera_Worker_PylonCameraWorker: Grabbing 511th image\n2019-09-06 10:01:00,277 INFO Camera_Worker_PylonCameraWorker: Sending 511th image to parent\n&lt;more lines without gaps&gt;\n2019-09-06 10:01:18,670 INFO Camera_Worker_PylonCameraWorker: Grabbing 994th image\n2019-09-06 10:01:18,672 INFO Camera_Worker_PylonCameraWorker: Sending 994th image to parent\n2019-09-06 10:01:18,708 INFO Camera_Worker_PylonCameraWorker: Grabbing 995th image\n2019-09-06 10:01:18,710 INFO Camera_Worker_PylonCameraWorker: Sending 995th image to parent\n2019-09-06 10:01:18,746 INFO Camera_Worker_PylonCameraWorker: Grabbing 996th image\n2019-09-06 10:01:18,748 INFO Camera_Worker_PylonCameraWorker: Sending 996th image to parent\n2019-09-06 10:01:18,784 INFO Camera_Worker_PylonCameraWorker: Grabbing 997th image\n2019-09-06 10:01:18,785 INFO Camera_Worker_PylonCameraWorker: Sending 997th image to parent\n2019-09-06 10:01:18,820 INFO Camera_Worker_PylonCameraWorker: Grabbing 998th image\n2019-09-06 10:01:18,822 INFO Camera_Worker_PylonCameraWorker: Sending 998th image to parent\n2019-09-06 10:01:18,857 INFO Camera_Worker_PylonCameraWorker: Grabbing 999th image\n2019-09-06 10:01:18,859 INFO Camera_Worker_PylonCameraWorker: Sending 999th image to parent\n2019-09-06 10:01:18,894 ERROR Camera_Worker_PylonCameraWorker: Adjusting dt from 0.000000 to 0.066667\n2019-09-06 10:01:18,924 INFO Camera_Worker_PylonCameraWorker: Grabbing 1000th image\n2019-09-06 10:01:18,926 INFO Camera_Worker_PylonCameraWorker: Sending 1000th image to parent\n2019-09-06 10:01:18,990 INFO Camera_Worker_PylonCameraWorker: Grabbing 1001th image\n2019-09-06 10:01:18,992 INFO Camera_Worker_PylonCameraWorker: Sending 1001th image to parent\n2019-09-06 10:01:19,069 INFO Camera_Worker_PylonCameraWorker: Grabbing 1002th image\n2019-09-06 10:01:19,071 INFO Camera_Worker_PylonCameraWorker: Sending 1002th image to parent\n2019-09-06 10:01:19,090 DEBUG Camera_Worker_PylonCameraWorker: Got job request stop_continuous\n2019-09-06 10:01:19,090 DEBUG Camera_Worker_PylonCameraWorker: Starting job stop_continuous\n2019-09-06 10:01:19,090 INFO Camera_Worker_PylonCameraWorker: Stopping Continuous\n2019-09-06 10:01:19,134 DEBUG Camera_Worker_PylonCameraWorker: Job complete\n2019-09-06 10:01:19,134 DEBUG Camera_Worker_PylonCameraWorker: Waiting for next job request\n2019-09-06 10:01:26,250 DEBUG Camera_Worker_PylonCameraWorker: Got job request shutdown\n2019-09-06 10:01:26,250 DEBUG Camera_Worker_PylonCameraWorker: Starting job shutdown\n2019-09-06 10:01:26,251 DEBUG Camera_Worker_PylonCameraWorker: Job complete\n2019-09-06 10:01:26,251 DEBUG Camera_Worker_PylonCameraWorker: Waiting for next job request\n</pre></div>\n\n\n<p>Edit: fixed wierdness in formatting and truncation due to replying by e-mail</p>", "type": "rendered"}, "created_on": "2019-09-06T15:45:13.176827+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2019-09-14T00:59:25.114115+00:00", "type": "issue_comment", "id": 53789351}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/53907296.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-53907296"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "Sorry again for not seeing this, I think you must be correct that if you use the email response feature, bitbucket sends no notifications. Oh well, we'll be on github soon enough :p.\n\nThese results give some leads!\n\n`inmain_later` queues up a function call to occur in the main thread, and returns a `queue.Queue` object that the result of the function call (or an exception) will be put to once the function in the main thread runs. It does this by posting a custom Qt event (`qtutils.invoke_in_main.CallEvent`) that holds the function, its args, and the `Queue` that the response should be posted to. A custom event handler (`qtutils.invoke_in_main.Caller`) runs in the main thread and handles the event by calling the function and putting the result to the `Queue`. So each call to `self.update_event.get(timeout=0.1)` is waiting for the previously requested function to run in the main thread, and this is supposed to prevent a backlog. If we just called `inmain_later` without waiting for the result at any point, we definitely would get a backlog there.\n\nThe fact that your logging keeps saying \"Update event cleared\" implies that the `update()` function *is running* and looks like it keeping up. This makes me think the backlog is downstream from that, for example, perhaps `image_view.setImage()` queues up something to happen later, and is not fully synchronous.\n\nTo confirm this, you could:\n\n* comment out the line that actually does the update: `self.image_view.setImage(image.T, autoRange=False, autoLevels=False)`. If the backlog is upstream of this, it should still occur. If the backlog is downstream of this, it might stop occurring.\n* Make the call to `ImageReceiver.update()` synchonous by replacing inmain_later with inmain:\n\n```diff\ndiff -r ce230bf8846b IMAQdxCamera/blacs_tabs.py\n--- a/IMAQdxCamera/blacs_tabs.py        Mon Aug 26 16:13:28 2019 -0400\n+++ b/IMAQdxCamera/blacs_tabs.py        Sat Sep 14 16:37:52 2019 -0400\n@@ -22,7 +22,7 @@\n\n import numpy as np\n\n-from qtutils import UiLoader, inmain_later\n+from qtutils import UiLoader, inmain_later, inmain\n import qtutils.icons\n from qtutils.qt import QtWidgets, QtGui, QtCore\n import pyqtgraph as pg\n@@ -71,19 +71,7 @@\n             else:\n                 self.frame_rate = 1 / dt\n         self.last_frame_time = this_frame_time\n-        # Wait for the previous update to compete so we don't accumulate a backlog:\n-        if self.update_event is not None:\n-            while True:\n-                # Don't block, and check for self.stopping regularly in case we are\n-                # shutting down. Otherwise if shutdown is called from the main thread we\n-                # would deadlock.\n-                try:\n-                    self.update_event.get(timeout=0.1)\n-                    break\n-                except Empty:\n-                    if self.stopping:\n-                        return\n-        self.update_event = inmain_later(self.update, image, self.frame_rate)\n+        inmain(self.update, image, self.frame_rate)\n         return [b'ok']\n\n     def update(self, image, frame_rate):\n```\n\nThis will wait for the `update()` function to run in the main thread before continuing. If the issue is downstream in the pyqtgraph method calls, then it might still occur. However, this change may decrease the attainable frame rate since it delays sending 'ok' back to the sender, so it might make the problem go away solely due to the decreased frame rate and not actually fixing any underlying problem.\n\nAnother thing that might hint at where the backlog is is turning on our Python memory profiler, which saves lists of how many of each type of object there is in the interpreter. It can be used as follows:\n\n```python\nimport labscript_utils.memprof as memprof\n# Do this once to get a baseline of number of objects of each\n# type - ideally this should be called during normal usage, i.e. not at\n# BLACS startup, but before memory has ballooned. Maybe have it\n# called the first time ImageReceiver.handler() runs for example.\nmemprof.start(filepath='<some_filepath>')\n# Arrange to call this when the memory has ballooned,\n# for example after 1000 images if that is a reliable\n# number for reproducing the bug:\nmemprof.check()\n```\nThe result will then be a file at <some_filepath> containing the increase in the number of each type of object in the interpreter between the `start()` and `check()` calls.\n\nThere is also the BLACS `memory` plugin that adds menu entries to BLACS that will call memprof's start and check functions, but since the GUI won't be functioning at that point I think the plugin won't be much use!\n\nIf the objects in memfprof's output file are all qtutils `CallEvent`s and numpy arrays of image data, that would be evidence that our posting of events to the main thread might be the culprit (though I think the evidence is mostly against that explanation). If the objects are all things from pyqtgraph, then perhaps pyqtgraph is delaying updates of its own and a backlog is accumulating there.\n\nI think when I tried to reproduce the bug I was not running the latest pyqtgraph from github, whereas I think you were. Maybe something has changed and I should have another go at reproducing the problem.", "markup": "markdown", "html": "<p>Sorry again for not seeing this, I think you must be correct that if you use the email response feature, bitbucket sends no notifications. Oh well, we'll be on github soon enough :p.</p>\n<p>These results give some leads!</p>\n<p><code>inmain_later</code> queues up a function call to occur in the main thread, and returns a <code>queue.Queue</code> object that the result of the function call (or an exception) will be put to once the function in the main thread runs. It does this by posting a custom Qt event (<code>qtutils.invoke_in_main.CallEvent</code>) that holds the function, its args, and the <code>Queue</code> that the response should be posted to. A custom event handler (<code>qtutils.invoke_in_main.Caller</code>) runs in the main thread and handles the event by calling the function and putting the result to the <code>Queue</code>. So each call to <code>self.update_event.get(timeout=0.1)</code> is waiting for the previously requested function to run in the main thread, and this is supposed to prevent a backlog. If we just called <code>inmain_later</code> without waiting for the result at any point, we definitely would get a backlog there.</p>\n<p>The fact that your logging keeps saying \"Update event cleared\" implies that the <code>update()</code> function <em>is running</em> and looks like it keeping up. This makes me think the backlog is downstream from that, for example, perhaps <code>image_view.setImage()</code> queues up something to happen later, and is not fully synchronous.</p>\n<p>To confirm this, you could:</p>\n<ul>\n<li>comment out the line that actually does the update: <code>self.image_view.setImage(image.T, autoRange=False, autoLevels=False)</code>. If the backlog is upstream of this, it should still occur. If the backlog is downstream of this, it might stop occurring.</li>\n<li>Make the call to <code>ImageReceiver.update()</code> synchonous by replacing inmain_later with inmain:</li>\n</ul>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gh\">diff -r ce230bf8846b IMAQdxCamera/blacs_tabs.py</span>\n<span class=\"gd\">--- a/IMAQdxCamera/blacs_tabs.py        Mon Aug 26 16:13:28 2019 -0400</span>\n<span class=\"gi\">+++ b/IMAQdxCamera/blacs_tabs.py        Sat Sep 14 16:37:52 2019 -0400</span>\n<span class=\"gu\">@@ -22,7 +22,7 @@</span>\n\n import numpy as np\n\n<span class=\"gd\">-from qtutils import UiLoader, inmain_later</span>\n<span class=\"gi\">+from qtutils import UiLoader, inmain_later, inmain</span>\n import qtutils.icons\n from qtutils.qt import QtWidgets, QtGui, QtCore\n import pyqtgraph as pg\n<span class=\"gu\">@@ -71,19 +71,7 @@</span>\n             else:\n                 self.frame_rate = 1 / dt\n         self.last_frame_time = this_frame_time\n<span class=\"gd\">-        # Wait for the previous update to compete so we don&#39;t accumulate a backlog:</span>\n<span class=\"gd\">-        if self.update_event is not None:</span>\n<span class=\"gd\">-            while True:</span>\n<span class=\"gd\">-                # Don&#39;t block, and check for self.stopping regularly in case we are</span>\n<span class=\"gd\">-                # shutting down. Otherwise if shutdown is called from the main thread we</span>\n<span class=\"gd\">-                # would deadlock.</span>\n<span class=\"gd\">-                try:</span>\n<span class=\"gd\">-                    self.update_event.get(timeout=0.1)</span>\n<span class=\"gd\">-                    break</span>\n<span class=\"gd\">-                except Empty:</span>\n<span class=\"gd\">-                    if self.stopping:</span>\n<span class=\"gd\">-                        return</span>\n<span class=\"gd\">-        self.update_event = inmain_later(self.update, image, self.frame_rate)</span>\n<span class=\"gi\">+        inmain(self.update, image, self.frame_rate)</span>\n         return [b&#39;ok&#39;]\n\n     def update(self, image, frame_rate):\n</pre></div>\n\n\n<p>This will wait for the <code>update()</code> function to run in the main thread before continuing. If the issue is downstream in the pyqtgraph method calls, then it might still occur. However, this change may decrease the attainable frame rate since it delays sending 'ok' back to the sender, so it might make the problem go away solely due to the decreased frame rate and not actually fixing any underlying problem.</p>\n<p>Another thing that might hint at where the backlog is is turning on our Python memory profiler, which saves lists of how many of each type of object there is in the interpreter. It can be used as follows:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">labscript_utils.memprof</span> <span class=\"kn\">as</span> <span class=\"nn\">memprof</span>\n<span class=\"c1\"># Do this once to get a baseline of number of objects of each</span>\n<span class=\"c1\"># type - ideally this should be called during normal usage, i.e. not at</span>\n<span class=\"c1\"># BLACS startup, but before memory has ballooned. Maybe have it</span>\n<span class=\"c1\"># called the first time ImageReceiver.handler() runs for example.</span>\n<span class=\"n\">memprof</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"o\">=</span><span class=\"s1\">&#39;&lt;some_filepath&gt;&#39;</span><span class=\"p\">)</span>\n<span class=\"c1\"># Arrange to call this when the memory has ballooned,</span>\n<span class=\"c1\"># for example after 1000 images if that is a reliable</span>\n<span class=\"c1\"># number for reproducing the bug:</span>\n<span class=\"n\">memprof</span><span class=\"o\">.</span><span class=\"n\">check</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>The result will then be a file at &lt;some_filepath&gt; containing the increase in the number of each type of object in the interpreter between the <code>start()</code> and <code>check()</code> calls.</p>\n<p>There is also the BLACS <code>memory</code> plugin that adds menu entries to BLACS that will call memprof's start and check functions, but since the GUI won't be functioning at that point I think the plugin won't be much use!</p>\n<p>If the objects in memfprof's output file are all qtutils <code>CallEvent</code>s and numpy arrays of image data, that would be evidence that our posting of events to the main thread might be the culprit (though I think the evidence is mostly against that explanation). If the objects are all things from pyqtgraph, then perhaps pyqtgraph is delaying updates of its own and a backlog is accumulating there.</p>\n<p>I think when I tried to reproduce the bug I was not running the latest pyqtgraph from github, whereas I think you were. Maybe something has changed and I should have another go at reproducing the problem.</p>", "type": "rendered"}, "created_on": "2019-09-14T21:04:29.766530+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 53907296}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/54002864.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-54002864"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "OK, scratched out some time to look at this again. Note that I've updated labscript\\_devices to include the most recent IMAQdxCamera updates. And while I have installed pyqtgraph from github recently, I apparently went back to the conda version 0.10 at some point so all these following tests are with the old version.\n\nResults:\n\n* Replacing inmain\\_later with inmain prevents hangs. The achievable frame rate isn't much lower on my computer either \\(~24fps, which is usually more than enough to cause a hang\\). The memory footprint of \\_\\_main\\_\\_ still oscillates between 180 MB and 330 MB.\n* Commenting out the image update also prevents hangs. The loop framerate jumps to >30fps when doing this.\n\nI also took a look with memprof. I did this by initializing at the end of the first call to ImageReciever.handler\\(\\) then calling check at different iterations of the loop \\(1,200,500\\). I believe both the 200 and 500 checks were done while the GUI was completely hung \\(ie windows recognizes BLACS at not responding\\). Even the first loop creates quite a bit of noise, but compared with the 200th loop there are a few standouts I can see. First, there are around 40 extra 'managedBuffer' and 'memoryview' class instances. Second, the number of tuples, lists and dicts seems to fluctuate pretty wildly depending on when the check happens. Next, the only meaningful count for pyqtgraph objects is 'pygtgraph.Point.Point'. Finally, while there are plenty of QT5 and SIP objects, they seem pretty consistent no matter which loop I'm looking at.\n\nI also have a memprof when using inmain instead of inmain\\_later at 100. It is similar to the other loops, though the managedBuffer and memoryview counts are down to 17. That could be coincidental though.\n\nI\u2019m probably going to start looking at pyqtgraph imageSet and see if something jumps out at me. As for reproducing the problem with the Mock camera, you may need to increase the pixel count from 500x500 as well as speeding up the loop. My full frame grabs are 1280x960x16bit at the moment and I suspect the image size may be contributing to the issue.\n\n\u200c\n\nHere is the top memprof contributors from the first loop:\n\n```plaintext\n                              <class 'sip.methoddescriptor'> \u00a0 \u00a0 8716\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QLocale.Language'> \u00a0 \u00a0 \u00a0375\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QLocale.Country'> \u00a0 \u00a0 \u00a0269\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'function'> \u00a0 \u00a0 \u00a0232\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'tuple'> \u00a0 \u00a0 \u00a0230\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'sip.variabledescriptor'> \u00a0 \u00a0 \u00a0207\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'dict'> \u00a0 \u00a0 \u00a0169\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QLocale.Script'> \u00a0 \u00a0 \u00a0144\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QPageSize.PageSizeId'> \u00a0 \u00a0 \u00a0127\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QOpenGLTexture.TextureFormat'> \u00a0 \u00a0 \u00a0126\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QPagedPaintDevice.PageSize'> \u00a0 \u00a0 \u00a0126\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'weakref'> \u00a0 \u00a0 \u00a0 89\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QMetaType.Type'> \u00a0 \u00a0 \u00a0 78\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QKeySequence.StandardKey'> \u00a0 \u00a0 \u00a0 71\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QVariant.Type'> \u00a0 \u00a0 \u00a0 59\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'getset_descriptor'> \u00a0 \u00a0 \u00a0 58\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QEasingCurve.Type'> \u00a0 \u00a0 \u00a0 48\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'type'> \u00a0 \u00a0 \u00a0 29\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'cell'> \u00a0 \u00a0 \u00a0 29\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QSysInfo.WinVersion'> \u00a0 \u00a0 \u00a0 29\n\u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtWidgets.QMessageBox.StandardButton'> \u00a0 \u00a0 \u00a0 27\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QDataStream.Version'> \u00a0 \u00a0 \u00a0 26\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QOpenGLTexture.PixelType'> \u00a0 \u00a0 \u00a0 26\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtOpenGL.QGL.FormatOption'> \u00a0 \u00a0 \u00a0 22\n\u00a0 <class 'PyQt5.QtWidgets.QScrollerProperties.ScrollMetric'> \u00a0 \u00a0 \u00a0 21\n\u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtOpenGL.QGLFormat.OpenGLVersionFlag'> \u00a0 \u00a0 \u00a0 21\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QDir.Filter'> \u00a0 \u00a0 \u00a0 20\n\u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QStandardPaths.StandardLocation'> \u00a0 \u00a0 \u00a0 20\n\u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtGui.QPaintEngine.PaintEngineFeature'> \u00a0 \u00a0 \u00a0 20\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtGui.QPaintEngine.Type'> \u00a0 \u00a0 \u00a0 20\n<class 'PyQt5.QtWidgets.QTreeWidgetItemIterator.IteratorFlag'> \u00a0 \u00a0 \u00a0 20\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtGui.QImageIOHandler.ImageOption'> \u00a0 \u00a0 \u00a0 19\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QOpenGLTexture.PixelFormat'> \u00a0 \u00a0 \u00a0 19\n\u00a0 \u00a0<class 'PyQt5.QtWidgets.QDialogButtonBox.StandardButton'> \u00a0 \u00a0 \u00a0 19\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtWidgets.QWizard.WizardOption'> \u00a0 \u00a0 \u00a0 17\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QOpenGLTexture.Feature'> \u00a0 \u00a0 \u00a0 16\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QPixelFormat.YUVLayout'> \u00a0 \u00a0 \u00a0 16\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QCryptographicHash.Algorithm'> \u00a0 \u00a0 \u00a0 15\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QFileDevice.FileError'> \u00a0 \u00a0 \u00a0 15\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QJsonParseError.ParseError'> \u00a0 \u00a0 \u00a0 15\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QLibraryInfo.LibraryLocation'> \u00a0 \u00a0 \u00a0 15\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QPaintEngine.DirtyFlag'> \u00a0 \u00a0 \u00a0 14\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QUrl.UrlFormattingOption'> \u00a0 \u00a0 \u00a0 13\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QDir.SortFlag'> \u00a0 \u00a0 \u00a0 12\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QFileDevice.Permission'> \u00a0 \u00a0 \u00a0 12\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QXmlStreamReader.TokenType'> \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QOpenGLDebugMessage.Type'> \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QOpenGLTexture.BindingTarget'> \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtGui.QOpenGLTexture.Target'> \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QTextFrameFormat.BorderStyle'> \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtWidgets.QDateTimeEdit.Section'> \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QRegularExpression.PatternOption'> \u00a0 \u00a0 \u00a0 10\n\u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtWidgets.QDialogButtonBox.ButtonRole'> \u00a0 \u00a0 \u00a0 10\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtWidgets.QMessageBox.ButtonRole'> \u00a0 \u00a0 \u00a0 10\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtWidgets.QWizard.WizardButton'> \u00a0 \u00a0 \u00a0 10\n\u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QSharedMemory.SharedMemoryError'> \u00a0 \u00a0 \u00a0 \u00a09\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QOpenGLBuffer.UsagePattern'> \u00a0 \u00a0 \u00a0 \u00a09\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtGui.QPixelFormat.ColorModel'> \u00a0 \u00a0 \u00a0 \u00a09\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'builtin_function_or_method'> \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'pyqtgraph.Point.Point'> \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QIODevice.OpenModeFlag'> \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QUrl.ComponentFormattingOption'> \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QImageIOHandler.Transformation'> \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QOpenGLDebugMessage.Source'> \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0<class 'PyQt5.QtGui.QOpenGLTexture.ComparisonFunction'> \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtGui.QTextListFormat.Style'> \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0<class 'PyQt5.QtWidgets.QStyleOptionMenuItem.MenuItemType'> \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'list'> \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QJsonValue.Type'> \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QLocale.NumberOption'> \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QOperatingSystemVersion.OSType'> \u00a0 \u00a0 \u00a0 \u00a07\n<class 'PyQt5.QtCore.QSystemSemaphore.SystemSemaphoreError'> \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QUuid.Version'> \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtGui.QTabletEvent.TabletDevice'> \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtGui.QTouchDevice.CapabilityFlag'> \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtWidgets.QFileIconProvider.IconType'> \u00a0 \u00a0 \u00a0 \u00a07\n```\n\nHere is the top for the 200th loop:\n\n```plaintext\n                              <class 'sip.methoddescriptor'> \u00a0 \u00a0 8722\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QLocale.Language'> \u00a0 \u00a0 \u00a0375\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QLocale.Country'> \u00a0 \u00a0 \u00a0269\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'dict'> \u00a0 \u00a0 \u00a0235\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'sip.variabledescriptor'> \u00a0 \u00a0 \u00a0207\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QLocale.Script'> \u00a0 \u00a0 \u00a0144\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QPageSize.PageSizeId'> \u00a0 \u00a0 \u00a0127\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QOpenGLTexture.TextureFormat'> \u00a0 \u00a0 \u00a0126\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QPagedPaintDevice.PageSize'> \u00a0 \u00a0 \u00a0126\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'tuple'> \u00a0 \u00a0 \u00a0109\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QMetaType.Type'> \u00a0 \u00a0 \u00a0 78\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QKeySequence.StandardKey'> \u00a0 \u00a0 \u00a0 71\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'list'> \u00a0 \u00a0 \u00a0 69\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'weakref'> \u00a0 \u00a0 \u00a0 63\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'pyqtgraph.Point.Point'> \u00a0 \u00a0 \u00a0 60\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QVariant.Type'> \u00a0 \u00a0 \u00a0 59\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'frame'> \u00a0 \u00a0 \u00a0 48\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QEasingCurve.Type'> \u00a0 \u00a0 \u00a0 48\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'managedbuffer'> \u00a0 \u00a0 \u00a0 40\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'memoryview'> \u00a0 \u00a0 \u00a0 40\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'builtin_function_or_method'> \u00a0 \u00a0 \u00a0 39\n<class 'numpy.core._internal._unsafe_first_element_pointer'> \u00a0 \u00a0 \u00a0 38\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'numpy.core._internal.c_char_Array_0'> \u00a0 \u00a0 \u00a0 38\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'numpy.core._internal.LP_c_char_Array_0'> \u00a0 \u00a0 \u00a0 38\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'traceback'> \u00a0 \u00a0 \u00a0 36\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QSysInfo.WinVersion'> \u00a0 \u00a0 \u00a0 29\n\u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtWidgets.QMessageBox.StandardButton'> \u00a0 \u00a0 \u00a0 27\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QDataStream.Version'> \u00a0 \u00a0 \u00a0 26\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QOpenGLTexture.PixelType'> \u00a0 \u00a0 \u00a0 26\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'collections.deque'> \u00a0 \u00a0 \u00a0 24\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtOpenGL.QGL.FormatOption'> \u00a0 \u00a0 \u00a0 22\n\u00a0 <class 'PyQt5.QtWidgets.QScrollerProperties.ScrollMetric'> \u00a0 \u00a0 \u00a0 21\n\u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtOpenGL.QGLFormat.OpenGLVersionFlag'> \u00a0 \u00a0 \u00a0 21\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QDir.Filter'> \u00a0 \u00a0 \u00a0 20\n\u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QStandardPaths.StandardLocation'> \u00a0 \u00a0 \u00a0 20\n\u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtGui.QPaintEngine.PaintEngineFeature'> \u00a0 \u00a0 \u00a0 20\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtGui.QPaintEngine.Type'> \u00a0 \u00a0 \u00a0 20\n<class 'PyQt5.QtWidgets.QTreeWidgetItemIterator.IteratorFlag'> \u00a0 \u00a0 \u00a0 20\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtGui.QImageIOHandler.ImageOption'> \u00a0 \u00a0 \u00a0 19\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QOpenGLTexture.PixelFormat'> \u00a0 \u00a0 \u00a0 19\n\u00a0 \u00a0<class 'PyQt5.QtWidgets.QDialogButtonBox.StandardButton'> \u00a0 \u00a0 \u00a0 19\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'threading.Condition'> \u00a0 \u00a0 \u00a0 18\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtWidgets.QWizard.WizardOption'> \u00a0 \u00a0 \u00a0 17\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QOpenGLTexture.Feature'> \u00a0 \u00a0 \u00a0 16\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QPixelFormat.YUVLayout'> \u00a0 \u00a0 \u00a0 16\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QCryptographicHash.Algorithm'> \u00a0 \u00a0 \u00a0 15\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QFileDevice.FileError'> \u00a0 \u00a0 \u00a0 15\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QJsonParseError.ParseError'> \u00a0 \u00a0 \u00a0 15\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QLibraryInfo.LibraryLocation'> \u00a0 \u00a0 \u00a0 15\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QPaintEngine.DirtyFlag'> \u00a0 \u00a0 \u00a0 14\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QUrl.UrlFormattingOption'> \u00a0 \u00a0 \u00a0 13\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QDir.SortFlag'> \u00a0 \u00a0 \u00a0 12\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QFileDevice.Permission'> \u00a0 \u00a0 \u00a0 12\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QXmlStreamReader.TokenType'> \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QOpenGLDebugMessage.Type'> \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QOpenGLTexture.BindingTarget'> \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtGui.QOpenGLTexture.Target'> \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QTextFrameFormat.BorderStyle'> \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtWidgets.QDateTimeEdit.Section'> \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'function'> \u00a0 \u00a0 \u00a0 10\n\u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QRegularExpression.PatternOption'> \u00a0 \u00a0 \u00a0 10\n\u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtWidgets.QDialogButtonBox.ButtonRole'> \u00a0 \u00a0 \u00a0 10\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtWidgets.QMessageBox.ButtonRole'> \u00a0 \u00a0 \u00a0 10\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtWidgets.QWizard.WizardButton'> \u00a0 \u00a0 \u00a0 10\n\u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QSharedMemory.SharedMemoryError'> \u00a0 \u00a0 \u00a0 \u00a09\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QOpenGLBuffer.UsagePattern'> \u00a0 \u00a0 \u00a0 \u00a09\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtGui.QPixelFormat.ColorModel'> \u00a0 \u00a0 \u00a0 \u00a09\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QIODevice.OpenModeFlag'> \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QUrl.ComponentFormattingOption'> \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QImageIOHandler.Transformation'> \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtGui.QOpenGLDebugMessage.Source'> \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0<class 'PyQt5.QtGui.QOpenGLTexture.ComparisonFunction'> \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtGui.QTextListFormat.Style'> \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0<class 'PyQt5.QtWidgets.QStyleOptionMenuItem.MenuItemType'> \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QJsonValue.Type'> \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QLocale.NumberOption'> \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtCore.QOperatingSystemVersion.OSType'> \u00a0 \u00a0 \u00a0 \u00a07\n<class 'PyQt5.QtCore.QSystemSemaphore.SystemSemaphoreError'> \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtCore.QUuid.Version'> \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtGui.QTabletEvent.TabletDevice'> \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<class 'PyQt5.QtGui.QTouchDevice.CapabilityFlag'> \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 <class 'PyQt5.QtWidgets.QFileIconProvider.IconType'> \u00a0 \u00a0 \u00a0 \u00a07\n```\n\n\u200c", "markup": "markdown", "html": "<p>OK, scratched out some time to look at this again. Note that I've updated labscript_devices to include the most recent IMAQdxCamera updates. And while I have installed pyqtgraph from github recently, I apparently went back to the conda version 0.10 at some point so all these following tests are with the old version.</p>\n<p>Results:</p>\n<ul>\n<li>Replacing inmain_later with inmain prevents hangs. The achievable frame rate isn't much lower on my computer either (~24fps, which is usually more than enough to cause a hang). The memory footprint of __main__ still oscillates between 180 MB and 330 MB.</li>\n<li>Commenting out the image update also prevents hangs. The loop framerate jumps to &gt;30fps when doing this.</li>\n</ul>\n<p>I also took a look with memprof. I did this by initializing at the end of the first call to ImageReciever.handler() then calling check at different iterations of the loop (1,200,500). I believe both the 200 and 500 checks were done while the GUI was completely hung (ie windows recognizes BLACS at not responding). Even the first loop creates quite a bit of noise, but compared with the 200th loop there are a few standouts I can see. First, there are around 40 extra 'managedBuffer' and 'memoryview' class instances. Second, the number of tuples, lists and dicts seems to fluctuate pretty wildly depending on when the check happens. Next, the only meaningful count for pyqtgraph objects is 'pygtgraph.Point.Point'. Finally, while there are plenty of QT5 and SIP objects, they seem pretty consistent no matter which loop I'm looking at.</p>\n<p>I also have a memprof when using inmain instead of inmain_later at 100. It is similar to the other loops, though the managedBuffer and memoryview counts are down to 17. That could be coincidental though.</p>\n<p>I\u2019m probably going to start looking at pyqtgraph imageSet and see if something jumps out at me. As for reproducing the problem with the Mock camera, you may need to increase the pixel count from 500x500 as well as speeding up the loop. My full frame grabs are 1280x960x16bit at the moment and I suspect the image size may be contributing to the issue.</p>\n<p>\u200c</p>\n<p>Here is the top memprof contributors from the first loop:</p>\n<div class=\"codehilite language-plaintext\"><pre><span></span>                              &lt;class &#39;sip.methoddescriptor&#39;&gt; \u00a0 \u00a0 8716\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QLocale.Language&#39;&gt; \u00a0 \u00a0 \u00a0375\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QLocale.Country&#39;&gt; \u00a0 \u00a0 \u00a0269\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;function&#39;&gt; \u00a0 \u00a0 \u00a0232\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;tuple&#39;&gt; \u00a0 \u00a0 \u00a0230\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;sip.variabledescriptor&#39;&gt; \u00a0 \u00a0 \u00a0207\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;dict&#39;&gt; \u00a0 \u00a0 \u00a0169\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QLocale.Script&#39;&gt; \u00a0 \u00a0 \u00a0144\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QPageSize.PageSizeId&#39;&gt; \u00a0 \u00a0 \u00a0127\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QOpenGLTexture.TextureFormat&#39;&gt; \u00a0 \u00a0 \u00a0126\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QPagedPaintDevice.PageSize&#39;&gt; \u00a0 \u00a0 \u00a0126\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;weakref&#39;&gt; \u00a0 \u00a0 \u00a0 89\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QMetaType.Type&#39;&gt; \u00a0 \u00a0 \u00a0 78\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QKeySequence.StandardKey&#39;&gt; \u00a0 \u00a0 \u00a0 71\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QVariant.Type&#39;&gt; \u00a0 \u00a0 \u00a0 59\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;getset_descriptor&#39;&gt; \u00a0 \u00a0 \u00a0 58\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QEasingCurve.Type&#39;&gt; \u00a0 \u00a0 \u00a0 48\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;type&#39;&gt; \u00a0 \u00a0 \u00a0 29\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;cell&#39;&gt; \u00a0 \u00a0 \u00a0 29\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QSysInfo.WinVersion&#39;&gt; \u00a0 \u00a0 \u00a0 29\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtWidgets.QMessageBox.StandardButton&#39;&gt; \u00a0 \u00a0 \u00a0 27\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QDataStream.Version&#39;&gt; \u00a0 \u00a0 \u00a0 26\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QOpenGLTexture.PixelType&#39;&gt; \u00a0 \u00a0 \u00a0 26\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtOpenGL.QGL.FormatOption&#39;&gt; \u00a0 \u00a0 \u00a0 22\n\u00a0 &lt;class &#39;PyQt5.QtWidgets.QScrollerProperties.ScrollMetric&#39;&gt; \u00a0 \u00a0 \u00a0 21\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtOpenGL.QGLFormat.OpenGLVersionFlag&#39;&gt; \u00a0 \u00a0 \u00a0 21\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QDir.Filter&#39;&gt; \u00a0 \u00a0 \u00a0 20\n\u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QStandardPaths.StandardLocation&#39;&gt; \u00a0 \u00a0 \u00a0 20\n\u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtGui.QPaintEngine.PaintEngineFeature&#39;&gt; \u00a0 \u00a0 \u00a0 20\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtGui.QPaintEngine.Type&#39;&gt; \u00a0 \u00a0 \u00a0 20\n&lt;class &#39;PyQt5.QtWidgets.QTreeWidgetItemIterator.IteratorFlag&#39;&gt; \u00a0 \u00a0 \u00a0 20\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtGui.QImageIOHandler.ImageOption&#39;&gt; \u00a0 \u00a0 \u00a0 19\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QOpenGLTexture.PixelFormat&#39;&gt; \u00a0 \u00a0 \u00a0 19\n\u00a0 \u00a0&lt;class &#39;PyQt5.QtWidgets.QDialogButtonBox.StandardButton&#39;&gt; \u00a0 \u00a0 \u00a0 19\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtWidgets.QWizard.WizardOption&#39;&gt; \u00a0 \u00a0 \u00a0 17\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QOpenGLTexture.Feature&#39;&gt; \u00a0 \u00a0 \u00a0 16\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QPixelFormat.YUVLayout&#39;&gt; \u00a0 \u00a0 \u00a0 16\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QCryptographicHash.Algorithm&#39;&gt; \u00a0 \u00a0 \u00a0 15\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QFileDevice.FileError&#39;&gt; \u00a0 \u00a0 \u00a0 15\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QJsonParseError.ParseError&#39;&gt; \u00a0 \u00a0 \u00a0 15\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QLibraryInfo.LibraryLocation&#39;&gt; \u00a0 \u00a0 \u00a0 15\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QPaintEngine.DirtyFlag&#39;&gt; \u00a0 \u00a0 \u00a0 14\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QUrl.UrlFormattingOption&#39;&gt; \u00a0 \u00a0 \u00a0 13\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QDir.SortFlag&#39;&gt; \u00a0 \u00a0 \u00a0 12\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QFileDevice.Permission&#39;&gt; \u00a0 \u00a0 \u00a0 12\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QXmlStreamReader.TokenType&#39;&gt; \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QOpenGLDebugMessage.Type&#39;&gt; \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QOpenGLTexture.BindingTarget&#39;&gt; \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtGui.QOpenGLTexture.Target&#39;&gt; \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QTextFrameFormat.BorderStyle&#39;&gt; \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtWidgets.QDateTimeEdit.Section&#39;&gt; \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QRegularExpression.PatternOption&#39;&gt; \u00a0 \u00a0 \u00a0 10\n\u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtWidgets.QDialogButtonBox.ButtonRole&#39;&gt; \u00a0 \u00a0 \u00a0 10\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtWidgets.QMessageBox.ButtonRole&#39;&gt; \u00a0 \u00a0 \u00a0 10\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtWidgets.QWizard.WizardButton&#39;&gt; \u00a0 \u00a0 \u00a0 10\n\u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QSharedMemory.SharedMemoryError&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a09\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QOpenGLBuffer.UsagePattern&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a09\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtGui.QPixelFormat.ColorModel&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a09\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;builtin_function_or_method&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;pyqtgraph.Point.Point&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QIODevice.OpenModeFlag&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QUrl.ComponentFormattingOption&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QImageIOHandler.Transformation&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QOpenGLDebugMessage.Source&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtGui.QOpenGLTexture.ComparisonFunction&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtGui.QTextListFormat.Style&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0&lt;class &#39;PyQt5.QtWidgets.QStyleOptionMenuItem.MenuItemType&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;list&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QJsonValue.Type&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QLocale.NumberOption&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QOperatingSystemVersion.OSType&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a07\n&lt;class &#39;PyQt5.QtCore.QSystemSemaphore.SystemSemaphoreError&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QUuid.Version&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtGui.QTabletEvent.TabletDevice&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtGui.QTouchDevice.CapabilityFlag&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtWidgets.QFileIconProvider.IconType&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a07\n</pre></div>\n\n\n<p>Here is the top for the 200th loop:</p>\n<div class=\"codehilite language-plaintext\"><pre><span></span>                              &lt;class &#39;sip.methoddescriptor&#39;&gt; \u00a0 \u00a0 8722\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QLocale.Language&#39;&gt; \u00a0 \u00a0 \u00a0375\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QLocale.Country&#39;&gt; \u00a0 \u00a0 \u00a0269\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;dict&#39;&gt; \u00a0 \u00a0 \u00a0235\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;sip.variabledescriptor&#39;&gt; \u00a0 \u00a0 \u00a0207\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QLocale.Script&#39;&gt; \u00a0 \u00a0 \u00a0144\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QPageSize.PageSizeId&#39;&gt; \u00a0 \u00a0 \u00a0127\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QOpenGLTexture.TextureFormat&#39;&gt; \u00a0 \u00a0 \u00a0126\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QPagedPaintDevice.PageSize&#39;&gt; \u00a0 \u00a0 \u00a0126\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;tuple&#39;&gt; \u00a0 \u00a0 \u00a0109\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QMetaType.Type&#39;&gt; \u00a0 \u00a0 \u00a0 78\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QKeySequence.StandardKey&#39;&gt; \u00a0 \u00a0 \u00a0 71\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;list&#39;&gt; \u00a0 \u00a0 \u00a0 69\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;weakref&#39;&gt; \u00a0 \u00a0 \u00a0 63\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;pyqtgraph.Point.Point&#39;&gt; \u00a0 \u00a0 \u00a0 60\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QVariant.Type&#39;&gt; \u00a0 \u00a0 \u00a0 59\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;frame&#39;&gt; \u00a0 \u00a0 \u00a0 48\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QEasingCurve.Type&#39;&gt; \u00a0 \u00a0 \u00a0 48\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;managedbuffer&#39;&gt; \u00a0 \u00a0 \u00a0 40\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;memoryview&#39;&gt; \u00a0 \u00a0 \u00a0 40\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;builtin_function_or_method&#39;&gt; \u00a0 \u00a0 \u00a0 39\n&lt;class &#39;numpy.core._internal._unsafe_first_element_pointer&#39;&gt; \u00a0 \u00a0 \u00a0 38\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;numpy.core._internal.c_char_Array_0&#39;&gt; \u00a0 \u00a0 \u00a0 38\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;numpy.core._internal.LP_c_char_Array_0&#39;&gt; \u00a0 \u00a0 \u00a0 38\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;traceback&#39;&gt; \u00a0 \u00a0 \u00a0 36\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QSysInfo.WinVersion&#39;&gt; \u00a0 \u00a0 \u00a0 29\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtWidgets.QMessageBox.StandardButton&#39;&gt; \u00a0 \u00a0 \u00a0 27\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QDataStream.Version&#39;&gt; \u00a0 \u00a0 \u00a0 26\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QOpenGLTexture.PixelType&#39;&gt; \u00a0 \u00a0 \u00a0 26\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;collections.deque&#39;&gt; \u00a0 \u00a0 \u00a0 24\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtOpenGL.QGL.FormatOption&#39;&gt; \u00a0 \u00a0 \u00a0 22\n\u00a0 &lt;class &#39;PyQt5.QtWidgets.QScrollerProperties.ScrollMetric&#39;&gt; \u00a0 \u00a0 \u00a0 21\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtOpenGL.QGLFormat.OpenGLVersionFlag&#39;&gt; \u00a0 \u00a0 \u00a0 21\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QDir.Filter&#39;&gt; \u00a0 \u00a0 \u00a0 20\n\u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QStandardPaths.StandardLocation&#39;&gt; \u00a0 \u00a0 \u00a0 20\n\u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtGui.QPaintEngine.PaintEngineFeature&#39;&gt; \u00a0 \u00a0 \u00a0 20\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtGui.QPaintEngine.Type&#39;&gt; \u00a0 \u00a0 \u00a0 20\n&lt;class &#39;PyQt5.QtWidgets.QTreeWidgetItemIterator.IteratorFlag&#39;&gt; \u00a0 \u00a0 \u00a0 20\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtGui.QImageIOHandler.ImageOption&#39;&gt; \u00a0 \u00a0 \u00a0 19\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QOpenGLTexture.PixelFormat&#39;&gt; \u00a0 \u00a0 \u00a0 19\n\u00a0 \u00a0&lt;class &#39;PyQt5.QtWidgets.QDialogButtonBox.StandardButton&#39;&gt; \u00a0 \u00a0 \u00a0 19\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;threading.Condition&#39;&gt; \u00a0 \u00a0 \u00a0 18\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtWidgets.QWizard.WizardOption&#39;&gt; \u00a0 \u00a0 \u00a0 17\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QOpenGLTexture.Feature&#39;&gt; \u00a0 \u00a0 \u00a0 16\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QPixelFormat.YUVLayout&#39;&gt; \u00a0 \u00a0 \u00a0 16\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QCryptographicHash.Algorithm&#39;&gt; \u00a0 \u00a0 \u00a0 15\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QFileDevice.FileError&#39;&gt; \u00a0 \u00a0 \u00a0 15\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QJsonParseError.ParseError&#39;&gt; \u00a0 \u00a0 \u00a0 15\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QLibraryInfo.LibraryLocation&#39;&gt; \u00a0 \u00a0 \u00a0 15\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QPaintEngine.DirtyFlag&#39;&gt; \u00a0 \u00a0 \u00a0 14\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QUrl.UrlFormattingOption&#39;&gt; \u00a0 \u00a0 \u00a0 13\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QDir.SortFlag&#39;&gt; \u00a0 \u00a0 \u00a0 12\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QFileDevice.Permission&#39;&gt; \u00a0 \u00a0 \u00a0 12\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QXmlStreamReader.TokenType&#39;&gt; \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QOpenGLDebugMessage.Type&#39;&gt; \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QOpenGLTexture.BindingTarget&#39;&gt; \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtGui.QOpenGLTexture.Target&#39;&gt; \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QTextFrameFormat.BorderStyle&#39;&gt; \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtWidgets.QDateTimeEdit.Section&#39;&gt; \u00a0 \u00a0 \u00a0 11\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;function&#39;&gt; \u00a0 \u00a0 \u00a0 10\n\u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QRegularExpression.PatternOption&#39;&gt; \u00a0 \u00a0 \u00a0 10\n\u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtWidgets.QDialogButtonBox.ButtonRole&#39;&gt; \u00a0 \u00a0 \u00a0 10\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtWidgets.QMessageBox.ButtonRole&#39;&gt; \u00a0 \u00a0 \u00a0 10\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtWidgets.QWizard.WizardButton&#39;&gt; \u00a0 \u00a0 \u00a0 10\n\u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QSharedMemory.SharedMemoryError&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a09\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QOpenGLBuffer.UsagePattern&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a09\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtGui.QPixelFormat.ColorModel&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a09\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QIODevice.OpenModeFlag&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QUrl.ComponentFormattingOption&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QImageIOHandler.Transformation&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtGui.QOpenGLDebugMessage.Source&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtGui.QOpenGLTexture.ComparisonFunction&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtGui.QTextListFormat.Style&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0&lt;class &#39;PyQt5.QtWidgets.QStyleOptionMenuItem.MenuItemType&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a08\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QJsonValue.Type&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QLocale.NumberOption&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtCore.QOperatingSystemVersion.OSType&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a07\n&lt;class &#39;PyQt5.QtCore.QSystemSemaphore.SystemSemaphoreError&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtCore.QUuid.Version&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtGui.QTabletEvent.TabletDevice&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0&lt;class &#39;PyQt5.QtGui.QTouchDevice.CapabilityFlag&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a07\n\u00a0 \u00a0 \u00a0 \u00a0 &lt;class &#39;PyQt5.QtWidgets.QFileIconProvider.IconType&#39;&gt; \u00a0 \u00a0 \u00a0 \u00a07\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2019-09-20T14:49:40.628184+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2019-09-20T14:50:42.052131+00:00", "type": "issue_comment", "id": 54002864}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/54003968.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-54003968"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "Maybe found where the backup is happening. The pyqtgraph.ItemView\nultimately uses the QGraphicsItem.update()\n<https://doc.qt.io/qt-5/qgraphicsitem.html#update> method which the\ndocumentation states \"This function does not cause an immediate paint;\ninstead it schedules a paint request that is processed by QGraphicsView\nafter control reaches the event loop. The item will only be redrawn if it\nis visible in any associated view.\"\n\nThis does seem related. The current hang behavior is such that when\ncontinuous is started images update fine, but all GUI interaction is hung.\nClicking in the GUI than causes the image update to hang as well until the\nGUI interaction processes eventually. Once that processes images will\nupdate again with the GUI interaction still hung up. Is BLACS just getting\ncrushed by Qt paint update requests?\n", "markup": "markdown", "html": "<p>Maybe found where the backup is happening. The pyqtgraph.ItemView\nultimately uses the QGraphicsItem.update()\n<a href=\"https://doc.qt.io/qt-5/qgraphicsitem.html#update\">https://doc.qt.io/qt-5/qgraphicsitem.html#update</a> method which the\ndocumentation states \"This function does not cause an immediate paint;\ninstead it schedules a paint request that is processed by QGraphicsView\nafter control reaches the event loop. The item will only be redrawn if it\nis visible in any associated view.\"</p>\n<p>This does seem related. The current hang behavior is such that when\ncontinuous is started images update fine, but all GUI interaction is hung.\nClicking in the GUI than causes the image update to hang as well until the\nGUI interaction processes eventually. Once that processes images will\nupdate again with the GUI interaction still hung up. Is BLACS just getting\ncrushed by Qt paint update requests?</p>", "type": "rendered"}, "created_on": "2019-09-20T16:10:21.526392+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": null, "type": "issue_comment", "id": 54003968}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/54004428.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-54004428"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "Increasing the image size does it for me, I am able to reproduce the problem now! On linux and with the latest pyqtgraph even, meaning it's not an issue with your specific environment.\n\nI'll get to the bottom of this!", "markup": "markdown", "html": "<p>Increasing the image size does it for me, I am able to reproduce the problem now! On linux and with the latest pyqtgraph even, meaning it's not an issue with your specific environment.</p>\n<p>I'll get to the bottom of this!</p>", "type": "rendered"}, "created_on": "2019-09-20T16:54:03.644050+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 54004428}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/54004457.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-54004457"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "Regarding the QGraphicsItem.update(), brilliant, I was suspecting something like that, that is definitely the most promising lead. Good find.\n\nThere is a bit more to it though - queued events are normally processed in order and so shouldn't be able to build up since we are not allowing *our* events to build up. However, events also have priorities. So I suspect that the paint events are piling up behind our events, which are being processed with higher priority and so never allowing the backlog of paint events to clear.\n\nSolution could be to make our events lower priority.", "markup": "markdown", "html": "<p>Regarding the QGraphicsItem.update(), brilliant, I was suspecting something like that, that is definitely the most promising lead. Good find.</p>\n<p>There is a bit more to it though - queued events are normally processed in order and so shouldn't be able to build up since we are not allowing <em>our</em> events to build up. However, events also have priorities. So I suspect that the paint events are piling up behind our events, which are being processed with higher priority and so never allowing the backlog of paint events to clear.</p>\n<p>Solution could be to make our events lower priority.</p>", "type": "rendered"}, "created_on": "2019-09-20T16:57:17.905913+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-09-20T16:58:07.396100+00:00", "type": "issue_comment", "id": 54004457}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/54004600.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-54004600"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "I was also simultaneously investigating along these lines. The relevant Qt code for repainting widgets is [here](https://github.com/qt/qtbase/blob/1e310b5a4508f25a59f0e54aea8636f38f17db44/src/widgets/kernel/qwidgetbackingstore.cpp#L474) from what I can tell. And it\u2019s linked to monitor refresh rate too, which may explain why it seemed to be fps related. I suggest updating qtutils inmain\\(\\_later\\) to allow an optional priority and to set it low \\(lower than Qt.LowEventPriority\\) for those specific update calls.\n\nAlternatively we could have all of our inmain\\(\\_later\\) calls be low priority, but I\u2019m uncertain if that would slow down our code more than we want\u2026", "markup": "markdown", "html": "<p>I was also simultaneously investigating along these lines. The relevant Qt code for repainting widgets is <a data-is-external-link=\"true\" href=\"https://github.com/qt/qtbase/blob/1e310b5a4508f25a59f0e54aea8636f38f17db44/src/widgets/kernel/qwidgetbackingstore.cpp#L474\" rel=\"nofollow\">here</a> from what I can tell. And it\u2019s linked to monitor refresh rate too, which may explain why it seemed to be fps related. I suggest updating qtutils inmain(_later) to allow an optional priority and to set it low (lower than Qt.LowEventPriority) for those specific update calls.</p>\n<p>Alternatively we could have all of our inmain(_later) calls be low priority, but I\u2019m uncertain if that would slow down our code more than we want\u2026</p>", "type": "rendered"}, "created_on": "2019-09-20T17:10:28.244222+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "updated_on": null, "type": "issue_comment", "id": 54004600}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/54004624.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-54004624"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "I've just locally added a priority kwarg to inmain_later, and am not seeing it fixing the problem if I set a low priority. Will keep investigating...", "markup": "markdown", "html": "<p>I've just locally added a priority kwarg to inmain_later, and am not seeing it fixing the problem if I set a low priority. Will keep investigating...</p>", "type": "rendered"}, "created_on": "2019-09-20T17:12:28.430949+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 54004624}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/54005709.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-54005709"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "I may have spoken too soon about being able to reproduce the problem. I can cause a temporary but large increase in memory by increasing the image size to be very very large (10k x 10k), but it looks like this is just a delay in reclaiming memory until the garbage collector runs, I don't think it has anything to do with Qt. And I can still interact with the GUI, it's only laggy because the painting actually takes a long time for such large images, not because there is any kind of backlog, seemingly. Though, garbage collection being necessary still does seem strange, I would have thought reference counting would get these image array objects, there should not be circular references that would require garbage collection. If I run the garbage collector once per loop the memory growth goes away, but this could merely be because it modifies the timing.\n\nDavid, could you post the exact Python and PyQt versions you see the problem with? I am also wondering if it has something to do with whether Qt is using OpenGL or not, based on the Qt source Phil linked to.", "markup": "markdown", "html": "<p>I may have spoken too soon about being able to reproduce the problem. I can cause a temporary but large increase in memory by increasing the image size to be very very large (10k x 10k), but it looks like this is just a delay in reclaiming memory until the garbage collector runs, I don't think it has anything to do with Qt. And I can still interact with the GUI, it's only laggy because the painting actually takes a long time for such large images, not because there is any kind of backlog, seemingly. Though, garbage collection being necessary still does seem strange, I would have thought reference counting would get these image array objects, there should not be circular references that would require garbage collection. If I run the garbage collector once per loop the memory growth goes away, but this could merely be because it modifies the timing.</p>\n<p>David, could you post the exact Python and PyQt versions you see the problem with? I am also wondering if it has something to do with whether Qt is using OpenGL or not, based on the Qt source Phil linked to.</p>", "type": "rendered"}, "created_on": "2019-09-20T19:10:05.971886+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 54005709}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/54005890.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-54005890"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "Darn. At this rate we might need to invite you over for a talk so you can actually see it in person.\n\nHere is my conda environment. We are still working on getting Windows 10 upgrades so this is all Windows 7. I don\u2019t believe any package versions have changed more than their micro number, with the exception of zprocess.\n\n```plaintext\n# packages in environment at C:\\Miniconda3\\envs\\labscript:\n#\n# Name \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Version \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Build \u00a0Channel\nautocython \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.1.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0pypi_0 \u00a0 \u00a0pypi\nblas \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 mkl \u00a0\nca-certificates \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2019.5.15 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1 \u00a0\ncertifi \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2019.6.16 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36_1 \u00a0\ncycler \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00.10.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36h009560c_0 \u00a0\ncython \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00.29.13 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36ha925a31_0 \u00a0\nfreetype \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02.9.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0ha9979f8_1 \u00a0\nh5py \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02.9.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36h5e291fa_0 \u00a0\nhdf5 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.10.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 h7ebc959_0 \u00a0\nicc_rt \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02019.0.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 h0cc432a_1 \u00a0\nicu \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 58.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ha66f8fd_1 \u00a0\nimportlib_metadata \u00a0 \u00a0 \u00a0 \u00a00.19 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36_0 \u00a0\nintel-openmp \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02019.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0245 \u00a0\njpeg \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a09b \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 hb83a4c4_2 \u00a0\nkiwisolver \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.1.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36ha925a31_0 \u00a0\nlibpng \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.6.37 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 h2a8f88b_0 \u00a0\nlibsodium \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1.0.16 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 h9d3ae62_0 \u00a0\nlibtiff \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 4.0.10 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 hb898794_2 \u00a0\nmatplotlib \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a03.1.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36hc8f65d3_0 \u00a0\nmkl \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2019.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0245 \u00a0\nmkl-service \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2.0.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36he774522_0 \u00a0\nmkl_fft \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1.0.14 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36h14836fe_0 \u00a0\nmkl_random \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.0.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36h343c172_0 \u00a0\nnumpy \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1.16.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36h19fb1c0_0 \u00a0\nnumpy-base \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.16.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36hc3f5095_0 \u00a0\nolefile \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0.46 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36_0 \u00a0\nopenssl \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1.1.1c \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 he774522_1 \u00a0\npandas \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00.25.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36ha925a31_0 \u00a0\npillow \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a06.1.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36hdc69c19_0 \u00a0\npip \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 19.2.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36_0 \u00a0\npsutil \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a05.6.3 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36he774522_0 \u00a0\npycapture2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02.13.61 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0pypi_0 \u00a0 \u00a0pypi\npydaqmx \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1.4.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0pypi_0 \u00a0 \u00a0pypi\npyparsing \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2.4.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py_0 \u00a0\npypylon \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1.4.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0pypi_0 \u00a0 \u00a0pypi\npyqt \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a05.9.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36h6538335_2 \u00a0\npyqtgraph \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0.10.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36h28b3542_3 \u00a0\npyreadline \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36_1 \u00a0\npyserial \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a03.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36_0 \u00a0\npython \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a03.6.9 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0h5500b2f_0 \u00a0\npython-dateutil \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2.8.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36_0 \u00a0\npytz \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02019.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py_0 \u00a0\npyvisa \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.10.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pypi_0 \u00a0 \u00a0pypi\npywin32 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 223 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36hfa6e2cd_1 \u00a0\npyzmq \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 18.1.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36ha925a31_0 \u00a0\nqt \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a05.9.7 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0vc14h73c81de_0 \u00a0\nqtutils \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2.3.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0pypi_0 \u00a0 \u00a0pypi\nscipy \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1.3.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36h29ff71c_0 \u00a0\nsetuptools \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a041.0.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36_0 \u00a0\nsip \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 4.19.8 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36h6538335_0 \u00a0\nsix \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1.12.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36_0 \u00a0\nspinapi \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 3.2.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0pypi_0 \u00a0 \u00a0pypi\nsqlite \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a03.29.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 he774522_0 \u00a0\ntk \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a08.6.8 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0hfa6e2cd_0 \u00a0\ntornado \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 6.0.3 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36he774522_0 \u00a0\ntzlocal \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2.0.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36_0 \u00a0\nvc \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a014.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 h0510ff6_4 \u00a0\nvs2015_runtime \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a014.16.27012 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0hf0eaf9b_0 \u00a0\nwheel \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0.33.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36_0 \u00a0\nwincertstore \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36h7fe50ca_0 \u00a0\nwindows-curses \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0pypi_0 \u00a0 \u00a0pypi\nxmlrunner \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1.7.7 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0pypi_0 \u00a0 \u00a0pypi\nxz \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a05.2.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0h2fa13f4_4 \u00a0\nzeromq \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a04.3.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0h33f27b4_3 \u00a0\nzipp \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00.5.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py_0 \u00a0\nzlib \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.2.11 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 h62dcd97_3 \u00a0\nzprocess \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02.16.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pypi_0 \u00a0 \u00a0pypi\nzstd \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.3.7 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0h508b16e_0\u00a0\u00a0\n```\n\n\u200c", "markup": "markdown", "html": "<p>Darn. At this rate we might need to invite you over for a talk so you can actually see it in person.</p>\n<p>Here is my conda environment. We are still working on getting Windows 10 upgrades so this is all Windows 7. I don\u2019t believe any package versions have changed more than their micro number, with the exception of zprocess.</p>\n<div class=\"codehilite language-plaintext\"><pre><span></span># packages in environment at C:\\Miniconda3\\envs\\labscript:\n#\n# Name \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Version \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Build \u00a0Channel\nautocython \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.1.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0pypi_0 \u00a0 \u00a0pypi\nblas \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 mkl \u00a0\nca-certificates \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2019.5.15 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1 \u00a0\ncertifi \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2019.6.16 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36_1 \u00a0\ncycler \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00.10.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36h009560c_0 \u00a0\ncython \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00.29.13 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36ha925a31_0 \u00a0\nfreetype \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02.9.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0ha9979f8_1 \u00a0\nh5py \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02.9.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36h5e291fa_0 \u00a0\nhdf5 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.10.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 h7ebc959_0 \u00a0\nicc_rt \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02019.0.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 h0cc432a_1 \u00a0\nicu \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 58.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ha66f8fd_1 \u00a0\nimportlib_metadata \u00a0 \u00a0 \u00a0 \u00a00.19 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36_0 \u00a0\nintel-openmp \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02019.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0245 \u00a0\njpeg \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a09b \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 hb83a4c4_2 \u00a0\nkiwisolver \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.1.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36ha925a31_0 \u00a0\nlibpng \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.6.37 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 h2a8f88b_0 \u00a0\nlibsodium \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1.0.16 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 h9d3ae62_0 \u00a0\nlibtiff \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 4.0.10 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 hb898794_2 \u00a0\nmatplotlib \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a03.1.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36hc8f65d3_0 \u00a0\nmkl \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2019.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0245 \u00a0\nmkl-service \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2.0.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36he774522_0 \u00a0\nmkl_fft \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1.0.14 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36h14836fe_0 \u00a0\nmkl_random \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.0.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36h343c172_0 \u00a0\nnumpy \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1.16.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36h19fb1c0_0 \u00a0\nnumpy-base \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.16.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36hc3f5095_0 \u00a0\nolefile \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0.46 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36_0 \u00a0\nopenssl \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1.1.1c \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 he774522_1 \u00a0\npandas \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00.25.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36ha925a31_0 \u00a0\npillow \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a06.1.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36hdc69c19_0 \u00a0\npip \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 19.2.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36_0 \u00a0\npsutil \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a05.6.3 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36he774522_0 \u00a0\npycapture2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02.13.61 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0pypi_0 \u00a0 \u00a0pypi\npydaqmx \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1.4.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0pypi_0 \u00a0 \u00a0pypi\npyparsing \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2.4.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py_0 \u00a0\npypylon \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1.4.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0pypi_0 \u00a0 \u00a0pypi\npyqt \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a05.9.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36h6538335_2 \u00a0\npyqtgraph \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0.10.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36h28b3542_3 \u00a0\npyreadline \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36_1 \u00a0\npyserial \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a03.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36_0 \u00a0\npython \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a03.6.9 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0h5500b2f_0 \u00a0\npython-dateutil \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2.8.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36_0 \u00a0\npytz \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02019.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py_0 \u00a0\npyvisa \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.10.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pypi_0 \u00a0 \u00a0pypi\npywin32 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 223 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36hfa6e2cd_1 \u00a0\npyzmq \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 18.1.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36ha925a31_0 \u00a0\nqt \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a05.9.7 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0vc14h73c81de_0 \u00a0\nqtutils \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2.3.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0pypi_0 \u00a0 \u00a0pypi\nscipy \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1.3.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36h29ff71c_0 \u00a0\nsetuptools \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a041.0.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36_0 \u00a0\nsip \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 4.19.8 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36h6538335_0 \u00a0\nsix \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1.12.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36_0 \u00a0\nspinapi \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 3.2.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0pypi_0 \u00a0 \u00a0pypi\nsqlite \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a03.29.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 he774522_0 \u00a0\ntk \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a08.6.8 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0hfa6e2cd_0 \u00a0\ntornado \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 6.0.3 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36he774522_0 \u00a0\ntzlocal \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2.0.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36_0 \u00a0\nvc \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a014.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 h0510ff6_4 \u00a0\nvs2015_runtime \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a014.16.27012 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0hf0eaf9b_0 \u00a0\nwheel \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0.33.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 py36_0 \u00a0\nwincertstore \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py36h7fe50ca_0 \u00a0\nwindows-curses \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0pypi_0 \u00a0 \u00a0pypi\nxmlrunner \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1.7.7 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0pypi_0 \u00a0 \u00a0pypi\nxz \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a05.2.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0h2fa13f4_4 \u00a0\nzeromq \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a04.3.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0h33f27b4_3 \u00a0\nzipp \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00.5.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0py_0 \u00a0\nzlib \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.2.11 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 h62dcd97_3 \u00a0\nzprocess \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02.16.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pypi_0 \u00a0 \u00a0pypi\nzstd \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.3.7 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0h508b16e_0\u00a0\u00a0\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2019-09-20T19:36:31.841109+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": null, "type": "issue_comment", "id": 54005890}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/54006362.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-54006362"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "Ok, I'm also on a Windows 7 computer with the same versions of everything and not seeing it :/\n\nThen again, this computer is not very fast. I'm struggling to get high frame rates even with fully pre-generated data. Perhaps this bug requires a faster computer to be triggered, maybe something about the screen refresh rate as Phil has mentioned.\n\n\nSo I guess we're still debugging on your setup. Here is attempt at a solution number 1, based on the hypothesis that it's a backlog of paint events that we can prevent by deprioritising our events:\n\nIf you replace `_inmain_later()` in your locally-installed `qtutils/invoke_in_main.py` with the following:\n\n```python\ndef _in_main_later(fn, exceptions_in_main, *args, **kwargs):\n    \"\"\"Asks the mainloop to call a function when it has time. Immediately returns the\n    queue that was sent to the mainloop.  A call to queue.get() will return a list of\n    [result,exception] where exception=[type,value,traceback] of the exception. The\n    keyword argument _priority can be used to pass the event priority to the postEvent()\n    call. Functions of the same priority are guaranteed to be called in the order they\n    were requested.\"\"\"\n    queue = Queue()\n    post_kwargs = {}\n    if '_priority' in kwargs:\n        post_kwargs['priority'] = kwargs.pop('_priority')\n    QCoreApplication.postEvent(\n        caller, CallEvent(queue, exceptions_in_main, fn, *args, **kwargs), **post_kwargs\n    )\n    return queue\n```\n\nAnd change the inmain_later call in blacs_tabs.py to:\n\n```python\n self.update_event = inmain_later(self.update, image, self.frame_rate, _priority=QtCore.Qt.LowEventPriority - 1)\n```\n\ndoes that solve the problem?\n\n\nAttempt at a solution number two. If you append:\n```python\nQtGui.QApplication.instance().sendPostedEvents()\n```\n\nto the end of `ImageReceiver.update()`, does that solve the problem? This is also based on the hypothesis of a backlog of other events, and we're hoping `sendPostedEvents` will process them all immediately. This is pretty hacky but could be informative.\n\n\nAnd, attempt at a solution number three. I'm not super convinced that changing the call to `inmain()` is a satisfactory solution since all that does is `inmain_later()` followed by a `.get()` on the resulting queue, so it is basically the same except that the `.get()` is immediate instead of just before the next call.\n\nWe can't just get rid of waiting on the queue manually since we need to be checking `self.stopping` regularly to avoid the possibility of a deadlock upon tab restart, but we could manually `.get()` from the queue immediately instead of waiting until just before the next event. Leaving it until the last second was just a way of speeding up the max frame rate slightly by allowing the worker to send the next frame prior to the previous one being rendered. \n\nBut it sounds like that will make the problem go away, maybe just for timing reasons, even though I'm not convinced it addresses whatever the root cause is.\n\nSo if nothing else presents itself about solving this issue and if I continue to be unable to reproduce it, maybe the following patch is the pragmatic way forward. It's dissatisfying though, and will probably limit the achievable frame rates of other cameras:\n\n```diff\ndiff -r ce230bf8846b IMAQdxCamera/blacs_tabs.py\n--- a/IMAQdxCamera/blacs_tabs.py        Mon Aug 26 16:13:28 2019 -0400\n+++ b/IMAQdxCamera/blacs_tabs.py        Fri Sep 20 16:30:57 2019 -0400\n@@ -56,7 +56,6 @@\n         self.label_fps = label_fps\n         self.last_frame_time = None\n         self.frame_rate = None\n-        self.update_event = None\n\n     def handler(self, data):\n         md = json.loads(data[0])\n@@ -71,19 +70,18 @@\n             else:\n                 self.frame_rate = 1 / dt\n         self.last_frame_time = this_frame_time\n-        # Wait for the previous update to compete so we don't accumulate a backlog:\n-        if self.update_event is not None:\n-            while True:\n-                # Don't block, and check for self.stopping regularly in case we are\n-                # shutting down. Otherwise if shutdown is called from the main thread we\n-                # would deadlock.\n-                try:\n-                    self.update_event.get(timeout=0.1)\n-                    break\n-                except Empty:\n-                    if self.stopping:\n-                        return\n-        self.update_event = inmain_later(self.update, image, self.frame_rate)\n+        update_event = inmain_later(self.update, image, self.frame_rate)\n+        # Wait for the update to compete so we don't accumulate a backlog:\n+        while True:\n+            # Don't block, and check for self.stopping regularly in case we are\n+            # shutting down. Otherwise if shutdown is called from the main thread we\n+            # would deadlock.\n+            try:\n+                update_event.get(timeout=0.1)\n+                break\n+            except Empty:\n+                if self.stopping:\n+                    return\n         return [b'ok']\n\n     def update(self, image, frame_rate):\n```", "markup": "markdown", "html": "<p>Ok, I'm also on a Windows 7 computer with the same versions of everything and not seeing it :/</p>\n<p>Then again, this computer is not very fast. I'm struggling to get high frame rates even with fully pre-generated data. Perhaps this bug requires a faster computer to be triggered, maybe something about the screen refresh rate as Phil has mentioned.</p>\n<p>So I guess we're still debugging on your setup. Here is attempt at a solution number 1, based on the hypothesis that it's a backlog of paint events that we can prevent by deprioritising our events:</p>\n<p>If you replace <code>_inmain_later()</code> in your locally-installed <code>qtutils/invoke_in_main.py</code> with the following:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">_in_main_later</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"p\">,</span> <span class=\"n\">exceptions_in_main</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Asks the mainloop to call a function when it has time. Immediately returns the</span>\n<span class=\"sd\">    queue that was sent to the mainloop.  A call to queue.get() will return a list of</span>\n<span class=\"sd\">    [result,exception] where exception=[type,value,traceback] of the exception. The</span>\n<span class=\"sd\">    keyword argument _priority can be used to pass the event priority to the postEvent()</span>\n<span class=\"sd\">    call. Functions of the same priority are guaranteed to be called in the order they</span>\n<span class=\"sd\">    were requested.&quot;&quot;&quot;</span>\n    <span class=\"n\">queue</span> <span class=\"o\">=</span> <span class=\"n\">Queue</span><span class=\"p\">()</span>\n    <span class=\"n\">post_kwargs</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"k\">if</span> <span class=\"s1\">&#39;_priority&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span><span class=\"p\">:</span>\n        <span class=\"n\">post_kwargs</span><span class=\"p\">[</span><span class=\"s1\">&#39;priority&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s1\">&#39;_priority&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">QCoreApplication</span><span class=\"o\">.</span><span class=\"n\">postEvent</span><span class=\"p\">(</span>\n        <span class=\"n\">caller</span><span class=\"p\">,</span> <span class=\"n\">CallEvent</span><span class=\"p\">(</span><span class=\"n\">queue</span><span class=\"p\">,</span> <span class=\"n\">exceptions_in_main</span><span class=\"p\">,</span> <span class=\"n\">fn</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">),</span> <span class=\"o\">**</span><span class=\"n\">post_kwargs</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">queue</span>\n</pre></div>\n\n\n<p>And change the inmain_later call in blacs_tabs.py to:</p>\n<div class=\"codehilite language-python\"><pre><span></span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_event</span> <span class=\"o\">=</span> <span class=\"n\">inmain_later</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">,</span> <span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">frame_rate</span><span class=\"p\">,</span> <span class=\"n\">_priority</span><span class=\"o\">=</span><span class=\"n\">QtCore</span><span class=\"o\">.</span><span class=\"n\">Qt</span><span class=\"o\">.</span><span class=\"n\">LowEventPriority</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>does that solve the problem?</p>\n<p>Attempt at a solution number two. If you append:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QApplication</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">sendPostedEvents</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>to the end of <code>ImageReceiver.update()</code>, does that solve the problem? This is also based on the hypothesis of a backlog of other events, and we're hoping <code>sendPostedEvents</code> will process them all immediately. This is pretty hacky but could be informative.</p>\n<p>And, attempt at a solution number three. I'm not super convinced that changing the call to <code>inmain()</code> is a satisfactory solution since all that does is <code>inmain_later()</code> followed by a <code>.get()</code> on the resulting queue, so it is basically the same except that the <code>.get()</code> is immediate instead of just before the next call.</p>\n<p>We can't just get rid of waiting on the queue manually since we need to be checking <code>self.stopping</code> regularly to avoid the possibility of a deadlock upon tab restart, but we could manually <code>.get()</code> from the queue immediately instead of waiting until just before the next event. Leaving it until the last second was just a way of speeding up the max frame rate slightly by allowing the worker to send the next frame prior to the previous one being rendered. </p>\n<p>But it sounds like that will make the problem go away, maybe just for timing reasons, even though I'm not convinced it addresses whatever the root cause is.</p>\n<p>So if nothing else presents itself about solving this issue and if I continue to be unable to reproduce it, maybe the following patch is the pragmatic way forward. It's dissatisfying though, and will probably limit the achievable frame rates of other cameras:</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gh\">diff -r ce230bf8846b IMAQdxCamera/blacs_tabs.py</span>\n<span class=\"gd\">--- a/IMAQdxCamera/blacs_tabs.py        Mon Aug 26 16:13:28 2019 -0400</span>\n<span class=\"gi\">+++ b/IMAQdxCamera/blacs_tabs.py        Fri Sep 20 16:30:57 2019 -0400</span>\n<span class=\"gu\">@@ -56,7 +56,6 @@</span>\n         self.label_fps = label_fps\n         self.last_frame_time = None\n         self.frame_rate = None\n<span class=\"gd\">-        self.update_event = None</span>\n\n     def handler(self, data):\n         md = json.loads(data[0])\n<span class=\"gu\">@@ -71,19 +70,18 @@</span>\n             else:\n                 self.frame_rate = 1 / dt\n         self.last_frame_time = this_frame_time\n<span class=\"gd\">-        # Wait for the previous update to compete so we don&#39;t accumulate a backlog:</span>\n<span class=\"gd\">-        if self.update_event is not None:</span>\n<span class=\"gd\">-            while True:</span>\n<span class=\"gd\">-                # Don&#39;t block, and check for self.stopping regularly in case we are</span>\n<span class=\"gd\">-                # shutting down. Otherwise if shutdown is called from the main thread we</span>\n<span class=\"gd\">-                # would deadlock.</span>\n<span class=\"gd\">-                try:</span>\n<span class=\"gd\">-                    self.update_event.get(timeout=0.1)</span>\n<span class=\"gd\">-                    break</span>\n<span class=\"gd\">-                except Empty:</span>\n<span class=\"gd\">-                    if self.stopping:</span>\n<span class=\"gd\">-                        return</span>\n<span class=\"gd\">-        self.update_event = inmain_later(self.update, image, self.frame_rate)</span>\n<span class=\"gi\">+        update_event = inmain_later(self.update, image, self.frame_rate)</span>\n<span class=\"gi\">+        # Wait for the update to compete so we don&#39;t accumulate a backlog:</span>\n<span class=\"gi\">+        while True:</span>\n<span class=\"gi\">+            # Don&#39;t block, and check for self.stopping regularly in case we are</span>\n<span class=\"gi\">+            # shutting down. Otherwise if shutdown is called from the main thread we</span>\n<span class=\"gi\">+            # would deadlock.</span>\n<span class=\"gi\">+            try:</span>\n<span class=\"gi\">+                update_event.get(timeout=0.1)</span>\n<span class=\"gi\">+                break</span>\n<span class=\"gi\">+            except Empty:</span>\n<span class=\"gi\">+                if self.stopping:</span>\n<span class=\"gi\">+                    return</span>\n         return [b&#39;ok&#39;]\n\n     def update(self, image, frame_rate):\n</pre></div>", "type": "rendered"}, "created_on": "2019-09-20T20:36:06.701210+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 54006362}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/54006551.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-54006551"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "Also, what do you get for the following?\n```python\nimport pyqtgraph\nprint(pyqtgraph.CONFIG_OPTIONS)\n```\n\nMostly interested in whether openGL is in use. It seems like for me it is not, but enabling it doesn't cause the bug to occur, either.", "markup": "markdown", "html": "<p>Also, what do you get for the following?</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">pyqtgraph</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">pyqtgraph</span><span class=\"o\">.</span><span class=\"n\">CONFIG_OPTIONS</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Mostly interested in whether openGL is in use. It seems like for me it is not, but enabling it doesn't cause the bug to occur, either.</p>", "type": "rendered"}, "created_on": "2019-09-20T20:59:04.067201+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 54006551}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/54006691.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-54006691"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "Results from testing:\n\nSolution  number 2\\) Started here because it was the easiest to implement. This one works. I actually get a slightly higher framerate \\(28 fps\\) than using inmain in place of inmain\\_later.\n\nSolution number 1\\) This one helps, but the hangs are still present. They are significantly shorter though. Max framerate was 30 fps.\n\nSolution number 3\\) This also works. Max framerate is 28 fps.\n\n`pyqtgraph.CONFIG_OPTIONS = {'useOpenGL':False,'leftButtonPan':True,'foreground':'d','background':'k','antialias':False,'editorCommand':None,'useWeave':False,'weaveDebug':False,'exitCleanup':True,'enableExperimental':False,'crashWarning':False,'imageAxisOrder':'col-major'}`\n\nHopefully it doesn't come to something hacky just our sake since it appears nobody else seems to be having this issue. I'm willing to try a few more things to get to the bottom of this if possible.", "markup": "markdown", "html": "<p>Results from testing:</p>\n<p>Solution  number 2) Started here because it was the easiest to implement. This one works. I actually get a slightly higher framerate (28 fps) than using inmain in place of inmain_later.</p>\n<p>Solution number 1) This one helps, but the hangs are still present. They are significantly shorter though. Max framerate was 30 fps.</p>\n<p>Solution number 3) This also works. Max framerate is 28 fps.</p>\n<p><code>pyqtgraph.CONFIG_OPTIONS = {'useOpenGL':False,'leftButtonPan':True,'foreground':'d','background':'k','antialias':False,'editorCommand':None,'useWeave':False,'weaveDebug':False,'exitCleanup':True,'enableExperimental':False,'crashWarning':False,'imageAxisOrder':'col-major'}</code></p>\n<p>Hopefully it doesn't come to something hacky just our sake since it appears nobody else seems to be having this issue. I'm willing to try a few more things to get to the bottom of this if possible.</p>", "type": "rendered"}, "created_on": "2019-09-20T21:10:20.462867+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2019-09-21T00:34:55.317338+00:00", "type": "issue_comment", "id": 54006691}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/54007169.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-54007169"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "This is somewhat unrelated, but should we use the pyqtgraph global option `imageAxisOrder='row-major'` to avoid the need to transpose the images in ImageReceiver.update? It seems like it would improve performance a bit.", "markup": "markdown", "html": "<p>This is somewhat unrelated, but should we use the pyqtgraph global option <code>imageAxisOrder='row-major'</code> to avoid the need to transpose the images in ImageReceiver.update? It seems like it would improve performance a bit.</p>", "type": "rendered"}, "created_on": "2019-09-20T22:20:16.439821+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2019-09-21T00:35:17.168526+00:00", "type": "issue_comment", "id": 54007169}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/54011796.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-54011796"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "@{557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3} FYI @{557058:411f7712-e1fa-438c-b578-0359da2d9f06} updated this issue and we didn\u2019t get email notifications for it! Writing this message so you see the updates!", "markup": "markdown", "html": "<p><span class=\"ap-mention\" data-atlassian-id=\"557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3\">@Chris Billington</span> FYI <span class=\"ap-mention\" data-atlassian-id=\"557058:411f7712-e1fa-438c-b578-0359da2d9f06\">@David Meyer</span> updated this issue and we didn\u2019t get email notifications for it! Writing this message so you see the updates!</p>", "type": "rendered"}, "created_on": "2019-09-21T14:17:47.110318+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "updated_on": null, "type": "issue_comment", "id": 54011796}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/54013282.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-54013282"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "Thanks Phil, and thanks David.\n\nSo whilst I don't see as obvious a hang, it is clear that user interaction is much laggier for me in some circumstances than others, and it seems to follow the same conditions as you say cause your hang. It goes away for me when I apply the changes that you say solve the issue for you, so I am going to assume they have the same root cause.\n\nEvent priorities are not solving the issue for me, and as you said they only seemed to help a little bit for you. It seems to me that they are not sufficient - perhaps the priorities of our events and other events are not even being compared, maybe because we have a custom event handler. Maybe the priorities are only meaningful within a single event handler and not app-wide. I don't know, but I couldn't seem to change much by using event priorities.\n\nSo I'm proposing PR #83 as a fix. This is essentially the `sendPostedEvents()` fix, though I've gone ahead and merged the `handler()` and `update()` methods as a simplification - they were only separate in order to send the reply to the worker ASAP, but with a tiny addition to zprocess (update required), the `handler()` method can now send a reply immediately and then continue to do its processing, so no need for a separate `update()` call to be queued up.\n\nThis removes the GUI lagginess for me, and it sounds like it will for you too based on your testing. It still allows the worker to be fetching a new frame whilst the parent process is rendering the previous frame, so we still in principle should be able to render frames at the maximum rate of whichever is slowest: rendering or downloading.\n\nIt is usually code smell to be manually calling `sendPostedEvents` or similar things, but since we are in the main thread when we call it, and since most events are dispatched immediately in Qt anyway (leading to re-entrancy even in single-threaded programs), all it's doing is not allowing these other events to be an exception to that. And we're calling it at the very end of our function, where control is about to be returned to the mainloop anyway, which would be doing the same thing. So I think this is an OK solution.\n\nOne possibility is that the events that are processed may themselves post further events, such that we may need to call `sendPostedEvents()` multiple times to clear the whole backlog. But a) there doesn't seem to be any way to check if there are pending events or to say \"run until there are no more\", and b) we're still calling it once per frame, so nothing should build up for more than one frame. I think we're good.\n\nDavid if you could confirm this fixes the problem, maybe we can put this one to rest :)\n\nRegarding `imageAxisOrder='row-major'`, I don't think there is any significant cost to transposing the arrays since this is just a metadata change, it doesn't actually move the data in memory. So unless there is a \"real\" transpose operation happening at a lower level that `imageAxisOrder='row-major'` somehow avoids (which seems doubtful), I don't think this will make any difference. Profiling results would change my mind though :).", "markup": "markdown", "html": "<p>Thanks Phil, and thanks David.</p>\n<p>So whilst I don't see as obvious a hang, it is clear that user interaction is much laggier for me in some circumstances than others, and it seems to follow the same conditions as you say cause your hang. It goes away for me when I apply the changes that you say solve the issue for you, so I am going to assume they have the same root cause.</p>\n<p>Event priorities are not solving the issue for me, and as you said they only seemed to help a little bit for you. It seems to me that they are not sufficient - perhaps the priorities of our events and other events are not even being compared, maybe because we have a custom event handler. Maybe the priorities are only meaningful within a single event handler and not app-wide. I don't know, but I couldn't seem to change much by using event priorities.</p>\n<p>So I'm proposing <a href=\"#!/labscript_suite/labscript_devices/pull-requests/83/fix-issue-36-blacs-freezing-in\" rel=\"nofollow\" class=\"ap-connect-link\">PR #83</a> as a fix. This is essentially the <code>sendPostedEvents()</code> fix, though I've gone ahead and merged the <code>handler()</code> and <code>update()</code> methods as a simplification - they were only separate in order to send the reply to the worker ASAP, but with a tiny addition to zprocess (update required), the <code>handler()</code> method can now send a reply immediately and then continue to do its processing, so no need for a separate <code>update()</code> call to be queued up.</p>\n<p>This removes the GUI lagginess for me, and it sounds like it will for you too based on your testing. It still allows the worker to be fetching a new frame whilst the parent process is rendering the previous frame, so we still in principle should be able to render frames at the maximum rate of whichever is slowest: rendering or downloading.</p>\n<p>It is usually code smell to be manually calling <code>sendPostedEvents</code> or similar things, but since we are in the main thread when we call it, and since most events are dispatched immediately in Qt anyway (leading to re-entrancy even in single-threaded programs), all it's doing is not allowing these other events to be an exception to that. And we're calling it at the very end of our function, where control is about to be returned to the mainloop anyway, which would be doing the same thing. So I think this is an OK solution.</p>\n<p>One possibility is that the events that are processed may themselves post further events, such that we may need to call <code>sendPostedEvents()</code> multiple times to clear the whole backlog. But a) there doesn't seem to be any way to check if there are pending events or to say \"run until there are no more\", and b) we're still calling it once per frame, so nothing should build up for more than one frame. I think we're good.</p>\n<p>David if you could confirm this fixes the problem, maybe we can put this one to rest :)</p>\n<p>Regarding <code>imageAxisOrder='row-major'</code>, I don't think there is any significant cost to transposing the arrays since this is just a metadata change, it doesn't actually move the data in memory. So unless there is a \"real\" transpose operation happening at a lower level that <code>imageAxisOrder='row-major'</code> somehow avoids (which seems doubtful), I don't think this will make any difference. Profiling results would change my mind though :).</p>", "type": "rendered"}, "created_on": "2019-09-21T18:44:21.523301+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 54013282}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/54031878.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-54031878"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "PR #83 does it for me as well, and it does seem like the best solution. I\u2019m more than willing to put this annoying issue to rest.\n\nAs for `imageAxisOrder`, you are likely right, but I\u2019ll check with profiling very quickly just to set my mind at ease.", "markup": "markdown", "html": "<p><a href=\"#!/labscript_suite/labscript_devices/pull-requests/83/fix-issue-36-blacs-freezing-in\" rel=\"nofollow\" class=\"ap-connect-link\">PR #83</a> does it for me as well, and it does seem like the best solution. I\u2019m more than willing to put this annoying issue to rest.</p>\n<p>As for <code>imageAxisOrder</code>, you are likely right, but I\u2019ll check with profiling very quickly just to set my mind at ease.</p>", "type": "rendered"}, "created_on": "2019-09-23T14:10:45.192448+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": null, "type": "issue_comment", "id": 54031878}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/54034233.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-54034233"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "Fix issue #36: BLACS freezing in IMAQdxCamera continuous acquisition.\n\n* Merged `ImageReceiver.update()` and `ImageReceiver.handler()` and have the\n  whole method run in the Qt main thread.\n\n * Use new zprocess functionality to respond to worker process immediately to\n   allow it to begin acquiring the next frame whilst the parent process is\n   rendering the previous frame\n\n* Add zprocess version requirement for this functionality.\n\n* Call QApplication.sendPostedEvents() to prevent a backlog of paint events and\n  other events that can otherwise build up at high frame rates and have been\n  observed to freeze the GUI.\n\n\u2192 <<cset c01e90f8470d>>", "markup": "markdown", "html": "<p>Fix issue <a href=\"#!/labscript_suite/labscript_devices/issues/36/blacs-hang-with-continuous-camera\" rel=\"nofollow\" title=\"BLACS hang with continuous camera acquisitions\" class=\"ap-connect-link\"><s>#36</s></a>: BLACS freezing in IMAQdxCamera continuous acquisition.</p>\n<ul>\n<li>\n<p>Merged <code>ImageReceiver.update()</code> and <code>ImageReceiver.handler()</code> and have the\n  whole method run in the Qt main thread.</p>\n</li>\n<li>\n<p>Use new zprocess functionality to respond to worker process immediately to\n   allow it to begin acquiring the next frame whilst the parent process is\n   rendering the previous frame</p>\n</li>\n<li>\n<p>Add zprocess version requirement for this functionality.</p>\n</li>\n<li>\n<p>Call QApplication.sendPostedEvents() to prevent a backlog of paint events and\n  other events that can otherwise build up at high frame rates and have been\n  observed to freeze the GUI.</p>\n</li>\n</ul>\n<p>\u2192 &lt;&lt;cset <a href=\"#!/labscript_suite/labscript_devices/commits/c01e90f8470d\" rel=\"nofollow\" class=\"ap-connect-link\">c01e90f8470d</a>&gt;&gt;</p>", "type": "rendered"}, "created_on": "2019-09-23T16:31:57.531875+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 54034233}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36/comments/54034234.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/issues/36#comment-54034234"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/issues/36.json"}}, "type": "issue", "id": 36, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "title": "BLACS hang with continuous camera acquisitions"}, "content": {"raw": "Merged in camera-hang-fix (pull request #83)\n\nFix issue #36: BLACS freezing in IMAQdxCamera continuous acquisition.\n\nApproved-by: David Meyer\n\n\u2192 <<cset 61a83341ab0d>>", "markup": "markdown", "html": "<p>Merged in camera-hang-fix (<a href=\"#!/labscript_suite/labscript_devices/pull-requests/83/fix-issue-36-blacs-freezing-in\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #83</a>)</p>\n<p>Fix issue <a href=\"#!/labscript_suite/labscript_devices/issues/36/blacs-hang-with-continuous-camera\" rel=\"nofollow\" title=\"BLACS hang with continuous camera acquisitions\" class=\"ap-connect-link\"><s>#36</s></a>: BLACS freezing in IMAQdxCamera continuous acquisition.</p>\n<p>Approved-by: David Meyer</p>\n<p>\u2192 &lt;&lt;cset <a href=\"#!/labscript_suite/labscript_devices/commits/61a83341ab0d\" rel=\"nofollow\" class=\"ap-connect-link\">61a83341ab0d</a>&gt;&gt;</p>", "type": "rendered"}, "created_on": "2019-09-23T16:31:57.580036+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 54034234}], "page": 1, "size": 22}