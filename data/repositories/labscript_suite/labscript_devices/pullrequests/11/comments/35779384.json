{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/11/comments/35779384.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/11/_/diff#comment-35779384"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 11, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/11.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/11"}}, "title": "Fixes issue #19, where acquisition after wait is not handled properly"}, "content": {"raw": "Ok, so I had thought that the spinor lab might have fixed this already in their fork, but apparently not.\n\nI do have one concern with the fix, which I think is the reason why it was broken in the first place. I suspect the original plan with this code was that the `time` array for the acquisition that is stored in the H5 file would contain times in \"labscript\" time (where lengths of waits=0), rather than \"real experiment\" time. Maybe this was an erroneous decision, but if we change it I think we're changing the original intended behaviour. We could consider saving two time arrays, one that takes into account waits and one that doesn't?\n\nHowever, either way there was a bug because we were chunking up data in \"real experiment\" time using points in \"labscript\" time, so this fix should be merged once we decide whether we need to try and preserve the previous behaviour of the time array or not given that it's always been broken anyway.\n\nI'll tag in @rpanderson and @lincolnturner in case they want to weigh in", "markup": "markdown", "html": "<p>Ok, so I had thought that the spinor lab might have fixed this already in their fork, but apparently not.</p>\n<p>I do have one concern with the fix, which I think is the reason why it was broken in the first place. I suspect the original plan with this code was that the <code>time</code> array for the acquisition that is stored in the H5 file would contain times in \"labscript\" time (where lengths of waits=0), rather than \"real experiment\" time. Maybe this was an erroneous decision, but if we change it I think we're changing the original intended behaviour. We could consider saving two time arrays, one that takes into account waits and one that doesn't?</p>\n<p>However, either way there was a bug because we were chunking up data in \"real experiment\" time using points in \"labscript\" time, so this fix should be merged once we decide whether we need to try and preserve the previous behaviour of the time array or not given that it's always been broken anyway.</p>\n<p>I'll tag in @rpanderson and @lincolnturner in case they want to weigh in</p>", "type": "rendered"}, "created_on": "2017-04-26T23:40:05.732832+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-04-26T23:40:05.757693+00:00", "type": "pullrequest_comment", "id": 35779384}