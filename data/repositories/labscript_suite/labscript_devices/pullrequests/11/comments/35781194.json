{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/11/comments/35781194.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/11/_/diff#comment-35781194"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 11, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/11.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/11"}}, "title": "Fixes issue #19, where acquisition after wait is not handled properly"}, "content": {"raw": "You're right that that was the original design, but I am now wondering if it was the right one. If we save a time array that is in \"labscript time\", then we either:\n\n- disallow asking for an acqisition across a wait, or\n- allow asking for the acquisition, but cut out the data that was acquired whilst the experiment was waiting, or\n- return all the data but have the time array contain repeated, non-increasing values for the duration of the wait.\n\nWe could also save multiple arrays, but I think the behaviour that David's patch provides is the most general if we are to save only one. Most of the time people are interested in relative times, and if they want details about what the waits did, if this affects their interpretation of the acquired data, then they can read the wait times and durations from the HDF5 file as part of their analysis.\n\nConceptually, it's as if you asked for acquisition between two times in \"labscript time\", and the experiment is returning the results - part of those results is the data itself, and part is what times they ended up being.\n\nI'm not totally sold on this being the specced behaviour, but I don't mind it. It's better than disallowing acquisition across a wait or having the time array have repeated values during a wait. It should be documented in the docstring for AnalogIn.acquire() though that \"experiment time\" arrays are saved. If at some point in the future people are doing lots of munging of time arrays (I doubt this will  happen), we could also provide a (lyse?) function for converting times between labscript time and experiment time for a given shot, rather than saving them both.", "markup": "markdown", "html": "<p>You're right that that was the original design, but I am now wondering if it was the right one. If we save a time array that is in \"labscript time\", then we either:</p>\n<ul>\n<li>disallow asking for an acqisition across a wait, or</li>\n<li>allow asking for the acquisition, but cut out the data that was acquired whilst the experiment was waiting, or</li>\n<li>return all the data but have the time array contain repeated, non-increasing values for the duration of the wait.</li>\n</ul>\n<p>We could also save multiple arrays, but I think the behaviour that David's patch provides is the most general if we are to save only one. Most of the time people are interested in relative times, and if they want details about what the waits did, if this affects their interpretation of the acquired data, then they can read the wait times and durations from the HDF5 file as part of their analysis.</p>\n<p>Conceptually, it's as if you asked for acquisition between two times in \"labscript time\", and the experiment is returning the results - part of those results is the data itself, and part is what times they ended up being.</p>\n<p>I'm not totally sold on this being the specced behaviour, but I don't mind it. It's better than disallowing acquisition across a wait or having the time array have repeated values during a wait. It should be documented in the docstring for AnalogIn.acquire() though that \"experiment time\" arrays are saved. If at some point in the future people are doing lots of munging of time arrays (I doubt this will  happen), we could also provide a (lyse?) function for converting times between labscript time and experiment time for a given shot, rather than saving them both.</p>", "type": "rendered"}, "created_on": "2017-04-27T00:36:37.476656+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-04-27T00:36:37.478631+00:00", "type": "pullrequest_comment", "id": 35781194}