{"pagelen": 50, "values": [{"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20/comments/58780280.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20/_/diff#comment-58780280"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}, "content": {"raw": "There was also a syntax error and I changed the comments a bit\n\n\n```\n#!diff\n\n--- Camera_acqROI.py\t2018-03-14 21:00:37.252516630 +1100\n+++ PythonCamera.py\t2018-03-14 21:00:15.999709335 +1100\n@@ -1,6 +1,6 @@\n #####################################################################\n #                                                                   #\n-# /labscript_devices/Camera_acqROI.py                                      #\n+# /labscript_devices/PythonCamera.py                                #\n #                                                                   #\n # Copyright 2013, Monash University                                 #\n #                                                                   #\n@@ -10,6 +10,7 @@\n # the project for the full license.                                 #\n #                                                                   #\n #####################################################################\n+from __future__ import print_function, unicode_literals, absolute_import, division\n \n try:\n     from labscript_utils import check_version\n@@ -22,32 +23,30 @@\n from labscript_devices.Camera import Camera, CameraTab\n from labscript import set_passed_properties\n \n+\n @labscript_device\n-class Camera_acqROI(Camera):\n-    description = 'Generic Camera with acquisition_ROI attribute'        \n-    \n-    # To be set as instantiation arguments:\n-    trigger_edge_type = None\n-    minimum_recovery_time = None\n+class PythonCamera(Camera):\n+    \"\"\"A class for new features not compatible with the legacy Camera class\"\"\"\n+    description = 'Python camera'        \n     \n     @set_passed_properties(\n         property_names = {\n             \"device_properties\": [\"acquisition_ROI\"]}\n         )\n-    def __init__(self, acquisition_ROI=None, *args,\n-                 **kwargs):\n-                    \n-        # not a class attribute, so we don't have to have a subclass for each model of camera:\n-        self.acquisition_ROI = acquisition_ROI\n-        \n+    def __init__(self, *args, **kwargs):\n+        self.acquisition_ROI = kwargs.pop('acquisition_ROI', None)\n         Camera.__init__(self, *args, **kwargs)\n     \n-    def set_acquisition_ROI(self, acq_ROI):\n-        # acq_ROI is a tuple of form (width, height, offset_X, offset_Y)\n-        # This method is used in a script to overwrite a camera's\n-        # acquisition_ROI without throwing errors in the connection table.\n-        self.set_property('acquisition_ROI', acq_ROI, location='device_properties', overwrite=True)\n+    def set_acquisition_ROI(self, acquisition_ROI):\n+        # acq_ROI is a tuple of form (width, height, offset_X, offset_Y) This\n+        # method can be used in a script to overwrite a camera's acquisition_ROI\n+        # after instantiation, so that BlACS does not detect a connection table\n+        # change on disk when the same file is being imported by experiment scripts\n+        # and used as the lab connection table.\n+        self.set_property('acquisition_ROI', acquisition_ROI,\n+                          location='device_properties', overwrite=True)\n+\n \n @BLACS_tab\n-class Camera_acqROITab(CameraTab):\n+class PythonCameraTab(CameraTab):\n     pass\n```\n", "markup": "markdown", "html": "<p>There was also a syntax error and I changed the comments a bit</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gd\">--- Camera_acqROI.py    2018-03-14 21:00:37.252516630 +1100</span>\n<span class=\"gi\">+++ PythonCamera.py 2018-03-14 21:00:15.999709335 +1100</span>\n<span class=\"gu\">@@ -1,6 +1,6 @@</span>\n #####################################################################\n #                                                                   #\n<span class=\"gd\">-# /labscript_devices/Camera_acqROI.py                                      #</span>\n<span class=\"gi\">+# /labscript_devices/PythonCamera.py                                #</span>\n #                                                                   #\n # Copyright 2013, Monash University                                 #\n #                                                                   #\n<span class=\"gu\">@@ -10,6 +10,7 @@</span>\n # the project for the full license.                                 #\n #                                                                   #\n #####################################################################\n<span class=\"gi\">+from __future__ import print_function, unicode_literals, absolute_import, division</span>\n\n try:\n     from labscript_utils import check_version\n<span class=\"gu\">@@ -22,32 +23,30 @@</span>\n from labscript_devices.Camera import Camera, CameraTab\n from labscript import set_passed_properties\n\n<span class=\"gi\">+</span>\n @labscript_device\n<span class=\"gd\">-class Camera_acqROI(Camera):</span>\n<span class=\"gd\">-    description = &#39;Generic Camera with acquisition_ROI attribute&#39;        </span>\n<span class=\"gd\">-    </span>\n<span class=\"gd\">-    # To be set as instantiation arguments:</span>\n<span class=\"gd\">-    trigger_edge_type = None</span>\n<span class=\"gd\">-    minimum_recovery_time = None</span>\n<span class=\"gi\">+class PythonCamera(Camera):</span>\n<span class=\"gi\">+    &quot;&quot;&quot;A class for new features not compatible with the legacy Camera class&quot;&quot;&quot;</span>\n<span class=\"gi\">+    description = &#39;Python camera&#39;        </span>\n\n     @set_passed_properties(\n         property_names = {\n             &quot;device_properties&quot;: [&quot;acquisition_ROI&quot;]}\n         )\n<span class=\"gd\">-    def __init__(self, acquisition_ROI=None, *args,</span>\n<span class=\"gd\">-                 **kwargs):</span>\n<span class=\"gd\">-                    </span>\n<span class=\"gd\">-        # not a class attribute, so we don&#39;t have to have a subclass for each model of camera:</span>\n<span class=\"gd\">-        self.acquisition_ROI = acquisition_ROI</span>\n<span class=\"gd\">-        </span>\n<span class=\"gi\">+    def __init__(self, *args, **kwargs):</span>\n<span class=\"gi\">+        self.acquisition_ROI = kwargs.pop(&#39;acquisition_ROI&#39;, None)</span>\n         Camera.__init__(self, *args, **kwargs)\n\n<span class=\"gd\">-    def set_acquisition_ROI(self, acq_ROI):</span>\n<span class=\"gd\">-        # acq_ROI is a tuple of form (width, height, offset_X, offset_Y)</span>\n<span class=\"gd\">-        # This method is used in a script to overwrite a camera&#39;s</span>\n<span class=\"gd\">-        # acquisition_ROI without throwing errors in the connection table.</span>\n<span class=\"gd\">-        self.set_property(&#39;acquisition_ROI&#39;, acq_ROI, location=&#39;device_properties&#39;, overwrite=True)</span>\n<span class=\"gi\">+    def set_acquisition_ROI(self, acquisition_ROI):</span>\n<span class=\"gi\">+        # acq_ROI is a tuple of form (width, height, offset_X, offset_Y) This</span>\n<span class=\"gi\">+        # method can be used in a script to overwrite a camera&#39;s acquisition_ROI</span>\n<span class=\"gi\">+        # after instantiation, so that BlACS does not detect a connection table</span>\n<span class=\"gi\">+        # change on disk when the same file is being imported by experiment scripts</span>\n<span class=\"gi\">+        # and used as the lab connection table.</span>\n<span class=\"gi\">+        self.set_property(&#39;acquisition_ROI&#39;, acquisition_ROI,</span>\n<span class=\"gi\">+                          location=&#39;device_properties&#39;, overwrite=True)</span>\n<span class=\"gi\">+</span>\n\n @BLACS_tab\n<span class=\"gd\">-class Camera_acqROITab(CameraTab):</span>\n<span class=\"gi\">+class PythonCameraTab(CameraTab):</span>\n     pass\n</pre></div>", "type": "rendered"}, "created_on": "2018-03-14T10:01:13.605266+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-14T10:01:13.624432+00:00", "type": "pullrequest_comment", "id": 58780280}, "pull_request": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}}, {"update": {"description": "I added a new device property to the Camera class to allow setting and\r\ntracking of the read out sensor area on a per shot basis.\r\nThere is a new method, set_acquisition_ROI, that sets the new propery\r\nwhile sweeping some of set_property's features under the rug.\r\nThe idea is that the acquisition_ROI will be set at the top of a script by\r\ncalling set_acquisition_ROI, which permits changing of the sensor area\r\non each shot without breaking due to connection table conflicts. The\r\nacquisition_ROI can be set using globals from runmanager and will be\r\nstored into the shot's h5 file.\r\n\r\nDSB\r\n\r\nP.S. This feature is designed to play well with a camera server, which\r\nI will request to be pulled into labscript_utils later this week.", "title": "New Camera property: acquisition_ROI", "destination": {"commit": {"hash": "959801ccfc8f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/commit/959801ccfc8f.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/commits/959801ccfc8f"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "df937f9ee0df", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/df937f9ee0df"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/df937f9ee0df"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "branch": {"name": "feature-CamAcqROI"}}, "state": "MERGED", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-03-14T09:51:49.501229+00:00"}, "pull_request": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20/comments/58774478.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20/_/diff#comment-58774478"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}, "content": {"raw": "Actually, I will just merge with these changes - no need to make them yourself.", "markup": "markdown", "html": "<p>Actually, I will just merge with these changes - no need to make them yourself.</p>", "type": "rendered"}, "created_on": "2018-03-14T09:20:46.580385+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-14T09:20:46.585564+00:00", "type": "pullrequest_comment", "id": 58774478}, "pull_request": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20/comments/58754333.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20/_/diff#comment-58754333"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}, "content": {"raw": "Sorry for the delay.\n\nI propose it be renamed `PythonCamera`, to distinguish from the fact that `Camera` is being maintained only for non-python code. `PythonCamera` can get all future feature development and `Camera` can stay the same, eventually being deprecated, then removed, after which `Camera` can become an alias for `PythonCamera`).\n\nThe description ought to be short, it's used as a longer name in error messages, so it should be something like \"Python camera\".\n\nA docstring would also be good explaining that it is a class for future feature development not compatible with the legacy camera class. (We will eventually turn docstrings into proper documentation for all devices).\n\n`__future__` imports would also be good for ensuring Python 3 forward compatibility given the port to that is occurring soon.\n\nHere is a diff of the changes I'd be happy to merge after:\n\n\n```\n#!diff\n\n@@ -1,6 +1,6 @@\n #####################################################################\n #                                                                   #\n-# /labscript_devices/Camera_acqROI.py                                      #\n+# /labscript_devices/PythonCamera.py                                #\n #                                                                   #\n # Copyright 2013, Monash University                                 #\n #                                                                   #\n@@ -10,7 +10,7 @@\n # the project for the full license.                                 #\n #                                                                   #\n #####################################################################\n-\n+from __future__ import print_function, unicode_literals, absolute_import, division\n try:\n     from labscript_utils import check_version\n except ImportError:\n@@ -23,8 +23,9 @@\n from labscript import set_passed_properties\n \n @labscript_device\n-class Camera_acqROI(Camera):\n-    description = 'Generic Camera with acquisition_ROI attribute'        \n+class PythonCamera(Camera):\n+    \"\"\"A class for new features not compatible with the legacy Camera class\"\"\"\n+    description = 'Python Camera'        \n     \n     # To be set as instantiation arguments:\n     trigger_edge_type = None\n@@ -48,6 +49,7 @@\n         # acquisition_ROI without throwing errors in the connection table.\n         self.set_property('acquisition_ROI', acq_ROI, location='device_properties', overwrite=True)\n \n+\n @BLACS_tab\n-class Camera_acqROITab(CameraTab):\n+class PythonCameraTab(CameraTab):\n     pass\n\n```\n\n\n", "markup": "markdown", "html": "<p>Sorry for the delay.</p>\n<p>I propose it be renamed <code>PythonCamera</code>, to distinguish from the fact that <code>Camera</code> is being maintained only for non-python code. <code>PythonCamera</code> can get all future feature development and <code>Camera</code> can stay the same, eventually being deprecated, then removed, after which <code>Camera</code> can become an alias for <code>PythonCamera</code>).</p>\n<p>The description ought to be short, it's used as a longer name in error messages, so it should be something like \"Python camera\".</p>\n<p>A docstring would also be good explaining that it is a class for future feature development not compatible with the legacy camera class. (We will eventually turn docstrings into proper documentation for all devices).</p>\n<p><code>__future__</code> imports would also be good for ensuring Python 3 forward compatibility given the port to that is occurring soon.</p>\n<p>Here is a diff of the changes I'd be happy to merge after:</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gu\">@@ -1,6 +1,6 @@</span>\n #####################################################################\n #                                                                   #\n<span class=\"gd\">-# /labscript_devices/Camera_acqROI.py                                      #</span>\n<span class=\"gi\">+# /labscript_devices/PythonCamera.py                                #</span>\n #                                                                   #\n # Copyright 2013, Monash University                                 #\n #                                                                   #\n<span class=\"gu\">@@ -10,7 +10,7 @@</span>\n # the project for the full license.                                 #\n #                                                                   #\n #####################################################################\n<span class=\"gd\">-</span>\n<span class=\"gi\">+from __future__ import print_function, unicode_literals, absolute_import, division</span>\n try:\n     from labscript_utils import check_version\n except ImportError:\n<span class=\"gu\">@@ -23,8 +23,9 @@</span>\n from labscript import set_passed_properties\n\n @labscript_device\n<span class=\"gd\">-class Camera_acqROI(Camera):</span>\n<span class=\"gd\">-    description = &#39;Generic Camera with acquisition_ROI attribute&#39;        </span>\n<span class=\"gi\">+class PythonCamera(Camera):</span>\n<span class=\"gi\">+    &quot;&quot;&quot;A class for new features not compatible with the legacy Camera class&quot;&quot;&quot;</span>\n<span class=\"gi\">+    description = &#39;Python Camera&#39;        </span>\n\n     # To be set as instantiation arguments:\n     trigger_edge_type = None\n<span class=\"gu\">@@ -48,6 +49,7 @@</span>\n         # acquisition_ROI without throwing errors in the connection table.\n         self.set_property(&#39;acquisition_ROI&#39;, acq_ROI, location=&#39;device_properties&#39;, overwrite=True)\n\n<span class=\"gi\">+</span>\n @BLACS_tab\n<span class=\"gd\">-class Camera_acqROITab(CameraTab):</span>\n<span class=\"gi\">+class PythonCameraTab(CameraTab):</span>\n     pass\n</pre></div>", "type": "rendered"}, "created_on": "2018-03-14T04:35:56.910313+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-14T04:35:56.918576+00:00", "type": "pullrequest_comment", "id": 58754333}, "pull_request": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}}, {"approval": {"date": "2017-09-29T12:42:49.074410+00:00", "pullrequest": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}, "user": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}}, "pull_request": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20/comments/44582451.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20/_/diff#comment-44582451"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}, "content": {"raw": "I've backed out my changes to `Camera` and made a subclass `Camera_acqROI`. Initial testing with my camera server seems good and BLACS has not thrown any errors.", "markup": "markdown", "html": "<p>I've backed out my changes to <code>Camera</code> and made a subclass <code>Camera_acqROI</code>. Initial testing with my camera server seems good and BLACS has not thrown any errors.</p>", "type": "rendered"}, "created_on": "2017-09-08T21:01:50.656316+00:00", "user": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "updated_on": "2017-09-08T21:01:50.719749+00:00", "type": "pullrequest_comment", "id": 44582451}, "pull_request": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}}, {"update": {"description": "I added a new device property to the Camera class to allow setting and\r\ntracking of the read out sensor area on a per shot basis.\r\nThere is a new method, set_acquisition_ROI, that sets the new propery\r\nwhile sweeping some of set_property's features under the rug.\r\nThe idea is that the acquisition_ROI will be set at the top of a script by\r\ncalling set_acquisition_ROI, which permits changing of the sensor area\r\non each shot without breaking due to connection table conflicts. The\r\nacquisition_ROI can be set using globals from runmanager and will be\r\nstored into the shot's h5 file.\r\n\r\nDSB\r\n\r\nP.S. This feature is designed to play well with a camera server, which\r\nI will request to be pulled into labscript_utils later this week.", "title": "New Camera property: acquisition_ROI", "destination": {"commit": {"hash": "89401a8f161d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/commit/89401a8f161d.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/commits/89401a8f161d"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "df937f9ee0df", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/df937f9ee0df"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/df937f9ee0df"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "branch": {"name": "feature-CamAcqROI"}}, "state": "OPEN", "author": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "date": "2017-09-08T20:47:40.037003+00:00"}, "pull_request": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20/comments/44397331.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20/_/diff#comment-44397331"}}, "parent": {"id": 44386268, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20/comments/44386268.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20/_/diff#comment-44386268"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}, "content": {"raw": "I believe you *have* to put it in a new file (and the filename must match the labscript class name)...I've forgotten the finer details of the `labscript_device` class decorator, but I'm pretty sure that was a condition (I just can't remember the reasoning behind it)", "markup": "markdown", "html": "<p>I believe you <em>have</em> to put it in a new file (and the filename must match the labscript class name)...I've forgotten the finer details of the <code>labscript_device</code> class decorator, but I'm pretty sure that was a condition (I just can't remember the reasoning behind it)</p>", "type": "rendered"}, "created_on": "2017-09-06T23:31:47.097717+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-09-06T23:31:47.099963+00:00", "type": "pullrequest_comment", "id": 44397331}, "pull_request": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20/comments/44386268.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20/_/diff#comment-44386268"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}, "content": {"raw": "I'll withdraw this and subclass `Camera`. Should I put the new `Camera` subclass in Camera.py or should I make a new .py file (i.e. do you have a best practice for sub-classing in labscript)?\n", "markup": "markdown", "html": "<p>I'll withdraw this and subclass <code>Camera</code>. Should I put the new <code>Camera</code> subclass in Camera.py or should I make a new .py file (i.e. do you have a best practice for sub-classing in labscript)?</p>", "type": "rendered"}, "created_on": "2017-09-06T19:53:49.849269+00:00", "user": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "updated_on": "2017-09-06T19:53:49.905351+00:00", "type": "pullrequest_comment", "id": 44386268}, "pull_request": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20/comments/43654545.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20/_/diff#comment-43654545"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}, "content": {"raw": "BIAS can also already limit the acquisition ROI (separately from the fitting ROIs) via some combination of GUI only features (that I don't remember off the top of my head). Basically, I'm concerned that any changes we make to the devices group for BIAS cameras will break BIAS. BIAS is awful, calling the HDF5 library from Labview is awful (especially if you're technically storing Python data types) and BIAS doesn't have a maintainer anymore, and I really don't want to have to debug it if something goes wrong! This feature is unlikely to ever be integrated into BIAS at this point, despite being a useful feature.\n\nIf you put this new feature in a subclass of `Camera` instead, I'll merge immediately, otherwise I'll have to do some testing to make sure we're not introducing a BIAS regression, which may take some time. If you prefer the latter, I don't mind, I'm just conscious that leaving pull requests open for a long time is not great for maintaining active development!", "markup": "markdown", "html": "<p>BIAS can also already limit the acquisition ROI (separately from the fitting ROIs) via some combination of GUI only features (that I don't remember off the top of my head). Basically, I'm concerned that any changes we make to the devices group for BIAS cameras will break BIAS. BIAS is awful, calling the HDF5 library from Labview is awful (especially if you're technically storing Python data types) and BIAS doesn't have a maintainer anymore, and I really don't want to have to debug it if something goes wrong! This feature is unlikely to ever be integrated into BIAS at this point, despite being a useful feature.</p>\n<p>If you put this new feature in a subclass of <code>Camera</code> instead, I'll merge immediately, otherwise I'll have to do some testing to make sure we're not introducing a BIAS regression, which may take some time. If you prefer the latter, I don't mind, I'm just conscious that leaving pull requests open for a long time is not great for maintaining active development!</p>", "type": "rendered"}, "created_on": "2017-08-28T00:16:54.509400+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-08-28T00:16:54.511929+00:00", "type": "pullrequest_comment", "id": 43654545}, "pull_request": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20/comments/43602204.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20/_/diff#comment-43602204"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}, "content": {"raw": "The acquisition ROI is intended to complement, rather than replace, the data processing ROIs used by BIAS or Lyse. The intent of the acquisition ROI is to define the area of the sensor that is read out and saved during an experimental run. Using less than the full sensor can increase frame rate, reduce the size of data files, and (through the increased frame rate) reduce noise from vibration/thermal sources during imaging. The images would still need a data processing ROI, which could be defined in BIAS or Lyse, for fitting.\n\nYou can see how I'm using the acquisition ROI in [pull request #26 for labscript_utils](#!/labscript_suite/labscript_utils/pull-requests/26/feature-pycapturecamserver/diff)", "markup": "markdown", "html": "<p>The acquisition ROI is intended to complement, rather than replace, the data processing ROIs used by BIAS or Lyse. The intent of the acquisition ROI is to define the area of the sensor that is read out and saved during an experimental run. Using less than the full sensor can increase frame rate, reduce the size of data files, and (through the increased frame rate) reduce noise from vibration/thermal sources during imaging. The images would still need a data processing ROI, which could be defined in BIAS or Lyse, for fitting.</p>\n<p>You can see how I'm using the acquisition ROI in <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript_utils/pull-requests/26/feature-pycapturecamserver/diff\" rel=\"nofollow\">pull request #26 for labscript_utils</a></p>", "type": "rendered"}, "created_on": "2017-08-25T13:41:40.964271+00:00", "user": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "updated_on": "2017-08-25T13:41:41.034987+00:00", "type": "pullrequest_comment", "id": 43602204}, "pull_request": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20/comments/43567427.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20/_/diff#comment-43567427"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}, "content": {"raw": "Note that in other systems, such as BIAS, regions of interest are handled by the imaging system, and stored in the HDF5 file as attributes of the group containing a set of images. This can include setting the camera to expose only a subset of the full frame, as well as saving other user defined ROIs for use in future analysis. This is handled by BIAS rather than labscript, so that you can draw the regions over an existing image and update them while the experiment is running.", "markup": "markdown", "html": "<p>Note that in other systems, such as BIAS, regions of interest are handled by the imaging system, and stored in the HDF5 file as attributes of the group containing a set of images. This can include setting the camera to expose only a subset of the full frame, as well as saving other user defined ROIs for use in future analysis. This is handled by BIAS rather than labscript, so that you can draw the regions over an existing image and update them while the experiment is running.</p>", "type": "rendered"}, "created_on": "2017-08-25T05:19:30.138598+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-08-25T05:19:30.141207+00:00", "type": "pullrequest_comment", "id": 43567427}, "pull_request": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20/comments/43352412.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20/_/diff#comment-43352412"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}, "content": {"raw": "I'll try to submit a pull request for my camera server tomorrow, which I think will inform the decision to subclass (although I have never used BIAS, so...). Getting a higher frame rate by reducing sensor read out area is a fairly generic CCD/CMOS trait and so this adjustment should be useful to many experiments.", "markup": "markdown", "html": "<p>I'll try to submit a pull request for my camera server tomorrow, which I think will inform the decision to subclass (although I have never used BIAS, so...). Getting a higher frame rate by reducing sensor read out area is a fairly generic CCD/CMOS trait and so this adjustment should be useful to many experiments.</p>", "type": "rendered"}, "created_on": "2017-08-23T01:51:03.003185+00:00", "user": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "updated_on": "2017-08-23T01:51:03.046994+00:00", "type": "pullrequest_comment", "id": 43352412}, "pull_request": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20/comments/43348047.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20/_/diff#comment-43348047"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}, "content": {"raw": "I'm wondering if this should be put in a subclass of `Camera` or even a completely new class. I'm nervous about breaking backwards compatibility with BIAS. This pull request likely won't be a problem, but future ones may be and it's perhaps better to try and keep things separate to aid testing (especially since BIAS is really not suited for most people to use and is not being maintained at the same level as the rest of the project).\n\ntldr; I'm very keen on Python alternatives to BIAS, so perhaps we should make a clean break and put this change in a new class?", "markup": "markdown", "html": "<p>I'm wondering if this should be put in a subclass of <code>Camera</code> or even a completely new class. I'm nervous about breaking backwards compatibility with BIAS. This pull request likely won't be a problem, but future ones may be and it's perhaps better to try and keep things separate to aid testing (especially since BIAS is really not suited for most people to use and is not being maintained at the same level as the rest of the project).</p>\n<p>tldr; I'm very keen on Python alternatives to BIAS, so perhaps we should make a clean break and put this change in a new class?</p>", "type": "rendered"}, "created_on": "2017-08-22T23:42:36.921297+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-08-22T23:42:36.923933+00:00", "type": "pullrequest_comment", "id": 43348047}, "pull_request": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20/comments/43319267.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20/_/diff#comment-43319267"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}, "content": {"raw": "I'm pretty happy with this.\n\nThe fact that it's a device property set via instantiation arguments doesn't mean BLACS will complain about unmatching connection tables if you submit a shot where you've changed the argument to something else - blacs will only complain about connection_table_properties being different. But it does prevent you from doing something like importing your connection table into your experiment script, so it's useful to have that method there too I think.\n\nFor anyone interested in the rationale - these guys have cameras that can acquire at a higher frame rate if they acquire a smaller area, so they're interested in acquiring only the area they need rather than a larger one to be cut down to size during analysis.", "markup": "markdown", "html": "<p>I'm pretty happy with this.</p>\n<p>The fact that it's a device property set via instantiation arguments doesn't mean BLACS will complain about unmatching connection tables if you submit a shot where you've changed the argument to something else - blacs will only complain about connection_table_properties being different. But it does prevent you from doing something like importing your connection table into your experiment script, so it's useful to have that method there too I think.</p>\n<p>For anyone interested in the rationale - these guys have cameras that can acquire at a higher frame rate if they acquire a smaller area, so they're interested in acquiring only the area they need rather than a larger one to be cut down to size during analysis.</p>", "type": "rendered"}, "created_on": "2017-08-22T15:57:41.523063+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-22T15:57:41.526863+00:00", "type": "pullrequest_comment", "id": 43319267}, "pull_request": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}}, {"update": {"description": "I added a new device property to the Camera class to allow setting and\r\ntracking of the read out sensor area on a per shot basis.\r\nThere is a new method, set_acquisition_ROI, that sets the new propery\r\nwhile sweeping some of set_property's features under the rug.\r\nThe idea is that the acquisition_ROI will be set at the top of a script by\r\ncalling set_acquisition_ROI, which permits changing of the sensor area\r\non each shot without breaking due to connection table conflicts. The\r\nacquisition_ROI can be set using globals from runmanager and will be\r\nstored into the shot's h5 file.\r\n\r\nDSB\r\n\r\nP.S. This feature is designed to play well with a camera server, which\r\nI will request to be pulled into labscript_utils later this week.", "title": "New Camera property: acquisition_ROI", "destination": {"commit": {"hash": "08a01ab4874a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/commit/08a01ab4874a.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/commits/08a01ab4874a"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "1ff7f6f7e1b1", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/1ff7f6f7e1b1"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/1ff7f6f7e1b1"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "branch": {"name": "feature-CamAcqROI"}}, "state": "OPEN", "author": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "date": "2017-08-21T17:41:11.626189+00:00"}, "pull_request": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}}, {"update": {"description": "I added a new device property to the Camera class to allow setting and\r\ntracking of the read out sensor area on a per shot basis.\r\nThere is a new method, set_acquisition_ROI, that sets the new propery\r\nwhile sweeping some of set_property's features under the rug.\r\nThe idea is that the acquisition_ROI will be set at the top of a script by\r\ncalling set_acquisition_ROI, which permits changing of the sensor area\r\non each shot without breaking due to connection table conflicts. The\r\nacquisition_ROI can be set using globals from runmanager and will be\r\nstored into the shot's h5 file.\r\n\r\nDSB\r\n\r\nP.S. This feature is designed to play well with a camera server, which\r\nI will request to be pulled into labscript_utils later this week.", "title": "New Camera property: acquisition_ROI", "destination": {"commit": {"hash": "08a01ab4874a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/commit/08a01ab4874a.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/commits/08a01ab4874a"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "1ff7f6f7e1b1", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices/commit/1ff7f6f7e1b1"}, "html": {"href": "#!/dsbarker/labscript_devices/commits/1ff7f6f7e1b1"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_devices"}, "html": {"href": "#!/dsbarker/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dsbarker/labscript_devices", "uuid": "{0d47b6f5-74e1-41b4-ab96-616bde2a1ad7}"}, "branch": {"name": "feature-CamAcqROI"}}, "state": "OPEN", "author": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "date": "2017-08-21T17:41:11.556755+00:00"}, "pull_request": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}}]}