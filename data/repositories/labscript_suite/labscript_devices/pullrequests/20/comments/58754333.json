{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20/comments/58754333.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20/_/diff#comment-58754333"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}, "content": {"raw": "Sorry for the delay.\n\nI propose it be renamed `PythonCamera`, to distinguish from the fact that `Camera` is being maintained only for non-python code. `PythonCamera` can get all future feature development and `Camera` can stay the same, eventually being deprecated, then removed, after which `Camera` can become an alias for `PythonCamera`).\n\nThe description ought to be short, it's used as a longer name in error messages, so it should be something like \"Python camera\".\n\nA docstring would also be good explaining that it is a class for future feature development not compatible with the legacy camera class. (We will eventually turn docstrings into proper documentation for all devices).\n\n`__future__` imports would also be good for ensuring Python 3 forward compatibility given the port to that is occurring soon.\n\nHere is a diff of the changes I'd be happy to merge after:\n\n\n```\n#!diff\n\n@@ -1,6 +1,6 @@\n #####################################################################\n #                                                                   #\n-# /labscript_devices/Camera_acqROI.py                                      #\n+# /labscript_devices/PythonCamera.py                                #\n #                                                                   #\n # Copyright 2013, Monash University                                 #\n #                                                                   #\n@@ -10,7 +10,7 @@\n # the project for the full license.                                 #\n #                                                                   #\n #####################################################################\n-\n+from __future__ import print_function, unicode_literals, absolute_import, division\n try:\n     from labscript_utils import check_version\n except ImportError:\n@@ -23,8 +23,9 @@\n from labscript import set_passed_properties\n \n @labscript_device\n-class Camera_acqROI(Camera):\n-    description = 'Generic Camera with acquisition_ROI attribute'        \n+class PythonCamera(Camera):\n+    \"\"\"A class for new features not compatible with the legacy Camera class\"\"\"\n+    description = 'Python Camera'        \n     \n     # To be set as instantiation arguments:\n     trigger_edge_type = None\n@@ -48,6 +49,7 @@\n         # acquisition_ROI without throwing errors in the connection table.\n         self.set_property('acquisition_ROI', acq_ROI, location='device_properties', overwrite=True)\n \n+\n @BLACS_tab\n-class Camera_acqROITab(CameraTab):\n+class PythonCameraTab(CameraTab):\n     pass\n\n```\n\n\n", "markup": "markdown", "html": "<p>Sorry for the delay.</p>\n<p>I propose it be renamed <code>PythonCamera</code>, to distinguish from the fact that <code>Camera</code> is being maintained only for non-python code. <code>PythonCamera</code> can get all future feature development and <code>Camera</code> can stay the same, eventually being deprecated, then removed, after which <code>Camera</code> can become an alias for <code>PythonCamera</code>).</p>\n<p>The description ought to be short, it's used as a longer name in error messages, so it should be something like \"Python camera\".</p>\n<p>A docstring would also be good explaining that it is a class for future feature development not compatible with the legacy camera class. (We will eventually turn docstrings into proper documentation for all devices).</p>\n<p><code>__future__</code> imports would also be good for ensuring Python 3 forward compatibility given the port to that is occurring soon.</p>\n<p>Here is a diff of the changes I'd be happy to merge after:</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gu\">@@ -1,6 +1,6 @@</span>\n #####################################################################\n #                                                                   #\n<span class=\"gd\">-# /labscript_devices/Camera_acqROI.py                                      #</span>\n<span class=\"gi\">+# /labscript_devices/PythonCamera.py                                #</span>\n #                                                                   #\n # Copyright 2013, Monash University                                 #\n #                                                                   #\n<span class=\"gu\">@@ -10,7 +10,7 @@</span>\n # the project for the full license.                                 #\n #                                                                   #\n #####################################################################\n<span class=\"gd\">-</span>\n<span class=\"gi\">+from __future__ import print_function, unicode_literals, absolute_import, division</span>\n try:\n     from labscript_utils import check_version\n except ImportError:\n<span class=\"gu\">@@ -23,8 +23,9 @@</span>\n from labscript import set_passed_properties\n\n @labscript_device\n<span class=\"gd\">-class Camera_acqROI(Camera):</span>\n<span class=\"gd\">-    description = &#39;Generic Camera with acquisition_ROI attribute&#39;        </span>\n<span class=\"gi\">+class PythonCamera(Camera):</span>\n<span class=\"gi\">+    &quot;&quot;&quot;A class for new features not compatible with the legacy Camera class&quot;&quot;&quot;</span>\n<span class=\"gi\">+    description = &#39;Python Camera&#39;        </span>\n\n     # To be set as instantiation arguments:\n     trigger_edge_type = None\n<span class=\"gu\">@@ -48,6 +49,7 @@</span>\n         # acquisition_ROI without throwing errors in the connection table.\n         self.set_property(&#39;acquisition_ROI&#39;, acq_ROI, location=&#39;device_properties&#39;, overwrite=True)\n\n<span class=\"gi\">+</span>\n @BLACS_tab\n<span class=\"gd\">-class Camera_acqROITab(CameraTab):</span>\n<span class=\"gi\">+class PythonCameraTab(CameraTab):</span>\n     pass\n</pre></div>", "type": "rendered"}, "created_on": "2018-03-14T04:35:56.910313+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-14T04:35:56.918576+00:00", "type": "pullrequest_comment", "id": 58754333}