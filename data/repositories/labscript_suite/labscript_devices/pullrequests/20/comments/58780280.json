{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20/comments/58780280.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20/_/diff#comment-58780280"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 20, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/20.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/20"}}, "title": "New Camera property: acquisition_ROI"}, "content": {"raw": "There was also a syntax error and I changed the comments a bit\n\n\n```\n#!diff\n\n--- Camera_acqROI.py\t2018-03-14 21:00:37.252516630 +1100\n+++ PythonCamera.py\t2018-03-14 21:00:15.999709335 +1100\n@@ -1,6 +1,6 @@\n #####################################################################\n #                                                                   #\n-# /labscript_devices/Camera_acqROI.py                                      #\n+# /labscript_devices/PythonCamera.py                                #\n #                                                                   #\n # Copyright 2013, Monash University                                 #\n #                                                                   #\n@@ -10,6 +10,7 @@\n # the project for the full license.                                 #\n #                                                                   #\n #####################################################################\n+from __future__ import print_function, unicode_literals, absolute_import, division\n \n try:\n     from labscript_utils import check_version\n@@ -22,32 +23,30 @@\n from labscript_devices.Camera import Camera, CameraTab\n from labscript import set_passed_properties\n \n+\n @labscript_device\n-class Camera_acqROI(Camera):\n-    description = 'Generic Camera with acquisition_ROI attribute'        \n-    \n-    # To be set as instantiation arguments:\n-    trigger_edge_type = None\n-    minimum_recovery_time = None\n+class PythonCamera(Camera):\n+    \"\"\"A class for new features not compatible with the legacy Camera class\"\"\"\n+    description = 'Python camera'        \n     \n     @set_passed_properties(\n         property_names = {\n             \"device_properties\": [\"acquisition_ROI\"]}\n         )\n-    def __init__(self, acquisition_ROI=None, *args,\n-                 **kwargs):\n-                    \n-        # not a class attribute, so we don't have to have a subclass for each model of camera:\n-        self.acquisition_ROI = acquisition_ROI\n-        \n+    def __init__(self, *args, **kwargs):\n+        self.acquisition_ROI = kwargs.pop('acquisition_ROI', None)\n         Camera.__init__(self, *args, **kwargs)\n     \n-    def set_acquisition_ROI(self, acq_ROI):\n-        # acq_ROI is a tuple of form (width, height, offset_X, offset_Y)\n-        # This method is used in a script to overwrite a camera's\n-        # acquisition_ROI without throwing errors in the connection table.\n-        self.set_property('acquisition_ROI', acq_ROI, location='device_properties', overwrite=True)\n+    def set_acquisition_ROI(self, acquisition_ROI):\n+        # acq_ROI is a tuple of form (width, height, offset_X, offset_Y) This\n+        # method can be used in a script to overwrite a camera's acquisition_ROI\n+        # after instantiation, so that BlACS does not detect a connection table\n+        # change on disk when the same file is being imported by experiment scripts\n+        # and used as the lab connection table.\n+        self.set_property('acquisition_ROI', acquisition_ROI,\n+                          location='device_properties', overwrite=True)\n+\n \n @BLACS_tab\n-class Camera_acqROITab(CameraTab):\n+class PythonCameraTab(CameraTab):\n     pass\n```\n", "markup": "markdown", "html": "<p>There was also a syntax error and I changed the comments a bit</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gd\">--- Camera_acqROI.py    2018-03-14 21:00:37.252516630 +1100</span>\n<span class=\"gi\">+++ PythonCamera.py 2018-03-14 21:00:15.999709335 +1100</span>\n<span class=\"gu\">@@ -1,6 +1,6 @@</span>\n #####################################################################\n #                                                                   #\n<span class=\"gd\">-# /labscript_devices/Camera_acqROI.py                                      #</span>\n<span class=\"gi\">+# /labscript_devices/PythonCamera.py                                #</span>\n #                                                                   #\n # Copyright 2013, Monash University                                 #\n #                                                                   #\n<span class=\"gu\">@@ -10,6 +10,7 @@</span>\n # the project for the full license.                                 #\n #                                                                   #\n #####################################################################\n<span class=\"gi\">+from __future__ import print_function, unicode_literals, absolute_import, division</span>\n\n try:\n     from labscript_utils import check_version\n<span class=\"gu\">@@ -22,32 +23,30 @@</span>\n from labscript_devices.Camera import Camera, CameraTab\n from labscript import set_passed_properties\n\n<span class=\"gi\">+</span>\n @labscript_device\n<span class=\"gd\">-class Camera_acqROI(Camera):</span>\n<span class=\"gd\">-    description = &#39;Generic Camera with acquisition_ROI attribute&#39;        </span>\n<span class=\"gd\">-    </span>\n<span class=\"gd\">-    # To be set as instantiation arguments:</span>\n<span class=\"gd\">-    trigger_edge_type = None</span>\n<span class=\"gd\">-    minimum_recovery_time = None</span>\n<span class=\"gi\">+class PythonCamera(Camera):</span>\n<span class=\"gi\">+    &quot;&quot;&quot;A class for new features not compatible with the legacy Camera class&quot;&quot;&quot;</span>\n<span class=\"gi\">+    description = &#39;Python camera&#39;        </span>\n\n     @set_passed_properties(\n         property_names = {\n             &quot;device_properties&quot;: [&quot;acquisition_ROI&quot;]}\n         )\n<span class=\"gd\">-    def __init__(self, acquisition_ROI=None, *args,</span>\n<span class=\"gd\">-                 **kwargs):</span>\n<span class=\"gd\">-                    </span>\n<span class=\"gd\">-        # not a class attribute, so we don&#39;t have to have a subclass for each model of camera:</span>\n<span class=\"gd\">-        self.acquisition_ROI = acquisition_ROI</span>\n<span class=\"gd\">-        </span>\n<span class=\"gi\">+    def __init__(self, *args, **kwargs):</span>\n<span class=\"gi\">+        self.acquisition_ROI = kwargs.pop(&#39;acquisition_ROI&#39;, None)</span>\n         Camera.__init__(self, *args, **kwargs)\n\n<span class=\"gd\">-    def set_acquisition_ROI(self, acq_ROI):</span>\n<span class=\"gd\">-        # acq_ROI is a tuple of form (width, height, offset_X, offset_Y)</span>\n<span class=\"gd\">-        # This method is used in a script to overwrite a camera&#39;s</span>\n<span class=\"gd\">-        # acquisition_ROI without throwing errors in the connection table.</span>\n<span class=\"gd\">-        self.set_property(&#39;acquisition_ROI&#39;, acq_ROI, location=&#39;device_properties&#39;, overwrite=True)</span>\n<span class=\"gi\">+    def set_acquisition_ROI(self, acquisition_ROI):</span>\n<span class=\"gi\">+        # acq_ROI is a tuple of form (width, height, offset_X, offset_Y) This</span>\n<span class=\"gi\">+        # method can be used in a script to overwrite a camera&#39;s acquisition_ROI</span>\n<span class=\"gi\">+        # after instantiation, so that BlACS does not detect a connection table</span>\n<span class=\"gi\">+        # change on disk when the same file is being imported by experiment scripts</span>\n<span class=\"gi\">+        # and used as the lab connection table.</span>\n<span class=\"gi\">+        self.set_property(&#39;acquisition_ROI&#39;, acquisition_ROI,</span>\n<span class=\"gi\">+                          location=&#39;device_properties&#39;, overwrite=True)</span>\n<span class=\"gi\">+</span>\n\n @BLACS_tab\n<span class=\"gd\">-class Camera_acqROITab(CameraTab):</span>\n<span class=\"gi\">+class PythonCameraTab(CameraTab):</span>\n     pass\n</pre></div>", "type": "rendered"}, "created_on": "2018-03-14T10:01:13.605266+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-14T10:01:13.624432+00:00", "type": "pullrequest_comment", "id": 58780280}