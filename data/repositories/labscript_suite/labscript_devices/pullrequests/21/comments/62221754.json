{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/62221754.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-62221754"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Steve and I have switched over to Python 3. We have come across a problem with AnalogIn (using the generic NI board class): Any time we read a string from compound data in the .h5 file, it is read as a binary (rather than a unicode) string. This poses a problem at NI_DAQmx.py line 903, where a string is used to index a numpy array:\n```\n#!python\n\nvalues = self.buffered_data[connection][start_index:end_index+1]\n```\nI also looked at NI_PCIe_6363.py and the relevant code appears identical, so this may be an issue with other NI board classes. Changing the offending line to\n```\n#!python\n\nvalues = self.buffered_data[connection.decode('utf-8')][start_index:end_index+1]\n```\nfixes the problem in Python 3, but will break in Python 2. Is there a better (and backwards compatible) solution?", "markup": "markdown", "html": "<p>Steve and I have switched over to Python 3. We have come across a problem with AnalogIn (using the generic NI board class): Any time we read a string from compound data in the .h5 file, it is read as a binary (rather than a unicode) string. This poses a problem at NI_DAQmx.py line 903, where a string is used to index a numpy array:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffered_data</span><span class=\"p\">[</span><span class=\"n\">connection</span><span class=\"p\">][</span><span class=\"n\">start_index</span><span class=\"p\">:</span><span class=\"n\">end_index</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</pre></div>\n\n\n<p>I also looked at NI_PCIe_6363.py and the relevant code appears identical, so this may be an issue with other NI board classes. Changing the offending line to</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffered_data</span><span class=\"p\">[</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">&#39;utf-8&#39;</span><span class=\"p\">)][</span><span class=\"n\">start_index</span><span class=\"p\">:</span><span class=\"n\">end_index</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</pre></div>\n\n\n<p>fixes the problem in Python 3, but will break in Python 2. Is there a better (and backwards compatible) solution?</p>", "type": "rendered"}, "created_on": "2018-04-20T18:46:07.620067+00:00", "user": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "updated_on": "2018-04-20T18:46:07.698342+00:00", "type": "pullrequest_comment", "id": 62221754}