{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57680236.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57680236"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Jan,\n\nAll of the pyserial write command strings in NovaTechDDS9M need to be bytes literals. I've found explicit b prefixing of the command strings works fine both with and without the future imports.", "markup": "markdown", "html": "<p>Jan,</p>\n<p>All of the pyserial write command strings in NovaTechDDS9M need to be bytes literals. I've found explicit b prefixing of the command strings works fine both with and without the future imports.</p>", "type": "rendered"}, "created_on": "2018-03-01T13:59:34.438293+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2018-03-01T13:59:34.479236+00:00", "type": "pullrequest_comment", "id": 57680236}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57681070.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57681070"}}, "parent": {"id": 57680236, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57680236.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57680236"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Thanks should be changed by now. I don't own a NovaTechDDS9M I can't test myself.", "markup": "markdown", "html": "<p>Thanks should be changed by now. I don't own a NovaTechDDS9M I can't test myself.</p>", "type": "rendered"}, "created_on": "2018-03-01T14:05:45.167933+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-01T14:06:08.077084+00:00", "type": "pullrequest_comment", "id": 57681070}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57759212.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57759212"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "If you could pull this branch from my fork, I've made some small changes:\n\n* zprocess.get_string can be used instead of zmq_get_raw plus encoding/decoding\n\n* zprocess.Events should be able to take string arguments, if they can't\nit's a bug and I'll fix it in zprocess\n\n* the pulseblaster string munging for flags works without converting\nto native strings so it can be left alone.\n\n* Camera serial number should be converted to int if it is either string or bytes, not just string.\n\nWith these changes I'm able to compile a connection table using most devices, but I can't test on hardware at the moment. At some point I'm going to mock some of the hardware libraries so that testing can be done fully offline, but that's not the case yet.", "markup": "markdown", "html": "<p>If you could pull this branch from my fork, I've made some small changes:</p>\n<ul>\n<li>\n<p>zprocess.get_string can be used instead of zmq_get_raw plus encoding/decoding</p>\n</li>\n<li>\n<p>zprocess.Events should be able to take string arguments, if they can't\nit's a bug and I'll fix it in zprocess</p>\n</li>\n<li>\n<p>the pulseblaster string munging for flags works without converting\nto native strings so it can be left alone.</p>\n</li>\n<li>\n<p>Camera serial number should be converted to int if it is either string or bytes, not just string.</p>\n</li>\n</ul>\n<p>With these changes I'm able to compile a connection table using most devices, but I can't test on hardware at the moment. At some point I'm going to mock some of the hardware libraries so that testing can be done fully offline, but that's not the case yet.</p>", "type": "rendered"}, "created_on": "2018-03-02T07:35:14.269004+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-02T07:35:14.271675+00:00", "type": "pullrequest_comment", "id": 57759212}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57759283.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57759283"}}, "parent": {"id": 57759212, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57759212.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57759212"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Sure!", "markup": "markdown", "html": "<p>Sure!</p>", "type": "rendered"}, "created_on": "2018-03-02T07:36:15.531433+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-02T07:36:15.561829+00:00", "type": "pullrequest_comment", "id": 57759283}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57759733.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57759733"}}, "parent": {"id": 57759212, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57759212.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57759212"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Maybe you should make the mocked hardware libraries available somewhere they will definitely be useful for the planed testing suite.", "markup": "markdown", "html": "<p>Maybe you should make the mocked hardware libraries available somewhere they will definitely be useful for the planed testing suite.</p>", "type": "rendered"}, "created_on": "2018-03-02T07:43:17.249128+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-02T07:43:17.298772+00:00", "type": "pullrequest_comment", "id": 57759733}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57760032.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57760032"}}, "parent": {"id": 57759733, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57759733.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57759733"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Well, there are mocking frameworks for doing this sort of thing already, I'll just have to work out how to integrate it with labscript in a way that lets us do testing in a practical way. Likely we'll run on hardware and \"record\" what functions get called with what arguments, and use that to define a test case that can be run without the hardware, to verify the same functions get called the right way. So there probably won't be an \"import fake_spinapi as spinapi\" but there'll be something.", "markup": "markdown", "html": "<p>Well, there are mocking frameworks for doing this sort of thing already, I'll just have to work out how to integrate it with labscript in a way that lets us do testing in a practical way. Likely we'll run on hardware and \"record\" what functions get called with what arguments, and use that to define a test case that can be run without the hardware, to verify the same functions get called the right way. So there probably won't be an \"import fake_spinapi as spinapi\" but there'll be something.</p>", "type": "rendered"}, "created_on": "2018-03-02T07:47:26.079600+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-02T07:47:26.084219+00:00", "type": "pullrequest_comment", "id": 57760032}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57759263.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57759263"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "RF BLaster still needs replacement of urllib2. I did not do this myself as I can only rely on the conversion suggested by 2to3 and can't do any testing. If someone does this I'm happy to include the changes in this pull request.", "markup": "markdown", "html": "<p>RF BLaster still needs replacement of urllib2. I did not do this myself as I can only rely on the conversion suggested by 2to3 and can't do any testing. If someone does this I'm happy to include the changes in this pull request.</p>", "type": "rendered"}, "created_on": "2018-03-02T07:35:55.756842+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-02T07:35:55.812810+00:00", "type": "pullrequest_comment", "id": 57759263}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57832208.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57832208"}}, "parent": {"id": 57759263, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57759263.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57759263"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "I've made these changes if you could pull them from me.\n\nIt is also untested for now. In addition, there are two external Python modules that it depends on that are kept under version control at Monash, they will need to be looked at to make them compatible with the changes made here and also to make them Python 3 compatible.\n\nSpecifically: I need to check if MultiPartForm can handle unicode strings being passed to \"add_field\". It probably can. If it can't, it will break on both Python 2 and Python 3 given these changes.\nAlso I need to check if compileD from rfblaster.rfjuice can accept a bytestring for one of its arguments on Python 3. This argument's type has not changed, so these changes should not break on Python 2, but I need to see rfjuice before I can work out whether it will work on Python 3 or what changes need to be made.\n\nAlso, obviously both modules will need porting to Python 3.", "markup": "markdown", "html": "<p>I've made these changes if you could pull them from me.</p>\n<p>It is also untested for now. In addition, there are two external Python modules that it depends on that are kept under version control at Monash, they will need to be looked at to make them compatible with the changes made here and also to make them Python 3 compatible.</p>\n<p>Specifically: I need to check if MultiPartForm can handle unicode strings being passed to \"add_field\". It probably can. If it can't, it will break on both Python 2 and Python 3 given these changes.\nAlso I need to check if compileD from rfblaster.rfjuice can accept a bytestring for one of its arguments on Python 3. This argument's type has not changed, so these changes should not break on Python 2, but I need to see rfjuice before I can work out whether it will work on Python 3 or what changes need to be made.</p>\n<p>Also, obviously both modules will need porting to Python 3.</p>", "type": "rendered"}, "created_on": "2018-03-03T02:00:59.345780+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-03T02:43:15.501979+00:00", "type": "pullrequest_comment", "id": 57832208}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57834489.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57834489"}}, "parent": {"id": 57832208, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57832208.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57832208"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Done.", "markup": "markdown", "html": "<p>Done.</p>", "type": "rendered"}, "created_on": "2018-03-03T08:09:01.099918+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-03T08:09:01.134935+00:00", "type": "pullrequest_comment", "id": 57834489}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57836367.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57836367"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "One more commit from me if you could pull - adding dependency on zprocess 2.2.7 which allows unicode Event names, and fixing a typo.\n\nOther than that I have nothing more to add to this pull request, everything looks fine until testing reveals otherwise. Once I get a chance to look at the RFBlaster stuff, it can be tested on hardware at Monash.", "markup": "markdown", "html": "<p>One more commit from me if you could pull - adding dependency on zprocess 2.2.7 which allows unicode Event names, and fixing a typo.</p>\n<p>Other than that I have nothing more to add to this pull request, everything looks fine until testing reveals otherwise. Once I get a chance to look at the RFBlaster stuff, it can be tested on hardware at Monash.</p>", "type": "rendered"}, "created_on": "2018-03-03T11:33:04.860685+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-03T11:33:04.864193+00:00", "type": "pullrequest_comment", "id": 57836367}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57837262.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57837262"}}, "parent": {"id": 57836367, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57836367.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57836367"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Done!\n\nSo labscript and runmananger are up next I guess? \\(would make sense to get them python 3 compatible before BLACS in my opinion\\)", "markup": "markdown", "html": "<p>Done!</p>\n<p>So labscript and runmananger are up next I guess? (would make sense to get them python 3 compatible before BLACS in my opinion)</p>", "type": "rendered"}, "created_on": "2018-03-03T13:15:38.400218+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-03T13:15:38.451122+00:00", "type": "pullrequest_comment", "id": 57837262}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57843532.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57843532"}}, "parent": {"id": 57837262, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57837262.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57837262"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Yes, that's the order that makes the most sense, and I believe runviewer can fit in at any point after labscript.", "markup": "markdown", "html": "<p>Yes, that's the order that makes the most sense, and I believe runviewer can fit in at any point after labscript.</p>", "type": "rendered"}, "created_on": "2018-03-04T01:09:23.734496+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-04T01:09:23.738069+00:00", "type": "pullrequest_comment", "id": 57843532}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57865503.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57865503"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Another commit from me on this if you could pull.\n\nI moved MultiPartForm into RFBlaster.py from the external place it lived in the Monash mercurial repos and ported it to be Python3 compatible.\n\nI've tested that I can compile a connection table with an RFBlaster on Python 2, so I would say this pull request is ready for Python 2 testing to confirm no regressions.\n\nPython 3 testing will obviously have to wait (and the rfjuice module will need porting, but that is external to this project).", "markup": "markdown", "html": "<p>Another commit from me on this if you could pull.</p>\n<p>I moved MultiPartForm into RFBlaster.py from the external place it lived in the Monash mercurial repos and ported it to be Python3 compatible.</p>\n<p>I've tested that I can compile a connection table with an RFBlaster on Python 2, so I would say this pull request is ready for Python 2 testing to confirm no regressions.</p>\n<p>Python 3 testing will obviously have to wait (and the rfjuice module will need porting, but that is external to this project).</p>", "type": "rendered"}, "created_on": "2018-03-05T05:05:15.971485+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-05T05:05:15.974566+00:00", "type": "pullrequest_comment", "id": 57865503}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57869057.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57869057"}}, "parent": {"id": 57865503, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57865503.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57865503"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Your repo has no new commits since I last pulled. Maybe you didn't push them to bitbucket? ", "markup": "markdown", "html": "<p>Your repo has no new commits since I last pulled. Maybe you didn't push them to bitbucket? </p>", "type": "rendered"}, "created_on": "2018-03-05T06:40:25.286062+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-05T06:40:25.343900+00:00", "type": "pullrequest_comment", "id": 57869057}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57869150.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57869150"}}, "parent": {"id": 57869057, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/57869057.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-57869057"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Ah, indeed I didn't, I have now.", "markup": "markdown", "html": "<p>Ah, indeed I didn't, I have now.</p>", "type": "rendered"}, "created_on": "2018-03-05T06:42:27.687028+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-05T06:42:27.690757+00:00", "type": "pullrequest_comment", "id": 57869150}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/58739611.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-58739611"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "How is your testing of this coming along?\n\nI think it might make sense to maybe start testing/reviewing runmanger and labscript Python 3 changes while testing the device changes.\n\nThe runmanager and labscript changes are fare fewer and testing should be easier.\n\nThoughts? ", "markup": "markdown", "html": "<p>How is your testing of this coming along?</p>\n<p>I think it might make sense to maybe start testing/reviewing runmanger and labscript Python 3 changes while testing the device changes.</p>\n<p>The runmanager and labscript changes are fare fewer and testing should be easier.</p>\n<p>Thoughts? </p>", "type": "rendered"}, "created_on": "2018-03-13T22:36:24.116983+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-13T22:36:24.173648+00:00", "type": "pullrequest_comment", "id": 58739611}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/58753214.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-58753214"}}, "parent": {"id": 58739611, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/58739611.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-58739611"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "It's fine to continue testing with the rest, yes.\n\nI'm eager to merge since the Python 3 ports create merge conflicts with other pull requests. I'll try to convince a lab here to pull this and check if it causes any problems for them on an actual experiment - I'm limited in my ability to test myself and the most enthusiastic tester here has completed his data taking for his thesis so isn't in the lab anymore.\n\n", "markup": "markdown", "html": "<p>It's fine to continue testing with the rest, yes.</p>\n<p>I'm eager to merge since the Python 3 ports create merge conflicts with other pull requests. I'll try to convince a lab here to pull this and check if it causes any problems for them on an actual experiment - I'm limited in my ability to test myself and the most enthusiastic tester here has completed his data taking for his thesis so isn't in the lab anymore.</p>", "type": "rendered"}, "created_on": "2018-03-14T04:02:36.629117+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-14T04:02:36.632282+00:00", "type": "pullrequest_comment", "id": 58753214}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/59350860.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-59350860"}}, "parent": {"id": 58753214, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/58753214.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-58753214"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "I was testing our camera under python 3 today and noticed a bug:\n\n`zprocess.zmq_get_string(self.port, self.host, timeout = 10)`\n\nwill raise the following exception:\n\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n      File \"/Users/janwerkmann/anaconda/envs/snowflakes/lib/python3.6/site-packages/zprocess/clientserver.py\", line 257, in __call__\n        data = _typecheck_or_convert_data(data, self.dtype)\n      File \"/Users/janwerkmann/anaconda/envs/snowflakes/lib/python3.6/site-packages/zprocess/clientserver.py\", line 68, in _typecheck_or_convert_data\n        raise TypeError(msg)\n    TypeError: string sockets can only send strings, not <class 'NoneType'>.\n\nShould I just use a zmq\\_get\\_raw or will you fix this in zprocess", "markup": "markdown", "html": "<p>I was testing our camera under python 3 today and noticed a bug:</p>\n<p><code>zprocess.zmq_get_string(self.port, self.host, timeout = 10)</code></p>\n<p>will raise the following exception:</p>\n<div class=\"codehilite\"><pre><span></span>Traceback (most recent call last):\n  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;\n  File &quot;/Users/janwerkmann/anaconda/envs/snowflakes/lib/python3.6/site-packages/zprocess/clientserver.py&quot;, line 257, in __call__\n    data = _typecheck_or_convert_data(data, self.dtype)\n  File &quot;/Users/janwerkmann/anaconda/envs/snowflakes/lib/python3.6/site-packages/zprocess/clientserver.py&quot;, line 68, in _typecheck_or_convert_data\n    raise TypeError(msg)\nTypeError: string sockets can only send strings, not &lt;class &#39;NoneType&#39;&gt;.\n</pre></div>\n\n\n<p>Should I just use a zmq_get_raw or will you fix this in zprocess</p>", "type": "rendered"}, "created_on": "2018-03-20T15:26:47.233098+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-20T15:26:47.306504+00:00", "type": "pullrequest_comment", "id": 59350860}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/59392329.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-59392329"}}, "parent": {"id": 59350860, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/59350860.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-59350860"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "I'll fix this in zprocess. `get_string()` with no data argument should send an empty string, like it does with `get_raw()`, so I'll change it to do that.", "markup": "markdown", "html": "<p>I'll fix this in zprocess. <code>get_string()</code> with no data argument should send an empty string, like it does with <code>get_raw()</code>, so I'll change it to do that.</p>", "type": "rendered"}, "created_on": "2018-03-20T21:46:29.768929+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-20T21:46:29.773521+00:00", "type": "pullrequest_comment", "id": 59392329}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/59395698.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-59395698"}}, "parent": {"id": 59392329, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/59392329.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-59392329"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Great! I'll raise the version requirements in Camera.py once the next zprocess version is released.", "markup": "markdown", "html": "<p>Great! I'll raise the version requirements in Camera.py once the next zprocess version is released.</p>", "type": "rendered"}, "created_on": "2018-03-20T22:41:47.416479+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-20T22:41:47.471742+00:00", "type": "pullrequest_comment", "id": 59395698}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/59396115.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-59396115"}}, "parent": {"id": 59395698, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/59395698.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-59395698"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Done. You can raise it to 2.4.7, if you can confirm it fixes the problem.", "markup": "markdown", "html": "<p>Done. You can raise it to 2.4.7, if you can confirm it fixes the problem.</p>", "type": "rendered"}, "created_on": "2018-03-20T22:49:49.841743+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-20T22:49:49.845798+00:00", "type": "pullrequest_comment", "id": 59396115}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/59396908.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-59396908"}}, "parent": {"id": 59396115, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/59396115.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-59396115"}}, "depth": 6}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Fix works for python 2 but not python 3:\n\n    Python 3.6.4 |Anaconda, Inc.| (default, Mar 12 2018, 20:05:31) \n    [GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)] on darwin\n    Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n    >>> from zprocess import *\n    >>> zmq_get_string(1234, 'localhost')\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n      File \"/Users/janwerkmann/anaconda/envs/snowflakes/lib/python3.6/site-packages/zprocess/clientserver.py\", line 257, in __call__\n        data = _typecheck_or_convert_data(data, self.dtype)\n      File \"/Users/janwerkmann/anaconda/envs/snowflakes/lib/python3.6/site-packages/zprocess/clientserver.py\", line 68, in _typecheck_or_convert_data\n        raise TypeError(msg)\n    TypeError: string sockets can only send strings, not <class 'bytes'>.", "markup": "markdown", "html": "<p>Fix works for python 2 but not python 3:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">Python</span> <span class=\"mf\">3.6</span><span class=\"o\">.</span><span class=\"mi\">4</span> <span class=\"o\">|</span><span class=\"n\">Anaconda</span><span class=\"p\">,</span> <span class=\"n\">Inc</span><span class=\"o\">.|</span> <span class=\"p\">(</span><span class=\"n\">default</span><span class=\"p\">,</span> <span class=\"n\">Mar</span> <span class=\"mi\">12</span> <span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mo\">05</span><span class=\"p\">:</span><span class=\"mi\">31</span><span class=\"p\">)</span> \n<span class=\"p\">[</span><span class=\"n\">GCC</span> <span class=\"mf\">4.2</span><span class=\"o\">.</span><span class=\"mi\">1</span> <span class=\"n\">Compatible</span> <span class=\"n\">Clang</span> <span class=\"mf\">4.0</span><span class=\"o\">.</span><span class=\"mi\">1</span> <span class=\"p\">(</span><span class=\"n\">tags</span><span class=\"o\">/</span><span class=\"n\">RELEASE_401</span><span class=\"o\">/</span><span class=\"n\">final</span><span class=\"p\">)]</span> <span class=\"n\">on</span> <span class=\"n\">darwin</span>\n<span class=\"n\">Type</span> <span class=\"s2\">&quot;help&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;copyright&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;credits&quot;</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;license&quot;</span> <span class=\"k\">for</span> <span class=\"n\">more</span> <span class=\"n\">information</span><span class=\"o\">.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zprocess</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">zmq_get_string</span><span class=\"p\">(</span><span class=\"mi\">1234</span><span class=\"p\">,</span> <span class=\"s1\">&#39;localhost&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;&lt;stdin&gt;&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/envs/snowflakes/lib/python3.6/site-packages/zprocess/clientserver.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">257</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__call__</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">_typecheck_or_convert_data</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/envs/snowflakes/lib/python3.6/site-packages/zprocess/clientserver.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">68</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_typecheck_or_convert_data</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"n\">string</span> <span class=\"n\">sockets</span> <span class=\"n\">can</span> <span class=\"n\">only</span> <span class=\"n\">send</span> <span class=\"n\">strings</span><span class=\"p\">,</span> <span class=\"ow\">not</span> <span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"err\">&#39;</span><span class=\"nc\">bytes</span><span class=\"s1\">&#39;&gt;.</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-03-20T23:04:34.486299+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-20T23:04:34.566796+00:00", "type": "pullrequest_comment", "id": 59396908}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/59398375.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-59398375"}}, "parent": {"id": 59396908, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/59396908.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-59396908"}}, "depth": 7}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Ah. Silly me. Try 2.4.8.", "markup": "markdown", "html": "<p>Ah. Silly me. Try 2.4.8.</p>", "type": "rendered"}, "created_on": "2018-03-20T23:25:32.544423+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-20T23:25:32.547945+00:00", "type": "pullrequest_comment", "id": 59398375}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/59836967.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-59836967"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "@chrisbillington was there a reason to revert the changes to rjust in Pulseblaster No DDS in commit [debe912](#!/PhyNerd/labscript_devices/commits/debe9125a49e0ee5e5f7764be310bcfee179dd9a?at=default#LPulseBlaster_No_DDS.pyF424)? \n\nThis will cause problems for Python2:\n\n    JWrkPC:~ janwerkmann$ python\n    Python 2.7.14 |Anaconda, Inc.| (default, Oct 27 2017, 11:24:26) \n    [GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)] on darwin\n    Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n    >>> from __future__ import unicode_literals\n    >>> bin(123)[2:].rjust(5, '0')[::-1]\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n    TypeError: rjust() argument 2 must be char, not unicode\n\nThe simple fix with b'0' would then cause python3 problems:\n\n    JWrkPC:~ janwerkmann$ python3\n    Python 3.6.1 (default, Jun 25 2017, 16:13:42) \n    [GCC 4.2.1 Compatible Apple LLVM 8.1.0 (clang-802.0.42)] on darwin\n    Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n    >>> bin(123)[2:].rjust(5, b'0')[::-1]\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n    TypeError: The fill character must be a unicode character, not bytes", "markup": "markdown", "html": "<p>@chrisbillington was there a reason to revert the changes to rjust in Pulseblaster No DDS in commit <a data-is-external-link=\"true\" href=\"#!/PhyNerd/labscript_devices/commits/debe9125a49e0ee5e5f7764be310bcfee179dd9a?at=default#LPulseBlaster_No_DDS.pyF424\" rel=\"nofollow\">debe912</a>? </p>\n<p>This will cause problems for Python2:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nv\">JWrkPC</span><span class=\"s s-Atom\">:~</span> <span class=\"s s-Atom\">janwerkmann$</span> <span class=\"s s-Atom\">python</span>\n<span class=\"nv\">Python</span> <span class=\"mf\">2.7.14</span> <span class=\"p\">|</span><span class=\"nv\">Anaconda</span><span class=\"p\">,</span> <span class=\"nv\">Inc</span><span class=\"p\">.|</span> <span class=\"p\">(</span><span class=\"s s-Atom\">default</span><span class=\"p\">,</span> <span class=\"nv\">Oct</span> <span class=\"mi\">27</span> <span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"s s-Atom\">:</span><span class=\"mi\">24</span><span class=\"s s-Atom\">:</span><span class=\"mi\">26</span><span class=\"p\">)</span> \n<span class=\"p\">[</span><span class=\"nv\">GCC</span> <span class=\"mf\">4.2.1</span> <span class=\"nv\">Compatible</span> <span class=\"nv\">Clang</span> <span class=\"mf\">4.0.1</span> <span class=\"p\">(</span><span class=\"s s-Atom\">tags</span><span class=\"o\">/</span><span class=\"nv\">RELEASE_401</span><span class=\"o\">/</span><span class=\"s s-Atom\">final</span><span class=\"p\">)]</span> <span class=\"s s-Atom\">on</span> <span class=\"s s-Atom\">darwin</span>\n<span class=\"nv\">Type</span> <span class=\"s2\">&quot;help&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;copyright&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;credits&quot;</span> <span class=\"s s-Atom\">or</span> <span class=\"s2\">&quot;license&quot;</span> <span class=\"s s-Atom\">for</span> <span class=\"s s-Atom\">more</span> <span class=\"s s-Atom\">information</span><span class=\"p\">.</span>\n<span class=\"s s-Atom\">&gt;&gt;&gt;</span> <span class=\"s s-Atom\">from</span> <span class=\"k\">__</span><span class=\"s s-Atom\">future__</span> <span class=\"s s-Atom\">import</span> <span class=\"s s-Atom\">unicode_literals</span>\n<span class=\"s s-Atom\">&gt;&gt;&gt;</span> <span class=\"nf\">bin</span><span class=\"p\">(</span><span class=\"mi\">123</span><span class=\"p\">)[</span><span class=\"mi\">2</span><span class=\"s s-Atom\">:</span><span class=\"p\">].</span><span class=\"nf\">rjust</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s s-Atom\">&#39;0&#39;</span><span class=\"p\">)[</span><span class=\"s s-Atom\">::-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"nv\">Traceback</span> <span class=\"p\">(</span><span class=\"s s-Atom\">most</span> <span class=\"s s-Atom\">recent</span> <span class=\"s s-Atom\">call</span> <span class=\"s s-Atom\">last</span><span class=\"p\">)</span><span class=\"s s-Atom\">:</span>\n  <span class=\"nv\">File</span> <span class=\"s2\">&quot;&lt;stdin&gt;&quot;</span><span class=\"p\">,</span> <span class=\"s s-Atom\">line</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s s-Atom\">in</span> <span class=\"o\">&lt;</span><span class=\"s s-Atom\">module</span><span class=\"o\">&gt;</span>\n<span class=\"nv\">TypeError</span><span class=\"s s-Atom\">:</span> <span class=\"nf\">rjust</span><span class=\"p\">()</span> <span class=\"s s-Atom\">argument</span> <span class=\"mi\">2</span> <span class=\"s s-Atom\">must</span> <span class=\"s s-Atom\">be</span> <span class=\"s s-Atom\">char</span><span class=\"p\">,</span> <span class=\"o\">not</span> <span class=\"s s-Atom\">unicode</span>\n</pre></div>\n\n\n<p>The simple fix with b'0' would then cause python3 problems:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nv\">JWrkPC</span><span class=\"s s-Atom\">:~</span> <span class=\"s s-Atom\">janwerkmann$</span> <span class=\"s s-Atom\">python3</span>\n<span class=\"nv\">Python</span> <span class=\"mf\">3.6.1</span> <span class=\"p\">(</span><span class=\"s s-Atom\">default</span><span class=\"p\">,</span> <span class=\"nv\">Jun</span> <span class=\"mi\">25</span> <span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"s s-Atom\">:</span><span class=\"mi\">13</span><span class=\"s s-Atom\">:</span><span class=\"mi\">42</span><span class=\"p\">)</span> \n<span class=\"p\">[</span><span class=\"nv\">GCC</span> <span class=\"mf\">4.2.1</span> <span class=\"nv\">Compatible</span> <span class=\"nv\">Apple</span> <span class=\"nv\">LLVM</span> <span class=\"mf\">8.1.0</span> <span class=\"p\">(</span><span class=\"s s-Atom\">clang</span><span class=\"o\">-</span><span class=\"mf\">802.0.42</span><span class=\"p\">)]</span> <span class=\"s s-Atom\">on</span> <span class=\"s s-Atom\">darwin</span>\n<span class=\"nv\">Type</span> <span class=\"s2\">&quot;help&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;copyright&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;credits&quot;</span> <span class=\"s s-Atom\">or</span> <span class=\"s2\">&quot;license&quot;</span> <span class=\"s s-Atom\">for</span> <span class=\"s s-Atom\">more</span> <span class=\"s s-Atom\">information</span><span class=\"p\">.</span>\n<span class=\"s s-Atom\">&gt;&gt;&gt;</span> <span class=\"nf\">bin</span><span class=\"p\">(</span><span class=\"mi\">123</span><span class=\"p\">)[</span><span class=\"mi\">2</span><span class=\"s s-Atom\">:</span><span class=\"p\">].</span><span class=\"nf\">rjust</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s s-Atom\">b&#39;0&#39;</span><span class=\"p\">)[</span><span class=\"s s-Atom\">::-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"nv\">Traceback</span> <span class=\"p\">(</span><span class=\"s s-Atom\">most</span> <span class=\"s s-Atom\">recent</span> <span class=\"s s-Atom\">call</span> <span class=\"s s-Atom\">last</span><span class=\"p\">)</span><span class=\"s s-Atom\">:</span>\n  <span class=\"nv\">File</span> <span class=\"s2\">&quot;&lt;stdin&gt;&quot;</span><span class=\"p\">,</span> <span class=\"s s-Atom\">line</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s s-Atom\">in</span> <span class=\"o\">&lt;</span><span class=\"s s-Atom\">module</span><span class=\"o\">&gt;</span>\n<span class=\"nv\">TypeError</span><span class=\"s s-Atom\">:</span> <span class=\"nv\">The</span> <span class=\"s s-Atom\">fill</span> <span class=\"s s-Atom\">character</span> <span class=\"s s-Atom\">must</span> <span class=\"s s-Atom\">be</span> <span class=\"s s-Atom\">a</span> <span class=\"s s-Atom\">unicode</span> <span class=\"s s-Atom\">character</span><span class=\"p\">,</span> <span class=\"o\">not</span> <span class=\"s s-Atom\">bytes</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-03-26T10:04:03.803790+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-26T10:04:04.009481+00:00", "type": "pullrequest_comment", "id": 59836967}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/59844598.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-59844598"}}, "parent": {"id": 59836967, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/59836967.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-59836967"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "My mistake, I thought you changed it to return the native string type, and I figured it should be returning unicode strings in both Python versions and missed the fact that `bin()` was returning a bytestring in Python 2. \n\nSo a better fix than the if statement would be to convert the output of bin() to unicode strings on both Python versions:\n\n```\nreturn_flags = str(bin(flags)[2:]).rjust(self.num_DO,'0')[::-1]\n```\n\nIn both PulseBlasterNoDDS.py and PulseBlaster.py\n\nSorry for the mistake!", "markup": "markdown", "html": "<p>My mistake, I thought you changed it to return the native string type, and I figured it should be returning unicode strings in both Python versions and missed the fact that <code>bin()</code> was returning a bytestring in Python 2. </p>\n<p>So a better fix than the if statement would be to convert the output of bin() to unicode strings on both Python versions:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"s s-Atom\">return_flags</span> <span class=\"o\">=</span> <span class=\"nf\">str</span><span class=\"p\">(</span><span class=\"nf\">bin</span><span class=\"p\">(</span><span class=\"s s-Atom\">flags</span><span class=\"p\">)[</span><span class=\"mi\">2</span><span class=\"s s-Atom\">:</span><span class=\"p\">]).</span><span class=\"nf\">rjust</span><span class=\"p\">(</span><span class=\"s s-Atom\">self</span><span class=\"p\">.</span><span class=\"s s-Atom\">num_DO</span><span class=\"p\">,</span><span class=\"s s-Atom\">&#39;0&#39;</span><span class=\"p\">)[</span><span class=\"s s-Atom\">::-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</pre></div>\n\n\n<p>In both PulseBlasterNoDDS.py and PulseBlaster.py</p>\n<p>Sorry for the mistake!</p>", "type": "rendered"}, "created_on": "2018-03-26T11:06:40.981247+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-26T11:06:40.985290+00:00", "type": "pullrequest_comment", "id": 59844598}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/60198140.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-60198140"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "One strategy for getting this merged might be to test and merge individual files one by one, since testing each will involve different things. This might be the approach I'll take when I can get to this.", "markup": "markdown", "html": "<p>One strategy for getting this merged might be to test and merge individual files one by one, since testing each will involve different things. This might be the approach I'll take when I can get to this.</p>", "type": "rendered"}, "created_on": "2018-03-29T06:06:18.417779+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-29T06:06:18.420986+00:00", "type": "pullrequest_comment", "id": 60198140}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/60200665.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-60200665"}}, "parent": {"id": 60198140, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/60198140.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-60198140"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Sounds good!\n\nOur lab is running on Python3 only since monday. \n\nThe files that are used during our experiments and thus fairly well tested are: \n\n* \\_\\_init\\_\\_.py\n\n* Camera.py\n* Pulsblaster\\_No\\_DDS.py\n* PulseBlaster\\_SP2\\_24\\_100\\_32k.py\n\nOther than that we use a modified version of the [JQI generic NI board class](#!/labscript_suite/labscript_devices/pull-requests/15) \\(with multiple DIO ports, our Analog In Pub/Sub feature and some bugfixes\\) so NIBoard.py is also tested to a certain extent.", "markup": "markdown", "html": "<p>Sounds good!</p>\n<p>Our lab is running on Python3 only since monday. </p>\n<p>The files that are used during our experiments and thus fairly well tested are: </p>\n<ul>\n<li>\n<p>__init__.py</p>\n</li>\n<li>\n<p>Camera.py</p>\n</li>\n<li>Pulsblaster_No_DDS.py</li>\n<li>PulseBlaster_SP2_24_100_32k.py</li>\n</ul>\n<p>Other than that we use a modified version of the <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript_devices/pull-requests/15\" rel=\"nofollow\">JQI generic NI board class</a> (with multiple DIO ports, our Analog In Pub/Sub feature and some bugfixes) so NIBoard.py is also tested to a certain extent.</p>", "type": "rendered"}, "created_on": "2018-03-29T06:50:01.277476+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-29T06:50:01.353580+00:00", "type": "pullrequest_comment", "id": 60200665}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/60542912.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-60542912"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "I'm spinning up a new experiment from scratch and figured I could test out Python 3 while I'm at it since there is some time before the experiment needs to starting running.\n\nUnfortunately it looks like we use the same equipment as Jan \\(including a less modified JQI generic NI board class\\). Only issue I've encountered so far is that the Novatech needs to have all of the response checks against \"OK\\\\r\\\\n\" to be changed to bytes literals as well \\(i.e. b'OK\\\\r\\\\n'\\). Line 271 also needs to be changed to b'e d\\\\r\\\\n'. With those further changes the Novatech code appears to be working in Python 3 and 2.", "markup": "markdown", "html": "<p>I'm spinning up a new experiment from scratch and figured I could test out Python 3 while I'm at it since there is some time before the experiment needs to starting running.</p>\n<p>Unfortunately it looks like we use the same equipment as Jan (including a less modified JQI generic NI board class). Only issue I've encountered so far is that the Novatech needs to have all of the response checks against \"OK\\r\\n\" to be changed to bytes literals as well (i.e. b'OK\\r\\n'). Line 271 also needs to be changed to b'e d\\r\\n'. With those further changes the Novatech code appears to be working in Python 3 and 2.</p>", "type": "rendered"}, "created_on": "2018-04-03T16:28:13.717494+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2018-04-03T16:28:13.777370+00:00", "type": "pullrequest_comment", "id": 60542912}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/60560120.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-60560120"}}, "parent": {"id": 60542912, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/60542912.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-60542912"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Thanks! \n\nI fixed the response checks.", "markup": "markdown", "html": "<p>Thanks! </p>\n<p>I fixed the response checks.</p>", "type": "rendered"}, "created_on": "2018-04-03T19:35:48.987512+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-04-03T19:35:49.020067+00:00", "type": "pullrequest_comment", "id": 60560120}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/62221754.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-62221754"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Steve and I have switched over to Python 3. We have come across a problem with AnalogIn (using the generic NI board class): Any time we read a string from compound data in the .h5 file, it is read as a binary (rather than a unicode) string. This poses a problem at NI_DAQmx.py line 903, where a string is used to index a numpy array:\n```\n#!python\n\nvalues = self.buffered_data[connection][start_index:end_index+1]\n```\nI also looked at NI_PCIe_6363.py and the relevant code appears identical, so this may be an issue with other NI board classes. Changing the offending line to\n```\n#!python\n\nvalues = self.buffered_data[connection.decode('utf-8')][start_index:end_index+1]\n```\nfixes the problem in Python 3, but will break in Python 2. Is there a better (and backwards compatible) solution?", "markup": "markdown", "html": "<p>Steve and I have switched over to Python 3. We have come across a problem with AnalogIn (using the generic NI board class): Any time we read a string from compound data in the .h5 file, it is read as a binary (rather than a unicode) string. This poses a problem at NI_DAQmx.py line 903, where a string is used to index a numpy array:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffered_data</span><span class=\"p\">[</span><span class=\"n\">connection</span><span class=\"p\">][</span><span class=\"n\">start_index</span><span class=\"p\">:</span><span class=\"n\">end_index</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</pre></div>\n\n\n<p>I also looked at NI_PCIe_6363.py and the relevant code appears identical, so this may be an issue with other NI board classes. Changing the offending line to</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffered_data</span><span class=\"p\">[</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">&#39;utf-8&#39;</span><span class=\"p\">)][</span><span class=\"n\">start_index</span><span class=\"p\">:</span><span class=\"n\">end_index</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</pre></div>\n\n\n<p>fixes the problem in Python 3, but will break in Python 2. Is there a better (and backwards compatible) solution?</p>", "type": "rendered"}, "created_on": "2018-04-20T18:46:07.620067+00:00", "user": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "updated_on": "2018-04-20T18:46:07.698342+00:00", "type": "pullrequest_comment", "id": 62221754}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/62224164.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-62224164"}}, "parent": {"id": 62221754, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/62221754.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-62221754"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Ah thanks! We don't use analog inputs much so I didn't notice this.\n\nYes there is a general solution take a look at [this function](#!/labscript_suite/labscript_utils/src/e0e058c506ef404c3db86a8ab6f00747e09db2df/connections.py?at=default&fileviewer=file-view-default#connections.py-29) it ensures, that all strings are unicode anything read from a h5 file should be wrapped in such a function. I'm currently in the process of writing my masters thesis and have no time to test this fix. \n\nCould you check if using this function helps? If so could you tell me wich lines I need to modify then I'll apply the changes. ", "markup": "markdown", "html": "<p>Ah thanks! We don't use analog inputs much so I didn't notice this.</p>\n<p>Yes there is a general solution take a look at <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript_utils/src/e0e058c506ef404c3db86a8ab6f00747e09db2df/connections.py?at=default&amp;fileviewer=file-view-default#connections.py-29\" rel=\"nofollow\">this function</a> it ensures, that all strings are unicode anything read from a h5 file should be wrapped in such a function. I'm currently in the process of writing my masters thesis and have no time to test this fix. </p>\n<p>Could you check if using this function helps? If so could you tell me wich lines I need to modify then I'll apply the changes. </p>", "type": "rendered"}, "created_on": "2018-04-20T19:18:19.377912+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-04-20T19:18:19.443120+00:00", "type": "pullrequest_comment", "id": 62224164}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/62260361.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-62260361"}}, "parent": {"id": 62221754, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/62221754.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-62221754"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "Jan is correct that `connection = _ensure_str(connection)` is the right way to make sure that the string always gets converted to unicode no matter what, but there is an additional change required.\n\nHere in the Python 3 changes you'll see the line:\n\n`self.buffered_data = numpy.zeros(len(self.buffered_data_list)*1000,dtype=dtype_workaround(dtypes))`\n\nso that dtype_workaround is required to make numpy accept a unicode string as a column name in Python 2.\n\nI will merge the JQI generic DAQmx class in soon so we can apply the same fixes to it for Python 3 compatibility.\n\n", "markup": "markdown", "html": "<p>Jan is correct that <code>connection = _ensure_str(connection)</code> is the right way to make sure that the string always gets converted to unicode no matter what, but there is an additional change required.</p>\n<p>Here in the Python 3 changes you'll see the line:</p>\n<p><code>self.buffered_data = numpy.zeros(len(self.buffered_data_list)*1000,dtype=dtype_workaround(dtypes))</code></p>\n<p>so that dtype_workaround is required to make numpy accept a unicode string as a column name in Python 2.</p>\n<p>I will merge the JQI generic DAQmx class in soon so we can apply the same fixes to it for Python 3 compatibility.</p>", "type": "rendered"}, "created_on": "2018-04-23T02:47:03.247917+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-04-23T02:47:03.253771+00:00", "type": "pullrequest_comment", "id": 62260361}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/62317183.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-62317183"}}, "parent": {"id": 62260361, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/62260361.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-62260361"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "We had noticed that and mostly modified our NI_DAQmx.py to match the change sets in this branch for NI_PCIe_6363.py. Adding the ```_ensure_str``` function makes the AI channels work at zeroth order. We'll continue testing today and report back if there are problems.\n\nThus far, we've had no trouble with \n```\n#!python\nNI_PCI_6733.py\nPythonCamera.py\nPulseBlaster_No_DDS.py\n```\nand associated parent classes.\n", "markup": "markdown", "html": "<p>We had noticed that and mostly modified our NI_DAQmx.py to match the change sets in this branch for NI_PCIe_6363.py. Adding the <code>_ensure_str</code> function makes the AI channels work at zeroth order. We'll continue testing today and report back if there are problems.</p>\n<p>Thus far, we've had no trouble with </p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">NI_PCI_6733</span><span class=\"o\">.</span><span class=\"n\">py</span>\n<span class=\"n\">PythonCamera</span><span class=\"o\">.</span><span class=\"n\">py</span>\n<span class=\"n\">PulseBlaster_No_DDS</span><span class=\"o\">.</span><span class=\"n\">py</span>\n</pre></div>\n\n\n<p>and associated parent classes.</p>", "type": "rendered"}, "created_on": "2018-04-23T12:38:39.765128+00:00", "user": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "updated_on": "2018-04-23T12:38:39.839375+00:00", "type": "pullrequest_comment", "id": 62317183}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21/comments/66151791.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21/_/diff#comment-66151791"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/21"}}, "title": "Python3"}, "content": {"raw": "I've split this PR into 9 separate PRs for different subsets of devices:\n\nPR #31 PR #32 PR #33 PR #34 PR #35 PR #36 PR #37 PR #38 PR #39\n\nThis way testing can proceed on a per-device basis (almost - there are some interdependencies for groups of devices that subclass each other)\n\nIndividual PRs can be merged once they are satisfactorily tested for not introducing regressions on Python 2, regardless of whether they actually work on Python 3 properly (though hopefully they do!)\n \nClosing this one! Bitbucket will mark it as merged anyway as soon as one of its child branches is merged.", "markup": "markdown", "html": "<p>I've split this PR into 9 separate PRs for different subsets of devices:</p>\n<p><a href=\"#!/labscript_suite/labscript_devices/pull-requests/31/python3-base\" rel=\"nofollow\" class=\"ap-connect-link\">PR #31</a> <a href=\"#!/labscript_suite/labscript_devices/pull-requests/32/python3-pulseblasters\" rel=\"nofollow\" class=\"ap-connect-link\">PR #32</a> <a href=\"#!/labscript_suite/labscript_devices/pull-requests/33/python3-niboards\" rel=\"nofollow\" class=\"ap-connect-link\">PR #33</a> <a href=\"#!/labscript_suite/labscript_devices/pull-requests/34/python3-novatech\" rel=\"nofollow\" class=\"ap-connect-link\">PR #34</a> <a href=\"#!/labscript_suite/labscript_devices/pull-requests/35/python3-camera\" rel=\"nofollow\" class=\"ap-connect-link\">PR #35</a> <a href=\"#!/labscript_suite/labscript_devices/pull-requests/36/python3-phasematrixquicksyn\" rel=\"nofollow\" class=\"ap-connect-link\">PR #36</a> <a href=\"#!/labscript_suite/labscript_devices/pull-requests/37/python3-pineblaster\" rel=\"nofollow\" class=\"ap-connect-link\">PR #37</a> <a href=\"#!/labscript_suite/labscript_devices/pull-requests/38/python3-rfblaster\" rel=\"nofollow\" class=\"ap-connect-link\">PR #38</a> <a href=\"#!/labscript_suite/labscript_devices/pull-requests/39/python3-zaberstage\" rel=\"nofollow\" class=\"ap-connect-link\">PR #39</a></p>\n<p>This way testing can proceed on a per-device basis (almost - there are some interdependencies for groups of devices that subclass each other)</p>\n<p>Individual PRs can be merged once they are satisfactorily tested for not introducing regressions on Python 2, regardless of whether they actually work on Python 3 properly (though hopefully they do!)</p>\n<p>Closing this one! Bitbucket will mark it as merged anyway as soon as one of its child branches is merged.</p>", "type": "rendered"}, "created_on": "2018-06-05T06:13:43.354465+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-06-05T06:13:43.366394+00:00", "type": "pullrequest_comment", "id": 66151791}], "page": 1, "size": 34}