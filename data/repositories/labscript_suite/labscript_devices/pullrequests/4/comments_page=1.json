{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/4/comments/31958071.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/4/_/diff#comment-31958071"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/4.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/4"}}, "title": "Added support for configurable voltage range on NI analog inputs."}, "content": {"raw": "Has this been tested on hardware in the interim?", "markup": "markdown", "html": "<p>Has this been tested on hardware in the interim?</p>", "type": "rendered"}, "created_on": "2017-02-22T16:01:54.933163+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-02-22T16:01:54.942375+00:00", "type": "pullrequest_comment", "id": 31958071}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/4/comments/31990182.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/4/_/diff#comment-31990182"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/4.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/4"}}, "title": "Added support for configurable voltage range on NI analog inputs."}, "content": {"raw": "No, this has not bee tested anywhere.", "markup": "markdown", "html": "<p>No, this has not bee tested anywhere.</p>", "type": "rendered"}, "created_on": "2017-02-23T00:34:03.284548+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-02-23T00:34:03.288779+00:00", "type": "pullrequest_comment", "id": 31990182}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/4/comments/48843945.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/4/_/diff#comment-48843945"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/4.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/4"}}, "title": "Added support for configurable voltage range on NI analog inputs."}, "content": {"raw": "I'v tested this it works, but I noticed some things that could be changed:\n\n1. You should maybe rename all `min` and `max` to `minimum` and `maximum` to avoid problems down the line when using the builtin functions min and max\n2. `self.buffered_voltage_min` and `self.buffered_voltage_max` should also be declared in the AcquisitionWorker's constructor to prevent bugs\n3. You could remove the device properties from `NIAnalogIn` as there is no need to save them twice. And this keeps the Analog Inputs from appearing in the devices section of the h5 file. Changing the code to :\n\n    line 7-12:\n\n\n\n```python\nclass NIAnalogIn(AnalogIn):\n    def __init__(self, name, parent_device, connection, scale_factor=1.0, units='Volts', minimum=-10.0, maximum=-10.0, **kwargs):\n        AnalogIn.__init__(self, name, parent_device, connection, scale_factor, units, **kwargs)\n        self.min = minimum\n        self.max = maximum\n```\n\nand line 92-94:\n\n    if isinstance(inputs[connection], NIAnalogIn): \n                    input_min[name] = inputs[connection].min \n                    input_max[name] = inputs[connection].max\n\n1. Move the setting the device\\_properties `analog_in_min` and `analog_in_max` out of the if clause. This allows the values to be saved in the connectiontable h5file to allow for the live monitoring to use input ranges.\n2. For the live monitoring you could also do the follwing:\n\n    change `setup_task` to check if for `self.buffered`like so:\n\n\n\n            for chnl in chnl_list:\n                minimum = -10.0\n                maximum = 10.0\n    \n                if self.buffered:\n                    if chnl in self.buffered_voltage_min:\n                        minimum = self.buffered_voltage_min[chnl]\n                    if chnl in self.buffered_voltage_max:\n                        maximum = self.buffered_voltage_max[chnl]\n                else:\n                    if chnl in self.voltage_min:\n                        minimum = self.voltage_min[chnl]\n                    if chnl in self.voltage_max:\n                        maximum = self.voltage_max[chnl]                    \n                self.task.CreateAIVoltageChan(chnl,\"\",DAQmx_Val_RSE,minimum,maximum,DAQmx_Val_Volts,None)\n\nand modify the AcquisitionWorker creation like so to pass the analog in ranges from the connectiontable h5 file:\n\n                with h5py.File(self.settings['connection_table'].filepath,'r') as hdf5_file:\n                    device_properties = labscript_utils.properties.get(hdf5_file, self.device_name, 'device_properties')\n    \n                self.create_worker(\"acquisition_worker\",Ni_DAQmxAcquisitionWorker,{'MAX_name':self.MAX_name, 'num':num, 'voltage_min': device_properties['analog_in_min'], 'voltage_max':  device_properties['analog_in_max']})\n\n\u200c\n\n\u200c", "markup": "markdown", "html": "<p>I'v tested this it works, but I noticed some things that could be changed:</p>\n<ol>\n<li>You should maybe rename all <code>min</code> and <code>max</code> to <code>minimum</code> and <code>maximum</code> to avoid problems down the line when using the builtin functions min and max</li>\n<li><code>self.buffered_voltage_min</code> and <code>self.buffered_voltage_max</code> should also be declared in the AcquisitionWorker's constructor to prevent bugs</li>\n<li>\n<p>You could remove the device properties from <code>NIAnalogIn</code> as there is no need to save them twice. And this keeps the Analog Inputs from appearing in the devices section of the h5 file. Changing the code to :</p>\n<p>line 7-12:</p>\n</li>\n</ol>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">NIAnalogIn</span><span class=\"p\">(</span><span class=\"n\">AnalogIn</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">parent_device</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"n\">scale_factor</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"s1\">&#39;Volts&#39;</span><span class=\"p\">,</span> <span class=\"n\">minimum</span><span class=\"o\">=-</span><span class=\"mf\">10.0</span><span class=\"p\">,</span> <span class=\"n\">maximum</span><span class=\"o\">=-</span><span class=\"mf\">10.0</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">AnalogIn</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">parent_device</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"n\">scale_factor</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">min</span> <span class=\"o\">=</span> <span class=\"n\">minimum</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max</span> <span class=\"o\">=</span> <span class=\"n\">maximum</span>\n</pre></div>\n\n\n<p>and line 92-94:</p>\n<div class=\"codehilite\"><pre><span></span>if isinstance(inputs[connection], NIAnalogIn): \n                input_min[name] = inputs[connection].min \n                input_max[name] = inputs[connection].max\n</pre></div>\n\n\n<ol>\n<li>Move the setting the device_properties <code>analog_in_min</code> and <code>analog_in_max</code> out of the if clause. This allows the values to be saved in the connectiontable h5file to allow for the live monitoring to use input ranges.</li>\n<li>\n<p>For the live monitoring you could also do the follwing:</p>\n<p>change <code>setup_task</code> to check if for <code>self.buffered</code>like so:</p>\n<div class=\"codehilite\"><pre><span></span>    for chnl in chnl_list:\n        minimum = -10.0\n        maximum = 10.0\n\n        if self.buffered:\n            if chnl in self.buffered_voltage_min:\n                minimum = self.buffered_voltage_min[chnl]\n            if chnl in self.buffered_voltage_max:\n                maximum = self.buffered_voltage_max[chnl]\n        else:\n            if chnl in self.voltage_min:\n                minimum = self.voltage_min[chnl]\n            if chnl in self.voltage_max:\n                maximum = self.voltage_max[chnl]                    \n        self.task.CreateAIVoltageChan(chnl,&quot;&quot;,DAQmx_Val_RSE,minimum,maximum,DAQmx_Val_Volts,None)\n</pre></div>\n\n\n</li>\n</ol>\n<p>and modify the AcquisitionWorker creation like so to pass the analog in ranges from the connectiontable h5 file:</p>\n<div class=\"codehilite\"><pre><span></span>            with h5py.File(self.settings[&#39;connection_table&#39;].filepath,&#39;r&#39;) as hdf5_file:\n                device_properties = labscript_utils.properties.get(hdf5_file, self.device_name, &#39;device_properties&#39;)\n\n            self.create_worker(&quot;acquisition_worker&quot;,Ni_DAQmxAcquisitionWorker,{&#39;MAX_name&#39;:self.MAX_name, &#39;num&#39;:num, &#39;voltage_min&#39;: device_properties[&#39;analog_in_min&#39;], &#39;voltage_max&#39;:  device_properties[&#39;analog_in_max&#39;]})\n</pre></div>\n\n\n<p>\u200c</p>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2017-11-06T14:02:38.632819+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-11-06T20:27:51.335489+00:00", "type": "pullrequest_comment", "id": 48843945}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/4/comments/81075092.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/4/_/diff#comment-81075092"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/4.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/4"}}, "title": "Added support for configurable voltage range on NI analog inputs."}, "content": {"raw": "This will be superseded by the general DAQmx class, which supports this feature. I'll make the pull request for that one next week. Is it ok if I decline this one?", "markup": "markdown", "html": "<p>This will be superseded by the general DAQmx class, which supports this feature. I'll make the pull request for that one next week. Is it ok if I decline this one?</p>", "type": "rendered"}, "created_on": "2018-11-01T14:47:26.127493+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-11-01T14:47:26.163561+00:00", "type": "pullrequest_comment", "id": 81075092}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/4/comments/81139461.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/4/_/diff#comment-81139461"}}, "parent": {"id": 81075092, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/4/comments/81075092.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/4/_/diff#comment-81075092"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/4.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/4"}}, "title": "Added support for configurable voltage range on NI analog inputs."}, "content": {"raw": "sure", "markup": "markdown", "html": "<p>sure</p>", "type": "rendered"}, "created_on": "2018-11-02T03:24:33.917875+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-11-02T03:24:33.925964+00:00", "type": "pullrequest_comment", "id": 81139461}], "page": 1, "size": 5}