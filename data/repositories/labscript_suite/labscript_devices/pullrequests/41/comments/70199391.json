{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/41/comments/70199391.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/41/_/diff#comment-70199391"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 41, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/41.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/41"}}, "title": "Support for AlazarTech data acquisition cards (ATS9462 and potentially others)"}, "content": {"raw": "Great! Fair enough about the copyright, that makes sense.\n\nIf the code is breaking with unicode_literals, in a way unrelated to the numpy bug, that likely indicates that it is not Python 3 compatible. We can still merge it in anyway if it's only Python 2 compatible, but that's not preferable. If you were to post a traceback or otherwise say what goes wrong, I may be able to say what the fix is.\n\nI do see one stringy problem, line 281 (and similarly on line 288 but commented out):\n\n```python\nself.sdk_version_string = '.'.join(map(str, self.sdk_version))\n```\nThis will break with unicode literals. In most labscript suite files we also have at the top:\n\n```python\nfrom labscript_utils import PY2\nif PY2:\n    str = unicode\n```\n\nWhich should fix that problem (If the sdk_version is a list of ints or something). This specific breakage actually doesn't indicate a Python 3 incompatibility, but it is is good to ensure the same datatypes are being used for all strings on both Python 2 and 3 to increase the odds that behaviour is the same on both versions.\n\n\nOne more thing I noticed: the ``if __name__ != \"__main__\":`` line - does that serve any purpose? The file doesn't appear to do anything if it *is* run as main, so can that line be removed and the class definitions dedented?\n", "markup": "markdown", "html": "<p>Great! Fair enough about the copyright, that makes sense.</p>\n<p>If the code is breaking with unicode_literals, in a way unrelated to the numpy bug, that likely indicates that it is not Python 3 compatible. We can still merge it in anyway if it's only Python 2 compatible, but that's not preferable. If you were to post a traceback or otherwise say what goes wrong, I may be able to say what the fix is.</p>\n<p>I do see one stringy problem, line 281 (and similarly on line 288 but commented out):</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sdk_version_string</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sdk_version</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>This will break with unicode literals. In most labscript suite files we also have at the top:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">labscript_utils</span> <span class=\"kn\">import</span> <span class=\"n\">PY2</span>\n<span class=\"k\">if</span> <span class=\"n\">PY2</span><span class=\"p\">:</span>\n    <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"nb\">unicode</span>\n</pre></div>\n\n\n<p>Which should fix that problem (If the sdk_version is a list of ints or something). This specific breakage actually doesn't indicate a Python 3 incompatibility, but it is is good to ensure the same datatypes are being used for all strings on both Python 2 and 3 to increase the odds that behaviour is the same on both versions.</p>\n<p>One more thing I noticed: the <code>if __name__ != \"__main__\":</code> line - does that serve any purpose? The file doesn't appear to do anything if it <em>is</em> run as main, so can that line be removed and the class definitions dedented?</p>", "type": "rendered"}, "created_on": "2018-07-17T15:20:49.812173+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-07-17T15:23:13.944064+00:00", "type": "pullrequest_comment", "id": 70199391}