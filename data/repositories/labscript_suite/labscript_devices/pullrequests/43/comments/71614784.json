{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/43/comments/71614784.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/43/_/diff#comment-71614784"}}, "parent": {"id": 71551913, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/43/comments/71551913.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/43/_/diff#comment-71551913"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 43, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/43.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/43"}}, "title": "LightCrafter"}, "content": {"raw": "My main concern was that if we are making the function general we\u2019d need to be able to output blank bmps for any resolution \\(and potentially bit depth\\).\n\nOne potential option is to change the way we store the data in the h5 file. I used strings containing bmp files for convenience, as this is the format that the LightCrafter takes, and it\u2019s easy to have an array of strings as the table data in the h5 file. Alternatively, we could store the images as arrays, with a 3D array of time and image frames, and BLACS can do the conversion to BMP when it programs the device. In that case we may just need to override Output.add\\_instruction for this output type \\(or add an extra if statement for array instructions\\) to check that the array has the correct dimensions/range of individual values rather than check if it\u2019s within the device limits.", "markup": "markdown", "html": "<p>My main concern was that if we are making the function general we\u2019d need to be able to output blank bmps for any resolution (and potentially bit depth).</p>\n<p>One potential option is to change the way we store the data in the h5 file. I used strings containing bmp files for convenience, as this is the format that the LightCrafter takes, and it\u2019s easy to have an array of strings as the table data in the h5 file. Alternatively, we could store the images as arrays, with a 3D array of time and image frames, and BLACS can do the conversion to BMP when it programs the device. In that case we may just need to override Output.add_instruction for this output type (or add an extra if statement for array instructions) to check that the array has the correct dimensions/range of individual values rather than check if it\u2019s within the device limits.</p>", "type": "rendered"}, "created_on": "2018-08-01T02:30:26.597318+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2018-08-01T02:30:26.604374+00:00", "type": "pullrequest_comment", "id": 71614784}