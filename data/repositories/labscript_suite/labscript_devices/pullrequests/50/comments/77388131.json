{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/50/comments/77388131.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/50/_/diff#comment-77388131"}}, "parent": {"id": 77281297, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/50/comments/77281297.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/50/_/diff#comment-77281297"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/50"}}, "title": "Cicero Opal Kelly XEM3001 pseudoclock"}, "content": {"raw": "The comment in the code for the class attribute of `PseudoclockDevice`is:\n\n```python\n# How long after the start of a wait instruction the device is actually capable of resuming:\n```\nAnd later in the property `wait_delay` of `Output`:\n```python\n    @property\n    def wait_delay(self):\n        \"\"\"The earliest time output can be commanded from this device after a wait.\n        This is nonzeo on secondary pseudoclocks due to triggering delays and the fact\n        that the master clock doesn't provide a resume trigger to secondary clocks until\n        a minimum time has elapsed: compiler.wait_delay. This is so that if a wait is \n        extremely short, the child clock is actually ready for the trigger.\n        \"\"\"\n```\n\nSo it looks wait_delay on a PseudoclockDevice is how long it takes to enter a wait state, whereas on an Output it is that, plus any triggering delays due to them being on a secondary pseudoclock. It looks like the PseudoclockDevice attribute is used to ensure that the master pseudoclock does not give resume triggers to secondary pseudoclocks too soon, since they may not be ready yet. Then the result (plus the max trigger delay) is returned by `wait()` so that the user knows how long until it is safe to command output from any device. The wait delay and trigger delay of the master pseudoclock don't count, they are not part of 'labscript time', so this is just about secondary pseudoclocks.\n\nSo bottom line is: it's how long the device takes to become sensitive to triggers after hitting a wait instruction.", "markup": "markdown", "html": "<p>The comment in the code for the class attribute of <code>PseudoclockDevice</code>is:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"c1\"># How long after the start of a wait instruction the device is actually capable of resuming:</span>\n</pre></div>\n\n\n<p>And later in the property <code>wait_delay</code> of <code>Output</code>:</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">wait_delay</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;The earliest time output can be commanded from this device after a wait.</span>\n<span class=\"sd\">        This is nonzeo on secondary pseudoclocks due to triggering delays and the fact</span>\n<span class=\"sd\">        that the master clock doesn&#39;t provide a resume trigger to secondary clocks until</span>\n<span class=\"sd\">        a minimum time has elapsed: compiler.wait_delay. This is so that if a wait is </span>\n<span class=\"sd\">        extremely short, the child clock is actually ready for the trigger.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n</pre></div>\n\n\n<p>So it looks wait_delay on a PseudoclockDevice is how long it takes to enter a wait state, whereas on an Output it is that, plus any triggering delays due to them being on a secondary pseudoclock. It looks like the PseudoclockDevice attribute is used to ensure that the master pseudoclock does not give resume triggers to secondary pseudoclocks too soon, since they may not be ready yet. Then the result (plus the max trigger delay) is returned by <code>wait()</code> so that the user knows how long until it is safe to command output from any device. The wait delay and trigger delay of the master pseudoclock don't count, they are not part of 'labscript time', so this is just about secondary pseudoclocks.</p>\n<p>So bottom line is: it's how long the device takes to become sensitive to triggers after hitting a wait instruction.</p>", "type": "rendered"}, "created_on": "2018-09-27T18:47:55.803216+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-09-27T18:47:55.816720+00:00", "type": "pullrequest_comment", "id": 77388131}