{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/50/comments/77491640.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/50/_/diff#comment-77491640"}}, "parent": {"id": 77422362, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/50/comments/77422362.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/50/_/diff#comment-77422362"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 50, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/50.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/50"}}, "title": "Cicero Opal Kelly XEM3001 pseudoclock"}, "content": {"raw": "> So does that mean that it doesn\u2019t matter if you overestimate the value a bit?\n\nSounds correct to me! In labscript 3 I'm adding a global configuration parameter for how much all of them should be overestimated experiment-wide, kind of a tolerance for the fact that you have not calibrated all the delays in all your cables so you want to err on the side of caution.\n\n> Also, the PseudoclockDevice.trigger() method is never called with a wait_delay.\n\nHm. Might be a bug. \n\n> Output.wait_delay doesn't appear to be used anywhere either (everything uses compiler.wait_delay).\n \nI think this one is for the user's sake, so that they can t+= output.wait_delay() to ensure they don't command output before it is possible after a wait.\n\n> This might actually explain why a few years ago I saw secondary PulseBlasters occasionally not be retriggered correctly after a wait.\n\nMaybe! Would had to have been a very fast trigger though, since the PulseBlasters are quick to be ready for retriggering - the pineblaster on the other hand I think is up to 4us before it can be ready for a retriggering.\n\nIt looks like it might not be a quick fix to just trigger the secondary pseudoclocks later, as the instruction offsetting doesn't look like it is taking into account this delay, and it would need to to be consistent.\n\nI wouldn't mind ignoring the problem for now, as this is the kind of thing that is more carefully considered in labscript 3 (which I'll get back to working on after the great Spielman fork/mainline convergence).", "markup": "markdown", "html": "<blockquote>\n<p>So does that mean that it doesn\u2019t matter if you overestimate the value a bit?</p>\n</blockquote>\n<p>Sounds correct to me! In labscript 3 I'm adding a global configuration parameter for how much all of them should be overestimated experiment-wide, kind of a tolerance for the fact that you have not calibrated all the delays in all your cables so you want to err on the side of caution.</p>\n<blockquote>\n<p>Also, the PseudoclockDevice.trigger() method is never called with a wait_delay.</p>\n</blockquote>\n<p>Hm. Might be a bug. </p>\n<blockquote>\n<p>Output.wait_delay doesn't appear to be used anywhere either (everything uses compiler.wait_delay).</p>\n</blockquote>\n<p>I think this one is for the user's sake, so that they can t+= output.wait_delay() to ensure they don't command output before it is possible after a wait.</p>\n<blockquote>\n<p>This might actually explain why a few years ago I saw secondary PulseBlasters occasionally not be retriggered correctly after a wait.</p>\n</blockquote>\n<p>Maybe! Would had to have been a very fast trigger though, since the PulseBlasters are quick to be ready for retriggering - the pineblaster on the other hand I think is up to 4us before it can be ready for a retriggering.</p>\n<p>It looks like it might not be a quick fix to just trigger the secondary pseudoclocks later, as the instruction offsetting doesn't look like it is taking into account this delay, and it would need to to be consistent.</p>\n<p>I wouldn't mind ignoring the problem for now, as this is the kind of thing that is more carefully considered in labscript 3 (which I'll get back to working on after the great Spielman fork/mainline convergence).</p>", "type": "rendered"}, "created_on": "2018-09-28T15:10:05.359803+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-09-28T15:11:16.842576+00:00", "type": "pullrequest_comment", "id": 77491640}