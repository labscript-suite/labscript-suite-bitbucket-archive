{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/56/comments/100434369.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/56/_/diff#comment-100434369"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/56.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/56"}}, "title": "Universal NI DAQmx support"}, "content": {"raw": "I am currently testing this PR in our second lab. We there use the PCIe\\_6351 AI-card. Getting the capabilities was no problem and also Blacs works fine with it. However, when compiling the first script with runmanager I encountered a problem: It says that the update delays for the pulseblaster are to short. The script is the same as before which but I think I found the problem: In the capabilities of the NI-card it says that the start delay is 70ns. Depending on the pulse sequence this can result in a error as it is now multiple of PB\u2019s 50ns clock.\n\nLooking in our old NI\\_class I think we just did not specify and therefore not use this delay.\n\nAs a quick fix I tried to change the AI\\_start\\_delay in the models/NI\\_6351.py-file to e.g. 100ns but this did not help. Moving the pulses in our script a bit, compiling works and with runviewer it is shown that there is a rising edge on the AI\\_clockline at 2.02us which then causes a problem when having a 2us pulse at the beginning, as we have.\n\nAre there any ideas how to fix it in general? A not so nice fix is to implement a waiting time of some us at the beginning. ", "markup": "markdown", "html": "<p>I am currently testing this PR in our second lab. We there use the PCIe_6351 AI-card. Getting the capabilities was no problem and also Blacs works fine with it. However, when compiling the first script with runmanager I encountered a problem: It says that the update delays for the pulseblaster are to short. The script is the same as before which but I think I found the problem: In the capabilities of the NI-card it says that the start delay is 70ns. Depending on the pulse sequence this can result in a error as it is now multiple of PB\u2019s 50ns clock.</p>\n<p>Looking in our old NI_class I think we just did not specify and therefore not use this delay.</p>\n<p>As a quick fix I tried to change the AI_start_delay in the models/NI_6351.py-file to e.g. 100ns but this did not help. Moving the pulses in our script a bit, compiling works and with runviewer it is shown that there is a rising edge on the AI_clockline at 2.02us which then causes a problem when having a 2us pulse at the beginning, as we have.</p>\n<p>Are there any ideas how to fix it in general? A not so nice fix is to implement a waiting time of some us at the beginning. </p>", "type": "rendered"}, "created_on": "2019-04-30T10:01:35.268183+00:00", "user": {"display_name": "Lars Kohfahl", "uuid": "{14b59397-cbc0-4d8c-8a4a-fe99fb4d2d4a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B14b59397-cbc0-4d8c-8a4a-fe99fb4d2d4a%7D"}, "html": {"href": "https://bitbucket.org/%7B14b59397-cbc0-4d8c-8a4a-fe99fb4d2d4a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/630642264cd55e22515678a3a0489ac7d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLK-2.png"}}, "nickname": "lkohfahl", "type": "user", "account_id": "5aafc5d11396802a57aa7f3b"}, "updated_on": "2019-04-30T10:01:35.381960+00:00", "type": "pullrequest_comment", "id": 100434369}