{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/56/comments/81996660.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/56/_/diff#comment-81996660"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/56.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/56"}}, "title": "Universal NI DAQmx support"}, "content": {"raw": "The introspection code in this pull request reports that the digital outputs of the PXIe-6535 do not support buffered output. In pull request #9 however, which added code for the PXIe-6535,  it looks like they do support buffered output. @cast7989 could you confirm that they do support buffered output? I do not have a PXIe-6535, so I can only see the behaviour of a simulated device.\n\nI know the NI PXI stuff can be modular. Perhaps the ports only support buffered output if there are additional modules connected? Otherwise, there might be an unwarranted assumption in the introspection code. It looks like this:\n\n```python\ndef port_supports_buffered(device_name, port, clock_terminal='PFI0'):\n    if clock_terminal not in DAQmxGetDevTerminals(device_name):\n        return False\n    npts = 10\n    task = Task()\n    clock_terminal = '/' + device_name + '/' + clock_terminal\n    data = np.zeros(npts, dtype=np.uint8)\n    task.CreateDOChan(\n        device_name + \"/\" + port + '/line0', \"\", c.DAQmx_Val_ChanForAllLines\n    )\n    task.CfgSampClkTiming(\n        clock_terminal, 100, c.DAQmx_Val_Rising, c.DAQmx_Val_FiniteSamps, npts\n    )\n    written = int32()\n    try:\n        task.WriteDigitalLines(\n            npts, False, 10.0, c.DAQmx_Val_GroupByScanNumber, data, byref(written), None\n        )\n    except (\n        PyDAQmx.DAQmxFunctions.BufferedOperationsNotSupportedOnSelectedLinesError,\n        PyDAQmx.DAQmxFunctions.PhysicalChanNotSupportedGivenSampTimingType653xError,\n    ):\n        return False\n    except PyDAQmx.DAQmxFunctions.RouteNotSupportedByHW_RoutingError as e:\n        valid_terms = e.message.split('Suggested Values: ')[1].split('\\n')[0]\n        # Try again with one of the suggested terminals:\n        return port_supports_buffered(device_name, port, valid_terms[0].split(', ')[0])\n    else:\n        return True\n    finally:\n        task.ClearTask()\n\n```\n\nSo the code is attempting to do buffered output on a port and seeing if it gets an error. The only potentially unwarranted assumption that  jumps out to me is the initial check for a terminal called 'PFI0'. If there are devices that can have externally clocked output but do not have a terminal named PFI0, then they would erroneously be considered not to support buffered output.\n\nI will investigate this with the simulated device - perhaps there are different terminal naming patterns on the PXI devices, such that PFI0 is not one of them.", "markup": "markdown", "html": "<p>The introspection code in this pull request reports that the digital outputs of the PXIe-6535 do not support buffered output. In <a href=\"#!/labscript_suite/labscript_devices/pull-requests/9/update-of-niboardpy-for-dio-cards-with\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #9</a> however, which added code for the PXIe-6535,  it looks like they do support buffered output. @cast7989 could you confirm that they do support buffered output? I do not have a PXIe-6535, so I can only see the behaviour of a simulated device.</p>\n<p>I know the NI PXI stuff can be modular. Perhaps the ports only support buffered output if there are additional modules connected? Otherwise, there might be an unwarranted assumption in the introspection code. It looks like this:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">port_supports_buffered</span><span class=\"p\">(</span><span class=\"n\">device_name</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"n\">clock_terminal</span><span class=\"o\">=</span><span class=\"s1\">&#39;PFI0&#39;</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">clock_terminal</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">DAQmxGetDevTerminals</span><span class=\"p\">(</span><span class=\"n\">device_name</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">False</span>\n    <span class=\"n\">npts</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n    <span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"n\">Task</span><span class=\"p\">()</span>\n    <span class=\"n\">clock_terminal</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/&#39;</span> <span class=\"o\">+</span> <span class=\"n\">device_name</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;/&#39;</span> <span class=\"o\">+</span> <span class=\"n\">clock_terminal</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"n\">npts</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">)</span>\n    <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">CreateDOChan</span><span class=\"p\">(</span>\n        <span class=\"n\">device_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/&quot;</span> <span class=\"o\">+</span> <span class=\"n\">port</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;/line0&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">DAQmx_Val_ChanForAllLines</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">CfgSampClkTiming</span><span class=\"p\">(</span>\n        <span class=\"n\">clock_terminal</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">DAQmx_Val_Rising</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">DAQmx_Val_FiniteSamps</span><span class=\"p\">,</span> <span class=\"n\">npts</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">written</span> <span class=\"o\">=</span> <span class=\"n\">int32</span><span class=\"p\">()</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">WriteDigitalLines</span><span class=\"p\">(</span>\n            <span class=\"n\">npts</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"mf\">10.0</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">DAQmx_Val_GroupByScanNumber</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">byref</span><span class=\"p\">(</span><span class=\"n\">written</span><span class=\"p\">),</span> <span class=\"bp\">None</span>\n        <span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"p\">(</span>\n        <span class=\"n\">PyDAQmx</span><span class=\"o\">.</span><span class=\"n\">DAQmxFunctions</span><span class=\"o\">.</span><span class=\"n\">BufferedOperationsNotSupportedOnSelectedLinesError</span><span class=\"p\">,</span>\n        <span class=\"n\">PyDAQmx</span><span class=\"o\">.</span><span class=\"n\">DAQmxFunctions</span><span class=\"o\">.</span><span class=\"n\">PhysicalChanNotSupportedGivenSampTimingType653xError</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">False</span>\n    <span class=\"k\">except</span> <span class=\"n\">PyDAQmx</span><span class=\"o\">.</span><span class=\"n\">DAQmxFunctions</span><span class=\"o\">.</span><span class=\"n\">RouteNotSupportedByHW_RoutingError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n        <span class=\"n\">valid_terms</span> <span class=\"o\">=</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;Suggested Values: &#39;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"c1\"># Try again with one of the suggested terminals:</span>\n        <span class=\"k\">return</span> <span class=\"n\">port_supports_buffered</span><span class=\"p\">(</span><span class=\"n\">device_name</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"n\">valid_terms</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;, &#39;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"bp\">True</span>\n    <span class=\"k\">finally</span><span class=\"p\">:</span>\n        <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">ClearTask</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>So the code is attempting to do buffered output on a port and seeing if it gets an error. The only potentially unwarranted assumption that  jumps out to me is the initial check for a terminal called 'PFI0'. If there are devices that can have externally clocked output but do not have a terminal named PFI0, then they would erroneously be considered not to support buffered output.</p>\n<p>I will investigate this with the simulated device - perhaps there are different terminal naming patterns on the PXI devices, such that PFI0 is not one of them.</p>", "type": "rendered"}, "created_on": "2018-11-10T18:17:10.877324+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-11-10T18:21:53.724465+00:00", "type": "pullrequest_comment", "id": 81996660}