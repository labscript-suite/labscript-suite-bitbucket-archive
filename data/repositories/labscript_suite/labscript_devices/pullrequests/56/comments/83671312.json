{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/56/comments/83671312.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/56/_/diff#comment-83671312"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/56.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/56"}}, "title": "Universal NI DAQmx support"}, "content": {"raw": "Tested this today on Swinburne\u2019s quantum\\_gas\\_microscope and in the monashspinor lab. The following procedure worked beautifully:\n\n`$ python NI_DAQmx/models/get_capabilities.py`\n\n`$ python NI_DAQmx/models/generate_subclasses.py`\n\nThe boards I tested were: PXIe-6361, PXIe-6738, PXIe-6535 \\(quantum\\_gas\\_microscope running Python 2\\) and PCIe-6363, PCIe-6733 \\(monashspinor running Python 2 and 3\\).\n\nI\u2019ve fixed a bug which prevented shots from executing when a board supporting analog input had no acquisitions requested \\(see e9e6bfc and 4003ba4\\).\n\nOutstanding issues include:\n\n* Had to manually decrease `max_AO_sample_rate` on the PXIe-6738 from 1 MS/s to 400 kS/s.\n* When configuring DO channels in `setup_manual_mode_tasks` of [blacs\\_workers.py](#!/labscript_suite/labscript_devices/pull-requests/56/universal-ni-daqmx-support/diff#LNI_DAQmx/blacs_workers.pyT107), including `'/<MAX_name>/port1/line0:7'` in the call to `DO_task.CreateDOChan` caused the subsequent call to `DO_task.WriteDigitalLines` in `program_manual` to fail with:  \n   `InvalidDigDataWriteError: Attempted writing digital data that is not supported.`\n\n    `Data: 99`\n\n\n\n    `Supported Values: 0, 1`\n\n\n\n    `Task Name: _unnamedTask<1>`\n\n\n\n    `Status Code: -200562`\n\n\n\n    Some observations:\n\n\n\n    * `DO_data` is a list of 10 zeros \\(uint8\\), corresponding to the 2 lines on port0 and 8 lines on port1.\n    * This code works on the other cards tested, even when:\n    \n        * some ports are static; and/or\n        * not all ports have the same number of lines, e.g. the PXIe-6535 which has 8\\+8\\+8\\+8\\+6 lines across port 0-4; and/or\n        * used for PFI lines. \\(This confuses me, since some of these are inputs, e.g. `clock_terminal`.\\)\n        \n    * Calling `DO_task.CreateDOChan` with only the first port `'/<MAX_name>/port0/line0:1'` works \\(using a hard-coded conditional\\), even when using the list of 10 zeros for the value of `DO_data`.\n    \n* Waits don't work \\(at least not as configured with the PCIe-6363 on monashspinor\\). The shot fails to complete, with the PCIe-6363 device tab stuck on `transition_to_manual` \\(`acquisiton_worker`\\). I\u2019ll debug this further another day.\n\nThis is a really great bit of development!", "markup": "markdown", "html": "<p>Tested this today on Swinburne\u2019s quantum_gas_microscope and in the monashspinor lab. The following procedure worked beautifully:</p>\n<p><code>$ python NI_DAQmx/models/get_capabilities.py</code></p>\n<p><code>$ python NI_DAQmx/models/generate_subclasses.py</code></p>\n<p>The boards I tested were: PXIe-6361, PXIe-6738, PXIe-6535 (quantum_gas_microscope running Python 2) and PCIe-6363, PCIe-6733 (monashspinor running Python 2 and 3).</p>\n<p>I\u2019ve fixed a bug which prevented shots from executing when a board supporting analog input had no acquisitions requested (see <a href=\"#!/labscript_suite/labscript_devices/commits/e9e6bfc\" rel=\"nofollow\" class=\"ap-connect-link\">e9e6bfc</a> and <a href=\"#!/labscript_suite/labscript_devices/commits/4003ba4\" rel=\"nofollow\" class=\"ap-connect-link\">4003ba4</a>).</p>\n<p>Outstanding issues include:</p>\n<ul>\n<li>Had to manually decrease <code>max_AO_sample_rate</code> on the PXIe-6738 from 1 MS/s to 400 kS/s.</li>\n<li>\n<p>When configuring DO channels in <code>setup_manual_mode_tasks</code> of <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript_devices/pull-requests/56/universal-ni-daqmx-support/diff#LNI_DAQmx/blacs_workers.pyT107\" rel=\"nofollow\">blacs_workers.py</a>, including <code>'/&lt;MAX_name&gt;/port1/line0:7'</code> in the call to <code>DO_task.CreateDOChan</code> caused the subsequent call to <code>DO_task.WriteDigitalLines</code> in <code>program_manual</code> to fail with:<br />\n<code>InvalidDigDataWriteError: Attempted writing digital data that is not supported.</code></p>\n<p><code>Data: 99</code></p>\n<p><code>Supported Values: 0, 1</code></p>\n<p><code>Task Name: _unnamedTask&lt;1&gt;</code></p>\n<p><code>Status Code: -200562</code></p>\n<p>Some observations:</p>\n<ul>\n<li><code>DO_data</code> is a list of 10 zeros (uint8), corresponding to the 2 lines on port0 and 8 lines on port1.</li>\n<li>\n<p>This code works on the other cards tested, even when:</p>\n<ul>\n<li>some ports are static; and/or</li>\n<li>not all ports have the same number of lines, e.g. the PXIe-6535 which has 8+8+8+8+6 lines across port 0-4; and/or</li>\n<li>used for PFI lines. (This confuses me, since some of these are inputs, e.g. <code>clock_terminal</code>.)</li>\n</ul>\n</li>\n<li>\n<p>Calling <code>DO_task.CreateDOChan</code> with only the first port <code>'/&lt;MAX_name&gt;/port0/line0:1'</code> works (using a hard-coded conditional), even when using the list of 10 zeros for the value of <code>DO_data</code>.</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Waits don't work (at least not as configured with the PCIe-6363 on monashspinor). The shot fails to complete, with the PCIe-6363 device tab stuck on <code>transition_to_manual</code> (<code>acquisiton_worker</code>). I\u2019ll debug this further another day.</p>\n</li>\n</ul>\n<p>This is a really great bit of development!</p>", "type": "rendered"}, "created_on": "2018-11-27T10:46:19.504578+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": "2018-11-27T20:43:23.894492+00:00", "type": "pullrequest_comment", "id": 83671312}