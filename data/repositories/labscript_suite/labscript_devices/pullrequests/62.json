{"rendered": {"description": {"raw": "Adds the ability to control the \u201cphase reset\u201d line for each DDS on a pulseblaster to resolve issue #27. See Table 4 \\(page 15\\) of the SpinCore PulseBlaster DDS Model DDS-II-300 USB Owner\u2019s Manual for a description of the phase\\_reset flag.\r\n\r\nA 'phase\\_reset' digital quantity is automatically generated for each pulseblaster DDS, and convenience functions 'hold\\_phase' and 'release\\_phase' are hacked on to these DDS decice instances.\r\n\r\nNote that my first attempt at getting this running was to use a separate digital output device \\(see first two commits, code at this point is functional and tested on hardware\\), however given that this \u201cdevice\u201d is a property of a DDS, I feel as though it is more appropriate to add it in a similar way to the internal gate control.\r\n\r\nI\u2019m happy to make changes, particularly regarding the convenience function names, implementation and existence in the first place \\(I recall there was a discussion a while ago as to whether the DDS gate really needs the enable/disable functions\\).\r\n\r\nThis has been tested in a basic experiment with a single DDS on a PulseBlaster DDS-II-300 USB. The extra instructions are generated in the PULSE\\_PROGRAM \\(where we had previously hard coded 0\u2019s\\), and rf pulses are observed on an oscilloscope to become phase stable when an appropriate phase hold is applied and released before the pulse.", "markup": "markdown", "html": "<p>Adds the ability to control the \u201cphase reset\u201d line for each DDS on a pulseblaster to resolve issue <a href=\"#!/labscript_suite/labscript_devices/issues/27/pulseblaster-phase-resets\" rel=\"nofollow\" title=\"Pulseblaster phase resets\" class=\"ap-connect-link\"><s>#27</s></a>. See Table 4 (page 15) of the SpinCore PulseBlaster DDS Model DDS-II-300 USB Owner\u2019s Manual for a description of the phase_reset flag.</p>\n<p>A 'phase_reset' digital quantity is automatically generated for each pulseblaster DDS, and convenience functions 'hold_phase' and 'release_phase' are hacked on to these DDS decice instances.</p>\n<p>Note that my first attempt at getting this running was to use a separate digital output device (see first two commits, code at this point is functional and tested on hardware), however given that this \u201cdevice\u201d is a property of a DDS, I feel as though it is more appropriate to add it in a similar way to the internal gate control.</p>\n<p>I\u2019m happy to make changes, particularly regarding the convenience function names, implementation and existence in the first place (I recall there was a discussion a while ago as to whether the DDS gate really needs the enable/disable functions).</p>\n<p>This has been tested in a basic experiment with a single DDS on a PulseBlaster DDS-II-300 USB. The extra instructions are generated in the PULSE_PROGRAM (where we had previously hard coded 0\u2019s), and rf pulses are observed on an oscilloscope to become phase stable when an appropriate phase hold is applied and released before the pulse.</p>", "type": "rendered"}, "title": {"raw": "Pulseblaster phase resets", "markup": "markdown", "html": "<p>Pulseblaster phase resets</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Adds the ability to control the \u201cphase reset\u201d line for each DDS on a pulseblaster to resolve issue #27. See Table 4 \\(page 15\\) of the SpinCore PulseBlaster DDS Model DDS-II-300 USB Owner\u2019s Manual for a description of the phase\\_reset flag.\r\n\r\nA 'phase\\_reset' digital quantity is automatically generated for each pulseblaster DDS, and convenience functions 'hold\\_phase' and 'release\\_phase' are hacked on to these DDS decice instances.\r\n\r\nNote that my first attempt at getting this running was to use a separate digital output device \\(see first two commits, code at this point is functional and tested on hardware\\), however given that this \u201cdevice\u201d is a property of a DDS, I feel as though it is more appropriate to add it in a similar way to the internal gate control.\r\n\r\nI\u2019m happy to make changes, particularly regarding the convenience function names, implementation and existence in the first place \\(I recall there was a discussion a while ago as to whether the DDS gate really needs the enable/disable functions\\).\r\n\r\nThis has been tested in a basic experiment with a single DDS on a PulseBlaster DDS-II-300 USB. The extra instructions are generated in the PULSE\\_PROGRAM \\(where we had previously hard coded 0\u2019s\\), and rf pulses are observed on an oscilloscope to become phase stable when an appropriate phase hold is applied and released before the pulse.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/pullrequests/62/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/diffstat/labscript_suite/labscript_devices:21cf797f0b6c%0D49bf56369af4?from_pullrequest_id=62"}, "commits": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/62/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/62.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/62/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/pullrequests/62/merge"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/62"}, "activity": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/62/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/diff/labscript_suite/labscript_devices:21cf797f0b6c%0D49bf56369af4?from_pullrequest_id=62"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/pullrequests/62/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/62/statuses_page=1.json"}}, "title": "Pulseblaster phase resets", "close_source_branch": true, "reviewers": [{"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}], "id": 62, "destination": {"commit": {"hash": "49bf56369af4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/commit/49bf56369af4.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/commits/49bf56369af4"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "branch": {"name": "default"}}, "created_on": "2019-03-28T06:10:24.851332+00:00", "summary": {"raw": "Adds the ability to control the \u201cphase reset\u201d line for each DDS on a pulseblaster to resolve issue #27. See Table 4 \\(page 15\\) of the SpinCore PulseBlaster DDS Model DDS-II-300 USB Owner\u2019s Manual for a description of the phase\\_reset flag.\r\n\r\nA 'phase\\_reset' digital quantity is automatically generated for each pulseblaster DDS, and convenience functions 'hold\\_phase' and 'release\\_phase' are hacked on to these DDS decice instances.\r\n\r\nNote that my first attempt at getting this running was to use a separate digital output device \\(see first two commits, code at this point is functional and tested on hardware\\), however given that this \u201cdevice\u201d is a property of a DDS, I feel as though it is more appropriate to add it in a similar way to the internal gate control.\r\n\r\nI\u2019m happy to make changes, particularly regarding the convenience function names, implementation and existence in the first place \\(I recall there was a discussion a while ago as to whether the DDS gate really needs the enable/disable functions\\).\r\n\r\nThis has been tested in a basic experiment with a single DDS on a PulseBlaster DDS-II-300 USB. The extra instructions are generated in the PULSE\\_PROGRAM \\(where we had previously hard coded 0\u2019s\\), and rf pulses are observed on an oscilloscope to become phase stable when an appropriate phase hold is applied and released before the pulse.", "markup": "markdown", "html": "<p>Adds the ability to control the \u201cphase reset\u201d line for each DDS on a pulseblaster to resolve issue <a href=\"#!/labscript_suite/labscript_devices/issues/27/pulseblaster-phase-resets\" rel=\"nofollow\" title=\"Pulseblaster phase resets\" class=\"ap-connect-link\"><s>#27</s></a>. See Table 4 (page 15) of the SpinCore PulseBlaster DDS Model DDS-II-300 USB Owner\u2019s Manual for a description of the phase_reset flag.</p>\n<p>A 'phase_reset' digital quantity is automatically generated for each pulseblaster DDS, and convenience functions 'hold_phase' and 'release_phase' are hacked on to these DDS decice instances.</p>\n<p>Note that my first attempt at getting this running was to use a separate digital output device (see first two commits, code at this point is functional and tested on hardware), however given that this \u201cdevice\u201d is a property of a DDS, I feel as though it is more appropriate to add it in a similar way to the internal gate control.</p>\n<p>I\u2019m happy to make changes, particularly regarding the convenience function names, implementation and existence in the first place (I recall there was a discussion a while ago as to whether the DDS gate really needs the enable/disable functions).</p>\n<p>This has been tested in a basic experiment with a single DDS on a PulseBlaster DDS-II-300 USB. The extra instructions are generated in the PULSE_PROGRAM (where we had previously hard coded 0\u2019s), and rf pulses are observed on an oscilloscope to become phase stable when an appropriate phase hold is applied and released before the pulse.</p>", "type": "rendered"}, "source": {"commit": {"hash": "ce50da70f476", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/labscript_devices/commit/ce50da70f476"}, "html": {"href": "#!/monashkrb/labscript_devices/commits/ce50da70f476"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/labscript_devices"}, "html": {"href": "#!/monashkrb/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{fe20fdca-6c41-4845-89e9-f15ba4c9bc57}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "monashkrb/labscript_devices", "uuid": "{fe20fdca-6c41-4845-89e9-f15ba4c9bc57}"}, "branch": {"name": "pb_phase_resets"}}, "comment_count": 8, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2019-05-20T04:02:13.524017+00:00", "type": "participant", "approved": false, "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}}, {"role": "PARTICIPANT", "participated_on": "2019-04-04T00:41:39.956055+00:00", "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}}, {"role": "REVIEWER", "participated_on": "2019-05-01T01:28:10.762436+00:00", "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"role": "REVIEWER", "participated_on": "2019-05-20T13:58:48.829326+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}], "reason": "", "updated_on": "2019-05-20T13:58:57.010394+00:00", "author": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "merge_commit": {"hash": "21cf797f0b6c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/commit/21cf797f0b6c.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/commits/21cf797f0b6c"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}