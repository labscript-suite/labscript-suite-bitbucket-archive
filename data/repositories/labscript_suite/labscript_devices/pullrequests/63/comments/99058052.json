{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/63/comments/99058052.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/63/_/diff#comment-99058052"}}, "parent": {"id": 98969650, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/63/comments/98969650.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/63/_/diff#comment-98969650"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 63, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/63.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/63"}}, "title": "IMAQdxCamera"}, "content": {"raw": "Ah, I forgot to reply about timeouts.\n\nFor the case of a successful shot  where all expected images are acquired, the end of the shot is not delayed because the grab\\(\\) function is not called again after the final image is acquired. All a long timeout has the potential to do is get you stuck in that function, but since the loop knows how many images there will be, it doesn\u2019t call the function again so it can\u2019t get stuck. \n\nIf something fails and not all images are acquired, then yes, responding the abort\\(\\) at the end could be delayed by up to the timeout. The timeout is by default 5 seconds, so that is pretty reasonable. If the user doesn\u2019t set it then failed shots will fail soon enough with an error.\n\nIf the user sets the timeout really high, then failed shots will hang with \u2018child process hasn\u2019t responded in x seconds' during `transition_to_manual`. So that\u2019s the only case of an unreasonable hang, but it only happens if they explicitly as for it!", "markup": "markdown", "html": "<p>Ah, I forgot to reply about timeouts.</p>\n<p>For the case of a successful shot  where all expected images are acquired, the end of the shot is not delayed because the grab() function is not called again after the final image is acquired. All a long timeout has the potential to do is get you stuck in that function, but since the loop knows how many images there will be, it doesn\u2019t call the function again so it can\u2019t get stuck. </p>\n<p>If something fails and not all images are acquired, then yes, responding the abort() at the end could be delayed by up to the timeout. The timeout is by default 5 seconds, so that is pretty reasonable. If the user doesn\u2019t set it then failed shots will fail soon enough with an error.</p>\n<p>If the user sets the timeout really high, then failed shots will hang with \u2018child process hasn\u2019t responded in x seconds' during <code>transition_to_manual</code>. So that\u2019s the only case of an unreasonable hang, but it only happens if they explicitly as for it!</p>", "type": "rendered"}, "created_on": "2019-04-17T01:40:47.716980+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-04-17T01:40:47.728177+00:00", "type": "pullrequest_comment", "id": 99058052}