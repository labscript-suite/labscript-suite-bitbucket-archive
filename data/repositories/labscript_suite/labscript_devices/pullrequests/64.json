{"rendered": {"description": {"raw": "Have DummyIntermediateDevice call parent class's generate_code so that any child\r\ndevices will have their generate_code methods called.\r\nRename parent argument to parent_device in line with other labscript devices.\r\n\r\nI'm using this to test the IMAQdxCamera: see [here](#!/cbillington/labscript_devices/src/IMAQdxCamera/IMAQdxCamera/testing/test.py). The IMAQdxCamera has a 'mock' connection table property that makes the BLACS worker return fake images so you can test without a real camera. This only works with a dummy pseudoclock and a dummy intermediate device though, if the dummy intermediate device calls the camera's generate_code method, hence this change.", "markup": "markdown", "html": "<p>Have DummyIntermediateDevice call parent class's generate_code so that any child\ndevices will have their generate_code methods called.\nRename parent argument to parent_device in line with other labscript devices.</p>\n<p>I'm using this to test the IMAQdxCamera: see <a data-is-external-link=\"true\" href=\"#!/cbillington/labscript_devices/src/IMAQdxCamera/IMAQdxCamera/testing/test.py\" rel=\"nofollow\">here</a>. The IMAQdxCamera has a 'mock' connection table property that makes the BLACS worker return fake images so you can test without a real camera. This only works with a dummy pseudoclock and a dummy intermediate device though, if the dummy intermediate device calls the camera's generate_code method, hence this change.</p>", "type": "rendered"}, "title": {"raw": "minor DummyIntermediateDevice changes", "markup": "markdown", "html": "<p>minor DummyIntermediateDevice changes</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Have DummyIntermediateDevice call parent class's generate_code so that any child\r\ndevices will have their generate_code methods called.\r\nRename parent argument to parent_device in line with other labscript devices.\r\n\r\nI'm using this to test the IMAQdxCamera: see [here](#!/cbillington/labscript_devices/src/IMAQdxCamera/IMAQdxCamera/testing/test.py). The IMAQdxCamera has a 'mock' connection table property that makes the BLACS worker return fake images so you can test without a real camera. This only works with a dummy pseudoclock and a dummy intermediate device though, if the dummy intermediate device calls the camera's generate_code method, hence this change.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/pullrequests/64/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/diffstat/labscript_suite/labscript_devices:19038d14e6cd%0D1e773740acf4?from_pullrequest_id=64"}, "commits": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/64/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/64.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/64/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/pullrequests/64/merge"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/64"}, "activity": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/64/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/diff/labscript_suite/labscript_devices:19038d14e6cd%0D1e773740acf4?from_pullrequest_id=64"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/pullrequests/64/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/64/statuses_page=1.json"}}, "title": "minor DummyIntermediateDevice changes", "close_source_branch": true, "reviewers": [{"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}], "id": 64, "destination": {"commit": {"hash": "1e773740acf4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/commit/1e773740acf4.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/commits/1e773740acf4"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "branch": {"name": "default"}}, "created_on": "2019-04-25T20:10:55.605595+00:00", "summary": {"raw": "Have DummyIntermediateDevice call parent class's generate_code so that any child\r\ndevices will have their generate_code methods called.\r\nRename parent argument to parent_device in line with other labscript devices.\r\n\r\nI'm using this to test the IMAQdxCamera: see [here](#!/cbillington/labscript_devices/src/IMAQdxCamera/IMAQdxCamera/testing/test.py). The IMAQdxCamera has a 'mock' connection table property that makes the BLACS worker return fake images so you can test without a real camera. This only works with a dummy pseudoclock and a dummy intermediate device though, if the dummy intermediate device calls the camera's generate_code method, hence this change.", "markup": "markdown", "html": "<p>Have DummyIntermediateDevice call parent class's generate_code so that any child\ndevices will have their generate_code methods called.\nRename parent argument to parent_device in line with other labscript devices.</p>\n<p>I'm using this to test the IMAQdxCamera: see <a data-is-external-link=\"true\" href=\"#!/cbillington/labscript_devices/src/IMAQdxCamera/IMAQdxCamera/testing/test.py\" rel=\"nofollow\">here</a>. The IMAQdxCamera has a 'mock' connection table property that makes the BLACS worker return fake images so you can test without a real camera. This only works with a dummy pseudoclock and a dummy intermediate device though, if the dummy intermediate device calls the camera's generate_code method, hence this change.</p>", "type": "rendered"}, "source": {"commit": {"hash": "a7cc8a8488e3", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_devices/commit/a7cc8a8488e3"}, "html": {"href": "#!/cbillington/labscript_devices/commits/a7cc8a8488e3"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_devices"}, "html": {"href": "#!/cbillington/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a2db461e-24e6-495e-a15d-8b80435f721e}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cbillington/labscript_devices", "uuid": "{a2db461e-24e6-495e-a15d-8b80435f721e}"}, "branch": {"name": "DummyIntermediateDevice"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, {"role": "PARTICIPANT", "participated_on": "2019-04-27T18:13:14.201483+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}}], "reason": "", "updated_on": "2019-04-28T15:25:58.804422+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "19038d14e6cd", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/commit/19038d14e6cd.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/commits/19038d14e6cd"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}