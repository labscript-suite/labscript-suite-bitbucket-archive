{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/69/comments/102875716.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/69/_/diff#comment-102875716"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 69, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/69.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/69"}}, "title": "Pylon Backend for IMAQdxCamera class"}, "content": {"raw": "In getting this together, I came across a few unknowns I\u2019d like to ask about.\n\n1. Before I settled on the current method for getting continuous frames \\(which works fine\\), I tried another grab strategy where the camera produces frames as fast as possible and just updates the same output buffer which can be read or ignored depending on processing speed. This seemed fine in principle, but when the rate exceeded ~20fps the BLACS tab would completely lock up. Further testing seems to show the tab blocks all signals \\(including stopping continuous\\) while the continuous\\_loop\\(\\) method proceeds to grab and send images to parent at high speed. The docstring for \\_send\\_image\\_to\\_parent claims it is blocking, but that doesn\u2019t seem to be the case. Am I missing something? Which thread is it supposed to be blocking?\n2. During testing, I obviously forgot to connect the trigger line for the first buffered shot and transition\\_to\\_manual timed out. This results in a seemingly unrelated error pop-up, the correct error shown in the tab, and BLACS getting stuck in \u201cError in transition to manual, Queue Paused\u201d mode where clearing the error and un-pausing does NOT resume shot execution. I\u2019m fairly certain it is not a bug with the present code, but I\u2019m not sure where the issue lies.\n\n    1. Here is the error. \n    \n\n![](data/bitbucket.org/repo/6AK7EM/images/1094827463-image.png)\nAnd here is the BLACS state after re-setting the offending camera BLACS tab.\n\n![](data/bitbucket.org/repo/6AK7EM/images/949077612-image.png)\n", "markup": "markdown", "html": "<p>In getting this together, I came across a few unknowns I\u2019d like to ask about.</p>\n<ol>\n<li>Before I settled on the current method for getting continuous frames (which works fine), I tried another grab strategy where the camera produces frames as fast as possible and just updates the same output buffer which can be read or ignored depending on processing speed. This seemed fine in principle, but when the rate exceeded ~20fps the BLACS tab would completely lock up. Further testing seems to show the tab blocks all signals (including stopping continuous) while the continuous_loop() method proceeds to grab and send images to parent at high speed. The docstring for _send_image_to_parent claims it is blocking, but that doesn\u2019t seem to be the case. Am I missing something? Which thread is it supposed to be blocking?</li>\n<li>\n<p>During testing, I obviously forgot to connect the trigger line for the first buffered shot and transition_to_manual timed out. This results in a seemingly unrelated error pop-up, the correct error shown in the tab, and BLACS getting stuck in \u201cError in transition to manual, Queue Paused\u201d mode where clearing the error and un-pausing does NOT resume shot execution. I\u2019m fairly certain it is not a bug with the present code, but I\u2019m not sure where the issue lies.</p>\n<ol>\n<li>Here is the error. </li>\n</ol>\n</li>\n</ol>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/6AK7EM/images/1094827463-image.png\" />\nAnd here is the BLACS state after re-setting the offending camera BLACS tab.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/6AK7EM/images/949077612-image.png\" /></p>", "type": "rendered"}, "created_on": "2019-05-21T20:44:44.685302+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2019-05-21T20:44:45.017615+00:00", "type": "pullrequest_comment", "id": 102875716}