{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/106200006.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-106200006"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71"}}, "title": "FlyCapture2 backend for IMAQdxCamera driver"}, "content": {"raw": "The hack we use elsewhere to store nested dictionaries in h5 files is to encode them as JSON. But then the code reading them has to know to decode them that way. I suppose we could have lyse decode any attributes it finds as JSON into the appropriate datatype.\n\nThe JSON encoding and decoding functions are in `labscript_utils.properties`. Any attributes that are encoded as JSON have a prefix marking them as such, so code wanting to read the attributes can do:\n\n```python\nfrom labscript_utils.properties import is_json, deserialise\nattrs = {name: deserialise(value) if is_json(value) else value for name, value in group.attrs.items()}\n```\n\nI should add two functions to `labscript_utils.properties` that get/set attributes with optional JSON serialisation on groups in general rather than device properties/connection table properties specifically, then the IMAQdxCamera can use one of theose functions to write more general objects to h5 attributes, and lyse can use the other function to read them. The way the code in  `labscript_utils.properties` writes device properties etc, it uses hdf5 datatypes if possible, only using JSON if there is no h5 type. So it is backward compatible to turn on the option to save more complex datatypes this way.", "markup": "markdown", "html": "<p>The hack we use elsewhere to store nested dictionaries in h5 files is to encode them as JSON. But then the code reading them has to know to decode them that way. I suppose we could have lyse decode any attributes it finds as JSON into the appropriate datatype.</p>\n<p>The JSON encoding and decoding functions are in <code>labscript_utils.properties</code>. Any attributes that are encoded as JSON have a prefix marking them as such, so code wanting to read the attributes can do:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">labscript_utils.properties</span> <span class=\"kn\">import</span> <span class=\"n\">is_json</span><span class=\"p\">,</span> <span class=\"n\">deserialise</span>\n<span class=\"n\">attrs</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">deserialise</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">is_json</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"n\">value</span> <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">group</span><span class=\"o\">.</span><span class=\"n\">attrs</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()}</span>\n</pre></div>\n\n\n<p>I should add two functions to <code>labscript_utils.properties</code> that get/set attributes with optional JSON serialisation on groups in general rather than device properties/connection table properties specifically, then the IMAQdxCamera can use one of theose functions to write more general objects to h5 attributes, and lyse can use the other function to read them. The way the code in  <code>labscript_utils.properties</code> writes device properties etc, it uses hdf5 datatypes if possible, only using JSON if there is no h5 type. So it is backward compatible to turn on the option to save more complex datatypes this way.</p>", "type": "rendered"}, "created_on": "2019-06-18T22:19:18.827444+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-06-18T22:21:13.041346+00:00", "type": "pullrequest_comment", "id": 106200006}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/106355178.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/diff/dihm/labscript_devices:f2d1bb986d70..1ccbd1e90c83?path=FlyCapture2Camera%2Fblacs_workers.py"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-106355178"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71"}}, "title": "FlyCapture2 backend for IMAQdxCamera driver"}, "content": {"raw": "This is a TypeError since it is `raise <some string>` - should be `raise ValueError(msg)` or similar ", "markup": "markdown", "html": "<p>This is a TypeError since it is <code>raise &lt;some string&gt;</code> - should be <code>raise ValueError(msg)</code> or similar </p>", "type": "rendered"}, "created_on": "2019-06-19T18:05:58.534963+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "inline": {"to": 259, "from": null, "path": "FlyCapture2Camera/blacs_workers.py"}, "updated_on": "2019-06-19T18:05:58.545721+00:00", "type": "pullrequest_comment", "id": 106355178}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/106355323.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/diff/dihm/labscript_devices:f2d1bb986d70..1ccbd1e90c83?path=FlyCapture2Camera%2F__init__.py"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-106355323"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71"}}, "title": "FlyCapture2 backend for IMAQdxCamera driver"}, "content": {"raw": "Ideally this error checking would be in the interface class in the BLACS worker file, since that way you would not need to have PyCapture2 installed on the computer running runmanager/labscript/blacs GUI, and would only need to install it on the computer running the worker process. ", "markup": "markdown", "html": "<p>Ideally this error checking would be in the interface class in the BLACS worker file, since that way you would not need to have PyCapture2 installed on the computer running runmanager/labscript/blacs GUI, and would only need to install it on the computer running the worker process. </p>", "type": "rendered"}, "created_on": "2019-06-19T18:07:21.359138+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "inline": {"to": 6, "from": null, "path": "FlyCapture2Camera/__init__.py"}, "updated_on": "2019-06-19T18:07:21.367429+00:00", "type": "pullrequest_comment", "id": 106355323}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/106356317.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-106356317"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71"}}, "title": "FlyCapture2 backend for IMAQdxCamera driver"}, "content": {"raw": "The code is looking good! Looks like perhaps I should change the `get_attributes_as_dict` method of the IMAQdxCamera BLACS worker, since you have had to override it twice and so it sounds like IMAQdxCamera is the exception rather than the norm. So I might look into that.\n\nI'll add the extra two JSON functions to labscript_utils.properties and to lyse's reading of the attributes, then you can add a version check to this code to require that version of labscript_utils. After that, I'll be happy to merge when you are!", "markup": "markdown", "html": "<p>The code is looking good! Looks like perhaps I should change the <code>get_attributes_as_dict</code> method of the IMAQdxCamera BLACS worker, since you have had to override it twice and so it sounds like IMAQdxCamera is the exception rather than the norm. So I might look into that.</p>\n<p>I'll add the extra two JSON functions to labscript_utils.properties and to lyse's reading of the attributes, then you can add a version check to this code to require that version of labscript_utils. After that, I'll be happy to merge when you are!</p>", "type": "rendered"}, "created_on": "2019-06-19T18:15:30.297215+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-06-19T18:15:30.310009+00:00", "type": "pullrequest_comment", "id": 106356317}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/106384785.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-106384785"}}, "parent": {"id": 106356317, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/106356317.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-106356317"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71"}}, "title": "FlyCapture2 backend for IMAQdxCamera driver"}, "content": {"raw": "Sounds good for the JSON functions. I knew I needed an expert opinion.\n\nAs for `get_attributes_as_dict`, this API is partially conductive to the IMAQdx approach of getting names then values \\(in fact, that is essentially what I have to do\\). I only didn\u2019t do it this time because I started from the PylonCamera and the name organization is more complicated than just a straight array so I figured I would bundle them together to keep things more clear. That said, I\u2019m open to being persuaded to moving this to the IMAQdx approach.", "markup": "markdown", "html": "<p>Sounds good for the JSON functions. I knew I needed an expert opinion.</p>\n<p>As for <code>get_attributes_as_dict</code>, this API is partially conductive to the IMAQdx approach of getting names then values (in fact, that is essentially what I have to do). I only didn\u2019t do it this time because I started from the PylonCamera and the name organization is more complicated than just a straight array so I figured I would bundle them together to keep things more clear. That said, I\u2019m open to being persuaded to moving this to the IMAQdx approach.</p>", "type": "rendered"}, "created_on": "2019-06-19T23:07:47.932721+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2019-06-19T23:07:48.497539+00:00", "type": "pullrequest_comment", "id": 106384785}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/106385092.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-106385092"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71"}}, "title": "FlyCapture2 backend for IMAQdxCamera driver"}, "content": {"raw": "In testing this, I was able to reproduce one of the bugs I saw in PR #69, namely the temp.h5 file issue. Basically, if I sent a trigger too fast and the camera missed it and timed out I would get this error when trying to transition back to manual. I uncommented the raise and got a more descriptive error:\n\n![](data/bitbucket.org/repo/6AK7EM/images/3849789154-image.png)\nFurther testing revealed that this error is not present when blacs is started via command line \\( \\`python -m blacs\\` \\). Best guess is that because temp.h5 is not a fully qualified path, when run from the Windows shortcut it attempts to open it in a protected space and gets rejected. Providing a safer path will probably fix this. That said, the queue locking up is still a thing, but maybe that is not a high priority to chase down.", "markup": "markdown", "html": "<p>In testing this, I was able to reproduce one of the bugs I saw in <a href=\"#!/labscript_suite/labscript_devices/pull-requests/69/pylon-backend-for-imaqdxcamera-class\" rel=\"nofollow\" class=\"ap-connect-link\">PR #69</a>, namely the temp.h5 file issue. Basically, if I sent a trigger too fast and the camera missed it and timed out I would get this error when trying to transition back to manual. I uncommented the raise and got a more descriptive error:</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/6AK7EM/images/3849789154-image.png\" />\nFurther testing revealed that this error is not present when blacs is started via command line ( `python -m blacs` ). Best guess is that because temp.h5 is not a fully qualified path, when run from the Windows shortcut it attempts to open it in a protected space and gets rejected. Providing a safer path will probably fix this. That said, the queue locking up is still a thing, but maybe that is not a high priority to chase down.</p>", "type": "rendered"}, "created_on": "2019-06-19T23:14:03.578173+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2019-06-19T23:14:03.808361+00:00", "type": "pullrequest_comment", "id": 106385092}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/106385627.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-106385627"}}, "parent": {"id": 106385092, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/106385092.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-106385092"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71"}}, "title": "FlyCapture2 backend for IMAQdxCamera driver"}, "content": {"raw": "Ah, fantastic, good catch. Yes, that's definitely it - BLACS is supposed to be able to run from any directory, and at one point we converted all paths in it to absolute paths to allow this. But we missed that one. Will use the python `tempfile` module to use the proper temporary directory on the system to store the file in.", "markup": "markdown", "html": "<p>Ah, fantastic, good catch. Yes, that's definitely it - BLACS is supposed to be able to run from any directory, and at one point we converted all paths in it to absolute paths to allow this. But we missed that one. Will use the python <code>tempfile</code> module to use the proper temporary directory on the system to store the file in.</p>", "type": "rendered"}, "created_on": "2019-06-19T23:24:59.709904+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-06-19T23:25:00.006889+00:00", "type": "pullrequest_comment", "id": 106385627}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/106385680.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-106385680"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71"}}, "title": "FlyCapture2 backend for IMAQdxCamera driver"}, "content": {"raw": "One last \u201cbug\u201d found while testing this. When using the pyqtgraph window to do an FFT analysis of an ROI integration trace, the following error occurs:\n\n![](data/bitbucket.org/repo/6AK7EM/images/199121516-image.png)\n\u200c\n\nThis turned out to be easy to [track down](https://github.com/pyqtgraph/pyqtgraph/issues/534) as an incompatibility with Python 3, the fix is harder to get because apparently pyqtgraph hasn\u2019t had a release to pip/conda since 2016. What is the recommended way forward on this? Just have people use the github repo directly?", "markup": "markdown", "html": "<p>One last \u201cbug\u201d found while testing this. When using the pyqtgraph window to do an FFT analysis of an ROI integration trace, the following error occurs:</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/6AK7EM/images/199121516-image.png\" />\n\u200c</p>\n<p>This turned out to be easy to <a data-is-external-link=\"true\" href=\"https://github.com/pyqtgraph/pyqtgraph/issues/534\" rel=\"nofollow\">track down</a> as an incompatibility with Python 3, the fix is harder to get because apparently pyqtgraph hasn\u2019t had a release to pip/conda since 2016. What is the recommended way forward on this? Just have people use the github repo directly?</p>", "type": "rendered"}, "created_on": "2019-06-19T23:26:08.311174+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2019-06-19T23:26:08.559432+00:00", "type": "pullrequest_comment", "id": 106385680}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/106398144.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-106398144"}}, "parent": {"id": 106385680, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/106385680.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-106385680"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71"}}, "title": "FlyCapture2 backend for IMAQdxCamera driver"}, "content": {"raw": "There are many bugs like this in pyqtgraph that I've come across, most of them look like pyqtgraph not keeping up with changes in Python, numpy, and PyQt. If you want to use the FFT functionality for now, then I would go ahead and use it off github - pip can be directed to install things straight off github so that it is still managed by pip. In the longer run, it looks like there has been a flurry of activity with pyqtgraph in the last month or so, pull requests are getting merged and issues getting closed. I suspect a new release will be made within the next few months (there is a [post on the mailing list](https://groups.google.com/forum/#!topic/pyqtgraph/FroKuuar_EM) about an upcoming release, though it is a few months old. But the recent activity makes me think it's actually happening). So I would just wait and then when the new version is released and hits conda, I'll update IMAQdxCamera's BLACS tab to depend on the new version with all the bugfixes.", "markup": "markdown", "html": "<p>There are many bugs like this in pyqtgraph that I've come across, most of them look like pyqtgraph not keeping up with changes in Python, numpy, and PyQt. If you want to use the FFT functionality for now, then I would go ahead and use it off github - pip can be directed to install things straight off github so that it is still managed by pip. In the longer run, it looks like there has been a flurry of activity with pyqtgraph in the last month or so, pull requests are getting merged and issues getting closed. I suspect a new release will be made within the next few months (there is a <a data-is-external-link=\"true\" href=\"https://groups.google.com/forum/#!topic/pyqtgraph/FroKuuar_EM\" rel=\"nofollow\">post on the mailing list</a> about an upcoming release, though it is a few months old. But the recent activity makes me think it's actually happening). So I would just wait and then when the new version is released and hits conda, I'll update IMAQdxCamera's BLACS tab to depend on the new version with all the bugfixes.</p>", "type": "rendered"}, "created_on": "2019-06-20T04:04:16.324192+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-06-20T04:04:16.418699+00:00", "type": "pullrequest_comment", "id": 106398144}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/106860545.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-106860545"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71"}}, "title": "FlyCapture2 backend for IMAQdxCamera driver"}, "content": {"raw": "Found a couple fairly serious bugs in the attribute setting code that required a rework.\n\nWhile testing, I noticed that transitioning to buffered involves a complete reset of all camera attributes for each shot. With my test configuration, that takes about 200ms which is a bit ridiculous since only one setting is actually changing between buffered and manual mode.  I suspect this kind of slowdown is going to be common to all the camera classes, so what would you think about modifying the IMAQdx camera to have three settings dictionaries: camera attributes \\(for common settings\\), manual mode camera attributes \\(for manual mode\\), and buffered mode camera attributes \\(for buffered mode\\)? Then it would be easy for the user to tune what settings get set when and cut down on unnecessary writes.", "markup": "markdown", "html": "<p>Found a couple fairly serious bugs in the attribute setting code that required a rework.</p>\n<p>While testing, I noticed that transitioning to buffered involves a complete reset of all camera attributes for each shot. With my test configuration, that takes about 200ms which is a bit ridiculous since only one setting is actually changing between buffered and manual mode.  I suspect this kind of slowdown is going to be common to all the camera classes, so what would you think about modifying the IMAQdx camera to have three settings dictionaries: camera attributes (for common settings), manual mode camera attributes (for manual mode), and buffered mode camera attributes (for buffered mode)? Then it would be easy for the user to tune what settings get set when and cut down on unnecessary writes.</p>", "type": "rendered"}, "created_on": "2019-06-24T21:59:49.196539+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2019-06-24T21:59:49.503832+00:00", "type": "pullrequest_comment", "id": 106860545}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/106860896.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-106860896"}}, "parent": {"id": 106860545, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/106860545.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-106860545"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71"}}, "title": "FlyCapture2 backend for IMAQdxCamera driver"}, "content": {"raw": "Sounds like we need to consider the attributes as instructions to be cached and subject to 'smart programming', so only the ones that change are actually sent to the API. I can modify the IMAQdxCamera to do this, likely without any changes needed in the subclasses.\n\nI think this is better than adding an extra dictionary since in principle the camera attributes can change shot to shot, and adding an extra dictionary would imply some could not change without a recompile and restart. Also using 'smart programming' should be pretty easy.", "markup": "markdown", "html": "<p>Sounds like we need to consider the attributes as instructions to be cached and subject to 'smart programming', so only the ones that change are actually sent to the API. I can modify the IMAQdxCamera to do this, likely without any changes needed in the subclasses.</p>\n<p>I think this is better than adding an extra dictionary since in principle the camera attributes can change shot to shot, and adding an extra dictionary would imply some could not change without a recompile and restart. Also using 'smart programming' should be pretty easy.</p>", "type": "rendered"}, "created_on": "2019-06-24T22:05:18.559169+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-06-24T22:05:46.550992+00:00", "type": "pullrequest_comment", "id": 106860896}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/106928084.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-106928084"}}, "parent": {"id": 106860896, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/106860896.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-106860896"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71"}}, "title": "FlyCapture2 backend for IMAQdxCamera driver"}, "content": {"raw": "Sounds good to me. I don\u2019t usually use cameras that way so I didn\u2019t think of that but there certainly isn\u2019t any reason why not. Smart caching is more consistent with other devices as well.", "markup": "markdown", "html": "<p>Sounds good to me. I don\u2019t usually use cameras that way so I didn\u2019t think of that but there certainly isn\u2019t any reason why not. Smart caching is more consistent with other devices as well.</p>", "type": "rendered"}, "created_on": "2019-06-25T09:50:14.635048+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2019-06-25T09:50:14.923889+00:00", "type": "pullrequest_comment", "id": 106928084}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/107683075.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-107683075"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71"}}, "title": "FlyCapture2 backend for IMAQdxCamera driver"}, "content": {"raw": "OK, we now have in the IMAQdxCamera the ability to save nested dicts as attributes, and have smart programming to avoid setting attributes that are already set. You don't need to add a version check or anything since it is in the same repository.\n\nI'm happy to merge this one whenever you are!\n", "markup": "markdown", "html": "<p>OK, we now have in the IMAQdxCamera the ability to save nested dicts as attributes, and have smart programming to avoid setting attributes that are already set. You don't need to add a version check or anything since it is in the same repository.</p>\n<p>I'm happy to merge this one whenever you are!</p>", "type": "rendered"}, "created_on": "2019-07-01T18:52:09.504967+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-07-01T18:52:09.513313+00:00", "type": "pullrequest_comment", "id": 107683075}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/107699389.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-107699389"}}, "parent": {"id": 107683075, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/107683075.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-107683075"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71"}}, "title": "FlyCapture2 backend for IMAQdxCamera driver"}, "content": {"raw": "I have a couple more tweaks stuck in the lab to add to this PR first, then we should be good to merge.", "markup": "markdown", "html": "<p>I have a couple more tweaks stuck in the lab to add to this PR first, then we should be good to merge.</p>", "type": "rendered"}, "created_on": "2019-07-01T22:07:31.375995+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2019-07-01T22:07:31.651271+00:00", "type": "pullrequest_comment", "id": 107699389}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/107882071.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-107882071"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71"}}, "title": "FlyCapture2 backend for IMAQdxCamera driver"}, "content": {"raw": "OK, that should do it as far as I can tell. Ready to merge.", "markup": "markdown", "html": "<p>OK, that should do it as far as I can tell. Ready to merge.</p>", "type": "rendered"}, "created_on": "2019-07-03T01:24:49.777176+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2019-07-03T01:24:49.895306+00:00", "type": "pullrequest_comment", "id": 107882071}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71/comments/107884275.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71/_/diff#comment-107884275"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/71"}}, "title": "FlyCapture2 backend for IMAQdxCamera driver"}, "content": {"raw": "Merging. Thanks David!", "markup": "markdown", "html": "<p>Merging. Thanks David!</p>", "type": "rendered"}, "created_on": "2019-07-03T02:11:49.550821+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-07-03T02:11:49.561012+00:00", "type": "pullrequest_comment", "id": 107884275}], "page": 1, "size": 16}