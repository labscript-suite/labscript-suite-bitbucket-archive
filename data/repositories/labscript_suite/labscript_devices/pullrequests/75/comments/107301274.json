{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/75/comments/107301274.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/75/_/diff#comment-107301274"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/75.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/75"}}, "title": "RfBlasterPy3 bugfix"}, "content": {"raw": "Thanks Lincoln!\n\nI just backed out the tag. \n\nI am assuming monash-KRb is on Python 2 still , right (otherwise their RFBlasters would have had the same issue)? If so then it wouldn't be great to have the RFBlaster require Python 3 quite yet. Perhaps we can have them test the final commit with Python 2 compatibility, and if all goes well merge that commit into mainline. Then we can merge the rest once KRb is on Python 3. Since nobody else is using RFBlasters in labscript I think this should be fine, otherwise I would not want to break Python 2 compatibility with existing code until Python 2 is EOL at the end of this year. \n\nRequests is not stdlib so we could add it to the installer's list of dependencies, or just not do that since only two labs are using the RFBlaster. Probably need to add to the labscript_devices subfolder spec a way of listing dependencies on a per-device basis since it makes no sense to require dependencies for devices you are are not using. So I guess don't worry about having to do anything with the non-stdlib dependency for now.\n\nCan convert to opaque h5 dtype later - I think this is what the lightcrafter DMD is using to store images:\n\n```python\n        # Apparently you should use np.void for binary data in a h5 file. Then on the way out, we need to use data.tostring() to decode again.\n        out_table = np.void(output.raw_output)\n        grp = self.init_device_group(hdf5_file)\n        grp.create_dataset('IMAGE_TABLE',compression=config.compression,data=out_table)\n```", "markup": "markdown", "html": "<p>Thanks Lincoln!</p>\n<p>I just backed out the tag. </p>\n<p>I am assuming monash-KRb is on Python 2 still , right (otherwise their RFBlasters would have had the same issue)? If so then it wouldn't be great to have the RFBlaster require Python 3 quite yet. Perhaps we can have them test the final commit with Python 2 compatibility, and if all goes well merge that commit into mainline. Then we can merge the rest once KRb is on Python 3. Since nobody else is using RFBlasters in labscript I think this should be fine, otherwise I would not want to break Python 2 compatibility with existing code until Python 2 is EOL at the end of this year. </p>\n<p>Requests is not stdlib so we could add it to the installer's list of dependencies, or just not do that since only two labs are using the RFBlaster. Probably need to add to the labscript_devices subfolder spec a way of listing dependencies on a per-device basis since it makes no sense to require dependencies for devices you are are not using. So I guess don't worry about having to do anything with the non-stdlib dependency for now.</p>\n<p>Can convert to opaque h5 dtype later - I think this is what the lightcrafter DMD is using to store images:</p>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"c1\"># Apparently you should use np.void for binary data in a h5 file. Then on the way out, we need to use data.tostring() to decode again.</span>\n        <span class=\"n\">out_table</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">void</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"o\">.</span><span class=\"n\">raw_output</span><span class=\"p\">)</span>\n        <span class=\"n\">grp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">init_device_group</span><span class=\"p\">(</span><span class=\"n\">hdf5_file</span><span class=\"p\">)</span>\n        <span class=\"n\">grp</span><span class=\"o\">.</span><span class=\"n\">create_dataset</span><span class=\"p\">(</span><span class=\"s1\">&#39;IMAGE_TABLE&#39;</span><span class=\"p\">,</span><span class=\"n\">compression</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">compression</span><span class=\"p\">,</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">out_table</span><span class=\"p\">)</span>\n</pre></div>", "type": "rendered"}, "created_on": "2019-06-27T11:52:39.074744+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-06-27T11:53:51.896426+00:00", "type": "pullrequest_comment", "id": 107301274}