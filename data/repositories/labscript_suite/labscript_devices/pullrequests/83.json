{"rendered": {"description": {"raw": "* Merged `ImageReceiver.update()` and `ImageReceiver.handler()` and have the\r\n  whole method run in the Qt main thread.\r\n\r\n * Use new zprocess functionality to respond to worker process immediately to\r\n   allow it to begin acquiring the next frame whilst the parent process is\r\n   rendering the previous frame\r\n\r\n* Add zprocess version requirement for this functionality.\r\n\r\n* Call QApplication.sendPostedEvents() to prevent a backlog of paint events and\r\n  other events that can otherwise build up at high frame rates and have been\r\n  observed to freeze the GUI.", "markup": "markdown", "html": "<ul>\n<li>\n<p>Merged <code>ImageReceiver.update()</code> and <code>ImageReceiver.handler()</code> and have the\n  whole method run in the Qt main thread.</p>\n</li>\n<li>\n<p>Use new zprocess functionality to respond to worker process immediately to\n   allow it to begin acquiring the next frame whilst the parent process is\n   rendering the previous frame</p>\n</li>\n<li>\n<p>Add zprocess version requirement for this functionality.</p>\n</li>\n<li>\n<p>Call QApplication.sendPostedEvents() to prevent a backlog of paint events and\n  other events that can otherwise build up at high frame rates and have been\n  observed to freeze the GUI.</p>\n</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Fix issue #36: BLACS freezing in IMAQdxCamera continuous acquisition.", "markup": "markdown", "html": "<p>Fix issue <a href=\"#!/labscript_suite/labscript_devices/issues/36/blacs-hang-with-continuous-camera\" rel=\"nofollow\" title=\"BLACS hang with continuous camera acquisitions\" class=\"ap-connect-link\"><s>#36</s></a>: BLACS freezing in IMAQdxCamera continuous acquisition.</p>", "type": "rendered"}}, "type": "pullrequest", "description": "* Merged `ImageReceiver.update()` and `ImageReceiver.handler()` and have the\r\n  whole method run in the Qt main thread.\r\n\r\n * Use new zprocess functionality to respond to worker process immediately to\r\n   allow it to begin acquiring the next frame whilst the parent process is\r\n   rendering the previous frame\r\n\r\n* Add zprocess version requirement for this functionality.\r\n\r\n* Call QApplication.sendPostedEvents() to prevent a backlog of paint events and\r\n  other events that can otherwise build up at high frame rates and have been\r\n  observed to freeze the GUI.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/pullrequests/83/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/diffstat/labscript_suite/labscript_devices:61a83341ab0d%0D75f28730f620?from_pullrequest_id=83"}, "commits": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/83/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/83.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/83/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/pullrequests/83/merge"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/83"}, "activity": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/83/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/diff/labscript_suite/labscript_devices:61a83341ab0d%0D75f28730f620?from_pullrequest_id=83"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/pullrequests/83/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/83/statuses_page=1.json"}}, "title": "Fix issue #36: BLACS freezing in IMAQdxCamera continuous acquisition.", "close_source_branch": true, "reviewers": [{"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}], "id": 83, "destination": {"commit": {"hash": "75f28730f620", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/commit/75f28730f620.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/commits/75f28730f620"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "branch": {"name": "default"}}, "created_on": "2019-09-21T18:23:23.236176+00:00", "summary": {"raw": "* Merged `ImageReceiver.update()` and `ImageReceiver.handler()` and have the\r\n  whole method run in the Qt main thread.\r\n\r\n * Use new zprocess functionality to respond to worker process immediately to\r\n   allow it to begin acquiring the next frame whilst the parent process is\r\n   rendering the previous frame\r\n\r\n* Add zprocess version requirement for this functionality.\r\n\r\n* Call QApplication.sendPostedEvents() to prevent a backlog of paint events and\r\n  other events that can otherwise build up at high frame rates and have been\r\n  observed to freeze the GUI.", "markup": "markdown", "html": "<ul>\n<li>\n<p>Merged <code>ImageReceiver.update()</code> and <code>ImageReceiver.handler()</code> and have the\n  whole method run in the Qt main thread.</p>\n</li>\n<li>\n<p>Use new zprocess functionality to respond to worker process immediately to\n   allow it to begin acquiring the next frame whilst the parent process is\n   rendering the previous frame</p>\n</li>\n<li>\n<p>Add zprocess version requirement for this functionality.</p>\n</li>\n<li>\n<p>Call QApplication.sendPostedEvents() to prevent a backlog of paint events and\n  other events that can otherwise build up at high frame rates and have been\n  observed to freeze the GUI.</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "a3fdbd54956d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_devices/commit/a3fdbd54956d"}, "html": {"href": "#!/cbillington/labscript_devices/commits/a3fdbd54956d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_devices"}, "html": {"href": "#!/cbillington/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a2db461e-24e6-495e-a15d-8b80435f721e}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cbillington/labscript_devices", "uuid": "{a2db461e-24e6-495e-a15d-8b80435f721e}"}, "branch": {"name": "camera-hang-fix"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2019-09-23T14:05:58.866976+00:00", "type": "participant", "approved": true, "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}}, {"role": "PARTICIPANT", "participated_on": "2019-09-23T16:31:51.239385+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}}], "reason": "", "updated_on": "2019-09-23T16:31:56.915750+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "61a83341ab0d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/commit/61a83341ab0d.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/commits/61a83341ab0d"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}