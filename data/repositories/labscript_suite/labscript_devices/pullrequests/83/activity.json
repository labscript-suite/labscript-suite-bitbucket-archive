{"pagelen": 50, "values": [{"update": {"description": "* Merged `ImageReceiver.update()` and `ImageReceiver.handler()` and have the\r\n  whole method run in the Qt main thread.\r\n\r\n * Use new zprocess functionality to respond to worker process immediately to\r\n   allow it to begin acquiring the next frame whilst the parent process is\r\n   rendering the previous frame\r\n\r\n* Add zprocess version requirement for this functionality.\r\n\r\n* Call QApplication.sendPostedEvents() to prevent a backlog of paint events and\r\n  other events that can otherwise build up at high frame rates and have been\r\n  observed to freeze the GUI.", "title": "Fix issue #36: BLACS freezing in IMAQdxCamera continuous acquisition.", "destination": {"commit": {"hash": "75f28730f620", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/commit/75f28730f620.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/commits/75f28730f620"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "a3fdbd54956d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_devices/commit/a3fdbd54956d"}, "html": {"href": "#!/cbillington/labscript_devices/commits/a3fdbd54956d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_devices"}, "html": {"href": "#!/cbillington/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a2db461e-24e6-495e-a15d-8b80435f721e}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cbillington/labscript_devices", "uuid": "{a2db461e-24e6-495e-a15d-8b80435f721e}"}, "branch": {"name": "camera-hang-fix"}}, "state": "MERGED", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-09-23T16:31:56.937666+00:00"}, "pull_request": {"type": "pullrequest", "id": 83, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/83.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/83"}}, "title": "Fix issue #36: BLACS freezing in IMAQdxCamera continuous acquisition."}}, {"update": {"description": "* Merged `ImageReceiver.update()` and `ImageReceiver.handler()` and have the\r\n  whole method run in the Qt main thread.\r\n\r\n * Use new zprocess functionality to respond to worker process immediately to\r\n   allow it to begin acquiring the next frame whilst the parent process is\r\n   rendering the previous frame\r\n\r\n* Add zprocess version requirement for this functionality.\r\n\r\n* Call QApplication.sendPostedEvents() to prevent a backlog of paint events and\r\n  other events that can otherwise build up at high frame rates and have been\r\n  observed to freeze the GUI.", "title": "Fix issue #36: BLACS freezing in IMAQdxCamera continuous acquisition.", "destination": {"commit": {"hash": "75f28730f620", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/commit/75f28730f620.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/commits/75f28730f620"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "a3fdbd54956d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_devices/commit/a3fdbd54956d"}, "html": {"href": "#!/cbillington/labscript_devices/commits/a3fdbd54956d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_devices"}, "html": {"href": "#!/cbillington/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a2db461e-24e6-495e-a15d-8b80435f721e}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cbillington/labscript_devices", "uuid": "{a2db461e-24e6-495e-a15d-8b80435f721e}"}, "branch": {"name": "camera-hang-fix"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-09-23T16:31:55.797806+00:00"}, "pull_request": {"type": "pullrequest", "id": 83, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/83.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/83"}}, "title": "Fix issue #36: BLACS freezing in IMAQdxCamera continuous acquisition."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/83/comments/117966237.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/83/_/diff#comment-117966237"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 83, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/83.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/83"}}, "title": "Fix issue #36: BLACS freezing in IMAQdxCamera continuous acquisition."}, "content": {"raw": "Excellent, thanks for testing, merging!", "markup": "markdown", "html": "<p>Excellent, thanks for testing, merging!</p>", "type": "rendered"}, "created_on": "2019-09-23T16:31:51.230271+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-09-23T16:31:51.239385+00:00", "type": "pullrequest_comment", "id": 117966237}, "pull_request": {"type": "pullrequest", "id": 83, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/83.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/83"}}, "title": "Fix issue #36: BLACS freezing in IMAQdxCamera continuous acquisition."}}, {"approval": {"date": "2019-09-23T14:05:58.866976+00:00", "pullrequest": {"type": "pullrequest", "id": 83, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/83.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/83"}}, "title": "Fix issue #36: BLACS freezing in IMAQdxCamera continuous acquisition."}, "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}}, "pull_request": {"type": "pullrequest", "id": 83, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/83.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/83"}}, "title": "Fix issue #36: BLACS freezing in IMAQdxCamera continuous acquisition."}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/83/comments/117937339.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/83/_/diff#comment-117937339"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 83, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/83.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/83"}}, "title": "Fix issue #36: BLACS freezing in IMAQdxCamera continuous acquisition."}, "content": {"raw": "This works like a charm for me. I can even see the fps change as I cause other GUI events in BLACS which is kind-of neat. I believe it good to merge whenever.", "markup": "markdown", "html": "<p>This works like a charm for me. I can even see the fps change as I cause other GUI events in BLACS which is kind-of neat. I believe it good to merge whenever.</p>", "type": "rendered"}, "created_on": "2019-09-23T14:05:56.147293+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2019-09-23T14:05:56.484650+00:00", "type": "pullrequest_comment", "id": 117937339}, "pull_request": {"type": "pullrequest", "id": 83, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/83.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/83"}}, "title": "Fix issue #36: BLACS freezing in IMAQdxCamera continuous acquisition."}}, {"update": {"description": "* Merged `ImageReceiver.update()` and `ImageReceiver.handler()` and have the\r\n  whole method run in the Qt main thread.\r\n\r\n * Use new zprocess functionality to respond to worker process immediately to\r\n   allow it to begin acquiring the next frame whilst the parent process is\r\n   rendering the previous frame\r\n\r\n* Add zprocess version requirement for this functionality.\r\n\r\n* Call QApplication.sendPostedEvents() to prevent a backlog of paint events and\r\n  other events that can otherwise build up at high frame rates and have been\r\n  observed to freeze the GUI.", "title": "Fix issue #36: BLACS freezing in IMAQdxCamera continuous acquisition.", "destination": {"commit": {"hash": "75f28730f620", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/commit/75f28730f620.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/commits/75f28730f620"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "a3fdbd54956d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_devices/commit/a3fdbd54956d"}, "html": {"href": "#!/cbillington/labscript_devices/commits/a3fdbd54956d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_devices"}, "html": {"href": "#!/cbillington/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a2db461e-24e6-495e-a15d-8b80435f721e}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cbillington/labscript_devices", "uuid": "{a2db461e-24e6-495e-a15d-8b80435f721e}"}, "branch": {"name": "camera-hang-fix"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-09-21T18:24:40.371719+00:00"}, "pull_request": {"type": "pullrequest", "id": 83, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/83.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/83"}}, "title": "Fix issue #36: BLACS freezing in IMAQdxCamera continuous acquisition."}}, {"update": {"description": "* Merged `ImageReceiver.update()` and `ImageReceiver.handler()` and have the\r\n  whole method run in the Qt main thread.\r\n\r\n * Use new zprocess functionality to respond to worker process immediately to\r\n   allow it to begin acquiring the next frame whilst the parent process is\r\n   rendering the previous frame\r\n\r\n* Add zprocess version requirement for this functionality.\r\n\r\n* Call QApplication.sendPostedEvents() to prevent a backlog of paint events and\r\n  other events that can otherwise build up at high frame rates and have been\r\n  observed to freeze the GUI.", "title": "Fix issue #36: BLACS freezing in IMAQdxCamera continuous acquisition.", "destination": {"commit": {"hash": "75f28730f620", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/commit/75f28730f620.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/commits/75f28730f620"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "c01e90f8470d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_devices/commit/c01e90f8470d"}, "html": {"href": "#!/cbillington/labscript_devices/commits/c01e90f8470d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_devices"}, "html": {"href": "#!/cbillington/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a2db461e-24e6-495e-a15d-8b80435f721e}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cbillington/labscript_devices", "uuid": "{a2db461e-24e6-495e-a15d-8b80435f721e}"}, "branch": {"name": "camera-hang-fix"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-09-21T18:23:23.304307+00:00"}, "pull_request": {"type": "pullrequest", "id": 83, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/83.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/83"}}, "title": "Fix issue #36: BLACS freezing in IMAQdxCamera continuous acquisition."}}, {"update": {"description": "* Merged `ImageReceiver.update()` and `ImageReceiver.handler()` and have the\r\n  whole method run in the Qt main thread.\r\n\r\n * Use new zprocess functionality to respond to worker process immediately to\r\n   allow it to begin acquiring the next frame whilst the parent process is\r\n   rendering the previous frame\r\n\r\n* Add zprocess version requirement for this functionality.\r\n\r\n* Call QApplication.sendPostedEvents() to prevent a backlog of paint events and\r\n  other events that can otherwise build up at high frame rates and have been\r\n  observed to freeze the GUI.", "title": "Fix issue #36: BLACS freezing in IMAQdxCamera continuous acquisition.", "destination": {"commit": {"hash": "75f28730f620", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/commit/75f28730f620.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/commits/75f28730f620"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "c01e90f8470d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_devices/commit/c01e90f8470d"}, "html": {"href": "#!/cbillington/labscript_devices/commits/c01e90f8470d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_devices"}, "html": {"href": "#!/cbillington/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a2db461e-24e6-495e-a15d-8b80435f721e}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cbillington/labscript_devices", "uuid": "{a2db461e-24e6-495e-a15d-8b80435f721e}"}, "branch": {"name": "camera-hang-fix"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-09-21T18:23:23.248861+00:00"}, "pull_request": {"type": "pullrequest", "id": 83, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/83.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/83"}}, "title": "Fix issue #36: BLACS freezing in IMAQdxCamera continuous acquisition."}}]}