{"rendered": {"description": {"raw": "For testing the device\\_property changes implemented in BLACS and labscript\\_utils, I decided to use the IMAQdxCamera class. This commit only has device\\_properties set for the PylonCamera itself since I don\u2019t have the IMAQdx dev software. Implementation there should be essentially identical.\r\n\r\nThis requires [PR #75 from BLACS](#!/labscript_suite/blacs/pull-requests/75/device-properties/diff) to work.\r\n\r\nThis demonstrates how to implement device\\_property controls in the BLACS tab of a device. The IMAQdxCamera tab makes calls to the new `create_device_properties` and `create_property_widgets` methods with the class attribute `self.device_properties`.\r\n\r\nThe IMAQdxCamera worker nominally implements `program_properties` and `check_remote_values` which set and get the attributes dictionary of the connected camera. The remote check of the properties is still a work in progress.\r\n\r\nThe PylonCamera subclass now defines three device\\_properties for manual control: \u2018ExposureTime' and \u2018CenterX\u2019 and \u2018TestImageSelector\u2019 for AO, DO, and EO style widgets as an example. These controls mirror the camera attributes dictionary entries. Ultimately I\u2019d like to be more selective in what gets controlled this way to I\u2019ll remove the \u2018TestImageSelector\u2019 before any merge can happen.", "markup": "markdown", "html": "<p>For testing the device_property changes implemented in BLACS and labscript_utils, I decided to use the IMAQdxCamera class. This commit only has device_properties set for the PylonCamera itself since I don\u2019t have the IMAQdx dev software. Implementation there should be essentially identical.</p>\n<p>This requires <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/pull-requests/75/device-properties/diff\" rel=\"nofollow\">PR #75 from BLACS</a> to work.</p>\n<p>This demonstrates how to implement device_property controls in the BLACS tab of a device. The IMAQdxCamera tab makes calls to the new <code>create_device_properties</code> and <code>create_property_widgets</code> methods with the class attribute <code>self.device_properties</code>.</p>\n<p>The IMAQdxCamera worker nominally implements <code>program_properties</code> and <code>check_remote_values</code> which set and get the attributes dictionary of the connected camera. The remote check of the properties is still a work in progress.</p>\n<p>The PylonCamera subclass now defines three device_properties for manual control: \u2018ExposureTime' and \u2018CenterX\u2019 and \u2018TestImageSelector\u2019 for AO, DO, and EO style widgets as an example. These controls mirror the camera attributes dictionary entries. Ultimately I\u2019d like to be more selective in what gets controlled this way to I\u2019ll remove the \u2018TestImageSelector\u2019 before any merge can happen.</p>", "type": "rendered"}, "title": {"raw": "Initial test of device_properties BLACS_tab widgets for the PylonCamera device.", "markup": "markdown", "html": "<p>Initial test of device_properties BLACS_tab widgets for the PylonCamera device.</p>", "type": "rendered"}}, "type": "pullrequest", "description": "For testing the device\\_property changes implemented in BLACS and labscript\\_utils, I decided to use the IMAQdxCamera class. This commit only has device\\_properties set for the PylonCamera itself since I don\u2019t have the IMAQdx dev software. Implementation there should be essentially identical.\r\n\r\nThis requires [PR #75 from BLACS](#!/labscript_suite/blacs/pull-requests/75/device-properties/diff) to work.\r\n\r\nThis demonstrates how to implement device\\_property controls in the BLACS tab of a device. The IMAQdxCamera tab makes calls to the new `create_device_properties` and `create_property_widgets` methods with the class attribute `self.device_properties`.\r\n\r\nThe IMAQdxCamera worker nominally implements `program_properties` and `check_remote_values` which set and get the attributes dictionary of the connected camera. The remote check of the properties is still a work in progress.\r\n\r\nThe PylonCamera subclass now defines three device\\_properties for manual control: \u2018ExposureTime' and \u2018CenterX\u2019 and \u2018TestImageSelector\u2019 for AO, DO, and EO style widgets as an example. These controls mirror the camera attributes dictionary entries. Ultimately I\u2019d like to be more selective in what gets controlled this way to I\u2019ll remove the \u2018TestImageSelector\u2019 before any merge can happen.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/pullrequests/84/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/diffstat/dihm/labscript_devices:6ef183bd3a77%0D40df0cb58f3b?from_pullrequest_id=84"}, "commits": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/84/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/84.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/84/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/pullrequests/84/merge"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/84"}, "activity": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/84/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/diff/dihm/labscript_devices:6ef183bd3a77%0D40df0cb58f3b?from_pullrequest_id=84"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/pullrequests/84/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/84/statuses_page=1.json"}}, "title": "Initial test of device_properties BLACS_tab widgets for the PylonCamera device.", "close_source_branch": true, "reviewers": [{"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}], "id": 84, "destination": {"commit": {"hash": "40df0cb58f3b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/commit/40df0cb58f3b.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/commits/40df0cb58f3b"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "branch": {"name": "default"}}, "created_on": "2019-10-09T00:08:47.457594+00:00", "summary": {"raw": "For testing the device\\_property changes implemented in BLACS and labscript\\_utils, I decided to use the IMAQdxCamera class. This commit only has device\\_properties set for the PylonCamera itself since I don\u2019t have the IMAQdx dev software. Implementation there should be essentially identical.\r\n\r\nThis requires [PR #75 from BLACS](#!/labscript_suite/blacs/pull-requests/75/device-properties/diff) to work.\r\n\r\nThis demonstrates how to implement device\\_property controls in the BLACS tab of a device. The IMAQdxCamera tab makes calls to the new `create_device_properties` and `create_property_widgets` methods with the class attribute `self.device_properties`.\r\n\r\nThe IMAQdxCamera worker nominally implements `program_properties` and `check_remote_values` which set and get the attributes dictionary of the connected camera. The remote check of the properties is still a work in progress.\r\n\r\nThe PylonCamera subclass now defines three device\\_properties for manual control: \u2018ExposureTime' and \u2018CenterX\u2019 and \u2018TestImageSelector\u2019 for AO, DO, and EO style widgets as an example. These controls mirror the camera attributes dictionary entries. Ultimately I\u2019d like to be more selective in what gets controlled this way to I\u2019ll remove the \u2018TestImageSelector\u2019 before any merge can happen.", "markup": "markdown", "html": "<p>For testing the device_property changes implemented in BLACS and labscript_utils, I decided to use the IMAQdxCamera class. This commit only has device_properties set for the PylonCamera itself since I don\u2019t have the IMAQdx dev software. Implementation there should be essentially identical.</p>\n<p>This requires <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/pull-requests/75/device-properties/diff\" rel=\"nofollow\">PR #75 from BLACS</a> to work.</p>\n<p>This demonstrates how to implement device_property controls in the BLACS tab of a device. The IMAQdxCamera tab makes calls to the new <code>create_device_properties</code> and <code>create_property_widgets</code> methods with the class attribute <code>self.device_properties</code>.</p>\n<p>The IMAQdxCamera worker nominally implements <code>program_properties</code> and <code>check_remote_values</code> which set and get the attributes dictionary of the connected camera. The remote check of the properties is still a work in progress.</p>\n<p>The PylonCamera subclass now defines three device_properties for manual control: \u2018ExposureTime' and \u2018CenterX\u2019 and \u2018TestImageSelector\u2019 for AO, DO, and EO style widgets as an example. These controls mirror the camera attributes dictionary entries. Ultimately I\u2019d like to be more selective in what gets controlled this way to I\u2019ll remove the \u2018TestImageSelector\u2019 before any merge can happen.</p>", "type": "rendered"}, "source": {"commit": {"hash": "6ef183bd3a77", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/labscript_devices/commit/6ef183bd3a77"}, "html": {"href": "#!/dihm/labscript_devices/commits/6ef183bd3a77"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/labscript_devices"}, "html": {"href": "#!/dihm/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9f3f6b5d-a0fe-41e9-b62b-9ad5a0ef8b5c}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "dihm/labscript_devices", "uuid": "{9f3f6b5d-a0fe-41e9-b62b-9ad5a0ef8b5c}"}, "branch": {"name": "device_properties"}}, "comment_count": 4, "state": "OPEN", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2020-01-29T13:01:36.802420+00:00", "type": "participant", "approved": false, "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}}, {"role": "REVIEWER", "participated_on": "2020-01-28T21:49:21.456347+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}], "reason": "", "updated_on": "2020-01-29T13:01:36.802420+00:00", "author": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "merge_commit": null, "closed_by": null}