{"rendered": {"description": {"raw": "This is an updated Zaber stage driver using the new `zaber.serial` API and the modern labscript driver folder structure. It is functionally identical to the old one. I've tested it on the one stage I've got here and it works, though it is not clear to me whether all models support the \"binary\" interface or if we will need to allow the user to specify whether to use the \"ascii\" interface. This one seems to require the binary interface, so I hope that is universal!\r\n\r\nTODO: ~~remote value checking~~ and smart programming. These should be fairly trivial to implement. Remote value checking could be quite valuable, whereas smart programming will only shave a few milliseconds off each shot.\r\n\r\nEdit: Probably not going to bother with smart programming.\r\n\r\nRequires Python 3.5+", "markup": "markdown", "html": "<p>This is an updated Zaber stage driver using the new <code>zaber.serial</code> API and the modern labscript driver folder structure. It is functionally identical to the old one. I've tested it on the one stage I've got here and it works, though it is not clear to me whether all models support the \"binary\" interface or if we will need to allow the user to specify whether to use the \"ascii\" interface. This one seems to require the binary interface, so I hope that is universal!</p>\n<p>TODO: <del>remote value checking</del> and smart programming. These should be fairly trivial to implement. Remote value checking could be quite valuable, whereas smart programming will only shave a few milliseconds off each shot.</p>\n<p>Edit: Probably not going to bother with smart programming.</p>\n<p>Requires Python 3.5+</p>", "type": "rendered"}, "title": {"raw": "Restore Zaber stage support", "markup": "markdown", "html": "<p>Restore Zaber stage support</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This is an updated Zaber stage driver using the new `zaber.serial` API and the modern labscript driver folder structure. It is functionally identical to the old one. I've tested it on the one stage I've got here and it works, though it is not clear to me whether all models support the \"binary\" interface or if we will need to allow the user to specify whether to use the \"ascii\" interface. This one seems to require the binary interface, so I hope that is universal!\r\n\r\nTODO: ~~remote value checking~~ and smart programming. These should be fairly trivial to implement. Remote value checking could be quite valuable, whereas smart programming will only shave a few milliseconds off each shot.\r\n\r\nEdit: Probably not going to bother with smart programming.\r\n\r\nRequires Python 3.5+", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/pullrequests/85/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/diffstat/labscript_suite/labscript_devices:40df0cb58f3b%0D432d899881a0?from_pullrequest_id=85"}, "commits": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/85/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/85.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/85/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/pullrequests/85/merge"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/85"}, "activity": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/85/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/diff/labscript_suite/labscript_devices:40df0cb58f3b%0D432d899881a0?from_pullrequest_id=85"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_devices/pullrequests/85/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/85/statuses_page=1.json"}}, "title": "Restore Zaber stage support", "close_source_branch": true, "reviewers": [{"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}], "id": 85, "destination": {"commit": {"hash": "432d899881a0", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/commit/432d899881a0.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/commits/432d899881a0"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices.json"}, "html": {"href": "#!/labscript_suite/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{30c94cb1-feec-4534-8885-92452023c9c9}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "labscript_suite/labscript_devices", "uuid": "{30c94cb1-feec-4534-8885-92452023c9c9}"}, "branch": {"name": "default"}}, "created_on": "2019-10-24T21:47:26.333570+00:00", "summary": {"raw": "This is an updated Zaber stage driver using the new `zaber.serial` API and the modern labscript driver folder structure. It is functionally identical to the old one. I've tested it on the one stage I've got here and it works, though it is not clear to me whether all models support the \"binary\" interface or if we will need to allow the user to specify whether to use the \"ascii\" interface. This one seems to require the binary interface, so I hope that is universal!\r\n\r\nTODO: ~~remote value checking~~ and smart programming. These should be fairly trivial to implement. Remote value checking could be quite valuable, whereas smart programming will only shave a few milliseconds off each shot.\r\n\r\nEdit: Probably not going to bother with smart programming.\r\n\r\nRequires Python 3.5+", "markup": "markdown", "html": "<p>This is an updated Zaber stage driver using the new <code>zaber.serial</code> API and the modern labscript driver folder structure. It is functionally identical to the old one. I've tested it on the one stage I've got here and it works, though it is not clear to me whether all models support the \"binary\" interface or if we will need to allow the user to specify whether to use the \"ascii\" interface. This one seems to require the binary interface, so I hope that is universal!</p>\n<p>TODO: <del>remote value checking</del> and smart programming. These should be fairly trivial to implement. Remote value checking could be quite valuable, whereas smart programming will only shave a few milliseconds off each shot.</p>\n<p>Edit: Probably not going to bother with smart programming.</p>\n<p>Requires Python 3.5+</p>", "type": "rendered"}, "source": {"commit": {"hash": "977e791c0dbc", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_devices/commit/977e791c0dbc"}, "html": {"href": "#!/cbillington/labscript_devices/commits/977e791c0dbc"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_devices"}, "html": {"href": "#!/cbillington/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a2db461e-24e6-495e-a15d-8b80435f721e}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "cbillington/labscript_devices", "uuid": "{a2db461e-24e6-495e-a15d-8b80435f721e}"}, "branch": {"name": "zaberstage"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, {"role": "PARTICIPANT", "participated_on": "2020-01-28T21:36:35.320272+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}}], "reason": "", "updated_on": "2020-01-28T21:36:40.275977+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "40df0cb58f3b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/commit/40df0cb58f3b.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/commits/40df0cb58f3b"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}