{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/9/comments/19697862.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/9/_/diff#comment-19697862"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_devices/pullrequests/9.json"}, "html": {"href": "#!/labscript_suite/labscript_devices/pull-requests/9"}}, "title": "Update of NIBoard.py for DIO cards with multiple ports"}, "content": {"raw": "Hi Cameron,\n\nThanks for submitting a pull request!\n\nWe're going to need to make a few changes in order to maintain backwards compatibility with the other NI classes. I think this requires:\n\n* setting the default value for `n_ports` in NIBoard.py to `1`\n* renaming `n_ports` to `n_digital_ports` (just so the naming convention is more explicit)\n* Removing the class variable `n_lines` and defining a new Python property `n_digital_lines_per_port` in both the NIBoard.py labscript and runviewer classes. This avoids the need to go and edit every NI labscript class to define n_lines correctly, and will maintain compatibility with any NI classes that other groups have made, but have not been contributed back to our repository. The method definition should look something like:\n\n```\n#!python\n\n@property\ndef n_digital_lines_per_port(self):\n    assert self.n_digitals%self.n_ports == 0, 'The number of digital lines defined for device class %s is not divisible by the number of digital ports.'%self.__class__.__name__\n    return self.n_digitals//self.n_ports\n```\n\n* renaming `self.n_lines` to `self.n_digital_lines_per_port`\n\nI think this also means:\n\n* The above changes to the defaults will require you to actively specify correct values for `n_digitals` and `n_digital_ports` in your subclasses for labscript and runviewer in the NI PXI 6733 and NI PXIe 6535 files.\n* Your two subclasses seem to still be using myNIBoard as the parent. Could you change this to NIBoard and test both again.\n\nYou might also want to consider whether you can just subclass the NI_PCI_6733 classes for the NI_PXI_6733 classes. Are there actually any differences between the two classes? I notice you don't have the digital lines in the PXI_6733, although I believe it still has 8 like the PCI_6733?\n\nApologies for the long list of changes! I try and avoid major version number increases as much as possible so people with their own code don't have to regularly update to a new API.\n\nCheers,\nPhil", "markup": "markdown", "html": "<p>Hi Cameron,</p>\n<p>Thanks for submitting a pull request!</p>\n<p>We're going to need to make a few changes in order to maintain backwards compatibility with the other NI classes. I think this requires:</p>\n<ul>\n<li>setting the default value for <code>n_ports</code> in NIBoard.py to <code>1</code></li>\n<li>renaming <code>n_ports</code> to <code>n_digital_ports</code> (just so the naming convention is more explicit)</li>\n<li>Removing the class variable <code>n_lines</code> and defining a new Python property <code>n_digital_lines_per_port</code> in both the NIBoard.py labscript and runviewer classes. This avoids the need to go and edit every NI labscript class to define n_lines correctly, and will maintain compatibility with any NI classes that other groups have made, but have not been contributed back to our repository. The method definition should look something like:</li>\n</ul>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"nd\">@property</span>\n<span class=\"k\">def</span> <span class=\"nf\">n_digital_lines_per_port</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"k\">assert</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">n_digitals</span><span class=\"o\">%</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">n_ports</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;The number of digital lines defined for device class </span><span class=\"si\">%s</span><span class=\"s1\"> is not divisible by the number of digital ports.&#39;</span><span class=\"o\">%</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span>\n    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">n_digitals</span><span class=\"o\">//</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">n_ports</span>\n</pre></div>\n\n\n<ul>\n<li>renaming <code>self.n_lines</code> to <code>self.n_digital_lines_per_port</code></li>\n</ul>\n<p>I think this also means:</p>\n<ul>\n<li>The above changes to the defaults will require you to actively specify correct values for <code>n_digitals</code> and <code>n_digital_ports</code> in your subclasses for labscript and runviewer in the NI PXI 6733 and NI PXIe 6535 files.</li>\n<li>Your two subclasses seem to still be using myNIBoard as the parent. Could you change this to NIBoard and test both again.</li>\n</ul>\n<p>You might also want to consider whether you can just subclass the NI_PCI_6733 classes for the NI_PXI_6733 classes. Are there actually any differences between the two classes? I notice you don't have the digital lines in the PXI_6733, although I believe it still has 8 like the PCI_6733?</p>\n<p>Apologies for the long list of changes! I try and avoid major version number increases as much as possible so people with their own code don't have to regularly update to a new API.</p>\n<p>Cheers,\nPhil</p>", "type": "rendered"}, "created_on": "2016-06-13T23:59:28.678216+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2016-06-13T23:59:28.953056+00:00", "type": "pullrequest_comment", "id": 19697862}