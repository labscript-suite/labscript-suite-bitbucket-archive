{"rendered": {"message": {"raw": "Bugfix for double_import_denier and better error message for h5_lock\n\n* Double import denier had a bug where a module that was already imported\n  when double import denier was enabled would be stored in its list of modules\n  by its `__file__` attribute. However, the import machinery as used later\n  by double import denier actually identifies modules by their directory for the\n  case of an `__init__.py` file. Therefore to match with later checks, this\n  directory should be stored instead when the module's file is `__init__.py`.\n\n* h5_lock must be imported before h5py, and raises an error if h5py is already\n  imported. This commit improves the error message by using the double import\n  denier, if enabled, to show the traceback it saved from when h5py was imported.\n\nThe motivation for this is a bug I've heard about from two people that they're\ngetting an error from h5_lock saying h5py was already imported, and I don't know\nwhere. There are hacks you can do to diagnose this locally, but making the error\nmessage better will allow us to handle such bugs easier in the future.\n\nLonger term we should probably stop monkey-patching h5py and instead just use\na subclass, but that's a change for another day.", "markup": "markdown", "html": "<p>Bugfix for double_import_denier and better error message for h5_lock</p>\n<ul>\n<li>\n<p>Double import denier had a bug where a module that was already imported<br />\n  when double import denier was enabled would be stored in its list of modules<br />\n  by its <code>__file__</code> attribute. However, the import machinery as used later<br />\n  by double import denier actually identifies modules by their directory for the<br />\n  case of an <code>__init__.py</code> file. Therefore to match with later checks, this<br />\n  directory should be stored instead when the module's file is <code>__init__.py</code>.</p>\n</li>\n<li>\n<p>h5_lock must be imported before h5py, and raises an error if h5py is already<br />\n  imported. This commit improves the error message by using the double import<br />\n  denier, if enabled, to show the traceback it saved from when h5py was imported.</p>\n</li>\n</ul>\n<p>The motivation for this is a bug I've heard about from two people that they're<br />\ngetting an error from h5_lock saying h5py was already imported, and I don't know<br />\nwhere. There are hacks you can do to diagnose this locally, but making the error<br />\nmessage better will allow us to handle such bugs easier in the future.</p>\n<p>Longer term we should probably stop monkey-patching h5py and instead just use<br />\na subclass, but that's a change for another day.</p>", "type": "rendered"}}, "hash": "05e69ac87c9010b5fabf2b3dc9488923c5264ea6", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/05e69ac87c9010b5fabf2b3dc9488923c5264ea6.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript_utils/commit/05e69ac87c9010b5fabf2b3dc9488923c5264ea6/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/patch/05e69ac87c9010b5fabf2b3dc9488923c5264ea6"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/05e69ac87c9010b5fabf2b3dc9488923c5264ea6"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/diff/05e69ac87c9010b5fabf2b3dc9488923c5264ea6"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/commit/05e69ac87c9010b5fabf2b3dc9488923c5264ea6/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript_utils/commit/05e69ac87c9010b5fabf2b3dc9488923c5264ea6/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Bugfix for double_import_denier and better error message for h5_lock\n\n* Double import denier had a bug where a module that was already imported\n  when double import denier was enabled would be stored in its list of modules\n  by its `__file__` attribute. However, the import machinery as used later\n  by double import denier actually identifies modules by their directory for the\n  case of an `__init__.py` file. Therefore to match with later checks, this\n  directory should be stored instead when the module's file is `__init__.py`.\n\n* h5_lock must be imported before h5py, and raises an error if h5py is already\n  imported. This commit improves the error message by using the double import\n  denier, if enabled, to show the traceback it saved from when h5py was imported.\n\nThe motivation for this is a bug I've heard about from two people that they're\ngetting an error from h5_lock saying h5py was already imported, and I don't know\nwhere. There are hacks you can do to diagnose this locally, but making the error\nmessage better will allow us to handle such bugs easier in the future.\n\nLonger term we should probably stop monkey-patching h5py and instead just use\na subclass, but that's a change for another day.", "markup": "markdown", "html": "<p>Bugfix for double_import_denier and better error message for h5_lock</p>\n<ul>\n<li>\n<p>Double import denier had a bug where a module that was already imported<br />\n  when double import denier was enabled would be stored in its list of modules<br />\n  by its <code>__file__</code> attribute. However, the import machinery as used later<br />\n  by double import denier actually identifies modules by their directory for the<br />\n  case of an <code>__init__.py</code> file. Therefore to match with later checks, this<br />\n  directory should be stored instead when the module's file is <code>__init__.py</code>.</p>\n</li>\n<li>\n<p>h5_lock must be imported before h5py, and raises an error if h5py is already<br />\n  imported. This commit improves the error message by using the double import<br />\n  denier, if enabled, to show the traceback it saved from when h5py was imported.</p>\n</li>\n</ul>\n<p>The motivation for this is a bug I've heard about from two people that they're<br />\ngetting an error from h5_lock saying h5py was already imported, and I don't know<br />\nwhere. There are hacks you can do to diagnose this locally, but making the error<br />\nmessage better will allow us to handle such bugs easier in the future.</p>\n<p>Longer term we should probably stop monkey-patching h5py and instead just use<br />\na subclass, but that's a change for another day.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "61f4c846e51b68e3d9fe7cc452614d5ecb452dd1", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/61f4c846e51b68e3d9fe7cc452614d5ecb452dd1.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/61f4c846e51b68e3d9fe7cc452614d5ecb452dd1"}}}], "date": "2019-08-22T14:53:56+00:00", "message": "Bugfix for double_import_denier and better error message for h5_lock\n\n* Double import denier had a bug where a module that was already imported\n  when double import denier was enabled would be stored in its list of modules\n  by its `__file__` attribute. However, the import machinery as used later\n  by double import denier actually identifies modules by their directory for the\n  case of an `__init__.py` file. Therefore to match with later checks, this\n  directory should be stored instead when the module's file is `__init__.py`.\n\n* h5_lock must be imported before h5py, and raises an error if h5py is already\n  imported. This commit improves the error message by using the double import\n  denier, if enabled, to show the traceback it saved from when h5py was imported.\n\nThe motivation for this is a bug I've heard about from two people that they're\ngetting an error from h5_lock saying h5py was already imported, and I don't know\nwhere. There are hacks you can do to diagnose this locally, but making the error\nmessage better will allow us to handle such bugs easier in the future.\n\nLonger term we should probably stop monkey-patching h5py and instead just use\na subclass, but that's a change for another day.", "type": "commit", "git_hash": "a29bab1b521cebf0f8f29f8e6604c401b68f9166", "tags": null, "branches": "h5_lock_better_error"}