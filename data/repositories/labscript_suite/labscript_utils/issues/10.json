{"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/labscript_utils/issues/10/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/labscript_utils/issues/10.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/issues/10/watch"}, "comments": {"href": "data/repositories/labscript_suite/labscript_utils/issues/10/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/issues/10/allow-check_version-to-require-only"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/issues/10/vote"}}, "reporter": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "title": "Allow check_version to require only minimum version", "component": null, "votes": 0, "watches": 1, "content": {"raw": "At present, [``check_version``](#!/labscript_suite/labscript_utils/src/8f4c1bea806fdf3fb722ed2adcd69881ff9845b8/__init__.py#__init__.py-21) requires the version of a dependency be equal to or greater than a particular version (``at_least``), and less than a higher specified version (``less_than``). This proposal would permit ``check_version`` to only require the version of a dependency be ``at_least`` or later, with no upper bound on the required version.\r\n\r\nReasoning: Won't have to keep updating ``check_version`` calls in line with packages that change minor version number regularly. I think the ``check_version`` is more of a hindrance than a help here, e.g. if a user updates packages in their environment and the new version exceeds ``less_than`` specified in a ``check_version`` call of a labscript module's \\__init__.py, then that module won't start. This may elicit the user to post an issue (diligence), downgrade the dependency (apathy), or give up (despair). If the issue is reported, checking the higher version of the dependency may not be exhaustive as we don't have unit tests, etc. Instead, this proposal permits (but does not demand) a \"works with dependency vX or later until we know better\" approach. If there is a real incompatibility with a newer version of a dependency, this will likely be detected in real-world use. The issue can then be resolved expeditiously *if* reported.", "markup": "markdown", "html": "<p>At present, <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript_utils/src/8f4c1bea806fdf3fb722ed2adcd69881ff9845b8/__init__.py#__init__.py-21\" rel=\"nofollow\"><code>check_version</code></a> requires the version of a dependency be equal to or greater than a particular version (<code>at_least</code>), and less than a higher specified version (<code>less_than</code>). This proposal would permit <code>check_version</code> to only require the version of a dependency be <code>at_least</code> or later, with no upper bound on the required version.</p>\n<p>Reasoning: Won't have to keep updating <code>check_version</code> calls in line with packages that change minor version number regularly. I think the <code>check_version</code> is more of a hindrance than a help here, e.g. if a user updates packages in their environment and the new version exceeds <code>less_than</code> specified in a <code>check_version</code> call of a labscript module's __init__.py, then that module won't start. This may elicit the user to post an issue (diligence), downgrade the dependency (apathy), or give up (despair). If the issue is reported, checking the higher version of the dependency may not be exhaustive as we don't have unit tests, etc. Instead, this proposal permits (but does not demand) a \"works with dependency vX or later until we know better\" approach. If there is a real incompatibility with a newer version of a dependency, this will likely be detected in real-world use. The issue can then be resolved expeditiously <em>if</em> reported.</p>", "type": "rendered"}, "assignee": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "state": "new", "version": null, "edited_on": null, "created_on": "2016-08-21T23:46:31.930215+00:00", "milestone": null, "updated_on": "2019-05-13T17:43:28.717455+00:00", "type": "issue", "id": 10}