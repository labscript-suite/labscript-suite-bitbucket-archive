{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/issues/10/comments/52107779.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/issues/10#comment-52107779"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/issues/10.json"}}, "type": "issue", "id": 10, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "title": "Allow check_version to require only minimum version"}, "content": {"raw": "I agree with this. Furthermore, when specifying a maximum version, the error should be a warning unless some extra argument like `strict=True`. That way apps can not break unnecessarily, but can still warn that code is untested with the newer versions. And then we should continue to specify the next version up as the maximum for projects that follow semver, as it indicates possible breakage and will trigger the warning. But it does not make sense to provide an upper limit for projects that do not follow semver, and it is better manners to print a warning instead of crash if you are merely unsure if code works as opposed to sure that it does not.\n\nI will make this change prior to bumping the zprocess version to 3.0 since basically all our code is already compatible with zprocess 3.0 (unreleased, but I know what will be deprecated and we have already stopped using it) even though it says it is not, and there is no good reason to force everyone to upgrade apps just because they upgraded zprocess.", "markup": "markdown", "html": "<p>I agree with this. Furthermore, when specifying a maximum version, the error should be a warning unless some extra argument like <code>strict=True</code>. That way apps can not break unnecessarily, but can still warn that code is untested with the newer versions. And then we should continue to specify the next version up as the maximum for projects that follow semver, as it indicates possible breakage and will trigger the warning. But it does not make sense to provide an upper limit for projects that do not follow semver, and it is better manners to print a warning instead of crash if you are merely unsure if code works as opposed to sure that it does not.</p>\n<p>I will make this change prior to bumping the zprocess version to 3.0 since basically all our code is already compatible with zprocess 3.0 (unreleased, but I know what will be deprecated and we have already stopped using it) even though it says it is not, and there is no good reason to force everyone to upgrade apps just because they upgraded zprocess.</p>", "type": "rendered"}, "created_on": "2019-05-13T17:43:28.692947+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-05-13T17:46:24.363235+00:00", "type": "issue_comment", "id": 52107779}], "page": 1, "size": 1}