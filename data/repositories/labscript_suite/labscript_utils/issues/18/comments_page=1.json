{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/issues/18/comments/45044173.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/issues/18#comment-45044173"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/issues/18.json"}}, "type": "issue", "id": 18, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "title": "Double import denier breaks with runviewer v2.1.0"}, "content": {"raw": "I don't think it's too aggressive, I'd argue that this is the exact issue that the double import denier was designed to catch.\n\nEven though it's a single import line that triggers it, the imported module goes on to imports *itself* under a different name. Basically by importing `runviewer.resample.%s.resample`, it is first importing `runviewer.resample`, i.e. itself, under a different name to what the calling code imported it as. So this would have led to two copies of itself in memory if not caught (and so runviewer has probably had a double import all this time).\n\nIn this case probably harmless, but I think correctly identified as a double import.\n\nThere have been a few issues with double import denier though, and I am considering that maybe it shouldn't be turned on for all code importing labscript_utils, and perhaps it should be explicitly imported and enabled by the GUI programs only. Keeping it away from arbitrary user code that might be doing other funky things with the import system might be a good idea. But I might wait to see if any more issues turn up before changing that, since maybe it's sufficiently bug-free now.\n\nYou want to change the `__version__` attribute and tag a version bump? Either minor or patch number, I'm not sure how much has changed since the last tagged version.", "markup": "markdown", "html": "<p>I don't think it's too aggressive, I'd argue that this is the exact issue that the double import denier was designed to catch.</p>\n<p>Even though it's a single import line that triggers it, the imported module goes on to imports <em>itself</em> under a different name. Basically by importing <code>runviewer.resample.%s.resample</code>, it is first importing <code>runviewer.resample</code>, i.e. itself, under a different name to what the calling code imported it as. So this would have led to two copies of itself in memory if not caught (and so runviewer has probably had a double import all this time).</p>\n<p>In this case probably harmless, but I think correctly identified as a double import.</p>\n<p>There have been a few issues with double import denier though, and I am considering that maybe it shouldn't be turned on for all code importing labscript_utils, and perhaps it should be explicitly imported and enabled by the GUI programs only. Keeping it away from arbitrary user code that might be doing other funky things with the import system might be a good idea. But I might wait to see if any more issues turn up before changing that, since maybe it's sufficiently bug-free now.</p>\n<p>You want to change the <code>__version__</code> attribute and tag a version bump? Either minor or patch number, I'm not sure how much has changed since the last tagged version.</p>", "type": "rendered"}, "created_on": "2018-04-30T04:25:50.456667+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 45044173}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/issues/18/comments/45046682.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/issues/18#comment-45046682"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/issues/18.json"}}, "type": "issue", "id": 18, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "title": "Double import denier breaks with runviewer v2.1.0"}, "content": {"raw": "Ok.\n\nrunviewer released as 2.2.0 as of [4cc49b8d35fb542e11fb2ff039ba7f9bb437a51a](#!/labscript_suite/runviewer/commits/4cc49b8d35fb542e11fb2ff039ba7f9bb437a51a?at=default).", "markup": "markdown", "html": "<p>Ok.</p>\n<p>runviewer released as 2.2.0 as of <a data-is-external-link=\"true\" href=\"#!/labscript_suite/runviewer/commits/4cc49b8d35fb542e11fb2ff039ba7f9bb437a51a?at=default\" rel=\"nofollow\">4cc49b8d35fb542e11fb2ff039ba7f9bb437a51a</a>.</p>", "type": "rendered"}, "created_on": "2018-04-30T08:23:40.785818+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 45046682}], "page": 1, "size": 2}