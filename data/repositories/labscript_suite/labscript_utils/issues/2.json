{"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/labscript_utils/issues/2/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/labscript_utils/issues/2.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/issues/2/watch"}, "comments": {"href": "data/repositories/labscript_suite/labscript_utils/issues/2/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/issues/2/labconfig-should-do-some-initialisation-on"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/issues/2/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "labconfig should do some initialisation on config files", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When a LabConfig is instantiated, it should call a general initialisation function that tries to make sense of the labconfig file.\r\n\r\nThis should do things like:\r\n- Ensure the experiment name is a valid python module name\r\n- Automatically create a subfolder for the experiment in analysislib and labscriptlib, with an __init__.py in each (if they don't already exist).\r\n- Ensure paths to shared drive exist\r\n\r\nAnd there are more things I'm sure, which are currently scattered throughout the programs that use labconfig, but ought to be in a consistent place.\r\n\r\nThis initialisation should be able to be suppressed with a keyword argument.\r\n\r\nPerhaps also this is where setting of default arguments should live, rather than in the individual programs. We don't have 'runmanagerconfig' and 'BLACSconfig', so so long as we have one config file, all its defaults should probably live in the same place.", "markup": "markdown", "html": "<p>When a LabConfig is instantiated, it should call a general initialisation function that tries to make sense of the labconfig file.</p>\n<p>This should do things like:\n- Ensure the experiment name is a valid python module name\n- Automatically create a subfolder for the experiment in analysislib and labscriptlib, with an <strong>init</strong>.py in each (if they don't already exist).\n- Ensure paths to shared drive exist</p>\n<p>And there are more things I'm sure, which are currently scattered throughout the programs that use labconfig, but ought to be in a consistent place.</p>\n<p>This initialisation should be able to be suppressed with a keyword argument.</p>\n<p>Perhaps also this is where setting of default arguments should live, rather than in the individual programs. We don't have 'runmanagerconfig' and 'BLACSconfig', so so long as we have one config file, all its defaults should probably live in the same place.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2014-10-03T22:55:56.834513+00:00", "milestone": null, "updated_on": "2014-10-03T22:55:56.834513+00:00", "type": "issue", "id": 2}