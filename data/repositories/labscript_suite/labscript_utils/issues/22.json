{"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/labscript_utils/issues/22/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/labscript_utils/issues/22.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/issues/22/watch"}, "comments": {"href": "data/repositories/labscript_suite/labscript_utils/issues/22/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/issues/22/the-win7appid-executable-can-be-replaced"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/issues/22/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "The Win7AppId executable can be replaced with Python calls now", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Not sure if this has always existed, but I've discovered that the shortcut property modification done by win7appid.exe can be replicated with direct Python calls with the win32com library. For example, [the below code fixes a bug with Spyder that's existed for almost 5 years](https://github.com/spyder-ide/spyder/issues/1983) which no-one bothered to solve before me:\r\n\r\n```\r\n#!python\r\n\r\nfrom win32com.shell import shellcon\r\nfrom win32com.propsys import propsys, pscon\r\nimport pythoncom\r\n\r\nshortcut_path = r\"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Anaconda3 (64-bit)\\Spyder.lnk\"\r\nstore = propsys.SHGetPropertyStoreFromParsingName(shortcut_path, None, shellcon.GPS_READWRITE, propsys.IID_IPropertyStore)\r\nstore.SetValue(pscon.PKEY_AppUserModel_ID, propsys.PROPVARIANTType(u'spyder.Spyder', pythoncom.VT_LPWSTR))\r\nstore.Commit()\r\n```\r\n\r\nI'm pretty sure we should be able to do the same thing for our own shortcuts :)", "markup": "markdown", "html": "<p>Not sure if this has always existed, but I've discovered that the shortcut property modification done by win7appid.exe can be replicated with direct Python calls with the win32com library. For example, <a data-is-external-link=\"true\" href=\"https://github.com/spyder-ide/spyder/issues/1983\" rel=\"nofollow\">the below code fixes a bug with Spyder that's existed for almost 5 years</a> which no-one bothered to solve before me:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">win32com.shell</span> <span class=\"kn\">import</span> <span class=\"n\">shellcon</span>\n<span class=\"kn\">from</span> <span class=\"nn\">win32com.propsys</span> <span class=\"kn\">import</span> <span class=\"n\">propsys</span><span class=\"p\">,</span> <span class=\"n\">pscon</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pythoncom</span>\n\n<span class=\"n\">shortcut_path</span> <span class=\"o\">=</span> <span class=\"sa\">r</span><span class=\"s2\">&quot;C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Anaconda3 (64-bit)\\Spyder.lnk&quot;</span>\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">propsys</span><span class=\"o\">.</span><span class=\"n\">SHGetPropertyStoreFromParsingName</span><span class=\"p\">(</span><span class=\"n\">shortcut_path</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">shellcon</span><span class=\"o\">.</span><span class=\"n\">GPS_READWRITE</span><span class=\"p\">,</span> <span class=\"n\">propsys</span><span class=\"o\">.</span><span class=\"n\">IID_IPropertyStore</span><span class=\"p\">)</span>\n<span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">SetValue</span><span class=\"p\">(</span><span class=\"n\">pscon</span><span class=\"o\">.</span><span class=\"n\">PKEY_AppUserModel_ID</span><span class=\"p\">,</span> <span class=\"n\">propsys</span><span class=\"o\">.</span><span class=\"n\">PROPVARIANTType</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s1\">&#39;spyder.Spyder&#39;</span><span class=\"p\">,</span> <span class=\"n\">pythoncom</span><span class=\"o\">.</span><span class=\"n\">VT_LPWSTR</span><span class=\"p\">))</span>\n<span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">Commit</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>I'm pretty sure we should be able to do the same thing for our own shortcuts :)</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-01-14T11:07:06.291957+00:00", "milestone": null, "updated_on": "2019-05-10T02:56:56.530955+00:00", "type": "issue", "id": 22}