{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/issues/23/comments/52054574.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/issues/23#comment-52054574"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/issues/23.json"}}, "type": "issue", "id": 23, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "title": "ModuleWatcher: ability to append to whitelist"}, "content": {"raw": "What do you think about having ModuleWatcher by default whitelist all modules that are in site-packages/standard library? That way it will only ever reload 'user' modules, and any of these complex modules that do magical things and cause problems will never be reloaded. And if they're in site-packages then chances are the user is not modifying them, and if they are they know what they are doing. Possible issue: the user upgrades a package using pip or conda, it would then not be reloaded.\n\nAlternately, ModuleWatcher could reload all modules if it detects a change on disk in a module in site-packages, and it could reload only 'user' modules if it detects a change in a module outside site-packages. This would be 90% of the way there without user action required.", "markup": "markdown", "html": "<p>What do you think about having ModuleWatcher by default whitelist all modules that are in site-packages/standard library? That way it will only ever reload 'user' modules, and any of these complex modules that do magical things and cause problems will never be reloaded. And if they're in site-packages then chances are the user is not modifying them, and if they are they know what they are doing. Possible issue: the user upgrades a package using pip or conda, it would then not be reloaded.</p>\n<p>Alternately, ModuleWatcher could reload all modules if it detects a change on disk in a module in site-packages, and it could reload only 'user' modules if it detects a change in a module outside site-packages. This would be 90% of the way there without user action required.</p>", "type": "rendered"}, "created_on": "2019-05-09T13:24:54.759230+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 52054574}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/issues/23/comments/52342424.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/issues/23#comment-52342424"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/issues/23.json"}}, "type": "issue", "id": 23, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "title": "ModuleWatcher: ability to append to whitelist"}, "content": {"raw": "Have modulewatcher whitelist all modules within standard package directories.\nThis way, only 'user' code will be unloaded or monitored for changes.\n\nThis addresses issue #23, though it is different to the solution than proposed there.\n\n\u2192 <<cset 0e02c38ec14c>>", "markup": "markdown", "html": "<p>Have modulewatcher whitelist all modules within standard package directories.\nThis way, only 'user' code will be unloaded or monitored for changes.</p>\n<p>This addresses issue <a href=\"#!/labscript_suite/labscript_utils/issues/23/modulewatcher-ability-to-append-to\" rel=\"nofollow\" title=\"ModuleWatcher: ability to append to whitelist\" class=\"ap-connect-link\">#23</a>, though it is different to the solution than proposed there.</p>\n<p>\u2192 &lt;&lt;cset <a href=\"#!/labscript_suite/labscript_utils/commits/0e02c38ec14c\" rel=\"nofollow\" class=\"ap-connect-link\">0e02c38ec14c</a>&gt;&gt;</p>", "type": "rendered"}, "created_on": "2019-05-29T18:52:37.891402+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 52342424}], "page": 1, "size": 2}