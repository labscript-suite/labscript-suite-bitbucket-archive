{"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/labscript_utils/issues/6/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/labscript_utils/issues/6.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/issues/6/watch"}, "comments": {"href": "data/repositories/labscript_suite/labscript_utils/issues/6/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/issues/6/unitconversions-base-class-should-use"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/issues/6/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Unitconversions base class should use different style of dynamic method creation", "component": null, "votes": 0, "watches": 1, "content": {"raw": "`exec`'ing `def` statements is a bit magical, and hard for exception code and code analysis tools (and humans too!) to tell what's going on if anything goes wrong. Since Python provides the tools to create methods dynamically by other means, these should be used instead.\r\n\r\nOooh, maybe this will be excuse enough to write a metaclass, but probably not so I won't get my hopes up. I mean they're pretty magical too, so should be avoided without a good reason.", "markup": "markdown", "html": "<p><code>exec</code>'ing <code>def</code> statements is a bit magical, and hard for exception code and code analysis tools (and humans too!) to tell what's going on if anything goes wrong. Since Python provides the tools to create methods dynamically by other means, these should be used instead.</p>\n<p>Oooh, maybe this will be excuse enough to write a metaclass, but probably not so I won't get my hopes up. I mean they're pretty magical too, so should be avoided without a good reason.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "new", "version": null, "edited_on": null, "created_on": "2014-10-04T02:25:05.207923+00:00", "milestone": null, "updated_on": "2014-10-04T02:25:05.207923+00:00", "type": "issue", "id": 6}