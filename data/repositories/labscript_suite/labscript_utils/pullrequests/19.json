{"rendered": {"description": {"raw": "* Add testing_utils module, which provides a TestCase class appropriate for\r\n    running tests on a GUI program running in the main thread, with the tests\r\n    running in a separate thread, within the framework of the standard\r\n    library's unittest module. The module also contains a few utilities for\r\n    mocking objects with the `mock` module.\r\n\r\n* Added PY2 constant to __init__.py, bumped minor version  so other code can rely on the it and the \r\n    testing_utils submodule to exist.\r\n    Skipped version 2.3 since it was never tagged as a release even though\r\n    the version string was there and programs were depending on it.\r\n\r\n* Made check_version a bit smarter. Now, in the case of a failed import, it attempts to nonetheless \r\n    read the version string from the failed import, if it can. If the version string would cause a version \r\n    error, it prints that in addition to the exception raised during import. This can help diagnose when \r\n    imports are failing - if they are failing due to a version mismatch, then a traceback mentioning\r\n    the version mismatch is useful.", "markup": "markdown", "html": "<ul>\n<li>\n<p>Add testing_utils module, which provides a TestCase class appropriate for\n    running tests on a GUI program running in the main thread, with the tests\n    running in a separate thread, within the framework of the standard\n    library's unittest module. The module also contains a few utilities for\n    mocking objects with the <code>mock</code> module.</p>\n</li>\n<li>\n<p>Added PY2 constant to <strong>init</strong>.py, bumped minor version  so other code can rely on the it and the \n    testing_utils submodule to exist.\n    Skipped version 2.3 since it was never tagged as a release even though\n    the version string was there and programs were depending on it.</p>\n</li>\n<li>\n<p>Made check_version a bit smarter. Now, in the case of a failed import, it attempts to nonetheless \n    read the version string from the failed import, if it can. If the version string would cause a version \n    error, it prints that in addition to the exception raised during import. This can help diagnose when \n    imports are failing - if they are failing due to a version mismatch, then a traceback mentioning\n    the version mismatch is useful.</p>\n</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Utilities for test suites, PY2 constant, minor version bump, smarter check_version()", "markup": "markdown", "html": "<p>Utilities for test suites, PY2 constant, minor version bump, smarter check_version()</p>", "type": "rendered"}}, "type": "pullrequest", "description": "* Add testing_utils module, which provides a TestCase class appropriate for\r\n    running tests on a GUI program running in the main thread, with the tests\r\n    running in a separate thread, within the framework of the standard\r\n    library's unittest module. The module also contains a few utilities for\r\n    mocking objects with the `mock` module.\r\n\r\n* Added PY2 constant to __init__.py, bumped minor version  so other code can rely on the it and the \r\n    testing_utils submodule to exist.\r\n    Skipped version 2.3 since it was never tagged as a release even though\r\n    the version string was there and programs were depending on it.\r\n\r\n* Made check_version a bit smarter. Now, in the case of a failed import, it attempts to nonetheless \r\n    read the version string from the failed import, if it can. If the version string would cause a version \r\n    error, it prints that in addition to the exception raised during import. This can help diagnose when \r\n    imports are failing - if they are failing due to a version mismatch, then a traceback mentioning\r\n    the version mismatch is useful.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/19/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/diffstat/labscript_suite/labscript_utils:409558d1fb0b%0Da7ef1e924d5c?from_pullrequest_id=19"}, "commits": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/19/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/19.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/19/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/19/merge"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/19"}, "activity": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/19/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/diff/labscript_suite/labscript_utils:409558d1fb0b%0Da7ef1e924d5c?from_pullrequest_id=19"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/19/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/19/statuses_page=1.json"}}, "title": "Utilities for test suites, PY2 constant, minor version bump, smarter check_version()", "close_source_branch": true, "reviewers": [{"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}], "id": 19, "destination": {"commit": {"hash": "a7ef1e924d5c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/a7ef1e924d5c.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/a7ef1e924d5c"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "created_on": "2017-08-01T16:53:52.063338+00:00", "summary": {"raw": "* Add testing_utils module, which provides a TestCase class appropriate for\r\n    running tests on a GUI program running in the main thread, with the tests\r\n    running in a separate thread, within the framework of the standard\r\n    library's unittest module. The module also contains a few utilities for\r\n    mocking objects with the `mock` module.\r\n\r\n* Added PY2 constant to __init__.py, bumped minor version  so other code can rely on the it and the \r\n    testing_utils submodule to exist.\r\n    Skipped version 2.3 since it was never tagged as a release even though\r\n    the version string was there and programs were depending on it.\r\n\r\n* Made check_version a bit smarter. Now, in the case of a failed import, it attempts to nonetheless \r\n    read the version string from the failed import, if it can. If the version string would cause a version \r\n    error, it prints that in addition to the exception raised during import. This can help diagnose when \r\n    imports are failing - if they are failing due to a version mismatch, then a traceback mentioning\r\n    the version mismatch is useful.", "markup": "markdown", "html": "<ul>\n<li>\n<p>Add testing_utils module, which provides a TestCase class appropriate for\n    running tests on a GUI program running in the main thread, with the tests\n    running in a separate thread, within the framework of the standard\n    library's unittest module. The module also contains a few utilities for\n    mocking objects with the <code>mock</code> module.</p>\n</li>\n<li>\n<p>Added PY2 constant to <strong>init</strong>.py, bumped minor version  so other code can rely on the it and the \n    testing_utils submodule to exist.\n    Skipped version 2.3 since it was never tagged as a release even though\n    the version string was there and programs were depending on it.</p>\n</li>\n<li>\n<p>Made check_version a bit smarter. Now, in the case of a failed import, it attempts to nonetheless \n    read the version string from the failed import, if it can. If the version string would cause a version \n    error, it prints that in addition to the exception raised during import. This can help diagnose when \n    imports are failing - if they are failing due to a version mismatch, then a traceback mentioning\n    the version mismatch is useful.</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "9ed3d17b6a1a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/9ed3d17b6a1a"}, "html": {"href": "#!/cbillington/labscript_utils/commits/9ed3d17b6a1a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "feature"}}, "comment_count": 6, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"role": "PARTICIPANT", "participated_on": "2017-08-15T21:37:41.510466+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "PARTICIPANT", "participated_on": "2017-08-15T21:30:56.634562+00:00", "type": "participant", "approved": false, "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}}], "reason": "", "updated_on": "2017-08-15T21:38:32.366251+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "409558d1fb0b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/409558d1fb0b.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/409558d1fb0b"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}