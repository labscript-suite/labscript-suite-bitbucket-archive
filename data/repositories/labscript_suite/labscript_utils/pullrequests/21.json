{"rendered": {"description": {"raw": "* Reimplemented dragdroptab.\r\n\r\n    Lost: ~~mouse icon changing during drag~~, ~~animation when moving tabs\r\n    within a tabbar~~.\r\n\r\n    Gained: Doesn't crash or lose tabs, tabs are always in a tabbar (just possibly one floating in free    \r\n    space) reducing the need for workarounds when a tab wants to manipulate its state (title, icon\r\n    etc) while a drag is in progress.\r\n\r\n    The lost functionality ~~can plausible be re-added without compromising\r\n    on the lack of crashing. I just haven't looked into it much yet~~ has been restored.\r\n\r\nThis pull request may fix issue #13 (I can't test, I don't have a mac, but I expect it will since I'm now storing which tab is being dragged based on the position of the mouse click rather than which tab was active at the time of the click), [likely fixes BLACS issue #17](#!/labscript_suite/blacs/issues/17/tab-becomes-unselected-when-moving), and does fix the issue I've seen in testing pull request #20.\r\n\r\nThis reimplementation is based on abandoning Qt's drag and drop functionality, and implementing it instead with just mouseEvents. It turns out to be much easier, since there was unending subtleties with Qt's drag events. The main one being that if during an event you called functions that modified the GUI, this could actually cause *new events to be processed, including the very event handler you were already in*. So you would have to write all the code to be re-entrant even though it's single threaded. I attempted to serialise the events by catching them and putting them in a queue to process in order rather than re-entrantly but that caused Qt to fire seemingly nonsensical events like two leave events in a row for the same widget and other nonsense that entirely defeats the purpose of the drag events if you can't trust anything about them.\r\n\r\nThis change is compatible with the Qt5 pull request (it just has a try/except for the imports for now so that it works regardless, can be changed to just use qtutils.qt after that branch is merged), though the merge might have to be done locally to discard the other file as otherwise it looks like a merge conflict.", "markup": "markdown", "html": "<ul>\n<li>\n<p>Reimplemented dragdroptab.</p>\n<p>Lost: <del>mouse icon changing during drag</del>, <del>animation when moving tabs\nwithin a tabbar</del>.</p>\n<p>Gained: Doesn't crash or lose tabs, tabs are always in a tabbar (just possibly one floating in free  <br />\nspace) reducing the need for workarounds when a tab wants to manipulate its state (title, icon\netc) while a drag is in progress.</p>\n<p>The lost functionality <del>can plausible be re-added without compromising\non the lack of crashing. I just haven't looked into it much yet</del> has been restored.</p>\n</li>\n</ul>\n<p>This pull request may fix issue <a href=\"#!/labscript_suite/labscript_utils/issues/13/dragdroptabs-behave-strange\" rel=\"nofollow\" title=\"dragdroptabs behave strange\" class=\"ap-connect-link\"><s>#13</s></a> (I can't test, I don't have a mac, but I expect it will since I'm now storing which tab is being dragged based on the position of the mouse click rather than which tab was active at the time of the click), <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/issues/17/tab-becomes-unselected-when-moving\" rel=\"nofollow\">likely fixes BLACS issue #17</a>, and does fix the issue I've seen in testing <a href=\"#!/labscript_suite/labscript_utils/pull-requests/20/qtutils-200-support-and-experimental-pyqt5\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #20</a>.</p>\n<p>This reimplementation is based on abandoning Qt's drag and drop functionality, and implementing it instead with just mouseEvents. It turns out to be much easier, since there was unending subtleties with Qt's drag events. The main one being that if during an event you called functions that modified the GUI, this could actually cause <em>new events to be processed, including the very event handler you were already in</em>. So you would have to write all the code to be re-entrant even though it's single threaded. I attempted to serialise the events by catching them and putting them in a queue to process in order rather than re-entrantly but that caused Qt to fire seemingly nonsensical events like two leave events in a row for the same widget and other nonsense that entirely defeats the purpose of the drag events if you can't trust anything about them.</p>\n<p>This change is compatible with the Qt5 pull request (it just has a try/except for the imports for now so that it works regardless, can be changed to just use qtutils.qt after that branch is merged), though the merge might have to be done locally to discard the other file as otherwise it looks like a merge conflict.</p>", "type": "rendered"}, "title": {"raw": "Dragdroptab", "markup": "markdown", "html": "<p>Dragdroptab</p>", "type": "rendered"}}, "type": "pullrequest", "description": "* Reimplemented dragdroptab.\r\n\r\n    Lost: ~~mouse icon changing during drag~~, ~~animation when moving tabs\r\n    within a tabbar~~.\r\n\r\n    Gained: Doesn't crash or lose tabs, tabs are always in a tabbar (just possibly one floating in free    \r\n    space) reducing the need for workarounds when a tab wants to manipulate its state (title, icon\r\n    etc) while a drag is in progress.\r\n\r\n    The lost functionality ~~can plausible be re-added without compromising\r\n    on the lack of crashing. I just haven't looked into it much yet~~ has been restored.\r\n\r\nThis pull request may fix issue #13 (I can't test, I don't have a mac, but I expect it will since I'm now storing which tab is being dragged based on the position of the mouse click rather than which tab was active at the time of the click), [likely fixes BLACS issue #17](#!/labscript_suite/blacs/issues/17/tab-becomes-unselected-when-moving), and does fix the issue I've seen in testing pull request #20.\r\n\r\nThis reimplementation is based on abandoning Qt's drag and drop functionality, and implementing it instead with just mouseEvents. It turns out to be much easier, since there was unending subtleties with Qt's drag events. The main one being that if during an event you called functions that modified the GUI, this could actually cause *new events to be processed, including the very event handler you were already in*. So you would have to write all the code to be re-entrant even though it's single threaded. I attempted to serialise the events by catching them and putting them in a queue to process in order rather than re-entrantly but that caused Qt to fire seemingly nonsensical events like two leave events in a row for the same widget and other nonsense that entirely defeats the purpose of the drag events if you can't trust anything about them.\r\n\r\nThis change is compatible with the Qt5 pull request (it just has a try/except for the imports for now so that it works regardless, can be changed to just use qtutils.qt after that branch is merged), though the merge might have to be done locally to discard the other file as otherwise it looks like a merge conflict.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/21/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/diffstat/labscript_suite/labscript_utils:e47f64a8702a%0D1ca691f3c898?from_pullrequest_id=21"}, "commits": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/21/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/21.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/21/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/21/merge"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/21"}, "activity": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/21/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/diff/labscript_suite/labscript_utils:e47f64a8702a%0D1ca691f3c898?from_pullrequest_id=21"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/21/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/21/statuses_page=1.json"}}, "title": "Dragdroptab", "close_source_branch": true, "reviewers": [{"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}], "id": 21, "destination": {"commit": {"hash": "1ca691f3c898", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/1ca691f3c898.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/1ca691f3c898"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "created_on": "2017-08-04T06:38:31.407611+00:00", "summary": {"raw": "* Reimplemented dragdroptab.\r\n\r\n    Lost: ~~mouse icon changing during drag~~, ~~animation when moving tabs\r\n    within a tabbar~~.\r\n\r\n    Gained: Doesn't crash or lose tabs, tabs are always in a tabbar (just possibly one floating in free    \r\n    space) reducing the need for workarounds when a tab wants to manipulate its state (title, icon\r\n    etc) while a drag is in progress.\r\n\r\n    The lost functionality ~~can plausible be re-added without compromising\r\n    on the lack of crashing. I just haven't looked into it much yet~~ has been restored.\r\n\r\nThis pull request may fix issue #13 (I can't test, I don't have a mac, but I expect it will since I'm now storing which tab is being dragged based on the position of the mouse click rather than which tab was active at the time of the click), [likely fixes BLACS issue #17](#!/labscript_suite/blacs/issues/17/tab-becomes-unselected-when-moving), and does fix the issue I've seen in testing pull request #20.\r\n\r\nThis reimplementation is based on abandoning Qt's drag and drop functionality, and implementing it instead with just mouseEvents. It turns out to be much easier, since there was unending subtleties with Qt's drag events. The main one being that if during an event you called functions that modified the GUI, this could actually cause *new events to be processed, including the very event handler you were already in*. So you would have to write all the code to be re-entrant even though it's single threaded. I attempted to serialise the events by catching them and putting them in a queue to process in order rather than re-entrantly but that caused Qt to fire seemingly nonsensical events like two leave events in a row for the same widget and other nonsense that entirely defeats the purpose of the drag events if you can't trust anything about them.\r\n\r\nThis change is compatible with the Qt5 pull request (it just has a try/except for the imports for now so that it works regardless, can be changed to just use qtutils.qt after that branch is merged), though the merge might have to be done locally to discard the other file as otherwise it looks like a merge conflict.", "markup": "markdown", "html": "<ul>\n<li>\n<p>Reimplemented dragdroptab.</p>\n<p>Lost: <del>mouse icon changing during drag</del>, <del>animation when moving tabs\nwithin a tabbar</del>.</p>\n<p>Gained: Doesn't crash or lose tabs, tabs are always in a tabbar (just possibly one floating in free  <br />\nspace) reducing the need for workarounds when a tab wants to manipulate its state (title, icon\netc) while a drag is in progress.</p>\n<p>The lost functionality <del>can plausible be re-added without compromising\non the lack of crashing. I just haven't looked into it much yet</del> has been restored.</p>\n</li>\n</ul>\n<p>This pull request may fix issue <a href=\"#!/labscript_suite/labscript_utils/issues/13/dragdroptabs-behave-strange\" rel=\"nofollow\" title=\"dragdroptabs behave strange\" class=\"ap-connect-link\"><s>#13</s></a> (I can't test, I don't have a mac, but I expect it will since I'm now storing which tab is being dragged based on the position of the mouse click rather than which tab was active at the time of the click), <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/issues/17/tab-becomes-unselected-when-moving\" rel=\"nofollow\">likely fixes BLACS issue #17</a>, and does fix the issue I've seen in testing <a href=\"#!/labscript_suite/labscript_utils/pull-requests/20/qtutils-200-support-and-experimental-pyqt5\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #20</a>.</p>\n<p>This reimplementation is based on abandoning Qt's drag and drop functionality, and implementing it instead with just mouseEvents. It turns out to be much easier, since there was unending subtleties with Qt's drag events. The main one being that if during an event you called functions that modified the GUI, this could actually cause <em>new events to be processed, including the very event handler you were already in</em>. So you would have to write all the code to be re-entrant even though it's single threaded. I attempted to serialise the events by catching them and putting them in a queue to process in order rather than re-entrantly but that caused Qt to fire seemingly nonsensical events like two leave events in a row for the same widget and other nonsense that entirely defeats the purpose of the drag events if you can't trust anything about them.</p>\n<p>This change is compatible with the Qt5 pull request (it just has a try/except for the imports for now so that it works regardless, can be changed to just use qtutils.qt after that branch is merged), though the merge might have to be done locally to discard the other file as otherwise it looks like a merge conflict.</p>", "type": "rendered"}, "source": {"commit": {"hash": "da6423d3da5c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/da6423d3da5c"}, "html": {"href": "#!/cbillington/labscript_utils/commits/da6423d3da5c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "dragdroptab"}}, "comment_count": 57, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-08-28T00:26:10.264879+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": "2017-08-25T05:05:03.360493+00:00", "type": "participant", "approved": true, "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}}, {"role": "REVIEWER", "participated_on": "2017-08-28T00:06:28.722937+00:00", "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"role": "REVIEWER", "participated_on": "2017-08-09T21:37:14.218682+00:00", "type": "participant", "approved": true, "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}}], "reason": "", "updated_on": "2017-10-04T16:27:33.501721+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "e47f64a8702a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/e47f64a8702a.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/e47f64a8702a"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}