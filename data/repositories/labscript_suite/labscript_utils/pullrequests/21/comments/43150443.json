{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/21/comments/43150443.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/21/_/diff#comment-43150443"}}, "parent": {"id": 43150428, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/21/comments/43150428.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/21/_/diff#comment-43150428"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/21"}}, "title": "Dragdroptab"}, "content": {"raw": "Excellent. Thanks for investigating. This makes sense.\n\nThe code is getting leaveEvents when I didn't expect them. I thought leaveEvents would not occur after a mousePressEvent but before a mouseReleaseEvent unless the application lost focus. Handling the leaveEvent is solely so that the drag gets cancelled if the application loses focus. When the application does not have focus, of course there are no leaveEvents, so that's why you're not seeing any problems when it has no focus. When it does have focus, it looks like Qt goes ahead and passes leaveEvents to the application after a mouse press but before a mouse release, which it does not do on Windows or linux. Perhaps I can use focusOutEvent or whatever its called instead to detect the application losing focus.\n\nThe problem being that if the application loses focus, it never gets the mouse release event, and so we need some way to still cancel the drag in this case otherwise you have a tab hovering in limbo forever.", "markup": "markdown", "html": "<p>Excellent. Thanks for investigating. This makes sense.</p>\n<p>The code is getting leaveEvents when I didn't expect them. I thought leaveEvents would not occur after a mousePressEvent but before a mouseReleaseEvent unless the application lost focus. Handling the leaveEvent is solely so that the drag gets cancelled if the application loses focus. When the application does not have focus, of course there are no leaveEvents, so that's why you're not seeing any problems when it has no focus. When it does have focus, it looks like Qt goes ahead and passes leaveEvents to the application after a mouse press but before a mouse release, which it does not do on Windows or linux. Perhaps I can use focusOutEvent or whatever its called instead to detect the application losing focus.</p>\n<p>The problem being that if the application loses focus, it never gets the mouse release event, and so we need some way to still cancel the drag in this case otherwise you have a tab hovering in limbo forever.</p>", "type": "rendered"}, "created_on": "2017-08-19T13:57:15.170043+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-19T13:58:38.439873+00:00", "type": "pullrequest_comment", "id": 43150443}