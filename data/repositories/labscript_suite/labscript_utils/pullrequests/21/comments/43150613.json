{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/21/comments/43150613.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/21/_/diff#comment-43150613"}}, "parent": {"id": 43150585, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/21/comments/43150585.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/21/_/diff#comment-43150585"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/21.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/21"}}, "title": "Dragdroptab"}, "content": {"raw": "I think I found a fix.\n\nI can call `self.grabMouse()` to insist that the widget receive all future mouse events, until mouse release, then I can call `self.releaseMouse()` That way we're guaranteed to get the mouseRelease event and we don't need to handle that edge case of losing focus before getting the mouseRelease event. Then I can just not handle leaveEvent and you won't see the premature drag cancelling.", "markup": "markdown", "html": "<p>I think I found a fix.</p>\n<p>I can call <code>self.grabMouse()</code> to insist that the widget receive all future mouse events, until mouse release, then I can call <code>self.releaseMouse()</code> That way we're guaranteed to get the mouseRelease event and we don't need to handle that edge case of losing focus before getting the mouseRelease event. Then I can just not handle leaveEvent and you won't see the premature drag cancelling.</p>", "type": "rendered"}, "created_on": "2017-08-19T14:21:38.514425+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-19T14:21:38.516816+00:00", "type": "pullrequest_comment", "id": 43150613}