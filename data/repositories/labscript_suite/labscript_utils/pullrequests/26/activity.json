{"pagelen": 50, "values": [{"update": {"description": "This file contains a command line camera server for Pointgrey/FLIR usb3 cameras. It optionally utilizes the new acquistion_ROI property of the camera class. To start the server, type \"python PyCapture2_camera_server.py <cameraNameFromBlacs>\" in a command line running in the labscript_utils directory.\r\n\r\nThis is a fairly simple server that is working well in my lab and gives some idea of how to move away from Labview. It would be nice to have a GUI and serve multiple cameras in a single server, but I'm leaving that for future extensions. Note that the server requires both the FlyCapture2 SDK and the PyCapture2 python wrapper to function.\r\n\r\nDSB\r\n\r\nP.S.\r\nAfter the initial commit, I discovered that setting the black level (brightness) to zero causes strange stripes on \"dark\" images of absorption imaging sequence. I hard coded in a black level of ~1%. It would probably be better to set black level on a per camera basis in the future.", "title": "Feature PyCaptureCamServer", "destination": {"commit": {"hash": "5d95a20678c4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/5d95a20678c4.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/5d95a20678c4"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "superseded by  [labscript_devices PR #71](#!/labscript_suite/labscript_devices/pull-requests/71)", "source": {"commit": {"hash": "7a745cde198b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils/commit/7a745cde198b"}, "html": {"href": "#!/dsbarker/labscript_utils/commits/7a745cde198b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils"}, "html": {"href": "#!/dsbarker/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{56cc001e-4981-42d1-be23-614445b1962d}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "dsbarker/labscript_utils", "uuid": "{56cc001e-4981-42d1-be23-614445b1962d}"}, "branch": {"name": "feature-PyCaptureCamServer"}}, "state": "DECLINED", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-12-04T03:10:19.387513+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/126616324.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-126616324"}}, "parent": {"id": 126614953, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/126614953.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-126614953"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "Seems fine to me.", "markup": "markdown", "html": "<p>Seems fine to me.</p>", "type": "rendered"}, "created_on": "2019-11-27T18:26:24.319979+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2019-11-27T18:26:24.422723+00:00", "type": "pullrequest_comment", "id": 126616324}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/126614953.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-126614953"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "Hi @{557058:02be919f-267c-4793-9e86-ef07d163b58b} and @{557058:411f7712-e1fa-438c-b578-0359da2d9f06} , it seems like this can be closed as superseded by [labscript\\_devices PR #71](#!/labscript_suite/labscript_devices/pull-requests/71). Any objections?", "markup": "markdown", "html": "<p>Hi <span class=\"ap-mention\" data-atlassian-id=\"557058:02be919f-267c-4793-9e86-ef07d163b58b\">@Daniel Barker</span> and <span class=\"ap-mention\" data-atlassian-id=\"557058:411f7712-e1fa-438c-b578-0359da2d9f06\">@David Meyer</span> , it seems like this can be closed as superseded by <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript_devices/pull-requests/71\" rel=\"nofollow\">labscript_devices PR #71</a>. Any objections?</p>", "type": "rendered"}, "created_on": "2019-11-27T18:14:40.549563+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-11-27T18:14:48.736792+00:00", "type": "pullrequest_comment", "id": 126614953}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/75816386.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-75816386"}}, "parent": {"id": 75815341, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/75815341.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-75815341"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "I\u2019ll be wanting to use the server again next week and can test the preview functionality with FLIR cameras then \\(If Chris adds it to the server\\).", "markup": "markdown", "html": "<p>I\u2019ll be wanting to use the server again next week and can test the preview functionality with FLIR cameras then (If Chris adds it to the server).</p>", "type": "rendered"}, "created_on": "2018-09-12T21:33:36.208982+00:00", "user": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "updated_on": "2018-09-12T21:33:36.260274+00:00", "type": "pullrequest_comment", "id": 75816386}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/75816120.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-75816120"}}, "parent": {"id": 75812897, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/75812897.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-75812897"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "I\u2019m unlikely to get to this until next week since we\u2019re in full \u201crebuild the experiment\u201d mode. Chris, you should feel free to make this change. I had noticed this behavior, but never actually tracked it down.", "markup": "markdown", "html": "<p>I\u2019m unlikely to get to this until next week since we\u2019re in full \u201crebuild the experiment\u201d mode. Chris, you should feel free to make this change. I had noticed this behavior, but never actually tracked it down.</p>", "type": "rendered"}, "created_on": "2018-09-12T21:29:30.994389+00:00", "user": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "updated_on": "2018-09-12T21:29:31.043663+00:00", "type": "pullrequest_comment", "id": 75816120}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/75815341.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-75815341"}}, "parent": {"id": 75813235, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/75813235.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-75813235"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "I\u2019ll commit my changes to [here](#!/dihm/labscript_utils/src/feature-PyCaptureCamServer/) tomorrow.\n\nBut waiting is probably the best bet. I\u2019m in full on thesis writing mode at the moment \\(so time is limited\\) and the preview for PointGrey needs some testing that is hard for me since we don\u2019t really use it. It works fine for the other servers I\u2019ve written \\(Basler, Andor, Princeton Instruments\\), but I changed the structure from what Dan has such that the implementation is a lot easier, making the backport more bug prone.", "markup": "markdown", "html": "<p>I\u2019ll commit my changes to <a data-is-external-link=\"true\" href=\"#!/dihm/labscript_utils/src/feature-PyCaptureCamServer/\" rel=\"nofollow\">here</a> tomorrow.</p>\n<p>But waiting is probably the best bet. I\u2019m in full on thesis writing mode at the moment (so time is limited) and the preview for PointGrey needs some testing that is hard for me since we don\u2019t really use it. It works fine for the other servers I\u2019ve written (Basler, Andor, Princeton Instruments), but I changed the structure from what Dan has such that the implementation is a lot easier, making the backport more bug prone.</p>", "type": "rendered"}, "created_on": "2018-09-12T21:18:43.363694+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2018-09-12T21:18:43.437371+00:00", "type": "pullrequest_comment", "id": 75815341}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/75813235.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-75813235"}}, "parent": {"id": 75812584, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/75812584.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-75812584"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "That sounds great! Feel free to just link me to a branch and I can include the changes - or if you wait a bit you can just make a separate pull request once this is merged.", "markup": "markdown", "html": "<p>That sounds great! Feel free to just link me to a branch and I can include the changes - or if you wait a bit you can just make a separate pull request once this is merged.</p>", "type": "rendered"}, "created_on": "2018-09-12T20:54:01.152424+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-09-12T20:54:01.159454+00:00", "type": "pullrequest_comment", "id": 75813235}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/75812897.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-75812897"}}, "parent": {"id": 75812408, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/75812408.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-75812408"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "Ah yes, I noticed and made that fix in some other code recently too. I don't think anything changed about labscript suite code - perhaps this was a change to h5py. The notification in BLACS is based on file modified times.  Opening in read-only mode is better in any case.\n\nI'll make that change after grafting things around locally if Dan doesn't beat me to it.", "markup": "markdown", "html": "<p>Ah yes, I noticed and made that fix in some other code recently too. I don't think anything changed about labscript suite code - perhaps this was a change to h5py. The notification in BLACS is based on file modified times.  Opening in read-only mode is better in any case.</p>\n<p>I'll make that change after grafting things around locally if Dan doesn't beat me to it.</p>", "type": "rendered"}, "created_on": "2018-09-12T20:50:01.289050+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-09-12T20:50:01.299344+00:00", "type": "pullrequest_comment", "id": 75812897}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/75812584.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-75812584"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "Maybe one last thing to add before merging is some functionality we are using in our lab bolted on to this, namely a crude preview mode. An issue we had with using these text based servers is that the only way to get a preview image out is to exit the server then re-open the camera in the manufacturer supplied program to get some sort of video mode for alignment, then close the manufacturer program and restart the server. It gets tedious.\n\nSo in the interest of a more complete, temporary solution until python-BIAS gets made, I wrote up simple hack that opens a matplotlib window with the server and configured the server window to accept keyboard command to enter and exit taking exposures at a fixed interval. It\u2019s crude, but very simple. If there is interest I can send a PR to Dan to add to this PR.", "markup": "markdown", "html": "<p>Maybe one last thing to add before merging is some functionality we are using in our lab bolted on to this, namely a crude preview mode. An issue we had with using these text based servers is that the only way to get a preview image out is to exit the server then re-open the camera in the manufacturer supplied program to get some sort of video mode for alignment, then close the manufacturer program and restart the server. It gets tedious.</p>\n<p>So in the interest of a more complete, temporary solution until python-BIAS gets made, I wrote up simple hack that opens a matplotlib window with the server and configured the server window to accept keyboard command to enter and exit taking exposures at a fixed interval. It\u2019s crude, but very simple. If there is interest I can send a PR to Dan to add to this PR.</p>", "type": "rendered"}, "created_on": "2018-09-12T20:46:48.299473+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2018-09-12T20:46:48.369002+00:00", "type": "pullrequest_comment", "id": 75812584}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/75812408.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-75812408"}}, "parent": {"id": 75808186, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/75808186.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-75808186"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "Before that happens, could we change line 473 so the h5py call to the connection table is made read only. I don\u2019t know when the change happened, but recently these calls have triggered a change file notification in the connection table that causes BLACS to insist on a re-compile. Making that call read-only fixes that for us.", "markup": "markdown", "html": "<p>Before that happens, could we change line 473 so the h5py call to the connection table is made read only. I don\u2019t know when the change happened, but recently these calls have triggered a change file notification in the connection table that causes BLACS to insist on a re-compile. Making that call read-only fixes that for us.</p>", "type": "rendered"}, "created_on": "2018-09-12T20:44:56.827023+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2018-09-12T20:44:56.885838+00:00", "type": "pullrequest_comment", "id": 75812408}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/75808186.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-75808186"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "Hi all,\n\nI think it is high time this be merged. My reading is that there is no problem with licensing since we are not bundling anything.\n\nDan, if it's ok with you I'll rename the file to be something about PointgGrey/FLIR as Russ suggests, and graft everything over into a pull request in labscript_devices instead. Should preserve commit history, which will be useful since there have been bugfixes etc here since the pull request was initially made.", "markup": "markdown", "html": "<p>Hi all,</p>\n<p>I think it is high time this be merged. My reading is that there is no problem with licensing since we are not bundling anything.</p>\n<p>Dan, if it's ok with you I'll rename the file to be something about PointgGrey/FLIR as Russ suggests, and graft everything over into a pull request in labscript_devices instead. Should preserve commit history, which will be useful since there have been bugfixes etc here since the pull request was initially made.</p>", "type": "rendered"}, "created_on": "2018-09-12T20:00:55.246121+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-09-12T20:00:55.252371+00:00", "type": "pullrequest_comment", "id": 75808186}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"update": {"description": "This file contains a command line camera server for Pointgrey/FLIR usb3 cameras. It optionally utilizes the new acquistion_ROI property of the camera class. To start the server, type \"python PyCapture2_camera_server.py <cameraNameFromBlacs>\" in a command line running in the labscript_utils directory.\r\n\r\nThis is a fairly simple server that is working well in my lab and gives some idea of how to move away from Labview. It would be nice to have a GUI and serve multiple cameras in a single server, but I'm leaving that for future extensions. Note that the server requires both the FlyCapture2 SDK and the PyCapture2 python wrapper to function.\r\n\r\nDSB\r\n\r\nP.S.\r\nAfter the initial commit, I discovered that setting the black level (brightness) to zero causes strange stripes on \"dark\" images of absorption imaging sequence. I hard coded in a black level of ~1%. It would probably be better to set black level on a per camera basis in the future.", "title": "Feature PyCaptureCamServer", "destination": {"commit": {"hash": "d07dc31015a3", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/d07dc31015a3.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/d07dc31015a3"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7a745cde198b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils/commit/7a745cde198b"}, "html": {"href": "#!/dsbarker/labscript_utils/commits/7a745cde198b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils"}, "html": {"href": "#!/dsbarker/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{56cc001e-4981-42d1-be23-614445b1962d}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "dsbarker/labscript_utils", "uuid": "{56cc001e-4981-42d1-be23-614445b1962d}"}, "branch": {"name": "feature-PyCaptureCamServer"}}, "state": "OPEN", "author": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "date": "2018-04-24T17:24:55.690049+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/62391042.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-62391042"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "Perhaps this should be renamed to something more specific to the PointgGrey/FLIR cameras this utility supports.", "markup": "markdown", "html": "<p>Perhaps this should be renamed to something more specific to the PointgGrey/FLIR cameras this utility supports.</p>", "type": "rendered"}, "created_on": "2018-04-24T02:14:38.446490+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": "2018-04-24T02:14:38.452369+00:00", "type": "pullrequest_comment", "id": 62391042}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"update": {"description": "This file contains a command line camera server for Pointgrey/FLIR usb3 cameras. It optionally utilizes the new acquistion_ROI property of the camera class. To start the server, type \"python PyCapture2_camera_server.py <cameraNameFromBlacs>\" in a command line running in the labscript_utils directory.\r\n\r\nThis is a fairly simple server that is working well in my lab and gives some idea of how to move away from Labview. It would be nice to have a GUI and serve multiple cameras in a single server, but I'm leaving that for future extensions. Note that the server requires both the FlyCapture2 SDK and the PyCapture2 python wrapper to function.\r\n\r\nDSB\r\n\r\nP.S.\r\nAfter the initial commit, I discovered that setting the black level (brightness) to zero causes strange stripes on \"dark\" images of absorption imaging sequence. I hard coded in a black level of ~1%. It would probably be better to set black level on a per camera basis in the future.", "title": "Feature PyCaptureCamServer", "destination": {"commit": {"hash": "e0e058c506ef", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/e0e058c506ef.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/e0e058c506ef"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "2d54ae6b16a2", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils/commit/2d54ae6b16a2"}, "html": {"href": "#!/dsbarker/labscript_utils/commits/2d54ae6b16a2"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils"}, "html": {"href": "#!/dsbarker/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{56cc001e-4981-42d1-be23-614445b1962d}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "dsbarker/labscript_utils", "uuid": "{56cc001e-4981-42d1-be23-614445b1962d}"}, "branch": {"name": "feature-PyCaptureCamServer"}}, "state": "OPEN", "author": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "date": "2018-04-23T14:09:31.691369+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"update": {"description": "This file contains a command line camera server for Pointgrey/FLIR usb3 cameras. It optionally utilizes the new acquistion_ROI property of the camera class. To start the server, type \"python PyCapture2_camera_server.py <cameraNameFromBlacs>\" in a command line running in the labscript_utils directory.\r\n\r\nThis is a fairly simple server that is working well in my lab and gives some idea of how to move away from Labview. It would be nice to have a GUI and serve multiple cameras in a single server, but I'm leaving that for future extensions. Note that the server requires both the FlyCapture2 SDK and the PyCapture2 python wrapper to function.\r\n\r\nDSB\r\n\r\nP.S.\r\nAfter the initial commit, I discovered that setting the black level (brightness) to zero causes strange stripes on \"dark\" images of absorption imaging sequence. I hard coded in a black level of ~1%. It would probably be better to set black level on a per camera basis in the future.", "title": "Feature PyCaptureCamServer", "destination": {"commit": {"hash": "e0e058c506ef", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/e0e058c506ef.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/e0e058c506ef"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "aad665a1f4d8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils/commit/aad665a1f4d8"}, "html": {"href": "#!/dsbarker/labscript_utils/commits/aad665a1f4d8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils"}, "html": {"href": "#!/dsbarker/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{56cc001e-4981-42d1-be23-614445b1962d}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "dsbarker/labscript_utils", "uuid": "{56cc001e-4981-42d1-be23-614445b1962d}"}, "branch": {"name": "feature-PyCaptureCamServer"}}, "state": "OPEN", "author": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "date": "2018-04-23T14:05:22.139928+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/62058691.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-62058691"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "I've just made changes to make the camera server compatible with Python 3. Note that the PyCapture2 library is only compatible with Python 3.5 and does not work with Python 3.6:\n \nErrors similar to \"module PyCapture2 has no attribute 'BusManager'.\" are due to an incorrect python version. \n\nAlso, you must install the most updated version of the FlyCapture2 SDK before PyCapture2 (I have the server working with FlyCapture 2.12.3.2 and PyCapture 2.11.425). FLIR has a new API that is Python 3.6 compatible (Spinnaker). I'll be branching the server in the future to switch to the Spinnaker wrapper. \n\nNote also that using this server with Python 3 requires Chris Billington's fixes to the PythonCamera class (formerly Camera_acqROI). The essential __future__ import, if you're splitting control and acquisition computers between Python versions as I am, is unicode_literals.", "markup": "markdown", "html": "<p>I've just made changes to make the camera server compatible with Python 3. Note that the PyCapture2 library is only compatible with Python 3.5 and does not work with Python 3.6:</p>\n<p>Errors similar to \"module PyCapture2 has no attribute 'BusManager'.\" are due to an incorrect python version. </p>\n<p>Also, you must install the most updated version of the FlyCapture2 SDK before PyCapture2 (I have the server working with FlyCapture 2.12.3.2 and PyCapture 2.11.425). FLIR has a new API that is Python 3.6 compatible (Spinnaker). I'll be branching the server in the future to switch to the Spinnaker wrapper. </p>\n<p>Note also that using this server with Python 3 requires Chris Billington's fixes to the PythonCamera class (formerly Camera_acqROI). The essential <strong>future</strong> import, if you're splitting control and acquisition computers between Python versions as I am, is unicode_literals.</p>", "type": "rendered"}, "created_on": "2018-04-19T12:48:54.552968+00:00", "user": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "updated_on": "2018-04-19T12:48:54.645743+00:00", "type": "pullrequest_comment", "id": 62058691}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"update": {"description": "This file contains a command line camera server for Pointgrey/FLIR usb3 cameras. It optionally utilizes the new acquistion_ROI property of the camera class. To start the server, type \"python PyCapture2_camera_server.py <cameraNameFromBlacs>\" in a command line running in the labscript_utils directory.\r\n\r\nThis is a fairly simple server that is working well in my lab and gives some idea of how to move away from Labview. It would be nice to have a GUI and serve multiple cameras in a single server, but I'm leaving that for future extensions. Note that the server requires both the FlyCapture2 SDK and the PyCapture2 python wrapper to function.\r\n\r\nDSB\r\n\r\nP.S.\r\nAfter the initial commit, I discovered that setting the black level (brightness) to zero causes strange stripes on \"dark\" images of absorption imaging sequence. I hard coded in a black level of ~1%. It would probably be better to set black level on a per camera basis in the future.", "title": "Feature PyCaptureCamServer", "destination": {"commit": {"hash": "e0e058c506ef", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/e0e058c506ef.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/e0e058c506ef"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "2ac3698d0156", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils/commit/2ac3698d0156"}, "html": {"href": "#!/dsbarker/labscript_utils/commits/2ac3698d0156"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils"}, "html": {"href": "#!/dsbarker/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{56cc001e-4981-42d1-be23-614445b1962d}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "dsbarker/labscript_utils", "uuid": "{56cc001e-4981-42d1-be23-614445b1962d}"}, "branch": {"name": "feature-PyCaptureCamServer"}}, "state": "OPEN", "author": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "date": "2018-04-18T21:53:26.305514+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"update": {"description": "This file contains a command line camera server for Pointgrey/FLIR usb3 cameras. It optionally utilizes the new acquistion_ROI property of the camera class. To start the server, type \"python PyCapture2_camera_server.py <cameraNameFromBlacs>\" in a command line running in the labscript_utils directory.\r\n\r\nThis is a fairly simple server that is working well in my lab and gives some idea of how to move away from Labview. It would be nice to have a GUI and serve multiple cameras in a single server, but I'm leaving that for future extensions. Note that the server requires both the FlyCapture2 SDK and the PyCapture2 python wrapper to function.\r\n\r\nDSB\r\n\r\nP.S.\r\nAfter the initial commit, I discovered that setting the black level (brightness) to zero causes strange stripes on \"dark\" images of absorption imaging sequence. I hard coded in a black level of ~1%. It would probably be better to set black level on a per camera basis in the future.", "title": "Feature PyCaptureCamServer", "destination": {"commit": {"hash": "e0e058c506ef", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/e0e058c506ef.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/e0e058c506ef"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "26727bea3b8b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils/commit/26727bea3b8b"}, "html": {"href": "#!/dsbarker/labscript_utils/commits/26727bea3b8b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils"}, "html": {"href": "#!/dsbarker/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{56cc001e-4981-42d1-be23-614445b1962d}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "dsbarker/labscript_utils", "uuid": "{56cc001e-4981-42d1-be23-614445b1962d}"}, "branch": {"name": "feature-PyCaptureCamServer"}}, "state": "OPEN", "author": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "date": "2018-04-18T21:36:12.351413+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"update": {"description": "This file contains a command line camera server for Pointgrey/FLIR usb3 cameras. It optionally utilizes the new acquistion_ROI property of the camera class. To start the server, type \"python PyCapture2_camera_server.py <cameraNameFromBlacs>\" in a command line running in the labscript_utils directory.\r\n\r\nThis is a fairly simple server that is working well in my lab and gives some idea of how to move away from Labview. It would be nice to have a GUI and serve multiple cameras in a single server, but I'm leaving that for future extensions. Note that the server requires both the FlyCapture2 SDK and the PyCapture2 python wrapper to function.\r\n\r\nDSB\r\n\r\nP.S.\r\nAfter the initial commit, I discovered that setting the black level (brightness) to zero causes strange stripes on \"dark\" images of absorption imaging sequence. I hard coded in a black level of ~1%. It would probably be better to set black level on a per camera basis in the future.", "title": "Feature PyCaptureCamServer", "destination": {"commit": {"hash": "e0e058c506ef", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/e0e058c506ef.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/e0e058c506ef"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "12b695c1ba92", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils/commit/12b695c1ba92"}, "html": {"href": "#!/dsbarker/labscript_utils/commits/12b695c1ba92"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils"}, "html": {"href": "#!/dsbarker/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{56cc001e-4981-42d1-be23-614445b1962d}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "dsbarker/labscript_utils", "uuid": "{56cc001e-4981-42d1-be23-614445b1962d}"}, "branch": {"name": "feature-PyCaptureCamServer"}}, "state": "OPEN", "author": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "date": "2018-04-18T15:13:29.965212+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/58239733.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-58239733"}}, "parent": {"id": 56479451, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/56479451.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-56479451"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "Hi Dan,\n\nI looked into this again after working on another project for a couple weeks. You were correct that it was an issue with the camera, rather than the server. It turns out that the trigger polarity for the Point Grey Chameleon3 CM3-U3-13S2M camera is the opposite of other Point Grey cameras. This solved both the one and two picture shot issues. \n\nBest,\nJulia", "markup": "markdown", "html": "<p>Hi Dan,</p>\n<p>I looked into this again after working on another project for a couple weeks. You were correct that it was an issue with the camera, rather than the server. It turns out that the trigger polarity for the Point Grey Chameleon3 CM3-U3-13S2M camera is the opposite of other Point Grey cameras. This solved both the one and two picture shot issues. </p>\n<p>Best,\nJulia</p>", "type": "rendered"}, "created_on": "2018-03-07T22:41:39.208984+00:00", "user": {"display_name": "Julia Cline", "uuid": "{97718b1a-c50c-4a7e-9335-e1766097a67e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B97718b1a-c50c-4a7e-9335-e1766097a67e%7D"}, "html": {"href": "https://bitbucket.org/%7B97718b1a-c50c-4a7e-9335-e1766097a67e%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/514287ed8f5d88b9ad075409a8813a48d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJC-0.png"}}, "nickname": "julia_cline", "type": "user", "account_id": "5a4bf63de0a6f308201e17c4"}, "updated_on": "2018-03-07T22:41:39.283297+00:00", "type": "pullrequest_comment", "id": 58239733}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/56479451.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-56479451"}}, "parent": {"id": 56434877, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/56434877.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-56434877"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "Hi Dan,\n\nThank you very much for your reply! \n\nIt makes sense that the time between triggers needs to be at least 34ms. I'm not quite sure what is going on - I tried changing the time between images to 1 second and see the same behavior. I will try to look into this more. For the single image runs, the experimental cycle time was set to 2s, which is longer than the camera readout time. If I figure out what is going on, I will post again. ", "markup": "markdown", "html": "<p>Hi Dan,</p>\n<p>Thank you very much for your reply! </p>\n<p>It makes sense that the time between triggers needs to be at least 34ms. I'm not quite sure what is going on - I tried changing the time between images to 1 second and see the same behavior. I will try to look into this more. For the single image runs, the experimental cycle time was set to 2s, which is longer than the camera readout time. If I figure out what is going on, I will post again. </p>", "type": "rendered"}, "created_on": "2018-02-15T23:27:42.438765+00:00", "user": {"display_name": "Julia Cline", "uuid": "{97718b1a-c50c-4a7e-9335-e1766097a67e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B97718b1a-c50c-4a7e-9335-e1766097a67e%7D"}, "html": {"href": "https://bitbucket.org/%7B97718b1a-c50c-4a7e-9335-e1766097a67e%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/514287ed8f5d88b9ad075409a8813a48d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJC-0.png"}}, "nickname": "julia_cline", "type": "user", "account_id": "5a4bf63de0a6f308201e17c4"}, "updated_on": "2018-02-15T23:27:42.515500+00:00", "type": "pullrequest_comment", "id": 56479451}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/56434877.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-56434877"}}, "parent": {"id": 56360991, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/56360991.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-56360991"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "Hi Julia,\n\n* Yes, that should be idx+1. \n* This is a known bug that I hadn't got around to fixing.\n\nI just pushed a commit that should correct both problems. However, I have not fully tested them yet since we're in the midst of an experimental rebuild. Let me know if there's an issue and I can revert/update the code.\n\n* This is trickier. I suspect that the problem is with the camera and not the server. When I've seen similar errors, the problem has always been that I was not waiting long enough between images (if the timeout occurs at image 2) or that my trigger width is insufficient (if the timeout is at image 1). It looks like the frame rate for your camera is 30 FPS, so the time between triggers will need to be at least 34 ms for full frame readout. I have found that FLIR cameras often slightly under perform their frame rate spec when they're used with custom software, so you may need to increase the delay between images further. Your max_wait is set for 10 ms, so that may be part of the problem.\n\nThe issue with sequential single image runs worries me more. I haven't seen this behavior before, so it may be an edge case bug. Your single shot routine does not exit the grab loop cleanly (there's no \"Capture stopped\" print out). Maybe the experimental cycle time is shorter than the camera readout time? max_wait defaults to 100 ms with a single image, so the cycle could come around before the camera buffer retrieval times out. I'll dig into this more when I have more time and the ability to test.", "markup": "markdown", "html": "<p>Hi Julia,</p>\n<ul>\n<li>Yes, that should be idx+1. </li>\n<li>This is a known bug that I hadn't got around to fixing.</li>\n</ul>\n<p>I just pushed a commit that should correct both problems. However, I have not fully tested them yet since we're in the midst of an experimental rebuild. Let me know if there's an issue and I can revert/update the code.</p>\n<ul>\n<li>This is trickier. I suspect that the problem is with the camera and not the server. When I've seen similar errors, the problem has always been that I was not waiting long enough between images (if the timeout occurs at image 2) or that my trigger width is insufficient (if the timeout is at image 1). It looks like the frame rate for your camera is 30 FPS, so the time between triggers will need to be at least 34 ms for full frame readout. I have found that FLIR cameras often slightly under perform their frame rate spec when they're used with custom software, so you may need to increase the delay between images further. Your max_wait is set for 10 ms, so that may be part of the problem.</li>\n</ul>\n<p>The issue with sequential single image runs worries me more. I haven't seen this behavior before, so it may be an edge case bug. Your single shot routine does not exit the grab loop cleanly (there's no \"Capture stopped\" print out). Maybe the experimental cycle time is shorter than the camera readout time? max_wait defaults to 100 ms with a single image, so the cycle could come around before the camera buffer retrieval times out. I'll dig into this more when I have more time and the ability to test.</p>", "type": "rendered"}, "created_on": "2018-02-15T15:31:39.199172+00:00", "user": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "updated_on": "2018-02-15T15:33:08.114622+00:00", "type": "pullrequest_comment", "id": 56434877}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"update": {"description": "This file contains a command line camera server for Pointgrey/FLIR usb3 cameras. It optionally utilizes the new acquistion_ROI property of the camera class. To start the server, type \"python PyCapture2_camera_server.py <cameraNameFromBlacs>\" in a command line running in the labscript_utils directory.\r\n\r\nThis is a fairly simple server that is working well in my lab and gives some idea of how to move away from Labview. It would be nice to have a GUI and serve multiple cameras in a single server, but I'm leaving that for future extensions. Note that the server requires both the FlyCapture2 SDK and the PyCapture2 python wrapper to function.\r\n\r\nDSB\r\n\r\nP.S.\r\nAfter the initial commit, I discovered that setting the black level (brightness) to zero causes strange stripes on \"dark\" images of absorption imaging sequence. I hard coded in a black level of ~1%. It would probably be better to set black level on a per camera basis in the future.", "title": "Feature PyCaptureCamServer", "destination": {"commit": {"hash": "ee0808eb9205", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/ee0808eb9205.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/ee0808eb9205"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ad405402462e", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils/commit/ad405402462e"}, "html": {"href": "#!/dsbarker/labscript_utils/commits/ad405402462e"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils"}, "html": {"href": "#!/dsbarker/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{56cc001e-4981-42d1-be23-614445b1962d}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "dsbarker/labscript_utils", "uuid": "{56cc001e-4981-42d1-be23-614445b1962d}"}, "branch": {"name": "feature-PyCaptureCamServer"}}, "state": "OPEN", "author": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "date": "2018-02-15T15:01:14.794723+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/56360991.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-56360991"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "Hi Dan,\n\nThanks for creating this server (and thanks David for referring me to it). I'm excited to have an all-python data acquisition system! I am a grad student in the Thompson lab at JILA. \n\nI grabbed the code and have been testing it with a Point Grey Chameleon3 CM3-U3-13S2M camera. I have noticed a few things: \n\n- On line 249,  i=idx should probably be i=idx+1 so that if there is an error retrieving the buffer, it displays the correct image number\n\n- For a shot with one image, if it returns an empty image, it can take 40s to timeout the save\n```\nZ:\\Experiments\\example_experiment\\test_ptgrey\\2018\\02\\08\\20180208T130955_test_ptgrey_0.h5\nmax_wait = 0.1 s\nConfigured for 1 images.\nCapture started.\ndone\nTimeout in image acquisition. Returning empty images.\nSaving 0 images.\nfluoro camera shots saving time: 40.7279999256 s\n```\n\n- If I have a sequence with two pictures, there is a timeout error when retrieving the buffer for the 2nd image. I can increase the wait time to be arbitrarily long (say 1s) and I still see this error. The exposure time is 100us (according to documentation, min should be 46us) and the minimum recovery time is 1ms. I teed into the trigger line and the triggers seem to be reasonable. They are 100us square wave pulses, spaced by the time between the pictures. I tried using 3.3 V and 5 V pulses, but it didn't make a difference. I also tried changing the number of images. With more than 2 images, I got exactly the same response. With one image, if the camera server has just been initialized, it seems to be ok. If I run another shot with the same camera server, the image acquisition times out. The server messages for a shot with two images are:\n\n\n```\nZ:\\Experiments\\example_experiment\\test_ptgrey\\2018\\02\\14\\20180214T162806_test_ptgrey_0.h5\nmax_wait = 0.01 s\nConfigured for 2 images.\nCapture started.\nn_Rows = 964, n_Cols = 1288\nretrieved 1th image of 2 images\nError retrieving buffer: 'Timeout error.' at 2th image.\ngot 1 images.\nCapture stopped.\ndone\nSaving 1 images.\natoms camera shots saving time: 0.00500011444092 s\n```\n\n\nI am not very familiar with bitbucket, sorry for the formatting!\n\nThanks,\nJulia", "markup": "markdown", "html": "<p>Hi Dan,</p>\n<p>Thanks for creating this server (and thanks David for referring me to it). I'm excited to have an all-python data acquisition system! I am a grad student in the Thompson lab at JILA. </p>\n<p>I grabbed the code and have been testing it with a Point Grey Chameleon3 CM3-U3-13S2M camera. I have noticed a few things: </p>\n<ul>\n<li>\n<p>On line 249,  i=idx should probably be i=idx+1 so that if there is an error retrieving the buffer, it displays the correct image number</p>\n</li>\n<li>\n<p>For a shot with one image, if it returns an empty image, it can take 40s to timeout the save</p>\n</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>Z:\\Experiments\\example_experiment\\test_ptgrey\\2018\\02\\08\\20180208T130955_test_ptgrey_0.h5\nmax_wait = 0.1 s\nConfigured for 1 images.\nCapture started.\ndone\nTimeout in image acquisition. Returning empty images.\nSaving 0 images.\nfluoro camera shots saving time: 40.7279999256 s\n</pre></div>\n\n\n<ul>\n<li>If I have a sequence with two pictures, there is a timeout error when retrieving the buffer for the 2nd image. I can increase the wait time to be arbitrarily long (say 1s) and I still see this error. The exposure time is 100us (according to documentation, min should be 46us) and the minimum recovery time is 1ms. I teed into the trigger line and the triggers seem to be reasonable. They are 100us square wave pulses, spaced by the time between the pictures. I tried using 3.3 V and 5 V pulses, but it didn't make a difference. I also tried changing the number of images. With more than 2 images, I got exactly the same response. With one image, if the camera server has just been initialized, it seems to be ok. If I run another shot with the same camera server, the image acquisition times out. The server messages for a shot with two images are:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>Z:\\Experiments\\example_experiment\\test_ptgrey\\2018\\02\\14\\20180214T162806_test_ptgrey_0.h5\nmax_wait = 0.01 s\nConfigured for 2 images.\nCapture started.\nn_Rows = 964, n_Cols = 1288\nretrieved 1th image of 2 images\nError retrieving buffer: &#39;Timeout error.&#39; at 2th image.\ngot 1 images.\nCapture stopped.\ndone\nSaving 1 images.\natoms camera shots saving time: 0.00500011444092 s\n</pre></div>\n\n\n<p>I am not very familiar with bitbucket, sorry for the formatting!</p>\n<p>Thanks,\nJulia</p>", "type": "rendered"}, "created_on": "2018-02-15T00:12:28.339391+00:00", "user": {"display_name": "Julia Cline", "uuid": "{97718b1a-c50c-4a7e-9335-e1766097a67e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B97718b1a-c50c-4a7e-9335-e1766097a67e%7D"}, "html": {"href": "https://bitbucket.org/%7B97718b1a-c50c-4a7e-9335-e1766097a67e%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/514287ed8f5d88b9ad075409a8813a48d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJC-0.png"}}, "nickname": "julia_cline", "type": "user", "account_id": "5a4bf63de0a6f308201e17c4"}, "updated_on": "2018-02-15T00:12:28.482543+00:00", "type": "pullrequest_comment", "id": 56360991}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"update": {"description": "This file contains a command line camera server for Pointgrey/FLIR usb3 cameras. It optionally utilizes the new acquistion_ROI property of the camera class. To start the server, type \"python PyCapture2_camera_server.py <cameraNameFromBlacs>\" in a command line running in the labscript_utils directory.\r\n\r\nThis is a fairly simple server that is working well in my lab and gives some idea of how to move away from Labview. It would be nice to have a GUI and serve multiple cameras in a single server, but I'm leaving that for future extensions. Note that the server requires both the FlyCapture2 SDK and the PyCapture2 python wrapper to function.\r\n\r\nDSB\r\n\r\nP.S.\r\nAfter the initial commit, I discovered that setting the black level (brightness) to zero causes strange stripes on \"dark\" images of absorption imaging sequence. I hard coded in a black level of ~1%. It would probably be better to set black level on a per camera basis in the future.", "title": "Feature PyCaptureCamServer", "destination": {"commit": {"hash": "ee0808eb9205", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/ee0808eb9205.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/ee0808eb9205"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "5dc3a1f2e4f5", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils/commit/5dc3a1f2e4f5"}, "html": {"href": "#!/dsbarker/labscript_utils/commits/5dc3a1f2e4f5"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils"}, "html": {"href": "#!/dsbarker/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{56cc001e-4981-42d1-be23-614445b1962d}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "dsbarker/labscript_utils", "uuid": "{56cc001e-4981-42d1-be23-614445b1962d}"}, "branch": {"name": "feature-PyCaptureCamServer"}}, "state": "OPEN", "author": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "date": "2017-12-01T13:24:40.417888+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/49423433.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-49423433"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "I found a bug that occurs during aborted shots. I've updated the code to make sure blacs and the camera server stay sync'd:\n\n\n```\n#!diff\n\n@@ -419,7 +419,9 @@\n                     cam.setImageMode(width, height, offX, offY)\n                 continue # skip put into results_queue\n             elif command == 'abort':\n-                continue # dummy command to cause grabMultiple to break\n+                # command to cause grabMultiple to break\n+                results_queue.get(timeout=1) # Pull bad images out of queue.\n+                continue\n             elif command == 'quit':\n                 break\n             else:\n```\n\n@dihm , you may want to add a similar line to your server as well.", "markup": "markdown", "html": "<p>I found a bug that occurs during aborted shots. I've updated the code to make sure blacs and the camera server stay sync'd:</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gu\">@@ -419,7 +419,9 @@</span>\n                     cam.setImageMode(width, height, offX, offY)\n                 continue # skip put into results_queue\n             elif command == &#39;abort&#39;:\n<span class=\"gd\">-                continue # dummy command to cause grabMultiple to break</span>\n<span class=\"gi\">+                # command to cause grabMultiple to break</span>\n<span class=\"gi\">+                results_queue.get(timeout=1) # Pull bad images out of queue.</span>\n<span class=\"gi\">+                continue</span>\n             elif command == &#39;quit&#39;:\n                 break\n             else:\n</pre></div>\n\n\n<p>@dihm , you may want to add a similar line to your server as well.</p>", "type": "rendered"}, "created_on": "2017-11-13T14:39:56.800383+00:00", "user": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "updated_on": "2017-11-13T14:39:56.898991+00:00", "type": "pullrequest_comment", "id": 49423433}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"update": {"description": "This file contains a command line camera server for Pointgrey/FLIR usb3 cameras. It optionally utilizes the new acquistion_ROI property of the camera class. To start the server, type \"python PyCapture2_camera_server.py <cameraNameFromBlacs>\" in a command line running in the labscript_utils directory.\r\n\r\nThis is a fairly simple server that is working well in my lab and gives some idea of how to move away from Labview. It would be nice to have a GUI and serve multiple cameras in a single server, but I'm leaving that for future extensions. Note that the server requires both the FlyCapture2 SDK and the PyCapture2 python wrapper to function.\r\n\r\nDSB\r\n\r\nP.S.\r\nAfter the initial commit, I discovered that setting the black level (brightness) to zero causes strange stripes on \"dark\" images of absorption imaging sequence. I hard coded in a black level of ~1%. It would probably be better to set black level on a per camera basis in the future.", "title": "Feature PyCaptureCamServer", "destination": {"commit": {"hash": "ee0808eb9205", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/ee0808eb9205.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/ee0808eb9205"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "13641218b3aa", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils/commit/13641218b3aa"}, "html": {"href": "#!/dsbarker/labscript_utils/commits/13641218b3aa"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils"}, "html": {"href": "#!/dsbarker/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{56cc001e-4981-42d1-be23-614445b1962d}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "dsbarker/labscript_utils", "uuid": "{56cc001e-4981-42d1-be23-614445b1962d}"}, "branch": {"name": "feature-PyCaptureCamServer"}}, "state": "OPEN", "author": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "date": "2017-11-09T22:34:27.930930+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/49065664.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-49065664"}}, "parent": {"id": 49010640, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/49010640.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-49010640"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "No worries Phil. I figured there was some top-down guidance to be had for this and wanted to wait for it before sending an essentially identical pull request. Just getting some potentially useful code out there where it can be found in case somebody needs it sooner.", "markup": "markdown", "html": "<p>No worries Phil. I figured there was some top-down guidance to be had for this and wanted to wait for it before sending an essentially identical pull request. Just getting some potentially useful code out there where it can be found in case somebody needs it sooner.</p>", "type": "rendered"}, "created_on": "2017-11-08T12:37:50.222242+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2017-11-08T12:37:50.277225+00:00", "type": "pullrequest_comment", "id": 49065664}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/49010640.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-49010640"}}, "parent": {"id": 48971337, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/48971337.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-48971337"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "Sorry about the delay in merging. I'm not confident on signing off on this at the moment, and would like Chris Billington to take a look at the licensing, once he finishes thesis writing, so we can decide the best course of action for additions like this.", "markup": "markdown", "html": "<p>Sorry about the delay in merging. I'm not confident on signing off on this at the moment, and would like Chris Billington to take a look at the licensing, once he finishes thesis writing, so we can decide the best course of action for additions like this.</p>", "type": "rendered"}, "created_on": "2017-11-07T23:23:19.792904+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-11-07T23:23:19.796011+00:00", "type": "pullrequest_comment", "id": 49010640}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/48971337.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-48971337"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "For any interested party, I've finished a first pass in making similar functionality for Basler cameras using the Pylon SDK \\(available in a branch of my fork [here](#!/dihm/labscript_utils/branch/feature-PyPylonCameraServer)\\). I'm holding off on sending a pull request until this one gets through.", "markup": "markdown", "html": "<p>For any interested party, I've finished a first pass in making similar functionality for Basler cameras using the Pylon SDK (available in a branch of my fork <a data-is-external-link=\"true\" href=\"#!/dihm/labscript_utils/branch/feature-PyPylonCameraServer\" rel=\"nofollow\">here</a>). I'm holding off on sending a pull request until this one gets through.</p>", "type": "rendered"}, "created_on": "2017-11-07T16:00:51.364869+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2017-11-07T16:00:51.419344+00:00", "type": "pullrequest_comment", "id": 48971337}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"update": {"description": "This file contains a command line camera server for Pointgrey/FLIR usb3 cameras. It optionally utilizes the new acquistion_ROI property of the camera class. To start the server, type \"python PyCapture2_camera_server.py <cameraNameFromBlacs>\" in a command line running in the labscript_utils directory.\r\n\r\nThis is a fairly simple server that is working well in my lab and gives some idea of how to move away from Labview. It would be nice to have a GUI and serve multiple cameras in a single server, but I'm leaving that for future extensions. Note that the server requires both the FlyCapture2 SDK and the PyCapture2 python wrapper to function.\r\n\r\nDSB\r\n\r\nP.S.\r\nAfter the initial commit, I discovered that setting the black level (brightness) to zero causes strange stripes on \"dark\" images of absorption imaging sequence. I hard coded in a black level of ~1%. It would probably be better to set black level on a per camera basis in the future.", "title": "Feature PyCaptureCamServer", "destination": {"commit": {"hash": "1ca691f3c898", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/1ca691f3c898.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/1ca691f3c898"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "747bb63d9509", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils/commit/747bb63d9509"}, "html": {"href": "#!/dsbarker/labscript_utils/commits/747bb63d9509"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils"}, "html": {"href": "#!/dsbarker/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{56cc001e-4981-42d1-be23-614445b1962d}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "dsbarker/labscript_utils", "uuid": "{56cc001e-4981-42d1-be23-614445b1962d}"}, "branch": {"name": "feature-PyCaptureCamServer"}}, "state": "OPEN", "author": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "date": "2017-09-21T14:15:57.855550+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/44800443.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-44800443"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "I've updated the server with David's suggestion for image readout. It's now ready to be merged assuming that the licensing is okay.", "markup": "markdown", "html": "<p>I've updated the server with David's suggestion for image readout. It's now ready to be merged assuming that the licensing is okay.</p>", "type": "rendered"}, "created_on": "2017-09-12T18:09:45.520325+00:00", "user": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "updated_on": "2017-09-12T18:09:45.576374+00:00", "type": "pullrequest_comment", "id": 44800443}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"update": {"description": "This file contains a command line camera server for Pointgrey/FLIR usb3 cameras. It optionally utilizes the new acquistion_ROI property of the camera class. To start the server, type \"python PyCapture2_camera_server.py <cameraNameFromBlacs>\" in a command line running in the labscript_utils directory.\r\n\r\nThis is a fairly simple server that is working well in my lab and gives some idea of how to move away from Labview. It would be nice to have a GUI and serve multiple cameras in a single server, but I'm leaving that for future extensions. Note that the server requires both the FlyCapture2 SDK and the PyCapture2 python wrapper to function.\r\n\r\nDSB\r\n\r\nP.S.\r\nAfter the initial commit, I discovered that setting the black level (brightness) to zero causes strange stripes on \"dark\" images of absorption imaging sequence. I hard coded in a black level of ~1%. It would probably be better to set black level on a per camera basis in the future.", "title": "Feature PyCaptureCamServer", "destination": {"commit": {"hash": "1ca691f3c898", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/1ca691f3c898.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/1ca691f3c898"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "c41be7104f5a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils/commit/c41be7104f5a"}, "html": {"href": "#!/dsbarker/labscript_utils/commits/c41be7104f5a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils"}, "html": {"href": "#!/dsbarker/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{56cc001e-4981-42d1-be23-614445b1962d}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "dsbarker/labscript_utils", "uuid": "{56cc001e-4981-42d1-be23-614445b1962d}"}, "branch": {"name": "feature-PyCaptureCamServer"}}, "state": "OPEN", "author": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "date": "2017-09-12T18:04:50.055647+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/44583785.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-44583785"}}, "parent": {"id": 44550478, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/44550478.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-44550478"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "Thanks for the suggestion, I figured my method was sub-optimal. On my super slow machine, this seems to shave off between 0.1-1.0 s from a 1.5-2.5 s saving time for 10 images (1024x1280). I'll make a commit next week.", "markup": "markdown", "html": "<p>Thanks for the suggestion, I figured my method was sub-optimal. On my super slow machine, this seems to shave off between 0.1-1.0 s from a 1.5-2.5 s saving time for 10 images (1024x1280). I'll make a commit next week.</p>", "type": "rendered"}, "created_on": "2017-09-08T21:30:03.848652+00:00", "user": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "updated_on": "2017-09-08T21:30:03.885396+00:00", "type": "pullrequest_comment", "id": 44583785}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/44550478.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-44550478"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "Dan,\n\nCan I suggest this different way to handle the image data conversion on lines 370-373?\n\n```Python\nif img_type[idx] == f_type:\r\n    img_data = np.array(images[idx],dtype=np.uint8).view(np.uint16)\r\n    imgs_toSave[f_type].append(img_data.reshape(n_Rows, n_Cols))\n```\n\nThis way keeps the data in compiled numpy code and avoids a few temporary memory allocations, using about a quarter the memory. More importantly, it's easy to adapt to MONO8 data by just changing the view dtype to np.uint8 (or eliminating the view outright, whichever approach is easier to generalize in python). Eventually I'd like to implement the MONO8 option for image capture for faster successive images. I also personally find it easier to understand what's happening, which is nice considering the PyCapture2 documentation really leaves something to be desired.\n\nAnd for the curious, changing the dtype=np.uint8 to .astype(np.uint8) is roughly 5% faster (with the corresponding larger memory footprint) thanks to quirks in how numpy allocates from python lists. \n\nAnyway, profiling is a really fun distraction but I should get back to work. Let me know if there are other ways I can help. I'm really keen to avoid BIAS on a new setup.", "markup": "markdown", "html": "<p>Dan,</p>\n<p>Can I suggest this different way to handle the image data conversion on lines 370-373?</p>\n<div class=\"codehilite language-Python\"><pre><span></span><span class=\"k\">if</span> <span class=\"n\">img_type</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">f_type</span><span class=\"p\">:</span>\n    <span class=\"n\">img_data</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">images</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">],</span><span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">uint16</span><span class=\"p\">)</span>\n    <span class=\"n\">imgs_toSave</span><span class=\"p\">[</span><span class=\"n\">f_type</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">img_data</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"n\">n_Rows</span><span class=\"p\">,</span> <span class=\"n\">n_Cols</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>This way keeps the data in compiled numpy code and avoids a few temporary memory allocations, using about a quarter the memory. More importantly, it's easy to adapt to MONO8 data by just changing the view dtype to np.uint8 (or eliminating the view outright, whichever approach is easier to generalize in python). Eventually I'd like to implement the MONO8 option for image capture for faster successive images. I also personally find it easier to understand what's happening, which is nice considering the PyCapture2 documentation really leaves something to be desired.</p>\n<p>And for the curious, changing the dtype=np.uint8 to .astype(np.uint8) is roughly 5% faster (with the corresponding larger memory footprint) thanks to quirks in how numpy allocates from python lists. </p>\n<p>Anyway, profiling is a really fun distraction but I should get back to work. Let me know if there are other ways I can help. I'm really keen to avoid BIAS on a new setup.</p>", "type": "rendered"}, "created_on": "2017-09-08T13:52:18.841015+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2017-09-08T13:52:18.920633+00:00", "type": "pullrequest_comment", "id": 44550478}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/44548259.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-44548259"}}, "parent": {"id": 44545693, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/44545693.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-44545693"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "I also believe we're okay, since we are not distributing FlyCapture2 or PyCapture2.", "markup": "markdown", "html": "<p>I also believe we're okay, since we are not distributing FlyCapture2 or PyCapture2.</p>", "type": "rendered"}, "created_on": "2017-09-08T13:32:25.469818+00:00", "user": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "updated_on": "2017-09-08T13:32:25.526840+00:00", "type": "pullrequest_comment", "id": 44548259}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/44545693.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-44545693"}}, "parent": {"id": 44448036, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/44448036.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-44448036"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "Not to drop in uninvited but I'm very interested in seeing this functionality worked into labscript.\n\nThere are a couple python based projects available through pip, source on github [here ](https://github.com/matham/pyflycap2)& [here](https://github.com/IRIM-Technology-Transition-Lab/robot2camera-calibration), with MIT licenses that use flycapture2. If we assume they are actually in compliance we should also be OK.", "markup": "markdown", "html": "<p>Not to drop in uninvited but I'm very interested in seeing this functionality worked into labscript.</p>\n<p>There are a couple python based projects available through pip, source on github <a data-is-external-link=\"true\" href=\"https://github.com/matham/pyflycap2\" rel=\"nofollow\">here </a>&amp; <a data-is-external-link=\"true\" href=\"https://github.com/IRIM-Technology-Transition-Lab/robot2camera-calibration\" rel=\"nofollow\">here</a>, with MIT licenses that use flycapture2. If we assume they are actually in compliance we should also be OK.</p>", "type": "rendered"}, "created_on": "2017-09-08T13:10:23.881815+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2017-09-08T13:10:23.947915+00:00", "type": "pullrequest_comment", "id": 44545693}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/44448036.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-44448036"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "This is in the header of the .h files and all the examples that FLIR provides with FlyCapture2 and PyCapture2:\n\n>\n> Copyright 2017 FLIR Integrated Imaging Solutions, Inc. All Rights Reserved.\n>\n> This software is the confidential and proprietary information of FLIR\n> Integrated Imaging Solutions, Inc. (\"Confidential Information\"). You\n> shall not disclose such Confidential Information and shall use it only in\n> accordance with the terms of the license agreement you entered into\n> with FLIR Integrated Imaging Solutions, Inc. (FLIR).\n>\n> FLIR MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF THE\n> SOFTWARE, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\n> IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR\n> PURPOSE, OR NON-INFRINGEMENT. FLIR SHALL NOT BE LIABLE FOR ANY DAMAGES\n> SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING\n> THIS SOFTWARE OR ITS DERIVATIVES.\n>\n\nLooks like it just references the EULA and disclaims responsibility. While I was looking for this I discovered that FlyCapture2 also uses ~8 open license libraries (under MIT license, Microsoft Public License, Creative Commons Attribution 2.5, Common Public License 1.0, Lesser General Public License 2.1, Code Project Open License, and a few that seem custom) and Intel Integrated Performance Primitives (which is covered under another EULA, but the link is dead). Do we need to worry about any of these?", "markup": "markdown", "html": "<p>This is in the header of the .h files and all the examples that FLIR provides with FlyCapture2 and PyCapture2:</p>\n<blockquote>\n<p>Copyright 2017 FLIR Integrated Imaging Solutions, Inc. All Rights Reserved.</p>\n<p>This software is the confidential and proprietary information of FLIR\nIntegrated Imaging Solutions, Inc. (\"Confidential Information\"). You\nshall not disclose such Confidential Information and shall use it only in\naccordance with the terms of the license agreement you entered into\nwith FLIR Integrated Imaging Solutions, Inc. (FLIR).</p>\n<p>FLIR MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF THE\nSOFTWARE, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR\nPURPOSE, OR NON-INFRINGEMENT. FLIR SHALL NOT BE LIABLE FOR ANY DAMAGES\nSUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING\nTHIS SOFTWARE OR ITS DERIVATIVES.\n</p>\n</blockquote>\n<p>Looks like it just references the EULA and disclaims responsibility. While I was looking for this I discovered that FlyCapture2 also uses ~8 open license libraries (under MIT license, Microsoft Public License, Creative Commons Attribution 2.5, Common Public License 1.0, Lesser General Public License 2.1, Code Project Open License, and a few that seem custom) and Intel Integrated Performance Primitives (which is covered under another EULA, but the link is dead). Do we need to worry about any of these?</p>", "type": "rendered"}, "created_on": "2017-09-07T13:04:43.233129+00:00", "user": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "updated_on": "2017-09-07T13:04:43.337499+00:00", "type": "pullrequest_comment", "id": 44448036}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/44397905.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-44397905"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "Hmm, I'm not sure. That EULA doesn't really cover what I expected it to. Does the SDK come with source files for the C API? Is there any licensing information in those files (in a header of each source file or license.txt file)? Similarly, do the Python files have any header information that contains a software license (I'm not sure where they would be located but probably either in the `<python install>\\Lib\\site-packages` or you might need to inspect `sys.path`)?\n\nI'm leaning towards this being fine (the EULA states that you can use the software and they don't imply any control over software you write that uses their software provided you don't distribute the SDK) but probably worth checking those places just in case.", "markup": "markdown", "html": "<p>Hmm, I'm not sure. That EULA doesn't really cover what I expected it to. Does the SDK come with source files for the C API? Is there any licensing information in those files (in a header of each source file or license.txt file)? Similarly, do the Python files have any header information that contains a software license (I'm not sure where they would be located but probably either in the <code>&lt;python install&gt;\\Lib\\site-packages</code> or you might need to inspect <code>sys.path</code>)?</p>\n<p>I'm leaning towards this being fine (the EULA states that you can use the software and they don't imply any control over software you write that uses their software provided you don't distribute the SDK) but probably worth checking those places just in case.</p>", "type": "rendered"}, "created_on": "2017-09-06T23:47:46.545487+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-09-06T23:47:46.548001+00:00", "type": "pullrequest_comment", "id": 44397905}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/44383524.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-44383524"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "Here is the EULA for the FlyCapture2 SDK:\n\n> The FlyCapture2\u00ae Software Development Kit (the \"Software\") is owned and copyrighted by FLIR Integrated Imaging Solutions, Inc.  All rights are reserved. The Original\n> Purchaser is granted a license to use the Software subject to the following restrictions and limitations.\n>\n> 1. The license is to the Original Purchaser only, and is nontransferable unless you have received written permission of FLIR Integrated Imaging Solutions, Inc. \n> 2. The Original Purchaser may use the Software only with FLIR Integrated Imaging Solutions, Inc. cameras owned by the Original Purchaser, including but not limited to, \n> Firefly\u00ae, Firefly\u00ae2, Firefly\u00ae MV, Flea\u00ae, Flea\u00ae2, Scorpion\u2122, Dragonfly\u00ae, Dragonfly\u00ae2, Dragonfly Express\u2122, Grasshopper\u00ae or Chameleon\u2122 Camera Modules.\n> 3. The Original Purchaser may make back-up copies of the Software for his or her own use only, subject to the use limitations of this license. \n> 4. Subject to s.5 below, the Original Purchaser may not engage in, nor permit third parties to engage in, any of the following: \n>      1. Providing or disclosing the Software to third parties. \n>      2. Making alterations or copies of any kind of the Software (except as specifically permitted in s.3 above). \n>      3. Attempting to un-assemble, de-compile or reverse engineer the Software in any way. \n>      4. Granting sublicenses, leases or other rights in the Software to others. \n> 5. Original Purchasers who are Original Equipment Manufacturers may make Derivative Products with the Software. Derivative Products are new software products developed,\n> in whole or in part, using the Software and other FLIR Integrated Imaging Solutions, Inc. products.  FLIR Integrated Imaging Solutions, Inc. hereby grants a license to Original\n> Equipment Manufacturers to incorporate and distribute the libraries found in the Software with the Derivative Products.  The components of any Derivative Product that contain\n> the Software libraries may only be used with FLIR Integrated Imaging Solutions, Inc. products, or images derived from such products. \n> 6. By the distribution of the Software libraries with Derivative Products, Original Purchasers agree to: \n>      1. not permit further redistribution of the Software libraries by end-user customers \n>      2. include a valid copyright notice on any Derivative Product; and \n>      3. indemnify, hold harmless, and defend FLIR Integrated Imaging Solutions, Inc. from and against any claims or lawsuits, including attorney\u2019s fees, that arise or result from the\n>         use or distribution of any Derivative Product. \n>\n>FLIR Integrated Imaging Solutions, Inc. reserves the right to terminate this license if there are any violations of its terms or if there is a default committed by the Original Purchaser.\n> Upon termination, for any reason, all copies of the Software must be immediately returned to FLIR Integrated Imaging Solutions, Inc. and the Original Purchaser shall be liable to\n> FLIR Integrated Imaging Solutions, Inc. for any and all damages suffered as a result of the violation or default.\n\nIt seems to me that my code should be okay. The camera server requires FlyCapture2, but does not include it. So, to use the server, another group would have to agree to the EULA themselves.\n\nLet me know what you think.\n", "markup": "markdown", "html": "<p>Here is the EULA for the FlyCapture2 SDK:</p>\n<blockquote>\n<p>The FlyCapture2\u00ae Software Development Kit (the \"Software\") is owned and copyrighted by FLIR Integrated Imaging Solutions, Inc.  All rights are reserved. The Original\nPurchaser is granted a license to use the Software subject to the following restrictions and limitations.</p>\n<ol>\n<li>The license is to the Original Purchaser only, and is nontransferable unless you have received written permission of FLIR Integrated Imaging Solutions, Inc. </li>\n<li>The Original Purchaser may use the Software only with FLIR Integrated Imaging Solutions, Inc. cameras owned by the Original Purchaser, including but not limited to, \nFirefly\u00ae, Firefly\u00ae2, Firefly\u00ae MV, Flea\u00ae, Flea\u00ae2, Scorpion\u2122, Dragonfly\u00ae, Dragonfly\u00ae2, Dragonfly Express\u2122, Grasshopper\u00ae or Chameleon\u2122 Camera Modules.</li>\n<li>The Original Purchaser may make back-up copies of the Software for his or her own use only, subject to the use limitations of this license. </li>\n<li>Subject to s.5 below, the Original Purchaser may not engage in, nor permit third parties to engage in, any of the following: <ol>\n<li>Providing or disclosing the Software to third parties. </li>\n<li>Making alterations or copies of any kind of the Software (except as specifically permitted in s.3 above). </li>\n<li>Attempting to un-assemble, de-compile or reverse engineer the Software in any way. </li>\n<li>Granting sublicenses, leases or other rights in the Software to others. </li>\n</ol>\n</li>\n<li>Original Purchasers who are Original Equipment Manufacturers may make Derivative Products with the Software. Derivative Products are new software products developed,\nin whole or in part, using the Software and other FLIR Integrated Imaging Solutions, Inc. products.  FLIR Integrated Imaging Solutions, Inc. hereby grants a license to Original\nEquipment Manufacturers to incorporate and distribute the libraries found in the Software with the Derivative Products.  The components of any Derivative Product that contain\nthe Software libraries may only be used with FLIR Integrated Imaging Solutions, Inc. products, or images derived from such products. </li>\n<li>By the distribution of the Software libraries with Derivative Products, Original Purchasers agree to: <ol>\n<li>not permit further redistribution of the Software libraries by end-user customers </li>\n<li>include a valid copyright notice on any Derivative Product; and </li>\n<li>indemnify, hold harmless, and defend FLIR Integrated Imaging Solutions, Inc. from and against any claims or lawsuits, including attorney\u2019s fees, that arise or result from the\n    use or distribution of any Derivative Product. </li>\n</ol>\n</li>\n</ol>\n<p>FLIR Integrated Imaging Solutions, Inc. reserves the right to terminate this license if there are any violations of its terms or if there is a default committed by the Original Purchaser.\nUpon termination, for any reason, all copies of the Software must be immediately returned to FLIR Integrated Imaging Solutions, Inc. and the Original Purchaser shall be liable to\nFLIR Integrated Imaging Solutions, Inc. for any and all damages suffered as a result of the violation or default.</p>\n</blockquote>\n<p>It seems to me that my code should be okay. The camera server requires FlyCapture2, but does not include it. So, to use the server, another group would have to agree to the EULA themselves.</p>\n<p>Let me know what you think.</p>", "type": "rendered"}, "created_on": "2017-09-06T19:14:29.555729+00:00", "user": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "updated_on": "2017-09-06T19:14:29.777998+00:00", "type": "pullrequest_comment", "id": 44383524}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"update": {"description": "This file contains a command line camera server for Pointgrey/FLIR usb3 cameras. It optionally utilizes the new acquistion_ROI property of the camera class. To start the server, type \"python PyCapture2_camera_server.py <cameraNameFromBlacs>\" in a command line running in the labscript_utils directory.\r\n\r\nThis is a fairly simple server that is working well in my lab and gives some idea of how to move away from Labview. It would be nice to have a GUI and serve multiple cameras in a single server, but I'm leaving that for future extensions. Note that the server requires both the FlyCapture2 SDK and the PyCapture2 python wrapper to function.\r\n\r\nDSB\r\n\r\nP.S.\r\nAfter the initial commit, I discovered that setting the black level (brightness) to zero causes strange stripes on \"dark\" images of absorption imaging sequence. I hard coded in a black level of ~1%. It would probably be better to set black level on a per camera basis in the future.", "title": "Feature PyCaptureCamServer", "destination": {"commit": {"hash": "1ca691f3c898", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/1ca691f3c898.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/1ca691f3c898"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "469685a9be4d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils/commit/469685a9be4d"}, "html": {"href": "#!/dsbarker/labscript_utils/commits/469685a9be4d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils"}, "html": {"href": "#!/dsbarker/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{56cc001e-4981-42d1-be23-614445b1962d}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "dsbarker/labscript_utils", "uuid": "{56cc001e-4981-42d1-be23-614445b1962d}"}, "branch": {"name": "feature-PyCaptureCamServer"}}, "state": "OPEN", "author": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "date": "2017-08-25T14:17:53.825299+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/43602526.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-43602526"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "I'll get the first two items done later today. The C API is freely available with an account at FLIR/PointGrey, but I think there is a EULA associated with it. What to I need to look for to figure out if it is BSD compatible?", "markup": "markdown", "html": "<p>I'll get the first two items done later today. The C API is freely available with an account at FLIR/PointGrey, but I think there is a EULA associated with it. What to I need to look for to figure out if it is BSD compatible?</p>", "type": "rendered"}, "created_on": "2017-08-25T13:44:37.610649+00:00", "user": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "updated_on": "2017-08-25T13:44:37.659887+00:00", "type": "pullrequest_comment", "id": 43602526}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/43447347.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-43447347"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "Hi Daniel,\n\nThanks for the pull request! I have a couple of comments:\n\n1. Could you update the header to include the information regarding the licence (BSD) as per the other files in the labscript suite\n2. Could you change `class PyCap2_Camera():` to `class PyCap2_Camera(object):` for Python 2 compatibility (see [here](https://stackoverflow.com/q/4015417) if you want to know why)\n3. Could you confirm the licence for the new dependency `PyCapture2` (both the Python wrapper and the C API). Is it compatible with the BSD (as in can code that uses it be licensed under the BSD licence?). If it is GPL or LGLP, we may need to put this in a separate project rather than within labscript_utils (although if it was only the C API that is GPL, then my understanding is license compatibility may depend on how you interact with the C API).\n\nChris Billington (as you probably know) is not available to review at the moment, but I'm inclined to just merge once the above is resolved as it's entirely new, standalone code and bugs can be reported and fixed as needed (even if something is broken, it's not going to affect many people initially!)", "markup": "markdown", "html": "<p>Hi Daniel,</p>\n<p>Thanks for the pull request! I have a couple of comments:</p>\n<ol>\n<li>Could you update the header to include the information regarding the licence (BSD) as per the other files in the labscript suite</li>\n<li>Could you change <code>class PyCap2_Camera():</code> to <code>class PyCap2_Camera(object):</code> for Python 2 compatibility (see <a data-is-external-link=\"true\" href=\"https://stackoverflow.com/q/4015417\" rel=\"nofollow\">here</a> if you want to know why)</li>\n<li>Could you confirm the licence for the new dependency <code>PyCapture2</code> (both the Python wrapper and the C API). Is it compatible with the BSD (as in can code that uses it be licensed under the BSD licence?). If it is GPL or LGLP, we may need to put this in a separate project rather than within labscript_utils (although if it was only the C API that is GPL, then my understanding is license compatibility may depend on how you interact with the C API).</li>\n</ol>\n<p>Chris Billington (as you probably know) is not available to review at the moment, but I'm inclined to just merge once the above is resolved as it's entirely new, standalone code and bugs can be reported and fixed as needed (even if something is broken, it's not going to affect many people initially!)</p>", "type": "rendered"}, "created_on": "2017-08-23T23:33:37.149283+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-08-23T23:33:37.151733+00:00", "type": "pullrequest_comment", "id": 43447347}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"update": {"description": "This file contains a command line camera server for Pointgrey/FLIR usb3 cameras. It optionally utilizes the new acquistion_ROI property of the camera class. To start the server, type \"python PyCapture2_camera_server.py <cameraNameFromBlacs>\" in a command line running in the labscript_utils directory.\r\n\r\nThis is a fairly simple server that is working well in my lab and gives some idea of how to move away from Labview. It would be nice to have a GUI and serve multiple cameras in a single server, but I'm leaving that for future extensions. Note that the server requires both the FlyCapture2 SDK and the PyCapture2 python wrapper to function.\r\n\r\nDSB\r\n\r\nP.S.\r\nAfter the initial commit, I discovered that setting the black level (brightness) to zero causes strange stripes on \"dark\" images of absorption imaging sequence. I hard coded in a black level of ~1%. It would probably be better to set black level on a per camera basis in the future.", "title": "Feature PyCaptureCamServer", "destination": {"commit": {"hash": "1ca691f3c898", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/1ca691f3c898.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/1ca691f3c898"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7270732c8f95", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils/commit/7270732c8f95"}, "html": {"href": "#!/dsbarker/labscript_utils/commits/7270732c8f95"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils"}, "html": {"href": "#!/dsbarker/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{56cc001e-4981-42d1-be23-614445b1962d}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "dsbarker/labscript_utils", "uuid": "{56cc001e-4981-42d1-be23-614445b1962d}"}, "branch": {"name": "feature-PyCaptureCamServer"}}, "state": "OPEN", "author": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "date": "2017-08-23T15:02:00.548674+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}, {"update": {"description": "This file contains a command line camera server for Pointgrey/FLIR usb3 cameras. It optionally utilizes the new acquistion_ROI property of the camera class. To start the server, type \"python PyCapture2_camera_server.py <cameraNameFromBlacs>\" in a command line running in the labscript_utils directory.\r\n\r\nThis is a fairly simple server that is working well in my lab and gives some idea of how to move away from Labview. It would be nice to have a GUI and serve multiple cameras in a single server, but I'm leaving that for future extensions. Note that the server requires both the FlyCapture2 SDK and the PyCapture2 python wrapper to function.\r\n\r\nDSB\r\n\r\nP.S.\r\nAfter the initial commit, I discovered that setting the black level (brightness) to zero causes strange stripes on \"dark\" images of absorption imaging sequence. I hard coded in a black level of ~1%. It would probably be better to set black level on a per camera basis in the future.", "title": "Feature PyCaptureCamServer", "destination": {"commit": {"hash": "1ca691f3c898", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/1ca691f3c898.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/1ca691f3c898"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7270732c8f95", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils/commit/7270732c8f95"}, "html": {"href": "#!/dsbarker/labscript_utils/commits/7270732c8f95"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/labscript_utils"}, "html": {"href": "#!/dsbarker/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{56cc001e-4981-42d1-be23-614445b1962d}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "dsbarker/labscript_utils", "uuid": "{56cc001e-4981-42d1-be23-614445b1962d}"}, "branch": {"name": "feature-PyCaptureCamServer"}}, "state": "OPEN", "author": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "date": "2017-08-23T15:02:00.455785+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}}]}