{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26/comments/44550478.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26/_/diff#comment-44550478"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/26"}}, "title": "Feature PyCaptureCamServer"}, "content": {"raw": "Dan,\n\nCan I suggest this different way to handle the image data conversion on lines 370-373?\n\n```Python\nif img_type[idx] == f_type:\r\n    img_data = np.array(images[idx],dtype=np.uint8).view(np.uint16)\r\n    imgs_toSave[f_type].append(img_data.reshape(n_Rows, n_Cols))\n```\n\nThis way keeps the data in compiled numpy code and avoids a few temporary memory allocations, using about a quarter the memory. More importantly, it's easy to adapt to MONO8 data by just changing the view dtype to np.uint8 (or eliminating the view outright, whichever approach is easier to generalize in python). Eventually I'd like to implement the MONO8 option for image capture for faster successive images. I also personally find it easier to understand what's happening, which is nice considering the PyCapture2 documentation really leaves something to be desired.\n\nAnd for the curious, changing the dtype=np.uint8 to .astype(np.uint8) is roughly 5% faster (with the corresponding larger memory footprint) thanks to quirks in how numpy allocates from python lists. \n\nAnyway, profiling is a really fun distraction but I should get back to work. Let me know if there are other ways I can help. I'm really keen to avoid BIAS on a new setup.", "markup": "markdown", "html": "<p>Dan,</p>\n<p>Can I suggest this different way to handle the image data conversion on lines 370-373?</p>\n<div class=\"codehilite language-Python\"><pre><span></span><span class=\"k\">if</span> <span class=\"n\">img_type</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">f_type</span><span class=\"p\">:</span>\n    <span class=\"n\">img_data</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">images</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">],</span><span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">uint16</span><span class=\"p\">)</span>\n    <span class=\"n\">imgs_toSave</span><span class=\"p\">[</span><span class=\"n\">f_type</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">img_data</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"n\">n_Rows</span><span class=\"p\">,</span> <span class=\"n\">n_Cols</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>This way keeps the data in compiled numpy code and avoids a few temporary memory allocations, using about a quarter the memory. More importantly, it's easy to adapt to MONO8 data by just changing the view dtype to np.uint8 (or eliminating the view outright, whichever approach is easier to generalize in python). Eventually I'd like to implement the MONO8 option for image capture for faster successive images. I also personally find it easier to understand what's happening, which is nice considering the PyCapture2 documentation really leaves something to be desired.</p>\n<p>And for the curious, changing the dtype=np.uint8 to .astype(np.uint8) is roughly 5% faster (with the corresponding larger memory footprint) thanks to quirks in how numpy allocates from python lists. </p>\n<p>Anyway, profiling is a really fun distraction but I should get back to work. Let me know if there are other ways I can help. I'm really keen to avoid BIAS on a new setup.</p>", "type": "rendered"}, "created_on": "2017-09-08T13:52:18.841015+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2017-09-08T13:52:18.920633+00:00", "type": "pullrequest_comment", "id": 44550478}