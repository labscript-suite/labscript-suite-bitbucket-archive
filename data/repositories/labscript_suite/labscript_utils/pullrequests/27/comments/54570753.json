{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/27/comments/54570753.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/27/_/diff#comment-54570753"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 27, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/27.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/27"}}, "title": "AnalogIn"}, "content": {"raw": "Haven't got to testing this yet, but have looked over the code. Couple of suggestions\n\n1. in InputPlotWindow.py, the `self.data`attribute could possibly benefit from being implemented as a ring buffer \\(not 100% sure on this, but I suspect appending/deleting is ultimately 'slow'\\)\n2. In analoginput.py Rather than double clicking a line edit to open the plot window, I would just have a small button \\(with a single nice icon, no text\\) that opens the plot window. Probably could make it bring an existing window into focus if a plot window is already created for a given AI channel \\(I think this might mean sending the ZMQ process a message saying come into focus...that might be a big change and if so, then we'll ignore it for now and implement it later as it's non-critical\\). This way you get rid of lines 82-100 which looks like a bit of a horrible hack!\n\n", "markup": "markdown", "html": "<p>Haven't got to testing this yet, but have looked over the code. Couple of suggestions</p>\n<ol>\n<li>in InputPlotWindow.py, the <code>self.data</code>attribute could possibly benefit from being implemented as a ring buffer (not 100% sure on this, but I suspect appending/deleting is ultimately 'slow')</li>\n<li>In analoginput.py Rather than double clicking a line edit to open the plot window, I would just have a small button (with a single nice icon, no text) that opens the plot window. Probably could make it bring an existing window into focus if a plot window is already created for a given AI channel (I think this might mean sending the ZMQ process a message saying come into focus...that might be a big change and if so, then we'll ignore it for now and implement it later as it's non-critical). This way you get rid of lines 82-100 which looks like a bit of a horrible hack!</li>\n</ol>", "type": "rendered"}, "created_on": "2018-01-25T03:08:12.054039+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-01-25T03:08:12.056483+00:00", "type": "pullrequest_comment", "id": 54570753}