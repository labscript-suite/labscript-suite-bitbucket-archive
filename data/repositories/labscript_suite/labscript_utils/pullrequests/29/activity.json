{"pagelen": 50, "values": [{"update": {"description": "This should fix Unitconversions in Python3.\r\n\r\nI'm not sure why but for some reason the variables that are defined in the exec statements are not accessible from the lines directly after. ~~Accessing the locals dict instead works fine.~~ Adding them to the globals dict however works fine.\r\n\r\nThis also fixes the syntax for `MethodType` in python 3.", "title": "Fixes issues with Unitconversions in python3", "destination": {"commit": {"hash": "4d200324079d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/4d200324079d.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/4d200324079d"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "Superseded by pull request #31", "source": {"commit": {"hash": "e304fa3fbb51", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript_utils/commit/e304fa3fbb51"}, "html": {"href": "#!/PhyNerd/labscript_utils/commits/e304fa3fbb51"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript_utils"}, "html": {"href": "#!/PhyNerd/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{02bff725-3db8-46ab-9b30-db6618a29d91}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "PhyNerd/labscript_utils", "uuid": "{02bff725-3db8-46ab-9b30-db6618a29d91}"}, "branch": {"name": "UnitconversionsPython3"}}, "state": "DECLINED", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-03-02T06:13:52.241060+00:00"}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/29"}}, "title": "Fixes issues with Unitconversions in python3"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/29/comments/57754468.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/29/_/diff#comment-57754468"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/29"}}, "title": "Fixes issues with Unitconversions in python3"}, "content": {"raw": "Thanks for finding the issue! However I don't think this is the correct fix. \n\n[It's apparently a mistake](https://stackoverflow.com/a/35336800/437537) to use `exec()` to modify or add actual local variables, it looks like it worked in Python 2 but it doesn't in Python 3 - this is probably some implementation detail that we should not have relied on in the first place.\n\nSetting *global* variables from exec however is possible, which I believe is what you've changed the code to do. However, this isn't great either, since now we're creating random global variables.\n\nThis specific type of metaprogramming is unfortunately a little tricky in Python, because you [can't just add lambdas in a loop](https://stackoverflow.com/questions/10393447/scope-gotcha-when-dynamically-adding-methods-in-a-loop/10404493), which is why `exec()` was used in the first place. You could run `exec()` with a dictionary supplied as `locals()`, which you would have to populate with the actual locals the contents of `exec` would need to access while running, and then extract the result from the dictionary when you're done. \n\nBut I think the most kosher way of doing it to define a separate class for the callable you want to dynamically create. I've done this in Pull request #31, so I'll decline this one.\n\nThanks again!", "markup": "markdown", "html": "<p>Thanks for finding the issue! However I don't think this is the correct fix. </p>\n<p><a data-is-external-link=\"true\" href=\"https://stackoverflow.com/a/35336800/437537\" rel=\"nofollow\">It's apparently a mistake</a> to use <code>exec()</code> to modify or add actual local variables, it looks like it worked in Python 2 but it doesn't in Python 3 - this is probably some implementation detail that we should not have relied on in the first place.</p>\n<p>Setting <em>global</em> variables from exec however is possible, which I believe is what you've changed the code to do. However, this isn't great either, since now we're creating random global variables.</p>\n<p>This specific type of metaprogramming is unfortunately a little tricky in Python, because you <a data-is-external-link=\"true\" href=\"https://stackoverflow.com/questions/10393447/scope-gotcha-when-dynamically-adding-methods-in-a-loop/10404493\" rel=\"nofollow\">can't just add lambdas in a loop</a>, which is why <code>exec()</code> was used in the first place. You could run <code>exec()</code> with a dictionary supplied as <code>locals()</code>, which you would have to populate with the actual locals the contents of <code>exec</code> would need to access while running, and then extract the result from the dictionary when you're done. </p>\n<p>But I think the most kosher way of doing it to define a separate class for the callable you want to dynamically create. I've done this in <a href=\"#!/labscript_suite/labscript_utils/pull-requests/31/unit-conversions-python3-bugfix-and\" rel=\"nofollow\" class=\"ap-connect-link\">Pull request #31</a>, so I'll decline this one.</p>\n<p>Thanks again!</p>", "type": "rendered"}, "created_on": "2018-03-02T05:46:45.325504+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-02T05:46:45.328235+00:00", "type": "pullrequest_comment", "id": 57754468}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/29"}}, "title": "Fixes issues with Unitconversions in python3"}}, {"update": {"description": "This should fix Unitconversions in Python3.\r\n\r\nI'm not sure why but for some reason the variables that are defined in the exec statements are not accessible from the lines directly after. ~~Accessing the locals dict instead works fine.~~ Adding them to the globals dict however works fine.\r\n\r\nThis also fixes the syntax for `MethodType` in python 3.", "title": "Fixes issues with Unitconversions in python3", "destination": {"commit": {"hash": "8806bde99250", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/8806bde99250.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/8806bde99250"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e304fa3fbb51", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript_utils/commit/e304fa3fbb51"}, "html": {"href": "#!/PhyNerd/labscript_utils/commits/e304fa3fbb51"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript_utils"}, "html": {"href": "#!/PhyNerd/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{02bff725-3db8-46ab-9b30-db6618a29d91}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "PhyNerd/labscript_utils", "uuid": "{02bff725-3db8-46ab-9b30-db6618a29d91}"}, "branch": {"name": "UnitconversionsPython3"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2018-03-01T17:41:40.323619+00:00"}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/29"}}, "title": "Fixes issues with Unitconversions in python3"}}, {"update": {"description": "This should fix Unitconversions in Python3.\r\n\r\nI'm not sure why but for some reason the variables that are defined in the exec statements are not accessible from the lines directly after. Accessing the locals dict instead works fine.\r\n\r\nThis also fixes the syntax for `MethodType` in python 3.", "title": "Fixes issues with Unitconversions in python3", "destination": {"commit": {"hash": "8806bde99250", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/8806bde99250.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/8806bde99250"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e304fa3fbb51", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript_utils/commit/e304fa3fbb51"}, "html": {"href": "#!/PhyNerd/labscript_utils/commits/e304fa3fbb51"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript_utils"}, "html": {"href": "#!/PhyNerd/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{02bff725-3db8-46ab-9b30-db6618a29d91}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "PhyNerd/labscript_utils", "uuid": "{02bff725-3db8-46ab-9b30-db6618a29d91}"}, "branch": {"name": "UnitconversionsPython3"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2018-03-01T17:40:49.383510+00:00"}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/29"}}, "title": "Fixes issues with Unitconversions in python3"}}, {"update": {"description": "This should fix Unitconversions in Python3.\r\n\r\nI'm not sure why but for some reason the variables that are defined in the exec statements are not accessible from the lines directly after. Accessing the locals dict instead works fine.\r\n\r\nThis also fixes the syntax for `MethodType` in python 3.", "title": "Fixes issues with Unitconversions in python3", "destination": {"commit": {"hash": "8806bde99250", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/8806bde99250.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/8806bde99250"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "3698b73f808a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript_utils/commit/3698b73f808a"}, "html": {"href": "#!/PhyNerd/labscript_utils/commits/3698b73f808a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript_utils"}, "html": {"href": "#!/PhyNerd/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{02bff725-3db8-46ab-9b30-db6618a29d91}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "PhyNerd/labscript_utils", "uuid": "{02bff725-3db8-46ab-9b30-db6618a29d91}"}, "branch": {"name": "UnitconversionsPython3"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2018-03-01T14:49:27.519457+00:00"}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/29"}}, "title": "Fixes issues with Unitconversions in python3"}}, {"update": {"description": "This should fix Unitconversions in Python3.\r\n\r\nI'm not sure why but for some reason the variables that are defined in the exec statements are not accessible from the lines directly after. Accessing the locals dict instead works fine.\r\n\r\nThis also fixes the syntax for `MethodType` in python 3.", "title": "Fixes issues with Unitconversions in python3", "destination": {"commit": {"hash": "8806bde99250", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/8806bde99250.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/8806bde99250"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "3698b73f808a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript_utils/commit/3698b73f808a"}, "html": {"href": "#!/PhyNerd/labscript_utils/commits/3698b73f808a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/labscript_utils"}, "html": {"href": "#!/PhyNerd/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{02bff725-3db8-46ab-9b30-db6618a29d91}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "PhyNerd/labscript_utils", "uuid": "{02bff725-3db8-46ab-9b30-db6618a29d91}"}, "branch": {"name": "UnitconversionsPython3"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2018-03-01T14:49:27.448978+00:00"}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/29"}}, "title": "Fixes issues with Unitconversions in python3"}}]}