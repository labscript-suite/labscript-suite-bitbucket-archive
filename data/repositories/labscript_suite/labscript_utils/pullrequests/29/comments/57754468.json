{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/29/comments/57754468.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/29/_/diff#comment-57754468"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/29"}}, "title": "Fixes issues with Unitconversions in python3"}, "content": {"raw": "Thanks for finding the issue! However I don't think this is the correct fix. \n\n[It's apparently a mistake](https://stackoverflow.com/a/35336800/437537) to use `exec()` to modify or add actual local variables, it looks like it worked in Python 2 but it doesn't in Python 3 - this is probably some implementation detail that we should not have relied on in the first place.\n\nSetting *global* variables from exec however is possible, which I believe is what you've changed the code to do. However, this isn't great either, since now we're creating random global variables.\n\nThis specific type of metaprogramming is unfortunately a little tricky in Python, because you [can't just add lambdas in a loop](https://stackoverflow.com/questions/10393447/scope-gotcha-when-dynamically-adding-methods-in-a-loop/10404493), which is why `exec()` was used in the first place. You could run `exec()` with a dictionary supplied as `locals()`, which you would have to populate with the actual locals the contents of `exec` would need to access while running, and then extract the result from the dictionary when you're done. \n\nBut I think the most kosher way of doing it to define a separate class for the callable you want to dynamically create. I've done this in Pull request #31, so I'll decline this one.\n\nThanks again!", "markup": "markdown", "html": "<p>Thanks for finding the issue! However I don't think this is the correct fix. </p>\n<p><a data-is-external-link=\"true\" href=\"https://stackoverflow.com/a/35336800/437537\" rel=\"nofollow\">It's apparently a mistake</a> to use <code>exec()</code> to modify or add actual local variables, it looks like it worked in Python 2 but it doesn't in Python 3 - this is probably some implementation detail that we should not have relied on in the first place.</p>\n<p>Setting <em>global</em> variables from exec however is possible, which I believe is what you've changed the code to do. However, this isn't great either, since now we're creating random global variables.</p>\n<p>This specific type of metaprogramming is unfortunately a little tricky in Python, because you <a data-is-external-link=\"true\" href=\"https://stackoverflow.com/questions/10393447/scope-gotcha-when-dynamically-adding-methods-in-a-loop/10404493\" rel=\"nofollow\">can't just add lambdas in a loop</a>, which is why <code>exec()</code> was used in the first place. You could run <code>exec()</code> with a dictionary supplied as <code>locals()</code>, which you would have to populate with the actual locals the contents of <code>exec</code> would need to access while running, and then extract the result from the dictionary when you're done. </p>\n<p>But I think the most kosher way of doing it to define a separate class for the callable you want to dynamically create. I've done this in <a href=\"#!/labscript_suite/labscript_utils/pull-requests/31/unit-conversions-python3-bugfix-and\" rel=\"nofollow\" class=\"ap-connect-link\">Pull request #31</a>, so I'll decline this one.</p>\n<p>Thanks again!</p>", "type": "rendered"}, "created_on": "2018-03-02T05:46:45.325504+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-02T05:46:45.328235+00:00", "type": "pullrequest_comment", "id": 57754468}