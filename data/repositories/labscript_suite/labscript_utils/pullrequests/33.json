{"rendered": {"description": {"raw": "This is a Python import hook that records the filepath of any modules imported (if they have a filepath), and if later a module with the same filepath is imported under a different name, raises an exception. This is to prevent the 'double import' problem, where two copies of the same module can exist in memory at the same time. I consider this a bug in Python, and it's a terrible one, but this import hook can make sure you find out quickly if you've made this mistake, helping prevent bugs like [BLACS issue #36](#!/labscript_suite/blacs/issues/36/front-panel-settings-not-loaded-correctly)\r\n\r\nWith this patch, BLACS (version prior to last night's backout of import changes) crashes on startup with:\r\n\r\n\r\n```\r\n#!python\r\n\r\nRuntimeError: Double import! The same file has been imported under two\r\ndifferent names, resulting in two copies of the module. This is almost\r\ncertainly a mistake. If you are running a script from within a package and\r\nwant to import another submodule of that package, import it by its full path:\r\n'import module.submodule' instead of just 'import submodule.'\r\n\r\nPath imported: /home/bilbo/labscript_suite/blacs/connections.py\r\n\r\nTraceback (first time imported, as connections):\r\n------------\r\n  File \"__main__.py\", line 126, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n\r\nTraceback (second time imported, as blacs.connections):\r\n------------\r\n  File \"__main__.py\", line 138, in <module>\r\n    from blacs.experiment_queue import QueueManager, QueueTreeview\r\n  File \"/home/bilbo/labscript_suite/blacs/experiment_queue.py\", line 35, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n```\r\n\r\nWith the absolute imports backed out, it doesn't crash because 'experiment_queue', being imported with `import experiment_queue` from `__main__`, doesn't think it's part of a package, and so it is importing 'connections' also as a non-package module. But if `experiment_queue` is imported as a submodule as `blacs.experiment_queue`, then when it does `import connections` in Python 2, that's also a submodule.\r\n\r\nWith this patch, BLACS is failing to load plugins because it is mixing import types with regard to plugins (without this patch, it is loading plugin modules twice).\r\n\r\nSo this shouldn't be merged immediately - it should be pulled for testing so we can stamp out the mixed imports (we should turn them all into fully qualified absolute imports: `from blacs.plugins import blah blah`), and once we're done we should merge this in so that it alerts us to any future screwups.", "markup": "markdown", "html": "<p>This is a Python import hook that records the filepath of any modules imported (if they have a filepath), and if later a module with the same filepath is imported under a different name, raises an exception. This is to prevent the 'double import' problem, where two copies of the same module can exist in memory at the same time. I consider this a bug in Python, and it's a terrible one, but this import hook can make sure you find out quickly if you've made this mistake, helping prevent bugs like <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/issues/36/front-panel-settings-not-loaded-correctly\" rel=\"nofollow\">BLACS issue #36</a></p>\n<p>With this patch, BLACS (version prior to last night's backout of import changes) crashes on startup with:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"ne\">RuntimeError</span><span class=\"p\">:</span> <span class=\"n\">Double</span> <span class=\"n\">import</span><span class=\"err\">!</span> <span class=\"n\">The</span> <span class=\"n\">same</span> <span class=\"nb\">file</span> <span class=\"n\">has</span> <span class=\"n\">been</span> <span class=\"n\">imported</span> <span class=\"n\">under</span> <span class=\"n\">two</span>\n<span class=\"n\">different</span> <span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"n\">resulting</span> <span class=\"ow\">in</span> <span class=\"n\">two</span> <span class=\"n\">copies</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">module</span><span class=\"o\">.</span> <span class=\"n\">This</span> <span class=\"ow\">is</span> <span class=\"n\">almost</span>\n<span class=\"n\">certainly</span> <span class=\"n\">a</span> <span class=\"n\">mistake</span><span class=\"o\">.</span> <span class=\"n\">If</span> <span class=\"n\">you</span> <span class=\"n\">are</span> <span class=\"n\">running</span> <span class=\"n\">a</span> <span class=\"n\">script</span> <span class=\"kn\">from</span> <span class=\"nn\">within</span> <span class=\"nn\">a</span> <span class=\"nn\">package</span> <span class=\"nn\">and</span>\n<span class=\"n\">want</span> <span class=\"n\">to</span> <span class=\"kn\">import</span> <span class=\"nn\">another</span> <span class=\"nn\">submodule</span> <span class=\"nn\">of</span> <span class=\"nn\">that</span> <span class=\"nn\">package</span><span class=\"o\">,</span> <span class=\"nn\">import</span> <span class=\"nn\">it</span> <span class=\"nn\">by</span> <span class=\"nn\">its</span> <span class=\"nn\">full</span> <span class=\"nn\">path</span><span class=\"p\">:</span>\n<span class=\"s1\">&#39;import module.submodule&#39;</span> <span class=\"n\">instead</span> <span class=\"n\">of</span> <span class=\"n\">just</span> <span class=\"s1\">&#39;import submodule.&#39;</span>\n\n<span class=\"n\">Path</span> <span class=\"n\">imported</span><span class=\"p\">:</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">bilbo</span><span class=\"o\">/</span><span class=\"n\">labscript_suite</span><span class=\"o\">/</span><span class=\"n\">blacs</span><span class=\"o\">/</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">py</span>\n\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">first</span> <span class=\"n\">time</span> <span class=\"n\">imported</span><span class=\"p\">,</span> <span class=\"k\">as</span> <span class=\"n\">connections</span><span class=\"p\">):</span>\n<span class=\"o\">------------</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">126</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">connections</span> <span class=\"kn\">import</span> <span class=\"n\">ConnectionTable</span>\n<span class=\"o\">------------</span>\n\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">second</span> <span class=\"n\">time</span> <span class=\"n\">imported</span><span class=\"p\">,</span> <span class=\"k\">as</span> <span class=\"n\">blacs</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"p\">):</span>\n<span class=\"o\">------------</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">138</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">blacs.experiment_queue</span> <span class=\"kn\">import</span> <span class=\"n\">QueueManager</span><span class=\"p\">,</span> <span class=\"n\">QueueTreeview</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/home/bilbo/labscript_suite/blacs/experiment_queue.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">35</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">connections</span> <span class=\"kn\">import</span> <span class=\"n\">ConnectionTable</span>\n<span class=\"o\">------------</span>\n</pre></div>\n\n\n<p>With the absolute imports backed out, it doesn't crash because 'experiment_queue', being imported with <code>import experiment_queue</code> from <code>__main__</code>, doesn't think it's part of a package, and so it is importing 'connections' also as a non-package module. But if <code>experiment_queue</code> is imported as a submodule as <code>blacs.experiment_queue</code>, then when it does <code>import connections</code> in Python 2, that's also a submodule.</p>\n<p>With this patch, BLACS is failing to load plugins because it is mixing import types with regard to plugins (without this patch, it is loading plugin modules twice).</p>\n<p>So this shouldn't be merged immediately - it should be pulled for testing so we can stamp out the mixed imports (we should turn them all into fully qualified absolute imports: <code>from blacs.plugins import blah blah</code>), and once we're done we should merge this in so that it alerts us to any future screwups.</p>", "type": "rendered"}, "title": {"raw": "Double import denier", "markup": "markdown", "html": "<p>Double import denier</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This is a Python import hook that records the filepath of any modules imported (if they have a filepath), and if later a module with the same filepath is imported under a different name, raises an exception. This is to prevent the 'double import' problem, where two copies of the same module can exist in memory at the same time. I consider this a bug in Python, and it's a terrible one, but this import hook can make sure you find out quickly if you've made this mistake, helping prevent bugs like [BLACS issue #36](#!/labscript_suite/blacs/issues/36/front-panel-settings-not-loaded-correctly)\r\n\r\nWith this patch, BLACS (version prior to last night's backout of import changes) crashes on startup with:\r\n\r\n\r\n```\r\n#!python\r\n\r\nRuntimeError: Double import! The same file has been imported under two\r\ndifferent names, resulting in two copies of the module. This is almost\r\ncertainly a mistake. If you are running a script from within a package and\r\nwant to import another submodule of that package, import it by its full path:\r\n'import module.submodule' instead of just 'import submodule.'\r\n\r\nPath imported: /home/bilbo/labscript_suite/blacs/connections.py\r\n\r\nTraceback (first time imported, as connections):\r\n------------\r\n  File \"__main__.py\", line 126, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n\r\nTraceback (second time imported, as blacs.connections):\r\n------------\r\n  File \"__main__.py\", line 138, in <module>\r\n    from blacs.experiment_queue import QueueManager, QueueTreeview\r\n  File \"/home/bilbo/labscript_suite/blacs/experiment_queue.py\", line 35, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n```\r\n\r\nWith the absolute imports backed out, it doesn't crash because 'experiment_queue', being imported with `import experiment_queue` from `__main__`, doesn't think it's part of a package, and so it is importing 'connections' also as a non-package module. But if `experiment_queue` is imported as a submodule as `blacs.experiment_queue`, then when it does `import connections` in Python 2, that's also a submodule.\r\n\r\nWith this patch, BLACS is failing to load plugins because it is mixing import types with regard to plugins (without this patch, it is loading plugin modules twice).\r\n\r\nSo this shouldn't be merged immediately - it should be pulled for testing so we can stamp out the mixed imports (we should turn them all into fully qualified absolute imports: `from blacs.plugins import blah blah`), and once we're done we should merge this in so that it alerts us to any future screwups.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/33/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/diffstat/labscript_suite/labscript_utils:81b5932d59b6%0Df0353f06ba00?from_pullrequest_id=33"}, "commits": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/33/merge"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33"}, "activity": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/diff/labscript_suite/labscript_utils:81b5932d59b6%0Df0353f06ba00?from_pullrequest_id=33"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/33/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33/statuses_page=1.json"}}, "title": "Double import denier", "close_source_branch": true, "reviewers": [{"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}], "id": 33, "destination": {"commit": {"hash": "f0353f06ba00", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/f0353f06ba00.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/f0353f06ba00"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "created_on": "2018-03-10T10:37:36.748499+00:00", "summary": {"raw": "This is a Python import hook that records the filepath of any modules imported (if they have a filepath), and if later a module with the same filepath is imported under a different name, raises an exception. This is to prevent the 'double import' problem, where two copies of the same module can exist in memory at the same time. I consider this a bug in Python, and it's a terrible one, but this import hook can make sure you find out quickly if you've made this mistake, helping prevent bugs like [BLACS issue #36](#!/labscript_suite/blacs/issues/36/front-panel-settings-not-loaded-correctly)\r\n\r\nWith this patch, BLACS (version prior to last night's backout of import changes) crashes on startup with:\r\n\r\n\r\n```\r\n#!python\r\n\r\nRuntimeError: Double import! The same file has been imported under two\r\ndifferent names, resulting in two copies of the module. This is almost\r\ncertainly a mistake. If you are running a script from within a package and\r\nwant to import another submodule of that package, import it by its full path:\r\n'import module.submodule' instead of just 'import submodule.'\r\n\r\nPath imported: /home/bilbo/labscript_suite/blacs/connections.py\r\n\r\nTraceback (first time imported, as connections):\r\n------------\r\n  File \"__main__.py\", line 126, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n\r\nTraceback (second time imported, as blacs.connections):\r\n------------\r\n  File \"__main__.py\", line 138, in <module>\r\n    from blacs.experiment_queue import QueueManager, QueueTreeview\r\n  File \"/home/bilbo/labscript_suite/blacs/experiment_queue.py\", line 35, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n```\r\n\r\nWith the absolute imports backed out, it doesn't crash because 'experiment_queue', being imported with `import experiment_queue` from `__main__`, doesn't think it's part of a package, and so it is importing 'connections' also as a non-package module. But if `experiment_queue` is imported as a submodule as `blacs.experiment_queue`, then when it does `import connections` in Python 2, that's also a submodule.\r\n\r\nWith this patch, BLACS is failing to load plugins because it is mixing import types with regard to plugins (without this patch, it is loading plugin modules twice).\r\n\r\nSo this shouldn't be merged immediately - it should be pulled for testing so we can stamp out the mixed imports (we should turn them all into fully qualified absolute imports: `from blacs.plugins import blah blah`), and once we're done we should merge this in so that it alerts us to any future screwups.", "markup": "markdown", "html": "<p>This is a Python import hook that records the filepath of any modules imported (if they have a filepath), and if later a module with the same filepath is imported under a different name, raises an exception. This is to prevent the 'double import' problem, where two copies of the same module can exist in memory at the same time. I consider this a bug in Python, and it's a terrible one, but this import hook can make sure you find out quickly if you've made this mistake, helping prevent bugs like <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/issues/36/front-panel-settings-not-loaded-correctly\" rel=\"nofollow\">BLACS issue #36</a></p>\n<p>With this patch, BLACS (version prior to last night's backout of import changes) crashes on startup with:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"ne\">RuntimeError</span><span class=\"p\">:</span> <span class=\"n\">Double</span> <span class=\"n\">import</span><span class=\"err\">!</span> <span class=\"n\">The</span> <span class=\"n\">same</span> <span class=\"nb\">file</span> <span class=\"n\">has</span> <span class=\"n\">been</span> <span class=\"n\">imported</span> <span class=\"n\">under</span> <span class=\"n\">two</span>\n<span class=\"n\">different</span> <span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"n\">resulting</span> <span class=\"ow\">in</span> <span class=\"n\">two</span> <span class=\"n\">copies</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">module</span><span class=\"o\">.</span> <span class=\"n\">This</span> <span class=\"ow\">is</span> <span class=\"n\">almost</span>\n<span class=\"n\">certainly</span> <span class=\"n\">a</span> <span class=\"n\">mistake</span><span class=\"o\">.</span> <span class=\"n\">If</span> <span class=\"n\">you</span> <span class=\"n\">are</span> <span class=\"n\">running</span> <span class=\"n\">a</span> <span class=\"n\">script</span> <span class=\"kn\">from</span> <span class=\"nn\">within</span> <span class=\"nn\">a</span> <span class=\"nn\">package</span> <span class=\"nn\">and</span>\n<span class=\"n\">want</span> <span class=\"n\">to</span> <span class=\"kn\">import</span> <span class=\"nn\">another</span> <span class=\"nn\">submodule</span> <span class=\"nn\">of</span> <span class=\"nn\">that</span> <span class=\"nn\">package</span><span class=\"o\">,</span> <span class=\"nn\">import</span> <span class=\"nn\">it</span> <span class=\"nn\">by</span> <span class=\"nn\">its</span> <span class=\"nn\">full</span> <span class=\"nn\">path</span><span class=\"p\">:</span>\n<span class=\"s1\">&#39;import module.submodule&#39;</span> <span class=\"n\">instead</span> <span class=\"n\">of</span> <span class=\"n\">just</span> <span class=\"s1\">&#39;import submodule.&#39;</span>\n\n<span class=\"n\">Path</span> <span class=\"n\">imported</span><span class=\"p\">:</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">bilbo</span><span class=\"o\">/</span><span class=\"n\">labscript_suite</span><span class=\"o\">/</span><span class=\"n\">blacs</span><span class=\"o\">/</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">py</span>\n\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">first</span> <span class=\"n\">time</span> <span class=\"n\">imported</span><span class=\"p\">,</span> <span class=\"k\">as</span> <span class=\"n\">connections</span><span class=\"p\">):</span>\n<span class=\"o\">------------</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">126</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">connections</span> <span class=\"kn\">import</span> <span class=\"n\">ConnectionTable</span>\n<span class=\"o\">------------</span>\n\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">second</span> <span class=\"n\">time</span> <span class=\"n\">imported</span><span class=\"p\">,</span> <span class=\"k\">as</span> <span class=\"n\">blacs</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"p\">):</span>\n<span class=\"o\">------------</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">138</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">blacs.experiment_queue</span> <span class=\"kn\">import</span> <span class=\"n\">QueueManager</span><span class=\"p\">,</span> <span class=\"n\">QueueTreeview</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/home/bilbo/labscript_suite/blacs/experiment_queue.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">35</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">connections</span> <span class=\"kn\">import</span> <span class=\"n\">ConnectionTable</span>\n<span class=\"o\">------------</span>\n</pre></div>\n\n\n<p>With the absolute imports backed out, it doesn't crash because 'experiment_queue', being imported with <code>import experiment_queue</code> from <code>__main__</code>, doesn't think it's part of a package, and so it is importing 'connections' also as a non-package module. But if <code>experiment_queue</code> is imported as a submodule as <code>blacs.experiment_queue</code>, then when it does <code>import connections</code> in Python 2, that's also a submodule.</p>\n<p>With this patch, BLACS is failing to load plugins because it is mixing import types with regard to plugins (without this patch, it is loading plugin modules twice).</p>\n<p>So this shouldn't be merged immediately - it should be pulled for testing so we can stamp out the mixed imports (we should turn them all into fully qualified absolute imports: <code>from blacs.plugins import blah blah</code>), and once we're done we should merge this in so that it alerts us to any future screwups.</p>", "type": "rendered"}, "source": {"commit": {"hash": "272e11a24a22", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/272e11a24a22"}, "html": {"href": "#!/cbillington/labscript_utils/commits/272e11a24a22"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "double-import-denier"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2018-03-13T01:32:36.896635+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": "2018-03-13T00:01:52.979347+00:00", "type": "participant", "approved": true, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}], "reason": "", "updated_on": "2018-03-13T01:32:44.016625+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "81b5932d59b6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/81b5932d59b6.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/81b5932d59b6"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}