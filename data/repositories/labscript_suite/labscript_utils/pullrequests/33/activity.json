{"pagelen": 50, "values": [{"update": {"description": "This is a Python import hook that records the filepath of any modules imported (if they have a filepath), and if later a module with the same filepath is imported under a different name, raises an exception. This is to prevent the 'double import' problem, where two copies of the same module can exist in memory at the same time. I consider this a bug in Python, and it's a terrible one, but this import hook can make sure you find out quickly if you've made this mistake, helping prevent bugs like [BLACS issue #36](#!/labscript_suite/blacs/issues/36/front-panel-settings-not-loaded-correctly)\r\n\r\nWith this patch, BLACS (version prior to last night's backout of import changes) crashes on startup with:\r\n\r\n\r\n```\r\n#!python\r\n\r\nRuntimeError: Double import! The same file has been imported under two\r\ndifferent names, resulting in two copies of the module. This is almost\r\ncertainly a mistake. If you are running a script from within a package and\r\nwant to import another submodule of that package, import it by its full path:\r\n'import module.submodule' instead of just 'import submodule.'\r\n\r\nPath imported: /home/bilbo/labscript_suite/blacs/connections.py\r\n\r\nTraceback (first time imported, as connections):\r\n------------\r\n  File \"__main__.py\", line 126, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n\r\nTraceback (second time imported, as blacs.connections):\r\n------------\r\n  File \"__main__.py\", line 138, in <module>\r\n    from blacs.experiment_queue import QueueManager, QueueTreeview\r\n  File \"/home/bilbo/labscript_suite/blacs/experiment_queue.py\", line 35, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n```\r\n\r\nWith the absolute imports backed out, it doesn't crash because 'experiment_queue', being imported with `import experiment_queue` from `__main__`, doesn't think it's part of a package, and so it is importing 'connections' also as a non-package module. But if `experiment_queue` is imported as a submodule as `blacs.experiment_queue`, then when it does `import connections` in Python 2, that's also a submodule.\r\n\r\nWith this patch, BLACS is failing to load plugins because it is mixing import types with regard to plugins (without this patch, it is loading plugin modules twice).\r\n\r\nSo this shouldn't be merged immediately - it should be pulled for testing so we can stamp out the mixed imports (we should turn them all into fully qualified absolute imports: `from blacs.plugins import blah blah`), and once we're done we should merge this in so that it alerts us to any future screwups.", "title": "Double import denier", "destination": {"commit": {"hash": "f0353f06ba00", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/f0353f06ba00.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/f0353f06ba00"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "272e11a24a22", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/272e11a24a22"}, "html": {"href": "#!/cbillington/labscript_utils/commits/272e11a24a22"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "double-import-denier"}}, "state": "MERGED", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-03-13T01:32:44.027223+00:00"}, "pull_request": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33"}}, "title": "Double import denier"}}, {"update": {"description": "This is a Python import hook that records the filepath of any modules imported (if they have a filepath), and if later a module with the same filepath is imported under a different name, raises an exception. This is to prevent the 'double import' problem, where two copies of the same module can exist in memory at the same time. I consider this a bug in Python, and it's a terrible one, but this import hook can make sure you find out quickly if you've made this mistake, helping prevent bugs like [BLACS issue #36](#!/labscript_suite/blacs/issues/36/front-panel-settings-not-loaded-correctly)\r\n\r\nWith this patch, BLACS (version prior to last night's backout of import changes) crashes on startup with:\r\n\r\n\r\n```\r\n#!python\r\n\r\nRuntimeError: Double import! The same file has been imported under two\r\ndifferent names, resulting in two copies of the module. This is almost\r\ncertainly a mistake. If you are running a script from within a package and\r\nwant to import another submodule of that package, import it by its full path:\r\n'import module.submodule' instead of just 'import submodule.'\r\n\r\nPath imported: /home/bilbo/labscript_suite/blacs/connections.py\r\n\r\nTraceback (first time imported, as connections):\r\n------------\r\n  File \"__main__.py\", line 126, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n\r\nTraceback (second time imported, as blacs.connections):\r\n------------\r\n  File \"__main__.py\", line 138, in <module>\r\n    from blacs.experiment_queue import QueueManager, QueueTreeview\r\n  File \"/home/bilbo/labscript_suite/blacs/experiment_queue.py\", line 35, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n```\r\n\r\nWith the absolute imports backed out, it doesn't crash because 'experiment_queue', being imported with `import experiment_queue` from `__main__`, doesn't think it's part of a package, and so it is importing 'connections' also as a non-package module. But if `experiment_queue` is imported as a submodule as `blacs.experiment_queue`, then when it does `import connections` in Python 2, that's also a submodule.\r\n\r\nWith this patch, BLACS is failing to load plugins because it is mixing import types with regard to plugins (without this patch, it is loading plugin modules twice).\r\n\r\nSo this shouldn't be merged immediately - it should be pulled for testing so we can stamp out the mixed imports (we should turn them all into fully qualified absolute imports: `from blacs.plugins import blah blah`), and once we're done we should merge this in so that it alerts us to any future screwups.", "title": "Double import denier", "destination": {"commit": {"hash": "f0353f06ba00", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/f0353f06ba00.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/f0353f06ba00"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "272e11a24a22", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/272e11a24a22"}, "html": {"href": "#!/cbillington/labscript_utils/commits/272e11a24a22"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "double-import-denier"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-03-13T01:32:43.579114+00:00"}, "pull_request": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33"}}, "title": "Double import denier"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33/comments/58613698.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33/_/diff#comment-58613698"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33"}}, "title": "Double import denier"}, "content": {"raw": "One downside, it does make import errors a bit noisier in Python 2 (1 extra traceback line per import) if a module successfully is found, but has an error upon being imported.\n\nI added code that makes this less noisy for Python 3, but there is not much that can be done in Python 2, and it's not so bad.", "markup": "markdown", "html": "<p>One downside, it does make import errors a bit noisier in Python 2 (1 extra traceback line per import) if a module successfully is found, but has an error upon being imported.</p>\n<p>I added code that makes this less noisy for Python 3, but there is not much that can be done in Python 2, and it's not so bad.</p>", "type": "rendered"}, "created_on": "2018-03-13T01:32:36.892788+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-13T01:32:36.896635+00:00", "type": "pullrequest_comment", "id": 58613698}, "pull_request": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33"}}, "title": "Double import denier"}}, {"update": {"description": "This is a Python import hook that records the filepath of any modules imported (if they have a filepath), and if later a module with the same filepath is imported under a different name, raises an exception. This is to prevent the 'double import' problem, where two copies of the same module can exist in memory at the same time. I consider this a bug in Python, and it's a terrible one, but this import hook can make sure you find out quickly if you've made this mistake, helping prevent bugs like [BLACS issue #36](#!/labscript_suite/blacs/issues/36/front-panel-settings-not-loaded-correctly)\r\n\r\nWith this patch, BLACS (version prior to last night's backout of import changes) crashes on startup with:\r\n\r\n\r\n```\r\n#!python\r\n\r\nRuntimeError: Double import! The same file has been imported under two\r\ndifferent names, resulting in two copies of the module. This is almost\r\ncertainly a mistake. If you are running a script from within a package and\r\nwant to import another submodule of that package, import it by its full path:\r\n'import module.submodule' instead of just 'import submodule.'\r\n\r\nPath imported: /home/bilbo/labscript_suite/blacs/connections.py\r\n\r\nTraceback (first time imported, as connections):\r\n------------\r\n  File \"__main__.py\", line 126, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n\r\nTraceback (second time imported, as blacs.connections):\r\n------------\r\n  File \"__main__.py\", line 138, in <module>\r\n    from blacs.experiment_queue import QueueManager, QueueTreeview\r\n  File \"/home/bilbo/labscript_suite/blacs/experiment_queue.py\", line 35, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n```\r\n\r\nWith the absolute imports backed out, it doesn't crash because 'experiment_queue', being imported with `import experiment_queue` from `__main__`, doesn't think it's part of a package, and so it is importing 'connections' also as a non-package module. But if `experiment_queue` is imported as a submodule as `blacs.experiment_queue`, then when it does `import connections` in Python 2, that's also a submodule.\r\n\r\nWith this patch, BLACS is failing to load plugins because it is mixing import types with regard to plugins (without this patch, it is loading plugin modules twice).\r\n\r\nSo this shouldn't be merged immediately - it should be pulled for testing so we can stamp out the mixed imports (we should turn them all into fully qualified absolute imports: `from blacs.plugins import blah blah`), and once we're done we should merge this in so that it alerts us to any future screwups.", "title": "Double import denier", "destination": {"commit": {"hash": "f0353f06ba00", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/f0353f06ba00.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/f0353f06ba00"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "272e11a24a22", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/272e11a24a22"}, "html": {"href": "#!/cbillington/labscript_utils/commits/272e11a24a22"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "double-import-denier"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-03-13T01:25:52.431163+00:00"}, "pull_request": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33"}}, "title": "Double import denier"}}, {"approval": {"date": "2018-03-13T00:01:52.979347+00:00", "pullrequest": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33"}}, "title": "Double import denier"}, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "pull_request": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33"}}, "title": "Double import denier"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33/comments/58609846.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33/_/diff#comment-58609846"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33"}}, "title": "Double import denier"}, "content": {"raw": "No labscript programs trigger this error when run from within their directories according to my testing. BLACS was the only one doing it, solely because of mixing absolute and relative imports. The other ones only do relative imports (well, sortof - it's complicated. They import in a way that Python treats as absolute if you run `__main__.py` from within the directory, but counts as relative if you do 'python -m'), but since they will shift to absolute imports with porting to python 3 it will be good to have this in there to make sure we get them all (and don't introduce any mixed imports in the future).\n\nHappy to merge?", "markup": "markdown", "html": "<p>No labscript programs trigger this error when run from within their directories according to my testing. BLACS was the only one doing it, solely because of mixing absolute and relative imports. The other ones only do relative imports (well, sortof - it's complicated. They import in a way that Python treats as absolute if you run <code>__main__.py</code> from within the directory, but counts as relative if you do 'python -m'), but since they will shift to absolute imports with porting to python 3 it will be good to have this in there to make sure we get them all (and don't introduce any mixed imports in the future).</p>\n<p>Happy to merge?</p>", "type": "rendered"}, "created_on": "2018-03-12T23:59:10.220400+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-12T23:59:32.474547+00:00", "type": "pullrequest_comment", "id": 58609846}, "pull_request": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33"}}, "title": "Double import denier"}}, {"update": {"description": "This is a Python import hook that records the filepath of any modules imported (if they have a filepath), and if later a module with the same filepath is imported under a different name, raises an exception. This is to prevent the 'double import' problem, where two copies of the same module can exist in memory at the same time. I consider this a bug in Python, and it's a terrible one, but this import hook can make sure you find out quickly if you've made this mistake, helping prevent bugs like [BLACS issue #36](#!/labscript_suite/blacs/issues/36/front-panel-settings-not-loaded-correctly)\r\n\r\nWith this patch, BLACS (version prior to last night's backout of import changes) crashes on startup with:\r\n\r\n\r\n```\r\n#!python\r\n\r\nRuntimeError: Double import! The same file has been imported under two\r\ndifferent names, resulting in two copies of the module. This is almost\r\ncertainly a mistake. If you are running a script from within a package and\r\nwant to import another submodule of that package, import it by its full path:\r\n'import module.submodule' instead of just 'import submodule.'\r\n\r\nPath imported: /home/bilbo/labscript_suite/blacs/connections.py\r\n\r\nTraceback (first time imported, as connections):\r\n------------\r\n  File \"__main__.py\", line 126, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n\r\nTraceback (second time imported, as blacs.connections):\r\n------------\r\n  File \"__main__.py\", line 138, in <module>\r\n    from blacs.experiment_queue import QueueManager, QueueTreeview\r\n  File \"/home/bilbo/labscript_suite/blacs/experiment_queue.py\", line 35, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n```\r\n\r\nWith the absolute imports backed out, it doesn't crash because 'experiment_queue', being imported with `import experiment_queue` from `__main__`, doesn't think it's part of a package, and so it is importing 'connections' also as a non-package module. But if `experiment_queue` is imported as a submodule as `blacs.experiment_queue`, then when it does `import connections` in Python 2, that's also a submodule.\r\n\r\nWith this patch, BLACS is failing to load plugins because it is mixing import types with regard to plugins (without this patch, it is loading plugin modules twice).\r\n\r\nSo this shouldn't be merged immediately - it should be pulled for testing so we can stamp out the mixed imports (we should turn them all into fully qualified absolute imports: `from blacs.plugins import blah blah`), and once we're done we should merge this in so that it alerts us to any future screwups.", "title": "Double import denier", "destination": {"commit": {"hash": "f0353f06ba00", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/f0353f06ba00.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/f0353f06ba00"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "02057a35d64d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/02057a35d64d"}, "html": {"href": "#!/cbillington/labscript_utils/commits/02057a35d64d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "double-import-denier"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-03-12T23:50:21.504570+00:00"}, "pull_request": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33"}}, "title": "Double import denier"}}, {"update": {"description": "This is a Python import hook that records the filepath of any modules imported (if they have a filepath), and if later a module with the same filepath is imported under a different name, raises an exception. This is to prevent the 'double import' problem, where two copies of the same module can exist in memory at the same time. I consider this a bug in Python, and it's a terrible one, but this import hook can make sure you find out quickly if you've made this mistake, helping prevent bugs like [BLACS issue #36](#!/labscript_suite/blacs/issues/36/front-panel-settings-not-loaded-correctly)\r\n\r\nWith this patch, BLACS (version prior to last night's backout of import changes) crashes on startup with:\r\n\r\n\r\n```\r\n#!python\r\n\r\nRuntimeError: Double import! The same file has been imported under two\r\ndifferent names, resulting in two copies of the module. This is almost\r\ncertainly a mistake. If you are running a script from within a package and\r\nwant to import another submodule of that package, import it by its full path:\r\n'import module.submodule' instead of just 'import submodule.'\r\n\r\nPath imported: /home/bilbo/labscript_suite/blacs/connections.py\r\n\r\nTraceback (first time imported, as connections):\r\n------------\r\n  File \"__main__.py\", line 126, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n\r\nTraceback (second time imported, as blacs.connections):\r\n------------\r\n  File \"__main__.py\", line 138, in <module>\r\n    from blacs.experiment_queue import QueueManager, QueueTreeview\r\n  File \"/home/bilbo/labscript_suite/blacs/experiment_queue.py\", line 35, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n```\r\n\r\nWith the absolute imports backed out, it doesn't crash because 'experiment_queue', being imported with `import experiment_queue` from `__main__`, doesn't think it's part of a package, and so it is importing 'connections' also as a non-package module. But if `experiment_queue` is imported as a submodule as `blacs.experiment_queue`, then when it does `import connections` in Python 2, that's also a submodule.\r\n\r\nWith this patch, BLACS is failing to load plugins because it is mixing import types with regard to plugins (without this patch, it is loading plugin modules twice).\r\n\r\nSo this shouldn't be merged immediately - it should be pulled for testing so we can stamp out the mixed imports (we should turn them all into fully qualified absolute imports: `from blacs.plugins import blah blah`), and once we're done we should merge this in so that it alerts us to any future screwups.", "title": "Double import denier", "destination": {"commit": {"hash": "f2c8b7290148", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/f2c8b7290148.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/f2c8b7290148"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "1046e40da0aa", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/1046e40da0aa"}, "html": {"href": "#!/cbillington/labscript_utils/commits/1046e40da0aa"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "double-import-denier"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-03-10T12:12:20.644773+00:00"}, "pull_request": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33"}}, "title": "Double import denier"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33/comments/58469812.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33/_/diff#comment-58469812"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33"}}, "title": "Double import denier"}, "content": {"raw": "Here's a minimal example that makes a little more sense than the confusion that BLACS is going through:\n\n\n```\n#!python\n\nimport sys\nimport os\nimport labscript_utils\n# Import numpy.linalg twice under different names:\nimport numpy as np\n# Add the numpy folder to the search path so that the linalg module is\n# directly available:\nsys.path.append(os.path.dirname(np.__file__))\n# Import it again:\nimport linalg\n```\n\n```\n#!python\n\nRuntimeError: Double import! The same file has been imported under two\ndifferent names, resulting in two copies of the module. This is almost\ncertainly a mistake. If you are running a script from within a package and\nwant to import another submodule of that package, import it by its full path:\n'import module.submodule' instead of just 'import submodule.'\n\nPath imported: /home/bilbo/anaconda3/lib/python3.6/site-packages/numpy/linalg\n\nTraceback (first time imported, as numpy.linalg):\n------------\n  File \"33.py\", line 5, in <module>\n    import numpy as np\n  File \"/home/bilbo/anaconda3/lib/python3.6/site-packages/numpy/__init__.py\", line 142, in <module>\n    from . import add_newdocs\n  File \"/home/bilbo/anaconda3/lib/python3.6/site-packages/numpy/add_newdocs.py\", line 13, in <module>\n    from numpy.lib import add_newdoc\n  File \"/home/bilbo/anaconda3/lib/python3.6/site-packages/numpy/lib/__init__.py\", line 19, in <module>\n    from .polynomial import *\n  File \"/home/bilbo/anaconda3/lib/python3.6/site-packages/numpy/lib/polynomial.py\", line 20, in <module>\n    from numpy.linalg import eigvals, lstsq, inv\n------------\n\nTraceback (second time imported, as linalg):\n------------\n  File \"33.py\", line 10, in <module>\n    import linalg\n------------\n```\n", "markup": "markdown", "html": "<p>Here's a minimal example that makes a little more sense than the confusion that BLACS is going through:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">labscript_utils</span>\n<span class=\"c1\"># Import numpy.linalg twice under different names:</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"kn\">as</span> <span class=\"nn\">np</span>\n<span class=\"c1\"># Add the numpy folder to the search path so that the linalg module is</span>\n<span class=\"c1\"># directly available:</span>\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"vm\">__file__</span><span class=\"p\">))</span>\n<span class=\"c1\"># Import it again:</span>\n<span class=\"kn\">import</span> <span class=\"nn\">linalg</span>\n</pre></div>\n\n\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"ne\">RuntimeError</span><span class=\"p\">:</span> <span class=\"n\">Double</span> <span class=\"n\">import</span><span class=\"err\">!</span> <span class=\"n\">The</span> <span class=\"n\">same</span> <span class=\"nb\">file</span> <span class=\"n\">has</span> <span class=\"n\">been</span> <span class=\"n\">imported</span> <span class=\"n\">under</span> <span class=\"n\">two</span>\n<span class=\"n\">different</span> <span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"n\">resulting</span> <span class=\"ow\">in</span> <span class=\"n\">two</span> <span class=\"n\">copies</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">module</span><span class=\"o\">.</span> <span class=\"n\">This</span> <span class=\"ow\">is</span> <span class=\"n\">almost</span>\n<span class=\"n\">certainly</span> <span class=\"n\">a</span> <span class=\"n\">mistake</span><span class=\"o\">.</span> <span class=\"n\">If</span> <span class=\"n\">you</span> <span class=\"n\">are</span> <span class=\"n\">running</span> <span class=\"n\">a</span> <span class=\"n\">script</span> <span class=\"kn\">from</span> <span class=\"nn\">within</span> <span class=\"nn\">a</span> <span class=\"nn\">package</span> <span class=\"nn\">and</span>\n<span class=\"n\">want</span> <span class=\"n\">to</span> <span class=\"kn\">import</span> <span class=\"nn\">another</span> <span class=\"nn\">submodule</span> <span class=\"nn\">of</span> <span class=\"nn\">that</span> <span class=\"nn\">package</span><span class=\"o\">,</span> <span class=\"nn\">import</span> <span class=\"nn\">it</span> <span class=\"nn\">by</span> <span class=\"nn\">its</span> <span class=\"nn\">full</span> <span class=\"nn\">path</span><span class=\"p\">:</span>\n<span class=\"s1\">&#39;import module.submodule&#39;</span> <span class=\"n\">instead</span> <span class=\"n\">of</span> <span class=\"n\">just</span> <span class=\"s1\">&#39;import submodule.&#39;</span>\n\n<span class=\"n\">Path</span> <span class=\"n\">imported</span><span class=\"p\">:</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">bilbo</span><span class=\"o\">/</span><span class=\"n\">anaconda3</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">python3</span><span class=\"o\">.</span><span class=\"mi\">6</span><span class=\"o\">/</span><span class=\"n\">site</span><span class=\"o\">-</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">numpy</span><span class=\"o\">/</span><span class=\"n\">linalg</span>\n\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">first</span> <span class=\"n\">time</span> <span class=\"n\">imported</span><span class=\"p\">,</span> <span class=\"k\">as</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"p\">):</span>\n<span class=\"o\">------------</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;33.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"kn\">as</span> <span class=\"nn\">np</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/home/bilbo/anaconda3/lib/python3.6/site-packages/numpy/__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">142</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">add_newdocs</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/home/bilbo/anaconda3/lib/python3.6/site-packages/numpy/add_newdocs.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">numpy.lib</span> <span class=\"kn\">import</span> <span class=\"n\">add_newdoc</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/home/bilbo/anaconda3/lib/python3.6/site-packages/numpy/lib/__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">19</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">.polynomial</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/home/bilbo/anaconda3/lib/python3.6/site-packages/numpy/lib/polynomial.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">numpy.linalg</span> <span class=\"kn\">import</span> <span class=\"n\">eigvals</span><span class=\"p\">,</span> <span class=\"n\">lstsq</span><span class=\"p\">,</span> <span class=\"n\">inv</span>\n<span class=\"o\">------------</span>\n\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">second</span> <span class=\"n\">time</span> <span class=\"n\">imported</span><span class=\"p\">,</span> <span class=\"k\">as</span> <span class=\"n\">linalg</span><span class=\"p\">):</span>\n<span class=\"o\">------------</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;33.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">linalg</span>\n<span class=\"o\">------------</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-03-10T10:45:04.783790+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-10T11:02:44.695423+00:00", "type": "pullrequest_comment", "id": 58469812}, "pull_request": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33"}}, "title": "Double import denier"}}, {"update": {"description": "This is a Python import hook that records the filepath of any modules imported (if they have a filepath), and if later a module with the same filepath is imported under a different name, raises an exception. This is to prevent the 'double import' problem, where two copies of the same module can exist in memory at the same time. I consider this a bug in Python, and it's a terrible one, but this import hook can make sure you find out quickly if you've made this mistake, helping prevent bugs like [BLACS issue #36](#!/labscript_suite/blacs/issues/36/front-panel-settings-not-loaded-correctly)\r\n\r\nWith this patch, BLACS (version prior to last night's backout of import changes) crashes on startup with:\r\n\r\n\r\n```\r\n#!python\r\n\r\nRuntimeError: Double import! The same file has been imported under two\r\ndifferent names, resulting in two copies of the module. This is almost\r\ncertainly a mistake. If you are running a script from within a package and\r\nwant to import another submodule of that package, import it by its full path:\r\n'import module.submodule' instead of just 'import submodule.'\r\n\r\nPath imported: /home/bilbo/labscript_suite/blacs/connections.py\r\n\r\nTraceback (first time imported, as connections):\r\n------------\r\n  File \"__main__.py\", line 126, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n\r\nTraceback (second time imported, as blacs.connections):\r\n------------\r\n  File \"__main__.py\", line 138, in <module>\r\n    from blacs.experiment_queue import QueueManager, QueueTreeview\r\n  File \"/home/bilbo/labscript_suite/blacs/experiment_queue.py\", line 35, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n```\r\n\r\nWith the absolute imports backed out, it doesn't crash because 'experiment_queue', being imported with `import experiment_queue` from `__main__`, doesn't think it's part of a package, and so it is importing 'connections' also as a non-package module. But if `experiment_queue` is imported as a submodule as `blacs.experiment_queue`, then when it does `import connections` in Python 2, that's also a submodule.\r\n\r\nWith this patch, BLACS is failing to load plugins because it is mixing import types with regard to plugins (without this patch, it is loading plugin modules twice).\r\n\r\nSo this shouldn't be merged immediately - it should be pulled for testing so we can stamp out the mixed imports (we should turn them all into fully qualified absolute imports: `from blacs.plugins import blah blah`), and once we're done we should merge this in so that it alerts us to any future screwups.", "title": "Double import denier", "destination": {"commit": {"hash": "f2c8b7290148", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/f2c8b7290148.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/f2c8b7290148"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "efd5309af495", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/efd5309af495"}, "html": {"href": "#!/cbillington/labscript_utils/commits/efd5309af495"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "double-import-denier"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-03-10T11:01:48.067307+00:00"}, "pull_request": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33"}}, "title": "Double import denier"}}, {"update": {"description": "This is a Python import hook that records the filepath of any modules imported (if they have a filepath), and if later a module with the same filepath is imported under a different name, raises an exception. This is to prevent the 'double import' problem, where two copies of the same module can exist in memory at the same time. I consider this a bug in Python, and it's a terrible one, but this import hook can make sure you find out quickly if you've made this mistake, helping prevent bugs like [BLACS issue #36](#!/labscript_suite/blacs/issues/36/front-panel-settings-not-loaded-correctly)\r\n\r\nWith this patch, BLACS (version prior to last night's backout of import changes) crashes on startup with:\r\n\r\n\r\n```\r\n#!python\r\n\r\nRuntimeError: Double import! The same file has been imported under two\r\ndifferent names, resulting in two copies of the module. This is almost\r\ncertainly a mistake. If you are running a script from within a package and\r\nwant to import another submodule of that package, import it by its full path:\r\n'import module.submodule' instead of just 'import submodule.'\r\n\r\nPath imported: /home/bilbo/labscript_suite/blacs/connections.py\r\n\r\nTraceback (first time imported, as connections):\r\n------------\r\n  File \"__main__.py\", line 126, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n\r\nTraceback (second time imported, as blacs.connections):\r\n------------\r\n  File \"__main__.py\", line 138, in <module>\r\n    from blacs.experiment_queue import QueueManager, QueueTreeview\r\n  File \"/home/bilbo/labscript_suite/blacs/experiment_queue.py\", line 35, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n```\r\n\r\nWith the absolute imports backed out, it doesn't crash because 'experiment_queue', being imported with `import experiment_queue` from `__main__`, doesn't think it's part of a package, and so it is importing 'connections' also as a non-package module. But if `experiment_queue` is imported as a submodule as `blacs.experiment_queue`, then when it does `import connections` in Python 2, that's also a submodule.\r\n\r\nWith this patch, BLACS is failing to load plugins because it is mixing import types with regard to plugins (without this patch, it is loading plugin modules twice).\r\n\r\nSo this shouldn't be merged immediately - it should be pulled for testing so we can stamp out the mixed imports (we should turn them all into fully qualified absolute imports: `from blacs.plugins import blah blah`), and once we're done we should merge this in so that it alerts us to any future screwups.", "title": "Double import denier", "destination": {"commit": {"hash": "f2c8b7290148", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/f2c8b7290148.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/f2c8b7290148"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7ae6d4718aa5", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/7ae6d4718aa5"}, "html": {"href": "#!/cbillington/labscript_utils/commits/7ae6d4718aa5"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "double-import-denier"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-03-10T10:58:02.550994+00:00"}, "pull_request": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33"}}, "title": "Double import denier"}}, {"update": {"description": "This is a Python import hook that records the filepath of any modules imported (if they have a filepath), and if later a module with the same filepath is imported under a different name, raises an exception. This is to prevent the 'double import' problem, where two copies of the same module can exist in memory at the same time. I consider this a bug in Python, and it's a terrible one, but this import hook can make sure you find out quickly if you've made this mistake, helping prevent bugs like [BLACS issue #36](#!/labscript_suite/blacs/issues/36/front-panel-settings-not-loaded-correctly)\r\n\r\nWith this patch, BLACS crashes on startup with:\r\n\r\n\r\n```\r\n#!python\r\n\r\nRuntimeError: Double import! The same file has been imported under two\r\ndifferent names, resulting in two copies of the module. This is almost\r\ncertainly a mistake. If you are running a script from within a package and\r\nwant to import another submodule of that package, import it by its full path:\r\n'import module.submodule' instead of just 'import submodule.'\r\n\r\nPath imported: /home/bilbo/labscript_suite/blacs/connections.py\r\n\r\nTraceback (first time imported, as connections):\r\n------------\r\n  File \"__main__.py\", line 126, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n\r\nTraceback (second time imported, as blacs.connections):\r\n------------\r\n  File \"__main__.py\", line 138, in <module>\r\n    from blacs.experiment_queue import QueueManager, QueueTreeview\r\n  File \"/home/bilbo/labscript_suite/blacs/experiment_queue.py\", line 35, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n```\r\n\r\nWith the absolute imports backed out, it doesn't crash because 'experiment_queue', being imported with `import experiment_queue` from `__main__`, doesn't think it's part of a package, and so it is importing 'connections' also as a non-package module. But if `experiment_queue` is imported as a submodule as `blacs.experiment_queue`, then when it does `import connections` in Python 2, that's also a submodule.\r\n\r\nWith this patch, BLACS is failing to load plugins because it is mixing import types with regard to plugins (without this patch, it is loading plugin modules twice).\r\n\r\nSo this shouldn't be merged immediately - it should be pulled for testing so we can stamp out the mixed imports (we should turn them all into fully qualified absolute imports: `from blacs.plugins import blah blah`), and once we're done we should merge this in so that it alerts us to any future screwups.", "title": "Double import denier", "destination": {"commit": {"hash": "f2c8b7290148", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/f2c8b7290148.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/f2c8b7290148"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7ae6d4718aa5", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/7ae6d4718aa5"}, "html": {"href": "#!/cbillington/labscript_utils/commits/7ae6d4718aa5"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "double-import-denier"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-03-10T10:50:22.014152+00:00"}, "pull_request": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33"}}, "title": "Double import denier"}}, {"update": {"description": "This is a Python import hook that records the filepath of any modules imported (if they have a filepath), and if later a module with the same filepath is imported under a different name, raises an exception. This is to prevent the 'double import' problem, where two copies of the same module can exist in memory at the same time. I consider this a bug in Python, and it's a terrible one, but this import hook can make sure you find out quickly if you've made this mistake, helping prevent bugs like [BLACS issue #36](#!/labscript_suite/blacs/issues/36/front-panel-settings-not-loaded-correctly)\r\n\r\nWith this patch, BLACS crashes on startup with:\r\n\r\n\r\n```\r\n#!python\r\n\r\nRuntimeError: Double import! The same file has been imported under two\r\ndifferent names, resulting in two copies of the module. This is almost\r\ncertainly a mistake. If you are running a script from within a package and\r\nwant to import another submodule of that package, import it by its full path:\r\n'import module.submodule' instead of just 'import submodule.'\r\n\r\nPath imported: /home/bilbo/labscript_suite/blacs/connections.py\r\n\r\nTraceback (first time imported, as connections):\r\n------------\r\n  File \"__main__.py\", line 126, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n\r\nTraceback (second time imported, as blacs.connections):\r\n------------\r\n  File \"__main__.py\", line 138, in <module>\r\n    from blacs.experiment_queue import QueueManager, QueueTreeview\r\n  File \"/home/bilbo/labscript_suite/blacs/experiment_queue.py\", line 35, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n```\r\n\r\nWith the absolute imports backed out, it doesn't crash because 'experiment_queue', being imported with `import experiment_queue` from `__main__`, doesn't think it's part of a package, and so it is importing 'connections' also as a non-package module. But if `experiment_queue` is imported as a submodule as `blacs.experiment_queue`, then when it does `import connections` in Python 2, that's also a submodule.\r\n\r\nWith this patch, BLACS is failing to load plugins because it is mixing import types with regard to plugins (without this patch, it is loading plugin modules twice).\r\n\r\nSo this shouldn't be merged immediately - it should be pulled for testing so we can stamp out the mixed imports (we should turn them all into fully qualified absolute imports: `from blacs.plugins import blah blah`), and once we're done we should merge this in so that it alerts us to any future screwups.", "title": "Double import denier", "destination": {"commit": {"hash": "f2c8b7290148", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/f2c8b7290148.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/f2c8b7290148"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "121ceefe9ca2", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/121ceefe9ca2"}, "html": {"href": "#!/cbillington/labscript_utils/commits/121ceefe9ca2"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "double-import-denier"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-03-10T10:38:18.387064+00:00"}, "pull_request": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33"}}, "title": "Double import denier"}}, {"update": {"description": "This is a Python import hook that records the filepath of any modules imported (if they have a filepath), and if later a module with the same filepath is imported under a different name, raises an exception. This is to prevent the 'double import' problem, where two copies of the same module can exist in memory at the same time. I consider this a bug in Python, and it's a terrible one, but this import hook can make sure you find out quickly if you've made this mistake, helping prevent bugs like [BLACS issue #36](#!/labscript_suite/blacs/issues/36/front-panel-settings-not-loaded-correctly)\r\n\r\nWith this patch, BLACS crashes on startup with:\r\n\r\n\r\n```\r\n#!python\r\n\r\nRuntimeError: Double import! The same file has been imported under two different names, resulting in two copies of the module. This is almost certainly a mistake. If you are running a script from within a package and want to import another submodule of that package, import it by its full path: 'import module.submodule' instead of just 'import submodule.'\r\n\r\nPath imported: /home/bilbo/labscript_suite/blacs/connections.py\r\n\r\nTraceback (first time imported, as connections):\r\n------------\r\n  File \"__main__.py\", line 126, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n\r\nTraceback (second time imported, as blacs.connections):\r\n------------\r\n  File \"__main__.py\", line 138, in <module>\r\n    from blacs.experiment_queue import QueueManager, QueueTreeview\r\n  File \"/home/bilbo/labscript_suite/blacs/experiment_queue.py\", line 35, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n```\r\n\r\nWith the absolute imports backed out, it doesn't crash because 'experiment_queue', being imported with `import experiment_queue` from `__main__`, doesn't think it's part of a package, and so it is importing 'connections' also as a non-package module. But if `experiment_queue` is imported as a submodule as `blacs.experiment_queue`, then when it does `import connections` in Python 2, that's also a submodule.\r\n\r\nWith this patch, BLACS is failing to load plugins because it is mixing import types with regard to plugins (without this patch, it is loading plugin modules twice).\r\n\r\nSo this shouldn't be merged immediately - it should be pulled for testing so we can stamp out the mixed imports (we should turn them all into fully qualified absolute imports: `from blacs.plugins import blah blah`), and once we're done we should merge this in so that it alerts us to any future screwups.", "title": "Double import denier", "destination": {"commit": {"hash": "f2c8b7290148", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/f2c8b7290148.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/f2c8b7290148"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "121ceefe9ca2", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/121ceefe9ca2"}, "html": {"href": "#!/cbillington/labscript_utils/commits/121ceefe9ca2"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "double-import-denier"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-03-10T10:37:36.805889+00:00"}, "pull_request": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33"}}, "title": "Double import denier"}}, {"update": {"description": "This is a Python import hook that records the filepath of any modules imported (if they have a filepath), and if later a module with the same filepath is imported under a different name, raises an exception. This is to prevent the 'double import' problem, where two copies of the same module can exist in memory at the same time. I consider this a bug in Python, and it's a terrible one, but this import hook can make sure you find out quickly if you've made this mistake, helping prevent bugs like [BLACS issue #36](#!/labscript_suite/blacs/issues/36/front-panel-settings-not-loaded-correctly)\r\n\r\nWith this patch, BLACS crashes on startup with:\r\n\r\n\r\n```\r\n#!python\r\n\r\nRuntimeError: Double import! The same file has been imported under two different names, resulting in two copies of the module. This is almost certainly a mistake. If you are running a script from within a package and want to import another submodule of that package, import it by its full path: 'import module.submodule' instead of just 'import submodule.'\r\n\r\nPath imported: /home/bilbo/labscript_suite/blacs/connections.py\r\n\r\nTraceback (first time imported, as connections):\r\n------------\r\n  File \"__main__.py\", line 126, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n\r\nTraceback (second time imported, as blacs.connections):\r\n------------\r\n  File \"__main__.py\", line 138, in <module>\r\n    from blacs.experiment_queue import QueueManager, QueueTreeview\r\n  File \"/home/bilbo/labscript_suite/blacs/experiment_queue.py\", line 35, in <module>\r\n    from connections import ConnectionTable\r\n------------\r\n```\r\n\r\nWith the absolute imports backed out, it doesn't crash because 'experiment_queue', being imported with `import experiment_queue` from `__main__`, doesn't think it's part of a package, and so it is importing 'connections' also as a non-package module. But if `experiment_queue` is imported as a submodule as `blacs.experiment_queue`, then when it does `import connections` in Python 2, that's also a submodule.\r\n\r\nWith this patch, BLACS is failing to load plugins because it is mixing import types with regard to plugins (without this patch, it is loading plugin modules twice).\r\n\r\nSo this shouldn't be merged immediately - it should be pulled for testing so we can stamp out the mixed imports (we should turn them all into fully qualified absolute imports: `from blacs.plugins import blah blah`), and once we're done we should merge this in so that it alerts us to any future screwups.", "title": "Double import denier", "destination": {"commit": {"hash": "f2c8b7290148", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/f2c8b7290148.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/f2c8b7290148"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "121ceefe9ca2", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/121ceefe9ca2"}, "html": {"href": "#!/cbillington/labscript_utils/commits/121ceefe9ca2"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "double-import-denier"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-03-10T10:37:36.762812+00:00"}, "pull_request": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/33.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/33"}}, "title": "Double import denier"}}]}