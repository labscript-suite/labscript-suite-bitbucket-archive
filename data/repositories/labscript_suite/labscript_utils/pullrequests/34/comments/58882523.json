{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/34/comments/58882523.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/34/_/diff#comment-58882523"}}, "parent": {"id": 58878865, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/34/comments/58878865.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/34/_/diff#comment-58878865"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 34, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/34.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/34"}}, "title": "Prepare Connectiontable for Remote Workers"}, "content": {"raw": "I disagree and think the pull request should stay.\n\nThis pull request is preventing BLACS from initialising tabs for `RemoteWrokerBroker` and `SecondaryControlSystem` where these are implemented as `labscript.Device` in [labscript pull request 22](#!/labscript_suite/labscript/pull-requests/22/syntax-for-remote-worker-brokers-and). Those entries in the connection table are used for two purposes:\n\n* to let BLACS know what hostname/port to use when either communicating with a secondary control system or to use when calling the new zprocess code to launch the worker process remotely.  \n  **Note**: the BLACS\\_connection string is being modified to contain the `RemoteWrokerBroker` and/or `SecondaryControlSystem` device name, which then needs to be looked up in the connection table to obtain the externally accessible hostname/port of the other PC.\n* To let secondary control PCs to look at the connection table and infer they are a secondary control system \\(by comparing a device name to a parameter \\(that doesn't exist yet\\) in the labconfig file\\). This will allow BLACS to know which devices it should return from `get_attached_devices`.\n\nThis, and more is outlined [here](#!/labscript_suite/blacs/issues/13/launch-blacs-as-a-secondary-control-system).\n\n----\n\nAs for this pull request itself, it's basically just making sure that BLACS doesn't crash if you use any of those classes, but doesn't really address implementation of secondary control systems if we're assuming that it is BLACS which will be launched as a secondary control system. That's to be expected though since it's going to need a rather large re-architecting of BLACS which I'm assuming I'll be doing at some point. In terms of remote workers though, this pull request gives you an easy way to get the address that the remote worker will be operating on \\(well, `self.settings['connection_table'].find_by_name(self.settings['connection_table'].find_by_name(self.device_name).remote_connections[0]).BLACS_connection` but it's not that bad...\\). So you just add that in somewhere in `tab_base_classes.py` where you do the zprocess launching of the worker right?", "markup": "markdown", "html": "<p>I disagree and think the pull request should stay.</p>\n<p>This pull request is preventing BLACS from initialising tabs for <code>RemoteWrokerBroker</code> and <code>SecondaryControlSystem</code> where these are implemented as <code>labscript.Device</code> in <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/pull-requests/22/syntax-for-remote-worker-brokers-and\" rel=\"nofollow\">labscript pull request 22</a>. Those entries in the connection table are used for two purposes:</p>\n<ul>\n<li>to let BLACS know what hostname/port to use when either communicating with a secondary control system or to use when calling the new zprocess code to launch the worker process remotely.<br />\n<strong>Note</strong>: the BLACS_connection string is being modified to contain the <code>RemoteWrokerBroker</code> and/or <code>SecondaryControlSystem</code> device name, which then needs to be looked up in the connection table to obtain the externally accessible hostname/port of the other PC.</li>\n<li>To let secondary control PCs to look at the connection table and infer they are a secondary control system (by comparing a device name to a parameter (that doesn't exist yet) in the labconfig file). This will allow BLACS to know which devices it should return from <code>get_attached_devices</code>.</li>\n</ul>\n<p>This, and more is outlined <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/issues/13/launch-blacs-as-a-secondary-control-system\" rel=\"nofollow\">here</a>.</p>\n<hr />\n<p>As for this pull request itself, it's basically just making sure that BLACS doesn't crash if you use any of those classes, but doesn't really address implementation of secondary control systems if we're assuming that it is BLACS which will be launched as a secondary control system. That's to be expected though since it's going to need a rather large re-architecting of BLACS which I'm assuming I'll be doing at some point. In terms of remote workers though, this pull request gives you an easy way to get the address that the remote worker will be operating on (well, <code>self.settings['connection_table'].find_by_name(self.settings['connection_table'].find_by_name(self.device_name).remote_connections[0]).BLACS_connection</code> but it's not that bad...). So you just add that in somewhere in <code>tab_base_classes.py</code> where you do the zprocess launching of the worker right?</p>", "type": "rendered"}, "created_on": "2018-03-15T03:37:08.357426+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-03-15T03:37:08.362679+00:00", "type": "pullrequest_comment", "id": 58882523}