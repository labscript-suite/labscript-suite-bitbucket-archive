{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/34/comments/58856251.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/34/_/diff#comment-58856251"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 34, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/34.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/34"}}, "title": "Prepare Connectiontable for Remote Workers"}, "content": {"raw": "If one currently adds a `RemoteWorkerBroker` or a `RemoteWorkerBroker` to the connectiontable he will be greeted by a exception preventing BLACS from starting:\n\n    Traceback (most recent call last):\n      File \"/Users/janwerkmann/anaconda/lib/python2.7/runpy.py\", line 174, in _run_module_as_main\n        \"__main__\", fname, loader, pkg_name)\n      File \"/Users/janwerkmann/anaconda/lib/python2.7/runpy.py\", line 72, in _run_code\n        exec code in run_globals\n      File \"/Users/janwerkmann/labscript_suite/blacs/__main__.py\", line 696, in <module>\n        app = BLACS(qapplication)\n      File \"/Users/janwerkmann/labscript_suite/blacs/__main__.py\", line 281, in __init__\n        TabClass = labscript_devices.get_BLACS_tab(labscript_device_class_name)\n      File \"/Users/janwerkmann/labscript_suite/labscript_devices/__init__.py\", line 97, in get_BLACS_tab\n        return BLACS_tab[name]\n      File \"/Users/janwerkmann/labscript_suite/labscript_devices/__init__.py\", line 59, in __getitem__\n        importlib.import_module('.' + name, __name__)\n      File \"/Users/janwerkmann/anaconda/lib/python2.7/importlib/__init__.py\", line 37, in import_module\n        __import__(name)\n    ImportError: No module named RemoteWorkerBroker\n\nThis fixes that bug/problem.\n\n\u200c", "markup": "markdown", "html": "<p>If one currently adds a <code>RemoteWorkerBroker</code> or a <code>RemoteWorkerBroker</code> to the connectiontable he will be greeted by a exception preventing BLACS from starting:</p>\n<div class=\"codehilite\"><pre><span></span>Traceback (most recent call last):\n  File &quot;/Users/janwerkmann/anaconda/lib/python2.7/runpy.py&quot;, line 174, in _run_module_as_main\n    &quot;__main__&quot;, fname, loader, pkg_name)\n  File &quot;/Users/janwerkmann/anaconda/lib/python2.7/runpy.py&quot;, line 72, in _run_code\n    exec code in run_globals\n  File &quot;/Users/janwerkmann/labscript_suite/blacs/__main__.py&quot;, line 696, in &lt;module&gt;\n    app = BLACS(qapplication)\n  File &quot;/Users/janwerkmann/labscript_suite/blacs/__main__.py&quot;, line 281, in __init__\n    TabClass = labscript_devices.get_BLACS_tab(labscript_device_class_name)\n  File &quot;/Users/janwerkmann/labscript_suite/labscript_devices/__init__.py&quot;, line 97, in get_BLACS_tab\n    return BLACS_tab[name]\n  File &quot;/Users/janwerkmann/labscript_suite/labscript_devices/__init__.py&quot;, line 59, in __getitem__\n    importlib.import_module(&#39;.&#39; + name, __name__)\n  File &quot;/Users/janwerkmann/anaconda/lib/python2.7/importlib/__init__.py&quot;, line 37, in import_module\n    __import__(name)\nImportError: No module named RemoteWorkerBroker\n</pre></div>\n\n\n<p>This fixes that bug/problem.</p>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2018-03-14T19:34:54.987935+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-14T19:34:55.142390+00:00", "type": "pullrequest_comment", "id": 58856251}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/34/comments/58878865.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/34/_/diff#comment-58878865"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 34, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/34.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/34"}}, "title": "Prepare Connectiontable for Remote Workers"}, "content": {"raw": "I'm currently extending zprocess such that launching a subprocess on another computer will be as simple as passing in a hostname and port to `zprocess.subprocess_with_queues`. Once I'm done that, BLACS will be able to launch tabs almost as normal, except that it will have to extract the hostname from BLACS_connection (and the zprocess \"command server\" port from labconfig - the other computer will have to be running a zprocess daemon similar to zlock, but for launching subprocesses) and pass these as additional arguments to zprocess.subprocess_with_queues(), which will handle the rest. That way subprocesses on the same computer, or on another computer, can be almost completely transparent, and we can use it for things like running lyse routines on different computers even, or any of the other multiprocessing that we do. I think making our multiprocessing library handle most of the work is better than building it into BLACS, especially since it will be important to have the remote devices (or any remote subprocesses) still be able to use zprocess events and heartbeating, so zprocess will be intimately involved.\n\nSo connections.py should continue to return all devices.\n\nIt is useful to return the remote connection, yes, but I'm going to be talking to phil about that, since I suspect only a hostname will be needed and not a hostname and port (the zprocess command servers will be running on fixed ports, and so really that belongs in labconfig like other port numbers, even that means a list in labconfig if the ports are different for different computers). And also that perhaps we can deprecate BLACS_connection and store only the hostname there (with BLACS_connection moving to connection_table_properties with a device-specific name).\n\nSo I'd vote to decline this, though I'll wait to let phil comment if he wants.", "markup": "markdown", "html": "<p>I'm currently extending zprocess such that launching a subprocess on another computer will be as simple as passing in a hostname and port to <code>zprocess.subprocess_with_queues</code>. Once I'm done that, BLACS will be able to launch tabs almost as normal, except that it will have to extract the hostname from BLACS_connection (and the zprocess \"command server\" port from labconfig - the other computer will have to be running a zprocess daemon similar to zlock, but for launching subprocesses) and pass these as additional arguments to zprocess.subprocess_with_queues(), which will handle the rest. That way subprocesses on the same computer, or on another computer, can be almost completely transparent, and we can use it for things like running lyse routines on different computers even, or any of the other multiprocessing that we do. I think making our multiprocessing library handle most of the work is better than building it into BLACS, especially since it will be important to have the remote devices (or any remote subprocesses) still be able to use zprocess events and heartbeating, so zprocess will be intimately involved.</p>\n<p>So connections.py should continue to return all devices.</p>\n<p>It is useful to return the remote connection, yes, but I'm going to be talking to phil about that, since I suspect only a hostname will be needed and not a hostname and port (the zprocess command servers will be running on fixed ports, and so really that belongs in labconfig like other port numbers, even that means a list in labconfig if the ports are different for different computers). And also that perhaps we can deprecate BLACS_connection and store only the hostname there (with BLACS_connection moving to connection_table_properties with a device-specific name).</p>\n<p>So I'd vote to decline this, though I'll wait to let phil comment if he wants.</p>", "type": "rendered"}, "created_on": "2018-03-15T01:54:38.557263+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-15T01:54:38.560832+00:00", "type": "pullrequest_comment", "id": 58878865}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/34/comments/58882523.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/34/_/diff#comment-58882523"}}, "parent": {"id": 58878865, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/34/comments/58878865.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/34/_/diff#comment-58878865"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 34, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/34.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/34"}}, "title": "Prepare Connectiontable for Remote Workers"}, "content": {"raw": "I disagree and think the pull request should stay.\n\nThis pull request is preventing BLACS from initialising tabs for `RemoteWrokerBroker` and `SecondaryControlSystem` where these are implemented as `labscript.Device` in [labscript pull request 22](#!/labscript_suite/labscript/pull-requests/22/syntax-for-remote-worker-brokers-and). Those entries in the connection table are used for two purposes:\n\n* to let BLACS know what hostname/port to use when either communicating with a secondary control system or to use when calling the new zprocess code to launch the worker process remotely.  \n  **Note**: the BLACS\\_connection string is being modified to contain the `RemoteWrokerBroker` and/or `SecondaryControlSystem` device name, which then needs to be looked up in the connection table to obtain the externally accessible hostname/port of the other PC.\n* To let secondary control PCs to look at the connection table and infer they are a secondary control system \\(by comparing a device name to a parameter \\(that doesn't exist yet\\) in the labconfig file\\). This will allow BLACS to know which devices it should return from `get_attached_devices`.\n\nThis, and more is outlined [here](#!/labscript_suite/blacs/issues/13/launch-blacs-as-a-secondary-control-system).\n\n----\n\nAs for this pull request itself, it's basically just making sure that BLACS doesn't crash if you use any of those classes, but doesn't really address implementation of secondary control systems if we're assuming that it is BLACS which will be launched as a secondary control system. That's to be expected though since it's going to need a rather large re-architecting of BLACS which I'm assuming I'll be doing at some point. In terms of remote workers though, this pull request gives you an easy way to get the address that the remote worker will be operating on \\(well, `self.settings['connection_table'].find_by_name(self.settings['connection_table'].find_by_name(self.device_name).remote_connections[0]).BLACS_connection` but it's not that bad...\\). So you just add that in somewhere in `tab_base_classes.py` where you do the zprocess launching of the worker right?", "markup": "markdown", "html": "<p>I disagree and think the pull request should stay.</p>\n<p>This pull request is preventing BLACS from initialising tabs for <code>RemoteWrokerBroker</code> and <code>SecondaryControlSystem</code> where these are implemented as <code>labscript.Device</code> in <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript/pull-requests/22/syntax-for-remote-worker-brokers-and\" rel=\"nofollow\">labscript pull request 22</a>. Those entries in the connection table are used for two purposes:</p>\n<ul>\n<li>to let BLACS know what hostname/port to use when either communicating with a secondary control system or to use when calling the new zprocess code to launch the worker process remotely.<br />\n<strong>Note</strong>: the BLACS_connection string is being modified to contain the <code>RemoteWrokerBroker</code> and/or <code>SecondaryControlSystem</code> device name, which then needs to be looked up in the connection table to obtain the externally accessible hostname/port of the other PC.</li>\n<li>To let secondary control PCs to look at the connection table and infer they are a secondary control system (by comparing a device name to a parameter (that doesn't exist yet) in the labconfig file). This will allow BLACS to know which devices it should return from <code>get_attached_devices</code>.</li>\n</ul>\n<p>This, and more is outlined <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/issues/13/launch-blacs-as-a-secondary-control-system\" rel=\"nofollow\">here</a>.</p>\n<hr />\n<p>As for this pull request itself, it's basically just making sure that BLACS doesn't crash if you use any of those classes, but doesn't really address implementation of secondary control systems if we're assuming that it is BLACS which will be launched as a secondary control system. That's to be expected though since it's going to need a rather large re-architecting of BLACS which I'm assuming I'll be doing at some point. In terms of remote workers though, this pull request gives you an easy way to get the address that the remote worker will be operating on (well, <code>self.settings['connection_table'].find_by_name(self.settings['connection_table'].find_by_name(self.device_name).remote_connections[0]).BLACS_connection</code> but it's not that bad...). So you just add that in somewhere in <code>tab_base_classes.py</code> where you do the zprocess launching of the worker right?</p>", "type": "rendered"}, "created_on": "2018-03-15T03:37:08.357426+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-03-15T03:37:08.362679+00:00", "type": "pullrequest_comment", "id": 58882523}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/34/comments/58889266.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/34/_/diff#comment-58889266"}}, "parent": {"id": 58882523, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/34/comments/58882523.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/34/_/diff#comment-58882523"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 34, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/34.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/34"}}, "title": "Prepare Connectiontable for Remote Workers"}, "content": {"raw": "Ok so first of all Phil is mostly right this pull request prevents the non-devices introduced by #22 from being initiated by BLACS and adds a easier access to the hostename and \\(if specified\\) port. So this pull request is independet from the was we want workers to be run on another machine.\n\nThe other change that Devices attached to a secondary control system don't get instantiated is in here because Phil's proposal wants them to live in a second BLACS and have it's tab be handled there.\n\nAs for still returning Remoteworkers with a `Connection.remote_connections` length of 1 this is so that imidiate Remote workers can than be instanciated in`tab_base_classes.py`. This is something that can be either done by my current hack or your zprocess 'remote launcher' deamon.\n\nBy the way I'm in great favor of moving the remote stuff to zprocess but we should consider a few things that my current implementation of remote workers is hacking around:\n\n* transition\\_to\\_buffered and transition\\_to\\_manual receive the local file path to h5 files this would have to change or get modified in `tab_base_classes.py`'s event\\_queue loop\n* New features like the Analog In pull request talking with specific local ports will need a Forwarder of some kind or need to know that they are non local and where to finde the main machine\n* Worker creation should be non blocking if the deamon on the other machine is not running otherwise starting BLACS could come to a crawl\n\n", "markup": "markdown", "html": "<p>Ok so first of all Phil is mostly right this pull request prevents the non-devices introduced by <a href=\"#!/labscript_suite/labscript_utils/issues/22/the-win7appid-executable-can-be-replaced\" rel=\"nofollow\" title=\"The Win7AppId executable can be replaced with Python calls now\" class=\"ap-connect-link\"><s>#22</s></a> from being initiated by BLACS and adds a easier access to the hostename and (if specified) port. So this pull request is independet from the was we want workers to be run on another machine.</p>\n<p>The other change that Devices attached to a secondary control system don't get instantiated is in here because Phil's proposal wants them to live in a second BLACS and have it's tab be handled there.</p>\n<p>As for still returning Remoteworkers with a <code>Connection.remote_connections</code> length of 1 this is so that imidiate Remote workers can than be instanciated in<code>tab_base_classes.py</code>. This is something that can be either done by my current hack or your zprocess 'remote launcher' deamon.</p>\n<p>By the way I'm in great favor of moving the remote stuff to zprocess but we should consider a few things that my current implementation of remote workers is hacking around:</p>\n<ul>\n<li>transition_to_buffered and transition_to_manual receive the local file path to h5 files this would have to change or get modified in <code>tab_base_classes.py</code>'s event_queue loop</li>\n<li>New features like the Analog In pull request talking with specific local ports will need a Forwarder of some kind or need to know that they are non local and where to finde the main machine</li>\n<li>Worker creation should be non blocking if the deamon on the other machine is not running otherwise starting BLACS could come to a crawl</li>\n</ul>", "type": "rendered"}, "created_on": "2018-03-15T06:21:21.547016+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-15T06:32:07.998705+00:00", "type": "pullrequest_comment", "id": 58889266}], "page": 1, "size": 4}