{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/36/comments/59936174.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/36/_/diff#comment-59936174"}}, "parent": {"id": 59154873, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/36/comments/59154873.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/36/_/diff#comment-59154873"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 36, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/36.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/36"}}, "title": "ConnectionTable improvements"}, "content": {"raw": "I vote don't remove them. I think this patch as it is makes sense. You get a bunch of errors, and a tree of devices where if you follow the links you can get to the parents - it's just that some parents may have been removed from the list of all devices. This is not dissimilar to other data structures - we've deleted a reference, that's all, and there may be other references. BLACS only looks at the top level list of references to devices to decide what to instantiate, but all the other links are intact so any data needed by child devices is still accessible. It's like how in linux when you delete a file, the reference to it in the filesystem vanishes, but linux keeps it around in memory until any processes that have it open close it.\n\nI've tested and this patch works well enough as is, I'm inclined to merge.", "markup": "markdown", "html": "<p>I vote don't remove them. I think this patch as it is makes sense. You get a bunch of errors, and a tree of devices where if you follow the links you can get to the parents - it's just that some parents may have been removed from the list of all devices. This is not dissimilar to other data structures - we've deleted a reference, that's all, and there may be other references. BLACS only looks at the top level list of references to devices to decide what to instantiate, but all the other links are intact so any data needed by child devices is still accessible. It's like how in linux when you delete a file, the reference to it in the filesystem vanishes, but linux keeps it around in memory until any processes that have it open close it.</p>\n<p>I've tested and this patch works well enough as is, I'm inclined to merge.</p>", "type": "rendered"}, "created_on": "2018-03-27T05:09:34.060486+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-27T05:09:34.064640+00:00", "type": "pullrequest_comment", "id": 59936174}