{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/51/comments/73346830.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/51/_/diff#comment-73346830"}}, "parent": {"id": 73339855, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/51/comments/73339855.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/51/_/diff#comment-73339855"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 51, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/51.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/51"}}, "title": "Concurrent logging"}, "content": {"raw": "The client side of zmq logging would be relatively trivial, whether it used that or just overrode the emit() method of a logging handler (which is what I planned to do). The trickiness would be things like ensuring the server is running (server needs REQ/REP for this pinging to check, not just pull or sub), silly things like PUB SUB subscriptions not being processed synchronously leading to dropped initial messages, getting the logging server to do the file rollover (probably just by using the doRollover() method of maybe a subclass of RotatingFileHandler), communicating from the clients what filepath the log should be written to, some kind of timeout so that a log file will be closed when nobody is writing to it (otherwise it can't be deleted on Windows)...there was going to be complexity from these sorts of things. I had a design coming together that would do all that, but I'm glad to not have to think about it if this 3rd party module works well!", "markup": "markdown", "html": "<p>The client side of zmq logging would be relatively trivial, whether it used that or just overrode the emit() method of a logging handler (which is what I planned to do). The trickiness would be things like ensuring the server is running (server needs REQ/REP for this pinging to check, not just pull or sub), silly things like PUB SUB subscriptions not being processed synchronously leading to dropped initial messages, getting the logging server to do the file rollover (probably just by using the doRollover() method of maybe a subclass of RotatingFileHandler), communicating from the clients what filepath the log should be written to, some kind of timeout so that a log file will be closed when nobody is writing to it (otherwise it can't be deleted on Windows)...there was going to be complexity from these sorts of things. I had a design coming together that would do all that, but I'm glad to not have to think about it if this 3rd party module works well!</p>", "type": "rendered"}, "created_on": "2018-08-18T17:04:19.792813+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-08-18T17:04:19.799540+00:00", "type": "pullrequest_comment", "id": 73346830}