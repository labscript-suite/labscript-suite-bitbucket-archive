{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/51/comments/72929277.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/51/_/diff#comment-72929277"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 51, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/51.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/51"}}, "title": "Concurrent logging"}, "content": {"raw": "concurrent-log-handler uses OS-level file locking to ensure multiple processes are not able to rotate the log file at the same time.\n\nI had planned on making some kind of network logger, it would probably be more performant but would come with other issues and was going to be rather complicated to make. This package is performant enough (~100us or so per log line) and we don't have to maintain it, so as long as it doesn't turn up any problems I think we should just use it as is.\n\nI'm pretty sure OS file locking only works for local files, so log files cannot be on a network drive. I doubt this will be a problem.\n\nHat tip to Russ for pointing me in the direction of this package.", "markup": "markdown", "html": "<p>concurrent-log-handler uses OS-level file locking to ensure multiple processes are not able to rotate the log file at the same time.</p>\n<p>I had planned on making some kind of network logger, it would probably be more performant but would come with other issues and was going to be rather complicated to make. This package is performant enough (~100us or so per log line) and we don't have to maintain it, so as long as it doesn't turn up any problems I think we should just use it as is.</p>\n<p>I'm pretty sure OS file locking only works for local files, so log files cannot be on a network drive. I doubt this will be a problem.</p>\n<p>Hat tip to Russ for pointing me in the direction of this package.</p>", "type": "rendered"}, "created_on": "2018-08-14T15:24:21.981735+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-08-14T15:24:21.988615+00:00", "type": "pullrequest_comment", "id": 72929277}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/51/comments/73315488.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/51/_/diff#comment-73315488"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 51, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/51.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/51"}}, "title": "Concurrent logging"}, "content": {"raw": "Will merge on Monday if there are no comments", "markup": "markdown", "html": "<p>Will merge on Monday if there are no comments</p>", "type": "rendered"}, "created_on": "2018-08-17T17:18:22.227448+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-08-17T17:18:22.233549+00:00", "type": "pullrequest_comment", "id": 73315488}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/51/comments/73339855.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/51/_/diff#comment-73339855"}}, "parent": {"id": 73315488, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/51/comments/73315488.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/51/_/diff#comment-73315488"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 51, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/51.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/51"}}, "title": "Concurrent logging"}, "content": {"raw": "I don\u2019t really care what we do with logging, but I assume you\u2019ve seen this? \\(I came across it the other day looking for something else\\) [https://pyzmq.readthedocs.io/en/latest/logging.html](https://pyzmq.readthedocs.io/en/latest/logging.html)", "markup": "markdown", "html": "<p>I don\u2019t really care what we do with logging, but I assume you\u2019ve seen this? (I came across it the other day looking for something else) <a data-is-external-link=\"true\" href=\"https://pyzmq.readthedocs.io/en/latest/logging.html\" rel=\"nofollow\">https://pyzmq.readthedocs.io/en/latest/logging.html</a></p>", "type": "rendered"}, "created_on": "2018-08-18T02:53:59.794599+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-08-18T02:53:59.801415+00:00", "type": "pullrequest_comment", "id": 73339855}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/51/comments/73346830.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/51/_/diff#comment-73346830"}}, "parent": {"id": 73339855, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/51/comments/73339855.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/51/_/diff#comment-73339855"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 51, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/51.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/51"}}, "title": "Concurrent logging"}, "content": {"raw": "The client side of zmq logging would be relatively trivial, whether it used that or just overrode the emit() method of a logging handler (which is what I planned to do). The trickiness would be things like ensuring the server is running (server needs REQ/REP for this pinging to check, not just pull or sub), silly things like PUB SUB subscriptions not being processed synchronously leading to dropped initial messages, getting the logging server to do the file rollover (probably just by using the doRollover() method of maybe a subclass of RotatingFileHandler), communicating from the clients what filepath the log should be written to, some kind of timeout so that a log file will be closed when nobody is writing to it (otherwise it can't be deleted on Windows)...there was going to be complexity from these sorts of things. I had a design coming together that would do all that, but I'm glad to not have to think about it if this 3rd party module works well!", "markup": "markdown", "html": "<p>The client side of zmq logging would be relatively trivial, whether it used that or just overrode the emit() method of a logging handler (which is what I planned to do). The trickiness would be things like ensuring the server is running (server needs REQ/REP for this pinging to check, not just pull or sub), silly things like PUB SUB subscriptions not being processed synchronously leading to dropped initial messages, getting the logging server to do the file rollover (probably just by using the doRollover() method of maybe a subclass of RotatingFileHandler), communicating from the clients what filepath the log should be written to, some kind of timeout so that a log file will be closed when nobody is writing to it (otherwise it can't be deleted on Windows)...there was going to be complexity from these sorts of things. I had a design coming together that would do all that, but I'm glad to not have to think about it if this 3rd party module works well!</p>", "type": "rendered"}, "created_on": "2018-08-18T17:04:19.792813+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-08-18T17:04:19.799540+00:00", "type": "pullrequest_comment", "id": 73346830}], "page": 1, "size": 4}