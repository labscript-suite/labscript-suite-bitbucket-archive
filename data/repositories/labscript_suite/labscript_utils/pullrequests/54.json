{"rendered": {"description": {"raw": "Make use of zlock's new readers-writer locks, if both client and server code\r\nis new enough to support them.\r\nThis allows multiple clients to acquire a lock on a file simultaneously, so long\r\nas they have it open in read-only mode.\r\n\r\nreaders-writer locks are new in zprocess 2.7.0, but I have not made h5_lock depend on this version of zprocess. It just uses the functionality if present, and doesn't if not. The way that the changes are implemented in zprocess, a client that does not know about these changes gets a read-write lock (i.e. exclusive access), so it is safe for clients running different versions of zprocess to communicate with the same server.", "markup": "markdown", "html": "<p>Make use of zlock's new readers-writer locks, if both client and server code\nis new enough to support them.\nThis allows multiple clients to acquire a lock on a file simultaneously, so long\nas they have it open in read-only mode.</p>\n<p>readers-writer locks are new in zprocess 2.7.0, but I have not made h5_lock depend on this version of zprocess. It just uses the functionality if present, and doesn't if not. The way that the changes are implemented in zprocess, a client that does not know about these changes gets a read-write lock (i.e. exclusive access), so it is safe for clients running different versions of zprocess to communicate with the same server.</p>", "type": "rendered"}, "title": {"raw": "support read-only locks in h5_lock", "markup": "markdown", "html": "<p>support read-only locks in h5_lock</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Make use of zlock's new readers-writer locks, if both client and server code\r\nis new enough to support them.\r\nThis allows multiple clients to acquire a lock on a file simultaneously, so long\r\nas they have it open in read-only mode.\r\n\r\nreaders-writer locks are new in zprocess 2.7.0, but I have not made h5_lock depend on this version of zprocess. It just uses the functionality if present, and doesn't if not. The way that the changes are implemented in zprocess, a client that does not know about these changes gets a read-write lock (i.e. exclusive access), so it is safe for clients running different versions of zprocess to communicate with the same server.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/54/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/diffstat/labscript_suite/labscript_utils:7075805627aa%0D736203440afa?from_pullrequest_id=54"}, "commits": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/54/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/54.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/54/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/54/merge"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/54"}, "activity": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/54/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/diff/labscript_suite/labscript_utils:7075805627aa%0D736203440afa?from_pullrequest_id=54"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/54/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/54/statuses_page=1.json"}}, "title": "support read-only locks in h5_lock", "close_source_branch": true, "reviewers": [{"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}], "id": 54, "destination": {"commit": {"hash": "736203440afa", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/736203440afa.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/736203440afa"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "created_on": "2018-09-11T20:29:56.881730+00:00", "summary": {"raw": "Make use of zlock's new readers-writer locks, if both client and server code\r\nis new enough to support them.\r\nThis allows multiple clients to acquire a lock on a file simultaneously, so long\r\nas they have it open in read-only mode.\r\n\r\nreaders-writer locks are new in zprocess 2.7.0, but I have not made h5_lock depend on this version of zprocess. It just uses the functionality if present, and doesn't if not. The way that the changes are implemented in zprocess, a client that does not know about these changes gets a read-write lock (i.e. exclusive access), so it is safe for clients running different versions of zprocess to communicate with the same server.", "markup": "markdown", "html": "<p>Make use of zlock's new readers-writer locks, if both client and server code\nis new enough to support them.\nThis allows multiple clients to acquire a lock on a file simultaneously, so long\nas they have it open in read-only mode.</p>\n<p>readers-writer locks are new in zprocess 2.7.0, but I have not made h5_lock depend on this version of zprocess. It just uses the functionality if present, and doesn't if not. The way that the changes are implemented in zprocess, a client that does not know about these changes gets a read-write lock (i.e. exclusive access), so it is safe for clients running different versions of zprocess to communicate with the same server.</p>", "type": "rendered"}, "source": {"commit": {"hash": "a6d855159a3b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/a6d855159a3b"}, "html": {"href": "#!/cbillington/labscript_utils/commits/a6d855159a3b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "zlock_readwrite"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, {"role": "PARTICIPANT", "participated_on": "2018-09-25T19:52:53.469797+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}], "reason": "", "updated_on": "2018-10-01T18:57:59.941380+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "7075805627aa", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/7075805627aa.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/7075805627aa"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}