{"pagelen": 50, "values": [{"update": {"description": "Solve issue #21 by using zlog for file logging.\r\n\r\n`zprocess` has gained a logging server in v2.8.1, called zlog.\r\n\r\n`labscript_utils.setup_logging` now checks for a running zlog server, and starts one if it doesn't exist. It then uses a logging handler that passes log messages to the server instead of writing them to disk. The server uses Python standard library logging handlers to do file rotation, and as it alone is the process interacting with the files, there is no conflict over the files, and no performance penalties of having to coordinate file opening and closing between processes.\r\n\r\nAt instantiation of a `zprocess.zlog.ZMQLoggingHandler`, the zlog client contacts the server to confirm it can write to the log file, and the client raises the error if the server says it can't.\r\n\r\nThen, while the application is running and logging is being done, communication to the server is one-way, with the client sending data to the server only. There is no way for the client to know that the file is still being written to, though if the server goes down and the outgoing zmq queue reaches the high water mark, a warning will be printed.\r\n\r\nAt interpreter shutdown the clients send a 'done' message to the server, and it closes the file once all clients are done.  It also closes the file after 5 seconds if no clients send any log messages (but then just opens it again if log messages subsequently arrive). This is to ensure that the file is still closed if programs do not close cleanly. For example I notice that the logger in BLACS' analysis submission thread doesn't seem to send a 'done ' message. I think this is because it is a daemon thread and is not `join()`ed cleanly when BLACS closes. This should be fixed at some point, but it does not cause problems with logging other than delaying the file being closed by the server for up to 5 seconds.\r\n\r\n\r\nA full description of the zlog protocol can be found [here](https://bitbucket.org/cbillington/zprocess/src/default/zprocess/zlog/__main__.py?at=default&fileviewer=file-view-default#__main__.py-31)\r\n\r\nAt present zlog is configured to only listen on localhost, and this change to labscript_utils assumes one is running on localhost. In the future this can be modified so that remote devices etc can send their logs back to a zlog server on the computer running BLACS so that even a muli-computer instance of BLACS will still have a single log file.", "title": "Use zlog for logging", "destination": {"commit": {"hash": "547696e50559", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/547696e50559.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/547696e50559"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "bbf10d6e8024", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/bbf10d6e8024"}, "html": {"href": "#!/cbillington/labscript_utils/commits/bbf10d6e8024"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "use_zlog"}}, "state": "MERGED", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-10-01T18:57:35.271060+00:00"}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/56.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/56"}}, "title": "Use zlog for logging"}}, {"update": {"description": "Solve issue #21 by using zlog for file logging.\r\n\r\n`zprocess` has gained a logging server in v2.8.1, called zlog.\r\n\r\n`labscript_utils.setup_logging` now checks for a running zlog server, and starts one if it doesn't exist. It then uses a logging handler that passes log messages to the server instead of writing them to disk. The server uses Python standard library logging handlers to do file rotation, and as it alone is the process interacting with the files, there is no conflict over the files, and no performance penalties of having to coordinate file opening and closing between processes.\r\n\r\nAt instantiation of a `zprocess.zlog.ZMQLoggingHandler`, the zlog client contacts the server to confirm it can write to the log file, and the client raises the error if the server says it can't.\r\n\r\nThen, while the application is running and logging is being done, communication to the server is one-way, with the client sending data to the server only. There is no way for the client to know that the file is still being written to, though if the server goes down and the outgoing zmq queue reaches the high water mark, a warning will be printed.\r\n\r\nAt interpreter shutdown the clients send a 'done' message to the server, and it closes the file once all clients are done.  It also closes the file after 5 seconds if no clients send any log messages (but then just opens it again if log messages subsequently arrive). This is to ensure that the file is still closed if programs do not close cleanly. For example I notice that the logger in BLACS' analysis submission thread doesn't seem to send a 'done ' message. I think this is because it is a daemon thread and is not `join()`ed cleanly when BLACS closes. This should be fixed at some point, but it does not cause problems with logging other than delaying the file being closed by the server for up to 5 seconds.\r\n\r\n\r\nA full description of the zlog protocol can be found [here](https://bitbucket.org/cbillington/zprocess/src/default/zprocess/zlog/__main__.py?at=default&fileviewer=file-view-default#__main__.py-31)\r\n\r\nAt present zlog is configured to only listen on localhost, and this change to labscript_utils assumes one is running on localhost. In the future this can be modified so that remote devices etc can send their logs back to a zlog server on the computer running BLACS so that even a muli-computer instance of BLACS will still have a single log file.", "title": "Use zlog for logging", "destination": {"commit": {"hash": "547696e50559", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/547696e50559.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/547696e50559"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "bbf10d6e8024", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/bbf10d6e8024"}, "html": {"href": "#!/cbillington/labscript_utils/commits/bbf10d6e8024"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "use_zlog"}}, "state": "MERGED", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-10-01T18:57:35.066562+00:00"}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/56.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/56"}}, "title": "Use zlog for logging"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/56/comments/77245171.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/56/_/diff#comment-77245171"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/56.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/56"}}, "title": "Use zlog for logging"}, "content": {"raw": "Thanks for testing!\n\nThat file is the server testing ahead of time that it can create files in the directory, so that it can warn the client that log rotation won't work if it can't (this is not foolproof, since permissions may change between then and log rotation, but it will catch most issues).\n\nThere was a bug where the server didn't delete the test file after confirming it could create it. This [should be fixed now in zprocess 2.8.4](https://bitbucket.org/cbillington/zprocess/commits/1fce35d1181b3dfc2b10aa1081b05f06733a2b4b).", "markup": "markdown", "html": "<p>Thanks for testing!</p>\n<p>That file is the server testing ahead of time that it can create files in the directory, so that it can warn the client that log rotation won't work if it can't (this is not foolproof, since permissions may change between then and log rotation, but it will catch most issues).</p>\n<p>There was a bug where the server didn't delete the test file after confirming it could create it. This <a data-is-external-link=\"true\" href=\"https://bitbucket.org/cbillington/zprocess/commits/1fce35d1181b3dfc2b10aa1081b05f06733a2b4b\" rel=\"nofollow\">should be fixed now in zprocess 2.8.4</a>.</p>", "type": "rendered"}, "created_on": "2018-09-26T18:45:11.238702+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-09-26T18:46:08.859109+00:00", "type": "pullrequest_comment", "id": 77245171}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/56.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/56"}}, "title": "Use zlog for logging"}}, {"update": {"description": "Solve issue #21 by using zlog for file logging.\r\n\r\n`zprocess` has gained a logging server in v2.8.1, called zlog.\r\n\r\n`labscript_utils.setup_logging` now checks for a running zlog server, and starts one if it doesn't exist. It then uses a logging handler that passes log messages to the server instead of writing them to disk. The server uses Python standard library logging handlers to do file rotation, and as it alone is the process interacting with the files, there is no conflict over the files, and no performance penalties of having to coordinate file opening and closing between processes.\r\n\r\nAt instantiation of a `zprocess.zlog.ZMQLoggingHandler`, the zlog client contacts the server to confirm it can write to the log file, and the client raises the error if the server says it can't.\r\n\r\nThen, while the application is running and logging is being done, communication to the server is one-way, with the client sending data to the server only. There is no way for the client to know that the file is still being written to, though if the server goes down and the outgoing zmq queue reaches the high water mark, a warning will be printed.\r\n\r\nAt interpreter shutdown the clients send a 'done' message to the server, and it closes the file once all clients are done.  It also closes the file after 5 seconds if no clients send any log messages (but then just opens it again if log messages subsequently arrive). This is to ensure that the file is still closed if programs do not close cleanly. For example I notice that the logger in BLACS' analysis submission thread doesn't seem to send a 'done ' message. I think this is because it is a daemon thread and is not `join()`ed cleanly when BLACS closes. This should be fixed at some point, but it does not cause problems with logging other than delaying the file being closed by the server for up to 5 seconds.\r\n\r\n\r\nA full description of the zlog protocol can be found [here](https://bitbucket.org/cbillington/zprocess/src/default/zprocess/zlog/__main__.py?at=default&fileviewer=file-view-default#__main__.py-31)\r\n\r\nAt present zlog is configured to only listen on localhost, and this change to labscript_utils assumes one is running on localhost. In the future this can be modified so that remote devices etc can send their logs back to a zlog server on the computer running BLACS so that even a muli-computer instance of BLACS will still have a single log file.", "title": "Use zlog for logging", "destination": {"commit": {"hash": "547696e50559", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/547696e50559.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/547696e50559"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "bbf10d6e8024", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/bbf10d6e8024"}, "html": {"href": "#!/cbillington/labscript_utils/commits/bbf10d6e8024"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "use_zlog"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-09-26T18:41:35.829173+00:00"}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/56.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/56"}}, "title": "Use zlog for logging"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/56/comments/77243700.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/56/_/diff#comment-77243700"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/56.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/56"}}, "title": "Use zlog for logging"}, "content": {"raw": "I tested the logging server with our system and it seems to work fine except for one thing I am wondering about:\n\nWhen opening for example blacs or labscript, one \\(for runmanager\\) or several \\(for blacs\\) files are created named \u201ctest\\_can\\_create\\_file-xyz\u201c where xyz is a long list of numbers and letters looking like some tag. Which part does create this file? It also seems to have no content.", "markup": "markdown", "html": "<p>I tested the logging server with our system and it seems to work fine except for one thing I am wondering about:</p>\n<p>When opening for example blacs or labscript, one (for runmanager) or several (for blacs) files are created named \u201ctest_can_create_file-xyz\u201c where xyz is a long list of numbers and letters looking like some tag. Which part does create this file? It also seems to have no content.</p>", "type": "rendered"}, "created_on": "2018-09-26T18:30:17.808771+00:00", "user": {"display_name": "Lars Kohfahl", "uuid": "{14b59397-cbc0-4d8c-8a4a-fe99fb4d2d4a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B14b59397-cbc0-4d8c-8a4a-fe99fb4d2d4a%7D"}, "html": {"href": "https://bitbucket.org/%7B14b59397-cbc0-4d8c-8a4a-fe99fb4d2d4a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/630642264cd55e22515678a3a0489ac7d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLK-2.png"}}, "nickname": "lkohfahl", "type": "user", "account_id": "5aafc5d11396802a57aa7f3b"}, "updated_on": "2018-09-26T18:30:17.875578+00:00", "type": "pullrequest_comment", "id": 77243700}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/56.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/56"}}, "title": "Use zlog for logging"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/56/comments/77103613.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/56/_/diff#comment-77103613"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/56.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/56"}}, "title": "Use zlog for logging"}, "content": {"raw": "The logging server is well tested (with a test suite), and while the client code doesn't have a test suite, I've run some labscript programs with it and things seem to work fine.\n\nI'll merge next Monday if there are no objections.", "markup": "markdown", "html": "<p>The logging server is well tested (with a test suite), and while the client code doesn't have a test suite, I've run some labscript programs with it and things seem to work fine.</p>\n<p>I'll merge next Monday if there are no objections.</p>", "type": "rendered"}, "created_on": "2018-09-25T19:51:07.077782+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-09-25T19:51:07.089858+00:00", "type": "pullrequest_comment", "id": 77103613}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/56.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/56"}}, "title": "Use zlog for logging"}}, {"update": {"description": "Solve issue #21 by using zlog for file logging.\r\n\r\n`zprocess` has gained a logging server in v2.8.1, called zlog.\r\n\r\n`labscript_utils.setup_logging` now checks for a running zlog server, and starts one if it doesn't exist. It then uses a logging handler that passes log messages to the server instead of writing them to disk. The server uses Python standard library logging handlers to do file rotation, and as it alone is the process interacting with the files, there is no conflict over the files, and no performance penalties of having to coordinate file opening and closing between processes.\r\n\r\nAt instantiation of a `zprocess.zlog.ZMQLoggingHandler`, the zlog client contacts the server to confirm it can write to the log file, and the client raises the error if the server says it can't.\r\n\r\nThen, while the application is running and logging is being done, communication to the server is one-way, with the client sending data to the server only. There is no way for the client to know that the file is still being written to, though if the server goes down and the outgoing zmq queue reaches the high water mark, a warning will be printed.\r\n\r\nAt interpreter shutdown the clients send a 'done' message to the server, and it closes the file once all clients are done.  It also closes the file after 5 seconds if no clients send any log messages (but then just opens it again if log messages subsequently arrive). This is to ensure that the file is still closed if programs do not close cleanly. For example I notice that the logger in BLACS' analysis submission thread doesn't seem to send a 'done ' message. I think this is because it is a daemon thread and is not `join()`ed cleanly when BLACS closes. This should be fixed at some point, but it does not cause problems with logging other than delaying the file being closed by the server for up to 5 seconds.\r\n\r\n\r\nA full description of the zlog protocol can be found [here](https://bitbucket.org/cbillington/zprocess/src/default/zprocess/zlog/__main__.py?at=default&fileviewer=file-view-default#__main__.py-31)\r\n\r\nAt present zlog is configured to only listen on localhost, and this change to labscript_utils assumes one is running on localhost. In the future this can be modified so that remote devices etc can send their logs back to a zlog server on the computer running BLACS so that even a muli-computer instance of BLACS will still have a single log file.", "title": "Use zlog for logging", "destination": {"commit": {"hash": "547696e50559", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/547696e50559.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/547696e50559"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ed587a29ddb8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/ed587a29ddb8"}, "html": {"href": "#!/cbillington/labscript_utils/commits/ed587a29ddb8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "use_zlog"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-09-25T19:45:12.216831+00:00"}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/56.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/56"}}, "title": "Use zlog for logging"}}, {"update": {"description": "Solve issue #21 by using zlog for file logging.\r\n\r\n`zprocess` has gained a logging server in v2.8.1, called zlog.\r\n\r\n`labscript_utils.setup_logging` now checks for a running zlog server, and starts one if it doesn't exist. It then uses a logging handler that passes log messages to the server instead of writing them to disk. The server uses Python standard library logging handlers to do file rotation, and as it alone is the process interacting with the files, there is no conflict over the files, and no performance penalties of having to coordinate file opening and closing between processes.\r\n\r\nAt instantiation of a `zprocess.zlog.ZMQLoggingHandler`, the zlog client contacts the server to confirm it can write to the log file, and the client raises the error if the server says it can't.\r\n\r\nThen, while the application is running and logging is being done, communication to the server is one-way, with the client sending data to the server only. There is no way for the client to know that the file is still being written to, though if the server goes down and the outgoing zmq queue reaches the high water mark, a warning will be printed.\r\n\r\nAt interpreter shutdown the clients send a 'done' message to the server, and it closes the file once all clients are done.  It also closes the file after 5 seconds if no clients send any log messages (but then just opens it again if log messages subsequently arrive). This is to ensure that the file is still closed if programs do not close cleanly. For example I notice that the logger in BLACS' analysis submission thread doesn't seem to send a 'done ' message. I think this is because it is a daemon thread and is not `join()`ed cleanly when BLACS closes. This should be fixed at some point, but it does not cause problems with logging other than delaying the file being closed by the server for up to 5 seconds.\r\n\r\n\r\nA full description of the zlog protocol can be found [here](https://bitbucket.org/cbillington/zprocess/src/default/zprocess/zlog/__main__.py?at=default&fileviewer=file-view-default#__main__.py-31)\r\n\r\nAt present zlog is configured to only listen on localhost, and this change to labscript_utils assumes one is running on localhost. In the future this can be modified so that remote devices etc can send their logs back to a zlog server on the computer running BLACS so that even a muli-computer instance of BLACS will still have a single log file.", "title": "Use zlog for logging", "destination": {"commit": {"hash": "547696e50559", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/547696e50559.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/547696e50559"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "63bfc6da2cbc", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/63bfc6da2cbc"}, "html": {"href": "#!/cbillington/labscript_utils/commits/63bfc6da2cbc"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "use_zlog"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-09-21T21:34:26.138700+00:00"}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/56.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/56"}}, "title": "Use zlog for logging"}}, {"update": {"description": "Solve issue #21 by using zlog for file logging.\r\n\r\n`zprocess` has gained a logging server in v2.8.1, called zlog.\r\n\r\n`labscript_utils.setup_logging` now checks for a running zlog server, and starts one if it doesn't exist. It then uses a logging handler that passes log messages to the server instead of writing them to disk. The server uses Python standard library logging handlers to do file rotation, and as it alone is the process interacting with the files, there is no conflict over the files, and no performance penalties of having to coordinate file opening and closing between processes.\r\n\r\nAt instantiation of a `zprocess.zlog.ZMQLoggingHandler`, the zlog client contacts the server to confirm it can write to the log file, and the client raises the error if the server says it can't.\r\n\r\nThen, while the application is running and logging is being done, communication to the server is one-way, with the client sending data to the server only. There is no way for the client to know that the file is still being written to, though if the server goes down and the outgoing zmq queue reaches the high water mark, a warning will be printed.\r\n\r\nAt interpreter shutdown the clients send a 'done' message to the server, and it closes the file once all clients are done.  It also closes the file after 5 seconds if no clients send any log messages (but then just opens it again if log messages subsequently arrive). This is to ensure that the file is still closed if programs do not close cleanly. For example I notice that the logger in BLACS' analysis submission thread doesn't seem to send a 'done ' message. I think this is because it is a daemon thread and is not `join()`ed cleanly when BLACS closes. This should be fixed at some point, but it does not cause problems with logging other than delaying the file being closed by the server for up to 5 seconds.\r\n\r\n\r\nA full description of the zlog protocol can be found [here](https://bitbucket.org/cbillington/zprocess/src/default/zprocess/zlog/__main__.py?at=default&fileviewer=file-view-default#__main__.py-31)\r\n\r\nAt present zlog is configured to only listen on localhost, and this change to labscript_utils assumes one is running on localhost. In the future this can be modified so that remote devices etc can send their logs back to a zlog server on the computer running BLACS so that even a muli-computer instance of BLACS will still have a single log file.", "title": "Use zlog for logging", "destination": {"commit": {"hash": "547696e50559", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/547696e50559.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/547696e50559"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4852b08dc2f8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/4852b08dc2f8"}, "html": {"href": "#!/cbillington/labscript_utils/commits/4852b08dc2f8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "use_zlog"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-09-21T21:28:37.144831+00:00"}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/56.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/56"}}, "title": "Use zlog for logging"}}, {"update": {"description": "Solve issue #21 by using zlog for file logging.\r\n\r\n`zprocess` has gained a logging server in v2.8.1, called zlog.\r\n\r\n`labscript_utils.setup_logging` now checks for a running zlog server, and starts one if it doesn't exist. It then uses a logging handler that passes log messages to the server instead of writing them to disk. The server uses Python standard library logging handlers to do file rotation, and as it alone is the process interacting with the files, there is no conflict over the files, and no performance penalties of having to coordinate file opening and closing between processes.\r\n\r\nAt instantiation of a `zprocess.zlog.ZMQLoggingHandler`, the zlog client contacts the server to confirm it can write to the log file, and the client raises the error if the server says it can't.\r\n\r\nThen, while the application is running and logging is being done, communication to the server is one-way, with the client sending data to the server only. There is no way for the client to know that the file is still being written to, though if the server goes down and the outgoing zmq queue reaches the high water mark, a warning will be printed.\r\n\r\nAt interpreter shutdown the clients send a 'done' message to the server, and it closes the file once all clients are done.  It also closes the file after 5 seconds if no clients send any log messages (but then just opens it again if log messages subsequently arrive). This is to ensure that the file is still closed if programs do not close cleanly. For example I notice that the logger in BLACS' analysis submission thread doesn't seem to send a 'done ' message. I think this is because it is a daemon thread and is not `join()`ed cleanly when BLACS closes. This should be fixed at some point, but it does not cause problems with logging other than delaying the file being closed by the server for up to 5 seconds.\r\n\r\n\r\nA full description of the zlog protocol can be found [here](https://bitbucket.org/cbillington/zprocess/src/default/zprocess/zlog/__main__.py?at=default&fileviewer=file-view-default#__main__.py-31)\r\n\r\nAt present zlog is configured to only listen on localhost, and this change to labscript_utils assumes one is running on localhost. In the future this can be modified so that remote devices etc can send their logs back to a zlog server on the computer running BLACS so that even a muli-computer instance of BLACS will still have a single log file.", "title": "Use zlog for logging", "destination": {"commit": {"hash": "547696e50559", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/547696e50559.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/547696e50559"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4852b08dc2f8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/4852b08dc2f8"}, "html": {"href": "#!/cbillington/labscript_utils/commits/4852b08dc2f8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "use_zlog"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2018-09-21T21:28:37.084076+00:00"}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/56.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/56"}}, "title": "Use zlog for logging"}}]}