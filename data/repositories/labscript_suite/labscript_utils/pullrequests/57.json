{"rendered": {"description": {"raw": "Add dedent() function, which dedents and removes newlines from strings so\r\nthat you can more easily write multiline error message etc, such as:\r\n```python\r\ndef foo()\r\n    msg = \"\"\"There was an error, which we have written in code\r\n        over multiple lines, but with indentation. This indentation\r\n        and these line breaks should be ignored.\r\n\r\n            1. But this extra indentation\r\n            2. and line endings\r\n            3. should be included verbatim\r\n\r\n        and then this text at the original indentation level should be\r\n        unwrapped again.\"\"\"\r\n    raise ValueError(dedent(msg))\r\n```\r\n\r\nThis function is not quite the same as Python's textwrap.dedent, as this one\r\nexcludes the first line from the indentation calculation, removes newlines,\r\nand includes lines with additional indentation, or blank lines, verbatim. I've been using it to\r\nmake long error messages without having to manually join strings with '+' for\r\neach line, which plays well with auto-wrapping text in text editors, e.g.\r\nalt-Q in sublime text.", "markup": "markdown", "html": "<p>Add dedent() function, which dedents and removes newlines from strings so\nthat you can more easily write multiline error message etc, such as:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">()</span>\n    <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;&quot;There was an error, which we have written in code</span>\n<span class=\"s2\">        over multiple lines, but with indentation. This indentation</span>\n<span class=\"s2\">        and these line breaks should be ignored.</span>\n\n<span class=\"s2\">            1. But this extra indentation</span>\n<span class=\"s2\">            2. and line endings</span>\n<span class=\"s2\">            3. should be included verbatim</span>\n\n<span class=\"s2\">        and then this text at the original indentation level should be</span>\n<span class=\"s2\">        unwrapped again.&quot;&quot;&quot;</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"n\">dedent</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>This function is not quite the same as Python's textwrap.dedent, as this one\nexcludes the first line from the indentation calculation, removes newlines,\nand includes lines with additional indentation, or blank lines, verbatim. I've been using it to\nmake long error messages without having to manually join strings with '+' for\neach line, which plays well with auto-wrapping text in text editors, e.g.\nalt-Q in sublime text.</p>", "type": "rendered"}, "title": {"raw": "text dedent utility function", "markup": "markdown", "html": "<p>text dedent utility function</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Add dedent() function, which dedents and removes newlines from strings so\r\nthat you can more easily write multiline error message etc, such as:\r\n```python\r\ndef foo()\r\n    msg = \"\"\"There was an error, which we have written in code\r\n        over multiple lines, but with indentation. This indentation\r\n        and these line breaks should be ignored.\r\n\r\n            1. But this extra indentation\r\n            2. and line endings\r\n            3. should be included verbatim\r\n\r\n        and then this text at the original indentation level should be\r\n        unwrapped again.\"\"\"\r\n    raise ValueError(dedent(msg))\r\n```\r\n\r\nThis function is not quite the same as Python's textwrap.dedent, as this one\r\nexcludes the first line from the indentation calculation, removes newlines,\r\nand includes lines with additional indentation, or blank lines, verbatim. I've been using it to\r\nmake long error messages without having to manually join strings with '+' for\r\neach line, which plays well with auto-wrapping text in text editors, e.g.\r\nalt-Q in sublime text.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/57/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/diffstat/labscript_suite/labscript_utils:6eaaf4e51f5c%0D6f10cc76b2de?from_pullrequest_id=57"}, "commits": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/57/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/57.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/57/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/57/merge"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/57"}, "activity": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/57/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/diff/labscript_suite/labscript_utils:6eaaf4e51f5c%0D6f10cc76b2de?from_pullrequest_id=57"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/57/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/57/statuses_page=1.json"}}, "title": "text dedent utility function", "close_source_branch": true, "reviewers": [{"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}], "id": 57, "destination": {"commit": {"hash": "6f10cc76b2de", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/6f10cc76b2de.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/6f10cc76b2de"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "created_on": "2018-09-28T19:18:42.901472+00:00", "summary": {"raw": "Add dedent() function, which dedents and removes newlines from strings so\r\nthat you can more easily write multiline error message etc, such as:\r\n```python\r\ndef foo()\r\n    msg = \"\"\"There was an error, which we have written in code\r\n        over multiple lines, but with indentation. This indentation\r\n        and these line breaks should be ignored.\r\n\r\n            1. But this extra indentation\r\n            2. and line endings\r\n            3. should be included verbatim\r\n\r\n        and then this text at the original indentation level should be\r\n        unwrapped again.\"\"\"\r\n    raise ValueError(dedent(msg))\r\n```\r\n\r\nThis function is not quite the same as Python's textwrap.dedent, as this one\r\nexcludes the first line from the indentation calculation, removes newlines,\r\nand includes lines with additional indentation, or blank lines, verbatim. I've been using it to\r\nmake long error messages without having to manually join strings with '+' for\r\neach line, which plays well with auto-wrapping text in text editors, e.g.\r\nalt-Q in sublime text.", "markup": "markdown", "html": "<p>Add dedent() function, which dedents and removes newlines from strings so\nthat you can more easily write multiline error message etc, such as:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">()</span>\n    <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;&quot;There was an error, which we have written in code</span>\n<span class=\"s2\">        over multiple lines, but with indentation. This indentation</span>\n<span class=\"s2\">        and these line breaks should be ignored.</span>\n\n<span class=\"s2\">            1. But this extra indentation</span>\n<span class=\"s2\">            2. and line endings</span>\n<span class=\"s2\">            3. should be included verbatim</span>\n\n<span class=\"s2\">        and then this text at the original indentation level should be</span>\n<span class=\"s2\">        unwrapped again.&quot;&quot;&quot;</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"n\">dedent</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>This function is not quite the same as Python's textwrap.dedent, as this one\nexcludes the first line from the indentation calculation, removes newlines,\nand includes lines with additional indentation, or blank lines, verbatim. I've been using it to\nmake long error messages without having to manually join strings with '+' for\neach line, which plays well with auto-wrapping text in text editors, e.g.\nalt-Q in sublime text.</p>", "type": "rendered"}, "source": {"commit": {"hash": "2e1582443159", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/2e1582443159"}, "html": {"href": "#!/cbillington/labscript_utils/commits/2e1582443159"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "text_dedent"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2018-09-28T19:19:07.195867+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}], "reason": "", "updated_on": "2018-10-01T19:03:40.049979+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "6eaaf4e51f5c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/6eaaf4e51f5c.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/6eaaf4e51f5c"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}