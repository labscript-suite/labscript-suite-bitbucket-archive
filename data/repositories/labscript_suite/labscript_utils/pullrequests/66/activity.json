{"pagelen": 50, "values": [{"update": {"description": "This PR adds wrappers around zprocess functionality configuring it according to labconfig. Use of these wrappers will enable applications to use zprocess with its encryption functionality, without having to configure everything within each application. We should get the encryption stuff working before enabling remote devices in BLACS.\r\n\r\n* Added ls_zprocess, which wraps zprocess classes with singletons and\r\n  subclasses configured to use labconfig encryption settings, as well\r\n  as zlock host and port settings, and zprocess.remote  port setting.\r\n\r\n* Added zlock.py, zlog.py and remote.py, which can be used to start zlock,\r\n  zlog and zprocess.remote servers according to labconfig settings. zlog should\r\n  not normally be run manually.\r\n\r\n* Modified setup_logging.py and h5_lock.py to make use of the wrapped classes.\r\n  Note that once h5_lock is imported by an application, or once a logging handler\r\n  is configured, the ProcessTree object created is set as the zprocess default\r\n  process tree. This is backward compatibility for applications not using the\r\n  wrapped classes. This does not mean encryption can be turned on and work\r\n  everywhere, that will still be a backward incompatible jump. But it does mean\r\n  that the settings are inherited by subprocesses using\r\n  Process() classes without specifying ProcessTree (which is dprecated). So it provides backward\r\n  compatibility for labscript suite programs in their current form.\r\n\r\n* Bump version so applications may make use of these classes and we can\r\n  begin to move them to a state where encryption can be turned on.\r\n  This should be in place before remote devices are implemented in BLACS.\r\n\r\nThese changes are intended to be backward compatible so far, but encryption\r\ncannot be used until applications have their use of zprocess ported to use\r\nthese wrappers.\r\n\r\nI would want to test these changes for regressions before merging them, preferably on a real setup! It should work talking with existing zlock servers without them needing to be restarted or anything.", "title": "Beginning the great zprocess migration for remote device support", "destination": {"commit": {"hash": "922b19ea1447", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/922b19ea1447.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/922b19ea1447"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "23495fab0c54", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/23495fab0c54"}, "html": {"href": "#!/cbillington/labscript_utils/commits/23495fab0c54"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "zprocess_changes"}}, "state": "MERGED", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-02-11T17:19:28.769282+00:00"}, "pull_request": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}}, {"update": {"description": "This PR adds wrappers around zprocess functionality configuring it according to labconfig. Use of these wrappers will enable applications to use zprocess with its encryption functionality, without having to configure everything within each application. We should get the encryption stuff working before enabling remote devices in BLACS.\r\n\r\n* Added ls_zprocess, which wraps zprocess classes with singletons and\r\n  subclasses configured to use labconfig encryption settings, as well\r\n  as zlock host and port settings, and zprocess.remote  port setting.\r\n\r\n* Added zlock.py, zlog.py and remote.py, which can be used to start zlock,\r\n  zlog and zprocess.remote servers according to labconfig settings. zlog should\r\n  not normally be run manually.\r\n\r\n* Modified setup_logging.py and h5_lock.py to make use of the wrapped classes.\r\n  Note that once h5_lock is imported by an application, or once a logging handler\r\n  is configured, the ProcessTree object created is set as the zprocess default\r\n  process tree. This is backward compatibility for applications not using the\r\n  wrapped classes. This does not mean encryption can be turned on and work\r\n  everywhere, that will still be a backward incompatible jump. But it does mean\r\n  that the settings are inherited by subprocesses using\r\n  Process() classes without specifying ProcessTree (which is dprecated). So it provides backward\r\n  compatibility for labscript suite programs in their current form.\r\n\r\n* Bump version so applications may make use of these classes and we can\r\n  begin to move them to a state where encryption can be turned on.\r\n  This should be in place before remote devices are implemented in BLACS.\r\n\r\nThese changes are intended to be backward compatible so far, but encryption\r\ncannot be used until applications have their use of zprocess ported to use\r\nthese wrappers.\r\n\r\nI would want to test these changes for regressions before merging them, preferably on a real setup! It should work talking with existing zlock servers without them needing to be restarted or anything.", "title": "Beginning the great zprocess migration for remote device support", "destination": {"commit": {"hash": "922b19ea1447", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/922b19ea1447.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/922b19ea1447"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "23495fab0c54", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/23495fab0c54"}, "html": {"href": "#!/cbillington/labscript_utils/commits/23495fab0c54"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "zprocess_changes"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-02-11T17:19:27.656633+00:00"}, "pull_request": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66/comments/91162367.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66/_/diff#comment-91162367"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}, "content": {"raw": "This PR no longer depends on any changes in qtutils, and I am satisfied that the backward compatibility is comprehensive so long as code is importing h5\\_lock, which sets the default zprocess ProcessTree and zlock client objects. Merging.", "markup": "markdown", "html": "<p>This PR no longer depends on any changes in qtutils, and I am satisfied that the backward compatibility is comprehensive so long as code is importing h5_lock, which sets the default zprocess ProcessTree and zlock client objects. Merging.</p>", "type": "rendered"}, "created_on": "2019-02-11T17:19:21.954312+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-02-11T17:19:21.967868+00:00", "type": "pullrequest_comment", "id": 91162367}, "pull_request": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}}, {"update": {"description": "This PR adds wrappers around zprocess functionality configuring it according to labconfig. Use of these wrappers will enable applications to use zprocess with its encryption functionality, without having to configure everything within each application. We should get the encryption stuff working before enabling remote devices in BLACS.\r\n\r\n* Added ls_zprocess, which wraps zprocess classes with singletons and\r\n  subclasses configured to use labconfig encryption settings, as well\r\n  as zlock host and port settings, and zprocess.remote  port setting.\r\n\r\n* Added zlock.py, zlog.py and remote.py, which can be used to start zlock,\r\n  zlog and zprocess.remote servers according to labconfig settings. zlog should\r\n  not normally be run manually.\r\n\r\n* Modified setup_logging.py and h5_lock.py to make use of the wrapped classes.\r\n  Note that once h5_lock is imported by an application, or once a logging handler\r\n  is configured, the ProcessTree object created is set as the zprocess default\r\n  process tree. This is backward compatibility for applications not using the\r\n  wrapped classes. This does not mean encryption can be turned on and work\r\n  everywhere, that will still be a backward incompatible jump. But it does mean\r\n  that the settings are inherited by subprocesses using\r\n  Process() classes without specifying ProcessTree (which is dprecated). So it provides backward\r\n  compatibility for labscript suite programs in their current form.\r\n\r\n* Bump version so applications may make use of these classes and we can\r\n  begin to move them to a state where encryption can be turned on.\r\n  This should be in place before remote devices are implemented in BLACS.\r\n\r\nThese changes are intended to be backward compatible so far, but encryption\r\ncannot be used until applications have their use of zprocess ported to use\r\nthese wrappers.\r\n\r\nI would want to test these changes for regressions before merging them, preferably on a real setup! It should work talking with existing zlock servers without them needing to be restarted or anything.", "title": "Beginning the great zprocess migration for remote device support", "destination": {"commit": {"hash": "922b19ea1447", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/922b19ea1447.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/922b19ea1447"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "23495fab0c54", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/23495fab0c54"}, "html": {"href": "#!/cbillington/labscript_utils/commits/23495fab0c54"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "zprocess_changes"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-02-11T17:04:22.083936+00:00"}, "pull_request": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}}, {"update": {"description": "This PR adds wrappers around zprocess functionality configuring it according to labconfig. Use of these wrappers will enable applications to use zprocess with its encryption functionality, without having to configure everything within each application. We should get the encryption stuff working before enabling remote devices in BLACS.\r\n\r\n* Added ls_zprocess, which wraps zprocess classes with singletons and\r\n  subclasses configured to use labconfig encryption settings, as well\r\n  as zlock host and port settings, and zprocess.remote  port setting.\r\n\r\n* Added zlock.py, zlog.py and remote.py, which can be used to start zlock,\r\n  zlog and zprocess.remote servers according to labconfig settings. zlog should\r\n  not normally be run manually.\r\n\r\n* Modified setup_logging.py and h5_lock.py to make use of the wrapped classes.\r\n  Note that once h5_lock is imported by an application, or once a logging handler\r\n  is configured, the ProcessTree object created is set as the zprocess default\r\n  process tree. This is backward compatibility for applications not using the\r\n  wrapped classes. This does not mean encryption can be turned on and work\r\n  everywhere, that will still be a backward incompatible jump. But it does mean\r\n  that the settings are inherited by subprocesses using\r\n  Process() classes without specifying ProcessTree (which is dprecated). So it provides backward\r\n  compatibility for labscript suite programs in their current form.\r\n\r\n* Bump version so applications may make use of these classes and we can\r\n  begin to move them to a state where encryption can be turned on.\r\n  This should be in place before remote devices are implemented in BLACS.\r\n\r\nThese changes are intended to be backward compatible so far, but encryption\r\ncannot be used until applications have their use of zprocess ported to use\r\nthese wrappers.\r\n\r\nI would want to test these changes for regressions before merging them, preferably on a real setup! It should work talking with existing zlock servers without them needing to be restarted or anything.", "title": "Beginning the great zprocess migration for remote device support", "destination": {"commit": {"hash": "6b2f9766b657", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/6b2f9766b657.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/6b2f9766b657"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "52024b00cd3b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/52024b00cd3b"}, "html": {"href": "#!/cbillington/labscript_utils/commits/52024b00cd3b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "zprocess_changes"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-02-07T23:19:33.089983+00:00"}, "pull_request": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}}, {"update": {"description": "This PR adds wrappers around zprocess functionality configuring it according to labconfig. Use of these wrappers will enable applications to use zprocess with its encryption functionality, without having to configure everything within each application. We should get the encryption stuff working before enabling remote devices in BLACS.\r\n\r\n* Added ls_zprocess, which wraps zprocess classes with singletons and\r\n  subclasses configured to use labconfig encryption settings, as well\r\n  as zlock host and port settings, and zprocess.remote  port setting.\r\n\r\n* Added zlock.py, zlog.py and remote.py, which can be used to start zlock,\r\n  zlog and zprocess.remote servers according to labconfig settings. zlog should\r\n  not normally be run manually.\r\n\r\n* Modified setup_logging.py and h5_lock.py to make use of the wrapped classes.\r\n  Note that once h5_lock is imported by an application, or once a logging handler\r\n  is configured, the ProcessTree object created is set as the zprocess default\r\n  process tree. This is backward compatibility for applications not using the\r\n  wrapped classes. This does not mean encryption can be turned on and work\r\n  everywhere, that will still be a backward incompatible jump. But it does mean\r\n  that the settings are inherited by subprocesses using\r\n  Process() classes without specifying ProcessTree (which is dprecated). So it provides backward\r\n  compatibility for labscript suite programs in their current form.\r\n\r\n* Bump version so applications may make use of these classes and we can\r\n  begin to move them to a state where encryption can be turned on.\r\n  This should be in place before remote devices are implemented in BLACS.\r\n\r\nThese changes are intended to be backward compatible so far, but encryption\r\ncannot be used until applications have their use of zprocess ported to use\r\nthese wrappers.\r\n\r\nI would want to test these changes for regressions before merging them, preferably on a real setup! It should work talking with existing zlock servers without them needing to be restarted or anything.", "title": "Beginning the great zprocess migration for remote device support", "destination": {"commit": {"hash": "6b2f9766b657", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/6b2f9766b657.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/6b2f9766b657"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "6bb77ff2e9ab", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/6bb77ff2e9ab"}, "html": {"href": "#!/cbillington/labscript_utils/commits/6bb77ff2e9ab"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "zprocess_changes"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-02-07T20:30:08.365097+00:00"}, "pull_request": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}}, {"update": {"description": "This PR adds wrappers around zprocess functionality configuring it according to labconfig. Use of these wrappers will enable applications to use zprocess with its encryption functionality, without having to configure everything within each application. We should get the encryption stuff working before enabling remote devices in BLACS.\r\n\r\n* Added ls_zprocess, which wraps zprocess classes with singletons and\r\n  subclasses configured to use labconfig encryption settings, as well\r\n  as zlock host and port settings, and zprocess.remote  port setting.\r\n\r\n* Added zlock.py, zlog.py and remote.py, which can be used to start zlock,\r\n  zlog and zprocess.remote servers according to labconfig settings. zlog should\r\n  not normally be run manually.\r\n\r\n* Modified setup_logging.py and h5_lock.py to make use of the wrapped classes.\r\n  Note that once h5_lock is imported by an application, or once a logging handler\r\n  is configured, the ProcessTree object created is set as the zprocess default\r\n  process tree. This is backward compatibility for applications not using the\r\n  wrapped classes. This does not mean encryption can be turned on and work\r\n  everywhere, that will still be a backward incompatible jump. But it does mean\r\n  that the settings are inherited by subprocesses using\r\n  Process() classes without specifying ProcessTree (which is dprecated). So it provides backward\r\n  compatibility for labscript suite programs in their current form.\r\n\r\n* Bump version so applications may make use of these classes and we can\r\n  begin to move them to a state where encryption can be turned on.\r\n  This should be in place before remote devices are implemented in BLACS.\r\n\r\nThese changes are intended to be backward compatible so far, but encryption\r\ncannot be used until applications have their use of zprocess ported to use\r\nthese wrappers.\r\n\r\nI would want to test these changes for regressions before merging them, preferably on a real setup! It should work talking with existing zlock servers without them needing to be restarted or anything.", "title": "Beginning the great zprocess migration for remote device support", "destination": {"commit": {"hash": "6b2f9766b657", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/6b2f9766b657.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/6b2f9766b657"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "124b316fd115", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/124b316fd115"}, "html": {"href": "#!/cbillington/labscript_utils/commits/124b316fd115"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "zprocess_changes"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-02-07T04:22:07.661444+00:00"}, "pull_request": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}}, {"update": {"description": "This PR adds wrappers around zprocess functionality configuring it according to labconfig. Use of these wrappers will enable applications to use zprocess with its encryption functionality, without having to configure everything within each application. We should get the encryption stuff working before enabling remote devices in BLACS.\r\n\r\n* Added ls_zprocess, which wraps zprocess classes with singletons and\r\n  subclasses configured to use labconfig encryption settings, as well\r\n  as zlock host and port settings, and zprocess.remote  port setting.\r\n\r\n* Added zlock.py, zlog.py and remote.py, which can be used to start zlock,\r\n  zlog and zprocess.remote servers according to labconfig settings. zlog should\r\n  not normally be run manually.\r\n\r\n* Modified setup_logging.py and h5_lock.py to make use of the wrapped classes.\r\n  Note that once h5_lock is imported by an application, or once a logging handler\r\n  is configured, the ProcessTree object created is set as the zprocess default\r\n  process tree. This is backward compatibility for applications not using the\r\n  wrapped classes. This does not mean encryption can be turned on and work\r\n  everywhere, that will still be a backward incompatible jump. But it does mean\r\n  that the settings are inherited by subprocesses using\r\n  Process() classes without specifying ProcessTree (which is dprecated). So it provides backward\r\n  compatibility for labscript suite programs in their current form.\r\n\r\n* Bump version so applications may make use of these classes and we can\r\n  begin to move them to a state where encryption can be turned on.\r\n  This should be in place before remote devices are implemented in BLACS.\r\n\r\nThese changes are intended to be backward compatible so far, but encryption\r\ncannot be used until applications have their use of zprocess ported to use\r\nthese wrappers.\r\n\r\nI would want to test these changes for regressions before merging them, preferably on a real setup! It should work talking with existing zlock servers without them needing to be restarted or anything.", "title": "Beginning the great zprocess migration for remote device support", "destination": {"commit": {"hash": "6b2f9766b657", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/6b2f9766b657.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/6b2f9766b657"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "6881623d52d9", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/6881623d52d9"}, "html": {"href": "#!/cbillington/labscript_utils/commits/6881623d52d9"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "zprocess_changes"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-02-07T04:06:06.274692+00:00"}, "pull_request": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}}, {"update": {"description": "This PR adds wrappers around zprocess functionality configuring it according to labconfig. Use of these wrappers will enable applications to use zprocess with its encryption functionality, without having to configure everything within each application. We should get the encryption stuff working before enabling remote devices in BLACS.\r\n\r\n* Added ls_zprocess, which wraps zprocess classes with singletons and\r\n  subclasses configured to use labconfig encryption settings, as well\r\n  as zlock host and port settings, and zprocess.remote  port setting.\r\n\r\n* Added zlock.py, zlog.py and remote.py, which can be used to start zlock,\r\n  zlog and zprocess.remote servers according to labconfig settings. zlog should\r\n  not normally be run manually.\r\n\r\n* Modified setup_logging.py and h5_lock.py to make use of the wrapped classes.\r\n  Note that once h5_lock is imported by an application, or once a logging handler\r\n  is configured, the ProcessTree object created is set as the zprocess default\r\n  process tree. This is backward compatibility for applications not using the\r\n  wrapped classes. This does not mean encryption can be turned on and work\r\n  everywhere, that will still be a backward incompatible jump. But it does mean\r\n  that the settings are inherited by subprocesses using\r\n  Process() classes without specifying ProcessTree (which is dprecated). So it provides backward\r\n  compatibility for labscript suite programs in their current form.\r\n\r\n* Bump version so applications may make use of these classes and we can\r\n  begin to move them to a state where encryption can be turned on.\r\n  This should be in place before remote devices are implemented in BLACS.\r\n\r\nThese changes are intended to be backward compatible so far, but encryption\r\ncannot be used until applications have their use of zprocess ported to use\r\nthese wrappers.\r\n\r\nI would want to test these changes for regressions before merging them, preferably on a real setup! It should work talking with existing zlock servers without them needing to be restarted or anything.", "title": "Beginning the great zprocess migration for remote device support", "destination": {"commit": {"hash": "6b2f9766b657", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/6b2f9766b657.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/6b2f9766b657"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "fc811ea5c5ab", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/fc811ea5c5ab"}, "html": {"href": "#!/cbillington/labscript_utils/commits/fc811ea5c5ab"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "zprocess_changes"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-02-07T03:41:03.553147+00:00"}, "pull_request": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}}, {"update": {"description": "This PR adds wrappers around zprocess functionality configuring it according to labconfig. Use of these wrappers will enable applications to use zprocess with its encryption functionality, without having to configure everything within each application. We should get the encryption stuff working before enabling remote devices in BLACS.\r\n\r\n* Added ls_zprocess, which wraps zprocess classes with singletons and\r\n  subclasses configured to use labconfig encryption settings, as well\r\n  as zlock host and port settings, and zprocess.remote  port setting.\r\n\r\n* Added zlock.py, zlog.py and remote.py, which can be used to start zlock,\r\n  zlog and zprocess.remote servers according to labconfig settings. zlog should\r\n  not normally be run manually.\r\n\r\n* Modified setup_logging.py and h5_lock.py to make use of the wrapped classes.\r\n  Note that once h5_lock is imported by an application, or once a logging handler\r\n  is configured, the ProcessTree object created is set as the zprocess default\r\n  process tree. This is backward compatibility for applications not using the\r\n  wrapped classes. This does not mean encryption can be turned on and work\r\n  everywhere, that will still be a backward incompatible jump. But it does mean\r\n  that the settings are inherited by subprocesses using\r\n  Process() classes without specifying ProcessTree (which is dprecated). So it provides backward\r\n  compatibility for labscript suite programs in their current form.\r\n\r\n* Bump version so applications may make use of these classes and we can\r\n  begin to move them to a state where encryption can be turned on.\r\n  This should be in place before remote devices are implemented in BLACS.\r\n\r\nThese changes are intended to be backward compatible so far, but encryption\r\ncannot be used until applications have their use of zprocess ported to use\r\nthese wrappers.\r\n\r\nI would want to test these changes for regressions before merging them, preferably on a real setup! It should work talking with existing zlock servers without them needing to be restarted or anything.", "title": "Beginning the great zprocess migration for remote device support", "destination": {"commit": {"hash": "6b2f9766b657", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/6b2f9766b657.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/6b2f9766b657"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d7f1d0bdbbeb", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/d7f1d0bdbbeb"}, "html": {"href": "#!/cbillington/labscript_utils/commits/d7f1d0bdbbeb"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "zprocess_changes"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-02-07T02:31:44.399827+00:00"}, "pull_request": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66/comments/90721691.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66/_/diff#comment-90721691"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}, "content": {"raw": "More omissions noticed - OutputBoxes were not wrapped with labconfig settings. Added a wrapper for this, which depends on a [qtutils pull request](https://pstarkey.github.io/bitbucket-archive/#!/pull-requests/17/outputbox-optional-security/)", "markup": "markdown", "html": "<p>More omissions noticed - OutputBoxes were not wrapped with labconfig settings. Added a wrapper for this, which depends on a <a data-is-external-link=\"true\" href=\"https://pstarkey.github.io/bitbucket-archive/#!/pull-requests/17/outputbox-optional-security/\" rel=\"nofollow\">qtutils pull request</a></p>", "type": "rendered"}, "created_on": "2019-02-07T01:34:30.956590+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-02-07T01:34:30.963131+00:00", "type": "pullrequest_comment", "id": 90721691}, "pull_request": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}}, {"update": {"description": "This PR adds wrappers around zprocess functionality configuring it according to labconfig. Use of these wrappers will enable applications to use zprocess with its encryption functionality, without having to configure everything within each application. We should get the encryption stuff working before enabling remote devices in BLACS.\r\n\r\n* Added ls_zprocess, which wraps zprocess classes with singletons and\r\n  subclasses configured to use labconfig encryption settings, as well\r\n  as zlock host and port settings, and zprocess.remote  port setting.\r\n\r\n* Added zlock.py, zlog.py and remote.py, which can be used to start zlock,\r\n  zlog and zprocess.remote servers according to labconfig settings. zlog should\r\n  not normally be run manually.\r\n\r\n* Modified setup_logging.py and h5_lock.py to make use of the wrapped classes.\r\n  Note that once h5_lock is imported by an application, or once a logging handler\r\n  is configured, the ProcessTree object created is set as the zprocess default\r\n  process tree. This is backward compatibility for applications not using the\r\n  wrapped classes. This does not mean encryption can be turned on and work\r\n  everywhere, that will still be a backward incompatible jump. But it does mean\r\n  that the settings are inherited by subprocesses using\r\n  Process() classes without specifying ProcessTree (which is dprecated). So it provides backward\r\n  compatibility for labscript suite programs in their current form.\r\n\r\n* Bump version so applications may make use of these classes and we can\r\n  begin to move them to a state where encryption can be turned on.\r\n  This should be in place before remote devices are implemented in BLACS.\r\n\r\nThese changes are intended to be backward compatible so far, but encryption\r\ncannot be used until applications have their use of zprocess ported to use\r\nthese wrappers.\r\n\r\nI would want to test these changes for regressions before merging them, preferably on a real setup! It should work talking with existing zlock servers without them needing to be restarted or anything.", "title": "Beginning the great zprocess migration for remote device support", "destination": {"commit": {"hash": "6b2f9766b657", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/6b2f9766b657.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/6b2f9766b657"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b0cd9555830b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/b0cd9555830b"}, "html": {"href": "#!/cbillington/labscript_utils/commits/b0cd9555830b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "zprocess_changes"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-02-07T01:30:36.835374+00:00"}, "pull_request": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66/comments/90712406.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66/_/diff#comment-90712406"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}, "content": {"raw": "Deployed this on an experiment and found a bug, now fixed\u2014a BLACS plugin was using a zlock Lock and gave an error about not being connected to a zlock server. I added backward compatibility for that, setting a default zlock client object for the old-style calls, similarly to setting the default ProcessTree.\n\nNo other problems noticed yet on this experiment.", "markup": "markdown", "html": "<p>Deployed this on an experiment and found a bug, now fixed\u2014a BLACS plugin was using a zlock Lock and gave an error about not being connected to a zlock server. I added backward compatibility for that, setting a default zlock client object for the old-style calls, similarly to setting the default ProcessTree.</p>\n<p>No other problems noticed yet on this experiment.</p>", "type": "rendered"}, "created_on": "2019-02-06T22:57:37.202470+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-02-06T22:58:10.426629+00:00", "type": "pullrequest_comment", "id": 90712406}, "pull_request": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}}, {"update": {"description": "This PR adds wrappers around zprocess functionality configuring it according to labconfig. Use of these wrappers will enable applications to use zprocess with its encryption functionality, without having to configure everything within each application. We should get the encryption stuff working before enabling remote devices in BLACS.\r\n\r\n* Added ls_zprocess, which wraps zprocess classes with singletons and\r\n  subclasses configured to use labconfig encryption settings, as well\r\n  as zlock host and port settings, and zprocess.remote  port setting.\r\n\r\n* Added zlock.py, zlog.py and remote.py, which can be used to start zlock,\r\n  zlog and zprocess.remote servers according to labconfig settings. zlog should\r\n  not normally be run manually.\r\n\r\n* Modified setup_logging.py and h5_lock.py to make use of the wrapped classes.\r\n  Note that once h5_lock is imported by an application, or once a logging handler\r\n  is configured, the ProcessTree object created is set as the zprocess default\r\n  process tree. This is backward compatibility for applications not using the\r\n  wrapped classes. This does not mean encryption can be turned on and work\r\n  everywhere, that will still be a backward incompatible jump. But it does mean\r\n  that the settings are inherited by subprocesses using\r\n  Process() classes without specifying ProcessTree (which is dprecated). So it provides backward\r\n  compatibility for labscript suite programs in their current form.\r\n\r\n* Bump version so applications may make use of these classes and we can\r\n  begin to move them to a state where encryption can be turned on.\r\n  This should be in place before remote devices are implemented in BLACS.\r\n\r\nThese changes are intended to be backward compatible so far, but encryption\r\ncannot be used until applications have their use of zprocess ported to use\r\nthese wrappers.\r\n\r\nI would want to test these changes for regressions before merging them, preferably on a real setup! It should work talking with existing zlock servers without them needing to be restarted or anything.", "title": "Beginning the great zprocess migration for remote device support", "destination": {"commit": {"hash": "6b2f9766b657", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/6b2f9766b657.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/6b2f9766b657"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b62147483ca3", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/b62147483ca3"}, "html": {"href": "#!/cbillington/labscript_utils/commits/b62147483ca3"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "zprocess_changes"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-02-06T22:44:26.366328+00:00"}, "pull_request": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66/comments/90704902.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66/_/diff#comment-90704902"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}, "content": {"raw": "To give some context, zprocess used to be very stateless, since launching a subprocess was just that, and didn't require any extra knowledge about encryption keys or whatnot. It has since been refactored so that everything is done through a ProcessTree object, from which you launch subprocesses, instantiate zlock Locks, etc. The ProcessTree object holds state that needs to be inherited by subprocesses about where the zlock server is, where the zlog server is, and what encryption key to use for everything. \n\nPart of this refactoring was adding backward-compatibility functions and classes in place to translate the old way of doing things into the new way so that things keep working (though without the new features). Also, there are checks to make sure you're not doing insecure communication, but these are all disabled for the moment for backward compatibility. So there has been a lot of work going on in zprocess behind the scenes to get it ready for remote devices and encrypted everything, but it has been mostly invisible from the perspective of labscript apps because of the backward compatibility wrappers. The backward compatibility is to allow everything to be ported - once that's all done, there will be a major version bump of zprocess removing the backward compatibility, or at least forcing you to add a \"I know this is insecure\" flag to continue to use it, and applications that have been ported should continue to work. Ideally this will coincide with documentation about how to use the zprocess API, so that any non-labscript code using it can be ported too. Porting is pretty straightforward, but without docs or examples probably wouldn't seem like it.", "markup": "markdown", "html": "<p>To give some context, zprocess used to be very stateless, since launching a subprocess was just that, and didn't require any extra knowledge about encryption keys or whatnot. It has since been refactored so that everything is done through a ProcessTree object, from which you launch subprocesses, instantiate zlock Locks, etc. The ProcessTree object holds state that needs to be inherited by subprocesses about where the zlock server is, where the zlog server is, and what encryption key to use for everything. </p>\n<p>Part of this refactoring was adding backward-compatibility functions and classes in place to translate the old way of doing things into the new way so that things keep working (though without the new features). Also, there are checks to make sure you're not doing insecure communication, but these are all disabled for the moment for backward compatibility. So there has been a lot of work going on in zprocess behind the scenes to get it ready for remote devices and encrypted everything, but it has been mostly invisible from the perspective of labscript apps because of the backward compatibility wrappers. The backward compatibility is to allow everything to be ported - once that's all done, there will be a major version bump of zprocess removing the backward compatibility, or at least forcing you to add a \"I know this is insecure\" flag to continue to use it, and applications that have been ported should continue to work. Ideally this will coincide with documentation about how to use the zprocess API, so that any non-labscript code using it can be ported too. Porting is pretty straightforward, but without docs or examples probably wouldn't seem like it.</p>", "type": "rendered"}, "created_on": "2019-02-06T21:35:33.377785+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-02-06T21:35:33.386397+00:00", "type": "pullrequest_comment", "id": 90704902}, "pull_request": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}}, {"update": {"description": "This PR adds wrappers around zprocess functionality configuring it according to labconfig. Use of these wrappers will enable applications to use zprocess with its encryption functionality, without having to configure everything within each application. We should get the encryption stuff working before enabling remote devices in BLACS.\r\n\r\n* Added ls_zprocess, which wraps zprocess classes with singletons and\r\n  subclasses configured to use labconfig encryption settings, as well\r\n  as zlock host and port settings, and zprocess.remote  port setting.\r\n\r\n* Added zlock.py, zlog.py and remote.py, which can be used to start zlock,\r\n  zlog and zprocess.remote servers according to labconfig settings. zlog should\r\n  not normally be run manually.\r\n\r\n* Modified setup_logging.py and h5_lock.py to make use of the wrapped classes.\r\n  Note that once h5_lock is imported by an application, or once a logging handler\r\n  is configured, the ProcessTree object created is set as the zprocess default\r\n  process tree. This is backward compatibility for applications not using the\r\n  wrapped classes. This does not mean encryption can be turned on and work\r\n  everywhere, that will still be a backward incompatible jump. But it does mean\r\n  that the settings are inherited by subprocesses using\r\n  Process() classes without specifying ProcessTree (which is dprecated). So it provides backward\r\n  compatibility for labscript suite programs in their current form.\r\n\r\n* Bump version so applications may make use of these classes and we can\r\n  begin to move them to a state where encryption can be turned on.\r\n  This should be in place before remote devices are implemented in BLACS.\r\n\r\nThese changes are intended to be backward compatible so far, but encryption\r\ncannot be used until applications have their use of zprocess ported to use\r\nthese wrappers.\r\n\r\nI would want to test these changes for regressions before merging them, preferably on a real setup! It should work talking with existing zlock servers without them needing to be restarted or anything.", "title": "Beginning the great zprocess migration for remote device support", "destination": {"commit": {"hash": "6b2f9766b657", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/6b2f9766b657.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/6b2f9766b657"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "9fdae2110d79", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/9fdae2110d79"}, "html": {"href": "#!/cbillington/labscript_utils/commits/9fdae2110d79"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "zprocess_changes"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-02-06T19:30:05.154147+00:00"}, "pull_request": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}}, {"update": {"description": "This PR adds wrappers around zprocess functionality configuring it according to labconfig. Use of these wrappers will enable applications to use zprocess with its encryption functionality, without having to configure everything within each application. We should get the encryption stuff working before enabling remote devices in BLACS.\r\n\r\n* Added ls_zprocess, which wraps zprocess classes with singletons and\r\n  subclasses configured to use labconfig encryption settings, as well\r\n  as zlock host and port settings, and zprocess.remote  port setting.\r\n\r\n* Added zlock.py, zlog.py and remote.py, which can be used to start zlock,\r\n  zlog and zprocess.remote servers according to labconfig settings. zlog should\r\n  not normally be run manually.\r\n\r\n* Modified setup_logging.py and h5_lock.py to make use of the wrapped classes.\r\n  Note that once h5_lock is imported by an application, or once a logging handler\r\n  is configured, the ProcessTree object created is set as the zprocess default\r\n  process tree. This is backward compatibility for applications not using the\r\n  wrapped classes. This does not mean encryption can be turned on and work\r\n  everywhere, that will still be a backward incompatible jump. But it does mean\r\n  that the settings are inherited by subprocesses using\r\n  Process() classes without specifying ProcessTree (which is dprecated). So it provides backward\r\n  compatibility for labscript suite programs in their current form.\r\n\r\n* Bump version so applications may make use of these classes and we can\r\n  begin to move them to a state where encryption can be turned on.\r\n  This should be in place before remote devices are implemented in BLACS.\r\n\r\nThese changes are intended to be backward compatible so far, but encryption\r\ncannot be used until applications have their use of zprocess ported to use\r\nthese wrappers.\r\n\r\nI would want to test these changes for regressions before merging them, preferably on a real setup! It should work talking with existing zlock servers without them needing to be restarted or anything.", "title": "Beginning the great zprocess migration for remote device support", "destination": {"commit": {"hash": "6b2f9766b657", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/6b2f9766b657.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/6b2f9766b657"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "3028e34b7b74", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/3028e34b7b74"}, "html": {"href": "#!/cbillington/labscript_utils/commits/3028e34b7b74"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "zprocess_changes"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-02-06T19:14:08.198623+00:00"}, "pull_request": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}}, {"update": {"description": "This PR adds wrappers around zprocess functionality configuring it according to labconfig. Use of these wrappers will enable applications to use zprocess with its encryption functionality, without having to configure everything within each application. We should get the encryption stuff working before enabling remote devices in BLACS.\r\n\r\n* Added ls_zprocess, which wraps zprocess classes with singletons and\r\n  subclasses configured to use labconfig encryption settings, as well\r\n  as zlock host and port settings, and zprocess.remote  port setting.\r\n\r\n* Added zlock.py, zlog.py and remote.py, which can be used to start zlock,\r\n  zlog and zprocess.remote servers according to labconfig settings. zlog should\r\n  not normally be run manually.\r\n\r\n* Modified setup_logging.py and h5_lock.py to make use of the wrapped classes.\r\n  Note that once h5_lock is imported by an application, or once a logging handler\r\n  is configured, the ProcessTree object created is set as the zprocess default\r\n  process tree. This is backward compatibility for applications not using the\r\n  wrapped classes. This does not mean encryption can be turned on and work\r\n  everywhere, that will still be a backward incompatible jump. But it does mean\r\n  that the settings are inherited by subprocesses using\r\n  Process() classes without specifying ProcessTree (which is dprecated). So it provides backward\r\n  compatibility for labscript suite programs in their current form.\r\n\r\n* Bump version so applications may make use of these classes and we can\r\n  begin to move them to a state where encryption can be turned on.\r\n  This should be in place before remote devices are implemented in BLACS.\r\n\r\nThese changes are intended to be backward compatible so far, but encryption\r\ncannot be used until applications have their use of zprocess ported to use\r\nthese wrappers.\r\n\r\nI would want to test these changes for regressions before merging them, preferably on a real setup! It should work talking with existing zlock servers without them needing to be restarted or anything.", "title": "Beginning the great zprocess migration for remote device support", "destination": {"commit": {"hash": "6b2f9766b657", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/6b2f9766b657.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/6b2f9766b657"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "3028e34b7b74", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/3028e34b7b74"}, "html": {"href": "#!/cbillington/labscript_utils/commits/3028e34b7b74"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "zprocess_changes"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-02-06T19:14:08.113178+00:00"}, "pull_request": {"type": "pullrequest", "id": 66, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/66.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/66"}}, "title": "Beginning the great zprocess migration for remote device support"}}]}