{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/68/comments/91022980.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/68/_/diff#comment-91022980"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 68, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/68.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/68"}}, "title": "Winshell exe removal"}, "content": {"raw": "The renaming of the file obscures the diff, here it is:\n\n```diff\n--- winshell/__init__.py\t2019-02-08 23:47:55.103007933 -0500\n+++ winshell.py\t2019-02-08 16:39:15.541223000 -0500\n@@ -2,10 +2,8 @@\n \n import os\n import sys\n-import subprocess\n-\n-this_folder = os.path.realpath(os.path.dirname(__file__))\n-Win7AppId = os.path.join(this_folder, 'Win7AppId1.1.exe')\n+if sys.version_info.major == 2:\n+    str = unicode\n \n for path in sys.path:\n     if os.path.exists(os.path.join(path, '.is_labscript_suite_install_dir')):\n@@ -31,8 +29,10 @@\n                    'lyse': 'lyse - the labscript suite'}\n \n def make_shortcut(path, target, arguments, working_directory, icon_path, description, appid):\n-    import sys, os\n+    from win32com.shell import shellcon\n     from win32com.client import Dispatch\n+    from win32com.propsys import propsys, pscon\n+    import pythoncom\n     shell = Dispatch('WScript.Shell')\n     shortcut = shell.CreateShortcut(path)\n     shortcut.TargetPath = target\n@@ -41,14 +41,16 @@\n     shortcut.IconLocation = icon_path\n     shortcut.Description = description\n     shortcut.save()\n-    # The normal windows API calls don't seem to be able to set the appid of the shortcut.\n-    # The required API calls are either absent or not wrapped by pywin32. So we use this\n-    # command line utility that does it in C++:\n-    child = subprocess.Popen([Win7AppId, path, appid],\n-                             stdout = subprocess.PIPE, stderr = subprocess.PIPE)\n-    stdout, stderr = child.communicate()\n-    if child.returncode != 0:\n-        raise OSError('Failed to set UserModelAppId of shortcut.\\n' + stdout + stderr)\n+\n+    store = propsys.SHGetPropertyStoreFromParsingName(\n+        path, None, shellcon.GPS_READWRITE, propsys.IID_IPropertyStore\n+    )\n+    store.SetValue(\n+        pscon.PKEY_AppUserModel_ID,\n+        propsys.PROPVARIANTType(str(appid), pythoncom.VT_LPWSTR),\n+    )\n+    store.Commit()\n+\n \n def set_appusermodel(window_id, appid, icon_path, relaunch_command, relaunch_display_name):\n     from win32com.propsys import propsys, pscon\n@@ -70,7 +72,6 @@\n     \"\"\"Removes given .lnk file from the start menu.\n     If entry not present, does nothing.\"\"\"\n     from win32com.client import Dispatch\n-    import shutil\n     name = os.path.basename(name)\n     objShell = Dispatch(\"WScript.Shell\")\n     start_menu_programs = objShell.SpecialFolders(\"Programs\")\n```", "markup": "markdown", "html": "<p>The renaming of the file obscures the diff, here it is:</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gd\">--- winshell/__init__.py    2019-02-08 23:47:55.103007933 -0500</span>\n<span class=\"gi\">+++ winshell.py 2019-02-08 16:39:15.541223000 -0500</span>\n<span class=\"gu\">@@ -2,10 +2,8 @@</span>\n\n import os\n import sys\n<span class=\"gd\">-import subprocess</span>\n<span class=\"gd\">-</span>\n<span class=\"gd\">-this_folder = os.path.realpath(os.path.dirname(__file__))</span>\n<span class=\"gd\">-Win7AppId = os.path.join(this_folder, &#39;Win7AppId1.1.exe&#39;)</span>\n<span class=\"gi\">+if sys.version_info.major == 2:</span>\n<span class=\"gi\">+    str = unicode</span>\n\n for path in sys.path:\n     if os.path.exists(os.path.join(path, &#39;.is_labscript_suite_install_dir&#39;)):\n<span class=\"gu\">@@ -31,8 +29,10 @@</span>\n                    &#39;lyse&#39;: &#39;lyse - the labscript suite&#39;}\n\n def make_shortcut(path, target, arguments, working_directory, icon_path, description, appid):\n<span class=\"gd\">-    import sys, os</span>\n<span class=\"gi\">+    from win32com.shell import shellcon</span>\n     from win32com.client import Dispatch\n<span class=\"gi\">+    from win32com.propsys import propsys, pscon</span>\n<span class=\"gi\">+    import pythoncom</span>\n     shell = Dispatch(&#39;WScript.Shell&#39;)\n     shortcut = shell.CreateShortcut(path)\n     shortcut.TargetPath = target\n<span class=\"gu\">@@ -41,14 +41,16 @@</span>\n     shortcut.IconLocation = icon_path\n     shortcut.Description = description\n     shortcut.save()\n<span class=\"gd\">-    # The normal windows API calls don&#39;t seem to be able to set the appid of the shortcut.</span>\n<span class=\"gd\">-    # The required API calls are either absent or not wrapped by pywin32. So we use this</span>\n<span class=\"gd\">-    # command line utility that does it in C++:</span>\n<span class=\"gd\">-    child = subprocess.Popen([Win7AppId, path, appid],</span>\n<span class=\"gd\">-                             stdout = subprocess.PIPE, stderr = subprocess.PIPE)</span>\n<span class=\"gd\">-    stdout, stderr = child.communicate()</span>\n<span class=\"gd\">-    if child.returncode != 0:</span>\n<span class=\"gd\">-        raise OSError(&#39;Failed to set UserModelAppId of shortcut.\\n&#39; + stdout + stderr)</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+    store = propsys.SHGetPropertyStoreFromParsingName(</span>\n<span class=\"gi\">+        path, None, shellcon.GPS_READWRITE, propsys.IID_IPropertyStore</span>\n<span class=\"gi\">+    )</span>\n<span class=\"gi\">+    store.SetValue(</span>\n<span class=\"gi\">+        pscon.PKEY_AppUserModel_ID,</span>\n<span class=\"gi\">+        propsys.PROPVARIANTType(str(appid), pythoncom.VT_LPWSTR),</span>\n<span class=\"gi\">+    )</span>\n<span class=\"gi\">+    store.Commit()</span>\n<span class=\"gi\">+</span>\n\n def set_appusermodel(window_id, appid, icon_path, relaunch_command, relaunch_display_name):\n     from win32com.propsys import propsys, pscon\n<span class=\"gu\">@@ -70,7 +72,6 @@</span>\n     &quot;&quot;&quot;Removes given .lnk file from the start menu.\n     If entry not present, does nothing.&quot;&quot;&quot;\n     from win32com.client import Dispatch\n<span class=\"gd\">-    import shutil</span>\n     name = os.path.basename(name)\n     objShell = Dispatch(&quot;WScript.Shell&quot;)\n     start_menu_programs = objShell.SpecialFolders(&quot;Programs&quot;)\n</pre></div>", "type": "rendered"}, "created_on": "2019-02-09T04:50:10.366508+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-02-09T04:52:54.834511+00:00", "type": "pullrequest_comment", "id": 91022980}