{"rendered": {"description": {"raw": "This function imports a module by name, or reloads it if it has already been imported.\r\n\r\nThis is useful for when you have a connection table that is imported by multiple scripts. For example, here in the chip lab we have a connectiontable.py which has at the bottom:\r\n\r\n```\r\nif __name__ == '__main__':\r\n    start()\r\n    stop(1)\r\n```\r\n\r\nWith experiment scripts importing this as a module instead of duplicating it as their own connection table. Whilst that duplication does have advantages, it is painful in practice to actually duplicate everything as opposed to having one well-maintained connection table file, and if it is in labscriptlib it is still saved to the h5 file for posterity. With that plus version control of userlib, it is not so bad to have a single shared connection table rather than duplication.\r\n\r\nHowever, in batch_compiler.py, module imports are of course cached. We need the connection table code to run every time, and module_watcher doesn't cut it since the file is not being modified (and if it were, *all* modules would be unloaded, which would defeat most of the purpose of batch_compiler and affect performance considerably).\r\n\r\nSo a function like this is necessary. This one has been in use in the chip lab since 2014.", "markup": "markdown", "html": "<p>This function imports a module by name, or reloads it if it has already been imported.</p>\n<p>This is useful for when you have a connection table that is imported by multiple scripts. For example, here in the chip lab we have a connectiontable.py which has at the bottom:</p>\n<div class=\"codehilite\"><pre><span></span>if __name__ == &#39;__main__&#39;:\n    start()\n    stop(1)\n</pre></div>\n\n\n<p>With experiment scripts importing this as a module instead of duplicating it as their own connection table. Whilst that duplication does have advantages, it is painful in practice to actually duplicate everything as opposed to having one well-maintained connection table file, and if it is in labscriptlib it is still saved to the h5 file for posterity. With that plus version control of userlib, it is not so bad to have a single shared connection table rather than duplication.</p>\n<p>However, in batch_compiler.py, module imports are of course cached. We need the connection table code to run every time, and module_watcher doesn't cut it since the file is not being modified (and if it were, <em>all</em> modules would be unloaded, which would defeat most of the purpose of batch_compiler and affect performance considerably).</p>\n<p>So a function like this is necessary. This one has been in use in the chip lab since 2014.</p>", "type": "rendered"}, "title": {"raw": "add import_or_reload function", "markup": "markdown", "html": "<p>add import_or_reload function</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This function imports a module by name, or reloads it if it has already been imported.\r\n\r\nThis is useful for when you have a connection table that is imported by multiple scripts. For example, here in the chip lab we have a connectiontable.py which has at the bottom:\r\n\r\n```\r\nif __name__ == '__main__':\r\n    start()\r\n    stop(1)\r\n```\r\n\r\nWith experiment scripts importing this as a module instead of duplicating it as their own connection table. Whilst that duplication does have advantages, it is painful in practice to actually duplicate everything as opposed to having one well-maintained connection table file, and if it is in labscriptlib it is still saved to the h5 file for posterity. With that plus version control of userlib, it is not so bad to have a single shared connection table rather than duplication.\r\n\r\nHowever, in batch_compiler.py, module imports are of course cached. We need the connection table code to run every time, and module_watcher doesn't cut it since the file is not being modified (and if it were, *all* modules would be unloaded, which would defeat most of the purpose of batch_compiler and affect performance considerably).\r\n\r\nSo a function like this is necessary. This one has been in use in the chip lab since 2014.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/71/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/diffstat/labscript_suite/labscript_utils:2145a5ca7c12%0D27ba4252bbfa?from_pullrequest_id=71"}, "commits": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/71/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/71.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/71/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/71/merge"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/71"}, "activity": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/71/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/diff/labscript_suite/labscript_utils:2145a5ca7c12%0D27ba4252bbfa?from_pullrequest_id=71"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/71/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/71/statuses_page=1.json"}}, "title": "add import_or_reload function", "close_source_branch": true, "reviewers": [{"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}], "id": 71, "destination": {"commit": {"hash": "27ba4252bbfa", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/27ba4252bbfa.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/27ba4252bbfa"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "created_on": "2019-03-13T20:28:28.432518+00:00", "summary": {"raw": "This function imports a module by name, or reloads it if it has already been imported.\r\n\r\nThis is useful for when you have a connection table that is imported by multiple scripts. For example, here in the chip lab we have a connectiontable.py which has at the bottom:\r\n\r\n```\r\nif __name__ == '__main__':\r\n    start()\r\n    stop(1)\r\n```\r\n\r\nWith experiment scripts importing this as a module instead of duplicating it as their own connection table. Whilst that duplication does have advantages, it is painful in practice to actually duplicate everything as opposed to having one well-maintained connection table file, and if it is in labscriptlib it is still saved to the h5 file for posterity. With that plus version control of userlib, it is not so bad to have a single shared connection table rather than duplication.\r\n\r\nHowever, in batch_compiler.py, module imports are of course cached. We need the connection table code to run every time, and module_watcher doesn't cut it since the file is not being modified (and if it were, *all* modules would be unloaded, which would defeat most of the purpose of batch_compiler and affect performance considerably).\r\n\r\nSo a function like this is necessary. This one has been in use in the chip lab since 2014.", "markup": "markdown", "html": "<p>This function imports a module by name, or reloads it if it has already been imported.</p>\n<p>This is useful for when you have a connection table that is imported by multiple scripts. For example, here in the chip lab we have a connectiontable.py which has at the bottom:</p>\n<div class=\"codehilite\"><pre><span></span>if __name__ == &#39;__main__&#39;:\n    start()\n    stop(1)\n</pre></div>\n\n\n<p>With experiment scripts importing this as a module instead of duplicating it as their own connection table. Whilst that duplication does have advantages, it is painful in practice to actually duplicate everything as opposed to having one well-maintained connection table file, and if it is in labscriptlib it is still saved to the h5 file for posterity. With that plus version control of userlib, it is not so bad to have a single shared connection table rather than duplication.</p>\n<p>However, in batch_compiler.py, module imports are of course cached. We need the connection table code to run every time, and module_watcher doesn't cut it since the file is not being modified (and if it were, <em>all</em> modules would be unloaded, which would defeat most of the purpose of batch_compiler and affect performance considerably).</p>\n<p>So a function like this is necessary. This one has been in use in the chip lab since 2014.</p>", "type": "rendered"}, "source": {"commit": {"hash": "88567a9b3f46", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/88567a9b3f46"}, "html": {"href": "#!/cbillington/labscript_utils/commits/88567a9b3f46"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "import_or_reload"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}}, {"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, {"role": "PARTICIPANT", "participated_on": "2019-03-14T04:54:18.796035+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "PARTICIPANT", "participated_on": "2019-03-14T04:50:53.430638+00:00", "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}], "reason": "", "updated_on": "2019-03-18T16:10:16.957008+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "2145a5ca7c12", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/2145a5ca7c12.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/2145a5ca7c12"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}