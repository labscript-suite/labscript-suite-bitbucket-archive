{"pagelen": 50, "values": [{"update": {"description": "This function imports a module by name, or reloads it if it has already been imported.\r\n\r\nThis is useful for when you have a connection table that is imported by multiple scripts. For example, here in the chip lab we have a connectiontable.py which has at the bottom:\r\n\r\n```\r\nif __name__ == '__main__':\r\n    start()\r\n    stop(1)\r\n```\r\n\r\nWith experiment scripts importing this as a module instead of duplicating it as their own connection table. Whilst that duplication does have advantages, it is painful in practice to actually duplicate everything as opposed to having one well-maintained connection table file, and if it is in labscriptlib it is still saved to the h5 file for posterity. With that plus version control of userlib, it is not so bad to have a single shared connection table rather than duplication.\r\n\r\nHowever, in batch_compiler.py, module imports are of course cached. We need the connection table code to run every time, and module_watcher doesn't cut it since the file is not being modified (and if it were, *all* modules would be unloaded, which would defeat most of the purpose of batch_compiler and affect performance considerably).\r\n\r\nSo a function like this is necessary. This one has been in use in the chip lab since 2014.", "title": "add import_or_reload function", "destination": {"commit": {"hash": "27ba4252bbfa", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/27ba4252bbfa.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/27ba4252bbfa"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "88567a9b3f46", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/88567a9b3f46"}, "html": {"href": "#!/cbillington/labscript_utils/commits/88567a9b3f46"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "import_or_reload"}}, "state": "MERGED", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-03-18T16:10:16.994430+00:00"}, "pull_request": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/71"}}, "title": "add import_or_reload function"}}, {"update": {"description": "This function imports a module by name, or reloads it if it has already been imported.\r\n\r\nThis is useful for when you have a connection table that is imported by multiple scripts. For example, here in the chip lab we have a connectiontable.py which has at the bottom:\r\n\r\n```\r\nif __name__ == '__main__':\r\n    start()\r\n    stop(1)\r\n```\r\n\r\nWith experiment scripts importing this as a module instead of duplicating it as their own connection table. Whilst that duplication does have advantages, it is painful in practice to actually duplicate everything as opposed to having one well-maintained connection table file, and if it is in labscriptlib it is still saved to the h5 file for posterity. With that plus version control of userlib, it is not so bad to have a single shared connection table rather than duplication.\r\n\r\nHowever, in batch_compiler.py, module imports are of course cached. We need the connection table code to run every time, and module_watcher doesn't cut it since the file is not being modified (and if it were, *all* modules would be unloaded, which would defeat most of the purpose of batch_compiler and affect performance considerably).\r\n\r\nSo a function like this is necessary. This one has been in use in the chip lab since 2014.", "title": "add import_or_reload function", "destination": {"commit": {"hash": "27ba4252bbfa", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/27ba4252bbfa.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/27ba4252bbfa"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "88567a9b3f46", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/88567a9b3f46"}, "html": {"href": "#!/cbillington/labscript_utils/commits/88567a9b3f46"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "import_or_reload"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-03-18T16:10:15.550040+00:00"}, "pull_request": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/71"}}, "title": "add import_or_reload function"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/71/comments/94950561.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/71/_/diff#comment-94950561"}}, "parent": {"id": 94950391, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/71/comments/94950391.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/71/_/diff#comment-94950391"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/71"}}, "title": "add import_or_reload function"}, "content": {"raw": "Yes, that would do it too! Neither approach is completely satisfactory, but whatever.\n\nLabscript is whitelisted by modulewatcher because it is already imported by the time the script runs - batch\\_compiler.py needs to call labscript\\_init\\(\\) with the h5 file. Reloading labscipt would result in the new labscript module not knowing what the h5 file was! Not sure if there\u2019s much of a way around that, other than restarting the compiler subprocess.", "markup": "markdown", "html": "<p>Yes, that would do it too! Neither approach is completely satisfactory, but whatever.</p>\n<p>Labscript is whitelisted by modulewatcher because it is already imported by the time the script runs - batch_compiler.py needs to call labscript_init() with the h5 file. Reloading labscipt would result in the new labscript module not knowing what the h5 file was! Not sure if there\u2019s much of a way around that, other than restarting the compiler subprocess.</p>", "type": "rendered"}, "created_on": "2019-03-14T04:54:18.787447+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-03-14T04:54:18.796035+00:00", "type": "pullrequest_comment", "id": 94950561}, "pull_request": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/71"}}, "title": "add import_or_reload function"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/71/comments/94950391.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/71/_/diff#comment-94950391"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/71"}}, "title": "add import_or_reload function"}, "content": {"raw": "I don\u2019t see a problem with this, although I will point out you could work around it by placing your connection table code in a function, and calling that function from your main script to ensure the code runs every time!\n\nThis PR is probably useful for a lot of other things too \\(like importing labscript, since I think module watcher doesn\u2019t watch that for some reason\u2026\\)", "markup": "markdown", "html": "<p>I don\u2019t see a problem with this, although I will point out you could work around it by placing your connection table code in a function, and calling that function from your main script to ensure the code runs every time!</p>\n<p>This PR is probably useful for a lot of other things too (like importing labscript, since I think module watcher doesn\u2019t watch that for some reason\u2026)</p>", "type": "rendered"}, "created_on": "2019-03-14T04:50:53.421016+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2019-03-14T04:50:53.430638+00:00", "type": "pullrequest_comment", "id": 94950391}, "pull_request": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/71"}}, "title": "add import_or_reload function"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/71/comments/94939183.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/71/_/diff#comment-94939183"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/71"}}, "title": "add import_or_reload function"}, "content": {"raw": "Will merge on Monday if there are no comments.", "markup": "markdown", "html": "<p>Will merge on Monday if there are no comments.</p>", "type": "rendered"}, "created_on": "2019-03-14T00:50:34.654543+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-03-14T00:50:34.660986+00:00", "type": "pullrequest_comment", "id": 94939183}, "pull_request": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/71"}}, "title": "add import_or_reload function"}}, {"update": {"description": "This function imports a module by name, or reloads it if it has already been imported.\r\n\r\nThis is useful for when you have a connection table that is imported by multiple scripts. For example, here in the chip lab we have a connectiontable.py which has at the bottom:\r\n\r\n```\r\nif __name__ == '__main__':\r\n    start()\r\n    stop(1)\r\n```\r\n\r\nWith experiment scripts importing this as a module instead of duplicating it as their own connection table. Whilst that duplication does have advantages, it is painful in practice to actually duplicate everything as opposed to having one well-maintained connection table file, and if it is in labscriptlib it is still saved to the h5 file for posterity. With that plus version control of userlib, it is not so bad to have a single shared connection table rather than duplication.\r\n\r\nHowever, in batch_compiler.py, module imports are of course cached. We need the connection table code to run every time, and module_watcher doesn't cut it since the file is not being modified (and if it were, *all* modules would be unloaded, which would defeat most of the purpose of batch_compiler and affect performance considerably).\r\n\r\nSo a function like this is necessary. This one has been in use in the chip lab since 2014.", "title": "add import_or_reload function", "destination": {"commit": {"hash": "27ba4252bbfa", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/27ba4252bbfa.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/27ba4252bbfa"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "88567a9b3f46", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/88567a9b3f46"}, "html": {"href": "#!/cbillington/labscript_utils/commits/88567a9b3f46"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "import_or_reload"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-03-13T20:29:41.523002+00:00"}, "pull_request": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/71"}}, "title": "add import_or_reload function"}}, {"update": {"description": "This function imports a module by name, or reloads it if it has already been imported.\r\n\r\nThis is useful for when you have a connection table that is imported by multiple scripts. For example, here in the chip lab we have a connectiontable.py which has at the bottom:\r\n\r\n```\r\nif __name__ == '__main__':\r\n    start()\r\n    stop(1)\r\n```\r\n\r\nWith experiment scripts importing this as a module instead of duplicating it as their own connection table. Whilst that duplication does have advantages, it is painful in practice to actually duplicate everything as opposed to having one well-maintained connection table file, and if it is in labscriptlib it is still saved to the h5 file for posterity. Wit that plus version control of userlib, it is not so bad to have a single shared connection table rather than duplication.\r\n\r\nHowever, in batch_compiler.py, module imports are of course cached. We need the connection table code to run every time, and module_watcher doesn't cut it since the file is not being modified (and if it were, *all* modules would be unloaded, which would defeat most of the purpose of batch_compiler and affect performance considerably).\r\n\r\nSo a function like this is necessary. This one has been in use in the chip lab since 2014.", "title": "add import_or_reload function", "destination": {"commit": {"hash": "27ba4252bbfa", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/27ba4252bbfa.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/27ba4252bbfa"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "88567a9b3f46", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/88567a9b3f46"}, "html": {"href": "#!/cbillington/labscript_utils/commits/88567a9b3f46"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "import_or_reload"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-03-13T20:28:28.526375+00:00"}, "pull_request": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/71"}}, "title": "add import_or_reload function"}}, {"update": {"description": "This function imports a module by name, or reloads it if it has already been imported.\r\n\r\nThis is useful for when you have a connection table that is imported by multiple scripts. For example, here in the chip lab we have a connectiontable.py which has at the bottom:\r\n\r\n```\r\nif __name__ == '__main__':\r\n    start()\r\n    stop(1)\r\n```\r\n\r\nWith experiment scripts importing this as a module instead of duplicating it as their own connection table. Whilst that duplication does have advantages, it is painful in practice to actually duplicate everything as opposed to having one well-maintained connection table file, and if it is in labscriptlib it is still saved to the h5 file for posterity. Wit that plus version control of userlib, it is not so bad to have a single shared connection table rather than duplication.\r\n\r\nHowever, in batch_compiler.py, module imports are of course cached. We need the connection table code to run every time, and module_watcher doesn't cut it since the file is not being modified (and if it were, *all* modules would be unloaded, which would defeat most of the purpose of batch_compiler and affect performance considerably).\r\n\r\nSo a function like this is necessary. This one has been in use in the chip lab since 2014.", "title": "add import_or_reload function", "destination": {"commit": {"hash": "27ba4252bbfa", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/27ba4252bbfa.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/27ba4252bbfa"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "88567a9b3f46", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/88567a9b3f46"}, "html": {"href": "#!/cbillington/labscript_utils/commits/88567a9b3f46"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "import_or_reload"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-03-13T20:28:28.448320+00:00"}, "pull_request": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/71.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/71"}}, "title": "add import_or_reload function"}}]}