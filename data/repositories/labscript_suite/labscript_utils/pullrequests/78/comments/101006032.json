{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/78/comments/101006032.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/78/_/diff#comment-101006032"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 78, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/78.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/78"}}, "title": "Import pywin32 at module-level rather than lazily"}, "content": {"raw": "This might not be whitelisting `pywintypes`, which is the origin of the exception observed in the above thread hijack. I\u2019ve got a minimal breaking example, which this PR doesn\u2019t resolve. Load the following as a lyse routine and run it: \n\n```python\nfrom some_module import some_function\r\nimport pywintypes\n```\n\nsome\\_module contains:\n\n```python\ndef some_function():\r\n    return\n```\n\nModify some\\_module and get the `some_module.py modified: all modules will be reloaded next run.` message. Subsequent runs return the following traceback:\n\n```python\nTraceback (most recent call last):\r\n  File \"C:\\labscript_suite\\userlib\\analysislib\\common\\pkg_resources_bug.py\", line 2, in <module>\r\n    import pywintypes\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\win32\\lib\\pywintypes.py\", line 136, in <module>\r\n    __import_pywin32_system_module__(\"pywintypes\", globals())\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\win32\\lib\\pywintypes.py\", line 129, in __import_pywin32_system_module__\r\n    assert sys.modules[modname] is not old_mod\r\nAssertionError\n```\n\nIf `pywintypes` is imported in some\\_module instead, the same error is observed.", "markup": "markdown", "html": "<p>This might not be whitelisting <code>pywintypes</code>, which is the origin of the exception observed in the above thread hijack. I\u2019ve got a minimal breaking example, which this PR doesn\u2019t resolve. Load the following as a lyse routine and run it: </p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">some_module</span> <span class=\"kn\">import</span> <span class=\"n\">some_function</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pywintypes</span>\n</pre></div>\n\n\n<p>some_module contains:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">some_function</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span>\n</pre></div>\n\n\n<p>Modify some_module and get the <code>some_module.py modified: all modules will be reloaded next run.</code> message. Subsequent runs return the following traceback:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\userlib</span><span class=\"se\">\\a</span><span class=\"s2\">nalysislib\\common\\pkg_resources_bug.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">pywintypes</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda3\\lib\\site-packages\\win32\\lib\\pywintypes.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">136</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">__import_pywin32_system_module__</span><span class=\"p\">(</span><span class=\"s2\">&quot;pywintypes&quot;</span><span class=\"p\">,</span> <span class=\"nb\">globals</span><span class=\"p\">())</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda3\\lib\\site-packages\\win32\\lib\\pywintypes.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">129</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">__import_pywin32_system_module__</span>\n    <span class=\"k\">assert</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"p\">[</span><span class=\"n\">modname</span><span class=\"p\">]</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"n\">old_mod</span>\n<span class=\"ne\">AssertionError</span>\n</pre></div>\n\n\n<p>If <code>pywintypes</code> is imported in some_module instead, the same error is observed.</p>", "type": "rendered"}, "created_on": "2019-05-06T14:20:07.725862+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": "2019-05-06T14:20:07.915440+00:00", "type": "pullrequest_comment", "id": 101006032}