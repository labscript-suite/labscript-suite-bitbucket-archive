{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8/comments/38676611.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8/_/diff#comment-38676611"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 8, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8"}}, "title": "Icons and smaller buttons for toolpalette widget"}, "content": {"raw": "I've realised the diff is displaying lines as changed that I didn't intentionally change. It appears that the file had mixed line-endings, some windows, some unix, and my text editor has gone and changed them all to one or the other. Looks like the file was created on Windows, but with some text copied into it from other files that were unix, on a text editor that didn't insist on all lines having the same endings (which is weird - I wonder which editor). And meld doesn't show line ending differences. Almost went under the radar, but diff itself clearly cares and so does bitbucket.\n\nI've gone and changed them all to unix line endings now, and so that this pull request is readable, here is the diff with whitespace/line endings ignored:\n\n\n```\n#!diff\n\ndiff -r 76eea814e6aa qtwidgets/toolpalette.py\n--- a/qtwidgets/toolpalette.py\tMon May 22 22:56:13 2017 +0000\n+++ b/qtwidgets/toolpalette.py\tTue Jun 13 14:36:44 2017 -0400\n@@ -20,6 +20,11 @@\n     from PyQt4.QtCore import *\n     from PyQt4.QtGui import *\n \n+import qtutils.icons\n+\n+EXPAND_ICON = ':/qtutils/fugue/toggle-small-expand'\n+CONTRACT_ICON = ':/qtutils/fugue/toggle-small'\n+\n class ToolPaletteGroup(QVBoxLayout):\n     \n     def __init__(self,*args,**kwargs):\n@@ -37,7 +42,22 @@\n         # Create the tool palette and store a reference to it and an index indicating the order of Tool Palettes\n         tool_palette = ToolPalette(self,name,*args,**kwargs)\n         push_button = QPushButton(name)        \n-        push_button.setSizePolicy(QSizePolicy.Expanding,QSizePolicy.Minimum)\n+        push_button.setIcon(QIcon(CONTRACT_ICON))\n+        push_button.setFocusPolicy(Qt.NoFocus)\n+        push_button.setToolTip('Click to hide')\n+\n+        frame = QFrame()\n+        frame.setFrameStyle(QFrame.StyledPanel)\n+        frame_layout = QVBoxLayout(frame)\n+        frame_layout.setContentsMargins(0,0,0,0)\n+        frame_layout.setSpacing(0)\n+\n+        header_widget = QWidget()\n+        header_layout = QHBoxLayout()\n+        header_layout.addWidget(push_button)\n+        header_layout.addStretch(1)\n+        header_widget.setLayout(header_layout)\n+        header_layout.setContentsMargins(3,3,3,3)\n         \n         def create_callback(name):\n             return lambda: self._on_button_clicked(name)\n@@ -45,10 +65,11 @@\n         push_button.clicked.connect(create_callback(name))\n         self._widget_groups[name] = (len(self._widget_groups),tool_palette, push_button)\n         \n+        frame_layout.addWidget(header_widget)\n+        frame_layout.addWidget(tool_palette)\n+        \n         # append to the layout\n-        self.addWidget(push_button)\n-        self.addWidget(self._widget_groups[name][1])\n-        \n+        self.addWidget(frame)\n         return tool_palette\n      \n     def _on_button_clicked(self,name):\n@@ -63,9 +84,10 @@\n     def show_palette(self,name):\n         if name not in self._widget_groups:\n             raise RuntimeError('The tool palette does not have a palette named %s'%name)\n-            \n-        self._widget_groups[name][1].show()\n-        #TODO: Update icon on the button\n+        _, palette, push_button = self._widget_groups[name]\n+        palette.show()\n+        push_button.setIcon(QIcon(CONTRACT_ICON))\n+        push_button.setToolTip('Click to hide')\n             \n     def show_palette_by_index(self,index):\n         self.show_palette(self.get_name_from_index(index))\n@@ -74,9 +96,10 @@\n         if name not in self._widget_groups:\n             raise RuntimeError('The tool palette does not have a palette named %s'%name)\n         \n-        self._widget_groups[name][1].hide()\n-        \n-        #TODO: Update icon on the button\n+        _, palette, push_button = self._widget_groups[name]\n+        palette.hide()\n+        push_button.setIcon(QIcon(EXPAND_ICON))\n+        push_button.setToolTip('Click to show')\n     \n     def hide_palette_by_index(self,index):\n         self.hide_palette(self.get_name_from_index(index))\n@@ -229,10 +252,12 @@\n     def __init__(self,parent,name,*args,**kwargs):\n         QScrollArea.__init__(self,*args,**kwargs)\n         self.setSizePolicy(QSizePolicy.MinimumExpanding,QSizePolicy.Minimum)\n+        self.setFrameStyle(QFrame.NoFrame)\n         # create the grid layout\n         #self.setWidget(QWidget(self))\n         #self.widget().setSizePolicy(QSizePolicy.Preferred,QSizePolicy.Preferred)\n         self._layout = QGridLayout(self) \n+        self._layout.setContentsMargins(3,0,3,3)\n         #self._layout.setMaximumSize(QSize(524287,524287))\n         #self._layout.setSizeConstraint(QLayout.SetMinAndMaxSize)\n         self._widget_list = []\n@@ -364,13 +389,9 @@\n         #pass resize event on to qwidget\n         # call layout()\n         QWidget.resizeEvent(self,event)\n-        \n         size = event.size()\n-        QTimer.singleShot(300, lambda size=size: self._update_layout(size))\n-        \n-    def _update_layout(self, size):\n-        if size.width() + 2 == self.size().width() and size.height()+2 == self.size().height():\n-            print 'relaying out widgets'\n+        if size.width() == self.size().width() and size.height() == self.size().height():\n+            # print 'relaying out widgets'\n             self._layout_widgets()\n \n \n\n\n```\n", "markup": "markdown", "html": "<p>I've realised the diff is displaying lines as changed that I didn't intentionally change. It appears that the file had mixed line-endings, some windows, some unix, and my text editor has gone and changed them all to one or the other. Looks like the file was created on Windows, but with some text copied into it from other files that were unix, on a text editor that didn't insist on all lines having the same endings (which is weird - I wonder which editor). And meld doesn't show line ending differences. Almost went under the radar, but diff itself clearly cares and so does bitbucket.</p>\n<p>I've gone and changed them all to unix line endings now, and so that this pull request is readable, here is the diff with whitespace/line endings ignored:</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gh\">diff -r 76eea814e6aa qtwidgets/toolpalette.py</span>\n<span class=\"gd\">--- a/qtwidgets/toolpalette.py  Mon May 22 22:56:13 2017 +0000</span>\n<span class=\"gi\">+++ b/qtwidgets/toolpalette.py  Tue Jun 13 14:36:44 2017 -0400</span>\n<span class=\"gu\">@@ -20,6 +20,11 @@</span>\n     from PyQt4.QtCore import *\n     from PyQt4.QtGui import *\n\n<span class=\"gi\">+import qtutils.icons</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+EXPAND_ICON = &#39;:/qtutils/fugue/toggle-small-expand&#39;</span>\n<span class=\"gi\">+CONTRACT_ICON = &#39;:/qtutils/fugue/toggle-small&#39;</span>\n<span class=\"gi\">+</span>\n class ToolPaletteGroup(QVBoxLayout):\n\n     def __init__(self,*args,**kwargs):\n<span class=\"gu\">@@ -37,7 +42,22 @@</span>\n         # Create the tool palette and store a reference to it and an index indicating the order of Tool Palettes\n         tool_palette = ToolPalette(self,name,*args,**kwargs)\n         push_button = QPushButton(name)        \n<span class=\"gd\">-        push_button.setSizePolicy(QSizePolicy.Expanding,QSizePolicy.Minimum)</span>\n<span class=\"gi\">+        push_button.setIcon(QIcon(CONTRACT_ICON))</span>\n<span class=\"gi\">+        push_button.setFocusPolicy(Qt.NoFocus)</span>\n<span class=\"gi\">+        push_button.setToolTip(&#39;Click to hide&#39;)</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+        frame = QFrame()</span>\n<span class=\"gi\">+        frame.setFrameStyle(QFrame.StyledPanel)</span>\n<span class=\"gi\">+        frame_layout = QVBoxLayout(frame)</span>\n<span class=\"gi\">+        frame_layout.setContentsMargins(0,0,0,0)</span>\n<span class=\"gi\">+        frame_layout.setSpacing(0)</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+        header_widget = QWidget()</span>\n<span class=\"gi\">+        header_layout = QHBoxLayout()</span>\n<span class=\"gi\">+        header_layout.addWidget(push_button)</span>\n<span class=\"gi\">+        header_layout.addStretch(1)</span>\n<span class=\"gi\">+        header_widget.setLayout(header_layout)</span>\n<span class=\"gi\">+        header_layout.setContentsMargins(3,3,3,3)</span>\n\n         def create_callback(name):\n             return lambda: self._on_button_clicked(name)\n<span class=\"gu\">@@ -45,10 +65,11 @@</span>\n         push_button.clicked.connect(create_callback(name))\n         self._widget_groups[name] = (len(self._widget_groups),tool_palette, push_button)\n\n<span class=\"gi\">+        frame_layout.addWidget(header_widget)</span>\n<span class=\"gi\">+        frame_layout.addWidget(tool_palette)</span>\n<span class=\"gi\">+        </span>\n         # append to the layout\n<span class=\"gd\">-        self.addWidget(push_button)</span>\n<span class=\"gd\">-        self.addWidget(self._widget_groups[name][1])</span>\n<span class=\"gd\">-        </span>\n<span class=\"gi\">+        self.addWidget(frame)</span>\n         return tool_palette\n\n     def _on_button_clicked(self,name):\n<span class=\"gu\">@@ -63,9 +84,10 @@</span>\n     def show_palette(self,name):\n         if name not in self._widget_groups:\n             raise RuntimeError(&#39;The tool palette does not have a palette named %s&#39;%name)\n<span class=\"gd\">-            </span>\n<span class=\"gd\">-        self._widget_groups[name][1].show()</span>\n<span class=\"gd\">-        #TODO: Update icon on the button</span>\n<span class=\"gi\">+        _, palette, push_button = self._widget_groups[name]</span>\n<span class=\"gi\">+        palette.show()</span>\n<span class=\"gi\">+        push_button.setIcon(QIcon(CONTRACT_ICON))</span>\n<span class=\"gi\">+        push_button.setToolTip(&#39;Click to hide&#39;)</span>\n\n     def show_palette_by_index(self,index):\n         self.show_palette(self.get_name_from_index(index))\n<span class=\"gu\">@@ -74,9 +96,10 @@</span>\n         if name not in self._widget_groups:\n             raise RuntimeError(&#39;The tool palette does not have a palette named %s&#39;%name)\n\n<span class=\"gd\">-        self._widget_groups[name][1].hide()</span>\n<span class=\"gd\">-        </span>\n<span class=\"gd\">-        #TODO: Update icon on the button</span>\n<span class=\"gi\">+        _, palette, push_button = self._widget_groups[name]</span>\n<span class=\"gi\">+        palette.hide()</span>\n<span class=\"gi\">+        push_button.setIcon(QIcon(EXPAND_ICON))</span>\n<span class=\"gi\">+        push_button.setToolTip(&#39;Click to show&#39;)</span>\n\n     def hide_palette_by_index(self,index):\n         self.hide_palette(self.get_name_from_index(index))\n<span class=\"gu\">@@ -229,10 +252,12 @@</span>\n     def __init__(self,parent,name,*args,**kwargs):\n         QScrollArea.__init__(self,*args,**kwargs)\n         self.setSizePolicy(QSizePolicy.MinimumExpanding,QSizePolicy.Minimum)\n<span class=\"gi\">+        self.setFrameStyle(QFrame.NoFrame)</span>\n         # create the grid layout\n         #self.setWidget(QWidget(self))\n         #self.widget().setSizePolicy(QSizePolicy.Preferred,QSizePolicy.Preferred)\n         self._layout = QGridLayout(self) \n<span class=\"gi\">+        self._layout.setContentsMargins(3,0,3,3)</span>\n         #self._layout.setMaximumSize(QSize(524287,524287))\n         #self._layout.setSizeConstraint(QLayout.SetMinAndMaxSize)\n         self._widget_list = []\n<span class=\"gu\">@@ -364,13 +389,9 @@</span>\n         #pass resize event on to qwidget\n         # call layout()\n         QWidget.resizeEvent(self,event)\n<span class=\"gd\">-        </span>\n         size = event.size()\n<span class=\"gd\">-        QTimer.singleShot(300, lambda size=size: self._update_layout(size))</span>\n<span class=\"gd\">-        </span>\n<span class=\"gd\">-    def _update_layout(self, size):</span>\n<span class=\"gd\">-        if size.width() + 2 == self.size().width() and size.height()+2 == self.size().height():</span>\n<span class=\"gd\">-            print &#39;relaying out widgets&#39;</span>\n<span class=\"gi\">+        if size.width() == self.size().width() and size.height() == self.size().height():</span>\n<span class=\"gi\">+            # print &#39;relaying out widgets&#39;</span>\n             self._layout_widgets()\n</pre></div>", "type": "rendered"}, "created_on": "2017-06-12T23:14:43.131722+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-13T18:37:54.342849+00:00", "type": "pullrequest_comment", "id": 38676611}