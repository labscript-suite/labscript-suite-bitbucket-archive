{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8/comments/38676611.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8/_/diff#comment-38676611"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 8, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8"}}, "title": "Icons and smaller buttons for toolpalette widget"}, "content": {"raw": "I've realised the diff is displaying lines as changed that I didn't intentionally change. It appears that the file had mixed line-endings, some windows, some unix, and my text editor has gone and changed them all to one or the other. Looks like the file was created on Windows, but with some text copied into it from other files that were unix, on a text editor that didn't insist on all lines having the same endings (which is weird - I wonder which editor). And meld doesn't show line ending differences. Almost went under the radar, but diff itself clearly cares and so does bitbucket.\n\nI've gone and changed them all to unix line endings now, and so that this pull request is readable, here is the diff with whitespace/line endings ignored:\n\n\n```\n#!diff\n\ndiff -r 76eea814e6aa qtwidgets/toolpalette.py\n--- a/qtwidgets/toolpalette.py\tMon May 22 22:56:13 2017 +0000\n+++ b/qtwidgets/toolpalette.py\tTue Jun 13 14:36:44 2017 -0400\n@@ -20,6 +20,11 @@\n     from PyQt4.QtCore import *\n     from PyQt4.QtGui import *\n \n+import qtutils.icons\n+\n+EXPAND_ICON = ':/qtutils/fugue/toggle-small-expand'\n+CONTRACT_ICON = ':/qtutils/fugue/toggle-small'\n+\n class ToolPaletteGroup(QVBoxLayout):\n     \n     def __init__(self,*args,**kwargs):\n@@ -37,7 +42,22 @@\n         # Create the tool palette and store a reference to it and an index indicating the order of Tool Palettes\n         tool_palette = ToolPalette(self,name,*args,**kwargs)\n         push_button = QPushButton(name)        \n-        push_button.setSizePolicy(QSizePolicy.Expanding,QSizePolicy.Minimum)\n+        push_button.setIcon(QIcon(CONTRACT_ICON))\n+        push_button.setFocusPolicy(Qt.NoFocus)\n+        push_button.setToolTip('Click to hide')\n+\n+        frame = QFrame()\n+        frame.setFrameStyle(QFrame.StyledPanel)\n+        frame_layout = QVBoxLayout(frame)\n+        frame_layout.setContentsMargins(0,0,0,0)\n+        frame_layout.setSpacing(0)\n+\n+        header_widget = QWidget()\n+        header_layout = QHBoxLayout()\n+        header_layout.addWidget(push_button)\n+        header_layout.addStretch(1)\n+        header_widget.setLayout(header_layout)\n+        header_layout.setContentsMargins(3,3,3,3)\n         \n         def create_callback(name):\n             return lambda: self._on_button_clicked(name)\n@@ -45,10 +65,11 @@\n         push_button.clicked.connect(create_callback(name))\n         self._widget_groups[name] = (len(self._widget_groups),tool_palette, push_button)\n         \n+        frame_layout.addWidget(header_widget)\n+        frame_layout.addWidget(tool_palette)\n+        \n         # append to the layout\n-        self.addWidget(push_button)\n-        self.addWidget(self._widget_groups[name][1])\n-        \n+        self.addWidget(frame)\n         return tool_palette\n      \n     def _on_button_clicked(self,name):\n@@ -63,9 +84,10 @@\n     def show_palette(self,name):\n         if name not in self._widget_groups:\n             raise RuntimeError('The tool palette does not have a palette named %s'%name)\n-            \n-        self._widget_groups[name][1].show()\n-        #TODO: Update icon on the button\n+        _, palette, push_button = self._widget_groups[name]\n+        palette.show()\n+        push_button.setIcon(QIcon(CONTRACT_ICON))\n+        push_button.setToolTip('Click to hide')\n             \n     def show_palette_by_index(self,index):\n         self.show_palette(self.get_name_from_index(index))\n@@ -74,9 +96,10 @@\n         if name not in self._widget_groups:\n             raise RuntimeError('The tool palette does not have a palette named %s'%name)\n         \n-        self._widget_groups[name][1].hide()\n-        \n-        #TODO: Update icon on the button\n+        _, palette, push_button = self._widget_groups[name]\n+        palette.hide()\n+        push_button.setIcon(QIcon(EXPAND_ICON))\n+        push_button.setToolTip('Click to show')\n     \n     def hide_palette_by_index(self,index):\n         self.hide_palette(self.get_name_from_index(index))\n@@ -229,10 +252,12 @@\n     def __init__(self,parent,name,*args,**kwargs):\n         QScrollArea.__init__(self,*args,**kwargs)\n         self.setSizePolicy(QSizePolicy.MinimumExpanding,QSizePolicy.Minimum)\n+        self.setFrameStyle(QFrame.NoFrame)\n         # create the grid layout\n         #self.setWidget(QWidget(self))\n         #self.widget().setSizePolicy(QSizePolicy.Preferred,QSizePolicy.Preferred)\n         self._layout = QGridLayout(self) \n+        self._layout.setContentsMargins(3,0,3,3)\n         #self._layout.setMaximumSize(QSize(524287,524287))\n         #self._layout.setSizeConstraint(QLayout.SetMinAndMaxSize)\n         self._widget_list = []\n@@ -364,13 +389,9 @@\n         #pass resize event on to qwidget\n         # call layout()\n         QWidget.resizeEvent(self,event)\n-        \n         size = event.size()\n-        QTimer.singleShot(300, lambda size=size: self._update_layout(size))\n-        \n-    def _update_layout(self, size):\n-        if size.width() + 2 == self.size().width() and size.height()+2 == self.size().height():\n-            print 'relaying out widgets'\n+        if size.width() == self.size().width() and size.height() == self.size().height():\n+            # print 'relaying out widgets'\n             self._layout_widgets()\n \n \n\n\n```\n", "markup": "markdown", "html": "<p>I've realised the diff is displaying lines as changed that I didn't intentionally change. It appears that the file had mixed line-endings, some windows, some unix, and my text editor has gone and changed them all to one or the other. Looks like the file was created on Windows, but with some text copied into it from other files that were unix, on a text editor that didn't insist on all lines having the same endings (which is weird - I wonder which editor). And meld doesn't show line ending differences. Almost went under the radar, but diff itself clearly cares and so does bitbucket.</p>\n<p>I've gone and changed them all to unix line endings now, and so that this pull request is readable, here is the diff with whitespace/line endings ignored:</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gh\">diff -r 76eea814e6aa qtwidgets/toolpalette.py</span>\n<span class=\"gd\">--- a/qtwidgets/toolpalette.py  Mon May 22 22:56:13 2017 +0000</span>\n<span class=\"gi\">+++ b/qtwidgets/toolpalette.py  Tue Jun 13 14:36:44 2017 -0400</span>\n<span class=\"gu\">@@ -20,6 +20,11 @@</span>\n     from PyQt4.QtCore import *\n     from PyQt4.QtGui import *\n\n<span class=\"gi\">+import qtutils.icons</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+EXPAND_ICON = &#39;:/qtutils/fugue/toggle-small-expand&#39;</span>\n<span class=\"gi\">+CONTRACT_ICON = &#39;:/qtutils/fugue/toggle-small&#39;</span>\n<span class=\"gi\">+</span>\n class ToolPaletteGroup(QVBoxLayout):\n\n     def __init__(self,*args,**kwargs):\n<span class=\"gu\">@@ -37,7 +42,22 @@</span>\n         # Create the tool palette and store a reference to it and an index indicating the order of Tool Palettes\n         tool_palette = ToolPalette(self,name,*args,**kwargs)\n         push_button = QPushButton(name)        \n<span class=\"gd\">-        push_button.setSizePolicy(QSizePolicy.Expanding,QSizePolicy.Minimum)</span>\n<span class=\"gi\">+        push_button.setIcon(QIcon(CONTRACT_ICON))</span>\n<span class=\"gi\">+        push_button.setFocusPolicy(Qt.NoFocus)</span>\n<span class=\"gi\">+        push_button.setToolTip(&#39;Click to hide&#39;)</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+        frame = QFrame()</span>\n<span class=\"gi\">+        frame.setFrameStyle(QFrame.StyledPanel)</span>\n<span class=\"gi\">+        frame_layout = QVBoxLayout(frame)</span>\n<span class=\"gi\">+        frame_layout.setContentsMargins(0,0,0,0)</span>\n<span class=\"gi\">+        frame_layout.setSpacing(0)</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+        header_widget = QWidget()</span>\n<span class=\"gi\">+        header_layout = QHBoxLayout()</span>\n<span class=\"gi\">+        header_layout.addWidget(push_button)</span>\n<span class=\"gi\">+        header_layout.addStretch(1)</span>\n<span class=\"gi\">+        header_widget.setLayout(header_layout)</span>\n<span class=\"gi\">+        header_layout.setContentsMargins(3,3,3,3)</span>\n\n         def create_callback(name):\n             return lambda: self._on_button_clicked(name)\n<span class=\"gu\">@@ -45,10 +65,11 @@</span>\n         push_button.clicked.connect(create_callback(name))\n         self._widget_groups[name] = (len(self._widget_groups),tool_palette, push_button)\n\n<span class=\"gi\">+        frame_layout.addWidget(header_widget)</span>\n<span class=\"gi\">+        frame_layout.addWidget(tool_palette)</span>\n<span class=\"gi\">+        </span>\n         # append to the layout\n<span class=\"gd\">-        self.addWidget(push_button)</span>\n<span class=\"gd\">-        self.addWidget(self._widget_groups[name][1])</span>\n<span class=\"gd\">-        </span>\n<span class=\"gi\">+        self.addWidget(frame)</span>\n         return tool_palette\n\n     def _on_button_clicked(self,name):\n<span class=\"gu\">@@ -63,9 +84,10 @@</span>\n     def show_palette(self,name):\n         if name not in self._widget_groups:\n             raise RuntimeError(&#39;The tool palette does not have a palette named %s&#39;%name)\n<span class=\"gd\">-            </span>\n<span class=\"gd\">-        self._widget_groups[name][1].show()</span>\n<span class=\"gd\">-        #TODO: Update icon on the button</span>\n<span class=\"gi\">+        _, palette, push_button = self._widget_groups[name]</span>\n<span class=\"gi\">+        palette.show()</span>\n<span class=\"gi\">+        push_button.setIcon(QIcon(CONTRACT_ICON))</span>\n<span class=\"gi\">+        push_button.setToolTip(&#39;Click to hide&#39;)</span>\n\n     def show_palette_by_index(self,index):\n         self.show_palette(self.get_name_from_index(index))\n<span class=\"gu\">@@ -74,9 +96,10 @@</span>\n         if name not in self._widget_groups:\n             raise RuntimeError(&#39;The tool palette does not have a palette named %s&#39;%name)\n\n<span class=\"gd\">-        self._widget_groups[name][1].hide()</span>\n<span class=\"gd\">-        </span>\n<span class=\"gd\">-        #TODO: Update icon on the button</span>\n<span class=\"gi\">+        _, palette, push_button = self._widget_groups[name]</span>\n<span class=\"gi\">+        palette.hide()</span>\n<span class=\"gi\">+        push_button.setIcon(QIcon(EXPAND_ICON))</span>\n<span class=\"gi\">+        push_button.setToolTip(&#39;Click to show&#39;)</span>\n\n     def hide_palette_by_index(self,index):\n         self.hide_palette(self.get_name_from_index(index))\n<span class=\"gu\">@@ -229,10 +252,12 @@</span>\n     def __init__(self,parent,name,*args,**kwargs):\n         QScrollArea.__init__(self,*args,**kwargs)\n         self.setSizePolicy(QSizePolicy.MinimumExpanding,QSizePolicy.Minimum)\n<span class=\"gi\">+        self.setFrameStyle(QFrame.NoFrame)</span>\n         # create the grid layout\n         #self.setWidget(QWidget(self))\n         #self.widget().setSizePolicy(QSizePolicy.Preferred,QSizePolicy.Preferred)\n         self._layout = QGridLayout(self) \n<span class=\"gi\">+        self._layout.setContentsMargins(3,0,3,3)</span>\n         #self._layout.setMaximumSize(QSize(524287,524287))\n         #self._layout.setSizeConstraint(QLayout.SetMinAndMaxSize)\n         self._widget_list = []\n<span class=\"gu\">@@ -364,13 +389,9 @@</span>\n         #pass resize event on to qwidget\n         # call layout()\n         QWidget.resizeEvent(self,event)\n<span class=\"gd\">-        </span>\n         size = event.size()\n<span class=\"gd\">-        QTimer.singleShot(300, lambda size=size: self._update_layout(size))</span>\n<span class=\"gd\">-        </span>\n<span class=\"gd\">-    def _update_layout(self, size):</span>\n<span class=\"gd\">-        if size.width() + 2 == self.size().width() and size.height()+2 == self.size().height():</span>\n<span class=\"gd\">-            print &#39;relaying out widgets&#39;</span>\n<span class=\"gi\">+        if size.width() == self.size().width() and size.height() == self.size().height():</span>\n<span class=\"gi\">+            # print &#39;relaying out widgets&#39;</span>\n             self._layout_widgets()\n</pre></div>", "type": "rendered"}, "created_on": "2017-06-12T23:14:43.131722+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-13T18:37:54.342849+00:00", "type": "pullrequest_comment", "id": 38676611}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8/comments/38682102.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8/_/diff#comment-38682102"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 8, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8"}}, "title": "Icons and smaller buttons for toolpalette widget"}, "content": {"raw": "I've done this because I'm adding icons to most buttons in BLACS, as well as applying the same (default) theming to BLACS as runmanager and lyse have (i.e. borderless buttons). The header buttons look pretty silly in BLACS stretched all the way out with no border - borderless buttons with no contrasting colours only really make sense if the button outline is pretty tight around the text, so that's the idea behind shrinking the buttons. They look pretty sensible in BLACS with what I'm working on in my opinion, which I'll make a pull request for tomorrow.", "markup": "markdown", "html": "<p>I've done this because I'm adding icons to most buttons in BLACS, as well as applying the same (default) theming to BLACS as runmanager and lyse have (i.e. borderless buttons). The header buttons look pretty silly in BLACS stretched all the way out with no border - borderless buttons with no contrasting colours only really make sense if the button outline is pretty tight around the text, so that's the idea behind shrinking the buttons. They look pretty sensible in BLACS with what I'm working on in my opinion, which I'll make a pull request for tomorrow.</p>", "type": "rendered"}, "created_on": "2017-06-13T02:48:12.644031+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-13T02:48:12.646547+00:00", "type": "pullrequest_comment", "id": 38682102}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8/comments/38685075.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8/_/diff#comment-38685075"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 8, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8"}}, "title": "Icons and smaller buttons for toolpalette widget"}, "content": {"raw": "I assume the figure is not showing what it looks like with borderless buttons? It kind of looks weird to me in the above picture, because it's not particularly clear that the grid of buttons is linked to the button above. Maybe we could draw a box around each group (encompassing the show/hide button and grid of buttons) and change the spacing (less space between show/hide button and grid of buttons to differentiate between the spacing that is between the two show/hide buttons in your picture?). You might want to add @shaunj to review too since he uses BLACS the most at the moment.\n\nAlso, can you make sure that your incoming changes for BLACS theme are compatible with the Custom Qt stylesheets that people can apply via the BLACS preferences menu? Or even, can you apply the changes you want via the Qt stylesheets? Just a heads up anyway in case you were't aware of that feature in BLACS. @shaunj can provide our custom Qt stylesheet for testing if you'd like it.", "markup": "markdown", "html": "<p>I assume the figure is not showing what it looks like with borderless buttons? It kind of looks weird to me in the above picture, because it's not particularly clear that the grid of buttons is linked to the button above. Maybe we could draw a box around each group (encompassing the show/hide button and grid of buttons) and change the spacing (less space between show/hide button and grid of buttons to differentiate between the spacing that is between the two show/hide buttons in your picture?). You might want to add @shaunj to review too since he uses BLACS the most at the moment.</p>\n<p>Also, can you make sure that your incoming changes for BLACS theme are compatible with the Custom Qt stylesheets that people can apply via the BLACS preferences menu? Or even, can you apply the changes you want via the Qt stylesheets? Just a heads up anyway in case you were't aware of that feature in BLACS. @shaunj can provide our custom Qt stylesheet for testing if you'd like it.</p>", "type": "rendered"}, "created_on": "2017-06-13T04:53:28.910769+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-06-13T04:53:28.919707+00:00", "type": "pullrequest_comment", "id": 38685075}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8/comments/38685270.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8/_/diff#comment-38685270"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 8, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8"}}, "title": "Icons and smaller buttons for toolpalette widget"}, "content": {"raw": "It looks more sensible in BLACS I think, screenshot:\n\n![Screenshot from 2017-06-13 00-55-47.png](data/bitbucket.org/repo/xg9BdE/images/3237790132-Screenshot_from_2017-06-13_00-55-47.png)\n\nBut yeah, why not extend that box that's around the buttons anyway to include the expand/collapse button?\n\nYep, the BLACS business is compatible with the custom stylesheets. Basically I'm setting a stylesheet on the BLACS main widget in Qt Designer, which everything else inherits. This would override what the custom style-sheets would do, because they are set on the QApplication, which is higher in the inheritance hierarchy. So what I did was to modify the extension to set the style on the main widget instead of the QApplication - appending the custom stylesheet to the default one I put there so that the custom rules override anything I do. It seems to work.", "markup": "markdown", "html": "<p>It looks more sensible in BLACS I think, screenshot:</p>\n<p><img alt=\"Screenshot from 2017-06-13 00-55-47.png\" src=\"data/bitbucket.org/repo/xg9BdE/images/3237790132-Screenshot_from_2017-06-13_00-55-47.png\" /></p>\n<p>But yeah, why not extend that box that's around the buttons anyway to include the expand/collapse button?</p>\n<p>Yep, the BLACS business is compatible with the custom stylesheets. Basically I'm setting a stylesheet on the BLACS main widget in Qt Designer, which everything else inherits. This would override what the custom style-sheets would do, because they are set on the QApplication, which is higher in the inheritance hierarchy. So what I did was to modify the extension to set the style on the main widget instead of the QApplication - appending the custom stylesheet to the default one I put there so that the custom rules override anything I do. It seems to work.</p>", "type": "rendered"}, "created_on": "2017-06-13T05:00:26.531392+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-13T05:01:58.629101+00:00", "type": "pullrequest_comment", "id": 38685270}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8/comments/38685417.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8/_/diff#comment-38685417"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 8, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8"}}, "title": "Icons and smaller buttons for toolpalette widget"}, "content": {"raw": "Or add an extra box, I'm not sure what looks best without wasting too many pixels.", "markup": "markdown", "html": "<p>Or add an extra box, I'm not sure what looks best without wasting too many pixels.</p>", "type": "rendered"}, "created_on": "2017-06-13T05:05:57.227922+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-13T05:05:57.230135+00:00", "type": "pullrequest_comment", "id": 38685417}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8/comments/38687286.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8/_/diff#comment-38687286"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 8, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8"}}, "title": "Icons and smaller buttons for toolpalette widget"}, "content": {"raw": "Better? (Updated diff in earlier comment)\n\n![Screenshot from 2017-06-13 02-01-24.png](data/bitbucket.org/repo/xg9BdE/images/1024291132-Screenshot_from_2017-06-13_02-01-24.png)\n\n![Screenshot from 2017-06-13 02-03-45.png](data/bitbucket.org/repo/xg9BdE/images/3897014794-Screenshot_from_2017-06-13_02-03-45.png)", "markup": "markdown", "html": "<p>Better? (Updated diff in earlier comment)</p>\n<p><img alt=\"Screenshot from 2017-06-13 02-01-24.png\" src=\"data/bitbucket.org/repo/xg9BdE/images/1024291132-Screenshot_from_2017-06-13_02-01-24.png\" /></p>\n<p><img alt=\"Screenshot from 2017-06-13 02-03-45.png\" src=\"data/bitbucket.org/repo/xg9BdE/images/3897014794-Screenshot_from_2017-06-13_02-03-45.png\" /></p>", "type": "rendered"}, "created_on": "2017-06-13T05:57:53.674202+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-13T06:04:09.326108+00:00", "type": "pullrequest_comment", "id": 38687286}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8/comments/38690187.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8/_/diff#comment-38690187"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 8, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8"}}, "title": "Icons and smaller buttons for toolpalette widget"}, "content": {"raw": "Cool, looking good! (reminds me of the original gtk version)\n\nOur lab's fork is a bit behind at the moment, but I'll try to get it up to date and test these changes out tomorrow to see how it looks with real devices etc and make sure there aren't any obvious issues.", "markup": "markdown", "html": "<p>Cool, looking good! (reminds me of the original gtk version)</p>\n<p>Our lab's fork is a bit behind at the moment, but I'll try to get it up to date and test these changes out tomorrow to see how it looks with real devices etc and make sure there aren't any obvious issues.</p>", "type": "rendered"}, "created_on": "2017-06-13T06:52:45.784822+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-13T06:52:45.787265+00:00", "type": "pullrequest_comment", "id": 38690187}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8/comments/38837700.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8/_/diff#comment-38837700"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 8, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8"}}, "title": "Icons and smaller buttons for toolpalette widget"}, "content": {"raw": "I encountered a problem when restarting a tab repeatedly in quick succession, occasionally the QTimer that was being used to delay relaying out the widgets would fire and find that the widgets no longer existed due to a device restart, raising an exception.\n\nI've now made it so that the relaying out happens immediately rather than after a timeout. This does not seem to have any negative performance implications, and makes the resizing more responsive, so seems like a win, if I haven't missed anything here. My guess is that the QTimer was to prevent doing needless re-laying-out when a resize was in progress, i.e. it was to \"stack\" the resize events so that only the latest would be responded to in effect, rather than building up a backlog of events to be processed. However, I believe Qt already stacks resize events like this - if there are two resize events in its event queue it discards the older one. So I think there is unlikely to be any performance problems to writing code that responds to every resize event without delay.", "markup": "markdown", "html": "<p>I encountered a problem when restarting a tab repeatedly in quick succession, occasionally the QTimer that was being used to delay relaying out the widgets would fire and find that the widgets no longer existed due to a device restart, raising an exception.</p>\n<p>I've now made it so that the relaying out happens immediately rather than after a timeout. This does not seem to have any negative performance implications, and makes the resizing more responsive, so seems like a win, if I haven't missed anything here. My guess is that the QTimer was to prevent doing needless re-laying-out when a resize was in progress, i.e. it was to \"stack\" the resize events so that only the latest would be responded to in effect, rather than building up a backlog of events to be processed. However, I believe Qt already stacks resize events like this - if there are two resize events in its event queue it discards the older one. So I think there is unlikely to be any performance problems to writing code that responds to every resize event without delay.</p>", "type": "rendered"}, "created_on": "2017-06-14T16:18:46.912577+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-14T16:18:46.915377+00:00", "type": "pullrequest_comment", "id": 38837700}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8/comments/38862596.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8/_/diff#comment-38862596"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 8, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8"}}, "title": "Icons and smaller buttons for toolpalette widget"}, "content": {"raw": "Yeah, I feel like there was a reason for the use of the `QTimer`, but I can't remember what. There is a good chance I was just wrong and didn't need it as you say. Have to checked to make sure that resizing doesn't adversely block the main thread during a running shot? I'm wondering if maybe it slows down the rapid checking of the pulseblaster, or even blocks the main thread in some instances? I do remember trying to avoid those sort of things (but maybe I'm getting confused with drag-drop of shots into the queue blocking the main thread?). I'm pretty sure somewhere there is a user interaction that blocks the main thread, and I tried to avoid it. \n\nMaybe @shaunj can check some of these things quickly?", "markup": "markdown", "html": "<p>Yeah, I feel like there was a reason for the use of the <code>QTimer</code>, but I can't remember what. There is a good chance I was just wrong and didn't need it as you say. Have to checked to make sure that resizing doesn't adversely block the main thread during a running shot? I'm wondering if maybe it slows down the rapid checking of the pulseblaster, or even blocks the main thread in some instances? I do remember trying to avoid those sort of things (but maybe I'm getting confused with drag-drop of shots into the queue blocking the main thread?). I'm pretty sure somewhere there is a user interaction that blocks the main thread, and I tried to avoid it. </p>\n<p>Maybe @shaunj can check some of these things quickly?</p>", "type": "rendered"}, "created_on": "2017-06-14T23:18:22.898070+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-06-14T23:18:22.907554+00:00", "type": "pullrequest_comment", "id": 38862596}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8/comments/38863089.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8/_/diff#comment-38863089"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 8, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8"}}, "title": "Icons and smaller buttons for toolpalette widget"}, "content": {"raw": "The only weird behaviour I can find is that if you click a tab heading and drag it around to re-position it quickly, sometimes the window seems to change to show a different tab to the one that you're dragging, and once you let go of the header, none of the tab headings are attached to the currently visible one (i.e. it looks as though no tabs are currently selected). I rolled back to the previous revision, and this still occurred, so I don't think that it's related, I'll file a bug report! (Is this likely to be a BLACS bug or a labscript_utils bug?)\n\n![no_tab_selected.PNG](data/bitbucket.org/repo/xg9BdE/images/304694634-no_tab_selected.PNG)\n", "markup": "markdown", "html": "<p>The only weird behaviour I can find is that if you click a tab heading and drag it around to re-position it quickly, sometimes the window seems to change to show a different tab to the one that you're dragging, and once you let go of the header, none of the tab headings are attached to the currently visible one (i.e. it looks as though no tabs are currently selected). I rolled back to the previous revision, and this still occurred, so I don't think that it's related, I'll file a bug report! (Is this likely to be a BLACS bug or a labscript_utils bug?)</p>\n<p><img alt=\"no_tab_selected.PNG\" src=\"data/bitbucket.org/repo/xg9BdE/images/304694634-no_tab_selected.PNG\" /></p>", "type": "rendered"}, "created_on": "2017-06-14T23:33:30.286288+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-14T23:34:12.878245+00:00", "type": "pullrequest_comment", "id": 38863089}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8/comments/38863320.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8/_/diff#comment-38863320"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 8, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8"}}, "title": "Icons and smaller buttons for toolpalette widget"}, "content": {"raw": "Yikes! You rolled back the icons changes? Because there was some code in the tab text colour handling which looked like it was explicitly there in order to handle the fact that the tab might be mid-drag, and so I was modifying that making it do the same for icons as well as text colour. So I wonder if I broke it or not (I was certainly trying to cooperate. You can see the changes I made [here](#!/labscript_suite/blacs/pull-requests/7/icons-and-some-pixel-saving/diff#Ltab_base_classes.pyF338), all I did was rename the timer and add updating of the icon as well as the text - actually it looks like I have a wrong variable name for the timer there! I'll confirm.).\n\nPhil, there is this blog post that seems like it advises what you did with the timer:\n\nhttp://robertfelten.com/2013/08/20/tip-for-resizing-qt-windows/\n\nIt's mostly about increasing responsiveness when the computation of the widget size is going to take some time, not so much about reducing the total time the main thread is busy. Obviously decreasing the time the main thread is busy is good too, but I think there is also some kind of priority to how Qt processes events, and it might be that the PulseBlaster status checks take more priority anyway. I'm not sure though. \n\nIf there are issues there though, we could also address them by making the Pulseblaster status checks do 1 second worth of checks at a time in the subprocess, returning if it finds the status it's waiting for, rather than returning to the parent process and hitting the GUI event loop with every poll of the status.", "markup": "markdown", "html": "<p>Yikes! You rolled back the icons changes? Because there was some code in the tab text colour handling which looked like it was explicitly there in order to handle the fact that the tab might be mid-drag, and so I was modifying that making it do the same for icons as well as text colour. So I wonder if I broke it or not (I was certainly trying to cooperate. You can see the changes I made <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/pull-requests/7/icons-and-some-pixel-saving/diff#Ltab_base_classes.pyF338\" rel=\"nofollow\">here</a>, all I did was rename the timer and add updating of the icon as well as the text - actually it looks like I have a wrong variable name for the timer there! I'll confirm.).</p>\n<p>Phil, there is this blog post that seems like it advises what you did with the timer:</p>\n<p><a href=\"http://robertfelten.com/2013/08/20/tip-for-resizing-qt-windows/\" rel=\"nofollow\" class=\"ap-connect-link\">http://robertfelten.com/2013/08/20/tip-for-resizing-qt-windows/</a></p>\n<p>It's mostly about increasing responsiveness when the computation of the widget size is going to take some time, not so much about reducing the total time the main thread is busy. Obviously decreasing the time the main thread is busy is good too, but I think there is also some kind of priority to how Qt processes events, and it might be that the PulseBlaster status checks take more priority anyway. I'm not sure though. </p>\n<p>If there are issues there though, we could also address them by making the Pulseblaster status checks do 1 second worth of checks at a time in the subprocess, returning if it finds the status it's waiting for, rather than returning to the parent process and hitting the GUI event loop with every poll of the status.</p>", "type": "rendered"}, "created_on": "2017-06-14T23:39:53.474789+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-14T23:42:53.357581+00:00", "type": "pullrequest_comment", "id": 38863320}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8/comments/38863515.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8/_/diff#comment-38863515"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 8, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8"}}, "title": "Icons and smaller buttons for toolpalette widget"}, "content": {"raw": "I only rolled back the last commit about the QTimer initially, but I just went all the way back to before any of the icon pull requests and it's still happening, so it's nothing to do with these!", "markup": "markdown", "html": "<p>I only rolled back the last commit about the QTimer initially, but I just went all the way back to before any of the icon pull requests and it's still happening, so it's nothing to do with these!</p>", "type": "rendered"}, "created_on": "2017-06-14T23:46:04.680242+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-14T23:46:04.682697+00:00", "type": "pullrequest_comment", "id": 38863515}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8/comments/38864090.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8/_/diff#comment-38864090"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 8, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8"}}, "title": "Icons and smaller buttons for toolpalette widget"}, "content": {"raw": "Note for future testing, back up the BLACS configuration h5 file! Not sure if it's because I accidentally updated back to the latest revision while BLACS was still running, but I had to delete my h5 file to get it to start again.\n\nWhen re-arranging my tabs back to the way they're usually set up, I managed to lose an NI card entirely. I'm not really sure what happened, but I moved it to an empty tab area, then I think that it was as I was trying to drag a second NI card to that area that one of them vanished!", "markup": "markdown", "html": "<p>Note for future testing, back up the BLACS configuration h5 file! Not sure if it's because I accidentally updated back to the latest revision while BLACS was still running, but I had to delete my h5 file to get it to start again.</p>\n<p>When re-arranging my tabs back to the way they're usually set up, I managed to lose an NI card entirely. I'm not really sure what happened, but I moved it to an empty tab area, then I think that it was as I was trying to drag a second NI card to that area that one of them vanished!</p>", "type": "rendered"}, "created_on": "2017-06-15T00:06:32.225337+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-15T00:06:32.228486+00:00", "type": "pullrequest_comment", "id": 38864090}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8/comments/38864110.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8/_/diff#comment-38864110"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 8, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8"}}, "title": "Icons and smaller buttons for toolpalette widget"}, "content": {"raw": "Well, I suppose that's good and bad! So, although it's unrelated, I found an issue I introduced to the part of the code that handled updating tab headers while they were being dragged, and I've committed a fix to the other pull request.\n\nBasically whenever a tab is being dragged, it doesn't belong to any notebook, so the code can't find which tab-bar to set the icon/text colour on. So it sets a timer to do it later once the drag has finished. My bug looks like it was not stopping this timer once the tab was updated. But that would have had not much effect - it would have just left a timer running continually updated the tab to be what it already is ever 100 ms.", "markup": "markdown", "html": "<p>Well, I suppose that's good and bad! So, although it's unrelated, I found an issue I introduced to the part of the code that handled updating tab headers while they were being dragged, and I've committed a fix to the other pull request.</p>\n<p>Basically whenever a tab is being dragged, it doesn't belong to any notebook, so the code can't find which tab-bar to set the icon/text colour on. So it sets a timer to do it later once the drag has finished. My bug looks like it was not stopping this timer once the tab was updated. But that would have had not much effect - it would have just left a timer running continually updated the tab to be what it already is ever 100 ms.</p>", "type": "rendered"}, "created_on": "2017-06-15T00:07:06.321503+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-15T00:07:06.323760+00:00", "type": "pullrequest_comment", "id": 38864110}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8/comments/38953683.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8/_/diff#comment-38953683"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 8, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8"}}, "title": "Icons and smaller buttons for toolpalette widget"}, "content": {"raw": "Is this ready for merging then?\n\nThe issue @shaunj has raised is unrelated to this pull request, is logged as an issue in the tracker, and is difficult to fix (although I think I've worked out how to do it...but I kinda want to just refactor all of the dragdroptab code because it is terrible)", "markup": "markdown", "html": "<p>Is this ready for merging then?</p>\n<p>The issue @shaunj has raised is unrelated to this pull request, is logged as an issue in the tracker, and is difficult to fix (although I think I've worked out how to do it...but I kinda want to just refactor all of the dragdroptab code because it is terrible)</p>", "type": "rendered"}, "created_on": "2017-06-16T03:39:31.193262+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-06-16T03:39:31.201791+00:00", "type": "pullrequest_comment", "id": 38953683}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8/comments/38953728.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8/_/diff#comment-38953728"}}, "parent": {"id": 38953683, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8/comments/38953683.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8/_/diff#comment-38953683"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 8, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/8.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/8"}}, "title": "Icons and smaller buttons for toolpalette widget"}, "content": {"raw": "I have nothing further on this pull request, so am happy for it to be merged.", "markup": "markdown", "html": "<p>I have nothing further on this pull request, so am happy for it to be merged.</p>", "type": "rendered"}, "created_on": "2017-06-16T03:41:21.806620+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-16T03:41:21.809511+00:00", "type": "pullrequest_comment", "id": 38953728}], "page": 1, "size": 16}