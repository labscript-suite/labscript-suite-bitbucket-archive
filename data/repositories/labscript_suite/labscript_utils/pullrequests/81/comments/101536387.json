{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/81/comments/101536387.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/81/_/diff#comment-101536387"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 81, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/81.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/81"}}, "title": "Include all package dirs in Modulewatcher whitelist"}, "content": {"raw": "The diff looks ugly, but it\u2019s mainly because I have split the unloading into a separate function to the checking, and so all that code got got dedented.\n\nThe reason I split it into a separate function was so that the checking could finish checking _all_ modues before attempting to unload any of them. This is because modules in standard package directories aren\u2019t in the whitelist until they are first seen, so ModuleWatcher needs a chance to see them before it calls unload, otherwise they won\u2019t be in the whitelist yet so it might unload them.\n\nActually, for the same reason I\u2019d better change ModuleWatcher to hold the import lock during both checking and unloading, otherwise a module could be imported in between and not get a chance to be added to the whitelist. Edit: done.", "markup": "markdown", "html": "<p>The diff looks ugly, but it\u2019s mainly because I have split the unloading into a separate function to the checking, and so all that code got got dedented.</p>\n<p>The reason I split it into a separate function was so that the checking could finish checking <em>all</em> modues before attempting to unload any of them. This is because modules in standard package directories aren\u2019t in the whitelist until they are first seen, so ModuleWatcher needs a chance to see them before it calls unload, otherwise they won\u2019t be in the whitelist yet so it might unload them.</p>\n<p>Actually, for the same reason I\u2019d better change ModuleWatcher to hold the import lock during both checking and unloading, otherwise a module could be imported in between and not get a chance to be added to the whitelist. Edit: done.</p>", "type": "rendered"}, "created_on": "2019-05-09T22:52:58.739838+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-05-09T23:05:00.351624+00:00", "type": "pullrequest_comment", "id": 101536387}