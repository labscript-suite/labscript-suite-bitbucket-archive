{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/81/comments/101536387.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/81/_/diff#comment-101536387"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 81, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/81.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/81"}}, "title": "Include all package dirs in Modulewatcher whitelist"}, "content": {"raw": "The diff looks ugly, but it\u2019s mainly because I have split the unloading into a separate function to the checking, and so all that code got got dedented.\n\nThe reason I split it into a separate function was so that the checking could finish checking _all_ modues before attempting to unload any of them. This is because modules in standard package directories aren\u2019t in the whitelist until they are first seen, so ModuleWatcher needs a chance to see them before it calls unload, otherwise they won\u2019t be in the whitelist yet so it might unload them.\n\nActually, for the same reason I\u2019d better change ModuleWatcher to hold the import lock during both checking and unloading, otherwise a module could be imported in between and not get a chance to be added to the whitelist. Edit: done.", "markup": "markdown", "html": "<p>The diff looks ugly, but it\u2019s mainly because I have split the unloading into a separate function to the checking, and so all that code got got dedented.</p>\n<p>The reason I split it into a separate function was so that the checking could finish checking <em>all</em> modues before attempting to unload any of them. This is because modules in standard package directories aren\u2019t in the whitelist until they are first seen, so ModuleWatcher needs a chance to see them before it calls unload, otherwise they won\u2019t be in the whitelist yet so it might unload them.</p>\n<p>Actually, for the same reason I\u2019d better change ModuleWatcher to hold the import lock during both checking and unloading, otherwise a module could be imported in between and not get a chance to be added to the whitelist. Edit: done.</p>", "type": "rendered"}, "created_on": "2019-05-09T22:52:58.739838+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-05-09T23:05:00.351624+00:00", "type": "pullrequest_comment", "id": 101536387}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/81/comments/101543712.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/81/_/diff#comment-101543712"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 81, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/81.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/81"}}, "title": "Include all package dirs in Modulewatcher whitelist"}, "content": {"raw": "There's an indentation error in `unload`: it does nothing unless `self.debug=True`.  Check using the minimal example in issue #23:\n\n* Changes to some\\_module are detected, but it is not reloaded.\n\nDedenting at `for name in sorted(sys.modules)`, I see the same issue reported there, i.e. `tensorflow.*` \\(and many other standard packages\\) are not whitelisted. ", "markup": "markdown", "html": "<p>There's an indentation error in <code>unload</code>: it does nothing unless <code>self.debug=True</code>.  Check using the minimal example in issue <a href=\"#!/labscript_suite/labscript_utils/issues/23/modulewatcher-ability-to-append-to\" rel=\"nofollow\" title=\"ModuleWatcher: ability to append to whitelist\" class=\"ap-connect-link\">#23</a>:</p>\n<ul>\n<li>Changes to some_module are detected, but it is not reloaded.</li>\n</ul>\n<p>Dedenting at <code>for name in sorted(sys.modules)</code>, I see the same issue reported there, i.e. <code>tensorflow.*</code> (and many other standard packages) are not whitelisted. </p>", "type": "rendered"}, "created_on": "2019-05-10T01:31:29.384280+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": "2019-05-10T01:31:29.391433+00:00", "type": "pullrequest_comment", "id": 101543712}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/81/comments/101543787.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/81/_/diff#comment-101543787"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 81, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/81.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/81"}}, "title": "Include all package dirs in Modulewatcher whitelist"}, "content": {"raw": "I also saw this when changing the number of active routines in lyse:\n\n```python\nTraceback (most recent call last):\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\threading.py\", line 865, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"C:\\labscript_suite\\labscript_utils\\modulewatcher.py\", line 59, in mainloop\r\n    if self.check():\r\n  File \"C:\\labscript_suite\\labscript_utils\\modulewatcher.py\", line 69, in check\r\n    for name, module in sys.modules.items():\r\nRuntimeError: dictionary changed size during iteration\n```", "markup": "markdown", "html": "<p>I also saw this when changing the number of active routines in lyse:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda3\\lib</span><span class=\"se\">\\t</span><span class=\"s2\">hreading.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">865</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">run</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_target</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript_utils\\modulewatcher.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">59</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">mainloop</span>\n    <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">check</span><span class=\"p\">():</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript_utils\\modulewatcher.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">69</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">check</span>\n    <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">module</span> <span class=\"ow\">in</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n<span class=\"ne\">RuntimeError</span><span class=\"p\">:</span> <span class=\"n\">dictionary</span> <span class=\"n\">changed</span> <span class=\"n\">size</span> <span class=\"n\">during</span> <span class=\"n\">iteration</span>\n</pre></div>", "type": "rendered"}, "created_on": "2019-05-10T01:33:24.895215+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": "2019-05-10T01:33:24.902277+00:00", "type": "pullrequest_comment", "id": 101543787}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/81/comments/101545047.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/81/_/diff#comment-101545047"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 81, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/81.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/81"}}, "title": "Include all package dirs in Modulewatcher whitelist"}, "content": {"raw": "Thanks for testing, looks like I have some major screwups.\n\nThe `dictionary changed size during iteration` error is annoying, because I removed the `.copy()` call on that dict specifically because we're not modifying it anymore from within this function. Also, we're holding the import lock - but I guess some function we're calling must contain a lazy import for something not already imported. I'll just put back in the `.copy()`.\n\nAnd I'll try to reproduce your testcase to get clear evidence that it's actually fixed!", "markup": "markdown", "html": "<p>Thanks for testing, looks like I have some major screwups.</p>\n<p>The <code>dictionary changed size during iteration</code> error is annoying, because I removed the <code>.copy()</code> call on that dict specifically because we're not modifying it anymore from within this function. Also, we're holding the import lock - but I guess some function we're calling must contain a lazy import for something not already imported. I'll just put back in the <code>.copy()</code>.</p>\n<p>And I'll try to reproduce your testcase to get clear evidence that it's actually fixed!</p>", "type": "rendered"}, "created_on": "2019-05-10T02:01:16.977017+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-05-10T02:01:16.986701+00:00", "type": "pullrequest_comment", "id": 101545047}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/81/comments/101545742.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/81/_/diff#comment-101545742"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 81, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/81.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/81"}}, "title": "Include all package dirs in Modulewatcher whitelist"}, "content": {"raw": "Great, I've fixed my silly bugs, and tested that with this bit commented out:\n```python\nif any(module_file.startswith(s + os.path.sep) for s in PKGDIRS):\n    # Whitelist modules in package install directories:\n    self.whitelist.add(name)\n``` \n\nI see your originally reported bug, and with it uncommented I don't see the bug. Let me know whether it works on your system now or not, since the paths can be pretty different so there could still be some issues to sort out.", "markup": "markdown", "html": "<p>Great, I've fixed my silly bugs, and tested that with this bit commented out:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">if</span> <span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"n\">module_file</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"n\">s</span> <span class=\"o\">+</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">sep</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"n\">PKGDIRS</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Whitelist modules in package install directories:</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">whitelist</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>I see your originally reported bug, and with it uncommented I don't see the bug. Let me know whether it works on your system now or not, since the paths can be pretty different so there could still be some issues to sort out.</p>", "type": "rendered"}, "created_on": "2019-05-10T02:18:01.144208+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-05-10T02:18:50.668953+00:00", "type": "pullrequest_comment", "id": 101545742}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/81/comments/101546384.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/81/_/diff#comment-101546384"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 81, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/81.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/81"}}, "title": "Include all package dirs in Modulewatcher whitelist"}, "content": {"raw": "Looks good. @pstarkey , got any feedback on this?", "markup": "markdown", "html": "<p>Looks good. @pstarkey , got any feedback on this?</p>", "type": "rendered"}, "created_on": "2019-05-10T02:32:13.708675+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": "2019-05-10T02:32:13.747260+00:00", "type": "pullrequest_comment", "id": 101546384}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/81/comments/102222895.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/81/_/diff#comment-102222895"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 81, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/81.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/81"}}, "title": "Include all package dirs in Modulewatcher whitelist"}, "content": {"raw": "If we don't hear from @philipstarkey , I'll merge on May 27th. ", "markup": "markdown", "html": "<p>If we don't hear from @philipstarkey , I'll merge on May 27th. </p>", "type": "rendered"}, "created_on": "2019-05-16T03:23:46.071142+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-05-16T03:23:46.090828+00:00", "type": "pullrequest_comment", "id": 102222895}, {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/81/comments/103862664.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/81/_/diff#comment-103862664"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 81, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/81.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/81"}}, "title": "Include all package dirs in Modulewatcher whitelist"}, "content": {"raw": "Merging. Thanks for testing, russ!\n\nWill bump the patch version so that analysislib-mloop can rely on it.", "markup": "markdown", "html": "<p>Merging. Thanks for testing, russ!</p>\n<p>Will bump the patch version so that analysislib-mloop can rely on it.</p>", "type": "rendered"}, "created_on": "2019-05-29T18:52:26.785981+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-05-29T18:52:26.794075+00:00", "type": "pullrequest_comment", "id": 103862664}], "page": 1, "size": 8}