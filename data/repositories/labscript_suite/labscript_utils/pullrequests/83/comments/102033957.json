{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/83/comments/102033957.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/83/_/diff#comment-102033957"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 83, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/83.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/83"}}, "title": "PY3 fixes for imageoutput widget"}, "content": {"raw": "The diff is noisy because the original file had mixed line endings (i.e. some windows style CRLF some unix style LF). Here is a non-noisy one:\n\n```diff\ndiff -r 9b4dbe2f4e92 qtwidgets/imageoutput.py\n--- a/qtwidgets/imageoutput.py  Sun May 12 18:54:32 2019 -0400\n+++ b/qtwidgets/imageoutput.py  Tue May 14 17:43:40 2019 -0400\n@@ -37,7 +37,7 @@\n         supported_images = \"Image files (\"\n         \n         for format in QImageReader.supportedImageFormats():\n-            supported_images += \"*.%s \"%format\n+            supported_images += \"*.%s \" % format.data().decode()\n             \n         supported_images = supported_images [:-1]\n         supported_images += \")\"\n@@ -151,7 +151,7 @@\n         self._Image = None\n         \n         # the base64encoded value\n-        self._value = str(\"\")\n+        self._value = \"\"\n         \n         # The image item to be added to the scene\n         self._pixmap_item = None\n@@ -216,11 +216,13 @@\n         \n     @property\n     def value(self):\n-        return str(self._value)\n+        return self._value\n         \n     @value.setter\n     def value(self, value):\n-        decoded_image = base64.b64decode(str(value))\n+        if isinstance(value, bytes):\n+            value = value.decode()\n+        decoded_image = base64.b64decode(value)\n         pixmap = QPixmap()\n         pixmap.loadFromData(decoded_image, flags=Qt.AvoidDither | Qt.ThresholdAlphaDither | Qt.ThresholdDither)\n         # print decoded_image\n@@ -228,7 +230,7 @@\n             QMessageBox.warning(self, \"Failed to load image\", 'The image size was incorrect. It must be %dx%d pixels.'%(self.image_size.width(), self.image_size.height()), QMessageBox.Ok, QMessageBox.Ok)\n             return\n         \n-        self._value = str(value)\n+        self._value = value\n         pixmap_item = QGraphicsPixmapItem(pixmap)\n         \n         if self._pixmap_item is not None:\n```", "markup": "markdown", "html": "<p>The diff is noisy because the original file had mixed line endings (i.e. some windows style CRLF some unix style LF). Here is a non-noisy one:</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gh\">diff -r 9b4dbe2f4e92 qtwidgets/imageoutput.py</span>\n<span class=\"gd\">--- a/qtwidgets/imageoutput.py  Sun May 12 18:54:32 2019 -0400</span>\n<span class=\"gi\">+++ b/qtwidgets/imageoutput.py  Tue May 14 17:43:40 2019 -0400</span>\n<span class=\"gu\">@@ -37,7 +37,7 @@</span>\n         supported_images = &quot;Image files (&quot;\n\n         for format in QImageReader.supportedImageFormats():\n<span class=\"gd\">-            supported_images += &quot;*.%s &quot;%format</span>\n<span class=\"gi\">+            supported_images += &quot;*.%s &quot; % format.data().decode()</span>\n\n         supported_images = supported_images [:-1]\n         supported_images += &quot;)&quot;\n<span class=\"gu\">@@ -151,7 +151,7 @@</span>\n         self._Image = None\n\n         # the base64encoded value\n<span class=\"gd\">-        self._value = str(&quot;&quot;)</span>\n<span class=\"gi\">+        self._value = &quot;&quot;</span>\n\n         # The image item to be added to the scene\n         self._pixmap_item = None\n<span class=\"gu\">@@ -216,11 +216,13 @@</span>\n\n     @property\n     def value(self):\n<span class=\"gd\">-        return str(self._value)</span>\n<span class=\"gi\">+        return self._value</span>\n\n     @value.setter\n     def value(self, value):\n<span class=\"gd\">-        decoded_image = base64.b64decode(str(value))</span>\n<span class=\"gi\">+        if isinstance(value, bytes):</span>\n<span class=\"gi\">+            value = value.decode()</span>\n<span class=\"gi\">+        decoded_image = base64.b64decode(value)</span>\n         pixmap = QPixmap()\n         pixmap.loadFromData(decoded_image, flags=Qt.AvoidDither | Qt.ThresholdAlphaDither | Qt.ThresholdDither)\n         # print decoded_image\n<span class=\"gu\">@@ -228,7 +230,7 @@</span>\n             QMessageBox.warning(self, &quot;Failed to load image&quot;, &#39;The image size was incorrect. It must be %dx%d pixels.&#39;%(self.image_size.width(), self.image_size.height()), QMessageBox.Ok, QMessageBox.Ok)\n             return\n\n<span class=\"gd\">-        self._value = str(value)</span>\n<span class=\"gi\">+        self._value = value</span>\n         pixmap_item = QGraphicsPixmapItem(pixmap)\n\n         if self._pixmap_item is not None:\n</pre></div>", "type": "rendered"}, "created_on": "2019-05-14T21:44:31.789418+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-05-14T21:44:31.848949+00:00", "type": "pullrequest_comment", "id": 102033957}