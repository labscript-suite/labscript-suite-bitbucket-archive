{"rendered": {"description": {"raw": "Zprocess's kill lock has gained the ability to have the process ignore SIGTERM until the lock is released. Previously, holding the kill lock would only prevent process termination due to losing heartbeats from the parent process.\r\n\r\nThis PR has h5_lock acquire the kill lock whilst any HDF5 files are open, which means the process will ignore SIGTERM whilst the file is open. The process will instead terminate once the lock is released.\r\n\r\nThis will both reduce the chance of data corruption when restarting BLACS workers or lyse routines, and will also ensure zlocks get released (sometimes we get ~15 second hangs whilst zlocks time out because a process was terminated still holding a lock on a file that still needs to be read elsewhere).\r\n\r\nBecause we use zlock everywhere in labscript suite programs anyway, we know that we are not holding HDF5 files open for very long anywhere, so I don't expect this to result in any zombie processes. It'll just delay termination slightly occasionally and not corrupt data.", "markup": "markdown", "html": "<p>Zprocess's kill lock has gained the ability to have the process ignore SIGTERM until the lock is released. Previously, holding the kill lock would only prevent process termination due to losing heartbeats from the parent process.</p>\n<p>This PR has h5_lock acquire the kill lock whilst any HDF5 files are open, which means the process will ignore SIGTERM whilst the file is open. The process will instead terminate once the lock is released.</p>\n<p>This will both reduce the chance of data corruption when restarting BLACS workers or lyse routines, and will also ensure zlocks get released (sometimes we get ~15 second hangs whilst zlocks time out because a process was terminated still holding a lock on a file that still needs to be read elsewhere).</p>\n<p>Because we use zlock everywhere in labscript suite programs anyway, we know that we are not holding HDF5 files open for very long anywhere, so I don't expect this to result in any zombie processes. It'll just delay termination slightly occasionally and not corrupt data.</p>", "type": "rendered"}, "title": {"raw": "Delay handling SIGTERM until HDF5 files are closed", "markup": "markdown", "html": "<p>Delay handling SIGTERM until HDF5 files are closed</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Zprocess's kill lock has gained the ability to have the process ignore SIGTERM until the lock is released. Previously, holding the kill lock would only prevent process termination due to losing heartbeats from the parent process.\r\n\r\nThis PR has h5_lock acquire the kill lock whilst any HDF5 files are open, which means the process will ignore SIGTERM whilst the file is open. The process will instead terminate once the lock is released.\r\n\r\nThis will both reduce the chance of data corruption when restarting BLACS workers or lyse routines, and will also ensure zlocks get released (sometimes we get ~15 second hangs whilst zlocks time out because a process was terminated still holding a lock on a file that still needs to be read elsewhere).\r\n\r\nBecause we use zlock everywhere in labscript suite programs anyway, we know that we are not holding HDF5 files open for very long anywhere, so I don't expect this to result in any zombie processes. It'll just delay termination slightly occasionally and not corrupt data.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/84/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/diffstat/labscript_suite/labscript_utils:73c42f98ed4c%0D783680f0d6f0?from_pullrequest_id=84"}, "commits": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/84/commits.json"}, "self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/84.json"}, "comments": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/84/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/84/merge"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/84"}, "activity": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/84/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/diff/labscript_suite/labscript_utils:73c42f98ed4c%0D783680f0d6f0?from_pullrequest_id=84"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/labscript_utils/pullrequests/84/approve"}, "statuses": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/84/statuses_page=1.json"}}, "title": "Delay handling SIGTERM until HDF5 files are closed", "close_source_branch": true, "reviewers": [{"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}], "id": 84, "destination": {"commit": {"hash": "783680f0d6f0", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/783680f0d6f0.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/783680f0d6f0"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils.json"}, "html": {"href": "#!/labscript_suite/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{68347210-fb1e-4b58-86c0-bd2c04396e63}ts=249922"}}, "type": "repository", "name": "labscript_utils", "full_name": "labscript_suite/labscript_utils", "uuid": "{68347210-fb1e-4b58-86c0-bd2c04396e63}"}, "branch": {"name": "default"}}, "created_on": "2019-05-19T00:03:54.302151+00:00", "summary": {"raw": "Zprocess's kill lock has gained the ability to have the process ignore SIGTERM until the lock is released. Previously, holding the kill lock would only prevent process termination due to losing heartbeats from the parent process.\r\n\r\nThis PR has h5_lock acquire the kill lock whilst any HDF5 files are open, which means the process will ignore SIGTERM whilst the file is open. The process will instead terminate once the lock is released.\r\n\r\nThis will both reduce the chance of data corruption when restarting BLACS workers or lyse routines, and will also ensure zlocks get released (sometimes we get ~15 second hangs whilst zlocks time out because a process was terminated still holding a lock on a file that still needs to be read elsewhere).\r\n\r\nBecause we use zlock everywhere in labscript suite programs anyway, we know that we are not holding HDF5 files open for very long anywhere, so I don't expect this to result in any zombie processes. It'll just delay termination slightly occasionally and not corrupt data.", "markup": "markdown", "html": "<p>Zprocess's kill lock has gained the ability to have the process ignore SIGTERM until the lock is released. Previously, holding the kill lock would only prevent process termination due to losing heartbeats from the parent process.</p>\n<p>This PR has h5_lock acquire the kill lock whilst any HDF5 files are open, which means the process will ignore SIGTERM whilst the file is open. The process will instead terminate once the lock is released.</p>\n<p>This will both reduce the chance of data corruption when restarting BLACS workers or lyse routines, and will also ensure zlocks get released (sometimes we get ~15 second hangs whilst zlocks time out because a process was terminated still holding a lock on a file that still needs to be read elsewhere).</p>\n<p>Because we use zlock everywhere in labscript suite programs anyway, we know that we are not holding HDF5 files open for very long anywhere, so I don't expect this to result in any zombie processes. It'll just delay termination slightly occasionally and not corrupt data.</p>", "type": "rendered"}, "source": {"commit": {"hash": "fae3f499b558", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/fae3f499b558"}, "html": {"href": "#!/cbillington/labscript_utils/commits/fae3f499b558"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "branch": {"name": "h5lock-delay-sigterm"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, {"role": "PARTICIPANT", "participated_on": "2019-06-15T21:21:33.962360+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}}], "reason": "", "updated_on": "2019-06-15T21:21:40.452633+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "73c42f98ed4c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/commit/73c42f98ed4c.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/commits/73c42f98ed4c"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}