{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/85/comments/103209387.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/85/_/diff#comment-103209387"}}, "parent": {"id": 103202138, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/85/comments/103202138.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/85/_/diff#comment-103202138"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 85, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/85.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/85"}}, "title": "Add fix_shortcuts() function and catch DLL load error"}, "content": {"raw": "The long delay is when Python is importing modules that tracelog has been told not to log about. It is still slow, just doesn't appear in the output file. So that is normal.\n\nExcellent, the faulthandler has 34 threads doing nothing (they are all waiting on zeromq messages or other things), and one thread laying out Qt widgets:\n\n```\nCurrent thread 0x00000978 (most recent call first):\n  File \"C:\\labscript_suite\\labscript_utils\\qtwidgets\\toolpalette.py\", line 348 in _layout_widgets\n  File \"C:\\labscript_suite\\labscript_utils\\qtwidgets\\toolpalette.py\", line 405 in resizeEvent\n  File \"C:\\labscript_suite\\blacs\\__main__.py\", line 844 in execute_program\n  File \"C:\\labscript_suite\\blacs\\__main__.py\", line 846 in <module>\n  File \"C:\\Users\\APQ\\Anaconda3\\lib\\runpy.py\", line 85 in _run_code\n  File \"C:\\Users\\APQ\\Anaconda3\\lib\\runpy.py\", line 193 in _run_module_as_main\n```\n\nSo it looks like this is probably where the crash is happening (`File \"C:\\labscript_suite\\labscript_utils\\qtwidgets\\toolpalette.py\", line 348 in _layout_widgets`).\n\nLine 348 is:\n\n```\nself.setMinimumSize(QSize(self.minimumSize().width(), total_height))\n```\n\nAh, this is sounding familiar now. I recall an obtuse bug where the sizes of Qt widgets were coming back as (0,0) despite having been set to something nonzero, and that this was causing segfaults for some reason. But it was improbable to occur, and only occurred on some Qt versions, and I was very confident that it was a bug in Qt itself.\n\nI would hope that conda releases a package for Qt 5.12 soon, which has some chance of having fixed the bug, though in the meantime on a specific computer we could for example, wrap the above line 348 in an `if` statement, like:\n\n```\nif self.minimumSize().width() > 0:\n    self.setMinimumSize(QSize(self.minimumSize().width(), total_height))\n```\n\nYou might also want to print out `self.minimumSize().width()` there and see what it is. I bet it is zero. (possibly check what `total_height` is as well)\n\nI also recall that when I encountered the similar issue, whether or not it was being triggered was very sensitive to the contents of the BLACS save file: `labscript_suite/labconfig/<your-hostname>_BLACS.h5`. So as one check, you could try deleting or renaming that file. This will cause BLACS to forget all of its settings, so you might want to rename it instead of deleting it so you can restore it if this doesn't fix the problem.\n\nI'll try to dig up any threads from the time I was encountering a similar issue, and see if there are any other insights there.", "markup": "markdown", "html": "<p>The long delay is when Python is importing modules that tracelog has been told not to log about. It is still slow, just doesn't appear in the output file. So that is normal.</p>\n<p>Excellent, the faulthandler has 34 threads doing nothing (they are all waiting on zeromq messages or other things), and one thread laying out Qt widgets:</p>\n<div class=\"codehilite\"><pre><span></span>Current thread 0x00000978 (most recent call first):\n  File &quot;C:\\labscript_suite\\labscript_utils\\qtwidgets\\toolpalette.py&quot;, line 348 in _layout_widgets\n  File &quot;C:\\labscript_suite\\labscript_utils\\qtwidgets\\toolpalette.py&quot;, line 405 in resizeEvent\n  File &quot;C:\\labscript_suite\\blacs\\__main__.py&quot;, line 844 in execute_program\n  File &quot;C:\\labscript_suite\\blacs\\__main__.py&quot;, line 846 in &lt;module&gt;\n  File &quot;C:\\Users\\APQ\\Anaconda3\\lib\\runpy.py&quot;, line 85 in _run_code\n  File &quot;C:\\Users\\APQ\\Anaconda3\\lib\\runpy.py&quot;, line 193 in _run_module_as_main\n</pre></div>\n\n\n<p>So it looks like this is probably where the crash is happening (<code>File \"C:\\labscript_suite\\labscript_utils\\qtwidgets\\toolpalette.py\", line 348 in _layout_widgets</code>).</p>\n<p>Line 348 is:</p>\n<div class=\"codehilite\"><pre><span></span>self.setMinimumSize(QSize(self.minimumSize().width(), total_height))\n</pre></div>\n\n\n<p>Ah, this is sounding familiar now. I recall an obtuse bug where the sizes of Qt widgets were coming back as (0,0) despite having been set to something nonzero, and that this was causing segfaults for some reason. But it was improbable to occur, and only occurred on some Qt versions, and I was very confident that it was a bug in Qt itself.</p>\n<p>I would hope that conda releases a package for Qt 5.12 soon, which has some chance of having fixed the bug, though in the meantime on a specific computer we could for example, wrap the above line 348 in an <code>if</code> statement, like:</p>\n<div class=\"codehilite\"><pre><span></span>if self.minimumSize().width() &gt; 0:\n    self.setMinimumSize(QSize(self.minimumSize().width(), total_height))\n</pre></div>\n\n\n<p>You might also want to print out <code>self.minimumSize().width()</code> there and see what it is. I bet it is zero. (possibly check what <code>total_height</code> is as well)</p>\n<p>I also recall that when I encountered the similar issue, whether or not it was being triggered was very sensitive to the contents of the BLACS save file: <code>labscript_suite/labconfig/&lt;your-hostname&gt;_BLACS.h5</code>. So as one check, you could try deleting or renaming that file. This will cause BLACS to forget all of its settings, so you might want to rename it instead of deleting it so you can restore it if this doesn't fix the problem.</p>\n<p>I'll try to dig up any threads from the time I was encountering a similar issue, and see if there are any other insights there.</p>", "type": "rendered"}, "created_on": "2019-05-23T18:33:06.123330+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-05-23T18:36:52.775543+00:00", "type": "pullrequest_comment", "id": 103209387}