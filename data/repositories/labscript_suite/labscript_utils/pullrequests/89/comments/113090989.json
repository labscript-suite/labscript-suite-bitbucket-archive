{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/89/comments/113090989.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/89/_/diff#comment-113090989"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 89, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/89.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/89"}}, "title": "Add RCPServer and RPCCLient base clients for more organised communication between labscript programs"}, "content": {"raw": "Ok, known problems resolved. A request such as the following:\n```python\nrunmanager.remote.set_globals({'x': 7}, raw=False)\n```\n now results in the following object being sent over the wire:\n```python\n[\n    'set_globals', # method_name\n    ({'x': 7},),   # args tuple\n    {'raw': False}, # kwargs dict\n    # request_metadata dict:\n    {\n        # required_server_versions is a list of (args, kwargs) to be passed to\n        # check_version. Therefore the protocol is tied to the call signature of\n        # check_version, and the protocol version must be bumped and these calls\n        # converted for backward compatibility if the call signature of check_version\n        # ever changes in a backward-incompatible way.\n        'required_server_versions': [(('runmanager', '2.6.0', '3.0'), {})],\n        # client_versions is a list of (module_or_component_name, version) tuples\n        # for versions of components on the client that it has declared.\n        'client_versions': [('runmanager', '2.6.0'), ('_rpc_proto', '1.0.0')],\n    },\n]\n```\n\nAnd if the four elements of the list can't be converted to the expected types (str, tuple, dict, dict), or the request_metadata dict doesn't have the two expected keys, then the fallback method is called.", "markup": "markdown", "html": "<p>Ok, known problems resolved. A request such as the following:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">runmanager</span><span class=\"o\">.</span><span class=\"n\">remote</span><span class=\"o\">.</span><span class=\"n\">set_globals</span><span class=\"p\">({</span><span class=\"s1\">&#39;x&#39;</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"p\">},</span> <span class=\"n\">raw</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>now results in the following object being sent over the wire:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"p\">[</span>\n    <span class=\"s1\">&#39;set_globals&#39;</span><span class=\"p\">,</span> <span class=\"c1\"># method_name</span>\n    <span class=\"p\">({</span><span class=\"s1\">&#39;x&#39;</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"p\">},),</span>   <span class=\"c1\"># args tuple</span>\n    <span class=\"p\">{</span><span class=\"s1\">&#39;raw&#39;</span><span class=\"p\">:</span> <span class=\"bp\">False</span><span class=\"p\">},</span> <span class=\"c1\"># kwargs dict</span>\n    <span class=\"c1\"># request_metadata dict:</span>\n    <span class=\"p\">{</span>\n        <span class=\"c1\"># required_server_versions is a list of (args, kwargs) to be passed to</span>\n        <span class=\"c1\"># check_version. Therefore the protocol is tied to the call signature of</span>\n        <span class=\"c1\"># check_version, and the protocol version must be bumped and these calls</span>\n        <span class=\"c1\"># converted for backward compatibility if the call signature of check_version</span>\n        <span class=\"c1\"># ever changes in a backward-incompatible way.</span>\n        <span class=\"s1\">&#39;required_server_versions&#39;</span><span class=\"p\">:</span> <span class=\"p\">[((</span><span class=\"s1\">&#39;runmanager&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;2.6.0&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;3.0&#39;</span><span class=\"p\">),</span> <span class=\"p\">{})],</span>\n        <span class=\"c1\"># client_versions is a list of (module_or_component_name, version) tuples</span>\n        <span class=\"c1\"># for versions of components on the client that it has declared.</span>\n        <span class=\"s1\">&#39;client_versions&#39;</span><span class=\"p\">:</span> <span class=\"p\">[(</span><span class=\"s1\">&#39;runmanager&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;2.6.0&#39;</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">&#39;_rpc_proto&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1.0.0&#39;</span><span class=\"p\">)],</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">]</span>\n</pre></div>\n\n\n<p>And if the four elements of the list can't be converted to the expected types (str, tuple, dict, dict), or the request_metadata dict doesn't have the two expected keys, then the fallback method is called.</p>", "type": "rendered"}, "created_on": "2019-08-14T12:15:44.086132+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-08-14T12:16:50.627859+00:00", "type": "pullrequest_comment", "id": 113090989}