{"pagelen": 100, "values": [{"hash": "cb1ea05e2c1474efccc9664f5841fead3ae16fc8", "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/cb1ea05e2c1474efccc9664f5841fead3ae16fc8"}, "comments": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/cb1ea05e2c1474efccc9664f5841fead3ae16fc8/comments"}, "html": {"href": "#!/cbillington/labscript_utils/commits/cb1ea05e2c1474efccc9664f5841fead3ae16fc8"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/diff/cb1ea05e2c1474efccc9664f5841fead3ae16fc8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/cb1ea05e2c1474efccc9664f5841fead3ae16fc8/approve"}, "statuses": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/cb1ea05e2c1474efccc9664f5841fead3ae16fc8/statuses"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Merge with default", "markup": "markdown", "html": "<p>Merge with default</p>", "type": "rendered"}, "parents": [{"hash": "07111b639cbde0a7f0908c6701e13f0a9eb30d4c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/07111b639cbde0a7f0908c6701e13f0a9eb30d4c"}, "html": {"href": "#!/cbillington/labscript_utils/commits/07111b639cbde0a7f0908c6701e13f0a9eb30d4c"}}}, {"hash": "2e38b39f42b012a792b1060a6a1ab6c6a4a95d1c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/2e38b39f42b012a792b1060a6a1ab6c6a4a95d1c"}, "html": {"href": "#!/cbillington/labscript_utils/commits/2e38b39f42b012a792b1060a6a1ab6c6a4a95d1c"}}}], "date": "2019-09-20T16:44:32+00:00", "message": "Merge with default", "type": "commit"}, {"hash": "07111b639cbde0a7f0908c6701e13f0a9eb30d4c", "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/07111b639cbde0a7f0908c6701e13f0a9eb30d4c"}, "comments": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/07111b639cbde0a7f0908c6701e13f0a9eb30d4c/comments"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/patch/07111b639cbde0a7f0908c6701e13f0a9eb30d4c"}, "html": {"href": "#!/cbillington/labscript_utils/commits/07111b639cbde0a7f0908c6701e13f0a9eb30d4c"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/diff/07111b639cbde0a7f0908c6701e13f0a9eb30d4c"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/07111b639cbde0a7f0908c6701e13f0a9eb30d4c/approve"}, "statuses": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/07111b639cbde0a7f0908c6701e13f0a9eb30d4c/statuses"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Have servers bind on all interfaces on ipv4 and ipv6, not just ipv4.", "markup": "markdown", "html": "<p>Have servers bind on all interfaces on ipv4 and ipv6, not just ipv4.</p>", "type": "rendered"}, "parents": [{"hash": "5fec3a6d2b349cd763b3f2a9b102cc0fe3c166a0", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/5fec3a6d2b349cd763b3f2a9b102cc0fe3c166a0"}, "html": {"href": "#!/cbillington/labscript_utils/commits/5fec3a6d2b349cd763b3f2a9b102cc0fe3c166a0"}}}], "date": "2019-09-06T15:47:35+00:00", "message": "Have servers bind on all interfaces on ipv4 and ipv6, not just ipv4.", "type": "commit"}, {"hash": "5fec3a6d2b349cd763b3f2a9b102cc0fe3c166a0", "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/5fec3a6d2b349cd763b3f2a9b102cc0fe3c166a0"}, "comments": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/5fec3a6d2b349cd763b3f2a9b102cc0fe3c166a0/comments"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/patch/5fec3a6d2b349cd763b3f2a9b102cc0fe3c166a0"}, "html": {"href": "#!/cbillington/labscript_utils/commits/5fec3a6d2b349cd763b3f2a9b102cc0fe3c166a0"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/diff/5fec3a6d2b349cd763b3f2a9b102cc0fe3c166a0"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/5fec3a6d2b349cd763b3f2a9b102cc0fe3c166a0/approve"}, "statuses": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/5fec3a6d2b349cd763b3f2a9b102cc0fe3c166a0/statuses"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Allow requiring client versions and declaring server versions (of things that\nare not top-level modules) in the server. Still todo: have the server make use\nof these upon handling a request, and make the error messages clearer as to\nwhose fault an error is", "markup": "markdown", "html": "<p>Allow requiring client versions and declaring server versions (of things that<br />\nare not top-level modules) in the server. Still todo: have the server make use<br />\nof these upon handling a request, and make the error messages clearer as to<br />\nwhose fault an error is</p>", "type": "rendered"}, "parents": [{"hash": "5794fd4b9f836a4cc1c34b1f0f3892c937fa061a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/5794fd4b9f836a4cc1c34b1f0f3892c937fa061a"}, "html": {"href": "#!/cbillington/labscript_utils/commits/5794fd4b9f836a4cc1c34b1f0f3892c937fa061a"}}}], "date": "2019-08-22T18:52:41+00:00", "message": "Allow requiring client versions and declaring server versions (of things that\nare not top-level modules) in the server. Still todo: have the server make use\nof these upon handling a request, and make the error messages clearer as to\nwhose fault an error is", "type": "commit"}, {"hash": "5794fd4b9f836a4cc1c34b1f0f3892c937fa061a", "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/5794fd4b9f836a4cc1c34b1f0f3892c937fa061a"}, "comments": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/5794fd4b9f836a4cc1c34b1f0f3892c937fa061a/comments"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/patch/5794fd4b9f836a4cc1c34b1f0f3892c937fa061a"}, "html": {"href": "#!/cbillington/labscript_utils/commits/5794fd4b9f836a4cc1c34b1f0f3892c937fa061a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/diff/5794fd4b9f836a4cc1c34b1f0f3892c937fa061a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/5794fd4b9f836a4cc1c34b1f0f3892c937fa061a/approve"}, "statuses": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/5794fd4b9f836a4cc1c34b1f0f3892c937fa061a/statuses"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Save client versions as an instance attribute during a request so that\nmethods may inspect it.", "markup": "markdown", "html": "<p>Save client versions as an instance attribute during a request so that<br />\nmethods may inspect it.</p>", "type": "rendered"}, "parents": [{"hash": "e21ff643b8a458b438486f470002f87bd3276688", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/e21ff643b8a458b438486f470002f87bd3276688"}, "html": {"href": "#!/cbillington/labscript_utils/commits/e21ff643b8a458b438486f470002f87bd3276688"}}}], "date": "2019-08-14T12:10:28+00:00", "message": "Save client versions as an instance attribute during a request so that\nmethods may inspect it.", "type": "commit"}, {"hash": "e21ff643b8a458b438486f470002f87bd3276688", "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/e21ff643b8a458b438486f470002f87bd3276688"}, "comments": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/e21ff643b8a458b438486f470002f87bd3276688/comments"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/patch/e21ff643b8a458b438486f470002f87bd3276688"}, "html": {"href": "#!/cbillington/labscript_utils/commits/e21ff643b8a458b438486f470002f87bd3276688"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/diff/e21ff643b8a458b438486f470002f87bd3276688"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/e21ff643b8a458b438486f470002f87bd3276688/approve"}, "statuses": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/e21ff643b8a458b438486f470002f87bd3276688/statuses"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Be more strict about matching to the protocol, and call fallback for anything\nthat does not match. Allow client to send versions of its components. Require\nit to declare at least one version, and also add a version number for the RPC\nprotocol itself.\n\nHave the default fallback handler raise an exception.", "markup": "markdown", "html": "<p>Be more strict about matching to the protocol, and call fallback for anything<br />\nthat does not match. Allow client to send versions of its components. Require<br />\nit to declare at least one version, and also add a version number for the RPC<br />\nprotocol itself.</p>\n<p>Have the default fallback handler raise an exception.</p>", "type": "rendered"}, "parents": [{"hash": "580d2eb4cd69d86898c3ed2b30d84e566507f1ee", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/580d2eb4cd69d86898c3ed2b30d84e566507f1ee"}, "html": {"href": "#!/cbillington/labscript_utils/commits/580d2eb4cd69d86898c3ed2b30d84e566507f1ee"}}}], "date": "2019-08-14T12:03:17+00:00", "message": "Be more strict about matching to the protocol, and call fallback for anything\nthat does not match. Allow client to send versions of its components. Require\nit to declare at least one version, and also add a version number for the RPC\nprotocol itself.\n\nHave the default fallback handler raise an exception.", "type": "commit"}, {"hash": "580d2eb4cd69d86898c3ed2b30d84e566507f1ee", "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/580d2eb4cd69d86898c3ed2b30d84e566507f1ee"}, "comments": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/580d2eb4cd69d86898c3ed2b30d84e566507f1ee/comments"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/patch/580d2eb4cd69d86898c3ed2b30d84e566507f1ee"}, "html": {"href": "#!/cbillington/labscript_utils/commits/580d2eb4cd69d86898c3ed2b30d84e566507f1ee"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/diff/580d2eb4cd69d86898c3ed2b30d84e566507f1ee"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/580d2eb4cd69d86898c3ed2b30d84e566507f1ee/approve"}, "statuses": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/580d2eb4cd69d86898c3ed2b30d84e566507f1ee/statuses"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Remove unused import, add the common get_version and say_hello methods to client.", "markup": "markdown", "html": "<p>Remove unused import, add the common get_version and say_hello methods to client.</p>", "type": "rendered"}, "parents": [{"hash": "f5722ddf7c7cf4fc94a1a6c67a125c6e3bf85be6", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/f5722ddf7c7cf4fc94a1a6c67a125c6e3bf85be6"}, "html": {"href": "#!/cbillington/labscript_utils/commits/f5722ddf7c7cf4fc94a1a6c67a125c6e3bf85be6"}}}], "date": "2019-08-13T21:08:04+00:00", "message": "Remove unused import, add the common get_version and say_hello methods to client.", "type": "commit"}, {"hash": "f5722ddf7c7cf4fc94a1a6c67a125c6e3bf85be6", "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/f5722ddf7c7cf4fc94a1a6c67a125c6e3bf85be6"}, "comments": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/f5722ddf7c7cf4fc94a1a6c67a125c6e3bf85be6/comments"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/patch/f5722ddf7c7cf4fc94a1a6c67a125c6e3bf85be6"}, "html": {"href": "#!/cbillington/labscript_utils/commits/f5722ddf7c7cf4fc94a1a6c67a125c6e3bf85be6"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/diff/f5722ddf7c7cf4fc94a1a6c67a125c6e3bf85be6"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/f5722ddf7c7cf4fc94a1a6c67a125c6e3bf85be6/approve"}, "statuses": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/f5722ddf7c7cf4fc94a1a6c67a125c6e3bf85be6/statuses"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Remove InvalidRequest. Fallback methods can just raise any exception they want\nif a request is invalid.", "markup": "markdown", "html": "<p>Remove InvalidRequest. Fallback methods can just raise any exception they want<br />\nif a request is invalid.</p>", "type": "rendered"}, "parents": [{"hash": "29b8de92f23ffff7245de75e1da681aec4ed2ea4", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/29b8de92f23ffff7245de75e1da681aec4ed2ea4"}, "html": {"href": "#!/cbillington/labscript_utils/commits/29b8de92f23ffff7245de75e1da681aec4ed2ea4"}}}], "date": "2019-08-13T21:02:11+00:00", "message": "Remove InvalidRequest. Fallback methods can just raise any exception they want\nif a request is invalid.", "type": "commit"}, {"hash": "29b8de92f23ffff7245de75e1da681aec4ed2ea4", "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/29b8de92f23ffff7245de75e1da681aec4ed2ea4"}, "comments": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/29b8de92f23ffff7245de75e1da681aec4ed2ea4/comments"}, "html": {"href": "#!/cbillington/labscript_utils/commits/29b8de92f23ffff7245de75e1da681aec4ed2ea4"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/diff/29b8de92f23ffff7245de75e1da681aec4ed2ea4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/29b8de92f23ffff7245de75e1da681aec4ed2ea4/approve"}, "statuses": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/29b8de92f23ffff7245de75e1da681aec4ed2ea4/statuses"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Merge with default", "markup": "markdown", "html": "<p>Merge with default</p>", "type": "rendered"}, "parents": [{"hash": "1c5cc276743905d6870126ce1c766253d9f81e1a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/1c5cc276743905d6870126ce1c766253d9f81e1a"}, "html": {"href": "#!/cbillington/labscript_utils/commits/1c5cc276743905d6870126ce1c766253d9f81e1a"}}}, {"hash": "61f4c846e51b68e3d9fe7cc452614d5ecb452dd1", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/61f4c846e51b68e3d9fe7cc452614d5ecb452dd1"}, "html": {"href": "#!/cbillington/labscript_utils/commits/61f4c846e51b68e3d9fe7cc452614d5ecb452dd1"}}}], "date": "2019-08-13T20:56:52+00:00", "message": "Merge with default", "type": "commit"}, {"hash": "1c5cc276743905d6870126ce1c766253d9f81e1a", "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/1c5cc276743905d6870126ce1c766253d9f81e1a"}, "comments": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/1c5cc276743905d6870126ce1c766253d9f81e1a/comments"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/patch/1c5cc276743905d6870126ce1c766253d9f81e1a"}, "html": {"href": "#!/cbillington/labscript_utils/commits/1c5cc276743905d6870126ce1c766253d9f81e1a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/diff/1c5cc276743905d6870126ce1c766253d9f81e1a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/1c5cc276743905d6870126ce1c766253d9f81e1a/approve"}, "statuses": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/1c5cc276743905d6870126ce1c766253d9f81e1a/statuses"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Version bump", "markup": "markdown", "html": "<p>Version bump</p>", "type": "rendered"}, "parents": [{"hash": "ee093ad1cccf436b2fd4cdcee4c10a61cbfa4845", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/ee093ad1cccf436b2fd4cdcee4c10a61cbfa4845"}, "html": {"href": "#!/cbillington/labscript_utils/commits/ee093ad1cccf436b2fd4cdcee4c10a61cbfa4845"}}}], "date": "2019-08-13T20:37:10+00:00", "message": "Version bump", "type": "commit"}, {"hash": "ee093ad1cccf436b2fd4cdcee4c10a61cbfa4845", "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/ee093ad1cccf436b2fd4cdcee4c10a61cbfa4845"}, "comments": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/ee093ad1cccf436b2fd4cdcee4c10a61cbfa4845/comments"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/patch/ee093ad1cccf436b2fd4cdcee4c10a61cbfa4845"}, "html": {"href": "#!/cbillington/labscript_utils/commits/ee093ad1cccf436b2fd4cdcee4c10a61cbfa4845"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/diff/ee093ad1cccf436b2fd4cdcee4c10a61cbfa4845"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/ee093ad1cccf436b2fd4cdcee4c10a61cbfa4845/approve"}, "statuses": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/ee093ad1cccf436b2fd4cdcee4c10a61cbfa4845/statuses"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Add RPCServer and RPCClient classes appropriate for labscript programs\nto use for their inter-process communication. These are modelled after the\nrunmanager remote client and server classes, providing a base class to implement\nthe same type of clients and servers in other applications.\n\nThe idea is that we will make a blacs.remote, runviewer.remote and lyse.remote\nmodule containing client classes for making these calls, instead of using\nzmq_get directly. Servers must be upgraded before clients.\n\nEvery request sends the required versions of any necessary components on the\nserver, which allows us to make modifications to protocols whilst raising\nhelpful version exceptions instead of just crashing unhelpfully. Fallback\nmethods allow new style servers to still handle old requests. However, new\nclients communicating with old servers will raise exceptions instructing the\nuser to update the server, since they cannot know in advance whether the server\nis old or new.\n\nSince every RPC call checks versions, add a cache to check_version so that it\ndoes not do disk access every time a version is checked. This makes the\nperformance hit of doing these checks for every call negligable.", "markup": "markdown", "html": "<p>Add RPCServer and RPCClient classes appropriate for labscript programs<br />\nto use for their inter-process communication. These are modelled after the<br />\nrunmanager remote client and server classes, providing a base class to implement<br />\nthe same type of clients and servers in other applications.</p>\n<p>The idea is that we will make a blacs.remote, runviewer.remote and lyse.remote<br />\nmodule containing client classes for making these calls, instead of using<br />\nzmq_get directly. Servers must be upgraded before clients.</p>\n<p>Every request sends the required versions of any necessary components on the<br />\nserver, which allows us to make modifications to protocols whilst raising<br />\nhelpful version exceptions instead of just crashing unhelpfully. Fallback<br />\nmethods allow new style servers to still handle old requests. However, new<br />\nclients communicating with old servers will raise exceptions instructing the<br />\nuser to update the server, since they cannot know in advance whether the server<br />\nis old or new.</p>\n<p>Since every RPC call checks versions, add a cache to check_version so that it<br />\ndoes not do disk access every time a version is checked. This makes the<br />\nperformance hit of doing these checks for every call negligable.</p>", "type": "rendered"}, "parents": [{"hash": "c2e6d2fbe343b8a8a5f913ed1ca60eb423efdcda", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/c2e6d2fbe343b8a8a5f913ed1ca60eb423efdcda"}, "html": {"href": "#!/cbillington/labscript_utils/commits/c2e6d2fbe343b8a8a5f913ed1ca60eb423efdcda"}}}], "date": "2019-08-13T20:36:18+00:00", "message": "Add RPCServer and RPCClient classes appropriate for labscript programs\nto use for their inter-process communication. These are modelled after the\nrunmanager remote client and server classes, providing a base class to implement\nthe same type of clients and servers in other applications.\n\nThe idea is that we will make a blacs.remote, runviewer.remote and lyse.remote\nmodule containing client classes for making these calls, instead of using\nzmq_get directly. Servers must be upgraded before clients.\n\nEvery request sends the required versions of any necessary components on the\nserver, which allows us to make modifications to protocols whilst raising\nhelpful version exceptions instead of just crashing unhelpfully. Fallback\nmethods allow new style servers to still handle old requests. However, new\nclients communicating with old servers will raise exceptions instructing the\nuser to update the server, since they cannot know in advance whether the server\nis old or new.\n\nSince every RPC call checks versions, add a cache to check_version so that it\ndoes not do disk access every time a version is checked. This makes the\nperformance hit of doing these checks for every call negligable.", "type": "commit"}, {"hash": "c2e6d2fbe343b8a8a5f913ed1ca60eb423efdcda", "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils"}, "html": {"href": "#!/cbillington/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{455d0b5d-4852-4e4a-b8b1-f5ba77882210}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "cbillington/labscript_utils", "uuid": "{455d0b5d-4852-4e4a-b8b1-f5ba77882210}"}, "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/c2e6d2fbe343b8a8a5f913ed1ca60eb423efdcda"}, "comments": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/c2e6d2fbe343b8a8a5f913ed1ca60eb423efdcda/comments"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/patch/c2e6d2fbe343b8a8a5f913ed1ca60eb423efdcda"}, "html": {"href": "#!/cbillington/labscript_utils/commits/c2e6d2fbe343b8a8a5f913ed1ca60eb423efdcda"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/diff/c2e6d2fbe343b8a8a5f913ed1ca60eb423efdcda"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/c2e6d2fbe343b8a8a5f913ed1ca60eb423efdcda/approve"}, "statuses": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/c2e6d2fbe343b8a8a5f913ed1ca60eb423efdcda/statuses"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Add 'get_version' remote method to all servers in labscript. This remote method\ncan be used to get the version of any package in the server's environment via\nlabscript_utils.versions.get_version.\n\nThis is useful so that we may better error-check compatibility mismatches\nbetween programs communicating remotely, and so that we can evolve protocols to\nallow new functionality whilst either providing backward compatibility for old\npeers or raising errors about versions instead of crashing with less useful info.\n\nImplementation is done by having labscript_utils.ls_zprocess.ZMQServer instances\nreplace their `handler()` method during `__init__` with a wrapped version implementing\nthe new method. This way all labscript programs get this remote method.\nAny other remote methods universal to labscript programs in the future can be\nput here.\n\nClients can call `zmq_get(..., data=['get_version', *args])`, and this will\ntranslate to a call `labscript_utils.versions.get_version(*args`) and return\nthe result as a string. So normally this would be `['get_version', 'labscript']`\nbut could also be `['get_version', 'serial', 'pyserial']` for the case where the\nproject name and its import name are not the same.", "markup": "markdown", "html": "<p>Add 'get_version' remote method to all servers in labscript. This remote method<br />\ncan be used to get the version of any package in the server's environment via<br />\nlabscript_utils.versions.get_version.</p>\n<p>This is useful so that we may better error-check compatibility mismatches<br />\nbetween programs communicating remotely, and so that we can evolve protocols to<br />\nallow new functionality whilst either providing backward compatibility for old<br />\npeers or raising errors about versions instead of crashing with less useful info.</p>\n<p>Implementation is done by having labscript_utils.ls_zprocess.ZMQServer instances<br />\nreplace their <code>handler()</code> method during <code>__init__</code> with a wrapped version implementing<br />\nthe new method. This way all labscript programs get this remote method.<br />\nAny other remote methods universal to labscript programs in the future can be<br />\nput here.</p>\n<p>Clients can call <code>zmq_get(..., data=['get_version', *args])</code>, and this will<br />\ntranslate to a call <code>labscript_utils.versions.get_version(*args</code>) and return<br />\nthe result as a string. So normally this would be <code>['get_version', 'labscript']</code><br />\nbut could also be <code>['get_version', 'serial', 'pyserial']</code> for the case where the<br />\nproject name and its import name are not the same.</p>", "type": "rendered"}, "parents": [{"hash": "1c809e64145d02a9ab5f77142938359b5e001d1e", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/labscript_utils/commit/1c809e64145d02a9ab5f77142938359b5e001d1e"}, "html": {"href": "#!/cbillington/labscript_utils/commits/1c809e64145d02a9ab5f77142938359b5e001d1e"}}}], "date": "2019-08-06T17:42:07+00:00", "message": "Add 'get_version' remote method to all servers in labscript. This remote method\ncan be used to get the version of any package in the server's environment via\nlabscript_utils.versions.get_version.\n\nThis is useful so that we may better error-check compatibility mismatches\nbetween programs communicating remotely, and so that we can evolve protocols to\nallow new functionality whilst either providing backward compatibility for old\npeers or raising errors about versions instead of crashing with less useful info.\n\nImplementation is done by having labscript_utils.ls_zprocess.ZMQServer instances\nreplace their `handler()` method during `__init__` with a wrapped version implementing\nthe new method. This way all labscript programs get this remote method.\nAny other remote methods universal to labscript programs in the future can be\nput here.\n\nClients can call `zmq_get(..., data=['get_version', *args])`, and this will\ntranslate to a call `labscript_utils.versions.get_version(*args`) and return\nthe result as a string. So normally this would be `['get_version', 'labscript']`\nbut could also be `['get_version', 'serial', 'pyserial']` for the case where the\nproject name and its import name are not the same.", "type": "commit"}], "page": 1}