{"links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/96/comments/126927716.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/96/_/diff#comment-126927716"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 96, "links": {"self": {"href": "data/repositories/labscript_suite/labscript_utils/pullrequests/96.json"}, "html": {"href": "#!/labscript_suite/labscript_utils/pull-requests/96"}}, "title": "Preparations for apps to be restructured as standard Python packages"}, "content": {"raw": "It turns out that whilst mercurial is cool with it if both branches rename a file before merging, it is decidedly less cool with one of the branches still having a file by the same name as is the case with the `__init__.py`and `__main__.py`shims.\n\nOnce the restructuring is in default, the trick to resolve merge conflicts in another branch is to merge the one commit that actually did all the renaming into the branch. Since the other file with the same name wasn\u2019t created until after that, it\u2019s all good.\n\nSo doing renames - and nothing but renames - in one commit before changing anything else is a good idea. Feature branches can then just merge with that one commit once it is in default, then they won\u2019t have any more merge conflicts \\(none caused by the renames, anyhow\\).\n\nThis means there is little reason to worry about creating merge conflicts and I can just steamroll through converting all the repos.", "markup": "markdown", "html": "<p>It turns out that whilst mercurial is cool with it if both branches rename a file before merging, it is decidedly less cool with one of the branches still having a file by the same name as is the case with the <code>__init__.py</code>and <code>__main__.py</code>shims.</p>\n<p>Once the restructuring is in default, the trick to resolve merge conflicts in another branch is to merge the one commit that actually did all the renaming into the branch. Since the other file with the same name wasn\u2019t created until after that, it\u2019s all good.</p>\n<p>So doing renames - and nothing but renames - in one commit before changing anything else is a good idea. Feature branches can then just merge with that one commit once it is in default, then they won\u2019t have any more merge conflicts (none caused by the renames, anyhow).</p>\n<p>This means there is little reason to worry about creating merge conflicts and I can just steamroll through converting all the repos.</p>", "type": "rendered"}, "created_on": "2019-11-30T05:29:33.071448+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-11-30T05:29:33.077272+00:00", "type": "pullrequest_comment", "id": 126927716}