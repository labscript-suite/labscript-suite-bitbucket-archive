{"rendered": {"message": {"raw": "Removed manual garbage collection after runs.\n\nThis appeared to be exposing what may be bugs in C extensions running in other threads.\ngc.collect() ought to be able to be called at any time, but if a badly written C extension has its objects swept out from under it when it wasn't expecting it, it may cause a hard interpreter crash. This is what we were seeing. The most suspect C extension was whatever implements checking the last modified time of files on Windows, but I couldn't narrow it down for sure because inserting printlines modified the timing such that I was unable to reproduce the bug.\n\nAt any rate, something in filewatcher.modulewatcher.ModuleWatcher.check_and_unload was causing the hard crash, but it went away when manual garbage collection in lyse was turned off.\n\nWe will simply shrug our shoulders at this, wonder why it didn't occur before, and move on.", "markup": "markdown", "html": "<p>Removed manual garbage collection after runs.</p>\n<p>This appeared to be exposing what may be bugs in C extensions running in other threads.<br />\ngc.collect() ought to be able to be called at any time, but if a badly written C extension has its objects swept out from under it when it wasn't expecting it, it may cause a hard interpreter crash. This is what we were seeing. The most suspect C extension was whatever implements checking the last modified time of files on Windows, but I couldn't narrow it down for sure because inserting printlines modified the timing such that I was unable to reproduce the bug.</p>\n<p>At any rate, something in filewatcher.modulewatcher.ModuleWatcher.check_and_unload was causing the hard crash, but it went away when manual garbage collection in lyse was turned off.</p>\n<p>We will simply shrug our shoulders at this, wonder why it didn't occur before, and move on.</p>", "type": "rendered"}}, "hash": "7726371d5969cf69ad2c58a7504645c94b1cfb32", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/7726371d5969cf69ad2c58a7504645c94b1cfb32.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/commit/7726371d5969cf69ad2c58a7504645c94b1cfb32/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/patch/7726371d5969cf69ad2c58a7504645c94b1cfb32"}, "html": {"href": "#!/labscript_suite/lyse/commits/7726371d5969cf69ad2c58a7504645c94b1cfb32"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/7726371d5969cf69ad2c58a7504645c94b1cfb32"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/commit/7726371d5969cf69ad2c58a7504645c94b1cfb32/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/commit/7726371d5969cf69ad2c58a7504645c94b1cfb32/statuses_page=1.json"}}, "author": {"raw": "beclab", "type": "author"}, "summary": {"raw": "Removed manual garbage collection after runs.\n\nThis appeared to be exposing what may be bugs in C extensions running in other threads.\ngc.collect() ought to be able to be called at any time, but if a badly written C extension has its objects swept out from under it when it wasn't expecting it, it may cause a hard interpreter crash. This is what we were seeing. The most suspect C extension was whatever implements checking the last modified time of files on Windows, but I couldn't narrow it down for sure because inserting printlines modified the timing such that I was unable to reproduce the bug.\n\nAt any rate, something in filewatcher.modulewatcher.ModuleWatcher.check_and_unload was causing the hard crash, but it went away when manual garbage collection in lyse was turned off.\n\nWe will simply shrug our shoulders at this, wonder why it didn't occur before, and move on.", "markup": "markdown", "html": "<p>Removed manual garbage collection after runs.</p>\n<p>This appeared to be exposing what may be bugs in C extensions running in other threads.<br />\ngc.collect() ought to be able to be called at any time, but if a badly written C extension has its objects swept out from under it when it wasn't expecting it, it may cause a hard interpreter crash. This is what we were seeing. The most suspect C extension was whatever implements checking the last modified time of files on Windows, but I couldn't narrow it down for sure because inserting printlines modified the timing such that I was unable to reproduce the bug.</p>\n<p>At any rate, something in filewatcher.modulewatcher.ModuleWatcher.check_and_unload was causing the hard crash, but it went away when manual garbage collection in lyse was turned off.</p>\n<p>We will simply shrug our shoulders at this, wonder why it didn't occur before, and move on.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "42ee0bdbd7736430d5134621dcc2e1486960116d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/42ee0bdbd7736430d5134621dcc2e1486960116d.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/42ee0bdbd7736430d5134621dcc2e1486960116d"}}}], "date": "2013-09-16T08:20:59+00:00", "message": "Removed manual garbage collection after runs.\n\nThis appeared to be exposing what may be bugs in C extensions running in other threads.\ngc.collect() ought to be able to be called at any time, but if a badly written C extension has its objects swept out from under it when it wasn't expecting it, it may cause a hard interpreter crash. This is what we were seeing. The most suspect C extension was whatever implements checking the last modified time of files on Windows, but I couldn't narrow it down for sure because inserting printlines modified the timing such that I was unable to reproduce the bug.\n\nAt any rate, something in filewatcher.modulewatcher.ModuleWatcher.check_and_unload was causing the hard crash, but it went away when manual garbage collection in lyse was turned off.\n\nWe will simply shrug our shoulders at this, wonder why it didn't occur before, and move on.", "type": "commit", "git_hash": "3fef10d68c7710e6a1eda6c2d66aa28cbe820cef", "tags": null, "branches": "default"}