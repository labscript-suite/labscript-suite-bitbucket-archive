{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/17/comments/20516104.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/17#comment-20516104"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/17.json"}}, "type": "issue", "id": 17, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Main interface is slow/unresponsive when multi-shot routines are running"}, "content": {"raw": "Progress! The dataframe in lyse is slow to pickle. After the processing lyse.data() does on it, the resulting dataframe is *fast* to pickle. The processing that appears to make pickling fast is df.convert_objects(). Before this call, one has a slow pickling object, after this call, one has a fast pickling object.\n\nMy impression is that convert_objects is replacing big hulking Python object containing column objects with fast, nimble, array datatype columns, where possible. Since most of the data in columns is numeric, it can replace them all with float/int/whatever arrays and this is much faster for pickle than considering each item a Python object of an arbitrary datatype.\n\nCommitting a fix to krb fork for testing.", "markup": "markdown", "html": "<p>Progress! The dataframe in lyse is slow to pickle. After the processing lyse.data() does on it, the resulting dataframe is <em>fast</em> to pickle. The processing that appears to make pickling fast is df.convert_objects(). Before this call, one has a slow pickling object, after this call, one has a fast pickling object.</p>\n<p>My impression is that convert_objects is replacing big hulking Python object containing column objects with fast, nimble, array datatype columns, where possible. Since most of the data in columns is numeric, it can replace them all with float/int/whatever arrays and this is much faster for pickle than considering each item a Python object of an arbitrary datatype.</p>\n<p>Committing a fix to krb fork for testing.</p>", "type": "rendered"}, "created_on": "2015-07-28T09:31:18.571665+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 20516104}