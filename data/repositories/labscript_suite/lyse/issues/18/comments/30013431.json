{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/18/comments/30013431.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/18#comment-30013431"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/18.json"}}, "type": "issue", "id": 18, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Compatibility with pandas 0.18"}, "content": {"raw": "The error derives from the call to [``concat_with_padding``](#!/labscript_suite/lyse/src/c8342f48860c54c634af8834524e691c9711f169/dataframe_utilities.py#dataframe_utilities.py-135) that attempts to concatenate an initially empty DataFrame with the first non-empty DataFrame of added shots. Specifically, this is due to columns with timezone aware datetimes, e.g. the ``run time`` column.\n\nMinimal breaking example (pandas 0.18.1, numpy 1.11.0):\n\n```\n#!python\ndf1 = pd.DataFrame(columns=['filepath'])\ndf2 = pd.DataFrame(data=[['C:\\\\test.h5', pandas.Timestamp('2016-08-18 16:04:59+1000', tz='Australia/Sydney')]],\n                   columns=['filepath', 'run time'])\npd.concat([df1, df2], ignore_index=True)\n\n```\nThis fails as above, at the call to ``np.empty``. Explicitly,\n\n```\n#!python\nIn [151]: df2.dtypes[1]\nOut[151]: datetime64[ns, Australia/Sydney]\n\nIn [152]: np.empty((0, 1), df2.dtypes[1])\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nC:\\labscript_suite\\lyse\\dataframe_utilities.py in <module>()\n----> 1 np.empty((0, 1), df2.dtypes[1])\n\nTypeError: data type not understood\n\n```\nThe error does not occur for naive datetimes.\n\nIf the columns of the empty DataFrame are not specified, there is no such problem, i.e. the following works.\n```\n#!python\ndf1 = pd.DataFrame()\ndf2 = pd.DataFrame(data=[['C:\\\\test.h5', pandas.Timestamp('2016-08-18 16:04:59+1000', tz='Australia/Sydney')]],\n                   columns=['filepath', 'run time'])\npd.concat([df1, df2], ignore_index=True)\n\n```", "markup": "markdown", "html": "<p>The error derives from the call to <a data-is-external-link=\"true\" href=\"#!/labscript_suite/lyse/src/c8342f48860c54c634af8834524e691c9711f169/dataframe_utilities.py#dataframe_utilities.py-135\" rel=\"nofollow\"><code>concat_with_padding</code></a> that attempts to concatenate an initially empty DataFrame with the first non-empty DataFrame of added shots. Specifically, this is due to columns with timezone aware datetimes, e.g. the <code>run time</code> column.</p>\n<p>Minimal breaking example (pandas 0.18.1, numpy 1.11.0):</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">df1</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;filepath&#39;</span><span class=\"p\">])</span>\n<span class=\"n\">df2</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"s1\">&#39;C:</span><span class=\"se\">\\\\</span><span class=\"s1\">test.h5&#39;</span><span class=\"p\">,</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">Timestamp</span><span class=\"p\">(</span><span class=\"s1\">&#39;2016-08-18 16:04:59+1000&#39;</span><span class=\"p\">,</span> <span class=\"n\">tz</span><span class=\"o\">=</span><span class=\"s1\">&#39;Australia/Sydney&#39;</span><span class=\"p\">)]],</span>\n                   <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;filepath&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;run time&#39;</span><span class=\"p\">])</span>\n<span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">concat</span><span class=\"p\">([</span><span class=\"n\">df1</span><span class=\"p\">,</span> <span class=\"n\">df2</span><span class=\"p\">],</span> <span class=\"n\">ignore_index</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>This fails as above, at the call to <code>np.empty</code>. Explicitly,</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">151</span><span class=\"p\">]:</span> <span class=\"n\">df2</span><span class=\"o\">.</span><span class=\"n\">dtypes</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">151</span><span class=\"p\">]:</span> <span class=\"n\">datetime64</span><span class=\"p\">[</span><span class=\"n\">ns</span><span class=\"p\">,</span> <span class=\"n\">Australia</span><span class=\"o\">/</span><span class=\"n\">Sydney</span><span class=\"p\">]</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">152</span><span class=\"p\">]:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">empty</span><span class=\"p\">((</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">df2</span><span class=\"o\">.</span><span class=\"n\">dtypes</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"o\">---------------------------------------------------------------------------</span>\n<span class=\"ne\">TypeError</span>                                 <span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">)</span>\n<span class=\"n\">C</span><span class=\"p\">:</span>\\<span class=\"n\">labscript_suite</span>\\<span class=\"n\">lyse</span>\\<span class=\"n\">dataframe_utilities</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n<span class=\"o\">----&gt;</span> <span class=\"mi\">1</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">empty</span><span class=\"p\">((</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">df2</span><span class=\"o\">.</span><span class=\"n\">dtypes</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"n\">data</span> <span class=\"nb\">type</span> <span class=\"ow\">not</span> <span class=\"n\">understood</span>\n</pre></div>\n\n\n<p>The error does not occur for naive datetimes.</p>\n<p>If the columns of the empty DataFrame are not specified, there is no such problem, i.e. the following works.</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">df1</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">()</span>\n<span class=\"n\">df2</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"s1\">&#39;C:</span><span class=\"se\">\\\\</span><span class=\"s1\">test.h5&#39;</span><span class=\"p\">,</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">Timestamp</span><span class=\"p\">(</span><span class=\"s1\">&#39;2016-08-18 16:04:59+1000&#39;</span><span class=\"p\">,</span> <span class=\"n\">tz</span><span class=\"o\">=</span><span class=\"s1\">&#39;Australia/Sydney&#39;</span><span class=\"p\">)]],</span>\n                   <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;filepath&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;run time&#39;</span><span class=\"p\">])</span>\n<span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">concat</span><span class=\"p\">([</span><span class=\"n\">df1</span><span class=\"p\">,</span> <span class=\"n\">df2</span><span class=\"p\">],</span> <span class=\"n\">ignore_index</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n</pre></div>", "type": "rendered"}, "created_on": "2016-08-22T01:20:08.628454+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": null, "type": "issue_comment", "id": 30013431}