{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/21/comments/37439618.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/21#comment-37439618"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/21.json"}}, "type": "issue", "id": 21, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Add units to globals"}, "content": {"raw": "The units entered in runmanager are so far used only as a comment - when you access a global you always get its value as typed in, without regard to the units, so I think it would be misleading to have the value displayed in lyse differ from the number you would get if you accessed that item from the dataframe for that shot.\n\nSo I think I'll add the tooltip, but the fact that the displayed number isn't necessarily SI I think is best addressed by making the globals themselves in SI units. Runmanager globals are evaluated in a namespace (`runmanager/functions.py`) with a few constants defined to help this:\n\n\n```\n#!python\n\nns = 1e-9\nus = 1e-6\nms = 1e-3\ns = 1\nHz = 1\nkHz = 1e3\nMHz = 1e6\nGHz = 1e9\n```\n\nSo you can write in runmanager a global with value `5 * kHz`, and write the units as Hz - the global will be stored as equal to 5000 and displayed in lyse as '5 k', and the tooltip will say 5000 (Hz) once I add the units there.", "markup": "markdown", "html": "<p>The units entered in runmanager are so far used only as a comment - when you access a global you always get its value as typed in, without regard to the units, so I think it would be misleading to have the value displayed in lyse differ from the number you would get if you accessed that item from the dataframe for that shot.</p>\n<p>So I think I'll add the tooltip, but the fact that the displayed number isn't necessarily SI I think is best addressed by making the globals themselves in SI units. Runmanager globals are evaluated in a namespace (<code>runmanager/functions.py</code>) with a few constants defined to help this:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">ns</span> <span class=\"o\">=</span> <span class=\"mf\">1e-9</span>\n<span class=\"n\">us</span> <span class=\"o\">=</span> <span class=\"mf\">1e-6</span>\n<span class=\"n\">ms</span> <span class=\"o\">=</span> <span class=\"mf\">1e-3</span>\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">Hz</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">kHz</span> <span class=\"o\">=</span> <span class=\"mf\">1e3</span>\n<span class=\"n\">MHz</span> <span class=\"o\">=</span> <span class=\"mf\">1e6</span>\n<span class=\"n\">GHz</span> <span class=\"o\">=</span> <span class=\"mf\">1e9</span>\n</pre></div>\n\n\n<p>So you can write in runmanager a global with value <code>5 * kHz</code>, and write the units as Hz - the global will be stored as equal to 5000 and displayed in lyse as '5 k', and the tooltip will say 5000 (Hz) once I add the units there.</p>", "type": "rendered"}, "created_on": "2017-06-07T17:47:22.672966+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 37439618}