{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/22/comments/37628920.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/22#comment-37628920"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/22.json"}}, "type": "issue", "id": 22, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Allow Multishot Routines to add to dataframe"}, "content": {"raw": "Yes, it was lost in the port to Qt because nobody was using it.\n\nThat's not what @PhyNerd is getting at though, I think. He's saving the data to individual shot files, it's just that lyse isn't going out to the files again to get this new data and put it in the dataframe.\n\nWe could certainly do this, something like, communicating to lyse in some way a list of shots that need updating - or save_result() could automatically inform lyse in some way that that shot needs updating. That's a pretty good way of doing it actually, and would help avoid needlessy re-opening the h5 file when nothing had changed.\n\nThe trouble with it is that opening and closing lots of files is a bit slow. Lyse would hang for potentially some tens of seconds if you had a few hundreds of shots. So probably a progress bar would be in order. Perhaps there could be some way to make it more efficient. If it is useful despite the slowness, then it's probably worth adding functionality for it.\n\nA workaround for the moment might be to add a dummy singleshot analysis routine that does nothing, uncheck all other singleshot and multishot analysis routines, and then mark all shots as not done - lyse will run the do-nothing script on them and then slurp in the new data produced from the multishot routine.", "markup": "markdown", "html": "<p>Yes, it was lost in the port to Qt because nobody was using it.</p>\n<p>That's not what @PhyNerd is getting at though, I think. He's saving the data to individual shot files, it's just that lyse isn't going out to the files again to get this new data and put it in the dataframe.</p>\n<p>We could certainly do this, something like, communicating to lyse in some way a list of shots that need updating - or save_result() could automatically inform lyse in some way that that shot needs updating. That's a pretty good way of doing it actually, and would help avoid needlessy re-opening the h5 file when nothing had changed.</p>\n<p>The trouble with it is that opening and closing lots of files is a bit slow. Lyse would hang for potentially some tens of seconds if you had a few hundreds of shots. So probably a progress bar would be in order. Perhaps there could be some way to make it more efficient. If it is useful despite the slowness, then it's probably worth adding functionality for it.</p>\n<p>A workaround for the moment might be to add a dummy singleshot analysis routine that does nothing, uncheck all other singleshot and multishot analysis routines, and then mark all shots as not done - lyse will run the do-nothing script on them and then slurp in the new data produced from the multishot routine.</p>", "type": "rendered"}, "created_on": "2017-06-16T07:10:40.773314+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 37628920}