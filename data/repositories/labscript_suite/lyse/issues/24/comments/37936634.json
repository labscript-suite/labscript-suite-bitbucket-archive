{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/24/comments/37936634.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/24#comment-37936634"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/24.json"}}, "type": "issue", "id": 24, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Use configuration file to load default analysis scripts"}, "content": {"raw": "We could add something like this:\n\nadd to Lyse class:\n\n```\n#!python\n\n    def save_configuration(self):\n        import pprint\n        save_file = os.path.join(os.path.dirname(os.path.realpath(__file__)),\"config.ini\")\n        lyse_config = LabConfig(save_file)\n        save_data = {}\n        save_data['SingleShot'] = [routine.filepath for routine in self.singleshot_routinebox.routines]\n        save_data['LastSingleShotFolder'] = self.singleshot_routinebox.last_opened_routine_folder\n        save_data['MultiShot'] = [routine.filepath for routine in self.multishot_routinebox.routines]\n        save_data['LastMultiShotFolder'] = self.multishot_routinebox.last_opened_routine_folder\n        save_data['LastFileBoxFolder'] = self.filebox.last_opened_shots_folder\n        for key, value in save_data.items():\n            lyse_config.set('lyse_state', key, pprint.pformat(value))\n\n    def load_configuration(self):\n        import ast\n        save_file = os.path.join(os.path.dirname(os.path.realpath(__file__)),\"config.ini\")\n        lyse_config = LabConfig(save_file)\n        try:\n            self.singleshot_routinebox.add_rotines(ast.literal_eval(lyse_config.get('lyse_state', 'SingleShot')))\n            self.singleshot_routinebox.last_opened_routine_folder = ast.literal_eval(lyse_config.get('lyse_state', 'LastSingleShotFolder'))\n            self.multishot_routinebox.add_rotines(ast.literal_eval(lyse_config.get('lyse_state', 'MultiShot')))\n            self.multishot_routinebox.last_opened_routine_folder = ast.literal_eval(lyse_config.get('lyse_state', 'LastMultiShotFolder'))\n            self.filebox.last_opened_shots_folder = ast.literal_eval(lyse_config.get('lyse_state', 'LastFileBoxFolder'))\n        except:\n            pass\n```\n\nand to Lyse.__init__():\n\n\n```\n#!python\n\n        self.ui.actionLoad_configuration.triggered.connect(self.load_configuration)\n        self.ui.actionSave_configuration.triggered.connect(self.save_configuration)\n```\n\nand add to/modify in RoutineBox:\n\n\n```\n#!python\n\n    def on_add_routines_clicked(self):\n        routine_files = QtGui.QFileDialog.getOpenFileNames(self.ui,\n                                                           'Select analysis routines',\n                                                           self.last_opened_routine_folder,\n                                                           \"Python scripts (*.py)\")\n        if not routine_files:\n            # User cancelled selection\n            return\n        # Convert to standard platform specific path, otherwise Qt likes forward slashes:\n        routine_files = [os.path.abspath(routine_file) for routine_file in routine_files]\n\n        # Save the containing folder for use next time we open the dialog box:\n        self.last_opened_routine_folder = os.path.dirname(routine_files[0])\n\n        self.add_rotines(routine_files)\n\n    def add_rotines(self, routine_files):\n        # Queue the files to be opened:\n        for filepath in routine_files:\n            if filepath in [routine.filepath for routine in self.routines]:\n                app.output_box.output('Warning: Ignoring duplicate analysis routine %s\\n'%filepath, red=True)\n                continue\n            routine = AnalysisRoutine(filepath, self.model, self.output_box_port)\n            self.routines.append(routine)\n        self.update_select_all_checkstate()\n```", "markup": "markdown", "html": "<p>We could add something like this:</p>\n<p>add to Lyse class:</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"k\">def</span> <span class=\"nf\">save_configuration</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">pprint</span>\n        <span class=\"n\">save_file</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)),</span><span class=\"s2\">&quot;config.ini&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">lyse_config</span> <span class=\"o\">=</span> <span class=\"n\">LabConfig</span><span class=\"p\">(</span><span class=\"n\">save_file</span><span class=\"p\">)</span>\n        <span class=\"n\">save_data</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"n\">save_data</span><span class=\"p\">[</span><span class=\"s1\">&#39;SingleShot&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">routine</span><span class=\"o\">.</span><span class=\"n\">filepath</span> <span class=\"k\">for</span> <span class=\"n\">routine</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">singleshot_routinebox</span><span class=\"o\">.</span><span class=\"n\">routines</span><span class=\"p\">]</span>\n        <span class=\"n\">save_data</span><span class=\"p\">[</span><span class=\"s1\">&#39;LastSingleShotFolder&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">singleshot_routinebox</span><span class=\"o\">.</span><span class=\"n\">last_opened_routine_folder</span>\n        <span class=\"n\">save_data</span><span class=\"p\">[</span><span class=\"s1\">&#39;MultiShot&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">routine</span><span class=\"o\">.</span><span class=\"n\">filepath</span> <span class=\"k\">for</span> <span class=\"n\">routine</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">multishot_routinebox</span><span class=\"o\">.</span><span class=\"n\">routines</span><span class=\"p\">]</span>\n        <span class=\"n\">save_data</span><span class=\"p\">[</span><span class=\"s1\">&#39;LastMultiShotFolder&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">multishot_routinebox</span><span class=\"o\">.</span><span class=\"n\">last_opened_routine_folder</span>\n        <span class=\"n\">save_data</span><span class=\"p\">[</span><span class=\"s1\">&#39;LastFileBoxFolder&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">filebox</span><span class=\"o\">.</span><span class=\"n\">last_opened_shots_folder</span>\n        <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">save_data</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"n\">lyse_config</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">&#39;lyse_state&#39;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">pprint</span><span class=\"o\">.</span><span class=\"n\">pformat</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">load_configuration</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">ast</span>\n        <span class=\"n\">save_file</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)),</span><span class=\"s2\">&quot;config.ini&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">lyse_config</span> <span class=\"o\">=</span> <span class=\"n\">LabConfig</span><span class=\"p\">(</span><span class=\"n\">save_file</span><span class=\"p\">)</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">singleshot_routinebox</span><span class=\"o\">.</span><span class=\"n\">add_rotines</span><span class=\"p\">(</span><span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">literal_eval</span><span class=\"p\">(</span><span class=\"n\">lyse_config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;lyse_state&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;SingleShot&#39;</span><span class=\"p\">)))</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">singleshot_routinebox</span><span class=\"o\">.</span><span class=\"n\">last_opened_routine_folder</span> <span class=\"o\">=</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">literal_eval</span><span class=\"p\">(</span><span class=\"n\">lyse_config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;lyse_state&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;LastSingleShotFolder&#39;</span><span class=\"p\">))</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">multishot_routinebox</span><span class=\"o\">.</span><span class=\"n\">add_rotines</span><span class=\"p\">(</span><span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">literal_eval</span><span class=\"p\">(</span><span class=\"n\">lyse_config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;lyse_state&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;MultiShot&#39;</span><span class=\"p\">)))</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">multishot_routinebox</span><span class=\"o\">.</span><span class=\"n\">last_opened_routine_folder</span> <span class=\"o\">=</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">literal_eval</span><span class=\"p\">(</span><span class=\"n\">lyse_config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;lyse_state&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;LastMultiShotFolder&#39;</span><span class=\"p\">))</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">filebox</span><span class=\"o\">.</span><span class=\"n\">last_opened_shots_folder</span> <span class=\"o\">=</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">literal_eval</span><span class=\"p\">(</span><span class=\"n\">lyse_config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;lyse_state&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;LastFileBoxFolder&#39;</span><span class=\"p\">))</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n</pre></div>\n\n\n<p>and to Lyse.<strong>init</strong>():</p>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">actionLoad_configuration</span><span class=\"o\">.</span><span class=\"n\">triggered</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">load_configuration</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">actionSave_configuration</span><span class=\"o\">.</span><span class=\"n\">triggered</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">save_configuration</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>and add to/modify in RoutineBox:</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"k\">def</span> <span class=\"nf\">on_add_routines_clicked</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">routine_files</span> <span class=\"o\">=</span> <span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QFileDialog</span><span class=\"o\">.</span><span class=\"n\">getOpenFileNames</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ui</span><span class=\"p\">,</span>\n                                                           <span class=\"s1\">&#39;Select analysis routines&#39;</span><span class=\"p\">,</span>\n                                                           <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">last_opened_routine_folder</span><span class=\"p\">,</span>\n                                                           <span class=\"s2\">&quot;Python scripts (*.py)&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">routine_files</span><span class=\"p\">:</span>\n            <span class=\"c1\"># User cancelled selection</span>\n            <span class=\"k\">return</span>\n        <span class=\"c1\"># Convert to standard platform specific path, otherwise Qt likes forward slashes:</span>\n        <span class=\"n\">routine_files</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">abspath</span><span class=\"p\">(</span><span class=\"n\">routine_file</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">routine_file</span> <span class=\"ow\">in</span> <span class=\"n\">routine_files</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># Save the containing folder for use next time we open the dialog box:</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">last_opened_routine_folder</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">routine_files</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_rotines</span><span class=\"p\">(</span><span class=\"n\">routine_files</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">add_rotines</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">routine_files</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Queue the files to be opened:</span>\n        <span class=\"k\">for</span> <span class=\"n\">filepath</span> <span class=\"ow\">in</span> <span class=\"n\">routine_files</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">filepath</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"n\">routine</span><span class=\"o\">.</span><span class=\"n\">filepath</span> <span class=\"k\">for</span> <span class=\"n\">routine</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">routines</span><span class=\"p\">]:</span>\n                <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">output_box</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">(</span><span class=\"s1\">&#39;Warning: Ignoring duplicate analysis routine </span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"n\">filepath</span><span class=\"p\">,</span> <span class=\"n\">red</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n                <span class=\"k\">continue</span>\n            <span class=\"n\">routine</span> <span class=\"o\">=</span> <span class=\"n\">AnalysisRoutine</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">output_box_port</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">routines</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">routine</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_select_all_checkstate</span><span class=\"p\">()</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-06-29T20:30:38.449115+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 37936634}