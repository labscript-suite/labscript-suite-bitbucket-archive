{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/29/comments/38287297.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/29#comment-38287297"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/29.json"}}, "type": "issue", "id": 29, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "speed up shot loading"}, "content": {"raw": "As for the exporting/importing thing, I'm not sure. What does your workaround do? It's for loading files in and out of lyse? I suppose \"load the exact state you had before\" can be cached without much difficulty, but how would you handle if a file has changed on disk or if different files are to be loaded? I'm open to all sorts of caches, but it's hard to get things like this right.\n\nOh by the way one more thing. At the moment we have some code running that makes sure we are not making calls to Qt outside the main thread. This is very important during development, as missing even a single call that is outside the main thread leads to extremely hard to debug bugs. However, this code runs every single time a Qt function is called, and so it runs a lot during `update_row()`.\n\nYou can disable it by putting somewhere at the top level of `__main__.py`:\n\n\n```\n#!python\n\nfrom qtutils import qtlock\nqtlock.enforce(False)\n```\nWould be interesting to see if it makes a difference.", "markup": "markdown", "html": "<p>As for the exporting/importing thing, I'm not sure. What does your workaround do? It's for loading files in and out of lyse? I suppose \"load the exact state you had before\" can be cached without much difficulty, but how would you handle if a file has changed on disk or if different files are to be loaded? I'm open to all sorts of caches, but it's hard to get things like this right.</p>\n<p>Oh by the way one more thing. At the moment we have some code running that makes sure we are not making calls to Qt outside the main thread. This is very important during development, as missing even a single call that is outside the main thread leads to extremely hard to debug bugs. However, this code runs every single time a Qt function is called, and so it runs a lot during <code>update_row()</code>.</p>\n<p>You can disable it by putting somewhere at the top level of <code>__main__.py</code>:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">qtutils</span> <span class=\"kn\">import</span> <span class=\"n\">qtlock</span>\n<span class=\"n\">qtlock</span><span class=\"o\">.</span><span class=\"n\">enforce</span><span class=\"p\">(</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Would be interesting to see if it makes a difference.</p>", "type": "rendered"}, "created_on": "2017-07-17T19:26:02.067630+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-17T19:26:39.695148+00:00", "type": "issue_comment", "id": 38287297}