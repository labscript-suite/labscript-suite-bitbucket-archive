{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/29/comments/38312522.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/29#comment-38312522"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/29.json"}}, "type": "issue", "id": 29, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "speed up shot loading"}, "content": {"raw": "Moving the variables to the global namespace didn't do much. As well as removing the try and ecept and replacing it with if else.\n\n```\n#!python\n\nif exponent % 3 == 0 and -25 < exponent < 25:\n...\nelse:\n```\n I guess scientific notation is just that dominant as it's called lots of times.\n\n\nA \"significant\" gain however can be achieved by removing resizeRowToContents in add_files but the gain isn't great enough to justify removing it (1 second).\n\nThe main time consuming factor in update_row seems to be the creation of all the QtGui.QStandardItems. This leads me to believe that rewriting Qt's modle would most likely hold a much larger increase in speed. However pandas and Qt are both not my strong suite  as I've had my first contact with them last month. \n\nLuckily performance problems with many shots are confined to lyse for the moment. But your profiling tool is/was definitely a big help finding lines that need improvement.\n\nI'll wait for the update dataframe pull request to go through and then I'll create the pull request. The repos were quite inactive in the last weeks so I'm not really expecting much response at the moment anyway.", "markup": "markdown", "html": "<p>Moving the variables to the global namespace didn't do much. As well as removing the try and ecept and replacing it with if else.</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">if</span> <span class=\"n\">exponent</span> <span class=\"o\">%</span> <span class=\"mi\">3</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"ow\">and</span> <span class=\"o\">-</span><span class=\"mi\">25</span> <span class=\"o\">&lt;</span> <span class=\"n\">exponent</span> <span class=\"o\">&lt;</span> <span class=\"mi\">25</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n</pre></div>\n\n\n<p>I guess scientific notation is just that dominant as it's called lots of times.</p>\n<p>A \"significant\" gain however can be achieved by removing resizeRowToContents in add_files but the gain isn't great enough to justify removing it (1 second).</p>\n<p>The main time consuming factor in update_row seems to be the creation of all the QtGui.QStandardItems. This leads me to believe that rewriting Qt's modle would most likely hold a much larger increase in speed. However pandas and Qt are both not my strong suite  as I've had my first contact with them last month. </p>\n<p>Luckily performance problems with many shots are confined to lyse for the moment. But your profiling tool is/was definitely a big help finding lines that need improvement.</p>\n<p>I'll wait for the update dataframe pull request to go through and then I'll create the pull request. The repos were quite inactive in the last weeks so I'm not really expecting much response at the moment anyway.</p>", "type": "rendered"}, "created_on": "2017-07-18T19:09:42.997892+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 38312522}