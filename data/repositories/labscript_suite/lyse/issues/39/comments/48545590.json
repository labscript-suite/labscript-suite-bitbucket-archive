{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/39/comments/48545590.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/39#comment-48545590"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/39.json"}}, "type": "issue", "id": 39, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Bug with module watcher reloading when mpl_toolkit used"}, "content": {"raw": "Ok, I can reproduce and I see the problem.\n\n``setuptools.pkg_resources.extern.VendorImporter``, which is used by ``mpl_toolkits`` to import its submodules, adds itself to ``sys.meta_path`` (a list of objects for overriding import behaviour). The module it lives in is deleted from ``sys.modules``, but the importer instance is still in ``sys.meta_path`` and one of its methods expects to be able to look up global variables still. That method gets called next time ``mpl_toolkits`` tries to load some submodules, but that instance sees a global scope where everything is ``None``, and breaks.\n\nSolution is likely to have ``ModuleWatcher`` roll back ``sys.meta_path`` the same way it rolls back ``sys.path``. I'll look into it.", "markup": "markdown", "html": "<p>Ok, I can reproduce and I see the problem.</p>\n<p><code>setuptools.pkg_resources.extern.VendorImporter</code>, which is used by <code>mpl_toolkits</code> to import its submodules, adds itself to <code>sys.meta_path</code> (a list of objects for overriding import behaviour). The module it lives in is deleted from <code>sys.modules</code>, but the importer instance is still in <code>sys.meta_path</code> and one of its methods expects to be able to look up global variables still. That method gets called next time <code>mpl_toolkits</code> tries to load some submodules, but that instance sees a global scope where everything is <code>None</code>, and breaks.</p>\n<p>Solution is likely to have <code>ModuleWatcher</code> roll back <code>sys.meta_path</code> the same way it rolls back <code>sys.path</code>. I'll look into it.</p>", "type": "rendered"}, "created_on": "2018-10-24T20:46:04.202386+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-10-24T20:46:38.610521+00:00", "type": "issue_comment", "id": 48545590}