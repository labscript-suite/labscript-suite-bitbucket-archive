{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/45/comments/53307942.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/45#comment-53307942"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Dataframe stopped updating after multishot routine error"}, "content": {"raw": "I have not been able to reproduce this, but I have noticed some issues in lyse's updating of rows in the Qt model. Firstly, the code that was supposed to be updating rows was not updating them at all, because checking if the column is in the list of things that need updating was not taking into account that the column names are tuples of arbitrary length with empty strings padded. So the following (line ~1447 in `update_row()`):\n```python\n        # Update the data in the Qt model:\n        dataframe_row = self.dataframe.iloc[row_number].to_dict()\n        for column_number, column_name in self.column_names.items():\n            if not isinstance(column_name, tuple):\n                # One of our special columns, does not correspond to a column in the dataframe:\n                continue\n            if updated_row_data is not None and column_name not in updated_row_data:\n                continue\n```\n\nwas always `continue`ing and not updating any Qt items. So it needed to be changed to:\n\n```diff\n-            if updated_row_data is not None and column_name not in updated_row_data:\n-                continue\n+            if updated_row_data is not None:\n+                if column_name[:column_name.index('')] not in updated_row_data:\n+                    continue\n```\nsince the keys of `updated_row_data` do not have padded empty strings.\n\nSo the Qt model was never being updated when we thought it was! Instead, it was being updated in a later call that was intended to only update the percentage status of the row, but actually updated every Qt model item, defeating the purpose of intentionally trying to only update the ones that changed.\n\nSo I've now split off the updating of the progress percentage to a different function (such that that call does not touch any parts of the Qt model other than the progress percentage), and fixed the check for whether a model item should be updated such that the other calls actually do update it.\n\nI still do not see what caused the original issue, so I do not have a great reason to think this will fix it. But, since the code was not doing the intended thing before (even though the result should still have worked) and it is doing the intended thing now, there is some chance maybe it will fix the issue, whatever it was.\n\nThis attempted fix is in PR #68.\n\nIf the problem occurs again, could you check whether the value in the lyse GUI agrees with the value in the dataframe? You can grab the lyse dataframe from a separate Python interpreter with `import lyse; df = lyse.data()` to inspect it without disturbing lyse.\n\nThis could help narrow it down to whether it is the GUI part that has a problem, or something before then.", "markup": "markdown", "html": "<p>I have not been able to reproduce this, but I have noticed some issues in lyse's updating of rows in the Qt model. Firstly, the code that was supposed to be updating rows was not updating them at all, because checking if the column is in the list of things that need updating was not taking into account that the column names are tuples of arbitrary length with empty strings padded. So the following (line ~1447 in <code>update_row()</code>):</p>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"c1\"># Update the data in the Qt model:</span>\n        <span class=\"n\">dataframe_row</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"o\">.</span><span class=\"n\">iloc</span><span class=\"p\">[</span><span class=\"n\">row_number</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">to_dict</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">column_number</span><span class=\"p\">,</span> <span class=\"n\">column_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">column_names</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">column_name</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">):</span>\n                <span class=\"c1\"># One of our special columns, does not correspond to a column in the dataframe:</span>\n                <span class=\"k\">continue</span>\n            <span class=\"k\">if</span> <span class=\"n\">updated_row_data</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span> <span class=\"ow\">and</span> <span class=\"n\">column_name</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">updated_row_data</span><span class=\"p\">:</span>\n                <span class=\"k\">continue</span>\n</pre></div>\n\n\n<p>was always <code>continue</code>ing and not updating any Qt items. So it needed to be changed to:</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gd\">-            if updated_row_data is not None and column_name not in updated_row_data:</span>\n<span class=\"gd\">-                continue</span>\n<span class=\"gi\">+            if updated_row_data is not None:</span>\n<span class=\"gi\">+                if column_name[:column_name.index(&#39;&#39;)] not in updated_row_data:</span>\n<span class=\"gi\">+                    continue</span>\n</pre></div>\n\n\n<p>since the keys of <code>updated_row_data</code> do not have padded empty strings.</p>\n<p>So the Qt model was never being updated when we thought it was! Instead, it was being updated in a later call that was intended to only update the percentage status of the row, but actually updated every Qt model item, defeating the purpose of intentionally trying to only update the ones that changed.</p>\n<p>So I've now split off the updating of the progress percentage to a different function (such that that call does not touch any parts of the Qt model other than the progress percentage), and fixed the check for whether a model item should be updated such that the other calls actually do update it.</p>\n<p>I still do not see what caused the original issue, so I do not have a great reason to think this will fix it. But, since the code was not doing the intended thing before (even though the result should still have worked) and it is doing the intended thing now, there is some chance maybe it will fix the issue, whatever it was.</p>\n<p>This attempted fix is in <a href=\"#!/labscript_suite/lyse/pull-requests/68/an-attempt-to-fix-issue-45\" rel=\"nofollow\" class=\"ap-connect-link\">PR #68</a>.</p>\n<p>If the problem occurs again, could you check whether the value in the lyse GUI agrees with the value in the dataframe? You can grab the lyse dataframe from a separate Python interpreter with <code>import lyse; df = lyse.data()</code> to inspect it without disturbing lyse.</p>\n<p>This could help narrow it down to whether it is the GUI part that has a problem, or something before then.</p>", "type": "rendered"}, "created_on": "2019-08-06T20:09:38.757606+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-08-06T20:09:55.025123+00:00", "type": "issue_comment", "id": 53307942}