{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51902404.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51902404"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "\\(bleh\u2026bitbucket locked up my browser last time I wrote this out \\(and so I lost the whole post\\) so apologies for the brevity\u2026.\\)\n\nShaun and I have worked around this before by creating a wrapper lyse script which launches the original script \\(that uses multiprocessing\\) with `subprocess.Popen()` and passes in the lyse shot file path via a command line argument, and extracts results either through stdout or the h5 file \\(for large datasets\\). @cbillington will know if there is an easy way to fix it properly \\(but I suspect not because multiprocessing libraries are inherently messy in how they fork processes, which is why we wrote zprocess\\).", "markup": "markdown", "html": "<p>(bleh\u2026bitbucket locked up my browser last time I wrote this out (and so I lost the whole post) so apologies for the brevity\u2026.)</p>\n<p>Shaun and I have worked around this before by creating a wrapper lyse script which launches the original script (that uses multiprocessing) with <code>subprocess.Popen()</code> and passes in the lyse shot file path via a command line argument, and extracts results either through stdout or the h5 file (for large datasets). @cbillington will know if there is an easy way to fix it properly (but I suspect not because multiprocessing libraries are inherently messy in how they fork processes, which is why we wrote zprocess).</p>", "type": "rendered"}, "created_on": "2019-05-01T01:14:43.755276+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 51902404}