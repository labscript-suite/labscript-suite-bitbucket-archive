{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51902497.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51902497"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "So this is working for me on Linux:\n\n```python\nimport multiprocessing\nimport lyse\n\nfrom farm_module import farm\n\nif __name__ == '__main__':\n    if multiprocessing.get_start_method(True) != 'spawn':\n        multiprocessing.set_start_method('spawn')\n\n    sml= multiprocessing.Process(target=farm)\n    sml.start()\n\n```\n\nIt should work on Windows as well, though the checking/setting the start method should be unnecessary on Windows since 'spawn' is the default there, it is just to tell multiprocessing not to `fork()` on Linux.", "markup": "markdown", "html": "<p>So this is working for me on Linux:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n<span class=\"kn\">import</span> <span class=\"nn\">lyse</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">farm_module</span> <span class=\"kn\">import</span> <span class=\"n\">farm</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">get_start_method</span><span class=\"p\">(</span><span class=\"bp\">True</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"s1\">&#39;spawn&#39;</span><span class=\"p\">:</span>\n        <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">set_start_method</span><span class=\"p\">(</span><span class=\"s1\">&#39;spawn&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">sml</span><span class=\"o\">=</span> <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">Process</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">farm</span><span class=\"p\">)</span>\n    <span class=\"n\">sml</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>It should work on Windows as well, though the checking/setting the start method should be unnecessary on Windows since 'spawn' is the default there, it is just to tell multiprocessing not to <code>fork()</code> on Linux.</p>", "type": "rendered"}, "created_on": "2019-05-01T01:37:35.641457+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 51902497}