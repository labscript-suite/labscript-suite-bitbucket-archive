{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51902404.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51902404"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "\\(bleh\u2026bitbucket locked up my browser last time I wrote this out \\(and so I lost the whole post\\) so apologies for the brevity\u2026.\\)\n\nShaun and I have worked around this before by creating a wrapper lyse script which launches the original script \\(that uses multiprocessing\\) with `subprocess.Popen()` and passes in the lyse shot file path via a command line argument, and extracts results either through stdout or the h5 file \\(for large datasets\\). @cbillington will know if there is an easy way to fix it properly \\(but I suspect not because multiprocessing libraries are inherently messy in how they fork processes, which is why we wrote zprocess\\).", "markup": "markdown", "html": "<p>(bleh\u2026bitbucket locked up my browser last time I wrote this out (and so I lost the whole post) so apologies for the brevity\u2026.)</p>\n<p>Shaun and I have worked around this before by creating a wrapper lyse script which launches the original script (that uses multiprocessing) with <code>subprocess.Popen()</code> and passes in the lyse shot file path via a command line argument, and extracts results either through stdout or the h5 file (for large datasets). @cbillington will know if there is an easy way to fix it properly (but I suspect not because multiprocessing libraries are inherently messy in how they fork processes, which is why we wrote zprocess).</p>", "type": "rendered"}, "created_on": "2019-05-01T01:14:43.755276+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 51902404}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51902455.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51902455"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "Ah, tricky. \n\nThe problem is that lyse does not actually run the analysis script  as the `__main__` module. It adds a global variable `__name__ = '__main__'` so that analysis code *thinks* it's in the `__main__` module, but if you look up `sys.modules['__main__']`, you get analysis_subprocess.py, which of course is the actual initial script being run by Python.\n\nAnd in Windows since multiprocessing is not a fork at all, it expects to be able to run the file corresponding to the `__main__` module in the subprocess and that it will find `farm()` there. Of course farm is not in `analysis_subprocess.py`. (Also analysis_subprocess.py hangs at startup trying to connect to lyse, but that's another issue).\n\nSo I can fix lyse to be more convincing about running the analysis routine as the `__main__` module, so that multiprocessing works. I'll have a look at this, I'm sure it can be done!\n\nBut in the meantime, you should be able to make it work by defining `farm()` in a separate module and importing it into your analysis script. That way the multiprocessing module will be able to find it in the subprocess.\n\nZprocess actually has exactly the same issue with its `Process` class, so it will not be of any help! Being on Linux doesn't help either since Qt GUIs and zmq sockets do not seem to survive forking (or, something doesn't it just seems to hang indefinitely). You need to tell the multiprocessing module to 'spawn' processes the Windows way instead of forking.", "markup": "markdown", "html": "<p>Ah, tricky. </p>\n<p>The problem is that lyse does not actually run the analysis script  as the <code>__main__</code> module. It adds a global variable <code>__name__ = '__main__'</code> so that analysis code <em>thinks</em> it's in the <code>__main__</code> module, but if you look up <code>sys.modules['__main__']</code>, you get analysis_subprocess.py, which of course is the actual initial script being run by Python.</p>\n<p>And in Windows since multiprocessing is not a fork at all, it expects to be able to run the file corresponding to the <code>__main__</code> module in the subprocess and that it will find <code>farm()</code> there. Of course farm is not in <code>analysis_subprocess.py</code>. (Also analysis_subprocess.py hangs at startup trying to connect to lyse, but that's another issue).</p>\n<p>So I can fix lyse to be more convincing about running the analysis routine as the <code>__main__</code> module, so that multiprocessing works. I'll have a look at this, I'm sure it can be done!</p>\n<p>But in the meantime, you should be able to make it work by defining <code>farm()</code> in a separate module and importing it into your analysis script. That way the multiprocessing module will be able to find it in the subprocess.</p>\n<p>Zprocess actually has exactly the same issue with its <code>Process</code> class, so it will not be of any help! Being on Linux doesn't help either since Qt GUIs and zmq sockets do not seem to survive forking (or, something doesn't it just seems to hang indefinitely). You need to tell the multiprocessing module to 'spawn' processes the Windows way instead of forking.</p>", "type": "rendered"}, "created_on": "2019-05-01T01:28:10.658503+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 51902455}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51902497.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51902497"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "So this is working for me on Linux:\n\n```python\nimport multiprocessing\nimport lyse\n\nfrom farm_module import farm\n\nif __name__ == '__main__':\n    if multiprocessing.get_start_method(True) != 'spawn':\n        multiprocessing.set_start_method('spawn')\n\n    sml= multiprocessing.Process(target=farm)\n    sml.start()\n\n```\n\nIt should work on Windows as well, though the checking/setting the start method should be unnecessary on Windows since 'spawn' is the default there, it is just to tell multiprocessing not to `fork()` on Linux.", "markup": "markdown", "html": "<p>So this is working for me on Linux:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n<span class=\"kn\">import</span> <span class=\"nn\">lyse</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">farm_module</span> <span class=\"kn\">import</span> <span class=\"n\">farm</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">get_start_method</span><span class=\"p\">(</span><span class=\"bp\">True</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"s1\">&#39;spawn&#39;</span><span class=\"p\">:</span>\n        <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">set_start_method</span><span class=\"p\">(</span><span class=\"s1\">&#39;spawn&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">sml</span><span class=\"o\">=</span> <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">Process</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">farm</span><span class=\"p\">)</span>\n    <span class=\"n\">sml</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>It should work on Windows as well, though the checking/setting the start method should be unnecessary on Windows since 'spawn' is the default there, it is just to tell multiprocessing not to <code>fork()</code> on Linux.</p>", "type": "rendered"}, "created_on": "2019-05-01T01:37:35.641457+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 51902497}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51903650.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51903650"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "Super! Many thanks both of you for the quick response. This is a student project and needs to get unstuck, so thanks for responding to the \u2018urgent\u2019 issue. We\u2019ll try putting the code in a separate file and importing it\u2026 this is a harmless solution.\n\nI\u2019ve got no problem with code in multiple files, but want to avoid multiple actors that need to be separately started or maybe go off an become zombies. Our previous solution was a three-actor nightmare.", "markup": "markdown", "html": "<p>Super! Many thanks both of you for the quick response. This is a student project and needs to get unstuck, so thanks for responding to the \u2018urgent\u2019 issue. We\u2019ll try putting the code in a separate file and importing it\u2026 this is a harmless solution.</p>\n<p>I\u2019ve got no problem with code in multiple files, but want to avoid multiple actors that need to be separately started or maybe go off an become zombies. Our previous solution was a three-actor nightmare.</p>", "type": "rendered"}, "created_on": "2019-05-01T06:13:31.160692+00:00", "user": {"display_name": "Lincoln Turner", "uuid": "{dc6eefbb-6560-488e-bd24-b7cabe6e3fb2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdc6eefbb-6560-488e-bd24-b7cabe6e3fb2%7D"}, "html": {"href": "https://bitbucket.org/%7Bdc6eefbb-6560-488e-bd24-b7cabe6e3fb2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/26c040adc170a4ec90cd9bc4f7ab0479d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLT-2.png"}}, "nickname": "lincolnturner_monash", "type": "user", "account_id": "5ba47327653ec8726d2a0087"}, "updated_on": null, "type": "issue_comment", "id": 51903650}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51904039.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51904039"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "So it runs the first time, the subprocess runs, it even displays \u201cPrint something\u201d \\(I wasn\u2019t expecting stdout to find its way home, but good stuff\\). And lyse shows the process as completed. \\(no eggtimer\\). \n\n\u200c\n\nHowever running it a second time produces the below traceback. It should be idempotent at this stage, not least because the subprocess prints something and then exits, but even if the subprocess was long-lived, I should be able to kick off a few of them at least! Of course this is not the ultimate aim, but something else is broken here \\(and Steven Li has got this KeyError a few times now in several different way \\(multithread and multiprocess\\) making me thing it is a lyse bug\u2026\n\n`Traceback (most recent call last):`  \n`File \"C:\\Program Files\\Anaconda3\\envs\\python37\\lib\\threading.py\", line 865, in run`  \n`self.target(*self.args, **self.kwargs)`  \n`File \"C:\\labscript_suite\\lyse_main.py\", line 721, in analysis_loop`  \n`self.do_analysis(filepath)`  \n`File \"C:\\labscript_suite\\lyse_main.py\", line 745, in do_analysis`  \n`success, updated_data = routine.do_analysis(filepath)`  \n`File \"C:\\labscript_suite\\lyse_main.py\", line 272, in do_analysis`  \n`signal, data = self.from_worker.get()`  \n`File \"C:\\Program Files\\Anaconda3\\envs\\python37\\lib\\site-packages\\zprocess\\process_tree.py\", line 313, in get`  \n`obj = self.sock.recv_pyobj()`  \n`File \"C:\\Program Files\\Anaconda3\\envs\\python37\\lib\\site-packages\\zmq\\sugar\\socket.py\", line 624, in recv_pyobj`  \n`return self._deserialize(msg, pickle.loads)`  \n`File \"C:\\Program Files\\Anaconda3\\envs\\python37\\lib\\site-packages\\zmq\\sugar\\socket.py\", line 491, in _deserialize`  \n`return load(recvd)`  \n`KeyError: 101`", "markup": "markdown", "html": "<p>So it runs the first time, the subprocess runs, it even displays \u201cPrint something\u201d (I wasn\u2019t expecting stdout to find its way home, but good stuff). And lyse shows the process as completed. (no eggtimer). </p>\n<p>\u200c</p>\n<p>However running it a second time produces the below traceback. It should be idempotent at this stage, not least because the subprocess prints something and then exits, but even if the subprocess was long-lived, I should be able to kick off a few of them at least! Of course this is not the ultimate aim, but something else is broken here (and Steven Li has got this KeyError a few times now in several different way (multithread and multiprocess) making me thing it is a lyse bug\u2026</p>\n<p><code>Traceback (most recent call last):</code><br />\n<code>File \"C:\\Program Files\\Anaconda3\\envs\\python37\\lib\\threading.py\", line 865, in run</code><br />\n<code>self.target(*self.args, **self.kwargs)</code><br />\n<code>File \"C:\\labscript_suite\\lyse_main.py\", line 721, in analysis_loop</code><br />\n<code>self.do_analysis(filepath)</code><br />\n<code>File \"C:\\labscript_suite\\lyse_main.py\", line 745, in do_analysis</code><br />\n<code>success, updated_data = routine.do_analysis(filepath)</code><br />\n<code>File \"C:\\labscript_suite\\lyse_main.py\", line 272, in do_analysis</code><br />\n<code>signal, data = self.from_worker.get()</code><br />\n<code>File \"C:\\Program Files\\Anaconda3\\envs\\python37\\lib\\site-packages\\zprocess\\process_tree.py\", line 313, in get</code><br />\n<code>obj = self.sock.recv_pyobj()</code><br />\n<code>File \"C:\\Program Files\\Anaconda3\\envs\\python37\\lib\\site-packages\\zmq\\sugar\\socket.py\", line 624, in recv_pyobj</code><br />\n<code>return self._deserialize(msg, pickle.loads)</code><br />\n<code>File \"C:\\Program Files\\Anaconda3\\envs\\python37\\lib\\site-packages\\zmq\\sugar\\socket.py\", line 491, in _deserialize</code><br />\n<code>return load(recvd)</code><br />\n<code>KeyError: 101</code></p>", "type": "rendered"}, "created_on": "2019-05-01T07:12:59.852913+00:00", "user": {"display_name": "Lincoln Turner", "uuid": "{dc6eefbb-6560-488e-bd24-b7cabe6e3fb2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdc6eefbb-6560-488e-bd24-b7cabe6e3fb2%7D"}, "html": {"href": "https://bitbucket.org/%7Bdc6eefbb-6560-488e-bd24-b7cabe6e3fb2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/26c040adc170a4ec90cd9bc4f7ab0479d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLT-2.png"}}, "nickname": "lincolnturner_monash", "type": "user", "account_id": "5ba47327653ec8726d2a0087"}, "updated_on": null, "type": "issue_comment", "id": 51904039}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51908559.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51908559"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "Ah, my mistake - I did not test my code in an isolated way, I had made changes to analysis_subprocess.py that it turns out are necessary too.\n\nIt looks like the subprocess executes the `__main__` module unconditionally, so the fact that `analysis_subprocess.py` has import side-effects (i.e. making zmq connections to the parent process) is messing with things. I have no idea why `KeyError: 101` within unpickling is the result specifically, but probably zeromq ends up with multiple connections to lyse and is round-robining the messages, which is absolutely not as designed! \n\nI've made [a patch](#!/labscript_suite/lyse/pull-requests/61/partial-fix-for-48-make) to move all the side-effects of `analysis_subprocess.py` into its `__main__` block, such that they will not be executed in the subprocess.\n\nIt seems to fix the issue, at least, so long as the objects needed by the child process are defined in a separate module.\n\nYou (or Steven) can test by:\n```\nhg pull --branch bugfix #!/cbillington/lyse\nhg update bugfix\n```\nin the lyse repo.\n\nBut I'll also look into a more complete fix where Python treats your analysis routine as the `__main__` module for the purposes of multiprocessing.", "markup": "markdown", "html": "<p>Ah, my mistake - I did not test my code in an isolated way, I had made changes to analysis_subprocess.py that it turns out are necessary too.</p>\n<p>It looks like the subprocess executes the <code>__main__</code> module unconditionally, so the fact that <code>analysis_subprocess.py</code> has import side-effects (i.e. making zmq connections to the parent process) is messing with things. I have no idea why <code>KeyError: 101</code> within unpickling is the result specifically, but probably zeromq ends up with multiple connections to lyse and is round-robining the messages, which is absolutely not as designed! </p>\n<p>I've made <a data-is-external-link=\"true\" href=\"#!/labscript_suite/lyse/pull-requests/61/partial-fix-for-48-make\" rel=\"nofollow\">a patch</a> to move all the side-effects of <code>analysis_subprocess.py</code> into its <code>__main__</code> block, such that they will not be executed in the subprocess.</p>\n<p>It seems to fix the issue, at least, so long as the objects needed by the child process are defined in a separate module.</p>\n<p>You (or Steven) can test by:</p>\n<div class=\"codehilite\"><pre><span></span>hg pull --branch bugfix #!/cbillington/lyse\nhg update bugfix\n</pre></div>\n\n\n<p>in the lyse repo.</p>\n<p>But I'll also look into a more complete fix where Python treats your analysis routine as the <code>__main__</code> module for the purposes of multiprocessing.</p>", "type": "rendered"}, "created_on": "2019-05-01T15:20:26.330666+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 51908559}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51908961.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51908961"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "Further to my last comment, I've gone ahead and done the 'full blown' fix that should make your original code work without the need for moving code into an external module. The only caveats that apply are the usual ones for multiprocessing (guard the code you don't want to run in the subprocess behind a `if __name__ == '__main__':` check).\n\nThis wasn't hard to do, and is cleaner than what we were doing before, but nonethless is a change in the semantics of how lyse code runs and so has the potential to mess with things. It should be tested on real setups before merging.", "markup": "markdown", "html": "<p>Further to my last comment, I've gone ahead and done the 'full blown' fix that should make your original code work without the need for moving code into an external module. The only caveats that apply are the usual ones for multiprocessing (guard the code you don't want to run in the subprocess behind a <code>if __name__ == '__main__':</code> check).</p>\n<p>This wasn't hard to do, and is cleaner than what we were doing before, but nonethless is a change in the semantics of how lyse code runs and so has the potential to mess with things. It should be tested on real setups before merging.</p>", "type": "rendered"}, "created_on": "2019-05-01T15:58:05.080100+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-05-01T15:58:26.008174+00:00", "type": "issue_comment", "id": 51908961}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51927740.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51927740"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "The patch fixes the issue. Some observations:\n\n* The print statement output does not appear in the OutputBox when run as a single script or when 'farm' is imported to your example `__main__` method above.\n* This also fixes the same bug I observed with running `threading.Thread`.\n* I've observed a subsequent bug if the thread is long-lived and the analysis script is modified. `labscript_utils.modulewatcher` detects the latter and reloads all modules \\(at the\\) next run. I get the following exception:\n\n```\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\win32\\lib\\pywintypes.py\", line 129, in import_pywin32_system_module\n  assert sys.modules[modname] is not old_mod\nAssertionError\n```\n\nI\u2019ll try to produce a minimum example of this.", "markup": "markdown", "html": "<p>The patch fixes the issue. Some observations:</p>\n<ul>\n<li>The print statement output does not appear in the OutputBox when run as a single script or when 'farm' is imported to your example <code>__main__</code> method above.</li>\n<li>This also fixes the same bug I observed with running <code>threading.Thread</code>.</li>\n<li>I've observed a subsequent bug if the thread is long-lived and the analysis script is modified. <code>labscript_utils.modulewatcher</code> detects the latter and reloads all modules (at the) next run. I get the following exception:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>File &quot;C:\\ProgramData\\Anaconda3\\lib\\site-packages\\win32\\lib\\pywintypes.py&quot;, line 129, in import_pywin32_system_module\n  assert sys.modules[modname] is not old_mod\nAssertionError\n</pre></div>\n\n\n<p>I\u2019ll try to produce a minimum example of this.</p>", "type": "rendered"}, "created_on": "2019-05-01T23:35:24.585126+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": "2019-05-01T23:35:39.685647+00:00", "type": "issue_comment", "id": 51927740}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51927880.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51927880"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "Great, thanks for testing Russ. I\u2019ll try in spinor lab shortly.\n\nI\u2019m not surprised that stdout isn\u2019t returned\u2026 although I was surprised when it was, so it is odd that it now isn\u2019t.\n\ni\u2019m not too concerned about modulewatcher. With something like this, having to reload the long-lived worker process manually, if the code is changed, doesn\u2019t seem too much hassle.", "markup": "markdown", "html": "<p>Great, thanks for testing Russ. I\u2019ll try in spinor lab shortly.</p>\n<p>I\u2019m not surprised that stdout isn\u2019t returned\u2026 although I was surprised when it was, so it is odd that it now isn\u2019t.</p>\n<p>i\u2019m not too concerned about modulewatcher. With something like this, having to reload the long-lived worker process manually, if the code is changed, doesn\u2019t seem too much hassle.</p>", "type": "rendered"}, "created_on": "2019-05-02T00:05:39.084461+00:00", "user": {"display_name": "Lincoln Turner", "uuid": "{dc6eefbb-6560-488e-bd24-b7cabe6e3fb2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdc6eefbb-6560-488e-bd24-b7cabe6e3fb2%7D"}, "html": {"href": "https://bitbucket.org/%7Bdc6eefbb-6560-488e-bd24-b7cabe6e3fb2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/26c040adc170a4ec90cd9bc4f7ab0479d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLT-2.png"}}, "nickname": "lincolnturner_monash", "type": "user", "account_id": "5ba47327653ec8726d2a0087"}, "updated_on": null, "type": "issue_comment", "id": 51927880}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51927911.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51927911"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "> i\u2019m not too concerned about modulewatcher. With something like this, having to reload the long-lived worker process manually, if the code is changed, doesn\u2019t seem too much hassle.\n\nSure, but presently this pathology \\(resulting from any modification to the script or its dependencies\\) brings down lyse entirely.", "markup": "markdown", "html": "<blockquote>\n<p>i\u2019m not too concerned about modulewatcher. With something like this, having to reload the long-lived worker process manually, if the code is changed, doesn\u2019t seem too much hassle.</p>\n</blockquote>\n<p>Sure, but presently this pathology (resulting from any modification to the script or its dependencies) brings down lyse entirely.</p>", "type": "rendered"}, "created_on": "2019-05-02T00:11:31.579055+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": null, "type": "issue_comment", "id": 51927911}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51927916.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51927916"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "Oh! I see. That\u2019s not cool.", "markup": "markdown", "html": "<p>Oh! I see. That\u2019s not cool.</p>", "type": "rendered"}, "created_on": "2019-05-02T00:13:48.037737+00:00", "user": {"display_name": "Lincoln Turner", "uuid": "{dc6eefbb-6560-488e-bd24-b7cabe6e3fb2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdc6eefbb-6560-488e-bd24-b7cabe6e3fb2%7D"}, "html": {"href": "https://bitbucket.org/%7Bdc6eefbb-6560-488e-bd24-b7cabe6e3fb2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/26c040adc170a4ec90cd9bc4f7ab0479d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLT-2.png"}}, "nickname": "lincolnturner_monash", "type": "user", "account_id": "5ba47327653ec8726d2a0087"}, "updated_on": null, "type": "issue_comment", "id": 51927916}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51928066.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51928066"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "I suspect pywin32 modules aren't being whitelisted by ModuleWatcher, since they are not loaded until needed and so aren't present when ModuleWatcher is first instantiated (which is what determined the whitelist). The reason they aren't loaded until used is that they don't exist on linux, so their import is conditional on the functions actually getting called. But I can modify things so that they make it into the whitelist on Windows.\n\nHaving said that, I don't really expect long-lived threads to play well with reloading modules generally, since the thread can hold references to 'old' modules and then you can have two copies of the same module in the interpreter, which can lead to unpredictable results.\n\nI can make lyse not crash unrecoverably though, I'll look into it.\n\nstdout not making it surprises me. Output redirection in zprocess is pretty sophisticated! It does low-level hooking in to file descriptors to catch anything that would be written to stdout or stderr whether it's a subprocess or a C extension or whatever. I see the output on Linux Python 3.7, and Windows Python 3.7, but not Windows Python 2.7. Zprocess has a test suite that checks this, I'll run it in Python 2.7 and see what's up.", "markup": "markdown", "html": "<p>I suspect pywin32 modules aren't being whitelisted by ModuleWatcher, since they are not loaded until needed and so aren't present when ModuleWatcher is first instantiated (which is what determined the whitelist). The reason they aren't loaded until used is that they don't exist on linux, so their import is conditional on the functions actually getting called. But I can modify things so that they make it into the whitelist on Windows.</p>\n<p>Having said that, I don't really expect long-lived threads to play well with reloading modules generally, since the thread can hold references to 'old' modules and then you can have two copies of the same module in the interpreter, which can lead to unpredictable results.</p>\n<p>I can make lyse not crash unrecoverably though, I'll look into it.</p>\n<p>stdout not making it surprises me. Output redirection in zprocess is pretty sophisticated! It does low-level hooking in to file descriptors to catch anything that would be written to stdout or stderr whether it's a subprocess or a C extension or whatever. I see the output on Linux Python 3.7, and Windows Python 3.7, but not Windows Python 2.7. Zprocess has a test suite that checks this, I'll run it in Python 2.7 and see what's up.</p>", "type": "rendered"}, "created_on": "2019-05-02T00:53:25.110075+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 51928066}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51928097.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51928097"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "Don\u2019t follow the pywin32 stuff but making lyse not crash sounds like a plan :slight_smile: \n\nWe are not using zprocess to spawn the subprocess at present, at least the MnWE above doesn\u2019t\u2026. so I wouldn\u2019t actually expect the subprocess\u2019s  stdout to go anywhere. Of course maybe plain old multiprocessing also redirects spawn\u2019d process\u2019s stdout\u2026 \n\nI wouldn\u2019t bother testing on py2.7 apart from for completeness because we are certainly not using it for this stuff - tensorflow needs py3.", "markup": "markdown", "html": "<p>Don\u2019t follow the pywin32 stuff but making lyse not crash sounds like a plan <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f642.png\" alt=\"\ud83d\ude42\" title=\":slight_smile:\" data-emoji-short-name=\":slight_smile:\" /> </p>\n<p>We are not using zprocess to spawn the subprocess at present, at least the MnWE above doesn\u2019t\u2026. so I wouldn\u2019t actually expect the subprocess\u2019s  stdout to go anywhere. Of course maybe plain old multiprocessing also redirects spawn\u2019d process\u2019s stdout\u2026 </p>\n<p>I wouldn\u2019t bother testing on py2.7 apart from for completeness because we are certainly not using it for this stuff - tensorflow needs py3.</p>", "type": "rendered"}, "created_on": "2019-05-02T00:59:15.095013+00:00", "user": {"display_name": "Lincoln Turner", "uuid": "{dc6eefbb-6560-488e-bd24-b7cabe6e3fb2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdc6eefbb-6560-488e-bd24-b7cabe6e3fb2%7D"}, "html": {"href": "https://bitbucket.org/%7Bdc6eefbb-6560-488e-bd24-b7cabe6e3fb2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/26c040adc170a4ec90cd9bc4f7ab0479d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLT-2.png"}}, "nickname": "lincolnturner_monash", "type": "user", "account_id": "5ba47327653ec8726d2a0087"}, "updated_on": null, "type": "issue_comment", "id": 51928097}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51928177.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51928177"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "The lyse analysis subprocess has output redirection turned on, and this redirection should apply to everything in the current process and all subprocesses connected to the same file descriptors, regardless of whether they are started using zprocess or not. I'm curious why it isn't working on Python 2,  but if it's not trivial to fix I won't bother since Python 2 is close to end of life and I don't care enough.", "markup": "markdown", "html": "<p>The lyse analysis subprocess has output redirection turned on, and this redirection should apply to everything in the current process and all subprocesses connected to the same file descriptors, regardless of whether they are started using zprocess or not. I'm curious why it isn't working on Python 2,  but if it's not trivial to fix I won't bother since Python 2 is close to end of life and I don't care enough.</p>", "type": "rendered"}, "created_on": "2019-05-02T01:13:18.152083+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 51928177}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51928183.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51928183"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "> The print statement output does not appear in the OutputBox when run as a single script or when 'farm' is imported to your example `__main__` method above.\n\nThis was observed using Python 3 for me.", "markup": "markdown", "html": "<blockquote>\n<p>The print statement output does not appear in the OutputBox when run as a single script or when 'farm' is imported to your example <code>__main__</code> method above.</p>\n</blockquote>\n<p>This was observed using Python 3 for me.</p>", "type": "rendered"}, "created_on": "2019-05-02T01:15:18.448677+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": "2019-05-02T01:16:11.465538+00:00", "type": "issue_comment", "id": 51928183}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51928275.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51928275"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "Ah, so actually for me it seems to not depend on the Python version, but on whether Python was run from the command line.\n\nDamn, I don't think I ever tested that. It's probably that pythonw.exe doesn't even have a stdout filehandle to hook into.", "markup": "markdown", "html": "<p>Ah, so actually for me it seems to not depend on the Python version, but on whether Python was run from the command line.</p>\n<p>Damn, I don't think I ever tested that. It's probably that pythonw.exe doesn't even have a stdout filehandle to hook into.</p>", "type": "rendered"}, "created_on": "2019-05-02T01:31:00.643949+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 51928275}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51928328.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51928328"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "It looks like I [specifically catered for this situation](https://bitbucket.org/cbillington/zprocess/src/default/zprocess/process_tree.py#lines-517) of output redirection of a non-zprocess subprocess from pythonw.exe, so it's a shame it's not working now. I don't think I would have put that in there if it was untested.", "markup": "markdown", "html": "<p>It looks like I <a data-is-external-link=\"true\" href=\"https://bitbucket.org/cbillington/zprocess/src/default/zprocess/process_tree.py#lines-517\" rel=\"nofollow\">specifically catered for this situation</a> of output redirection of a non-zprocess subprocess from pythonw.exe, so it's a shame it's not working now. I don't think I would have put that in there if it was untested.</p>", "type": "rendered"}, "created_on": "2019-05-02T01:38:35.083762+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 51928328}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51928715.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51928715"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "I can confirm that I see the output when starting lyse via `python` but not when starting lyse via `pythonw`.", "markup": "markdown", "html": "<p>I can confirm that I see the output when starting lyse via <code>python</code> but not when starting lyse via <code>pythonw</code>.</p>", "type": "rendered"}, "created_on": "2019-05-02T02:53:04.306852+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": null, "type": "issue_comment", "id": 51928715}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51928732.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51928732"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "Ah! Yes, likewise. I have been using python -m lyse from py37 env to start lyse under python 3, so that\u2019s why my python3-lyse has been showing the subprocess stdout.\n\nIt may be moot as Russ\u2019s skeleton code just committed to analysislib uses, I think, threads not subprocesses. We were only driven to subprocessing because we thought that multithreading in m-loop was interfering with lyse worker threads, but this was likely an incorrect debugging assumption.", "markup": "markdown", "html": "<p>Ah! Yes, likewise. I have been using python -m lyse from py37 env to start lyse under python 3, so that\u2019s why my python3-lyse has been showing the subprocess stdout.</p>\n<p>It may be moot as Russ\u2019s skeleton code just committed to analysislib uses, I think, threads not subprocesses. We were only driven to subprocessing because we thought that multithreading in m-loop was interfering with lyse worker threads, but this was likely an incorrect debugging assumption.</p>", "type": "rendered"}, "created_on": "2019-05-02T02:55:48.779381+00:00", "user": {"display_name": "Lincoln Turner", "uuid": "{dc6eefbb-6560-488e-bd24-b7cabe6e3fb2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdc6eefbb-6560-488e-bd24-b7cabe6e3fb2%7D"}, "html": {"href": "https://bitbucket.org/%7Bdc6eefbb-6560-488e-bd24-b7cabe6e3fb2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/26c040adc170a4ec90cd9bc4f7ab0479d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLT-2.png"}}, "nickname": "lincolnturner_monash", "type": "user", "account_id": "5ba47327653ec8726d2a0087"}, "updated_on": null, "type": "issue_comment", "id": 51928732}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/51945461.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-51945461"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "For what it's worth, the zprocess way of running a subprocess to do something similar is like the following:\n\n```python\nfrom zprocess import Process, ProcessTree\n\n\nclass FarmProcess(Process):\n    def run(self, x, y):\n        print('Print something', x, y)\n        self.to_parent.put(x + y)\n\n\nif __name__ == '__main__':\n    farm_process = FarmProcess(ProcessTree.instance())\n    to_farm, from_farm = farm_process.start(1, 2)\n    result = from_farm.get()\n    print('result was:', result)\n\n```\n\nA little more complicated, but the redirection works in `pythonw.exe`! There are more arguments to Process and ProcessTree for configuring security and output redirection and such, but since lyse analysis routines are already zprocess subprocesses, `ProcessTree.instance()` gives one that has already been configured to redirect to the lyse output box. But the default `ProcessTree.instance()` means this will work fine in a standalone script too.", "markup": "markdown", "html": "<p>For what it's worth, the zprocess way of running a subprocess to do something similar is like the following:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">zprocess</span> <span class=\"kn\">import</span> <span class=\"n\">Process</span><span class=\"p\">,</span> <span class=\"n\">ProcessTree</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">FarmProcess</span><span class=\"p\">(</span><span class=\"n\">Process</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">):</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Print something&#39;</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">to_parent</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"n\">farm_process</span> <span class=\"o\">=</span> <span class=\"n\">FarmProcess</span><span class=\"p\">(</span><span class=\"n\">ProcessTree</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"p\">())</span>\n    <span class=\"n\">to_farm</span><span class=\"p\">,</span> <span class=\"n\">from_farm</span> <span class=\"o\">=</span> <span class=\"n\">farm_process</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">from_farm</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;result was:&#39;</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>A little more complicated, but the redirection works in <code>pythonw.exe</code>! There are more arguments to Process and ProcessTree for configuring security and output redirection and such, but since lyse analysis routines are already zprocess subprocesses, <code>ProcessTree.instance()</code> gives one that has already been configured to redirect to the lyse output box. But the default <code>ProcessTree.instance()</code> means this will work fine in a standalone script too.</p>", "type": "rendered"}, "created_on": "2019-05-03T02:19:23.400448+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 51945461}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/52003275.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-52003275"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "Fixed in PR #61", "markup": "markdown", "html": "<p>Fixed in <a href=\"#!/labscript_suite/lyse/pull-requests/61/fix-for-48-make-analysis_subprocesspy\" rel=\"nofollow\" class=\"ap-connect-link\">PR #61</a></p>", "type": "rendered"}, "created_on": "2019-05-06T17:57:44.570124+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 52003275}, {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48/comments/52003281.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/48#comment-52003281"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "title": "Unable to fork a process from a lyse script with multiprocessing"}, "content": {"raw": "I have a fix for the output redirection issue, will be forthcoming. Closing this as the reported issue is fixed.", "markup": "markdown", "html": "<p>I have a fix for the output redirection issue, will be forthcoming. Closing this as the reported issue is fixed.</p>", "type": "rendered"}, "created_on": "2019-05-06T17:58:31.984011+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 52003281}], "page": 1, "size": 22}