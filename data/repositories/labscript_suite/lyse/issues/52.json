{"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/lyse/issues/52/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/issues/52.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/issues/52/watch"}, "comments": {"href": "data/repositories/labscript_suite/lyse/issues/52/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/lyse/issues/52/dfconvert_objects-removed-from-pandas"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/issues/52/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "df.convert_objects removed from pandas", "component": null, "votes": 0, "watches": 1, "content": {"raw": "pandas 0.25 has dropped `DataFrame.convert_obects()`, resulting in an exception from the server when getting the dataframe using `lyse.data()`.\r\n\r\n```python\r\nAttributeError: 'DataFrame' object has no attribute 'convert objects'\r\n```\r\n\r\nDiscussion about the deprecation and removal here:\r\n\r\nhttps://github.com/pandas-dev/pandas/issues/11221\r\n\r\nAs a reminder, we're using this function to convert columns of the dataframe from Python objects into numpy/pandas dtypes where possible, which makes the dataframe faster to pickle and send over the wire.\r\n\r\nWe'll need to decide on what to do. It is possible that the performance reason for doing `convert_objects()` may no longer be as important as performance in other relevant components may have improved, though it is still a semantic change to be returning dataframes where the numpy arrays pulled out of them are of dtype `object` containing Python floats instead of being dtype `float` as expected.\r\n\r\nIt seems like the alternatives to `convert_objects` may require explicitly saying the type of each column, which would be super annoying. But I'll look into it and see if we can replicate the current behaviour using the alternatives.", "markup": "markdown", "html": "<p>pandas 0.25 has dropped <code>DataFrame.convert_obects()</code>, resulting in an exception from the server when getting the dataframe using <code>lyse.data()</code>.</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"ne\">AttributeError</span><span class=\"p\">:</span> <span class=\"s1\">&#39;DataFrame&#39;</span> <span class=\"nb\">object</span> <span class=\"n\">has</span> <span class=\"n\">no</span> <span class=\"n\">attribute</span> <span class=\"s1\">&#39;convert objects&#39;</span>\n</pre></div>\n\n\n<p>Discussion about the deprecation and removal here:</p>\n<p><a href=\"https://github.com/pandas-dev/pandas/issues/11221\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/pandas-dev/pandas/issues/11221</a></p>\n<p>As a reminder, we're using this function to convert columns of the dataframe from Python objects into numpy/pandas dtypes where possible, which makes the dataframe faster to pickle and send over the wire.</p>\n<p>We'll need to decide on what to do. It is possible that the performance reason for doing <code>convert_objects()</code> may no longer be as important as performance in other relevant components may have improved, though it is still a semantic change to be returning dataframes where the numpy arrays pulled out of them are of dtype <code>object</code> containing Python floats instead of being dtype <code>float</code> as expected.</p>\n<p>It seems like the alternatives to <code>convert_objects</code> may require explicitly saying the type of each column, which would be super annoying. But I'll look into it and see if we can replicate the current behaviour using the alternatives.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-08-14T13:17:41.565906+00:00", "milestone": null, "updated_on": "2019-08-14T14:24:20.597385+00:00", "type": "issue", "id": 52}