{"pagelen": 50, "values": [{"update": {"description": "Presently the labscript suite uses a timestamp to identify sequences. The Spielman labs have introduced in addition to this a simple incrementing integer that counts from zero each day.\r\n\r\nThis pull request adds backward-compatible code to read in this `sequence_index` and put it in the dataframe in lyse, for those shots that have a `sequence_index`. `None` will be used for shots that do not have a `sequence_index` attribute.\r\n\r\nThis pull request as well as the pending \"lyse can deal with deleted shots better\" one represent convergence between the Spielman and main forks for lyse.\r\n\r\nMy plan at the moment is to modify runmanager to implement the `sequence_index` in a backward compatible way (which may already be the case for how it is implemented in the Spielman fork), so that both can coexist, and that the actual folder hierarchy that shot files get put in, and their filenames can be user configurable using something like a format string in the labconfig file - or just a setting to choose between two schemes. I think it is worth still demanding that the filenames uniquely identify the sequence and shot, which Spielman-fork-labscript doesn't currently enforce, so perhaps rather than an arbitrary format we can choose between:\r\n\r\n20170412T130554_test_0.h5\r\n\r\nand:\r\n\r\n2017-04-12_002_test_0.h5\r\n\r\n(where 002 is an example `sequence index`) so that filenames are still unique. In practice for me it's been quite nice having a single folder per sequence rather than dumping them all together, whether the filenames are unique or not. Anyway, as I said this should all be done in a backward compatible and configurable way that makes everybody happy, and can be debated in future pull requests for runmanager changes.\r\n\r\nIf these changes sound concerning, I think they shouldn't be - after giving it some thought I suspect I will be able to make everyone happy. At the very least things will be backward compatible and considered a bug if they're not.\r\n\r\nI've added everyone as reviewers not because I want them all to approve this (relatively tiny) change, but just so you get a notification and opportunity to chime in, because we don't really have a \"labscriptsuite-dev\" mailing list. I am considering either making one, or perhaps just starting to use the existing mailing list for development discussions. Let me know what you'd rather.", "title": "Read \"sequence_index\" attribute from shots that have it", "destination": {"commit": {"hash": "5399a71f9447", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/5399a71f9447.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/5399a71f9447"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "1cd498affc6e", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/1cd498affc6e"}, "html": {"href": "#!/cbillington/lyse/commits/1cd498affc6e"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "feature2"}}, "state": "MERGED", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "date": "2017-06-19T00:44:22.189295+00:00"}, "pull_request": {"type": "pullrequest", "id": 11, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/11"}}, "title": "Read \"sequence_index\" attribute from shots that have it"}}, {"approval": {"date": "2017-06-19T00:44:11.149690+00:00", "pullrequest": {"type": "pullrequest", "id": 11, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/11"}}, "title": "Read \"sequence_index\" attribute from shots that have it"}, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "pull_request": {"type": "pullrequest", "id": 11, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/11"}}, "title": "Read \"sequence_index\" attribute from shots that have it"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11/comments/39039789.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/11/_/diff#comment-39039789"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 11, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/11"}}, "title": "Read \"sequence_index\" attribute from shots that have it"}, "content": {"raw": "Ok, I've created issue #23 regarding future improvements. I'm happy to approve and merge this for now under the proviso that it will be improved later.", "markup": "markdown", "html": "<p>Ok, I've created issue <a href=\"#!/labscript_suite/lyse/issues/23/better-loading-of-root-attributes-of-the\" rel=\"nofollow\" title=\"Better loading of root attributes of the HDF5 file into lyse\" class=\"ap-connect-link\">#23</a> regarding future improvements. I'm happy to approve and merge this for now under the proviso that it will be improved later.</p>", "type": "rendered"}, "created_on": "2017-06-19T00:44:07.154379+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-06-19T00:44:07.156589+00:00", "type": "pullrequest_comment", "id": 39039789}, "pull_request": {"type": "pullrequest", "id": 11, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/11"}}, "title": "Read \"sequence_index\" attribute from shots that have it"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11/comments/38302146.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/11/_/diff#comment-38302146"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 11, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/11"}}, "title": "Read \"sequence_index\" attribute from shots that have it"}, "content": {"raw": "Probably if we didn't mind making a breaking change, we would iterate over all the attributes and add them with multilevel column names ('shot_attrs', 'sequence_id') etc, rather than just 'sequence_id' at the top level. That way 'shot_attrs' would be the only potential name conflict. We could also make all globals have multilevel column names: ('globals', 'MOT_current') etc. \n\nThen again, these pandas dataframes are supposed to be all about convenience, not typing out loads of multilevel column names. So there's a tradeoff there.\n\nI think for now we should probably just kick the can down the road a bit further with an extra name and an extra try/except, but I'm sympathetic to the current situation not being ideal. At the moment a name conflict would probably just crash lyse. But that is a different bug report/pull request.", "markup": "markdown", "html": "<p>Probably if we didn't mind making a breaking change, we would iterate over all the attributes and add them with multilevel column names ('shot_attrs', 'sequence_id') etc, rather than just 'sequence_id' at the top level. That way 'shot_attrs' would be the only potential name conflict. We could also make all globals have multilevel column names: ('globals', 'MOT_current') etc. </p>\n<p>Then again, these pandas dataframes are supposed to be all about convenience, not typing out loads of multilevel column names. So there's a tradeoff there.</p>\n<p>I think for now we should probably just kick the can down the road a bit further with an extra name and an extra try/except, but I'm sympathetic to the current situation not being ideal. At the moment a name conflict would probably just crash lyse. But that is a different bug report/pull request.</p>", "type": "rendered"}, "created_on": "2017-06-06T18:27:18.952436+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-06T18:27:18.954573+00:00", "type": "pullrequest_comment", "id": 38302146}, "pull_request": {"type": "pullrequest", "id": 11, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/11"}}, "title": "Read \"sequence_index\" attribute from shots that have it"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11/comments/37718990.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/11/_/diff#comment-37718990"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 11, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/11"}}, "title": "Read \"sequence_index\" attribute from shots that have it"}, "content": {"raw": "I don't particularly have a problem with the change proposed (it's a minor change that isn't going to break anything), but it seems like a bit of a special case addition that's only useful for some people. If we go down that route, I feel we're going to have many of these try-except blocks in the future.\n\nWhat if instead, we just iterated over everything in `h5_file.attrs` and added it to the DataFrame?\n\nThat might bring an increased risk of conflict between globals names and something in that list of attributes, but that conflict already potentially exists if we called a global 'sequence' I assume?", "markup": "markdown", "html": "<p>I don't particularly have a problem with the change proposed (it's a minor change that isn't going to break anything), but it seems like a bit of a special case addition that's only useful for some people. If we go down that route, I feel we're going to have many of these try-except blocks in the future.</p>\n<p>What if instead, we just iterated over everything in <code>h5_file.attrs</code> and added it to the DataFrame?</p>\n<p>That might bring an increased risk of conflict between globals names and something in that list of attributes, but that conflict already potentially exists if we called a global 'sequence' I assume?</p>", "type": "rendered"}, "created_on": "2017-05-28T23:44:03.748866+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-05-28T23:44:03.751679+00:00", "type": "pullrequest_comment", "id": 37718990}, "pull_request": {"type": "pullrequest", "id": 11, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/11"}}, "title": "Read \"sequence_index\" attribute from shots that have it"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11/comments/37434711.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/11/_/diff#comment-37434711"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 11, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/11"}}, "title": "Read \"sequence_index\" attribute from shots that have it"}, "content": {"raw": "I see that adding a lot of reviewers results in a kind of bystander effect.\n\nI assume there are no objections to this, and I'll merge in a week if there are no comments.", "markup": "markdown", "html": "<p>I see that adding a lot of reviewers results in a kind of bystander effect.</p>\n<p>I assume there are no objections to this, and I'll merge in a week if there are no comments.</p>", "type": "rendered"}, "created_on": "2017-05-23T14:57:53.094814+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-05-23T14:57:53.097954+00:00", "type": "pullrequest_comment", "id": 37434711}, "pull_request": {"type": "pullrequest", "id": 11, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/11"}}, "title": "Read \"sequence_index\" attribute from shots that have it"}}, {"update": {"description": "Presently the labscript suite uses a timestamp to identify sequences. The Spielman labs have introduced in addition to this a simple incrementing integer that counts from zero each day.\r\n\r\nThis pull request adds backward-compatible code to read in this `sequence_index` and put it in the dataframe in lyse, for those shots that have a `sequence_index`. `None` will be used for shots that do not have a `sequence_index` attribute.\r\n\r\nThis pull request as well as the pending \"lyse can deal with deleted shots better\" one represent convergence between the Spielman and main forks for lyse.\r\n\r\nMy plan at the moment is to modify runmanager to implement the `sequence_index` in a backward compatible way (which may already be the case for how it is implemented in the Spielman fork), so that both can coexist, and that the actual folder hierarchy that shot files get put in, and their filenames can be user configurable using something like a format string in the labconfig file - or just a setting to choose between two schemes. I think it is worth still demanding that the filenames uniquely identify the sequence and shot, which Spielman-fork-labscript doesn't currently enforce, so perhaps rather than an arbitrary format we can choose between:\r\n\r\n20170412T130554_test_0.h5\r\n\r\nand:\r\n\r\n2017-04-12_002_test_0.h5\r\n\r\n(where 002 is an example `sequence index`) so that filenames are still unique. In practice for me it's been quite nice having a single folder per sequence rather than dumping them all together, whether the filenames are unique or not. Anyway, as I said this should all be done in a backward compatible and configurable way that makes everybody happy, and can be debated in future pull requests for runmanager changes.\r\n\r\nIf these changes sound concerning, I think they shouldn't be - after giving it some thought I suspect I will be able to make everyone happy. At the very least things will be backward compatible and considered a bug if they're not.\r\n\r\nI've added everyone as reviewers not because I want them all to approve this (relatively tiny) change, but just so you get a notification and opportunity to chime in, because we don't really have a \"labscriptsuite-dev\" mailing list. I am considering either making one, or perhaps just starting to use the existing mailing list for development discussions. Let me know what you'd rather.", "title": "Read \"sequence_index\" attribute from shots that have it", "destination": {"commit": {"hash": "c4908e5d0a94", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/c4908e5d0a94.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/c4908e5d0a94"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "1cd498affc6e", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/1cd498affc6e"}, "html": {"href": "#!/cbillington/lyse/commits/1cd498affc6e"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "feature2"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2017-04-12T19:22:36.571516+00:00"}, "pull_request": {"type": "pullrequest", "id": 11, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/11"}}, "title": "Read \"sequence_index\" attribute from shots that have it"}}, {"update": {"description": "Presently the labscript suite uses a timestamp to identify sequences. The Spielman labs have introduced in addition to this a simple incrementing integer that counts from zero each day.\r\n\r\nThis pull request adds backward-compatible code to read in this `sequence_index` and put it in the dataframe in lyse, for those shots that have a `sequence_index`. `None` will be used for shots that do not have a `sequence_index` attribute.\r\n\r\nThis pull request as well as the pending \"lyse can deal with deleted shots better\" one represent convergence between the Spielman and main forks for lyse.\r\n\r\nMy plan at the moment is to modify runmanager to implement the `sequence_index` in a backward compatible way (which may already be the case for how it is implemented in the Spielman fork), so that both can coexist, and that the actual folder hierarchy that shot files get put in, and their filenames can be user configurable using something like a format string in the labconfig file - or just a setting to choose between two schemes. I think it is worth still demanding that the filenames uniquely identify the sequence and shot, which Spielman-fork-labscript doesn't currently enforce, so perhaps rather than an arbitrary format we can choose between:\r\n\r\n20170412T130554_test_0.h5\r\n\r\nand:\r\n\r\n2017-04-12_002_test_0.h5\r\n\r\n(where 002 is an example `sequence index`) so that filenames are still unique. In practice for me it's been quite nice having a single folder per sequence rather than dumping them all together, whether the filenames are unique or not. Anyway, as I said this should all be done in a backward compatible and configurable way that makes everybody happy, and can be debated in future pull requests for runmanager changes.\r\n\r\nIf these changes sound concerning, I think they shouldn't be - after giving it some thought I suspect I will be able to make everyone happy. At the very least things will be backward compatible and considered a bug if they're not.\r\n\r\nI've added everyone as reviewers not because I want them all to approve this (relatively tiny) change, but just so you get a notification and opportunity to chime in, because we don't really have a \"labscriptsuite-dev\" mailing list. I am considering either making one, or perhaps just starting to use the existing mailing list for development discussions. Let me know what you'd rather.", "title": "Read \"sequence_index\" attribute from shots that have it", "destination": {"commit": {"hash": "c4908e5d0a94", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/c4908e5d0a94.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/c4908e5d0a94"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "29e27f42a258", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/29e27f42a258"}, "html": {"href": "#!/cbillington/lyse/commits/29e27f42a258"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "feature2"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2017-04-12T19:19:27.930139+00:00"}, "pull_request": {"type": "pullrequest", "id": 11, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/11"}}, "title": "Read \"sequence_index\" attribute from shots that have it"}}, {"update": {"description": "Presently the labscript suite uses a timestamp to identify sequences. The Spielman labs have introduced in addition to this a simple incrementing integer that counts from zero each day.\r\n\r\nThis pull request adds backward-compatible code to read in this `sequence_index` and put it in the dataframe in lyse, for those shots that have a `sequence_index`. `None` will be used for shots that do not have a `sequence_index` attribute.\r\n\r\nThis pull request as well as the pending \"lyse can deal with deleted shots better\" one represent convergence between the Spielman and main forks for lyse.\r\n\r\nMy plan at the moment is to modify runmanager to implement the `sequence_index` in a backward compatible way (which may already be the case for how it is implemented in the Spielman fork), so that both can coexist, and that the actual folder hierarchy that shot files get put in, and their filenames can be user configurable using something like a format string in the labconfig file - or just a setting to choose between two schemes. I think it is worth still demanding that the filenames uniquely identify the sequence and shot, which Spielman-fork-labscript doesn't currently enforce, so perhaps rather than an arbitrary format we can choose between:\r\n\r\n20170412T130554_test_0.h5\r\n\r\nand:\r\n\r\n2017-04-12_002_test_0.h5\r\n\r\n(where 002 is an example `sequence index`) so that filenames are still unique. In practice for me it's been quite nice having a single folder per sequence rather than dumping them all together, whether the filenames are unique or not. Anyway, as I said this should all be done in a backward compatible and configurable way that makes everybody happy, and can be debated in future pull requests for runmanager changes.\r\n\r\nIf these changes sound concerning, I think they shouldn't be - after giving it some thought I suspect I will be able to make everyone happy. At the very least things will be backward compatible and considered a bug if they're not.\r\n\r\nI've added everyone as reviewers not because I want them all to approve this (relatively tiny) change, but just so you get a notification and opportunity to chime in, because we don't really have a \"labscriptsuite-dev\" mailing list. I am considering either making one, or perhaps just starting to use the existing mailing list for development discussions. Let me know what you'd rather.", "title": "Read \"sequence_index\" attribute from shots that have it", "destination": {"commit": {"hash": "c4908e5d0a94", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/c4908e5d0a94.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/c4908e5d0a94"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "29e27f42a258", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/29e27f42a258"}, "html": {"href": "#!/cbillington/lyse/commits/29e27f42a258"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "feature2"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2017-04-12T19:19:27.871548+00:00"}, "pull_request": {"type": "pullrequest", "id": 11, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/11"}}, "title": "Read \"sequence_index\" attribute from shots that have it"}}]}