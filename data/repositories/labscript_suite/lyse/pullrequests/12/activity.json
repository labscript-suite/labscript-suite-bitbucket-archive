{"pagelen": 50, "values": [{"update": {"description": "Added \"copy to clipboard\" functionality for plots. An image can be copied to\r\nthe clipboard by clicking a button in the plot window's toolbar, or by ctrl-c/cmd-c when\r\nthe plot window has focus.\r\n\r\nCopying can also be done programatically like:\r\n\r\n        lyse.figure_to_clipboard(fig)\r\n\r\nThe copying is implemented by calling `savefig()` on the matplotlib figure object, then launching a subprocess that reads the resulting image file, puts it on the clipboard and then remains running until the clipboard is overwritten. This is necessary on some systems - most linux systems don't actually store copied data that is over a certain size, they wait until it is pasted before getting it from the memory of the source, so that program has to still be running or you lose your copied data. I've read this may or may not be the case sometimes on Windows or osx. Anyway the subprocess keeps the use of Qt separate from that of the main program, when not keeping it separate I also had strange behaviour like a 10 second hang at program shutdown (possibly Qt asking the window manager \"pretty please store my copy buffer, I'm about to close\" and the window manager just ignoring it until timeout).\r\n\r\nI originally envisioned having a way to programatically add text to the copy buffer so that the text and plot image would be copied together for pasting into a lab logbook, but this has turned out to be much more complex. I tested a few programs that allow you to copy text and images, and while they always work with themselves, interoperability is patchy.\r\n\r\nSince I'm using Qt to interact with the clipboard, and Qt does support putting arbitrary mime types on the clipboard, if we can figure out which mime type has the best interoperability for programs people are likely to be pasting into, then I can add this functionality later.", "title": "Copy plot to clipboard", "destination": {"commit": {"hash": "c4908e5d0a94", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/c4908e5d0a94.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/c4908e5d0a94"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0bb629e431be", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/0bb629e431be"}, "html": {"href": "#!/cbillington/lyse/commits/0bb629e431be"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "feature3"}}, "state": "MERGED", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "date": "2017-04-26T05:15:14.673901+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/12"}}, "title": "Copy plot to clipboard"}}, {"approval": {"date": "2017-04-26T05:14:59.712905+00:00", "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/12"}}, "title": "Copy plot to clipboard"}, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/12"}}, "title": "Copy plot to clipboard"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/12/comments/35693669.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/12/_/diff#comment-35693669"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/12"}}, "title": "Copy plot to clipboard"}, "content": {"raw": "Thanks, added.", "markup": "markdown", "html": "<p>Thanks, added.</p>", "type": "rendered"}, "created_on": "2017-04-26T05:10:07.579299+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-04-26T05:10:07.581913+00:00", "type": "pullrequest_comment", "id": 35693669}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/12"}}, "title": "Copy plot to clipboard"}}, {"update": {"description": "Added \"copy to clipboard\" functionality for plots. An image can be copied to\r\nthe clipboard by clicking a button in the plot window's toolbar, or by ctrl-c/cmd-c when\r\nthe plot window has focus.\r\n\r\nCopying can also be done programatically like:\r\n\r\n        lyse.figure_to_clipboard(fig)\r\n\r\nThe copying is implemented by calling `savefig()` on the matplotlib figure object, then launching a subprocess that reads the resulting image file, puts it on the clipboard and then remains running until the clipboard is overwritten. This is necessary on some systems - most linux systems don't actually store copied data that is over a certain size, they wait until it is pasted before getting it from the memory of the source, so that program has to still be running or you lose your copied data. I've read this may or may not be the case sometimes on Windows or osx. Anyway the subprocess keeps the use of Qt separate from that of the main program, when not keeping it separate I also had strange behaviour like a 10 second hang at program shutdown (possibly Qt asking the window manager \"pretty please store my copy buffer, I'm about to close\" and the window manager just ignoring it until timeout).\r\n\r\nI originally envisioned having a way to programatically add text to the copy buffer so that the text and plot image would be copied together for pasting into a lab logbook, but this has turned out to be much more complex. I tested a few programs that allow you to copy text and images, and while they always work with themselves, interoperability is patchy.\r\n\r\nSince I'm using Qt to interact with the clipboard, and Qt does support putting arbitrary mime types on the clipboard, if we can figure out which mime type has the best interoperability for programs people are likely to be pasting into, then I can add this functionality later.", "title": "Copy plot to clipboard", "destination": {"commit": {"hash": "c4908e5d0a94", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/c4908e5d0a94.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/c4908e5d0a94"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0bb629e431be", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/0bb629e431be"}, "html": {"href": "#!/cbillington/lyse/commits/0bb629e431be"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "feature3"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2017-04-26T05:09:56.507773+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/12"}}, "title": "Copy plot to clipboard"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/12/comments/35693611.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/12/_/diff#comment-35693611"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/12"}}, "title": "Copy plot to clipboard"}, "content": {"raw": " Looks good I think.\ntempfile2clipboard.py is missing the license text.", "markup": "markdown", "html": "<p>Looks good I think.\ntempfile2clipboard.py is missing the license text.</p>", "type": "rendered"}, "created_on": "2017-04-26T05:08:11.026646+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-04-26T05:08:11.029040+00:00", "type": "pullrequest_comment", "id": 35693611}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/12"}}, "title": "Copy plot to clipboard"}}, {"update": {"description": "Added \"copy to clipboard\" functionality for plots. An image can be copied to\r\nthe clipboard by clicking a button in the plot window's toolbar, or by ctrl-c/cmd-c when\r\nthe plot window has focus.\r\n\r\nCopying can also be done programatically like:\r\n\r\n        lyse.figure_to_clipboard(fig)\r\n\r\nThe copying is implemented by calling `savefig()` on the matplotlib figure object, then launching a subprocess that reads the resulting image file, puts it on the clipboard and then remains running until the clipboard is overwritten. This is necessary on some systems - most linux systems don't actually store copied data that is over a certain size, they wait until it is pasted before getting it from the memory of the source, so that program has to still be running or you lose your copied data. I've read this may or may not be the case sometimes on Windows or osx. Anyway the subprocess keeps the use of Qt separate from that of the main program, when not keeping it separate I also had strange behaviour like a 10 second hang at program shutdown (possibly Qt asking the window manager \"pretty please store my copy buffer, I'm about to close\" and the window manager just ignoring it until timeout).\r\n\r\nI originally envisioned having a way to programatically add text to the copy buffer so that the text and plot image would be copied together for pasting into a lab logbook, but this has turned out to be much more complex. I tested a few programs that allow you to copy text and images, and while they always work with themselves, interoperability is patchy.\r\n\r\nSince I'm using Qt to interact with the clipboard, and Qt does support putting arbitrary mime types on the clipboard, if we can figure out which mime type has the best interoperability for programs people are likely to be pasting into, then I can add this functionality later.", "title": "Copy plot to clipboard", "destination": {"commit": {"hash": "c4908e5d0a94", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/c4908e5d0a94.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/c4908e5d0a94"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "2a91749556ea", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/2a91749556ea"}, "html": {"href": "#!/cbillington/lyse/commits/2a91749556ea"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "feature3"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2017-04-26T04:57:05.826107+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/12"}}, "title": "Copy plot to clipboard"}}, {"update": {"description": "Added \"copy to clipboard\" functionality for plots. An image can be copied to\r\nthe clipboard by clicking a button in the plot window's toolbar, or by ctrl-c/cmd-c when\r\nthe plot window has focus.\r\n\r\nCopying can also be done programatically like:\r\n\r\n        lyse.figure_to_clipboard(fig)\r\n\r\nThe copying is implemented by calling `savefig()` on the matplotlib figure object, then launching a subprocess that reads the resulting image file, puts it on the clipboard and then remains running until the clipboard is overwritten. This is necessary on some systems - most linux systems don't actually store copied data that is over a certain size, they wait until it is pasted before getting it from the memory of the source, so that program has to still be running or you lose your copied data. I've read this may or may not be the case sometimes on Windows or osx. Anyway the subprocess keeps the use of Qt separate from that of the main program, when not keeping it separate I also had strange behaviour like a 10 second hang at program shutdown (possibly Qt asking the window manager \"pretty please store my copy buffer, I'm about to close\" and the window manager just ignoring it until timeout).\r\n\r\nI originally envisioned having a way to programatically add text to the copy buffer so that the text and plot image would be copied together for pasting into a lab logbook, but this has turned out to be much more complex. I tested a few programs that allow you to copy text and images, and while they always work with themselves, interoperability is patchy.\r\n\r\nSince I'm using Qt to interact with the clipboard, and Qt does support putting arbitrary mime types on the clipboard, if we can figure out which mime type has the best interoperability for programs people are likely to be pasting into, then I can add this functionality later.", "title": "Copy plot to clipboard", "destination": {"commit": {"hash": "c4908e5d0a94", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/c4908e5d0a94.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/c4908e5d0a94"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "2a91749556ea", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/2a91749556ea"}, "html": {"href": "#!/cbillington/lyse/commits/2a91749556ea"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "feature3"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2017-04-26T04:57:05.781406+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/12"}}, "title": "Copy plot to clipboard"}}]}