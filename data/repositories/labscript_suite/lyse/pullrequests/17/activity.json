{"pagelen": 50, "values": [{"update": {"description": "This change should speedup singleshot scripts by eliminating read operations at the end of analysis(haven't checkt if this is the case). It also adds updating the dataframe after multishot analysis. This can be useful at a later time if we decide to add functionality for sequences to save to the individual runs.\r\n\r\nThis was also discussed in Issue #22", "title": "Update Dataframe without Readoperations", "destination": {"commit": {"hash": "b2c123e4263f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/b2c123e4263f.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/b2c123e4263f"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "5dd2475a9618", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/5dd2475a9618"}, "html": {"href": "#!/PhyNerd/lyse/commits/5dd2475a9618"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "UpdateDataframeNoRead"}}, "state": "MERGED", "author": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "date": "2017-08-01T00:44:49.755011+00:00"}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"approval": {"date": "2017-08-01T00:44:44.409776+00:00", "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/41537964.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-41537964"}}, "parent": {"id": 41392811, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/41392811.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-41392811"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "That sounds great, as I have some more speed improvements for lyse file loading and row updating, that are just waiting for this to merge so I can create yet another pull request. I'm not creating it now since there might be conflicts and thing that can be done that need this pull request first", "markup": "markdown", "html": "<p>That sounds great, as I have some more speed improvements for lyse file loading and row updating, that are just waiting for this to merge so I can create yet another pull request. I'm not creating it now since there might be conflicts and thing that can be done that need this pull request first</p>", "type": "rendered"}, "created_on": "2017-07-26T13:05:34.422584+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-26T13:05:58.497950+00:00", "type": "pullrequest_comment", "id": 41537964}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/41392811.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-41392811"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "@shaunj and I will try and review this soon", "markup": "markdown", "html": "<p>@shaunj and I will try and review this soon</p>", "type": "rendered"}, "created_on": "2017-07-24T23:31:35.351151+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-07-24T23:31:35.359999+00:00", "type": "pullrequest_comment", "id": 41392811}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"approval": {"date": "2017-07-24T21:06:57.225646+00:00", "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/41379903.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-41379903"}}, "parent": {"id": 41378440, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/41378440.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-41378440"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "Great! This should not create any new bugs and fixes the old one. \nThanks for taking the time to fake a HDF file to reproduce.", "markup": "markdown", "html": "<p>Great! This should not create any new bugs and fixes the old one. \nThanks for taking the time to fake a HDF file to reproduce.</p>", "type": "rendered"}, "created_on": "2017-07-24T19:10:53.399555+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-24T19:10:53.462784+00:00", "type": "pullrequest_comment", "id": 41379903}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"update": {"description": "This change should speedup singleshot scripts by eliminating read operations at the end of analysis(haven't checkt if this is the case). It also adds updating the dataframe after multishot analysis. This can be useful at a later time if we decide to add functionality for sequences to save to the individual runs.\r\n\r\nThis was also discussed in Issue #22", "title": "Update Dataframe without Readoperations", "destination": {"commit": {"hash": "b2c123e4263f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/b2c123e4263f.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/b2c123e4263f"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "5dd2475a9618", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/5dd2475a9618"}, "html": {"href": "#!/PhyNerd/lyse/commits/5dd2475a9618"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "UpdateDataframeNoRead"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-24T19:08:22.129694+00:00"}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/41378440.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-41378440"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "I was able to reproduce the bug that shaun described by faking some HDF files that contained image data in the format lyse looks for, and I verified that that was indeed the problem and that the following change fixes it:\n\n```\n#!diff\n\ndiff -r 11ddf585366b __main__.py\n--- a/__main__.py\tMon Jul 24 20:22:40 2017 +0200\n+++ b/__main__.py\tMon Jul 24 14:46:52 2017 -0400\n@@ -1302,7 +1302,7 @@\n \n         if updated_row_data is not None and not dataframe_already_updated:\n             for group, name in updated_row_data:\n-                self.dataframe.loc[df_row_index,(group, name)] = updated_row_data[group, name]\n+                self.dataframe.loc[df_row_index, (group, name) + ('',) * (self.nlevels - 2)] = updated_row_data[group, name]\n             dataframe_already_updated = True\n \n         if not dataframe_already_updated:\n\n```\n", "markup": "markdown", "html": "<p>I was able to reproduce the bug that shaun described by faking some HDF files that contained image data in the format lyse looks for, and I verified that that was indeed the problem and that the following change fixes it:</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gh\">diff -r 11ddf585366b __main__.py</span>\n<span class=\"gd\">--- a/__main__.py   Mon Jul 24 20:22:40 2017 +0200</span>\n<span class=\"gi\">+++ b/__main__.py   Mon Jul 24 14:46:52 2017 -0400</span>\n<span class=\"gu\">@@ -1302,7 +1302,7 @@</span>\n\n         if updated_row_data is not None and not dataframe_already_updated:\n             for group, name in updated_row_data:\n<span class=\"gd\">-                self.dataframe.loc[df_row_index,(group, name)] = updated_row_data[group, name]</span>\n<span class=\"gi\">+                self.dataframe.loc[df_row_index, (group, name) + (&#39;&#39;,) * (self.nlevels - 2)] = updated_row_data[group, name]</span>\n             dataframe_already_updated = True\n\n         if not dataframe_already_updated:\n</pre></div>", "type": "rendered"}, "created_on": "2017-07-24T18:48:53.555867+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-24T18:48:53.558328+00:00", "type": "pullrequest_comment", "id": 41378440}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/41376320.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-41376320"}}, "parent": {"id": 41375980, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/41375980.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-41375980"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "yeah my bad added the lines in at the wrong place will change this right away.\n\nUpdate: Ok things should work again now. And I should definitely think about unifying all of my repos to reduce copy and paste errors.", "markup": "markdown", "html": "<p>yeah my bad added the lines in at the wrong place will change this right away.</p>\n<p>Update: Ok things should work again now. And I should definitely think about unifying all of my repos to reduce copy and paste errors.</p>", "type": "rendered"}, "created_on": "2017-07-24T18:18:42.825875+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-24T18:25:47.623802+00:00", "type": "pullrequest_comment", "id": 41376320}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"update": {"description": "This change should speedup singleshot scripts by eliminating read operations at the end of analysis(haven't checkt if this is the case). It also adds updating the dataframe after multishot analysis. This can be useful at a later time if we decide to add functionality for sequences to save to the individual runs.\r\n\r\nThis was also discussed in Issue #22", "title": "Update Dataframe without Readoperations", "destination": {"commit": {"hash": "b2c123e4263f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/b2c123e4263f.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/b2c123e4263f"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "11ddf585366b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/11ddf585366b"}, "html": {"href": "#!/PhyNerd/lyse/commits/11ddf585366b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "UpdateDataframeNoRead"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-24T18:22:47.094550+00:00"}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/41375980.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-41375980"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "I get an exception at startup with the more recent changes. Look like the change in [this commit](#!/PhyNerd/lyse/commits/9e8a8200f7fe8588f6e44e882c245cd51fc466d4) was applied to the wrong method, perhaps? This method is in the \"edit columns\" dialog box, not the dataframe model, so is unrelated I think. \n\n\n```\n#!python\n\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/runpy.py\", line 162, in _run_module_as_main\n    \"__main__\", fname, loader, pkg_name)\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"/home/cjb7/labscript_suite/lyse/__main__.py\", line 1837, in <module>\n    app = Lyse()\n  File \"/home/cjb7/labscript_suite/lyse/__main__.py\", line 1776, in __init__\n    to_singleshot, from_singleshot, to_multishot, from_multishot)\n  File \"/home/cjb7/labscript_suite/lyse/__main__.py\", line 1489, in __init__\n    self.edit_columns_dialog = EditColumns(self, self.shots_model.column_names, self.shots_model.columns_visible)\n  File \"/home/cjb7/labscript_suite/lyse/__main__.py\", line 812, in __init__\n    self.populate_model(column_names, self.columns_visible)\n  File \"/home/cjb7/labscript_suite/lyse/__main__.py\", line 845, in populate_model\n    if updated_row_data is not None and column_name not in updated_row_data:\nNameError: global name 'updated_row_data' is not defined\n```\n", "markup": "markdown", "html": "<p>I get an exception at startup with the more recent changes. Look like the change in <a data-is-external-link=\"true\" href=\"#!/PhyNerd/lyse/commits/9e8a8200f7fe8588f6e44e882c245cd51fc466d4\" rel=\"nofollow\">this commit</a> was applied to the wrong method, perhaps? This method is in the \"edit columns\" dialog box, not the dataframe model, so is unrelated I think. </p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/lib/python2.7/runpy.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">162</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_run_module_as_main</span>\n    <span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">,</span> <span class=\"n\">fname</span><span class=\"p\">,</span> <span class=\"n\">loader</span><span class=\"p\">,</span> <span class=\"n\">pkg_name</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/lib/python2.7/runpy.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">72</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_run_code</span>\n    <span class=\"k\">exec</span> <span class=\"n\">code</span> <span class=\"ow\">in</span> <span class=\"n\">run_globals</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/home/cjb7/labscript_suite/lyse/__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1837</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Lyse</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/home/cjb7/labscript_suite/lyse/__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1776</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__init__</span>\n    <span class=\"n\">to_singleshot</span><span class=\"p\">,</span> <span class=\"n\">from_singleshot</span><span class=\"p\">,</span> <span class=\"n\">to_multishot</span><span class=\"p\">,</span> <span class=\"n\">from_multishot</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/home/cjb7/labscript_suite/lyse/__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1489</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__init__</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edit_columns_dialog</span> <span class=\"o\">=</span> <span class=\"n\">EditColumns</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">shots_model</span><span class=\"o\">.</span><span class=\"n\">column_names</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">shots_model</span><span class=\"o\">.</span><span class=\"n\">columns_visible</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/home/cjb7/labscript_suite/lyse/__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">812</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__init__</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">populate_model</span><span class=\"p\">(</span><span class=\"n\">column_names</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">columns_visible</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/home/cjb7/labscript_suite/lyse/__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">845</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">populate_model</span>\n    <span class=\"k\">if</span> <span class=\"n\">updated_row_data</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span> <span class=\"ow\">and</span> <span class=\"n\">column_name</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">updated_row_data</span><span class=\"p\">:</span>\n<span class=\"ne\">NameError</span><span class=\"p\">:</span> <span class=\"k\">global</span> <span class=\"n\">name</span> <span class=\"s1\">&#39;updated_row_data&#39;</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"n\">defined</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-07-24T18:13:07.367572+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-24T18:13:07.373606+00:00", "type": "pullrequest_comment", "id": 41375980}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/41304160.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-41304160"}}, "parent": {"id": 41304026, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/41304026.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-41304026"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "Sure why not. I'm still clueless on the import difference though this should definitely not be it.", "markup": "markdown", "html": "<p>Sure why not. I'm still clueless on the import difference though this should definitely not be it.</p>", "type": "rendered"}, "created_on": "2017-07-23T22:51:52.059512+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-23T22:51:53.129859+00:00", "type": "pullrequest_comment", "id": 41304160}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"update": {"description": "This change should speedup singleshot scripts by eliminating read operations at the end of analysis(haven't checkt if this is the case). It also adds updating the dataframe after multishot analysis. This can be useful at a later time if we decide to add functionality for sequences to save to the individual runs.\r\n\r\nThis was also discussed in Issue #22", "title": "Update Dataframe without Readoperations", "destination": {"commit": {"hash": "cb33aaf008d5", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/cb33aaf008d5.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/cb33aaf008d5"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f2252f8e8b23", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/f2252f8e8b23"}, "html": {"href": "#!/PhyNerd/lyse/commits/f2252f8e8b23"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "UpdateDataframeNoRead"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-23T22:48:37.125909+00:00"}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/41304026.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-41304026"}}, "parent": {"id": 41101296, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/41101296.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-41101296"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "I don't use BIAS, actually. But I probably have some shot files somewhere that are from Monash (or I know enough to fake them), so I will see if I can reproduce it and whether the proposed fix works.\n\nAlso for consistency with only bytestrings being used as column labels, since lyse converts them all to bytestrings when it reads from the HDF5 file, the following line:\n\n`_updated_data[self.h5_path][self.group, name] = value`\n\nshould be changed to\n\n`_updated_data[self.h5_path][str(self.group), name] = value`\n\nTo ensure the group name is a bytestrings (I see in shaun's tracebacks that it's a unicode string `u'test'`). It's also possible that this could have something to do with the bug, since reading the existing column from the dataframe would result in bytestring column labels whereas your updating method is looking for unicode string column labels. I would think that they would be treated the same (in python 2 `u'x' == b'x'` is True, but in Python 3 it's False), but you never know.\n\nSo I know that's not ideal, but we can convert all of lyse's column labels to unicode strings in a different pull request, and consistency is better for now.", "markup": "markdown", "html": "<p>I don't use BIAS, actually. But I probably have some shot files somewhere that are from Monash (or I know enough to fake them), so I will see if I can reproduce it and whether the proposed fix works.</p>\n<p>Also for consistency with only bytestrings being used as column labels, since lyse converts them all to bytestrings when it reads from the HDF5 file, the following line:</p>\n<p><code>_updated_data[self.h5_path][self.group, name] = value</code></p>\n<p>should be changed to</p>\n<p><code>_updated_data[self.h5_path][str(self.group), name] = value</code></p>\n<p>To ensure the group name is a bytestrings (I see in shaun's tracebacks that it's a unicode string <code>u'test'</code>). It's also possible that this could have something to do with the bug, since reading the existing column from the dataframe would result in bytestring column labels whereas your updating method is looking for unicode string column labels. I would think that they would be treated the same (in python 2 <code>u'x' == b'x'</code> is True, but in Python 3 it's False), but you never know.</p>\n<p>So I know that's not ideal, but we can convert all of lyse's column labels to unicode strings in a different pull request, and consistency is better for now.</p>", "type": "rendered"}, "created_on": "2017-07-23T22:35:38.120061+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-23T22:35:38.123344+00:00", "type": "pullrequest_comment", "id": 41304026}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/41101296.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-41101296"}}, "parent": {"id": 40919387, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/40919387.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-40919387"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "Were you able to reproduce the bug?\n\nFor testing purposes it would be really helpful to get my hands on a file that doesn't work. \nOtherwise I can't really do much but guess what could work.", "markup": "markdown", "html": "<p>Were you able to reproduce the bug?</p>\n<p>For testing purposes it would be really helpful to get my hands on a file that doesn't work. \nOtherwise I can't really do much but guess what could work.</p>", "type": "rendered"}, "created_on": "2017-07-19T19:34:53.135932+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-19T19:34:53.203540+00:00", "type": "pullrequest_comment", "id": 41101296}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"update": {"description": "This change should speedup singleshot scripts by eliminating read operations at the end of analysis(haven't checkt if this is the case). It also adds updating the dataframe after multishot analysis. This can be useful at a later time if we decide to add functionality for sequences to save to the individual runs.\r\n\r\nThis was also discussed in Issue #22", "title": "Update Dataframe without Readoperations", "destination": {"commit": {"hash": "cb33aaf008d5", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/cb33aaf008d5.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/cb33aaf008d5"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "9e8a8200f7fe", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/9e8a8200f7fe"}, "html": {"href": "#!/PhyNerd/lyse/commits/9e8a8200f7fe"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "UpdateDataframeNoRead"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-18T16:23:48.165103+00:00"}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/40929251.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-40929251"}}, "parent": {"id": 40919372, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/40919372.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-40919372"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "I think that would make sense. @shaunj could you try this? If this helps I'll change it in my code.\n\nMy take is that if this should work we have fixed one of two bugs. First being the column-name hierarchy second being the import thing.\nMy current take on why the imports make a difference is that, spinning_top works in one case and not in the other. Which would disable the feature in case of a \"wrong\" import. I haven't tested this theory yet but will do so in the next few hours and then update here.\n\nUpdate: spinning_top works just fine both times", "markup": "markdown", "html": "<p>I think that would make sense. @shaunj could you try this? If this helps I'll change it in my code.</p>\n<p>My take is that if this should work we have fixed one of two bugs. First being the column-name hierarchy second being the import thing.\nMy current take on why the imports make a difference is that, spinning_top works in one case and not in the other. Which would disable the feature in case of a \"wrong\" import. I haven't tested this theory yet but will do so in the next few hours and then update here.</p>\n<p>Update: spinning_top works just fine both times</p>", "type": "rendered"}, "created_on": "2017-07-18T06:22:53.262084+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-18T07:18:00.946727+00:00", "type": "pullrequest_comment", "id": 40929251}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/40919372.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-40919372"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "The inability to reproduce the bug might be related to the fact that Monash labs use BIAS for imaging, which saves some information about images to the HDF5 file, which lyse reads and adds to the dataframe with more levels to the column-name hierarchy than just two. That would mean that ['test', 'key'] would not be a valid column name, but ['test', key', '', ''] might be, for example.  If this is the case, then it might be able to be fixed by changing these lines:\n\n```\n#!python\n        if updated_row_data is not None and not dataframe_already_updated:\n            for group, name in updated_row_data:\n                self.dataframe.loc[df_row_index,(group, name)] = updated_row_data[group, name]\n```\n\nto something like\n```\n#!python\n        if updated_row_data is not None and not dataframe_already_updated:\n            for group, name in updated_row_data:\n                self.dataframe.loc[df_row_index,(group, name) + ('',) * (self.nlevels - 2)] = updated_row_data[group, name]\n\n```\n", "markup": "markdown", "html": "<p>The inability to reproduce the bug might be related to the fact that Monash labs use BIAS for imaging, which saves some information about images to the HDF5 file, which lyse reads and adds to the dataframe with more levels to the column-name hierarchy than just two. That would mean that ['test', 'key'] would not be a valid column name, but ['test', key', '', ''] might be, for example.  If this is the case, then it might be able to be fixed by changing these lines:</p>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"k\">if</span> <span class=\"n\">updated_row_data</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">dataframe_already_updated</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">updated_row_data</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"n\">df_row_index</span><span class=\"p\">,(</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"n\">updated_row_data</span><span class=\"p\">[</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">]</span>\n</pre></div>\n\n\n<p>to something like</p>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"k\">if</span> <span class=\"n\">updated_row_data</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">dataframe_already_updated</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">updated_row_data</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"n\">df_row_index</span><span class=\"p\">,(</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">,)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">nlevels</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"n\">updated_row_data</span><span class=\"p\">[</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">]</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-07-18T00:39:56.595775+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-18T00:44:48.563276+00:00", "type": "pullrequest_comment", "id": 40919372}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/40919387.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-40919387"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "The fact that it's different depending on whether you `import *` though is baffling.\n\nLyse is doing some magic with the global namespace of the analysis scripts in order to print its deprecation warning - but it returns the same value for `path` either way so I'm not seeing how that could make a difference. ", "markup": "markdown", "html": "<p>The fact that it's different depending on whether you <code>import *</code> though is baffling.</p>\n<p>Lyse is doing some magic with the global namespace of the analysis scripts in order to print its deprecation warning - but it returns the same value for <code>path</code> either way so I'm not seeing how that could make a difference. </p>", "type": "rendered"}, "created_on": "2017-07-18T00:40:31.550957+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-18T00:44:10.758662+00:00", "type": "pullrequest_comment", "id": 40919387}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/40918085.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-40918085"}}, "parent": {"id": 40762804, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/40762804.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-40762804"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "I've updated to your latest commit (which I think includes the above changes), and now running my test script, I get:\n\n\n```\n#!python\n\nTraceback (most recent call last):\n  File \"C:\\ProgramData\\Anaconda2\\lib\\threading.py\", line 754, in run\n    self.__target(*self.__args, **self.__kwargs)\n  File \"C:\\labscript_suite\\lyse\\__main__.py\", line 1682, in analysis_loop\n    self.do_singleshot_analysis(filepath)\n  File \"C:\\labscript_suite\\lyse\\__main__.py\", line 1720, in do_singleshot_analysis\n    self.shots_model.update_row(file, status_percent=status_percent, updated_row_data=updated_data[file])\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 114, in f\n    return inmain(fn, *args, **kwargs)\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 74, in inmain\n    return get_inmain_result(in_main_later(fn,False,*args,**kwargs))\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 94, in get_inmain_result\n    exec('raise type, value, traceback')\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 53, in event\n    result = event.fn(*event.args, **event.kwargs)\n  File \"C:\\labscript_suite\\lyse\\__main__.py\", line 1305, in update_row\n    self.dataframe.loc[df_row_index,(group, name)] = updated_row_data[group, name]\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core\\indexing.py\", line 140, in __setitem__\n    indexer = self._get_setitem_indexer(key)\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core\\indexing.py\", line 122, in _get_setitem_indexer\n    return self._convert_tuple(key, is_setter=True)\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core\\indexing.py\", line 184, in _convert_tuple\n    idx = self._convert_to_indexer(k, axis=i, is_setter=is_setter)\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core\\indexing.py\", line 1230, in _convert_to_indexer\n    raise KeyError('%s not in index' % objarr[mask])\nKeyError: \"[u'test' 'key'] not in index\"\n```\n\nNote that this happens with both import lyse and from lyse import * versions of my script. If, however, I run the default branch of lyse, run the test script on a file, then go back to this branch, the script will run again on that same file without issue, and continue working on new files, as the dataframe now has the appropriate key.", "markup": "markdown", "html": "<p>I've updated to your latest commit (which I think includes the above changes), and now running my test script, I get:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib</span><span class=\"se\">\\t</span><span class=\"s2\">hreading.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">754</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">run</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__target</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\lyse\\__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1682</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">analysis_loop</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">do_singleshot_analysis</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\lyse\\__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1720</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">do_singleshot_analysis</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">shots_model</span><span class=\"o\">.</span><span class=\"n\">update_row</span><span class=\"p\">(</span><span class=\"nb\">file</span><span class=\"p\">,</span> <span class=\"n\">status_percent</span><span class=\"o\">=</span><span class=\"n\">status_percent</span><span class=\"p\">,</span> <span class=\"n\">updated_row_data</span><span class=\"o\">=</span><span class=\"n\">updated_data</span><span class=\"p\">[</span><span class=\"nb\">file</span><span class=\"p\">])</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">114</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">f</span>\n    <span class=\"k\">return</span> <span class=\"n\">inmain</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">74</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">inmain</span>\n    <span class=\"k\">return</span> <span class=\"n\">get_inmain_result</span><span class=\"p\">(</span><span class=\"n\">in_main_later</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"p\">,</span><span class=\"bp\">False</span><span class=\"p\">,</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">))</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">94</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">get_inmain_result</span>\n    <span class=\"k\">exec</span><span class=\"p\">(</span><span class=\"s1\">&#39;raise type, value, traceback&#39;</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">53</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">event</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">fn</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\lyse\\__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1305</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">update_row</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"n\">df_row_index</span><span class=\"p\">,(</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"n\">updated_row_data</span><span class=\"p\">[</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">]</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core\\indexing.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">140</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__setitem__</span>\n    <span class=\"n\">indexer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_setitem_indexer</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core\\indexing.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">122</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_get_setitem_indexer</span>\n    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_convert_tuple</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">is_setter</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core\\indexing.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">184</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_convert_tuple</span>\n    <span class=\"n\">idx</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_convert_to_indexer</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">is_setter</span><span class=\"o\">=</span><span class=\"n\">is_setter</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core\\indexing.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1230</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_convert_to_indexer</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">KeyError</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"si\">%s</span><span class=\"s1\"> not in index&#39;</span> <span class=\"o\">%</span> <span class=\"n\">objarr</span><span class=\"p\">[</span><span class=\"n\">mask</span><span class=\"p\">])</span>\n<span class=\"ne\">KeyError</span><span class=\"p\">:</span> <span class=\"s2\">&quot;[u&#39;test&#39; &#39;key&#39;] not in index&quot;</span>\n</pre></div>\n\n\n<p>Note that this happens with both import lyse and from lyse import * versions of my script. If, however, I run the default branch of lyse, run the test script on a file, then go back to this branch, the script will run again on that same file without issue, and continue working on new files, as the dataframe now has the appropriate key.</p>", "type": "rendered"}, "created_on": "2017-07-17T23:54:29.157640+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-07-17T23:54:29.161300+00:00", "type": "pullrequest_comment", "id": 40918085}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"update": {"description": "This change should speedup singleshot scripts by eliminating read operations at the end of analysis(haven't checkt if this is the case). It also adds updating the dataframe after multishot analysis. This can be useful at a later time if we decide to add functionality for sequences to save to the individual runs.\r\n\r\nThis was also discussed in Issue #22", "title": "Update Dataframe without Readoperations", "destination": {"commit": {"hash": "4f78edf03091", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/4f78edf03091.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/4f78edf03091"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ebe6c154d7d0", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/ebe6c154d7d0"}, "html": {"href": "#!/PhyNerd/lyse/commits/ebe6c154d7d0"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "UpdateDataframeNoRead"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-15T19:11:31.380023+00:00"}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"update": {"description": "This change should speedup singleshot scripts by eliminating read operations at the end of analysis(haven't checkt if this is the case). It also adds updating the dataframe after multishot analysis. This can be useful at a later time if we decide to add functionality for sequences to save to the individual runs.\r\n\r\nThis was also discussed in Issue #22", "title": "Update Dataframe without Readoperations", "destination": {"commit": {"hash": "4f78edf03091", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/4f78edf03091.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/4f78edf03091"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d4e9b76e7f20", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/d4e9b76e7f20"}, "html": {"href": "#!/PhyNerd/lyse/commits/d4e9b76e7f20"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "UpdateDataframeNoRead"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-15T12:14:45.232749+00:00"}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/40762804.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-40762804"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "@shaunj could you try replacing:\n\n```\n#!python\n\nnew_row_data = pandas.DataFrame(self.dataframe.ix[df_row_index], columns=self.dataframe.columns)\n```\nwith:\n\n```\n#!python\n\nnew_row_data = pandas.DataFrame(self.dataframe[self.dataframe['filepath'] == filepath], columns=self.dataframe.columns)\n```\n\nDoes that solve the problem for you?\n\nUpdate:\n\nPlease also try removing \n\n```\n#!python\n\n        if updated_row_data is not None and not dataframe_already_updated:\n            new_row_data = pandas.DataFrame(self.dataframe.ix[df_row_index], columns=self.dataframe.columns)\n            for group, name in updated_row_data:\n                new_row_data[(group, name)] = updated_row_data[group, name]\n```\n\nand below the try execpt clause add this instead:\n\n\n```\n#!python\n\n        if updated_row_data is not None and not dataframe_already_updated:\n            new_row_data = self.dataframe.iloc[[df_row_index]]\n            for group, name in updated_row_data:\n                new_row_data[group, name] = updated_row_data[group, name]\n```\n\nIf both doesn't work I'm clueless. And since I can't reproduce the bug I can only guess what could work.", "markup": "markdown", "html": "<p>@shaunj could you try replacing:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">new_row_data</span> <span class=\"o\">=</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"o\">.</span><span class=\"n\">ix</span><span class=\"p\">[</span><span class=\"n\">df_row_index</span><span class=\"p\">],</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>with:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">new_row_data</span> <span class=\"o\">=</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"p\">[</span><span class=\"s1\">&#39;filepath&#39;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">filepath</span><span class=\"p\">],</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Does that solve the problem for you?</p>\n<p>Update:</p>\n<p>Please also try removing </p>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"k\">if</span> <span class=\"n\">updated_row_data</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">dataframe_already_updated</span><span class=\"p\">:</span>\n            <span class=\"n\">new_row_data</span> <span class=\"o\">=</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"o\">.</span><span class=\"n\">ix</span><span class=\"p\">[</span><span class=\"n\">df_row_index</span><span class=\"p\">],</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">updated_row_data</span><span class=\"p\">:</span>\n                <span class=\"n\">new_row_data</span><span class=\"p\">[(</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"n\">updated_row_data</span><span class=\"p\">[</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">]</span>\n</pre></div>\n\n\n<p>and below the try execpt clause add this instead:</p>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"k\">if</span> <span class=\"n\">updated_row_data</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">dataframe_already_updated</span><span class=\"p\">:</span>\n            <span class=\"n\">new_row_data</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"o\">.</span><span class=\"n\">iloc</span><span class=\"p\">[[</span><span class=\"n\">df_row_index</span><span class=\"p\">]]</span>\n            <span class=\"k\">for</span> <span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">updated_row_data</span><span class=\"p\">:</span>\n                <span class=\"n\">new_row_data</span><span class=\"p\">[</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">updated_row_data</span><span class=\"p\">[</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">]</span>\n</pre></div>\n\n\n<p>If both doesn't work I'm clueless. And since I can't reproduce the bug I can only guess what could work.</p>", "type": "rendered"}, "created_on": "2017-07-14T09:32:11.883315+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-14T19:05:25.851418+00:00", "type": "pullrequest_comment", "id": 40762804}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39790686.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39790686"}}, "parent": {"id": 39786713, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39786713.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39786713"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "Both examples work fine on my test machine. \n\nUpdate: tried pandas 0.19.2 also works for me... I'll continue trying to reproduce the bug\n\nUpdate 2: Still cant reproduce the bug but it seems to be linked to the global namespace, which is deprecated according to the source code.\nCan you compare the value of path to lyse.path? are they equal? If so: are Run and lyse.Run the same? Maybe some import somewhere overwrites them for you.", "markup": "markdown", "html": "<p>Both examples work fine on my test machine. </p>\n<p>Update: tried pandas 0.19.2 also works for me... I'll continue trying to reproduce the bug</p>\n<p>Update 2: Still cant reproduce the bug but it seems to be linked to the global namespace, which is deprecated according to the source code.\nCan you compare the value of path to lyse.path? are they equal? If so: are Run and lyse.Run the same? Maybe some import somewhere overwrites them for you.</p>", "type": "rendered"}, "created_on": "2017-06-29T08:02:17.021080+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-06-29T10:15:21.861986+00:00", "type": "pullrequest_comment", "id": 39790686}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39786772.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39786772"}}, "parent": {"id": 39783792, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39783792.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39783792"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "I am on pandas 0.19.2", "markup": "markdown", "html": "<p>I am on pandas 0.19.2</p>", "type": "rendered"}, "created_on": "2017-06-29T07:13:20.267203+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-29T07:13:20.269441+00:00", "type": "pullrequest_comment", "id": 39786772}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39786713.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39786713"}}, "parent": {"id": 39783792, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39783792.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39783792"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "I looked into it a bit more, and came up with the following minimal working example. If you use the following:\n\n```\n#!python\n\nfrom lyse import *\n\nrun = Run(path)\nrun.save_result(\"key\",\"value\")\n```\nit will crash, but if instead I use:\n\n```\n#!python\n\nimport lyse\n\nrun = lyse.Run(lyse.path)\nrun.save_result(\"key\",\"value\")\n```\n\nit will work. Note that once you have run the second version, you need to restart lyse for the import * version to crash, as the dataframe now has the appropriate structure.", "markup": "markdown", "html": "<p>I looked into it a bit more, and came up with the following minimal working example. If you use the following:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">lyse</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">run</span> <span class=\"o\">=</span> <span class=\"n\">Run</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">save_result</span><span class=\"p\">(</span><span class=\"s2\">&quot;key&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;value&quot;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>it will crash, but if instead I use:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">lyse</span>\n\n<span class=\"n\">run</span> <span class=\"o\">=</span> <span class=\"n\">lyse</span><span class=\"o\">.</span><span class=\"n\">Run</span><span class=\"p\">(</span><span class=\"n\">lyse</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">)</span>\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">save_result</span><span class=\"p\">(</span><span class=\"s2\">&quot;key&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;value&quot;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>it will work. Note that once you have run the second version, you need to restart lyse for the import * version to crash, as the dataframe now has the appropriate structure.</p>", "type": "rendered"}, "created_on": "2017-06-29T07:12:39.589902+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-29T07:12:39.593222+00:00", "type": "pullrequest_comment", "id": 39786713}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39783792.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39783792"}}, "parent": {"id": 39772999, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39772999.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39772999"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "Does this happen every time?\nI tried to reproduce the error but singleshot routines saving data work just fine for me.\n\nWhats your pandas version?", "markup": "markdown", "html": "<p>Does this happen every time?\nI tried to reproduce the error but singleshot routines saving data work just fine for me.</p>\n<p>Whats your pandas version?</p>", "type": "rendered"}, "created_on": "2017-06-29T06:26:47.348259+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-06-29T06:28:19.096343+00:00", "type": "pullrequest_comment", "id": 39783792}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39772999.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39772999"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "When trying to run a singleshot routine (which saves some results), I get the following traceback:\n\n```\n#!python\n\nTraceback (most recent call last):\n  File \"C:\\ProgramData\\Anaconda2\\lib\\threading.py\", line 754, in run\n    self.__target(*self.__args, **self.__kwargs)\n  File \"C:\\labscript_suite\\lyse\\__main__.py\", line 1680, in analysis_loop\n    self.do_singleshot_analysis(filepath)\n  File \"C:\\labscript_suite\\lyse\\__main__.py\", line 1718, in do_singleshot_analysis\n    self.shots_model.update_row(file, status_percent=status_percent, updated_row_data=updated_data[file])\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 114, in f\n    return inmain(fn, *args, **kwargs)\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 74, in inmain\n    return get_inmain_result(in_main_later(fn,False,*args,**kwargs))\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 94, in get_inmain_result\n    exec('raise type, value, traceback')\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 53, in event\n    result = event.fn(*event.args, **event.kwargs)\n  File \"C:\\labscript_suite\\lyse\\__main__.py\", line 1300, in update_row\n    new_row_data[(group, name)] = updated_row_data[group, name]\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core\\frame.py\", line 2419, in __setitem__\n    self._set_item(key, value)\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core\\frame.py\", line 2485, in _set_item\n    value = self._sanitize_column(key, value)\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core\\frame.py\", line 2684, in _sanitize_column\n    if broadcast and key in self.columns and value.ndim == 1:\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\indexes\\multi.py\", line 1042, in __contains__\n    self.get_loc(key)\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\indexes\\multi.py\", line 1672, in get_loc\n    if lead_key else (0, len(self)))\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\indexes\\multi.py\", line 1578, in slice_locs\n    return super(MultiIndex, self).slice_locs(start, end, step, kind=kind)\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\indexes\\base.py\", line 3176, in slice_locs\n    start_slice = self.get_slice_bound(start, 'left', kind)\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\indexes\\multi.py\", line 1549, in get_slice_bound\n    return self._partial_tup_index(label, side=side)\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\indexes\\multi.py\", line 1594, in _partial_tup_index\n    raise TypeError('Level type mismatch: %s' % lab)\nTypeError: Level type mismatch: OD_calc\n\n```\n\n(OD_calc is the name of the script running)\n\nThis then causes the analysis process to crash, so lyse stops working.\n", "markup": "markdown", "html": "<p>When trying to run a singleshot routine (which saves some results), I get the following traceback:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib</span><span class=\"se\">\\t</span><span class=\"s2\">hreading.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">754</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">run</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__target</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\lyse\\__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1680</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">analysis_loop</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">do_singleshot_analysis</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\lyse\\__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1718</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">do_singleshot_analysis</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">shots_model</span><span class=\"o\">.</span><span class=\"n\">update_row</span><span class=\"p\">(</span><span class=\"nb\">file</span><span class=\"p\">,</span> <span class=\"n\">status_percent</span><span class=\"o\">=</span><span class=\"n\">status_percent</span><span class=\"p\">,</span> <span class=\"n\">updated_row_data</span><span class=\"o\">=</span><span class=\"n\">updated_data</span><span class=\"p\">[</span><span class=\"nb\">file</span><span class=\"p\">])</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">114</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">f</span>\n    <span class=\"k\">return</span> <span class=\"n\">inmain</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">74</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">inmain</span>\n    <span class=\"k\">return</span> <span class=\"n\">get_inmain_result</span><span class=\"p\">(</span><span class=\"n\">in_main_later</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"p\">,</span><span class=\"bp\">False</span><span class=\"p\">,</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">))</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">94</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">get_inmain_result</span>\n    <span class=\"k\">exec</span><span class=\"p\">(</span><span class=\"s1\">&#39;raise type, value, traceback&#39;</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">53</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">event</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">fn</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\lyse\\__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1300</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">update_row</span>\n    <span class=\"n\">new_row_data</span><span class=\"p\">[(</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"n\">updated_row_data</span><span class=\"p\">[</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">]</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core</span><span class=\"se\">\\f</span><span class=\"s2\">rame.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2419</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__setitem__</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_set_item</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core</span><span class=\"se\">\\f</span><span class=\"s2\">rame.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2485</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_set_item</span>\n    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sanitize_column</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core</span><span class=\"se\">\\f</span><span class=\"s2\">rame.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2684</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_sanitize_column</span>\n    <span class=\"k\">if</span> <span class=\"n\">broadcast</span> <span class=\"ow\">and</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">columns</span> <span class=\"ow\">and</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">ndim</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\indexes\\multi.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1042</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__contains__</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_loc</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\indexes\\multi.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1672</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">get_loc</span>\n    <span class=\"k\">if</span> <span class=\"n\">lead_key</span> <span class=\"k\">else</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)))</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\indexes\\multi.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1578</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">slice_locs</span>\n    <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">MultiIndex</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">slice_locs</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">end</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">,</span> <span class=\"n\">kind</span><span class=\"o\">=</span><span class=\"n\">kind</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\indexes</span><span class=\"se\">\\b</span><span class=\"s2\">ase.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">3176</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">slice_locs</span>\n    <span class=\"n\">start_slice</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_slice_bound</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"n\">kind</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\indexes\\multi.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1549</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">get_slice_bound</span>\n    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_partial_tup_index</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"p\">,</span> <span class=\"n\">side</span><span class=\"o\">=</span><span class=\"n\">side</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\indexes\\multi.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1594</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_partial_tup_index</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"s1\">&#39;Level type mismatch: </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">lab</span><span class=\"p\">)</span>\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"n\">Level</span> <span class=\"nb\">type</span> <span class=\"n\">mismatch</span><span class=\"p\">:</span> <span class=\"n\">OD_calc</span>\n</pre></div>\n\n\n<p>(OD_calc is the name of the script running)</p>\n<p>This then causes the analysis process to crash, so lyse stops working.</p>", "type": "rendered"}, "created_on": "2017-06-29T00:02:24.325994+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-29T00:03:40.912634+00:00", "type": "pullrequest_comment", "id": 39772999}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39754856.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39754856"}}, "parent": {"id": 39409936, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39409936.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39409936"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "@shaunj did you get to test the changes yet? \nIf so did you encounter any bugs that need fixing?", "markup": "markdown", "html": "<p>@shaunj did you get to test the changes yet? \nIf so did you encounter any bugs that need fixing?</p>", "type": "rendered"}, "created_on": "2017-06-28T18:19:50.345388+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-06-28T18:19:50.407905+00:00", "type": "pullrequest_comment", "id": 39754856}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39490568.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39490568"}}, "parent": {"id": 39409936, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39409936.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39409936"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "Thanks!", "markup": "markdown", "html": "<p>Thanks!</p>", "type": "rendered"}, "created_on": "2017-06-24T00:49:02.191946+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-24T00:49:02.194243+00:00", "type": "pullrequest_comment", "id": 39490568}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39409936.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39409936"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "I'm at a workshop today, so will test on Monday. If @cbillington has approved and I don't find any issues I'll merge.", "markup": "markdown", "html": "<p>I'm at a workshop today, so will test on Monday. If @cbillington has approved and I don't find any issues I'll merge.</p>", "type": "rendered"}, "created_on": "2017-06-22T22:03:03.923088+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-06-22T22:03:03.933194+00:00", "type": "pullrequest_comment", "id": 39409936}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39376489.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39376489"}}, "parent": {"id": 39351055, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39351055.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39351055"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "Well inefficiency for dataframe updating is confined to DataFrameModel.update_row() now, but one might also consider using the updated_data dict to collectively do all write operation to disc in one:  \n```\n#!python\n\nwith h5py.File(self.h5_path,'a') as h5_file:\n```\n This could potentialy speedup things a bit because the file would only need to get touched once. But I'm not really sure about that would need to do some testing.", "markup": "markdown", "html": "<p>Well inefficiency for dataframe updating is confined to DataFrameModel.update_row() now, but one might also consider using the updated_data dict to collectively do all write operation to disc in one:  </p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">with</span> <span class=\"n\">h5py</span><span class=\"o\">.</span><span class=\"n\">File</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">h5_path</span><span class=\"p\">,</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">h5_file</span><span class=\"p\">:</span>\n</pre></div>\n\n\n<p>This could potentialy speedup things a bit because the file would only need to get touched once. But I'm not really sure about that would need to do some testing.</p>", "type": "rendered"}, "created_on": "2017-06-22T14:25:19.850943+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-06-22T14:25:19.904704+00:00", "type": "pullrequest_comment", "id": 39376489}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"update": {"description": "This change should speedup singleshot scripts by eliminating read operations at the end of analysis(haven't checkt if this is the case). It also adds updating the dataframe after multishot analysis. This can be useful at a later time if we decide to add functionality for sequences to save to the individual runs.\r\n\r\nThis was also discussed in Issue #22", "title": "Update Dataframe without Readoperations", "destination": {"commit": {"hash": "4f78edf03091", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/4f78edf03091.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/4f78edf03091"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d4eba5316dc9", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/d4eba5316dc9"}, "html": {"href": "#!/PhyNerd/lyse/commits/d4eba5316dc9"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "UpdateDataframeNoRead"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-06-22T11:57:31.265558+00:00"}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39351055.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39351055"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "Excellent,  well I think this feature is complete now.\n\nI tested with some shots using a large number of globals (using globals files from Monash, so, representative of what it would be like for them), and things are quite slow updating after both singleshot and multishot (the latter so slow that I doubt Monash will want to use it). But post-singleshot updates were already that slow (slightly slower due to also reading files) without your change, and post-multishot updates were impossible, so your code does not introduce any slowdown for current users.\n\nMore positively, your code lays the groundwork for future optimisation - all the inefficiency is now isolated to `DataFrameModel.update_row()`, whereas it used to be more spread out.\n\nCould you add @shaunj as a reviewer? @shaunj do you feel like pulling this branch and letting it run for a bit to confirm it doesn't break anything for you? No problem if not.", "markup": "markdown", "html": "<p>Excellent,  well I think this feature is complete now.</p>\n<p>I tested with some shots using a large number of globals (using globals files from Monash, so, representative of what it would be like for them), and things are quite slow updating after both singleshot and multishot (the latter so slow that I doubt Monash will want to use it). But post-singleshot updates were already that slow (slightly slower due to also reading files) without your change, and post-multishot updates were impossible, so your code does not introduce any slowdown for current users.</p>\n<p>More positively, your code lays the groundwork for future optimisation - all the inefficiency is now isolated to <code>DataFrameModel.update_row()</code>, whereas it used to be more spread out.</p>\n<p>Could you add @shaunj as a reviewer? @shaunj do you feel like pulling this branch and letting it run for a bit to confirm it doesn't break anything for you? No problem if not.</p>", "type": "rendered"}, "created_on": "2017-06-22T09:38:35.283945+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-22T09:38:35.291731+00:00", "type": "pullrequest_comment", "id": 39351055}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"update": {"description": "This change should speedup singleshot scripts by eliminating read operations at the end of analysis(haven't checkt if this is the case). It also adds updating the dataframe after multishot analysis. This can be useful at a later time if we decide to add functionality for sequences to save to the individual runs.\r\n\r\nThis was also discussed in Issue #22", "title": "Update Dataframe without Readoperations", "destination": {"commit": {"hash": "4f78edf03091", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/4f78edf03091.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/4f78edf03091"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d4eba5316dc9", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/d4eba5316dc9"}, "html": {"href": "#!/PhyNerd/lyse/commits/d4eba5316dc9"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "UpdateDataframeNoRead"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-06-21T19:07:53.707986+00:00"}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"update": {"description": "This change should speedup singleshot scripts by eliminating read operations at the end of analysis(haven't checkt if this is the case). It also adds updating the dataframe after multishot analysis. This can be useful at a later time if we decide to add functionality for sequences to save to the individual runs.\r\n\r\nThis was also discussed in Issue #22", "title": "Update Dataframe without Readoperations", "destination": {"commit": {"hash": "4f78edf03091", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/4f78edf03091.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/4f78edf03091"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d4eba5316dc9", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/d4eba5316dc9"}, "html": {"href": "#!/PhyNerd/lyse/commits/d4eba5316dc9"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "UpdateDataframeNoRead"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-06-21T19:07:53.322868+00:00"}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39309766.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39309766"}}, "parent": {"id": 39309707, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39309707.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39309707"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "sure!", "markup": "markdown", "html": "<p>sure!</p>", "type": "rendered"}, "created_on": "2017-06-21T19:06:56.427521+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-06-21T19:06:56.502709+00:00", "type": "pullrequest_comment", "id": 39309766}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39309755.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39309755"}}, "parent": {"id": 39307100, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39307100.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39307100"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "Overlooked those cases in my tests. \nAnd forgot adding lines 245 and 247 to the repo from my testing machine.\nThanks for the help!", "markup": "markdown", "html": "<p>Overlooked those cases in my tests. \nAnd forgot adding lines 245 and 247 to the repo from my testing machine.\nThanks for the help!</p>", "type": "rendered"}, "created_on": "2017-06-21T19:06:37.120288+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-06-21T19:06:37.184295+00:00", "type": "pullrequest_comment", "id": 39309755}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39309707.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39309707"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "I also notice we've lost the 'percent complete' status update in one of the calls to update_row(). Could you add that back in on line 1718?\n\n`self.shots_model.update_row(file, status_percent=status_percent, updated_row_data=updated_data[file])`", "markup": "markdown", "html": "<p>I also notice we've lost the 'percent complete' status update in one of the calls to update_row(). Could you add that back in on line 1718?</p>\n<p><code>self.shots_model.update_row(file, status_percent=status_percent, updated_row_data=updated_data[file])</code></p>", "type": "rendered"}, "created_on": "2017-06-21T19:05:41.933738+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-21T19:05:41.936317+00:00", "type": "pullrequest_comment", "id": 39309707}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"update": {"description": "This change should speedup singleshot scripts by eliminating read operations at the end of analysis(haven't checkt if this is the case). It also adds updating the dataframe after multishot analysis. This can be useful at a later time if we decide to add functionality for sequences to save to the individual runs.\r\n\r\nThis was also discussed in Issue #22", "title": "Update Dataframe without Readoperations", "destination": {"commit": {"hash": "4f78edf03091", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/4f78edf03091.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/4f78edf03091"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "8c8eb059b68a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/8c8eb059b68a"}, "html": {"href": "#!/PhyNerd/lyse/commits/8c8eb059b68a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "UpdateDataframeNoRead"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-06-21T19:01:52.413484+00:00"}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"update": {"description": "This change should speedup singleshot scripts by eliminating read operations at the end of analysis(haven't checkt if this is the case). It also adds updating the dataframe after multishot analysis. This can be useful at a later time if we decide to add functionality for sequences to save to the individual runs.\r\n\r\nThis was also discussed in Issue #22", "title": "Update Dataframe without Readoperations", "destination": {"commit": {"hash": "4f78edf03091", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/4f78edf03091.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/4f78edf03091"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "8c8eb059b68a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/8c8eb059b68a"}, "html": {"href": "#!/PhyNerd/lyse/commits/8c8eb059b68a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "UpdateDataframeNoRead"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-06-21T19:01:52.004763+00:00"}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39307100.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39307100"}}, "parent": {"id": 39306337, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39306337.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39306337"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "Updated the diff above. Basically, it was crashing on returning from singleshot analysis because the singleshot routine box wasn't returning the data, and it was crashing in `do_singleshot_analysis()` after an error as well because it was doing some logic that still assumed it was reading the file when it's not anymore.\n\nAnd then the last thing is that in multishot it should update the dataframe even if there was an error (it should update with whatever data was produced before the error still).", "markup": "markdown", "html": "<p>Updated the diff above. Basically, it was crashing on returning from singleshot analysis because the singleshot routine box wasn't returning the data, and it was crashing in <code>do_singleshot_analysis()</code> after an error as well because it was doing some logic that still assumed it was reading the file when it's not anymore.</p>\n<p>And then the last thing is that in multishot it should update the dataframe even if there was an error (it should update with whatever data was produced before the error still).</p>", "type": "rendered"}, "created_on": "2017-06-21T18:25:21.580546+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-21T18:25:21.582967+00:00", "type": "pullrequest_comment", "id": 39307100}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39306150.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39306150"}}, "parent": {"id": 39305061, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39305061.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39305061"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "Excellent.\n\nI tested it a bit, got some errors and found some bugs. If you could apply the following changes to fix them, that would be great:\n\n\n```\n#!diff\ndiff -r 4658a395c076 __main__.py\n--- a/__main__.py\tWed Jun 21 17:55:12 2017 +0000\n+++ b/__main__.py\tWed Jun 21 14:22:35 2017 -0400\n@@ -242,9 +242,9 @@\n         self.to_worker.put(['analyse', filepath])\n         signal, data = self.from_worker.get()\n         if signal == 'error':\n-            return False\n+            return False, data\n         elif signal == 'done':\n-            return True\n+            return True, data\n         else:\n             raise ValueError('invalid signal %s'%str(signal))\n         \n@@ -1721,11 +1721,11 @@\n                 self.shots_model.update_row(filepath, status_percent=status_percent, dataframe_already_updated=True)\n                 return\n             if signal == 'error':\n-                # If new_row_data is None, that indicates that we got an\n-                # IOError error above. Do not pause analysis in this\n-                # case, as an error is expected given the shot file doesn't\n-                # exist.\n-                if new_row_data is not None:\n+                if not os.path.exists(filepath):\n+                    # Do not pause if the file has been deleted. An error is\n+                    # no surprise there:\n+                    self.shots_model.mark_as_deleted_off_disk(filepath)\n+                else:\n                     self.pause_analysis()\n                 return\n                         \n@@ -1733,10 +1733,10 @@\n         self.to_multishot.put(None)\n         while True:\n             signal, _, updated_data = self.from_multishot.get()\n+            for file in updated_data:\n+                self.shots_model.update_row(file, updated_row_data=updated_data[file])\n             if signal == 'done':\n                 self.multishot_required = False\n-                for file in updated_data:\n-                    self.shots_model.update_row(file, updated_row_data=updated_data[file])\n                 return\n             elif signal == 'error':\n                 self.pause_analysis()\n\n```\n", "markup": "markdown", "html": "<p>Excellent.</p>\n<p>I tested it a bit, got some errors and found some bugs. If you could apply the following changes to fix them, that would be great:</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gh\">diff -r 4658a395c076 __main__.py</span>\n<span class=\"gd\">--- a/__main__.py   Wed Jun 21 17:55:12 2017 +0000</span>\n<span class=\"gi\">+++ b/__main__.py   Wed Jun 21 14:22:35 2017 -0400</span>\n<span class=\"gu\">@@ -242,9 +242,9 @@</span>\n         self.to_worker.put([&#39;analyse&#39;, filepath])\n         signal, data = self.from_worker.get()\n         if signal == &#39;error&#39;:\n<span class=\"gd\">-            return False</span>\n<span class=\"gi\">+            return False, data</span>\n         elif signal == &#39;done&#39;:\n<span class=\"gd\">-            return True</span>\n<span class=\"gi\">+            return True, data</span>\n         else:\n             raise ValueError(&#39;invalid signal %s&#39;%str(signal))\n\n<span class=\"gu\">@@ -1721,11 +1721,11 @@</span>\n                 self.shots_model.update_row(filepath, status_percent=status_percent, dataframe_already_updated=True)\n                 return\n             if signal == &#39;error&#39;:\n<span class=\"gd\">-                # If new_row_data is None, that indicates that we got an</span>\n<span class=\"gd\">-                # IOError error above. Do not pause analysis in this</span>\n<span class=\"gd\">-                # case, as an error is expected given the shot file doesn&#39;t</span>\n<span class=\"gd\">-                # exist.</span>\n<span class=\"gd\">-                if new_row_data is not None:</span>\n<span class=\"gi\">+                if not os.path.exists(filepath):</span>\n<span class=\"gi\">+                    # Do not pause if the file has been deleted. An error is</span>\n<span class=\"gi\">+                    # no surprise there:</span>\n<span class=\"gi\">+                    self.shots_model.mark_as_deleted_off_disk(filepath)</span>\n<span class=\"gi\">+                else:</span>\n                     self.pause_analysis()\n                 return\n\n<span class=\"gu\">@@ -1733,10 +1733,10 @@</span>\n         self.to_multishot.put(None)\n         while True:\n             signal, _, updated_data = self.from_multishot.get()\n<span class=\"gi\">+            for file in updated_data:</span>\n<span class=\"gi\">+                self.shots_model.update_row(file, updated_row_data=updated_data[file])</span>\n             if signal == &#39;done&#39;:\n                 self.multishot_required = False\n<span class=\"gd\">-                for file in updated_data:</span>\n<span class=\"gd\">-                    self.shots_model.update_row(file, updated_row_data=updated_data[file])</span>\n                 return\n             elif signal == &#39;error&#39;:\n                 self.pause_analysis()\n</pre></div>", "type": "rendered"}, "created_on": "2017-06-21T18:12:20.483149+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-21T18:22:53.453389+00:00", "type": "pullrequest_comment", "id": 39306150}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39306337.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39306337"}}, "parent": {"id": 39306150, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39306150.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39306150"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "Actually, there's a little more to it. I'll just be a minute.", "markup": "markdown", "html": "<p>Actually, there's a little more to it. I'll just be a minute.</p>", "type": "rendered"}, "created_on": "2017-06-21T18:14:26.565305+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-21T18:14:26.567453+00:00", "type": "pullrequest_comment", "id": 39306337}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39305061.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39305061"}}, "parent": {"id": 39303840, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39303840.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39303840"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "you're right, my bad.\n\nFixed it!", "markup": "markdown", "html": "<p>you're right, my bad.</p>\n<p>Fixed it!</p>", "type": "rendered"}, "created_on": "2017-06-21T17:55:42.819091+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-06-21T17:55:42.877605+00:00", "type": "pullrequest_comment", "id": 39305061}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"update": {"description": "This change should speedup singleshot scripts by eliminating read operations at the end of analysis(haven't checkt if this is the case). It also adds updating the dataframe after multishot analysis. This can be useful at a later time if we decide to add functionality for sequences to save to the individual runs.\r\n\r\nThis was also discussed in Issue #22", "title": "Update Dataframe without Readoperations", "destination": {"commit": {"hash": "4f78edf03091", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/4f78edf03091.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/4f78edf03091"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4658a395c076", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/4658a395c076"}, "html": {"href": "#!/PhyNerd/lyse/commits/4658a395c076"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "UpdateDataframeNoRead"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-06-21T17:55:13.197056+00:00"}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"update": {"description": "This change should speedup singleshot scripts by eliminating read operations at the end of analysis(haven't checkt if this is the case). It also adds updating the dataframe after multishot analysis. This can be useful at a later time if we decide to add functionality for sequences to save to the individual runs.\r\n\r\nThis was also discussed in Issue #22", "title": "Update Dataframe without Readoperations", "destination": {"commit": {"hash": "4f78edf03091", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/4f78edf03091.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/4f78edf03091"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4658a395c076", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/4658a395c076"}, "html": {"href": "#!/PhyNerd/lyse/commits/4658a395c076"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "UpdateDataframeNoRead"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-06-21T17:55:13.100141+00:00"}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39303840.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39303840"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "Looks great! One final thing: the default argument ` updated_row_data={}` should be ` updated_row_data=None` to work with the error checking.\n\nThanks for your efforts!", "markup": "markdown", "html": "<p>Looks great! One final thing: the default argument <code>updated_row_data={}</code> should be <code>updated_row_data=None</code> to work with the error checking.</p>\n<p>Thanks for your efforts!</p>", "type": "rendered"}, "created_on": "2017-06-21T17:38:34.637085+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-21T17:38:34.640463+00:00", "type": "pullrequest_comment", "id": 39303840}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39301851.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39301851"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "Ok I guess now all your proposed changes have been implemented. Moving to update_row was a bit more tedious than expected.", "markup": "markdown", "html": "<p>Ok I guess now all your proposed changes have been implemented. Moving to update_row was a bit more tedious than expected.</p>", "type": "rendered"}, "created_on": "2017-06-21T17:11:14.022482+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-06-21T17:11:14.066396+00:00", "type": "pullrequest_comment", "id": 39301851}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}, {"update": {"description": "This change should speedup singleshot scripts by eliminating read operations at the end of analysis(haven't checkt if this is the case). It also adds updating the dataframe after multishot analysis. This can be useful at a later time if we decide to add functionality for sequences to save to the individual runs.\r\n\r\nThis was also discussed in Issue #22", "title": "Update Dataframe without Readoperations", "destination": {"commit": {"hash": "4f78edf03091", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/4f78edf03091.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/4f78edf03091"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "743c9a8ac2a0", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/743c9a8ac2a0"}, "html": {"href": "#!/PhyNerd/lyse/commits/743c9a8ac2a0"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "UpdateDataframeNoRead"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-06-21T17:10:18.227676+00:00"}, "pull_request": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}}], "next": "data/repositories/labscript_suite/lyse/pullrequests/17/activity_ctx=AnUzKtKUj.json"}