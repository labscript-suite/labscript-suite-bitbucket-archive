{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/39351055.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-39351055"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "Excellent,  well I think this feature is complete now.\n\nI tested with some shots using a large number of globals (using globals files from Monash, so, representative of what it would be like for them), and things are quite slow updating after both singleshot and multishot (the latter so slow that I doubt Monash will want to use it). But post-singleshot updates were already that slow (slightly slower due to also reading files) without your change, and post-multishot updates were impossible, so your code does not introduce any slowdown for current users.\n\nMore positively, your code lays the groundwork for future optimisation - all the inefficiency is now isolated to `DataFrameModel.update_row()`, whereas it used to be more spread out.\n\nCould you add @shaunj as a reviewer? @shaunj do you feel like pulling this branch and letting it run for a bit to confirm it doesn't break anything for you? No problem if not.", "markup": "markdown", "html": "<p>Excellent,  well I think this feature is complete now.</p>\n<p>I tested with some shots using a large number of globals (using globals files from Monash, so, representative of what it would be like for them), and things are quite slow updating after both singleshot and multishot (the latter so slow that I doubt Monash will want to use it). But post-singleshot updates were already that slow (slightly slower due to also reading files) without your change, and post-multishot updates were impossible, so your code does not introduce any slowdown for current users.</p>\n<p>More positively, your code lays the groundwork for future optimisation - all the inefficiency is now isolated to <code>DataFrameModel.update_row()</code>, whereas it used to be more spread out.</p>\n<p>Could you add @shaunj as a reviewer? @shaunj do you feel like pulling this branch and letting it run for a bit to confirm it doesn't break anything for you? No problem if not.</p>", "type": "rendered"}, "created_on": "2017-06-22T09:38:35.283945+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-06-22T09:38:35.291731+00:00", "type": "pullrequest_comment", "id": 39351055}