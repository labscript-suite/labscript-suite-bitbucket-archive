{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/40918085.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-40918085"}}, "parent": {"id": 40762804, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/40762804.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-40762804"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "I've updated to your latest commit (which I think includes the above changes), and now running my test script, I get:\n\n\n```\n#!python\n\nTraceback (most recent call last):\n  File \"C:\\ProgramData\\Anaconda2\\lib\\threading.py\", line 754, in run\n    self.__target(*self.__args, **self.__kwargs)\n  File \"C:\\labscript_suite\\lyse\\__main__.py\", line 1682, in analysis_loop\n    self.do_singleshot_analysis(filepath)\n  File \"C:\\labscript_suite\\lyse\\__main__.py\", line 1720, in do_singleshot_analysis\n    self.shots_model.update_row(file, status_percent=status_percent, updated_row_data=updated_data[file])\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 114, in f\n    return inmain(fn, *args, **kwargs)\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 74, in inmain\n    return get_inmain_result(in_main_later(fn,False,*args,**kwargs))\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 94, in get_inmain_result\n    exec('raise type, value, traceback')\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 53, in event\n    result = event.fn(*event.args, **event.kwargs)\n  File \"C:\\labscript_suite\\lyse\\__main__.py\", line 1305, in update_row\n    self.dataframe.loc[df_row_index,(group, name)] = updated_row_data[group, name]\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core\\indexing.py\", line 140, in __setitem__\n    indexer = self._get_setitem_indexer(key)\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core\\indexing.py\", line 122, in _get_setitem_indexer\n    return self._convert_tuple(key, is_setter=True)\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core\\indexing.py\", line 184, in _convert_tuple\n    idx = self._convert_to_indexer(k, axis=i, is_setter=is_setter)\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core\\indexing.py\", line 1230, in _convert_to_indexer\n    raise KeyError('%s not in index' % objarr[mask])\nKeyError: \"[u'test' 'key'] not in index\"\n```\n\nNote that this happens with both import lyse and from lyse import * versions of my script. If, however, I run the default branch of lyse, run the test script on a file, then go back to this branch, the script will run again on that same file without issue, and continue working on new files, as the dataframe now has the appropriate key.", "markup": "markdown", "html": "<p>I've updated to your latest commit (which I think includes the above changes), and now running my test script, I get:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib</span><span class=\"se\">\\t</span><span class=\"s2\">hreading.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">754</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">run</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__target</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\lyse\\__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1682</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">analysis_loop</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">do_singleshot_analysis</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\lyse\\__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1720</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">do_singleshot_analysis</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">shots_model</span><span class=\"o\">.</span><span class=\"n\">update_row</span><span class=\"p\">(</span><span class=\"nb\">file</span><span class=\"p\">,</span> <span class=\"n\">status_percent</span><span class=\"o\">=</span><span class=\"n\">status_percent</span><span class=\"p\">,</span> <span class=\"n\">updated_row_data</span><span class=\"o\">=</span><span class=\"n\">updated_data</span><span class=\"p\">[</span><span class=\"nb\">file</span><span class=\"p\">])</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">114</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">f</span>\n    <span class=\"k\">return</span> <span class=\"n\">inmain</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">74</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">inmain</span>\n    <span class=\"k\">return</span> <span class=\"n\">get_inmain_result</span><span class=\"p\">(</span><span class=\"n\">in_main_later</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"p\">,</span><span class=\"bp\">False</span><span class=\"p\">,</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">))</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">94</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">get_inmain_result</span>\n    <span class=\"k\">exec</span><span class=\"p\">(</span><span class=\"s1\">&#39;raise type, value, traceback&#39;</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">53</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">event</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">fn</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\lyse\\__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1305</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">update_row</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"n\">df_row_index</span><span class=\"p\">,(</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"n\">updated_row_data</span><span class=\"p\">[</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">]</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core\\indexing.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">140</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__setitem__</span>\n    <span class=\"n\">indexer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_setitem_indexer</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core\\indexing.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">122</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_get_setitem_indexer</span>\n    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_convert_tuple</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">is_setter</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core\\indexing.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">184</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_convert_tuple</span>\n    <span class=\"n\">idx</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_convert_to_indexer</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">is_setter</span><span class=\"o\">=</span><span class=\"n\">is_setter</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\ProgramData\\Anaconda2\\lib\\site-packages\\pandas\\core\\indexing.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1230</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_convert_to_indexer</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">KeyError</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"si\">%s</span><span class=\"s1\"> not in index&#39;</span> <span class=\"o\">%</span> <span class=\"n\">objarr</span><span class=\"p\">[</span><span class=\"n\">mask</span><span class=\"p\">])</span>\n<span class=\"ne\">KeyError</span><span class=\"p\">:</span> <span class=\"s2\">&quot;[u&#39;test&#39; &#39;key&#39;] not in index&quot;</span>\n</pre></div>\n\n\n<p>Note that this happens with both import lyse and from lyse import * versions of my script. If, however, I run the default branch of lyse, run the test script on a file, then go back to this branch, the script will run again on that same file without issue, and continue working on new files, as the dataframe now has the appropriate key.</p>", "type": "rendered"}, "created_on": "2017-07-17T23:54:29.157640+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-07-17T23:54:29.161300+00:00", "type": "pullrequest_comment", "id": 40918085}