{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments/40919372.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17/_/diff#comment-40919372"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}}, "title": "Update Dataframe without Readoperations"}, "content": {"raw": "The inability to reproduce the bug might be related to the fact that Monash labs use BIAS for imaging, which saves some information about images to the HDF5 file, which lyse reads and adds to the dataframe with more levels to the column-name hierarchy than just two. That would mean that ['test', 'key'] would not be a valid column name, but ['test', key', '', ''] might be, for example.  If this is the case, then it might be able to be fixed by changing these lines:\n\n```\n#!python\n        if updated_row_data is not None and not dataframe_already_updated:\n            for group, name in updated_row_data:\n                self.dataframe.loc[df_row_index,(group, name)] = updated_row_data[group, name]\n```\n\nto something like\n```\n#!python\n        if updated_row_data is not None and not dataframe_already_updated:\n            for group, name in updated_row_data:\n                self.dataframe.loc[df_row_index,(group, name) + ('',) * (self.nlevels - 2)] = updated_row_data[group, name]\n\n```\n", "markup": "markdown", "html": "<p>The inability to reproduce the bug might be related to the fact that Monash labs use BIAS for imaging, which saves some information about images to the HDF5 file, which lyse reads and adds to the dataframe with more levels to the column-name hierarchy than just two. That would mean that ['test', 'key'] would not be a valid column name, but ['test', key', '', ''] might be, for example.  If this is the case, then it might be able to be fixed by changing these lines:</p>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"k\">if</span> <span class=\"n\">updated_row_data</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">dataframe_already_updated</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">updated_row_data</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"n\">df_row_index</span><span class=\"p\">,(</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"n\">updated_row_data</span><span class=\"p\">[</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">]</span>\n</pre></div>\n\n\n<p>to something like</p>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"k\">if</span> <span class=\"n\">updated_row_data</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">dataframe_already_updated</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">updated_row_data</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"n\">df_row_index</span><span class=\"p\">,(</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">,)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">nlevels</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"n\">updated_row_data</span><span class=\"p\">[</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">]</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-07-18T00:39:56.595775+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-18T00:44:48.563276+00:00", "type": "pullrequest_comment", "id": 40919372}