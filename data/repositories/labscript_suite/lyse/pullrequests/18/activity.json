{"pagelen": 50, "values": [{"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42954976.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42954976"}}, "parent": {"id": 42954817, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42954817.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42954817"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "Sweet. Done.", "markup": "markdown", "html": "<p>Sweet. Done.</p>", "type": "rendered"}, "created_on": "2017-08-16T19:29:32.440925+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-16T19:29:32.444850+00:00", "type": "pullrequest_comment", "id": 42954976}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42954817.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42954817"}}, "parent": {"id": 42954782, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42954782.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42954782"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "yup everything else is already adjusted", "markup": "markdown", "html": "<p>yup everything else is already adjusted</p>", "type": "rendered"}, "created_on": "2017-08-16T19:28:09.519136+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-16T19:28:24.255883+00:00", "type": "pullrequest_comment", "id": 42954817}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42954782.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42954782"}}, "parent": {"id": 42954587, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42954587.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42954587"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "The three references to QMainWindow, right?", "markup": "markdown", "html": "<p>The three references to QMainWindow, right?</p>", "type": "rendered"}, "created_on": "2017-08-16T19:27:36.938160+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-16T19:27:36.940509+00:00", "type": "pullrequest_comment", "id": 42954782}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42954650.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42954650"}}, "parent": {"id": 42954587, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42954587.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42954587"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "Thanks they must have slipped through somehow this morning while updating.", "markup": "markdown", "html": "<p>Thanks they must have slipped through somehow this morning while updating.</p>", "type": "rendered"}, "created_on": "2017-08-16T19:25:32.451423+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-16T19:25:32.493883+00:00", "type": "pullrequest_comment", "id": 42954650}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42954587.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42954587"}}, "parent": {"id": 42954500, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42954500.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42954500"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "Ah, damn. Yep, I'll get them", "markup": "markdown", "html": "<p>Ah, damn. Yep, I'll get them</p>", "type": "rendered"}, "created_on": "2017-08-16T19:24:42.190351+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-16T19:24:42.193463+00:00", "type": "pullrequest_comment", "id": 42954587}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42954500.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42954500"}}, "parent": {"id": 42954249, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42954249.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42954249"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "Found 3 QtGui references that need to be changes just before you merged -.- my bad.  Can you please fix them in a quick patch?", "markup": "markdown", "html": "<p>Found 3 QtGui references that need to be changes just before you merged -.- my bad.  Can you please fix them in a quick patch?</p>", "type": "rendered"}, "created_on": "2017-08-16T19:23:09.106168+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-16T19:23:09.161681+00:00", "type": "pullrequest_comment", "id": 42954500}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"update": {"description": "This pull request adresses issue #24 and adds the ability to save the current routines to a configuration file, revert back to previously saved configurations and load configurations.\r\nTo achieve the restore of the checked state of routines a few modifications to AnalysisRoutine and RoutineBox were needed.\r\nThe rest of the code is mainly copied from runmanager's source code.\r\n\r\nIn the future one could also think about adding the ability to save the dataframe to disk with one of pandas export functions (and restore it at a later point) however this is a bit harder and not part of this pull request.", "title": "Added ability to restore UI state", "destination": {"commit": {"hash": "37bf5c9a8493", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/37bf5c9a8493.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/37bf5c9a8493"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4065f47a32e8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/4065f47a32e8"}, "html": {"href": "#!/PhyNerd/lyse/commits/4065f47a32e8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "Config"}}, "state": "MERGED", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2017-08-16T19:21:29.615992+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42954053.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42954053"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "Ok so besides the changes that needed to be done for the qtutils2 stuff today this is running for 2 weeks straight in our lab (so that is at least 10 save/load cycles) without problems. Can we merge this?\n\nUpdate found some more QtGui s in the code will update this", "markup": "markdown", "html": "<p>Ok so besides the changes that needed to be done for the qtutils2 stuff today this is running for 2 weeks straight in our lab (so that is at least 10 save/load cycles) without problems. Can we merge this?</p>\n<p>Update found some more QtGui s in the code will update this</p>", "type": "rendered"}, "created_on": "2017-08-16T19:16:11.905803+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-16T19:19:01.770823+00:00", "type": "pullrequest_comment", "id": 42954053}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42954249.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42954249"}}, "parent": {"id": 42954053, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42954053.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42954053"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "Sounds good to me. Remembering plot window locations is nice but can come later.", "markup": "markdown", "html": "<p>Sounds good to me. Remembering plot window locations is nice but can come later.</p>", "type": "rendered"}, "created_on": "2017-08-16T19:18:56.177659+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-16T19:18:56.180325+00:00", "type": "pullrequest_comment", "id": 42954249}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"update": {"description": "This pull request adresses issue #24 and adds the ability to save the current routines to a configuration file, revert back to previously saved configurations and load configurations.\r\nTo achieve the restore of the checked state of routines a few modifications to AnalysisRoutine and RoutineBox were needed.\r\nThe rest of the code is mainly copied from runmanager's source code.\r\n\r\nIn the future one could also think about adding the ability to save the dataframe to disk with one of pandas export functions (and restore it at a later point) however this is a bit harder and not part of this pull request.", "title": "Added ability to restore UI state", "destination": {"commit": {"hash": "37bf5c9a8493", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/37bf5c9a8493.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/37bf5c9a8493"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4065f47a32e8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/4065f47a32e8"}, "html": {"href": "#!/PhyNerd/lyse/commits/4065f47a32e8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "Config"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-16T13:22:32.878033+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42886656.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42886656"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "This pull request has merge conflicts due to the qtutils 2 merge. Will fix.\n\nUpdate: fixed", "markup": "markdown", "html": "<p>This pull request has merge conflicts due to the qtutils 2 merge. Will fix.</p>\n<p>Update: fixed</p>", "type": "rendered"}, "created_on": "2017-08-16T06:41:43.570010+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-16T06:51:59.247705+00:00", "type": "pullrequest_comment", "id": 42886656}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"update": {"description": "This pull request adresses issue #24 and adds the ability to save the current routines to a configuration file, revert back to previously saved configurations and load configurations.\r\nTo achieve the restore of the checked state of routines a few modifications to AnalysisRoutine and RoutineBox were needed.\r\nThe rest of the code is mainly copied from runmanager's source code.\r\n\r\nIn the future one could also think about adding the ability to save the dataframe to disk with one of pandas export functions (and restore it at a later point) however this is a bit harder and not part of this pull request.", "title": "Added ability to restore UI state", "destination": {"commit": {"hash": "37bf5c9a8493", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/37bf5c9a8493.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/37bf5c9a8493"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "a7e27ce779ce", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/a7e27ce779ce"}, "html": {"href": "#!/PhyNerd/lyse/commits/a7e27ce779ce"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "Config"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-16T06:50:54.689446+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42613398.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42613398"}}, "parent": {"id": 42613114, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42613114.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42613114"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "They should. Also, they probably already have one - the default labconfig file (which exists in the installer repository) has one as this feature was planned but never implemented. The path specified is a silly one, but we should leave it since we shouldn't be changing people's labconfig files on them - but I'll set it in the installer to be in the default app_saved_configs folder so it will be more sensible for future installs.", "markup": "markdown", "html": "<p>They should. Also, they probably already have one - the default labconfig file (which exists in the installer repository) has one as this feature was planned but never implemented. The path specified is a silly one, but we should leave it since we shouldn't be changing people's labconfig files on them - but I'll set it in the installer to be in the default app_saved_configs folder so it will be more sensible for future installs.</p>", "type": "rendered"}, "created_on": "2017-08-10T20:59:00.765022+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-10T20:59:00.767698+00:00", "type": "pullrequest_comment", "id": 42613398}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42613114.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42613114"}}, "parent": {"id": 42612688, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42612688.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42612688"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "I was thinking of current users that already have a config file that doesn't have a lyse section. Our should they just add it manually ?", "markup": "markdown", "html": "<p>I was thinking of current users that already have a config file that doesn't have a lyse section. Our should they just add it manually ?</p>", "type": "rendered"}, "created_on": "2017-08-10T20:54:37.743034+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-10T20:54:37.799932+00:00", "type": "pullrequest_comment", "id": 42613114}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42612688.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42612688"}}, "parent": {"id": 42609517, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42609517.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42609517"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "No, if labconfig does not specify that a file should be auto-loaded, then no file should be auto-loaded. So I think it should be left as is. The default labconfig will specify that a particular config file should be autoloaded, but if the user deletes it then lyse should just start up blank.", "markup": "markdown", "html": "<p>No, if labconfig does not specify that a file should be auto-loaded, then no file should be auto-loaded. So I think it should be left as is. The default labconfig will specify that a particular config file should be autoloaded, but if the user deletes it then lyse should just start up blank.</p>", "type": "rendered"}, "created_on": "2017-08-10T20:48:00.182421+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-10T20:48:00.185526+00:00", "type": "pullrequest_comment", "id": 42612688}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42609517.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42609517"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "When I added the 'app_saved_configs' stuff I noticed, that autoload_config_file is never set in lyse and I'm not sure if I should set it in code or if we want to make users set it them selfs. Opinions? Also if i should set it in code where would be the best idea? \nIn the except clause of \n\n```\n#!python\n\nautoload_config_file = self.exp_config.get('lyse', 'autoload_config_file')\n```\nor in the part where the default_path is set or somewhere totally different?", "markup": "markdown", "html": "<p>When I added the 'app_saved_configs' stuff I noticed, that autoload_config_file is never set in lyse and I'm not sure if I should set it in code or if we want to make users set it them selfs. Opinions? Also if i should set it in code where would be the best idea? \nIn the except clause of </p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">autoload_config_file</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">exp_config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;lyse&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;autoload_config_file&#39;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>or in the part where the default_path is set or somewhere totally different?</p>", "type": "rendered"}, "created_on": "2017-08-10T20:01:28.155578+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-10T20:01:28.226768+00:00", "type": "pullrequest_comment", "id": 42609517}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"update": {"description": "This pull request adresses issue #24 and adds the ability to save the current routines to a configuration file, revert back to previously saved configurations and load configurations.\r\nTo achieve the restore of the checked state of routines a few modifications to AnalysisRoutine and RoutineBox were needed.\r\nThe rest of the code is mainly copied from runmanager's source code.\r\n\r\nIn the future one could also think about adding the ability to save the dataframe to disk with one of pandas export functions (and restore it at a later point) however this is a bit harder and not part of this pull request.", "title": "Added ability to restore UI state", "destination": {"commit": {"hash": "efe68eae0ec6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/efe68eae0ec6.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/efe68eae0ec6"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b9fce294cd5f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/b9fce294cd5f"}, "html": {"href": "#!/PhyNerd/lyse/commits/b9fce294cd5f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "Config"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-10T19:56:19.843775+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42607117.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42607117"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "I've \"unapproved\" just because I'm going to use \"approval\" as a flag for saying what I think should be locally pulled for testing next. I'll do the same with other pull requests - it doesn't mean I think more needs to be done, it's just making up for the fact that we can't apply tags here, otherwise I'd use a tag.\n\nEdit: this is unsatisfactory too. Changed my mind, approval means approval again.", "markup": "markdown", "html": "<p>I've \"unapproved\" just because I'm going to use \"approval\" as a flag for saying what I think should be locally pulled for testing next. I'll do the same with other pull requests - it doesn't mean I think more needs to be done, it's just making up for the fact that we can't apply tags here, otherwise I'd use a tag.</p>\n<p>Edit: this is unsatisfactory too. Changed my mind, approval means approval again.</p>", "type": "rendered"}, "created_on": "2017-08-10T19:21:21.930403+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-10T19:26:25.933882+00:00", "type": "pullrequest_comment", "id": 42607117}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"approval": {"date": "2017-08-10T19:25:53.935093+00:00", "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42607221.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42607221"}}, "parent": {"id": 42606789, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42606789.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42606789"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "Currently I have nothing major planned other than pyqt5 and python 3. Of which you guys seem to be very much in favor of as well.\n\nMakes sense so we will have to stick to issues for now.", "markup": "markdown", "html": "<p>Currently I have nothing major planned other than pyqt5 and python 3. Of which you guys seem to be very much in favor of as well.</p>\n<p>Makes sense so we will have to stick to issues for now.</p>", "type": "rendered"}, "created_on": "2017-08-10T19:22:50.727888+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-10T19:22:50.772730+00:00", "type": "pullrequest_comment", "id": 42607221}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42606789.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42606789"}}, "parent": {"id": 42606205, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42606205.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42606205"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "If the issue is minor and there is code to discuss, then yes I think pull requests are the way to go. So long as the author is happy with the version control part of things like having to close a branch if it gets declined, and so long as people don't succumb to the sunk cost fallacy of wanting to get code in just because it's written already. So don't begin any major undertaking without discussion first unless you are happy that it might get radically changed.\n\nIssues are not that invisible - it's just that they don't have a diff by default if you're discussing code and they don't have threaded discussions. Even though reddit is threaded it also doesn't have diffs. And it's nice for threads to have time-based ordering rather than votes-based at each level of the nesting. Issues on bitbucket can also be referred to easily in commit messages, so I think we should leave discussion here on bitbucket unless supplanted by JIRA or similar. Not to mention that mixing work and reddit is dangerous for productivity...", "markup": "markdown", "html": "<p>If the issue is minor and there is code to discuss, then yes I think pull requests are the way to go. So long as the author is happy with the version control part of things like having to close a branch if it gets declined, and so long as people don't succumb to the sunk cost fallacy of wanting to get code in just because it's written already. So don't begin any major undertaking without discussion first unless you are happy that it might get radically changed.</p>\n<p>Issues are not that invisible - it's just that they don't have a diff by default if you're discussing code and they don't have threaded discussions. Even though reddit is threaded it also doesn't have diffs. And it's nice for threads to have time-based ordering rather than votes-based at each level of the nesting. Issues on bitbucket can also be referred to easily in commit messages, so I think we should leave discussion here on bitbucket unless supplanted by JIRA or similar. Not to mention that mixing work and reddit is dangerous for productivity...</p>", "type": "rendered"}, "created_on": "2017-08-10T19:16:34.056570+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-10T19:16:34.059108+00:00", "type": "pullrequest_comment", "id": 42606789}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"update": {"description": "This pull request adresses issue #24 and adds the ability to save the current routines to a configuration file, revert back to previously saved configurations and load configurations.\r\nTo achieve the restore of the checked state of routines a few modifications to AnalysisRoutine and RoutineBox were needed.\r\nThe rest of the code is mainly copied from runmanager's source code.\r\n\r\nIn the future one could also think about adding the ability to save the dataframe to disk with one of pandas export functions (and restore it at a later point) however this is a bit harder and not part of this pull request.", "title": "Added ability to restore UI state", "destination": {"commit": {"hash": "efe68eae0ec6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/efe68eae0ec6.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/efe68eae0ec6"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "8706cada9697", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/8706cada9697"}, "html": {"href": "#!/PhyNerd/lyse/commits/8706cada9697"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "Config"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-10T19:15:48.738392+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42606253.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42606253"}}, "parent": {"id": 42605049, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42605049.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42605049"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "I'll fix this right away", "markup": "markdown", "html": "<p>I'll fix this right away</p>", "type": "rendered"}, "created_on": "2017-08-10T19:08:35.592593+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-10T19:08:35.629304+00:00", "type": "pullrequest_comment", "id": 42606253}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42606205.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42606205"}}, "parent": {"id": 42604516, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42604516.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42604516"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "Ok I'll add in the changes you proposed later today or maybe tomorrow as I'm currently pondering over some stuff for the [next feature](#!/labscript_suite/lyse/issues/26/loading-images-takes-too-long) I want to add.\n\nAs for the existing users switching that is (as you pointed out) up to them.\n\nI sure hope to get all that PyQt5/qtutils2 stuff over with soon as I'm sick of switching as well. Made worse by the fact I'm a total noob when it comes to the whole version control stuff.(startet using it when I started using bitbucket a month ago)\n\nNo worries I'm also loosing sight of all of the pull requests which is why I'm waiting with new ones until older ones are merged. Most of them are pretty minor anyway. I just create them instead of issues as someone(I think it was you) once pointed out they are better than issues for discussion. If this usage of pull request should be a burden on you guys I'd also be happy to reverting to issues(which I do when things get harder to fix anyway) or waiting longer before hitting 'create pull request'.\n\nI think we should maybe get some sort of forum up and running for general discussion of 'conceptual' ideas that impact all of labscript. I'd suggest creating a sub[reddit ](https://www.reddit.com) as they are great for discussions, free and easy to maintain and set up.", "markup": "markdown", "html": "<p>Ok I'll add in the changes you proposed later today or maybe tomorrow as I'm currently pondering over some stuff for the <a data-is-external-link=\"true\" href=\"#!/labscript_suite/lyse/issues/26/loading-images-takes-too-long\" rel=\"nofollow\">next feature</a> I want to add.</p>\n<p>As for the existing users switching that is (as you pointed out) up to them.</p>\n<p>I sure hope to get all that PyQt5/qtutils2 stuff over with soon as I'm sick of switching as well. Made worse by the fact I'm a total noob when it comes to the whole version control stuff.(startet using it when I started using bitbucket a month ago)</p>\n<p>No worries I'm also loosing sight of all of the pull requests which is why I'm waiting with new ones until older ones are merged. Most of them are pretty minor anyway. I just create them instead of issues as someone(I think it was you) once pointed out they are better than issues for discussion. If this usage of pull request should be a burden on you guys I'd also be happy to reverting to issues(which I do when things get harder to fix anyway) or waiting longer before hitting 'create pull request'.</p>\n<p>I think we should maybe get some sort of forum up and running for general discussion of 'conceptual' ideas that impact all of labscript. I'd suggest creating a sub<a data-is-external-link=\"true\" href=\"https://www.reddit.com\" rel=\"nofollow\">reddit </a> as they are great for discussions, free and easy to maintain and set up.</p>", "type": "rendered"}, "created_on": "2017-08-10T19:07:37.635743+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-10T19:07:37.751600+00:00", "type": "pullrequest_comment", "id": 42606205}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42605049.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42605049"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "One more thing: There's a spurious error printed to the output box at startup when the default config file does not (yet) exist. To get rid of this, every `except LabConfig.NoOptionError:` clause in the config file reading should be replaced with `except (LabConfig.NoOptionError, LabConfig.NoSectionError):` so it knows to just ignore and proceed if the file is empty or doesn't exist.", "markup": "markdown", "html": "<p>One more thing: There's a spurious error printed to the output box at startup when the default config file does not (yet) exist. To get rid of this, every <code>except LabConfig.NoOptionError:</code> clause in the config file reading should be replaced with <code>except (LabConfig.NoOptionError, LabConfig.NoSectionError):</code> so it knows to just ignore and proceed if the file is empty or doesn't exist.</p>", "type": "rendered"}, "created_on": "2017-08-10T18:48:50.161131+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-10T18:49:20.469991+00:00", "type": "pullrequest_comment", "id": 42605049}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42604516.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42604516"}}, "parent": {"id": 42601815, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42601815.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42601815"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "Let's get that file path issue sorted, regarding the folder which we should save configurations to. I'm almost happy with what you suggested: that it be labconfig configurable with a default of `%(labscript_suite)s/userlib/app_saved_configs`, but I would append the experiment name to it, the same as all the other paths have the experiment name in them. This way if you change the experiment name in you labconfig, all the paths get switched over. \n\nThis will require changes to the installer to change the default labconfig and create the folder.\nI'll add to the `[DEFAULT]` section: `app_saved_configs = %(labscript_suite)s\\userlib\\app_saved_configs\\%(experiment_name)s` and modify the `[runmanager]` and `[lyse]` sections to use it in their `autoload_config_file` settings. I'll make the installer create the `app_saved_configs` folder in userlib.\n\nWhat you should do is make lyse read the config value ('default', 'app_saved_configs') when it needs to open a file dialog box for saving or loading a config, and since that config option won't exist in existing installs, lyse should construct the default path `%(labscript_suite)s\\userlib\\app_saved_configs\\%(experiment_name)s` itself out of the other variables and use that if it gets a `NoOptionError`. Lyse should then create that folder if it doesn't exist, and create the `lyse` subdirectory in it as well. Finally it can show the file dialog box. It should do the folder creation even if it did not get NoOptionError. You'll want something like `if not os.path.exists(folder): os.makedirs(folder)` to ensure the intermediate directories are created.\n\nUnfortunately existing installs will have labconfigs with autoload_config_file set to something in `experiment_shot_storage`, and we should not change that without the user's action, so that will seem inconsistent on existing installs unless changed by the user. But I don't see that as worth it to fix.\n\nBut I think there is nothing else remaining to be done with this pull request other than anything revealed during testing!\n\nOther than that I think just testing. Phil has indicated some pull requests can be deployed to their lab soon for testing, particularly the qtutils 2.0 stuff. This pull request will have merge conflicts (minor, but still), so it should perhaps wait until after the qtutils 2.0 merge. It's quite taxing testing things when I have to switch between qtutils 2 and qtutils 1 and switch branches on basically every repository in between tests, so I'm eager to get the qtutils 2.0 stuff in first!\n\nThanks for all your efforts with these pull requests, and for your patience with us dealing with them - we should get the all eventually.", "markup": "markdown", "html": "<p>Let's get that file path issue sorted, regarding the folder which we should save configurations to. I'm almost happy with what you suggested: that it be labconfig configurable with a default of <code>%(labscript_suite)s/userlib/app_saved_configs</code>, but I would append the experiment name to it, the same as all the other paths have the experiment name in them. This way if you change the experiment name in you labconfig, all the paths get switched over. </p>\n<p>This will require changes to the installer to change the default labconfig and create the folder.\nI'll add to the <code>[DEFAULT]</code> section: <code>app_saved_configs = %(labscript_suite)s\\userlib\\app_saved_configs\\%(experiment_name)s</code> and modify the <code>[runmanager]</code> and <code>[lyse]</code> sections to use it in their <code>autoload_config_file</code> settings. I'll make the installer create the <code>app_saved_configs</code> folder in userlib.</p>\n<p>What you should do is make lyse read the config value ('default', 'app_saved_configs') when it needs to open a file dialog box for saving or loading a config, and since that config option won't exist in existing installs, lyse should construct the default path <code>%(labscript_suite)s\\userlib\\app_saved_configs\\%(experiment_name)s</code> itself out of the other variables and use that if it gets a <code>NoOptionError</code>. Lyse should then create that folder if it doesn't exist, and create the <code>lyse</code> subdirectory in it as well. Finally it can show the file dialog box. It should do the folder creation even if it did not get NoOptionError. You'll want something like <code>if not os.path.exists(folder): os.makedirs(folder)</code> to ensure the intermediate directories are created.</p>\n<p>Unfortunately existing installs will have labconfigs with autoload_config_file set to something in <code>experiment_shot_storage</code>, and we should not change that without the user's action, so that will seem inconsistent on existing installs unless changed by the user. But I don't see that as worth it to fix.</p>\n<p>But I think there is nothing else remaining to be done with this pull request other than anything revealed during testing!</p>\n<p>Other than that I think just testing. Phil has indicated some pull requests can be deployed to their lab soon for testing, particularly the qtutils 2.0 stuff. This pull request will have merge conflicts (minor, but still), so it should perhaps wait until after the qtutils 2.0 merge. It's quite taxing testing things when I have to switch between qtutils 2 and qtutils 1 and switch branches on basically every repository in between tests, so I'm eager to get the qtutils 2.0 stuff in first!</p>\n<p>Thanks for all your efforts with these pull requests, and for your patience with us dealing with them - we should get the all eventually.</p>", "type": "rendered"}, "created_on": "2017-08-10T18:40:45.329902+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-10T18:45:18.939989+00:00", "type": "pullrequest_comment", "id": 42604516}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42601815.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42601815"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "What are we at with this pull request?\nI think it's done. Are we just waiting on testing results or are there things that still need to be done?", "markup": "markdown", "html": "<p>What are we at with this pull request?\nI think it's done. Are we just waiting on testing results or are there things that still need to be done?</p>", "type": "rendered"}, "created_on": "2017-08-10T18:00:37.213667+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-10T18:00:37.264069+00:00", "type": "pullrequest_comment", "id": 42601815}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42331214.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42331214"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "I created another pull request that [saves dataframes](#!/labscript_suite/lyse/pull-requests/26/save-dataframes). Once both pull request are merged it should be quite easy to also save/load the dataframe along side the config file.", "markup": "markdown", "html": "<p>I created another pull request that <a data-is-external-link=\"true\" href=\"#!/labscript_suite/lyse/pull-requests/26/save-dataframes\" rel=\"nofollow\">saves dataframes</a>. Once both pull request are merged it should be quite easy to also save/load the dataframe along side the config file.</p>", "type": "rendered"}, "created_on": "2017-08-07T21:53:34.589141+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-07T21:53:34.657827+00:00", "type": "pullrequest_comment", "id": 42331214}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42141883.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42141883"}}, "parent": {"id": 42140388, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42140388.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42140388"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "So I'd say we leave it as is for this pullrequest and then change in runmanager, lyse and labconfig all at once in new pull requests.\n\n\nI'll do some googeling on checking if the hostname is static. And report back if I find something. Also I'm not sure this is mac specific I'll test this tomorrow.\n\n\nI propose a fix until someone comes up with something better:\n\nstep 1: create a hidden file somewhere just containing the name of the labconfig file. \n\nstep 2: Check if the referenced labconfig file exists if so use it. If not delete hidden file and go back to step 1\n\n\nWe should maybe move this discussion to a new issue under labscript_utils.", "markup": "markdown", "html": "<p>So I'd say we leave it as is for this pullrequest and then change in runmanager, lyse and labconfig all at once in new pull requests.</p>\n<p>I'll do some googeling on checking if the hostname is static. And report back if I find something. Also I'm not sure this is mac specific I'll test this tomorrow.</p>\n<p>I propose a fix until someone comes up with something better:</p>\n<p>step 1: create a hidden file somewhere just containing the name of the labconfig file. </p>\n<p>step 2: Check if the referenced labconfig file exists if so use it. If not delete hidden file and go back to step 1</p>\n<p>We should maybe move this discussion to a new issue under labscript_utils.</p>", "type": "rendered"}, "created_on": "2017-08-03T20:18:51.011397+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-03T20:19:21.439341+00:00", "type": "pullrequest_comment", "id": 42141883}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42140388.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42140388"}}, "parent": {"id": 42137212, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42137212.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42137212"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "That make sense, since all other paths are configurable - it also serves as a way for people reading the code or the default labconfig file to see which each path is for (in the absence of actual documentation, which of course is still sorely needed as well!).\n\nThe hostname thing is macos specific I believe, I didn't realise it was a thing until someone on a mac had a problem as they moved between wifi networks.\n\nYet to think of a solution for this - We can certainly make the labconfig module look for a 'labconfig.ini' as a fallback if it doesn't find a file that has the same name as the hostname, but then what should the labconfig initially produced be? Is there a way to tell whether a computer's hostname is static or not? If so, we should use that to determine whether to use hostname or not.\n\nThe reason we use the hsotname is so that we can put the labconfig folder under version control with the configurations of multiple computers in the lab. This is important since there are interdependencies - all computers need to be pointed at the same zlock server for example, and might want to agree on what computer is running BLACS or runamanger etc. And working out how to have each computer have its own file in a way that doesn't involve yet another config file solely to tell it what config file to look for meant we turned to unique ways of identifying each computer. But obviously hostname is too unique if it doesn't even stay constant over time :p. Open to suggestions!", "markup": "markdown", "html": "<p>That make sense, since all other paths are configurable - it also serves as a way for people reading the code or the default labconfig file to see which each path is for (in the absence of actual documentation, which of course is still sorely needed as well!).</p>\n<p>The hostname thing is macos specific I believe, I didn't realise it was a thing until someone on a mac had a problem as they moved between wifi networks.</p>\n<p>Yet to think of a solution for this - We can certainly make the labconfig module look for a 'labconfig.ini' as a fallback if it doesn't find a file that has the same name as the hostname, but then what should the labconfig initially produced be? Is there a way to tell whether a computer's hostname is static or not? If so, we should use that to determine whether to use hostname or not.</p>\n<p>The reason we use the hsotname is so that we can put the labconfig folder under version control with the configurations of multiple computers in the lab. This is important since there are interdependencies - all computers need to be pointed at the same zlock server for example, and might want to agree on what computer is running BLACS or runamanger etc. And working out how to have each computer have its own file in a way that doesn't involve yet another config file solely to tell it what config file to look for meant we turned to unique ways of identifying each computer. But obviously hostname is too unique if it doesn't even stay constant over time :p. Open to suggestions!</p>", "type": "rendered"}, "created_on": "2017-08-03T19:57:02.566891+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-03T19:57:02.569754+00:00", "type": "pullrequest_comment", "id": 42140388}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42137212.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42137212"}}, "parent": {"id": 42123410, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42123410.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42123410"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "I like this system very much, but I would make the User saved configurations folder user configurable in the labconfig. (the default could still be ```/userlib/app_saved_configs/<app_name>```)\n\nAlso something a bit off topic: \nIt's not really that great that we are saving labconfig under the hostname as this changes with the network a machine is in. If routers change or dynamically assign hostnames this can cause unwanted behavior. I have very many labconfig files on my laptop because of this: one for my home network, one for the lab network and a dozen for the university network as this changes the hostname on each connect. For a lab machine the hostname doesn't change (much) but if you do analysis/development on a mobile machine this can cause problems.", "markup": "markdown", "html": "<p>I like this system very much, but I would make the User saved configurations folder user configurable in the labconfig. (the default could still be <code>/userlib/app_saved_configs/&lt;app_name&gt;</code>)</p>\n<p>Also something a bit off topic: \nIt's not really that great that we are saving labconfig under the hostname as this changes with the network a machine is in. If routers change or dynamically assign hostnames this can cause unwanted behavior. I have very many labconfig files on my laptop because of this: one for my home network, one for the lab network and a dozen for the university network as this changes the hostname on each connect. For a lab machine the hostname doesn't change (much) but if you do analysis/development on a mobile machine this can cause problems.</p>", "type": "rendered"}, "created_on": "2017-08-03T19:09:19.361220+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-03T19:16:48.868281+00:00", "type": "pullrequest_comment", "id": 42137212}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42136215.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42136215"}}, "parent": {"id": 42123499, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42123499.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42123499"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "Ok the check is in the code now. The message window is much less annoying now as it doesn't always appear.", "markup": "markdown", "html": "<p>Ok the check is in the code now. The message window is much less annoying now as it doesn't always appear.</p>", "type": "rendered"}, "created_on": "2017-08-03T19:01:13.311735+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-03T19:01:13.416361+00:00", "type": "pullrequest_comment", "id": 42136215}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"update": {"description": "This pull request adresses issue #24 and adds the ability to save the current routines to a configuration file, revert back to previously saved configurations and load configurations.\r\nTo achieve the restore of the checked state of routines a few modifications to AnalysisRoutine and RoutineBox were needed.\r\nThe rest of the code is mainly copied from runmanager's source code.\r\n\r\nIn the future one could also think about adding the ability to save the dataframe to disk with one of pandas export functions (and restore it at a later point) however this is a bit harder and not part of this pull request.", "title": "Added ability to restore UI state", "destination": {"commit": {"hash": "2e16928a6e62", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/2e16928a6e62.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/2e16928a6e62"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "40eaf0128dba", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/40eaf0128dba"}, "html": {"href": "#!/PhyNerd/lyse/commits/40eaf0128dba"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "Config"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-03T18:58:34.160980+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"update": {"description": "This pull request adresses issue #24 and adds the ability to save the current routines to a configuration file, revert back to previously saved configurations and load configurations.\r\nTo achieve the restore of the checked state of routines a few modifications to AnalysisRoutine and RoutineBox were needed.\r\nThe rest of the code is mainly copied from runmanager's source code.\r\n\r\nIn the future one could also think about adding the ability to save the dataframe to disk with one of pandas export functions (and restore it at a later point) however this is a bit harder and not part of this pull request.", "title": "Added ability to restore UI state", "destination": {"commit": {"hash": "2e16928a6e62", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/2e16928a6e62.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/2e16928a6e62"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "352e78b08adf", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/352e78b08adf"}, "html": {"href": "#!/PhyNerd/lyse/commits/352e78b08adf"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "Config"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-03T18:48:36.825375+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42123410.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42123410"}}, "parent": {"id": 41980932, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41980932.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41980932"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "OK so there are three types of configuration.\n\n1. There's labconfig - it's designed to be user-editable and can contain configuration for any program.\n\n2. There's the saved configurations of apps, the ones that are savable and loadable by user action - i.e. they can select them from a file open dialog. But they are not designed to be user editable.\n\n3. And there's data that apps save automatically, that they don't give you the option to save and load. These are not designed to be user editable, or user selectable from a file open dialog. In fact it would be bad to have them in the same place as the user-savable configs because they could be accidentally selected in place of one. They should be sort of hidden in the filesystem, except that you still want them \nto be deleted upon uninstalling the labscript suite, so they should still go in the labscript suite folder. @pstarkey does BLACS have save data like this presently?\n\nSo I tentatively propose the following:\n\n1. labconfig stays in `/labconfig`. User-editable settings for programs like what port to have programs use remains here, so there is still per-app configuration in each app's section of the config file. Basically app settings that are global and not supposed to be editable while the program is running (not proposing any change, just describing how it is and agreeing it should stay that way).\n\n2. User saved configurations go in `/userlib/app_saved_configs/<app_name>`, with the code creating it if it doesn't exist. This should be the default folder whenever a user goes to save anything from an app, and nothing should be put here that is not user-initiated (though I'm sympathetic to saving certain data without asking for confirmation after the user has initially saved a configuration). This is for settings that can be modified whilst a program is open and that you might concievably want to have multiple different configurations of that you can switch between. Anything that is considered fixed should go in labconfig instead.\n\n3. Other data apps might want to save that isn't part of the user-saved configurations goes in `/userlib/.appdata/<app_name>`. Only automated stuff goes here, nothing user-initiated. Nothing ' important' should be put here - if this directory were deleted, nothing in the labscript suite should break, it should be simply convenience type things like window geometry and last-opened-folder etc (unless those things are plausibly tied to a user configuration). Because it's so inconsequential it could be made a hidden directory.\n\nFor the purposes of this pull request, 2. is relevant. I don't think there is much of a use-case for 3. at the moment but I thought it was worth mentioning, as I envision more things wanting to save something or other to disk in the future and there should be a logical place to put it so we avoid just littering random places with settings (like we've done so far with BLACS and runmanager save data). Even window geometry I think doesn't belong in 3. as for most of our programs so far it makes sense to lump in with the 'User saved configurations' so long as you don't get nagged about it.", "markup": "markdown", "html": "<p>OK so there are three types of configuration.</p>\n<ol>\n<li>\n<p>There's labconfig - it's designed to be user-editable and can contain configuration for any program.</p>\n</li>\n<li>\n<p>There's the saved configurations of apps, the ones that are savable and loadable by user action - i.e. they can select them from a file open dialog. But they are not designed to be user editable.</p>\n</li>\n<li>\n<p>And there's data that apps save automatically, that they don't give you the option to save and load. These are not designed to be user editable, or user selectable from a file open dialog. In fact it would be bad to have them in the same place as the user-savable configs because they could be accidentally selected in place of one. They should be sort of hidden in the filesystem, except that you still want them \nto be deleted upon uninstalling the labscript suite, so they should still go in the labscript suite folder. @pstarkey does BLACS have save data like this presently?</p>\n</li>\n</ol>\n<p>So I tentatively propose the following:</p>\n<ol>\n<li>\n<p>labconfig stays in <code>/labconfig</code>. User-editable settings for programs like what port to have programs use remains here, so there is still per-app configuration in each app's section of the config file. Basically app settings that are global and not supposed to be editable while the program is running (not proposing any change, just describing how it is and agreeing it should stay that way).</p>\n</li>\n<li>\n<p>User saved configurations go in <code>/userlib/app_saved_configs/&lt;app_name&gt;</code>, with the code creating it if it doesn't exist. This should be the default folder whenever a user goes to save anything from an app, and nothing should be put here that is not user-initiated (though I'm sympathetic to saving certain data without asking for confirmation after the user has initially saved a configuration). This is for settings that can be modified whilst a program is open and that you might concievably want to have multiple different configurations of that you can switch between. Anything that is considered fixed should go in labconfig instead.</p>\n</li>\n<li>\n<p>Other data apps might want to save that isn't part of the user-saved configurations goes in <code>/userlib/.appdata/&lt;app_name&gt;</code>. Only automated stuff goes here, nothing user-initiated. Nothing ' important' should be put here - if this directory were deleted, nothing in the labscript suite should break, it should be simply convenience type things like window geometry and last-opened-folder etc (unless those things are plausibly tied to a user configuration). Because it's so inconsequential it could be made a hidden directory.</p>\n</li>\n</ol>\n<p>For the purposes of this pull request, 2. is relevant. I don't think there is much of a use-case for 3. at the moment but I thought it was worth mentioning, as I envision more things wanting to save something or other to disk in the future and there should be a logical place to put it so we avoid just littering random places with settings (like we've done so far with BLACS and runmanager save data). Even window geometry I think doesn't belong in 3. as for most of our programs so far it makes sense to lump in with the 'User saved configurations' so long as you don't get nagged about it.</p>", "type": "rendered"}, "created_on": "2017-08-03T16:13:42.588550+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-03T16:15:57.084188+00:00", "type": "pullrequest_comment", "id": 42123410}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42123499.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42123499"}}, "parent": {"id": 41982221, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41982221.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41982221"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "So, I vote for this. It's plausible that the data is tied to a specific configuration, but it's also useful for the saving and loading to be automatic so you don't get nagged or think you've changed something important.", "markup": "markdown", "html": "<p>So, I vote for this. It's plausible that the data is tied to a specific configuration, but it's also useful for the saving and loading to be automatic so you don't get nagged or think you've changed something important.</p>", "type": "rendered"}, "created_on": "2017-08-03T16:14:49.620201+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-03T16:14:49.623824+00:00", "type": "pullrequest_comment", "id": 42123499}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41982221.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41982221"}}, "parent": {"id": 41961376, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41961376.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41961376"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "So I would stick to the one config file solution and add the ''''if only_window_geometry_is_different''' to the code. Spreading the config data allover doesn't seem clean to me. Also having all geometry data in one place (main window and plots) makes a lot more sense to me, as they would keep the arrangement in respect to each other.(The plot windows aren't being saved currently anyway)", "markup": "markdown", "html": "<p>So I would stick to the one config file solution and add the ''''if only_window_geometry_is_different''' to the code. Spreading the config data allover doesn't seem clean to me. Also having all geometry data in one place (main window and plots) makes a lot more sense to me, as they would keep the arrangement in respect to each other.(The plot windows aren't being saved currently anyway)</p>", "type": "rendered"}, "created_on": "2017-08-02T08:44:48.043701+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-02T08:44:48.119988+00:00", "type": "pullrequest_comment", "id": 41982221}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41980932.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41980932"}}, "parent": {"id": 41961195, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41961195.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41961195"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "Mh so I'd agree that saving config to a local path rather than a shared one makes sense, but I have no opinion on where to save it. So I'll just watch this  discussion play out and change it when there is consensus. ", "markup": "markdown", "html": "<p>Mh so I'd agree that saving config to a local path rather than a shared one makes sense, but I have no opinion on where to save it. So I'll just watch this  discussion play out and change it when there is consensus. </p>", "type": "rendered"}, "created_on": "2017-08-02T08:30:57.288111+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-02T08:30:57.367421+00:00", "type": "pullrequest_comment", "id": 41980932}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41961376.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41961376"}}, "parent": {"id": 41961220, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41961220.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41961220"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "Well, I thought the same initially, but then I realised that by storing it with the other config data, the plot windows would magically respect your config without you realising it - it would still be on a per-config basis rather than just always saved, it just wouldn't bug you about it because it's unlikely you would ever not want to save it. But it's conceivable that you might have different layouts for different combinations of analysis routines.\n\nThe other window data though I couldn't care less if it were on a per-config basis, and it might be sort of jarring if it were.\n\nMaybe the plot window positions should be saved in the config (I would like it if it saved without nagging you though if the plot window positions were the only thing that changed), and the other data saved in a fixed place regardless of the user's config.", "markup": "markdown", "html": "<p>Well, I thought the same initially, but then I realised that by storing it with the other config data, the plot windows would magically respect your config without you realising it - it would still be on a per-config basis rather than just always saved, it just wouldn't bug you about it because it's unlikely you would ever not want to save it. But it's conceivable that you might have different layouts for different combinations of analysis routines.</p>\n<p>The other window data though I couldn't care less if it were on a per-config basis, and it might be sort of jarring if it were.</p>\n<p>Maybe the plot window positions should be saved in the config (I would like it if it saved without nagging you though if the plot window positions were the only thing that changed), and the other data saved in a fixed place regardless of the user's config.</p>", "type": "rendered"}, "created_on": "2017-08-02T01:04:03.176582+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-02T01:04:03.178602+00:00", "type": "pullrequest_comment", "id": 41961376}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41961195.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41961195"}}, "parent": {"id": 41961045, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41961045.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41961045"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "Yeah, that's a great point.\n\nWell, labconfig, or something else then (maybe `userlib` or a subfolder like `userlib/appconfig`)? I kind of would like to keep it away from your labconfig file but I'm also against growing too many new folders.", "markup": "markdown", "html": "<p>Yeah, that's a great point.</p>\n<p>Well, labconfig, or something else then (maybe <code>userlib</code> or a subfolder like <code>userlib/appconfig</code>)? I kind of would like to keep it away from your labconfig file but I'm also against growing too many new folders.</p>", "type": "rendered"}, "created_on": "2017-08-02T00:58:22.224750+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-02T00:59:51.755957+00:00", "type": "pullrequest_comment", "id": 41961195}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41961220.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41961220"}}, "parent": {"id": 41960999, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41960999.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41960999"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "I think we actually want two kinds of configuration then.\n\nThe first relates to geometry, position of the windows, state of buttons (maybe), and is automatically saved/loaded on exit/restart. There doesn't need to be any prompting for this because you don't get a choice, nor do you get to choose where the file is saved (much the same way that BLACS works now).\n\nThe second is the state of the analysis such as analysis scripts, shot files, and plot window geometries. You will be prompted for changes with this, and can choose to save one or more configurations with different file names. This allows you to reload a set of shots, with analysis scripts, for a set of data (e.g. data for a specific paper) and continue on or redo the analysis. We could also provide a list of items that have changed so that people can decide to save or not if it was just a plot window position change.", "markup": "markdown", "html": "<p>I think we actually want two kinds of configuration then.</p>\n<p>The first relates to geometry, position of the windows, state of buttons (maybe), and is automatically saved/loaded on exit/restart. There doesn't need to be any prompting for this because you don't get a choice, nor do you get to choose where the file is saved (much the same way that BLACS works now).</p>\n<p>The second is the state of the analysis such as analysis scripts, shot files, and plot window geometries. You will be prompted for changes with this, and can choose to save one or more configurations with different file names. This allows you to reload a set of shots, with analysis scripts, for a set of data (e.g. data for a specific paper) and continue on or redo the analysis. We could also provide a list of items that have changed so that people can decide to save or not if it was just a plot window position change.</p>", "type": "rendered"}, "created_on": "2017-08-02T00:59:12.997647+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-08-02T00:59:13.000298+00:00", "type": "pullrequest_comment", "id": 41961220}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41961045.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41961045"}}, "parent": {"id": 41960541, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41960541.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41960541"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "@shjohnst and I disagree with this. The main reason for this is that both runmanager and lyse save the location of a **local** script file (experiment logic labscript file or lyse analysis script). These configuration files should thus be PC specific, not globally accessible across multiple PCs.\n\nBLACS does something similar (a set of local folders to watch for changes to determine if the connection table needs recompiling)", "markup": "markdown", "html": "<p>@shjohnst and I disagree with this. The main reason for this is that both runmanager and lyse save the location of a <strong>local</strong> script file (experiment logic labscript file or lyse analysis script). These configuration files should thus be PC specific, not globally accessible across multiple PCs.</p>\n<p>BLACS does something similar (a set of local folders to watch for changes to determine if the connection table needs recompiling)</p>", "type": "rendered"}, "created_on": "2017-08-02T00:53:08.781306+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-08-02T00:53:08.790589+00:00", "type": "pullrequest_comment", "id": 41961045}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41960999.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41960999"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "So I'm not  fan of saving the main window position. This means you get a popup saying \"configuration has changed\" if all  you did was move the window, which is jarring, making people think \"what did I change?\" and worrying they have changed something they didn't mean to.\n\nI also think the pause button state shouldn't be loaded - if you load in a configuration you don't necessarily want it to run straight away until you've looked at it.\n\nI would prefer if the window geometry stuff (including plot window positions) were just automatically saved and loaded without prompting, and without the option for multiple configurations. People don't usually think of those sorts of things as saveable and loadable configuration (hence a \"do you want to save\" popup being confusing), but they do expect them to be preserved across a restart.\n\nOne solution is to keep using the code as in this pull request (and add to it in the future to get the plot window positions etc), but to make it save window geometry without prompting if window geometry was the only thing to change. Something like:\n\n\n```\n#!python\n\nif current_data != saved_data:\n    if only_window_geometry_is_different(current_data, saved_data):\n        save() # save without prompting\n    elif prompt(\"save config?\"):\n        save()\n    else:\n        pass # don't save anything\n        \n```\n", "markup": "markdown", "html": "<p>So I'm not  fan of saving the main window position. This means you get a popup saying \"configuration has changed\" if all  you did was move the window, which is jarring, making people think \"what did I change?\" and worrying they have changed something they didn't mean to.</p>\n<p>I also think the pause button state shouldn't be loaded - if you load in a configuration you don't necessarily want it to run straight away until you've looked at it.</p>\n<p>I would prefer if the window geometry stuff (including plot window positions) were just automatically saved and loaded without prompting, and without the option for multiple configurations. People don't usually think of those sorts of things as saveable and loadable configuration (hence a \"do you want to save\" popup being confusing), but they do expect them to be preserved across a restart.</p>\n<p>One solution is to keep using the code as in this pull request (and add to it in the future to get the plot window positions etc), but to make it save window geometry without prompting if window geometry was the only thing to change. Something like:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">if</span> <span class=\"n\">current_data</span> <span class=\"o\">!=</span> <span class=\"n\">saved_data</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">only_window_geometry_is_different</span><span class=\"p\">(</span><span class=\"n\">current_data</span><span class=\"p\">,</span> <span class=\"n\">saved_data</span><span class=\"p\">):</span>\n        <span class=\"n\">save</span><span class=\"p\">()</span> <span class=\"c1\"># save without prompting</span>\n    <span class=\"k\">elif</span> <span class=\"n\">prompt</span><span class=\"p\">(</span><span class=\"s2\">&quot;save config?&quot;</span><span class=\"p\">):</span>\n        <span class=\"n\">save</span><span class=\"p\">()</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span> <span class=\"c1\"># don&#39;t save anything</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-08-02T00:51:36.242937+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-02T00:51:36.245294+00:00", "type": "pullrequest_comment", "id": 41960999}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41960541.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41960541"}}, "parent": {"id": 41960389, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41960389.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41960389"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "With runmanager I chose to put it with shot storage along with the lab connection table - the idea being that they're both part of the configuration for running the experiment. So this is just copying that I think. It's BLACS keeping its settings in labconfig that I would prefer to change, personally. ", "markup": "markdown", "html": "<p>With runmanager I chose to put it with shot storage along with the lab connection table - the idea being that they're both part of the configuration for running the experiment. So this is just copying that I think. It's BLACS keeping its settings in labconfig that I would prefer to change, personally. </p>", "type": "rendered"}, "created_on": "2017-08-02T00:33:54.182309+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-02T00:33:54.184861+00:00", "type": "pullrequest_comment", "id": 41960541}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41960389.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41960389"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "When you click save configuration for the first time, should the save file box default to the labconfig folder rather than the shot storage directory?", "markup": "markdown", "html": "<p>When you click save configuration for the first time, should the save file box default to the labconfig folder rather than the shot storage directory?</p>", "type": "rendered"}, "created_on": "2017-08-02T00:28:45.149663+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2017-08-02T00:28:45.152108+00:00", "type": "pullrequest_comment", "id": 41960389}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"update": {"description": "This pull request adresses issue #24 and adds the ability to save the current routines to a configuration file, revert back to previously saved configurations and load configurations.\r\nTo achieve the restore of the checked state of routines a few modifications to AnalysisRoutine and RoutineBox were needed.\r\nThe rest of the code is mainly copied from runmanager's source code.\r\n\r\nIn the future one could also think about adding the ability to save the dataframe to disk with one of pandas export functions (and restore it at a later point) however this is a bit harder and not part of this pull request.", "title": "Added ability to restore UI state", "destination": {"commit": {"hash": "2e16928a6e62", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/2e16928a6e62.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/2e16928a6e62"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "30c3eda6843b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/30c3eda6843b"}, "html": {"href": "#!/PhyNerd/lyse/commits/30c3eda6843b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "Config"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-01T21:38:22.234055+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"update": {"description": "This pull request adresses issue #24 and adds the ability to save the current routines to a configuration file, revert back to previously saved configurations and load configurations.\r\nTo achieve the restore of the checked state of routines a few modifications to AnalysisRoutine and RoutineBox were needed.\r\nThe rest of the code is mainly copied from runmanager's source code.\r\n\r\nIn the future one could also think about adding the ability to save the dataframe to disk with one of pandas export functions (and restore it at a later point) however this is a bit harder and not part of this pull request.", "title": "Added ability to restore UI state", "destination": {"commit": {"hash": "b2c123e4263f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/b2c123e4263f.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/b2c123e4263f"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "cbc8873600f4", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/cbc8873600f4"}, "html": {"href": "#!/PhyNerd/lyse/commits/cbc8873600f4"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "Config"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-26T12:40:52.239626+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41503469.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41503469"}}, "parent": {"id": 41499890, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41499890.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41499890"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "I'll look into adding those settings later today shouldn't bee to hard (I hope). But I feel like they can be a separate pull request.\n\nAs for the 50% thing: no the speed increase on my machine (wich is fast) is more of a factor 30 speed increase.\nIf I load 2000 shots this usually takes upwards of 2.5 minutes after a few changes (see #29). Loading the dataframe  takes 4 seconds. If I remove resize to content loading only takes 1-2 seconds. So I'd say that this feature really does help a lot.\n\nUpdate: ok window size/location, splitters and button state are implemented(commit is on it's way) and work independent of Qt Objects that would be causing problems with settings files porting to Qt5.\nThe Hdf5 discussion I would want to postpone as this is something that needs some more discussion first about speed and so on. Plot windows are harder to do and should also be their own pullrequest. As they are handelt in the analysis subprocesses and would need more work.", "markup": "markdown", "html": "<p>I'll look into adding those settings later today shouldn't bee to hard (I hope). But I feel like they can be a separate pull request.</p>\n<p>As for the 50% thing: no the speed increase on my machine (wich is fast) is more of a factor 30 speed increase.\nIf I load 2000 shots this usually takes upwards of 2.5 minutes after a few changes (see <a href=\"#!/labscript_suite/lyse/issues/29/speed-up-shot-loading\" rel=\"nofollow\" title=\"speed up shot loading\" class=\"ap-connect-link\">#29</a>). Loading the dataframe  takes 4 seconds. If I remove resize to content loading only takes 1-2 seconds. So I'd say that this feature really does help a lot.</p>\n<p>Update: ok window size/location, splitters and button state are implemented(commit is on it's way) and work independent of Qt Objects that would be causing problems with settings files porting to Qt5.\nThe Hdf5 discussion I would want to postpone as this is something that needs some more discussion first about speed and so on. Plot windows are harder to do and should also be their own pullrequest. As they are handelt in the analysis subprocesses and would need more work.</p>", "type": "rendered"}, "created_on": "2017-07-26T06:36:43.201510+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-26T12:36:42.145741+00:00", "type": "pullrequest_comment", "id": 41503469}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41499890.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41499890"}}, "parent": {"id": 41454471, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41454471.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41454471"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "We can do it as a separate pull request if you like...I just thought I'd mention it since the pull request is titled \"ability to restore UI state\". There are actually a lot of UI state related things we are not saving in this pull request, including:\n\n* Window location/size\n* Splitter bar sizes\n* Button state of analysis paused\n* shown/hidden columns in the tableview of HDF5 files\n* list of HDF5 files loaded\n* positions and sizes of plot windows\n\nI also don't really like the idea of restoring from a dataframe. It only saves you 50% of the load time at most (you still have to populate the Qt model) and is not as clean (any bugs in the dataframe would end up being transferred)", "markup": "markdown", "html": "<p>We can do it as a separate pull request if you like...I just thought I'd mention it since the pull request is titled \"ability to restore UI state\". There are actually a lot of UI state related things we are not saving in this pull request, including:</p>\n<ul>\n<li>Window location/size</li>\n<li>Splitter bar sizes</li>\n<li>Button state of analysis paused</li>\n<li>shown/hidden columns in the tableview of HDF5 files</li>\n<li>list of HDF5 files loaded</li>\n<li>positions and sizes of plot windows</li>\n</ul>\n<p>I also don't really like the idea of restoring from a dataframe. It only saves you 50% of the load time at most (you still have to populate the Qt model) and is not as clean (any bugs in the dataframe would end up being transferred)</p>", "type": "rendered"}, "created_on": "2017-07-26T05:15:14.997481+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-07-26T05:15:15.000140+00:00", "type": "pullrequest_comment", "id": 41499890}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41472581.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41472581"}}, "parent": {"id": 41472307, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41472307.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41472307"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "Aha. sounds like a bug in bitbucket. Maybe it will work better in the future, but good to know the workaround for now!", "markup": "markdown", "html": "<p>Aha. sounds like a bug in bitbucket. Maybe it will work better in the future, but good to know the workaround for now!</p>", "type": "rendered"}, "created_on": "2017-07-25T18:15:42.909338+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-25T18:15:42.911655+00:00", "type": "pullrequest_comment", "id": 41472581}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}}], "next": "data/repositories/labscript_suite/lyse/pullrequests/18/activity_ctx=9LsgxSyIn.json"}