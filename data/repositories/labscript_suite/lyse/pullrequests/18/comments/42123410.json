{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42123410.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42123410"}}, "parent": {"id": 41980932, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/41980932.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-41980932"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "OK so there are three types of configuration.\n\n1. There's labconfig - it's designed to be user-editable and can contain configuration for any program.\n\n2. There's the saved configurations of apps, the ones that are savable and loadable by user action - i.e. they can select them from a file open dialog. But they are not designed to be user editable.\n\n3. And there's data that apps save automatically, that they don't give you the option to save and load. These are not designed to be user editable, or user selectable from a file open dialog. In fact it would be bad to have them in the same place as the user-savable configs because they could be accidentally selected in place of one. They should be sort of hidden in the filesystem, except that you still want them \nto be deleted upon uninstalling the labscript suite, so they should still go in the labscript suite folder. @pstarkey does BLACS have save data like this presently?\n\nSo I tentatively propose the following:\n\n1. labconfig stays in `/labconfig`. User-editable settings for programs like what port to have programs use remains here, so there is still per-app configuration in each app's section of the config file. Basically app settings that are global and not supposed to be editable while the program is running (not proposing any change, just describing how it is and agreeing it should stay that way).\n\n2. User saved configurations go in `/userlib/app_saved_configs/<app_name>`, with the code creating it if it doesn't exist. This should be the default folder whenever a user goes to save anything from an app, and nothing should be put here that is not user-initiated (though I'm sympathetic to saving certain data without asking for confirmation after the user has initially saved a configuration). This is for settings that can be modified whilst a program is open and that you might concievably want to have multiple different configurations of that you can switch between. Anything that is considered fixed should go in labconfig instead.\n\n3. Other data apps might want to save that isn't part of the user-saved configurations goes in `/userlib/.appdata/<app_name>`. Only automated stuff goes here, nothing user-initiated. Nothing ' important' should be put here - if this directory were deleted, nothing in the labscript suite should break, it should be simply convenience type things like window geometry and last-opened-folder etc (unless those things are plausibly tied to a user configuration). Because it's so inconsequential it could be made a hidden directory.\n\nFor the purposes of this pull request, 2. is relevant. I don't think there is much of a use-case for 3. at the moment but I thought it was worth mentioning, as I envision more things wanting to save something or other to disk in the future and there should be a logical place to put it so we avoid just littering random places with settings (like we've done so far with BLACS and runmanager save data). Even window geometry I think doesn't belong in 3. as for most of our programs so far it makes sense to lump in with the 'User saved configurations' so long as you don't get nagged about it.", "markup": "markdown", "html": "<p>OK so there are three types of configuration.</p>\n<ol>\n<li>\n<p>There's labconfig - it's designed to be user-editable and can contain configuration for any program.</p>\n</li>\n<li>\n<p>There's the saved configurations of apps, the ones that are savable and loadable by user action - i.e. they can select them from a file open dialog. But they are not designed to be user editable.</p>\n</li>\n<li>\n<p>And there's data that apps save automatically, that they don't give you the option to save and load. These are not designed to be user editable, or user selectable from a file open dialog. In fact it would be bad to have them in the same place as the user-savable configs because they could be accidentally selected in place of one. They should be sort of hidden in the filesystem, except that you still want them \nto be deleted upon uninstalling the labscript suite, so they should still go in the labscript suite folder. @pstarkey does BLACS have save data like this presently?</p>\n</li>\n</ol>\n<p>So I tentatively propose the following:</p>\n<ol>\n<li>\n<p>labconfig stays in <code>/labconfig</code>. User-editable settings for programs like what port to have programs use remains here, so there is still per-app configuration in each app's section of the config file. Basically app settings that are global and not supposed to be editable while the program is running (not proposing any change, just describing how it is and agreeing it should stay that way).</p>\n</li>\n<li>\n<p>User saved configurations go in <code>/userlib/app_saved_configs/&lt;app_name&gt;</code>, with the code creating it if it doesn't exist. This should be the default folder whenever a user goes to save anything from an app, and nothing should be put here that is not user-initiated (though I'm sympathetic to saving certain data without asking for confirmation after the user has initially saved a configuration). This is for settings that can be modified whilst a program is open and that you might concievably want to have multiple different configurations of that you can switch between. Anything that is considered fixed should go in labconfig instead.</p>\n</li>\n<li>\n<p>Other data apps might want to save that isn't part of the user-saved configurations goes in <code>/userlib/.appdata/&lt;app_name&gt;</code>. Only automated stuff goes here, nothing user-initiated. Nothing ' important' should be put here - if this directory were deleted, nothing in the labscript suite should break, it should be simply convenience type things like window geometry and last-opened-folder etc (unless those things are plausibly tied to a user configuration). Because it's so inconsequential it could be made a hidden directory.</p>\n</li>\n</ol>\n<p>For the purposes of this pull request, 2. is relevant. I don't think there is much of a use-case for 3. at the moment but I thought it was worth mentioning, as I envision more things wanting to save something or other to disk in the future and there should be a logical place to put it so we avoid just littering random places with settings (like we've done so far with BLACS and runmanager save data). Even window geometry I think doesn't belong in 3. as for most of our programs so far it makes sense to lump in with the 'User saved configurations' so long as you don't get nagged about it.</p>", "type": "rendered"}, "created_on": "2017-08-03T16:13:42.588550+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-03T16:15:57.084188+00:00", "type": "pullrequest_comment", "id": 42123410}