{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42604516.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42604516"}}, "parent": {"id": 42601815, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments/42601815.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18/_/diff#comment-42601815"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}}, "title": "Added ability to restore UI state"}, "content": {"raw": "Let's get that file path issue sorted, regarding the folder which we should save configurations to. I'm almost happy with what you suggested: that it be labconfig configurable with a default of `%(labscript_suite)s/userlib/app_saved_configs`, but I would append the experiment name to it, the same as all the other paths have the experiment name in them. This way if you change the experiment name in you labconfig, all the paths get switched over. \n\nThis will require changes to the installer to change the default labconfig and create the folder.\nI'll add to the `[DEFAULT]` section: `app_saved_configs = %(labscript_suite)s\\userlib\\app_saved_configs\\%(experiment_name)s` and modify the `[runmanager]` and `[lyse]` sections to use it in their `autoload_config_file` settings. I'll make the installer create the `app_saved_configs` folder in userlib.\n\nWhat you should do is make lyse read the config value ('default', 'app_saved_configs') when it needs to open a file dialog box for saving or loading a config, and since that config option won't exist in existing installs, lyse should construct the default path `%(labscript_suite)s\\userlib\\app_saved_configs\\%(experiment_name)s` itself out of the other variables and use that if it gets a `NoOptionError`. Lyse should then create that folder if it doesn't exist, and create the `lyse` subdirectory in it as well. Finally it can show the file dialog box. It should do the folder creation even if it did not get NoOptionError. You'll want something like `if not os.path.exists(folder): os.makedirs(folder)` to ensure the intermediate directories are created.\n\nUnfortunately existing installs will have labconfigs with autoload_config_file set to something in `experiment_shot_storage`, and we should not change that without the user's action, so that will seem inconsistent on existing installs unless changed by the user. But I don't see that as worth it to fix.\n\nBut I think there is nothing else remaining to be done with this pull request other than anything revealed during testing!\n\nOther than that I think just testing. Phil has indicated some pull requests can be deployed to their lab soon for testing, particularly the qtutils 2.0 stuff. This pull request will have merge conflicts (minor, but still), so it should perhaps wait until after the qtutils 2.0 merge. It's quite taxing testing things when I have to switch between qtutils 2 and qtutils 1 and switch branches on basically every repository in between tests, so I'm eager to get the qtutils 2.0 stuff in first!\n\nThanks for all your efforts with these pull requests, and for your patience with us dealing with them - we should get the all eventually.", "markup": "markdown", "html": "<p>Let's get that file path issue sorted, regarding the folder which we should save configurations to. I'm almost happy with what you suggested: that it be labconfig configurable with a default of <code>%(labscript_suite)s/userlib/app_saved_configs</code>, but I would append the experiment name to it, the same as all the other paths have the experiment name in them. This way if you change the experiment name in you labconfig, all the paths get switched over. </p>\n<p>This will require changes to the installer to change the default labconfig and create the folder.\nI'll add to the <code>[DEFAULT]</code> section: <code>app_saved_configs = %(labscript_suite)s\\userlib\\app_saved_configs\\%(experiment_name)s</code> and modify the <code>[runmanager]</code> and <code>[lyse]</code> sections to use it in their <code>autoload_config_file</code> settings. I'll make the installer create the <code>app_saved_configs</code> folder in userlib.</p>\n<p>What you should do is make lyse read the config value ('default', 'app_saved_configs') when it needs to open a file dialog box for saving or loading a config, and since that config option won't exist in existing installs, lyse should construct the default path <code>%(labscript_suite)s\\userlib\\app_saved_configs\\%(experiment_name)s</code> itself out of the other variables and use that if it gets a <code>NoOptionError</code>. Lyse should then create that folder if it doesn't exist, and create the <code>lyse</code> subdirectory in it as well. Finally it can show the file dialog box. It should do the folder creation even if it did not get NoOptionError. You'll want something like <code>if not os.path.exists(folder): os.makedirs(folder)</code> to ensure the intermediate directories are created.</p>\n<p>Unfortunately existing installs will have labconfigs with autoload_config_file set to something in <code>experiment_shot_storage</code>, and we should not change that without the user's action, so that will seem inconsistent on existing installs unless changed by the user. But I don't see that as worth it to fix.</p>\n<p>But I think there is nothing else remaining to be done with this pull request other than anything revealed during testing!</p>\n<p>Other than that I think just testing. Phil has indicated some pull requests can be deployed to their lab soon for testing, particularly the qtutils 2.0 stuff. This pull request will have merge conflicts (minor, but still), so it should perhaps wait until after the qtutils 2.0 merge. It's quite taxing testing things when I have to switch between qtutils 2 and qtutils 1 and switch branches on basically every repository in between tests, so I'm eager to get the qtutils 2.0 stuff in first!</p>\n<p>Thanks for all your efforts with these pull requests, and for your patience with us dealing with them - we should get the all eventually.</p>", "type": "rendered"}, "created_on": "2017-08-10T18:40:45.329902+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-10T18:45:18.939989+00:00", "type": "pullrequest_comment", "id": 42604516}