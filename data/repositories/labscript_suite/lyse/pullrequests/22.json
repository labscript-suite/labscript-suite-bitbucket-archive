{"rendered": {"description": {"raw": "* Unicode dataframe column labels\r\n\r\n* all `__future__` imports enabled in all files\r\n\r\n* execfile() replaced with compile & exec, as forward compatible with Python 3\r\n(as well as allowing for non-ascii filenames, addressing issue #28).\r\n\r\n* Require zprocess 2.2.2 which fixes a bug that prevented sending non-ascii\r\ncharacters to the output box.\r\n\r\n* `str` aliased to `unicode` in Python 2.\r\n\r\n* set current working directory to that of the script prior to executing it\r\n\r\n* These changes are not tested in Python 3, but getting all strings unicode in\r\nPython 2 as well as all other `__future__` imports enabled is a good first step\r\nfor Python 3 compatibility. Further Python 3 compatibility should wait until PyQt5 porting (if any is required) is done.\r\n\r\n* In Python 2, unicode strings and bytestrings pass equality checks, meaning that\r\nindexing dataframes with bytestrings will still get the right columns even\r\nthough the column labels are now unicode strings:\r\n\r\n```\r\n>>> df[u'test_\u00fcmlaut', 'x']\r\nsequence                   run time\r\n2017-06-21 13:17:38-04:00  2017-07-25 16:15:53-04:00    70.0\r\n                           2017-07-25 16:15:54-04:00    70.0\r\n                           2017-07-25 16:15:54-04:00    70.0\r\n                           2017-07-25 16:15:54-04:00    70.0\r\n                           2017-07-25 16:15:54-04:00    70.0\r\nName: (test_\u00fcmlaut, x), dtype: float64\r\n```\r\n\r\nThis pull request should be compatible with @PhyNerd's pending \"update dataframe\" pull request (although his pull request converts dictionary keys to strings, this one aliases `str` to `unicode`, and so once applied will mean the other pull request will result in unicode dataframe keys as well)", "markup": "markdown", "html": "<ul>\n<li>\n<p>Unicode dataframe column labels</p>\n</li>\n<li>\n<p>all <code>__future__</code> imports enabled in all files</p>\n</li>\n<li>\n<p>execfile() replaced with compile &amp; exec, as forward compatible with Python 3\n(as well as allowing for non-ascii filenames, addressing issue <a href=\"#!/labscript_suite/lyse/issues/28/lyse-doesnt-handle-unicode-well\" rel=\"nofollow\" title=\"Lyse doesn&#39;t handle unicode well\" class=\"ap-connect-link\"><s>#28</s></a>).</p>\n</li>\n<li>\n<p>Require zprocess 2.2.2 which fixes a bug that prevented sending non-ascii\ncharacters to the output box.</p>\n</li>\n<li>\n<p><code>str</code> aliased to <code>unicode</code> in Python 2.</p>\n</li>\n<li>\n<p>set current working directory to that of the script prior to executing it</p>\n</li>\n<li>\n<p>These changes are not tested in Python 3, but getting all strings unicode in\nPython 2 as well as all other <code>__future__</code> imports enabled is a good first step\nfor Python 3 compatibility. Further Python 3 compatibility should wait until PyQt5 porting (if any is required) is done.</p>\n</li>\n<li>\n<p>In Python 2, unicode strings and bytestrings pass equality checks, meaning that\nindexing dataframes with bytestrings will still get the right columns even\nthough the column labels are now unicode strings:</p>\n</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>&gt;&gt;&gt; df[u&#39;test_\u00fcmlaut&#39;, &#39;x&#39;]\nsequence                   run time\n2017-06-21 13:17:38-04:00  2017-07-25 16:15:53-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\nName: (test_\u00fcmlaut, x), dtype: float64\n</pre></div>\n\n\n<p>This pull request should be compatible with @PhyNerd's pending \"update dataframe\" pull request (although his pull request converts dictionary keys to strings, this one aliases <code>str</code> to <code>unicode</code>, and so once applied will mean the other pull request will result in unicode dataframe keys as well)</p>", "type": "rendered"}, "title": {"raw": "Unicode strings and other Python 3 forward-compatible changes.", "markup": "markdown", "html": "<p>Unicode strings and other Python 3 forward-compatible changes.</p>", "type": "rendered"}}, "type": "pullrequest", "description": "* Unicode dataframe column labels\r\n\r\n* all `__future__` imports enabled in all files\r\n\r\n* execfile() replaced with compile & exec, as forward compatible with Python 3\r\n(as well as allowing for non-ascii filenames, addressing issue #28).\r\n\r\n* Require zprocess 2.2.2 which fixes a bug that prevented sending non-ascii\r\ncharacters to the output box.\r\n\r\n* `str` aliased to `unicode` in Python 2.\r\n\r\n* set current working directory to that of the script prior to executing it\r\n\r\n* These changes are not tested in Python 3, but getting all strings unicode in\r\nPython 2 as well as all other `__future__` imports enabled is a good first step\r\nfor Python 3 compatibility. Further Python 3 compatibility should wait until PyQt5 porting (if any is required) is done.\r\n\r\n* In Python 2, unicode strings and bytestrings pass equality checks, meaning that\r\nindexing dataframes with bytestrings will still get the right columns even\r\nthough the column labels are now unicode strings:\r\n\r\n```\r\n>>> df[u'test_\u00fcmlaut', 'x']\r\nsequence                   run time\r\n2017-06-21 13:17:38-04:00  2017-07-25 16:15:53-04:00    70.0\r\n                           2017-07-25 16:15:54-04:00    70.0\r\n                           2017-07-25 16:15:54-04:00    70.0\r\n                           2017-07-25 16:15:54-04:00    70.0\r\n                           2017-07-25 16:15:54-04:00    70.0\r\nName: (test_\u00fcmlaut, x), dtype: float64\r\n```\r\n\r\nThis pull request should be compatible with @PhyNerd's pending \"update dataframe\" pull request (although his pull request converts dictionary keys to strings, this one aliases `str` to `unicode`, and so once applied will mean the other pull request will result in unicode dataframe keys as well)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/22/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:b90281ed6296%0Da0014cba8d91?from_pullrequest_id=22"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/22/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/22.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/22/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/22/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/22"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/22/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:b90281ed6296%0Da0014cba8d91?from_pullrequest_id=22"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/22/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/22/statuses_page=1.json"}}, "title": "Unicode strings and other Python 3 forward-compatible changes.", "close_source_branch": true, "reviewers": [{"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}], "id": 22, "destination": {"commit": {"hash": "a0014cba8d91", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/a0014cba8d91.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/a0014cba8d91"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-07-25T20:23:49.494667+00:00", "summary": {"raw": "* Unicode dataframe column labels\r\n\r\n* all `__future__` imports enabled in all files\r\n\r\n* execfile() replaced with compile & exec, as forward compatible with Python 3\r\n(as well as allowing for non-ascii filenames, addressing issue #28).\r\n\r\n* Require zprocess 2.2.2 which fixes a bug that prevented sending non-ascii\r\ncharacters to the output box.\r\n\r\n* `str` aliased to `unicode` in Python 2.\r\n\r\n* set current working directory to that of the script prior to executing it\r\n\r\n* These changes are not tested in Python 3, but getting all strings unicode in\r\nPython 2 as well as all other `__future__` imports enabled is a good first step\r\nfor Python 3 compatibility. Further Python 3 compatibility should wait until PyQt5 porting (if any is required) is done.\r\n\r\n* In Python 2, unicode strings and bytestrings pass equality checks, meaning that\r\nindexing dataframes with bytestrings will still get the right columns even\r\nthough the column labels are now unicode strings:\r\n\r\n```\r\n>>> df[u'test_\u00fcmlaut', 'x']\r\nsequence                   run time\r\n2017-06-21 13:17:38-04:00  2017-07-25 16:15:53-04:00    70.0\r\n                           2017-07-25 16:15:54-04:00    70.0\r\n                           2017-07-25 16:15:54-04:00    70.0\r\n                           2017-07-25 16:15:54-04:00    70.0\r\n                           2017-07-25 16:15:54-04:00    70.0\r\nName: (test_\u00fcmlaut, x), dtype: float64\r\n```\r\n\r\nThis pull request should be compatible with @PhyNerd's pending \"update dataframe\" pull request (although his pull request converts dictionary keys to strings, this one aliases `str` to `unicode`, and so once applied will mean the other pull request will result in unicode dataframe keys as well)", "markup": "markdown", "html": "<ul>\n<li>\n<p>Unicode dataframe column labels</p>\n</li>\n<li>\n<p>all <code>__future__</code> imports enabled in all files</p>\n</li>\n<li>\n<p>execfile() replaced with compile &amp; exec, as forward compatible with Python 3\n(as well as allowing for non-ascii filenames, addressing issue <a href=\"#!/labscript_suite/lyse/issues/28/lyse-doesnt-handle-unicode-well\" rel=\"nofollow\" title=\"Lyse doesn&#39;t handle unicode well\" class=\"ap-connect-link\"><s>#28</s></a>).</p>\n</li>\n<li>\n<p>Require zprocess 2.2.2 which fixes a bug that prevented sending non-ascii\ncharacters to the output box.</p>\n</li>\n<li>\n<p><code>str</code> aliased to <code>unicode</code> in Python 2.</p>\n</li>\n<li>\n<p>set current working directory to that of the script prior to executing it</p>\n</li>\n<li>\n<p>These changes are not tested in Python 3, but getting all strings unicode in\nPython 2 as well as all other <code>__future__</code> imports enabled is a good first step\nfor Python 3 compatibility. Further Python 3 compatibility should wait until PyQt5 porting (if any is required) is done.</p>\n</li>\n<li>\n<p>In Python 2, unicode strings and bytestrings pass equality checks, meaning that\nindexing dataframes with bytestrings will still get the right columns even\nthough the column labels are now unicode strings:</p>\n</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>&gt;&gt;&gt; df[u&#39;test_\u00fcmlaut&#39;, &#39;x&#39;]\nsequence                   run time\n2017-06-21 13:17:38-04:00  2017-07-25 16:15:53-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\nName: (test_\u00fcmlaut, x), dtype: float64\n</pre></div>\n\n\n<p>This pull request should be compatible with @PhyNerd's pending \"update dataframe\" pull request (although his pull request converts dictionary keys to strings, this one aliases <code>str</code> to <code>unicode</code>, and so once applied will mean the other pull request will result in unicode dataframe keys as well)</p>", "type": "rendered"}, "source": {"commit": {"hash": "e3f4935010c3", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/e3f4935010c3"}, "html": {"href": "#!/cbillington/lyse/commits/e3f4935010c3"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "feature"}}, "comment_count": 39, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}}, {"role": "PARTICIPANT", "participated_on": "2017-08-16T18:48:18.644694+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": "2017-07-26T19:23:28.639456+00:00", "type": "participant", "approved": true, "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}}], "reason": "", "updated_on": "2018-02-26T00:18:01.330411+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "b90281ed6296", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/b90281ed6296.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/b90281ed6296"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}