{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/22/comments/41484660.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/22/_/diff#comment-41484660"}}, "parent": {"id": 41484333, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/22/comments/41484333.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/22/_/diff#comment-41484333"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 22, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/22.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/22"}}, "title": "Unicode strings and other Python 3 forward-compatible changes."}, "content": {"raw": "How about with this change?\n\n\n```\n#!diff\n\ndiff -r 4c319d424f7f analysis_subprocess.py\n--- a/analysis_subprocess.py\tTue Jul 25 16:26:32 2017 -0400\n+++ b/analysis_subprocess.py\tTue Jul 25 17:25:16 2017 -0400\n@@ -286,22 +286,22 @@\n         # Use lyse.path instead:\n         lyse.path = path\n \n         # Do not let the modulewatcher unload any modules whilst we're working:\n         try:\n             with self.modulewatcher.lock:\n                 # Actually run the user's analysis!\n                 with open(self.filepath) as f:\n-                    code = compile(f.read(), os.path.basename(self.filepath), 'exec')\n+                    code = compile(f.read(), self.filepath.encode('utf8'), 'exec')\n                     exec(code, sandbox, sandbox)\n         except:\n             traceback_lines = traceback.format_exception(*sys.exc_info())\n             del traceback_lines[1]\n-            message = ''.join(traceback_lines)\n+            message = ''.join(line.decode('utf8') for line in traceback_lines)\n             sys.stderr.write(message)\n             return False\n         else:\n             return True\n         finally:\n             print('')\n             self.post_analysis_plot_actions()\n```\n", "markup": "markdown", "html": "<p>How about with this change?</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gh\">diff -r 4c319d424f7f analysis_subprocess.py</span>\n<span class=\"gd\">--- a/analysis_subprocess.py    Tue Jul 25 16:26:32 2017 -0400</span>\n<span class=\"gi\">+++ b/analysis_subprocess.py    Tue Jul 25 17:25:16 2017 -0400</span>\n<span class=\"gu\">@@ -286,22 +286,22 @@</span>\n         # Use lyse.path instead:\n         lyse.path = path\n\n         # Do not let the modulewatcher unload any modules whilst we&#39;re working:\n         try:\n             with self.modulewatcher.lock:\n                 # Actually run the user&#39;s analysis!\n                 with open(self.filepath) as f:\n<span class=\"gd\">-                    code = compile(f.read(), os.path.basename(self.filepath), &#39;exec&#39;)</span>\n<span class=\"gi\">+                    code = compile(f.read(), self.filepath.encode(&#39;utf8&#39;), &#39;exec&#39;)</span>\n                     exec(code, sandbox, sandbox)\n         except:\n             traceback_lines = traceback.format_exception(*sys.exc_info())\n             del traceback_lines[1]\n<span class=\"gd\">-            message = &#39;&#39;.join(traceback_lines)</span>\n<span class=\"gi\">+            message = &#39;&#39;.join(line.decode(&#39;utf8&#39;) for line in traceback_lines)</span>\n             sys.stderr.write(message)\n             return False\n         else:\n             return True\n         finally:\n             print(&#39;&#39;)\n             self.post_analysis_plot_actions()\n</pre></div>", "type": "rendered"}, "created_on": "2017-07-25T21:25:58.053106+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-25T21:25:58.056034+00:00", "type": "pullrequest_comment", "id": 41484660}