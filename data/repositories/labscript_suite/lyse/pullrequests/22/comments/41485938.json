{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/22/comments/41485938.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/22/_/diff#comment-41485938"}}, "parent": {"id": 41485235, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/22/comments/41485235.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/22/_/diff#comment-41485235"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 22, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/22.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/22"}}, "title": "Unicode strings and other Python 3 forward-compatible changes."}, "content": {"raw": "Excellent. The disappointing thing with that is that we've had to give it a full filepath instead of just the basename, meaning the tracebacks have long filepaths in them.\n\nI think the earlier exception was actually caused by the file not being in the current working directory. I had thought that the analysis routines were run in their own directory, but it turns out they weren't.\n\nEven if lyse does set the current working directory to that of the user's script (which it probably should), the user is free to change it before the error is raised, and then the linecache can't find the file.\n\nAn additional problem is that in Python 3 the compile() function only accepts strings, not bytes, so the encoded string will be an invalid argument. \n\nI'll see if there is a \"right\" way to do this - there ought to be, since all we want to do is what the Python interpreter itself is doing!\n\nEdit: If this works for Python 2 then we can keep it as-is, and then probably for Python 3 we can just do conditional encode()/decode() lines after checking Python version.", "markup": "markdown", "html": "<p>Excellent. The disappointing thing with that is that we've had to give it a full filepath instead of just the basename, meaning the tracebacks have long filepaths in them.</p>\n<p>I think the earlier exception was actually caused by the file not being in the current working directory. I had thought that the analysis routines were run in their own directory, but it turns out they weren't.</p>\n<p>Even if lyse does set the current working directory to that of the user's script (which it probably should), the user is free to change it before the error is raised, and then the linecache can't find the file.</p>\n<p>An additional problem is that in Python 3 the compile() function only accepts strings, not bytes, so the encoded string will be an invalid argument. </p>\n<p>I'll see if there is a \"right\" way to do this - there ought to be, since all we want to do is what the Python interpreter itself is doing!</p>\n<p>Edit: If this works for Python 2 then we can keep it as-is, and then probably for Python 3 we can just do conditional encode()/decode() lines after checking Python version.</p>", "type": "rendered"}, "created_on": "2017-07-25T21:52:36.947304+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-25T22:05:36.803078+00:00", "type": "pullrequest_comment", "id": 41485938}