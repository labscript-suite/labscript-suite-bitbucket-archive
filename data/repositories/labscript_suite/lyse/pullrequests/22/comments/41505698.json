{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/22/comments/41505698.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/22/_/diff#comment-41505698"}}, "parent": {"id": 41493138, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/22/comments/41493138.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/22/_/diff#comment-41493138"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 22, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/22.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/22"}}, "title": "Unicode strings and other Python 3 forward-compatible changes."}, "content": {"raw": "Ok my takeaway is: encodings are weird!\n\nPython3 support is not that far away I agree. But how knows what 'soon' actually means.\n\nI think that is something we can live with as it doesn't technically break anything. All the information that you need can still be gathered from the tracelog even with filenames being messed up. As promised I'll do some testing on windows once I'm in the lab (and then add a update to this comment).\n\nUpdate:\nOk as expected the traceback filename is screwed up, but there seems to be more problems under windows and macos with the new changes \n\nWindows:\n\n```\n#!python\n\n[07/26/17 10:56:06] MotIntensity\u00e4.py 20170606T144440-215000_mot_spec_00_rep0000004.h5 \nTraceback (most recent call last):\n  File \"MotIntensity\ufffd.py\", line 10, in <module>\n    run = Run(path)\n  File \"E:\\labscript_suite\\lyse\\__init__.py\", line 109, in __init__\n    self.group = os.path.basename(__file__).split('.py')[0]\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe4 in position 12: ordinal not in range(128)\n```\n\nmacOS:\n\n```\n#!python\n\nTraceback (most recent call last):\n  File \"\u00e4toms.py\", line 13, in <module>\n    run = Run(path)\n  File \"/Users/janwerkmann/labscript_suite/lyse/__init__.py\", line 109, in __init__\n    self.group = os.path.basename(__file__).split('.py')[0]\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xcc in position 1: ordinal not in range(128)\n```\n\nUpdate 2: decoding __file__ resolves the issue for both sequence an run just do this in the __init__:\n\n\n```\n#!python\n\nself.group = os.path.basename(__file__.decode(sys.getfilesystemencoding())).split('.py')[0] if six.PY2 else os.path.basename(__file__).split('.py')[0]\n```", "markup": "markdown", "html": "<p>Ok my takeaway is: encodings are weird!</p>\n<p>Python3 support is not that far away I agree. But how knows what 'soon' actually means.</p>\n<p>I think that is something we can live with as it doesn't technically break anything. All the information that you need can still be gathered from the tracelog even with filenames being messed up. As promised I'll do some testing on windows once I'm in the lab (and then add a update to this comment).</p>\n<p>Update:\nOk as expected the traceback filename is screwed up, but there seems to be more problems under windows and macos with the new changes </p>\n<p>Windows:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"p\">[</span><span class=\"mo\">07</span><span class=\"o\">/</span><span class=\"mi\">26</span><span class=\"o\">/</span><span class=\"mi\">17</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">56</span><span class=\"p\">:</span><span class=\"mo\">06</span><span class=\"p\">]</span> <span class=\"n\">MotIntensity</span><span class=\"err\">\u00e4</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"mi\">20170606</span><span class=\"n\">T144440</span><span class=\"o\">-</span><span class=\"mi\">215000</span><span class=\"n\">_mot_spec_00_rep0000004</span><span class=\"o\">.</span><span class=\"n\">h5</span> \n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;MotIntensity\ufffd.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">run</span> <span class=\"o\">=</span> <span class=\"n\">Run</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;E:\\labscript_suite\\lyse\\__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">109</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__init__</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">group</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;.py&#39;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"ne\">UnicodeDecodeError</span><span class=\"p\">:</span> <span class=\"s1\">&#39;ascii&#39;</span> <span class=\"n\">codec</span> <span class=\"n\">can</span><span class=\"s1\">&#39;t decode byte 0xe4 in position 12: ordinal not in range(128)</span>\n</pre></div>\n\n\n<p>macOS:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;\u00e4toms.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">run</span> <span class=\"o\">=</span> <span class=\"n\">Run</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/labscript_suite/lyse/__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">109</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__init__</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">group</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;.py&#39;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"ne\">UnicodeDecodeError</span><span class=\"p\">:</span> <span class=\"s1\">&#39;ascii&#39;</span> <span class=\"n\">codec</span> <span class=\"n\">can</span><span class=\"s1\">&#39;t decode byte 0xcc in position 1: ordinal not in range(128)</span>\n</pre></div>\n\n\n<p>Update 2: decoding <strong>file</strong> resolves the issue for both sequence an run just do this in the <strong>init</strong>:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">group</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">getfilesystemencoding</span><span class=\"p\">()))</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;.py&#39;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">PY2</span> <span class=\"k\">else</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;.py&#39;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-07-26T07:13:51.059313+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-26T09:18:41.036952+00:00", "type": "pullrequest_comment", "id": 41505698}