{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/27/comments/42527915.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/27/_/diff#comment-42527915"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 27, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/27.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/27"}}, "title": "removed hardcoded port"}, "content": {"raw": "Given that `data` can be called from the command line of a PC other than the one running lyse, I'm not sure if it makes sense to pull the lyse port from the labconfig file. That port is the port that your local instance of lyse will use, not necessarily the one that a remote copy of lyse will use.\n\nProbably we should expose the `port` as a kwarg of `data`, with a default of _lyse_port. I would also suggest wrapping the code that gets the port (lines 50-52) in a try/except and setting the value to 42519 in the exception handler (this will just make sure that people who haven't used the installer, only use the lyse API to access dataframes from another PC and thus haven't configured labconfig properly, won't suddenly get an exception because the lyse port can't be converted to an int! aka: the behaviour of the `data` function is backwards compatible)", "markup": "markdown", "html": "<p>Given that <code>data</code> can be called from the command line of a PC other than the one running lyse, I'm not sure if it makes sense to pull the lyse port from the labconfig file. That port is the port that your local instance of lyse will use, not necessarily the one that a remote copy of lyse will use.</p>\n<p>Probably we should expose the <code>port</code> as a kwarg of <code>data</code>, with a default of _lyse_port. I would also suggest wrapping the code that gets the port (lines 50-52) in a try/except and setting the value to 42519 in the exception handler (this will just make sure that people who haven't used the installer, only use the lyse API to access dataframes from another PC and thus haven't configured labconfig properly, won't suddenly get an exception because the lyse port can't be converted to an int! aka: the behaviour of the <code>data</code> function is backwards compatible)</p>", "type": "rendered"}, "created_on": "2017-08-10T00:10:49.854332+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-08-10T00:10:49.860767+00:00", "type": "pullrequest_comment", "id": 42527915}