{"pagelen": 50, "values": [{"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/comments/42806828.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29/_/diff#comment-42806828"}}, "parent": {"id": 42797698, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/comments/42797698.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29/_/diff#comment-42797698"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}, "content": {"raw": "Well we are currently not using this additional feature, but it could replace our analysis globals workaround that is currently using the runmanager api. For this to be a replacement though it would need to be stored on closing of lyse and reloaded in opening. Which is is a seperate pull request after merging of saving ui state to config. (by the way can we merge that?)\n\nAlso some things don't seem to belong in the shot such as thresholds and current trap position that are derived from the whole sequence. These thresholds/trap position once calculated can be used in single shot routines for shots coming in for a quick pre threshold update result.", "markup": "markdown", "html": "<p>Well we are currently not using this additional feature, but it could replace our analysis globals workaround that is currently using the runmanager api. For this to be a replacement though it would need to be stored on closing of lyse and reloaded in opening. Which is is a seperate pull request after merging of saving ui state to config. (by the way can we merge that?)</p>\n<p>Also some things don't seem to belong in the shot such as thresholds and current trap position that are derived from the whole sequence. These thresholds/trap position once calculated can be used in single shot routines for shots coming in for a quick pre threshold update result.</p>", "type": "rendered"}, "created_on": "2017-08-15T06:11:53.861319+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-15T06:28:08.820869+00:00", "type": "pullrequest_comment", "id": 42806828}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/comments/42797698.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29/_/diff#comment-42797698"}}, "parent": {"id": 42797328, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/comments/42797328.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29/_/diff#comment-42797328"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}, "content": {"raw": "Ah, cool!\n\nPossibly the issue is that you can't request a single row (or subset of rows) of the dataframe over ZMQ? Which makes it slower than it should be? I think this was on our todo list at somepoint but we probably never got around to it! Although, the implementation below is more general because it isn't just cross-routine, but also cross-shot. Not sure if that is a necessary feature or not for @PhyNerd. ", "markup": "markdown", "html": "<p>Ah, cool!</p>\n<p>Possibly the issue is that you can't request a single row (or subset of rows) of the dataframe over ZMQ? Which makes it slower than it should be? I think this was on our todo list at somepoint but we probably never got around to it! Although, the implementation below is more general because it isn't just cross-routine, but also cross-shot. Not sure if that is a necessary feature or not for @PhyNerd. </p>", "type": "rendered"}, "created_on": "2017-08-15T00:00:57.416667+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-08-15T00:00:57.424470+00:00", "type": "pullrequest_comment", "id": 42797698}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/comments/42797328.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29/_/diff#comment-42797328"}}, "parent": {"id": 42797185, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/comments/42797185.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29/_/diff#comment-42797185"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}, "content": {"raw": "Yes, I understand, and I agree, so I was implying something like \"those functions should change to be disk-backed\". But you're right, that's what the dataframe is, which I hadn't realised.", "markup": "markdown", "html": "<p>Yes, I understand, and I agree, so I was implying something like \"those functions should change to be disk-backed\". But you're right, that's what the dataframe is, which I hadn't realised.</p>", "type": "rendered"}, "created_on": "2017-08-14T23:50:37.214431+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-14T23:50:37.216754+00:00", "type": "pullrequest_comment", "id": 42797328}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/comments/42797185.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29/_/diff#comment-42797185"}}, "parent": {"id": 42797023, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/comments/42797023.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29/_/diff#comment-42797023"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}, "content": {"raw": "Sure, I'm happy with caches. My comments were about the new `save_value`, `get_saved_value` functions that don't seem related to the other caching changes. I thought the dataframe was effectively a cache of cross-routine values that was backed by the HDF5 file, so am not seeing the point of those new functions.", "markup": "markdown", "html": "<p>Sure, I'm happy with caches. My comments were about the new <code>save_value</code>, <code>get_saved_value</code> functions that don't seem related to the other caching changes. I thought the dataframe was effectively a cache of cross-routine values that was backed by the HDF5 file, so am not seeing the point of those new functions.</p>", "type": "rendered"}, "created_on": "2017-08-14T23:46:52.620168+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-08-14T23:46:52.622267+00:00", "type": "pullrequest_comment", "id": 42797185}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/comments/42797097.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29/_/diff#comment-42797097"}}, "parent": {"id": 42797023, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/comments/42797023.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29/_/diff#comment-42797023"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}, "content": {"raw": "Perhaps a general purpose HDF5 file cacher might be in order (not suggesting now) - so that all reads and writes go through it and it can cache recent writes and return them faster. It's just annoying that doing things like that is reinventing what operating systems are supposed to do.", "markup": "markdown", "html": "<p>Perhaps a general purpose HDF5 file cacher might be in order (not suggesting now) - so that all reads and writes go through it and it can cache recent writes and return them faster. It's just annoying that doing things like that is reinventing what operating systems are supposed to do.</p>", "type": "rendered"}, "created_on": "2017-08-14T23:44:16.366918+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-14T23:44:54.854782+00:00", "type": "pullrequest_comment", "id": 42797097}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/comments/42797023.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29/_/diff#comment-42797023"}}, "parent": {"id": 42796749, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/comments/42796749.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29/_/diff#comment-42796749"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}, "content": {"raw": "I'm more happy with caches where the disk is authoritative and the cache is just a performance optimisation, I understand performance optimisations are necessary.\n\nBut I'm a little dismayed that files are so slow. Pickling data and sending it over a socket is not exactly lightweight, and operating systems are supposed to cache disk writes and reads so that if one process writes and another immediately reads, then the data should still be in RAM and the read should be quick. Maybe using shared drives means this isn't occurring, but it's pretty disappointing.", "markup": "markdown", "html": "<p>I'm more happy with caches where the disk is authoritative and the cache is just a performance optimisation, I understand performance optimisations are necessary.</p>\n<p>But I'm a little dismayed that files are so slow. Pickling data and sending it over a socket is not exactly lightweight, and operating systems are supposed to cache disk writes and reads so that if one process writes and another immediately reads, then the data should still be in RAM and the read should be quick. Maybe using shared drives means this isn't occurring, but it's pretty disappointing.</p>", "type": "rendered"}, "created_on": "2017-08-14T23:42:21.622052+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-14T23:42:21.625108+00:00", "type": "pullrequest_comment", "id": 42797023}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/comments/42796749.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29/_/diff#comment-42796749"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}, "content": {"raw": "With regards to the cross_routine stuff, is there a reason you aren't just saving this in the HDF5 file/dataframe and then accessing it from another routine?\n\nI'm somewhat reluctant about adding another place to store data that isn't the HDF5 file since it diminishes our \"everything is stored in the shot file\" mantra that underpins our entire philosophy. Happy to be convinced otherwise, but I think it's worth discussing further.", "markup": "markdown", "html": "<p>With regards to the cross_routine stuff, is there a reason you aren't just saving this in the HDF5 file/dataframe and then accessing it from another routine?</p>\n<p>I'm somewhat reluctant about adding another place to store data that isn't the HDF5 file since it diminishes our \"everything is stored in the shot file\" mantra that underpins our entire philosophy. Happy to be convinced otherwise, but I think it's worth discussing further.</p>", "type": "rendered"}, "created_on": "2017-08-14T23:36:44.606266+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-08-14T23:36:44.608490+00:00", "type": "pullrequest_comment", "id": 42796749}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/comments/42796296.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29/_/diff#comment-42796296"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}, "content": {"raw": "I suspect there is a race condition in the `WebServer` now as I think `handler` and `remove_data_by_filepath` are being called from different threads?", "markup": "markdown", "html": "<p>I suspect there is a race condition in the <code>WebServer</code> now as I think <code>handler</code> and <code>remove_data_by_filepath</code> are being called from different threads?</p>", "type": "rendered"}, "created_on": "2017-08-14T23:33:11.676088+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-08-14T23:33:11.678361+00:00", "type": "pullrequest_comment", "id": 42796296}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/comments/42796251.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29/_/diff#comment-42796251"}}, "parent": {"id": 42780404, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/comments/42780404.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29/_/diff#comment-42780404"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}, "content": {"raw": "Well we should probably have a preferences window (using the `labscript_utils.settings` classes) and there is almost an argument that this code could be contained in an optional plugin rather than integrating with lyse directly. However, since neither of those exist yet in lyse, it's probably not worth worrying about for now!", "markup": "markdown", "html": "<p>Well we should probably have a preferences window (using the <code>labscript_utils.settings</code> classes) and there is almost an argument that this code could be contained in an optional plugin rather than integrating with lyse directly. However, since neither of those exist yet in lyse, it's probably not worth worrying about for now!</p>", "type": "rendered"}, "created_on": "2017-08-14T23:32:04.117650+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-08-14T23:32:04.120906+00:00", "type": "pullrequest_comment", "id": 42796251}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}}, {"update": {"description": "This pull request aims to make multishot routines(for lots of runs) faster, by storing image data and run objects on first load in a cross routine storage. \r\n\r\nThe storage uses nested dicts making access to all data of one kind(e.g. images) one request to the storage server rather then n_images * n_shots.\r\n\r\nTo make the storage more useful it also allows for adding/removing/getting data.\r\n\r\nTo reduce memory usage all data saved under a key equal to the filepath of a shot is removed when that shot is removed.\r\n\r\nCaching of runs and images can be disabled keeping the storage active.\r\n\r\nThe reasoning for this pull request is:\r\n\r\nIn our lab we have a multishot routine that calculates trap positions for a grid of single atom traps, thresholds to determine atom count (1 or 0)  for those traps and finally saves the atom count to the individual shots. This routine needs all images from all shots to do so. As our typical shot amount of shots in a sequence is 2000 or greater this takes about 17 seconds with these changes here it's down to sub 1 second. \r\nWe are using this change in the lab for a week now and no negative effects have been noticed.\r\n\r\nThis should solve #26.", "title": "Cross routine storage and caching", "destination": {"commit": {"hash": "ace3427c5f6a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/ace3427c5f6a.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/ace3427c5f6a"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f9c91f7cc065", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/f9c91f7cc065"}, "html": {"href": "#!/PhyNerd/lyse/commits/f9c91f7cc065"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "cross-routine-storage"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-14T18:45:41.167012+00:00"}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/comments/42780404.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29/_/diff#comment-42780404"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}, "content": {"raw": "The config for the caching feature and for storage timeouts is currently only editable in ```__init__.py``` I'm aware that this is not ideal. Are there better suggestions on where to store these?", "markup": "markdown", "html": "<p>The config for the caching feature and for storage timeouts is currently only editable in <code>__init__.py</code> I'm aware that this is not ideal. Are there better suggestions on where to store these?</p>", "type": "rendered"}, "created_on": "2017-08-14T18:44:56.575807+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-14T18:44:56.640967+00:00", "type": "pullrequest_comment", "id": 42780404}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}}, {"update": {"description": "This pull request aims to make multishot routines(for lots of runs) faster, by storing image data and run objects on first load in a cross routine storage. \r\n\r\nThe storage uses nested dicts making access to all data of one kind(e.g. images) one request to the storage server rather then n_images * n_shots.\r\n\r\nTo make the storage more useful it also allows for adding/removing/getting data.\r\n\r\nTo reduce memory usage all data saved under a key equal to the filepath of a shot is removed when that shot is removed.\r\n\r\nCaching of runs and images can be disabled keeping the storage active.\r\n\r\nThe reasoning for this pull request is:\r\n\r\nIn our lab we have a multishot routine that calculates trap positions for a grid of single atom traps, thresholds to determine atom count (1 or 0)  for those traps and finally saves the atom count to the individual shots. This routine needs all images from all shots to do so. As our typical shot amount of shots in a sequence is 2000 or greater this takes about 17 seconds with these changes here it's down to sub 1 second. \r\nWe are using this change in the lab for a week now and no negative effects have been noticed.", "title": "Cross routine storage and caching", "destination": {"commit": {"hash": "ace3427c5f6a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/ace3427c5f6a.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/ace3427c5f6a"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f9c91f7cc065", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/f9c91f7cc065"}, "html": {"href": "#!/PhyNerd/lyse/commits/f9c91f7cc065"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "cross-routine-storage"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-14T18:43:07.217946+00:00"}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}}, {"update": {"description": "This pull request aims to make multishot routines(for lots of runs) faster, by storing image data and run objects on first load in a cross routine storage. \r\n\r\nThe storage uses nested dicts making access to all data of one kind(e.g. images) one request to the storage server rather then n_images * n_shots.\r\n\r\nTo make the storage more useful it also allows for adding/removing/getting data.\r\n\r\nTo reduce memory usage all data saved under a key equal to the filepath of a shot is removed when that shot is removed.\r\n\r\nCaching of runs and images can be disabled keeping the storage active.\r\n\r\nThe reasoning for this pull request is:\r\n\r\nIn our lab we have a multishot routine that calculates trap positions for a grid of single atom traps, thresholds to determine atom count (1 or 0)  for those traps and finally saves the atom count to the individual shots. This routine needs all images from all shots to do so. As our typical shot amount of shots in a sequence is 2000 or greater this takes about 17 seconds with these changes here it's down to sub 1 second. \r\nWe are using this change in the lab for a week now and no negative effects have been noticed.", "title": "Cross routine storage and caching", "destination": {"commit": {"hash": "ace3427c5f6a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/ace3427c5f6a.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/ace3427c5f6a"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f9c91f7cc065", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/f9c91f7cc065"}, "html": {"href": "#!/PhyNerd/lyse/commits/f9c91f7cc065"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "cross-routine-storage"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-14T18:43:07.157117+00:00"}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}}]}