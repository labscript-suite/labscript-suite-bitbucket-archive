{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/comments/42962815.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29/_/diff#comment-42962815"}}, "parent": {"id": 42962530, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/comments/42962530.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29/_/diff#comment-42962530"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}}, "title": "Cross routine caching"}, "content": {"raw": "You have an SSD I assume?\n\nDropping caches is not working, but that's fine. The saving is still indicative of how long things take when the cache is cold.  The results are enough to show that the OS caches are working for you.\n\nThis makes me think that it's something else about opening h5 files from within lyse that is slow. Perhaps zlock? Is your zlock server localhost?\n\nIf you want to get those files and analysis routines to me, I'd be interested in profiling what's slow, because it's starting to look like reading from disk should be able to be just as quick as getting the data from another process, and if the reason why it's not is fixable, then fixing it so that the OS cache can be used effectively might be preferable to introducing an additional cache.", "markup": "markdown", "html": "<p>You have an SSD I assume?</p>\n<p>Dropping caches is not working, but that's fine. The saving is still indicative of how long things take when the cache is cold.  The results are enough to show that the OS caches are working for you.</p>\n<p>This makes me think that it's something else about opening h5 files from within lyse that is slow. Perhaps zlock? Is your zlock server localhost?</p>\n<p>If you want to get those files and analysis routines to me, I'd be interested in profiling what's slow, because it's starting to look like reading from disk should be able to be just as quick as getting the data from another process, and if the reason why it's not is fixable, then fixing it so that the OS cache can be used effectively might be preferable to introducing an additional cache.</p>", "type": "rendered"}, "created_on": "2017-08-16T21:36:20.848149+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-16T21:36:20.850859+00:00", "type": "pullrequest_comment", "id": 42962815}