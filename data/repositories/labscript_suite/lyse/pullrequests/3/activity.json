{"pagelen": 50, "values": [{"update": {"description": "**Fix for issue #16, wrong execution order of routines after reordering with GUI buttons:**\r\n\r\nProblem was confusing a passive transformation with an active transformation when reordering a list:\r\n\r\npassive transformation: constructing a new list from a list of indices saying where in the old list each item should come from (what we were doing)\r\n\r\nactive transformation: constructing a new list out of a list of indices for where in the new list items in the old list should be moved to (what we should have been doing)\r\n\r\nWhen a single routine was moved, this simply swapped it with the one above or below it and so a passive and active transformation of the order were identical, so we didn't notice a problem. But for reordering multiple routines at once it gave the wrong result.\r\n\r\nThe GUI reordering was done with an active transformation as required, but the list used to determine the execution order was erroneously using a passive transformation which is now fixed.\r\n\r\n\r\n**Fix for issue #17, slow dataframe transfers:**\r\n\r\n\r\nMoved call to `df.convert_objects()` to the lyse server, which makes dataframes more\r\nefficiently picklable by replacing columns containing only a single array datatype\r\nwith an array of that datatype. Previously `df.convert_obects()` was only called\r\nafter the transfer, so the preceding pickling was slow.\r\n\r\nFor the large, mostly numeric dataframe tested, this speeds\r\nup pickling and unpickling by approx a factor of 5.\r\n\r\nAlso set `convert_numeric=False` in the call to `df.convert_objects()`. It was\r\npreviously set to `True`, but I don't think this is what we want. With it `False`,\r\nall-numeric columns are still converted as desired. With it `True`, *strings* are\r\nconverted to numbers even if only a single string is convertible to a numeric\r\nvalue, with all non-convertable values in the column becoming NaNs. I don't\r\nthink this is what we want. If the user asked for a string, the data should\r\nremain a string. It is presumptuous to assume otherwise and I suspect a\r\nmisunderstanding by whoever wrote this line originally.", "title": "Fixes #16 and #17", "destination": {"commit": {"hash": "7e2ccc7c66c3", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/7e2ccc7c66c3.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/7e2ccc7c66c3"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7e7c56c7fc4c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse/commit/7e7c56c7fc4c"}, "html": {"href": "#!/monashkrb/lyse/commits/7e7c56c7fc4c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse"}, "html": {"href": "#!/monashkrb/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4ad93bc7-ea3c-4386-833a-9f321a894870}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashkrb/lyse", "uuid": "{4ad93bc7-ea3c-4386-833a-9f321a894870}"}, "branch": {"name": "default"}}, "state": "MERGED", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2016-02-08T01:33:27.024686+00:00"}, "pull_request": {"type": "pullrequest", "id": 3, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/3.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/3"}}, "title": "Fixes #16 and #17"}}, {"update": {"description": "**Fix for issue #16, wrong execution order of routines after reordering with GUI buttons:**\r\n\r\nProblem was confusing a passive transformation with an active transformation when reordering a list:\r\n\r\npassive transformation: constructing a new list from a list of indices saying where in the old list each item should come from (what we were doing)\r\n\r\nactive transformation: constructing a new list out of a list of indices for where in the new list items in the old list should be moved to (what we should have been doing)\r\n\r\nWhen a single routine was moved, this simply swapped it with the one above or below it and so a passive and active transformation of the order were identical, so we didn't notice a problem. But for reordering multiple routines at once it gave the wrong result.\r\n\r\nThe GUI reordering was done with an active transformation as required, but the list used to determine the execution order was erroneously using a passive transformation which is now fixed.\r\n\r\n\r\n**Fix for issue #17, slow dataframe transfers:**\r\n\r\n\r\nMoved call to `df.convert_objects()` to the lyse server, which makes dataframes more\r\nefficiently picklable by replacing columns containing only a single array datatype\r\nwith an array of that datatype. Previously `df.convert_obects()` was only called\r\nafter the transfer, so the preceding pickling was slow.\r\n\r\nFor the large, mostly numeric dataframe tested, this speeds\r\nup pickling and unpickling by approx a factor of 5.\r\n\r\nAlso set `convert_numeric=False` in the call to `df.convert_objects()`. It was\r\npreviously set to `True`, but I don't think this is what we want. With it `False`,\r\nall-numeric columns are still converted as desired. With it `True`, *strings* are\r\nconverted to numbers even if only a single string is convertible to a numeric\r\nvalue, with all non-convertable values in the column becoming NaNs. I don't\r\nthink this is what we want. If the user asked for a string, the data should\r\nremain a string. It is presumptuous to assume otherwise and I suspect a\r\nmisunderstanding by whoever wrote this line originally.", "title": "Fixes #16 and #17", "destination": {"commit": {"hash": "7e2ccc7c66c3", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/7e2ccc7c66c3.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/7e2ccc7c66c3"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7e7c56c7fc4c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse/commit/7e7c56c7fc4c"}, "html": {"href": "#!/monashkrb/lyse/commits/7e7c56c7fc4c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse"}, "html": {"href": "#!/monashkrb/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4ad93bc7-ea3c-4386-833a-9f321a894870}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashkrb/lyse", "uuid": "{4ad93bc7-ea3c-4386-833a-9f321a894870}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2016-01-18T05:40:29.716499+00:00"}, "pull_request": {"type": "pullrequest", "id": 3, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/3.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/3"}}, "title": "Fixes #16 and #17"}}, {"update": {"description": "**Fix for issue #16, wrong execution order of routines after reordering with GUI buttons:**\r\n\r\nProblem was confusing a passive transformation with an active transformation when reordering a list:\r\n\r\npassive transformation: constructing a new list from a list of indices saying where in the old list each item should come from (what we were doing)\r\n\r\nactive transformation: constructing a new list out of a list of indices for where in the new list items in the old list should be moved to (what we should have been doing)\r\n\r\nWhen a single routine was moved, this simply swapped it with the one above or below it and so a passive and active transformation of the order were identical, so we didn't notice a problem. But for reordering multiple routines at once it gave the wrong result.\r\n\r\nThe GUI reordering was done with an active transformation as required, but the list used to determine the execution order was erroneously using a passive transformation which is now fixed.\r\n\r\n\r\n**Fix for issue #17, slow dataframe transfers:**\r\n\r\n\r\nMoved call to `df.convert_objects()` to the lyse server, which makes dataframes more\r\nefficiently picklable by replacing columns containing only a single array datatype\r\nwith an array of that datatype. Previously `df.convert_obects()` was only called\r\nafter the transfer, so the preceding pickling was slow.\r\n\r\nFor the large, mostly numeric dataframe tested, this speeds\r\nup pickling and unpickling by approx a factor of 5.\r\n\r\nAlso set `convert_numeric=False` in the call to `df.convert_objects()`. It was\r\npreviously set to `True`, but I don't think this is what we want. With it `False`,\r\nall-numeric columns are still converted as desired. With it `True`, *strings* are\r\nconverted to numbers even if only a single string is convertible to a numeric\r\nvalue, with all non-convertable values in the column becoming NaNs. I don't\r\nthink this is what we want. If the user asked for a string, the data should\r\nremain a string. It is presumptuous to assume otherwise and I suspect a\r\nmisunderstanding by whoever wrote this line originally.", "title": "Fixes #16 and #17", "destination": {"commit": {"hash": "0643271a6a5f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/0643271a6a5f.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/0643271a6a5f"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7e7c56c7fc4c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse/commit/7e7c56c7fc4c"}, "html": {"href": "#!/monashkrb/lyse/commits/7e7c56c7fc4c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse"}, "html": {"href": "#!/monashkrb/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4ad93bc7-ea3c-4386-833a-9f321a894870}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashkrb/lyse", "uuid": "{4ad93bc7-ea3c-4386-833a-9f321a894870}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2015-07-28T10:03:45.311571+00:00"}, "pull_request": {"type": "pullrequest", "id": 3, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/3.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/3"}}, "title": "Fixes #16 and #17"}}, {"update": {"description": "**Fix for issue #16, wrong execution order of routines after reordering with GUI buttons:**\r\n\r\nProblem was confusing a passive transformation with an active transformation when reordering a list:\r\n\r\npassive transformation: constructing a new list from a list of indices saying where in the old list each item should come from (what we were doing)\r\n\r\nactive transformation: constructing a new list out of a list of indices for where in the new list items in the old list should be moved to (what we should have been doing)\r\n\r\nWhen a single routine was moved, this simply swapped it with the one above or below it and so a passive and active transformation of the order were identical, so we didn't notice a problem. But for reordering multiple routines at once it gave the wrong result.\r\n\r\nThe GUI reordering was done with an active transformation as required, but the list used to determine the execution order was erroneously using a passive transformation which is now fixed.\r\n\r\n\r\n**Fix for issue #17, slow dataframe transfers:**\r\n\r\n\r\nMoved call to `df.convert_objects()` to the lyse server, which makes dataframes more\r\nefficiently picklable by replacing columns containing only a single array datatype\r\nwith an array of that datatype. Previously `df.convert_obects()` was only called\r\nafter the transfer, so the preceding pickling was slow.\r\n\r\nFor the large, mostly numeric dataframe tested, this speeds\r\nup pickling and unpickling by approx a factor of 5.\r\n\r\nAlso set `convert_numeric=False` in the call to `df.convert_objects()`. It was\r\npreviously set to `True`, but I don't think this is what we want. With it `False`,\r\nall-numeric columns are still converted as desired. With it `True`, *strings* are\r\nconverted to numbers even if only a single string is convertible to a numeric\r\nvalue, with all non-convertable values in the column becoming NaNs. I don't\r\nthink this is what we want. If the user asked for a string, the data should\r\nremain a string. It is presumptuous to assume otherwise and I suspect a\r\nmisunderstanding by whoever wrote this line originally.", "title": "Fixes #16 and #17", "destination": {"commit": {"hash": "0643271a6a5f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/0643271a6a5f.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/0643271a6a5f"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7e7c56c7fc4c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse/commit/7e7c56c7fc4c"}, "html": {"href": "#!/monashkrb/lyse/commits/7e7c56c7fc4c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse"}, "html": {"href": "#!/monashkrb/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4ad93bc7-ea3c-4386-833a-9f321a894870}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashkrb/lyse", "uuid": "{4ad93bc7-ea3c-4386-833a-9f321a894870}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2015-07-28T10:03:44.745374+00:00"}, "pull_request": {"type": "pullrequest", "id": 3, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/3.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/3"}}, "title": "Fixes #16 and #17"}}, {"update": {"description": "**Fix for issue #16, wrong execution order of routines after reordering with GUI buttons:**\r\n\r\nProblem was confusing a passive transformation with an active transformation when reordering a list:\r\n\r\npassive transformation: constructing a new list from a list of indices saying where in the old list each item should come from (what we were doing)\r\n\r\nactive transformation: constructing a new list out of a list of indices for where in the new list items in the old list should be moved to (what we should have been doing)\r\n\r\nWhen a single routine was moved, this simply swapped it with the one above or below it and so a passive and active transformation of the order were identical, so we didn't notice a problem. But for reordering multiple routines at once it gave the wrong result.\r\n\r\nThe GUI reordering was done with an active transformation as required, but the list used to determine the execution order was erroneously using a passive transformation which is now fixed.\r\n\r\n\r\n**Fix for issue #17, slow dataframe transfers:**\r\n\r\n\r\nMoved call to `df.convert_objects()` to the lyse server, which makes dataframes more\r\nefficiently picklable by replacing columns containing only a single array datatype\r\nwith an array of that datatype. Previously `df.convert_obects()` was only called\r\nafter the transfer, so the preceding pickling was slow.\r\n\r\nFor the large, mostly numeric dataframe tested, this speeds\r\nup pickling and unpickling by approx a factor of 5.\r\n\r\nAlso set `convert_numeric=False` in the call to `df.convert_objects()`. It was\r\npreviously set to `True`, but I don't think this is what we want. With it `False`,\r\nall-numeric columns are still converted as desired. With it `True`, *strings* are\r\nconverted to numbers even if only a single string is convertible to a numeric\r\nvalue, with all non-convertable values in the column becoming NaNs. I don't\r\nthink this is what we want. If the user asked for a string, the data should\r\nremain a string. It is presumptuous to assume otherwise and I suspect a\r\nmisunderstanding by whoever wrote this line originally.", "title": "Fixes #16 and #17", "destination": {"commit": {"hash": "0643271a6a5f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/0643271a6a5f.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/0643271a6a5f"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "dd55417f2a64", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse/commit/dd55417f2a64"}, "html": {"href": "#!/monashkrb/lyse/commits/dd55417f2a64"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse"}, "html": {"href": "#!/monashkrb/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4ad93bc7-ea3c-4386-833a-9f321a894870}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashkrb/lyse", "uuid": "{4ad93bc7-ea3c-4386-833a-9f321a894870}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2015-07-28T09:44:44.346854+00:00"}, "pull_request": {"type": "pullrequest", "id": 3, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/3.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/3"}}, "title": "Fixes #16 and #17"}}, {"update": {"description": "Problem was confusing a passive transformation with an active transformation when reordering a list:\r\n\r\npassive transformation: constructing a new list from a list of indices saying where in the old list each item should come from (what we were doing)\r\n\r\nactive transformation: constructing a new list out of a list of indices for where in the new list items in the old list should be moved to (what we should have been doing)\r\n\r\nWhen a single routine was moved, this simply swapped it with the one above or below it and so a passive and active transformation of the order were identical, so we didn't notice a problem. But for reordering multiple routines at once it gave the wrong result.\r\n\r\nThe GUI reordering was done with an active transformation as required, but the list used to determine the execution order was erroneously using a passive transformation which is now fixed.", "title": "Fixes #16, wrong execution order of routines after reordering with GUI buttons", "destination": {"commit": {"hash": "0643271a6a5f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/0643271a6a5f.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/0643271a6a5f"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "dd55417f2a64", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse/commit/dd55417f2a64"}, "html": {"href": "#!/monashkrb/lyse/commits/dd55417f2a64"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse"}, "html": {"href": "#!/monashkrb/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4ad93bc7-ea3c-4386-833a-9f321a894870}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashkrb/lyse", "uuid": "{4ad93bc7-ea3c-4386-833a-9f321a894870}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2015-07-28T09:38:37.111279+00:00"}, "pull_request": {"type": "pullrequest", "id": 3, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/3.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/3"}}, "title": "Fixes #16 and #17"}}, {"update": {"description": "Problem was confusing a passive transformation with an active transformation when reordering a list:\r\n\r\npassive transformation: constructing a new list from a list of indices saying where in the old list each item should come from (what we were doing)\r\n\r\nactive transformation: constructing a new list out of a list of indices for where in the new list items in the old list should be moved to (what we should have been doing)\r\n\r\nWhen a single routine was moved, this simply swapped it with the one above or below it and so a passive and active transformation of the order were identical, so we didn't notice a problem. But for reordering multiple routines at once it gave the wrong result.\r\n\r\nThe GUI reordering was done with an active transformation as required, but the list used to determine the execution order was erroneously using a passive transformation which is now fixed.", "title": "Fixes #16, wrong execution order of routines after reordering with GUI buttons", "destination": {"commit": {"hash": "0643271a6a5f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/0643271a6a5f.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/0643271a6a5f"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d4de6d8fe857", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse/commit/d4de6d8fe857"}, "html": {"href": "#!/monashkrb/lyse/commits/d4de6d8fe857"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse"}, "html": {"href": "#!/monashkrb/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4ad93bc7-ea3c-4386-833a-9f321a894870}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashkrb/lyse", "uuid": "{4ad93bc7-ea3c-4386-833a-9f321a894870}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2015-07-28T07:06:34.796364+00:00"}, "pull_request": {"type": "pullrequest", "id": 3, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/3.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/3"}}, "title": "Fixes #16 and #17"}}, {"update": {"description": "Problem was confusing a passive transformation with an active transformation when reordering a list:\r\n\r\npassive transformation: constructing a new list from a list of indices saying where in the old list each item should come from (what we were doing)\r\n\r\nactive transformation: constructing a new list out of a list of indices for where in the new list items in the old list should be moved to (what we should have been doing)\r\n\r\nWhen a single routine was moved, this simply swapped it with the one above or below it and so a passive and active transformation of the order were identical, so we didn't notice a problem. But for reordering multiple routines at once it gave the wrong result.\r\n\r\nThe GUI reordering was done with an active transformation as required, but the list used to determine the execution order was erroneously using a passive transformation which is now fixed.", "title": "Fixes #16, wrong execution order of routines after reordering with GUI buttons", "destination": {"commit": {"hash": "0643271a6a5f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/0643271a6a5f.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/0643271a6a5f"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d4de6d8fe857", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse/commit/d4de6d8fe857"}, "html": {"href": "#!/monashkrb/lyse/commits/d4de6d8fe857"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse"}, "html": {"href": "#!/monashkrb/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4ad93bc7-ea3c-4386-833a-9f321a894870}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashkrb/lyse", "uuid": "{4ad93bc7-ea3c-4386-833a-9f321a894870}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2015-07-28T07:06:34.748683+00:00"}, "pull_request": {"type": "pullrequest", "id": 3, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/3.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/3"}}, "title": "Fixes #16 and #17"}}]}