{"pagelen": 50, "values": [{"update": {"description": "Fix a bug in updating the dataframe after analysis has produced results. Pandas would raise an exception if you tried to save an iterable item as a value in the dataframe, because of ambiguities as to whether you are trying to set multiple values or not.\r\nSince we are only setting one value at a time, I've changed the form\r\nof the call to pandas to one that is explicitly for setting single\r\nvalues, removing the ambiguity and allowing iterable values to be set.\r\n\r\nI've given @shaunj and @pstarkey commit access to my fork so if either of you merges it and checks the \"close source branch\" box, it should hopefully actually close the branch this time.", "title": "Fix a bug in updating the dataframe", "destination": {"commit": {"hash": "eb5f15c0bc06", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/eb5f15c0bc06.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/eb5f15c0bc06"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "bf80b2ce96ed", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/bf80b2ce96ed"}, "html": {"href": "#!/cbillington/lyse/commits/bf80b2ce96ed"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "state": "MERGED", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2017-10-04T16:24:19.198675+00:00"}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"update": {"description": "Fix a bug in updating the dataframe after analysis has produced results. Pandas would raise an exception if you tried to save an iterable item as a value in the dataframe, because of ambiguities as to whether you are trying to set multiple values or not.\r\nSince we are only setting one value at a time, I've changed the form\r\nof the call to pandas to one that is explicitly for setting single\r\nvalues, removing the ambiguity and allowing iterable values to be set.\r\n\r\nI've given @shaunj and @pstarkey commit access to my fork so if either of you merges it and checks the \"close source branch\" box, it should hopefully actually close the branch this time.", "title": "Fix a bug in updating the dataframe", "destination": {"commit": {"hash": "eb5f15c0bc06", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/eb5f15c0bc06.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/eb5f15c0bc06"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "bf80b2ce96ed", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/bf80b2ce96ed"}, "html": {"href": "#!/cbillington/lyse/commits/bf80b2ce96ed"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2017-10-04T16:24:18.778070+00:00"}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43106133.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43106133"}}, "parent": {"id": 43105612, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43105612.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43105612"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "Excellent. Then we're all good.", "markup": "markdown", "html": "<p>Excellent. Then we're all good.</p>", "type": "rendered"}, "created_on": "2017-08-18T13:27:10.204360+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-18T13:27:10.206699+00:00", "type": "pullrequest_comment", "id": 43106133}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43105670.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43105670"}}, "parent": {"id": 43099058, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43099058.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43099058"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "Wow. Nice find, Phil.", "markup": "markdown", "html": "<p>Wow. Nice find, Phil.</p>", "type": "rendered"}, "created_on": "2017-08-18T13:22:24.790453+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": "2017-08-18T13:22:24.793883+00:00", "type": "pullrequest_comment", "id": 43105670}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43105612.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43105612"}}, "parent": {"id": 43054023, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43054023.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43054023"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "No particular reason that I can remember, other than it being an early foray into h5py, guided by the [documentation](http://docs.h5py.org/en/latest/high/attr.html).", "markup": "markdown", "html": "<p>No particular reason that I can remember, other than it being an early foray into h5py, guided by the <a data-is-external-link=\"true\" href=\"http://docs.h5py.org/en/latest/high/attr.html\" rel=\"nofollow\">documentation</a>.</p>", "type": "rendered"}, "created_on": "2017-08-18T13:21:51.542178+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": "2017-08-18T13:21:51.546379+00:00", "type": "pullrequest_comment", "id": 43105612}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43101354.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43101354"}}, "parent": {"id": 43099058, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43099058.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43099058"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "Thanks for digging that up!\n\nIt sounds like the change to this line was incidental, and I don't see any downside to changing it to allow overwriting with a different type, as this pull request now does.", "markup": "markdown", "html": "<p>Thanks for digging that up!</p>\n<p>It sounds like the change to this line was incidental, and I don't see any downside to changing it to allow overwriting with a different type, as this pull request now does.</p>", "type": "rendered"}, "created_on": "2017-08-18T12:33:53.251607+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-18T12:33:53.255653+00:00", "type": "pullrequest_comment", "id": 43101354}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43099058.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43099058"}}, "parent": {"id": 43054023, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43054023.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43054023"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "FYI issue 760 on redmine is titled \"Allow save_result functions to write to any group of the h5 file\".\n\n@rpanderson writes\n>The methods of the `Run` class `save_result(self, name, value)` and `save_result_array(self, name, data)` create attributes or datasets in `/results/<analysis script name>` of the h5 file. It is sometimes desirable to save analysis results elsewhere, e.g. when computing optical depth and doing fitting using lyse. In such a case, having the option to specify a different group to save the results in (e.g. `/images/side/absorption`) would be useful. Keyword arguments to handle overwrite and whether to retain existing attributes when overwriting a dataset are part of this feature.\n\n@cbillington writes\n> See `Run.set_group(groupname)`. It was designed for interactive use when the group name could not be inferred from the filename (since there is no filename in an interactive session), but should function equally well regardless. Just set it to what you want prior to saving results.\n>Edit: actually, I find this unpythonic. Keyword arguments it is.\n\n@rpanderson writes:\n>Implemented in changeset: 239d63d281e5.\n\n>`save_result` and `save_result_array` now take optional arguments `group` and `overwrite`, and `save_result_array` permits retention of existing attributes when overwriting an existing dataset (via `keep_attrs`). I've also added a method `save_results_dict(self, results_dict, uncertainties=False)` which writes a dictionary of named results as attributes, with the option to pass a dictionary of `parameter = (value, u_value)` tuples which we sometimes use when fitting. If `uncertainties = True`, two attributes will get created for each fit parameter: `parameter_name` and `u_parameter_name`.\n\n>Example of overwriting existing optical depth and fit results (originally computed and saved in BIAS):\n\n\n```\n#!python\n\nrun = Run(path)\npixel_size = run.get_image_attributes('side')['effective_pixel_size']\natoms, flat, dark = run.get_images('side', 'absorption', 'atoms', 'flat', 'dark')\nOD = compute_OD(atoms, flat, dark, Isat=4300, Icutoff=500, sigma=sigma0, pixel_size=pixel_size)\nrun.save_result_array('OD', OD.filled(nan).astype(float32), group='images/side/absorption')\n\nparams_dict, X_section, Y_section = fit_gaussian_2d(OD, binsize=5)\nparams_dict\n{'Gaussian_Amp': (3.6871784788483764, 0.024929261746463743),\n 'Gaussian_Nint': (593404.1971139349, 7480.5380538767058),\n 'Gaussian_Offset': (-0.015763284504394199, 0.0061598456960820537),\n 'Gaussian_X0': (597.584434588112, 1.120946081035924),\n 'Gaussian_XW': (165.80579548039267, 1.246639540138432),\n 'Gaussian_Y0': (589.54336642500766, 1.0443723155278906),\n 'Gaussian_YW': (154.48164257178246, 1.1629540148641577)}\n\nrun.save_results_dict(params_dict, group='images/side/absorption/OD', uncertainties=True)\n```\n", "markup": "markdown", "html": "<p>FYI issue 760 on redmine is titled \"Allow save_result functions to write to any group of the h5 file\".</p>\n<p>@rpanderson writes</p>\n<blockquote>\n<p>The methods of the <code>Run</code> class <code>save_result(self, name, value)</code> and <code>save_result_array(self, name, data)</code> create attributes or datasets in <code>/results/&lt;analysis script name&gt;</code> of the h5 file. It is sometimes desirable to save analysis results elsewhere, e.g. when computing optical depth and doing fitting using lyse. In such a case, having the option to specify a different group to save the results in (e.g. <code>/images/side/absorption</code>) would be useful. Keyword arguments to handle overwrite and whether to retain existing attributes when overwriting a dataset are part of this feature.</p>\n</blockquote>\n<p>@cbillington writes</p>\n<blockquote>\n<p>See <code>Run.set_group(groupname)</code>. It was designed for interactive use when the group name could not be inferred from the filename (since there is no filename in an interactive session), but should function equally well regardless. Just set it to what you want prior to saving results.\nEdit: actually, I find this unpythonic. Keyword arguments it is.</p>\n</blockquote>\n<p>@rpanderson writes:</p>\n<blockquote>\n<p>Implemented in changeset: <a href=\"#!/labscript_suite/lyse/commits/239d63d281e5\" rel=\"nofollow\" class=\"ap-connect-link\">239d63d281e5</a>.</p>\n<p><code>save_result</code> and <code>save_result_array</code> now take optional arguments <code>group</code> and <code>overwrite</code>, and <code>save_result_array</code> permits retention of existing attributes when overwriting an existing dataset (via <code>keep_attrs</code>). I've also added a method <code>save_results_dict(self, results_dict, uncertainties=False)</code> which writes a dictionary of named results as attributes, with the option to pass a dictionary of <code>parameter = (value, u_value)</code> tuples which we sometimes use when fitting. If <code>uncertainties = True</code>, two attributes will get created for each fit parameter: <code>parameter_name</code> and <code>u_parameter_name</code>.</p>\n<p>Example of overwriting existing optical depth and fit results (originally computed and saved in BIAS):</p>\n</blockquote>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">run</span> <span class=\"o\">=</span> <span class=\"n\">Run</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n<span class=\"n\">pixel_size</span> <span class=\"o\">=</span> <span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">get_image_attributes</span><span class=\"p\">(</span><span class=\"s1\">&#39;side&#39;</span><span class=\"p\">)[</span><span class=\"s1\">&#39;effective_pixel_size&#39;</span><span class=\"p\">]</span>\n<span class=\"n\">atoms</span><span class=\"p\">,</span> <span class=\"n\">flat</span><span class=\"p\">,</span> <span class=\"n\">dark</span> <span class=\"o\">=</span> <span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">get_images</span><span class=\"p\">(</span><span class=\"s1\">&#39;side&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;absorption&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;atoms&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;flat&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dark&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">OD</span> <span class=\"o\">=</span> <span class=\"n\">compute_OD</span><span class=\"p\">(</span><span class=\"n\">atoms</span><span class=\"p\">,</span> <span class=\"n\">flat</span><span class=\"p\">,</span> <span class=\"n\">dark</span><span class=\"p\">,</span> <span class=\"n\">Isat</span><span class=\"o\">=</span><span class=\"mi\">4300</span><span class=\"p\">,</span> <span class=\"n\">Icutoff</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"n\">sigma</span><span class=\"o\">=</span><span class=\"n\">sigma0</span><span class=\"p\">,</span> <span class=\"n\">pixel_size</span><span class=\"o\">=</span><span class=\"n\">pixel_size</span><span class=\"p\">)</span>\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">save_result_array</span><span class=\"p\">(</span><span class=\"s1\">&#39;OD&#39;</span><span class=\"p\">,</span> <span class=\"n\">OD</span><span class=\"o\">.</span><span class=\"n\">filled</span><span class=\"p\">(</span><span class=\"n\">nan</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">float32</span><span class=\"p\">),</span> <span class=\"n\">group</span><span class=\"o\">=</span><span class=\"s1\">&#39;images/side/absorption&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">params_dict</span><span class=\"p\">,</span> <span class=\"n\">X_section</span><span class=\"p\">,</span> <span class=\"n\">Y_section</span> <span class=\"o\">=</span> <span class=\"n\">fit_gaussian_2d</span><span class=\"p\">(</span><span class=\"n\">OD</span><span class=\"p\">,</span> <span class=\"n\">binsize</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">params_dict</span>\n<span class=\"p\">{</span><span class=\"s1\">&#39;Gaussian_Amp&#39;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mf\">3.6871784788483764</span><span class=\"p\">,</span> <span class=\"mf\">0.024929261746463743</span><span class=\"p\">),</span>\n <span class=\"s1\">&#39;Gaussian_Nint&#39;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mf\">593404.1971139349</span><span class=\"p\">,</span> <span class=\"mf\">7480.5380538767058</span><span class=\"p\">),</span>\n <span class=\"s1\">&#39;Gaussian_Offset&#39;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">0.015763284504394199</span><span class=\"p\">,</span> <span class=\"mf\">0.0061598456960820537</span><span class=\"p\">),</span>\n <span class=\"s1\">&#39;Gaussian_X0&#39;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mf\">597.584434588112</span><span class=\"p\">,</span> <span class=\"mf\">1.120946081035924</span><span class=\"p\">),</span>\n <span class=\"s1\">&#39;Gaussian_XW&#39;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mf\">165.80579548039267</span><span class=\"p\">,</span> <span class=\"mf\">1.246639540138432</span><span class=\"p\">),</span>\n <span class=\"s1\">&#39;Gaussian_Y0&#39;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mf\">589.54336642500766</span><span class=\"p\">,</span> <span class=\"mf\">1.0443723155278906</span><span class=\"p\">),</span>\n <span class=\"s1\">&#39;Gaussian_YW&#39;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mf\">154.48164257178246</span><span class=\"p\">,</span> <span class=\"mf\">1.1629540148641577</span><span class=\"p\">)}</span>\n\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">save_results_dict</span><span class=\"p\">(</span><span class=\"n\">params_dict</span><span class=\"p\">,</span> <span class=\"n\">group</span><span class=\"o\">=</span><span class=\"s1\">&#39;images/side/absorption/OD&#39;</span><span class=\"p\">,</span> <span class=\"n\">uncertainties</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-08-18T12:06:14.399982+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "updated_on": "2017-08-18T12:06:14.618089+00:00", "type": "pullrequest_comment", "id": 43099058}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43054023.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43054023"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "Ok so I've fixed the issue with not being able to overwrite the type or shape of an attribute that was previously saved. Digging in the history, the code was changed at some point to *enforce* that overwriting a saved result\nwould not be allowed if it modified the type or shape, by using the line:\n\n`h5_file[group].attrs.modify(name, value)`\n\ninstead of the more obvious\n\n`h5_file[group].attrs[name] = value `\n\n@rpanderson looks like you made this change (or someone logged in as you) in revision 239d63d2. Was there any reasoning for this do you remember? The commit message says it fixes issue #760 which would have been from redmine days which I am not able to access (not sure if it's because it's broken or if it's my Monash credentials being expired, which they are). Perhaps it was just because the rest of the code was so shaky at the time that changing the datatype would have crashed lyse maybe?", "markup": "markdown", "html": "<p>Ok so I've fixed the issue with not being able to overwrite the type or shape of an attribute that was previously saved. Digging in the history, the code was changed at some point to <em>enforce</em> that overwriting a saved result\nwould not be allowed if it modified the type or shape, by using the line:</p>\n<p><code>h5_file[group].attrs.modify(name, value)</code></p>\n<p>instead of the more obvious</p>\n<p><code>h5_file[group].attrs[name] = value</code></p>\n<p>@rpanderson looks like you made this change (or someone logged in as you) in revision <a href=\"#!/labscript_suite/lyse/commits/239d63d2\" rel=\"nofollow\" class=\"ap-connect-link\">239d63d2</a>. Was there any reasoning for this do you remember? The commit message says it fixes issue #760 which would have been from redmine days which I am not able to access (not sure if it's because it's broken or if it's my Monash credentials being expired, which they are). Perhaps it was just because the rest of the code was so shaky at the time that changing the datatype would have crashed lyse maybe?</p>", "type": "rendered"}, "created_on": "2017-08-17T20:51:34.840946+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-17T20:51:34.875339+00:00", "type": "pullrequest_comment", "id": 43054023}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"update": {"description": "Fix a bug in updating the dataframe after analysis has produced results. Pandas would raise an exception if you tried to save an iterable item as a value in the dataframe, because of ambiguities as to whether you are trying to set multiple values or not.\r\nSince we are only setting one value at a time, I've changed the form\r\nof the call to pandas to one that is explicitly for setting single\r\nvalues, removing the ambiguity and allowing iterable values to be set.\r\n\r\nI've given @shaunj and @pstarkey commit access to my fork so if either of you merges it and checks the \"close source branch\" box, it should hopefully actually close the branch this time.", "title": "Fix a bug in updating the dataframe", "destination": {"commit": {"hash": "3ec4b2fd3633", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/3ec4b2fd3633.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/3ec4b2fd3633"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "bf80b2ce96ed", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/bf80b2ce96ed"}, "html": {"href": "#!/cbillington/lyse/commits/bf80b2ce96ed"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2017-08-17T20:44:47.437665+00:00"}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43052641.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43052641"}}, "parent": {"id": 43052608, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43052608.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43052608"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "Edited - 27 was the issue number, not the PR number.", "markup": "markdown", "html": "<p>Edited - 27 was the issue number, not the PR number.</p>", "type": "rendered"}, "created_on": "2017-08-17T20:27:51.111876+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-17T20:27:51.114245+00:00", "type": "pullrequest_comment", "id": 43052641}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43052489.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43052489"}}, "parent": {"id": 43049932, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43049932.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43049932"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "Ok so this is done in pull request #33. Made the message nice and scary.", "markup": "markdown", "html": "<p>Ok so this is done in <a href=\"#!/labscript_suite/lyse/pull-requests/33/fixes-issue-27-lyse-broken-after-analysis\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #33</a>. Made the message nice and scary.</p>", "type": "rendered"}, "created_on": "2017-08-17T20:25:19.773883+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-17T20:27:29.938862+00:00", "type": "pullrequest_comment", "id": 43052489}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43052608.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43052608"}}, "parent": {"id": 43052489, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43052489.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43052489"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "it's pullrequest #33 ;) ", "markup": "markdown", "html": "<p>it's pullrequest <a href=\"#!/labscript_suite/lyse/issues/33/lyse-freezes-on-selection\" rel=\"nofollow\" title=\"Lyse freezes on selection\" class=\"ap-connect-link\"><s>#33</s></a> ;) </p>", "type": "rendered"}, "created_on": "2017-08-17T20:27:08.285424+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-17T20:27:08.318241+00:00", "type": "pullrequest_comment", "id": 43052608}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43050608.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43050608"}}, "parent": {"id": 43050087, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43050087.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43050087"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "Great! Thanks for testing.", "markup": "markdown", "html": "<p>Great! Thanks for testing.</p>", "type": "rendered"}, "created_on": "2017-08-17T19:54:36.151106+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-17T19:54:36.154043+00:00", "type": "pullrequest_comment", "id": 43050608}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"approval": {"date": "2017-08-17T19:48:16.509411+00:00", "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43050256.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43050256"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "As ```set_value``` seems to be so much fast than ```loc```. I checked ```loc``` vs ```get_value```.  There seems to be a factor 4 there so I'll add that to my Performance pull request.", "markup": "markdown", "html": "<p>As <code>set_value</code> seems to be so much fast than <code>loc</code>. I checked <code>loc</code> vs <code>get_value</code>.  There seems to be a factor 4 there so I'll add that to my Performance pull request.</p>", "type": "rendered"}, "created_on": "2017-08-17T19:48:09.603421+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-17T19:48:09.644030+00:00", "type": "pullrequest_comment", "id": 43050256}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43050087.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43050087"}}, "parent": {"id": 43049579, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43049579.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43049579"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "Tested the last commit and both bugs from earlier are indeed solved. And standard analysis is running smooth as always.", "markup": "markdown", "html": "<p>Tested the last commit and both bugs from earlier are indeed solved. And standard analysis is running smooth as always.</p>", "type": "rendered"}, "created_on": "2017-08-17T19:45:11.098748+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-17T19:45:11.142937+00:00", "type": "pullrequest_comment", "id": 43050087}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43049932.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43049932"}}, "parent": {"id": 43049792, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43049792.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43049792"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "Didn't consider Qt stuff crashing and being out of sync. Your approach is definitely superior.", "markup": "markdown", "html": "<p>Didn't consider Qt stuff crashing and being out of sync. Your approach is definitely superior.</p>", "type": "rendered"}, "created_on": "2017-08-17T19:42:40.862447+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-17T19:42:40.904710+00:00", "type": "pullrequest_comment", "id": 43049932}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43049792.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43049792"}}, "parent": {"id": 43049511, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43049511.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43049511"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "everything will not be just fine - but the user can continue at their own peril if they really want to. If the dataframe updating crashed then the Qt model might out of sync with the dataframe, for example. This was my motivation for leaving it as a fatal exception in the past. It's not recoverable since any uncaught exception was unexpected, so who knows what happened.\n\nI would raise a big ugly labscript_utils.excepthook exception so that it definitely looks like an uncaught exception, with a full traceback and some added text saying that 'really, lyse is broken now, continue at your own risk, particularly if you're a developer, but if you're a user probably restart lyse and please report a bug'.\n\nI'll do this now.", "markup": "markdown", "html": "<p>everything will not be just fine - but the user can continue at their own peril if they really want to. If the dataframe updating crashed then the Qt model might out of sync with the dataframe, for example. This was my motivation for leaving it as a fatal exception in the past. It's not recoverable since any uncaught exception was unexpected, so who knows what happened.</p>\n<p>I would raise a big ugly labscript_utils.excepthook exception so that it definitely looks like an uncaught exception, with a full traceback and some added text saying that 'really, lyse is broken now, continue at your own risk, particularly if you're a developer, but if you're a user probably restart lyse and please report a bug'.</p>\n<p>I'll do this now.</p>", "type": "rendered"}, "created_on": "2017-08-17T19:40:13.342032+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-17T19:40:47.952871+00:00", "type": "pullrequest_comment", "id": 43049792}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43049579.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43049579"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "OK so I've fixed the issues raised in this thread so far.\n\nit's a little bit more code, but since it's in the `except:` handler it doesn't run except when it needs to and so is not a performance hog. And it should only need to run once when a) a new column is being created or b) a column's datatype needs to promoted to 'object' which should only need to occur once per column at most.\n\nRemaining issue is saving over the top of existing save results. Turns out HDF5 does not like you changing your mind about the datatype of an attribute:\n\n\n```\n#!python\n   run.save_result(\"dfgdh\", 1)\n  File \"/home/cjb7/labscript_suite/lyse/__init__.py\", line 170, in save_result\n    h5_file[group].attrs.modify(name, value)\n  File \"/usr/lib/python2.7/dist-packages/h5py/_hl/attrs.py\", line 152, in modify\n    raise TypeError(\"Shape of data is incompatible with existing attribute\")\nTypeError: Shape of data is incompatible with existing attribute\n\n```\nBut that 'bug' has existed for a long time", "markup": "markdown", "html": "<p>OK so I've fixed the issues raised in this thread so far.</p>\n<p>it's a little bit more code, but since it's in the <code>except:</code> handler it doesn't run except when it needs to and so is not a performance hog. And it should only need to run once when a) a new column is being created or b) a column's datatype needs to promoted to 'object' which should only need to occur once per column at most.</p>\n<p>Remaining issue is saving over the top of existing save results. Turns out HDF5 does not like you changing your mind about the datatype of an attribute:</p>\n<div class=\"codehilite language-python\"><pre><span></span>   <span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">save_result</span><span class=\"p\">(</span><span class=\"s2\">&quot;dfgdh&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/home/cjb7/labscript_suite/lyse/__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">170</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">save_result</span>\n    <span class=\"n\">h5_file</span><span class=\"p\">[</span><span class=\"n\">group</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">attrs</span><span class=\"o\">.</span><span class=\"n\">modify</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/lib/python2.7/dist-packages/h5py/_hl/attrs.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">152</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">modify</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Shape of data is incompatible with existing attribute&quot;</span><span class=\"p\">)</span>\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"n\">Shape</span> <span class=\"n\">of</span> <span class=\"n\">data</span> <span class=\"ow\">is</span> <span class=\"n\">incompatible</span> <span class=\"k\">with</span> <span class=\"n\">existing</span> <span class=\"n\">attribute</span>\n</pre></div>\n\n\n<p>But that 'bug' has existed for a long time</p>", "type": "rendered"}, "created_on": "2017-08-17T19:37:02.013240+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-17T19:37:02.015707+00:00", "type": "pullrequest_comment", "id": 43049579}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43049511.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43049511"}}, "parent": {"id": 43049374, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43049374.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43049374"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "well I was thinking about adding a:\n\n```\n#!python\n\ntry:\n .....\nexcept Exception as e:\n    self.analysis_paused = True\n    error_dialog(\"Something went wrong in the analysis loop. Error was: %s\" % str(e))\n```\n\nto the analysis loop that way the thread would stay alive and everything should be just fine?", "markup": "markdown", "html": "<p>well I was thinking about adding a:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">try</span><span class=\"p\">:</span>\n <span class=\"o\">.....</span>\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">analysis_paused</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n    <span class=\"n\">error_dialog</span><span class=\"p\">(</span><span class=\"s2\">&quot;Something went wrong in the analysis loop. Error was: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>to the analysis loop that way the thread would stay alive and everything should be just fine?</p>", "type": "rendered"}, "created_on": "2017-08-17T19:36:08.480925+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-17T19:36:08.528659+00:00", "type": "pullrequest_comment", "id": 43049511}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43049374.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43049374"}}, "parent": {"id": 43048838, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43048838.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43048838"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "I can 'fix' it, it's trivial - it's just that lyse will not neccesarily be in a sensible state since the exception was unexpected.\n\nI can make it raise the error along with a message that lyse might not be in a sensible state, but continue running. This is useful for development debugging when things are crashing as you're testing them, but is playing with fire if you keep running after an unhandled exception  with actual work - so it definitely needs to tell you that the error is not just ignorable.", "markup": "markdown", "html": "<p>I can 'fix' it, it's trivial - it's just that lyse will not neccesarily be in a sensible state since the exception was unexpected.</p>\n<p>I can make it raise the error along with a message that lyse might not be in a sensible state, but continue running. This is useful for development debugging when things are crashing as you're testing them, but is playing with fire if you keep running after an unhandled exception  with actual work - so it definitely needs to tell you that the error is not just ignorable.</p>", "type": "rendered"}, "created_on": "2017-08-17T19:34:01.946791+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-17T19:34:01.949804+00:00", "type": "pullrequest_comment", "id": 43049374}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"update": {"description": "Fix a bug in updating the dataframe after analysis has produced results. Pandas would raise an exception if you tried to save an iterable item as a value in the dataframe, because of ambiguities as to whether you are trying to set multiple values or not.\r\nSince we are only setting one value at a time, I've changed the form\r\nof the call to pandas to one that is explicitly for setting single\r\nvalues, removing the ambiguity and allowing iterable values to be set.\r\n\r\nI've given @shaunj and @pstarkey commit access to my fork so if either of you merges it and checks the \"close source branch\" box, it should hopefully actually close the branch this time.", "title": "Fix a bug in updating the dataframe", "destination": {"commit": {"hash": "3ec4b2fd3633", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/3ec4b2fd3633.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/3ec4b2fd3633"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "99e5a81d715e", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/99e5a81d715e"}, "html": {"href": "#!/cbillington/lyse/commits/99e5a81d715e"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2017-08-17T19:31:15.390603+00:00"}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43048838.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43048838"}}, "parent": {"id": 43048522, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43048522.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43048522"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "I'll look into  fixing #27 as it's really annoying that you need to restart lyse if something goes wrong.", "markup": "markdown", "html": "<p>I'll look into  fixing <a href=\"#!/labscript_suite/lyse/issues/27/no-way-to-restart-analysis-if-process\" rel=\"nofollow\" title=\"No way to restart analysis if process crashes\" class=\"ap-connect-link\"><s>#27</s></a> as it's really annoying that you need to restart lyse if something goes wrong.</p>", "type": "rendered"}, "created_on": "2017-08-17T19:24:55.609060+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-17T19:24:55.652509+00:00", "type": "pullrequest_comment", "id": 43048838}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43048522.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43048522"}}, "parent": {"id": 43048331, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43048331.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43048331"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "Thanks for that - so this fix needs more work! I'll see what I can do.", "markup": "markdown", "html": "<p>Thanks for that - so this fix needs more work! I'll see what I can do.</p>", "type": "rendered"}, "created_on": "2017-08-17T19:19:04.633280+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-17T19:19:04.635914+00:00", "type": "pullrequest_comment", "id": 43048522}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43048331.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43048331"}}, "parent": {"id": 43047947, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43047947.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43047947"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "After fix there are still exceptions being thrown. I ran the following script:\n\n\n```\n#!python\n\nfrom lyse import *\nser = data(path)\nrun = Run(path)\n\nrun.save_result('x', [1,2,3,4,5])\n```\n\nOn first run I get a exception with lyse analysis loop crashing. \n\n```\n#!python\n\nTraceback (most recent call last):\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/threading.py\", line 754, in run\n    self.__target(*self.__args, **self.__kwargs)\n  File \"/Users/janwerkmann/labscript_suite/lyse/__main__.py\", line 1726, in analysis_loop\n    self.do_singleshot_analysis(filepath)\n  File \"/Users/janwerkmann/labscript_suite/lyse/__main__.py\", line 1764, in do_singleshot_analysis\n    self.shots_model.update_row(file, updated_row_data=updated_data[file])\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/site-packages/qtutils/invoke_in_main.py\", line 121, in f\n    return inmain(fn, *args, **kwargs)\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/site-packages/qtutils/invoke_in_main.py\", line 76, in inmain\n    return get_inmain_result(in_main_later(fn, False, *args, **kwargs))\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/site-packages/qtutils/invoke_in_main.py\", line 99, in get_inmain_result\n    exec('raise type, value, traceback')\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/site-packages/qtutils/invoke_in_main.py\", line 53, in event\n    result = event.fn(*event.args, **event.kwargs)\n  File \"/Users/janwerkmann/labscript_suite/lyse/__main__.py\", line 1344, in update_row\n    self.dataframe.set_value(df_row_index, (group, name) + ('',) * (self.nlevels - 2), updated_row_data[group, name])\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/site-packages/pandas/core/frame.py\", line 1861, in set_value\n    self.loc[index, col] = value\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/site-packages/pandas/core/indexing.py\", line 179, in __setitem__\n    self._setitem_with_indexer(indexer, value)\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/site-packages/pandas/core/indexing.py\", line 341, in _setitem_with_indexer\n    self._setitem_with_indexer(new_indexer, value)\n  File \"/Users/janwerkmann/anaconda/lib/python2.7/site-packages/pandas/core/indexing.py\", line 579, in _setitem_with_indexer\n    raise ValueError('Must have equal len keys and value '\nValueError: Must have equal len keys and value when setting with an iterable\n```\n\nIf I then restart lyse and load the same files as before everything works like a breeze. If I then restart lyse and add files that don't habe 'x' in them it crashes again.", "markup": "markdown", "html": "<p>After fix there are still exceptions being thrown. I ran the following script:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">lyse</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"n\">ser</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n<span class=\"n\">run</span> <span class=\"o\">=</span> <span class=\"n\">Run</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">save_result</span><span class=\"p\">(</span><span class=\"s1\">&#39;x&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">])</span>\n</pre></div>\n\n\n<p>On first run I get a exception with lyse analysis loop crashing. </p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/threading.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">754</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">run</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__target</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/labscript_suite/lyse/__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1726</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">analysis_loop</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">do_singleshot_analysis</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/labscript_suite/lyse/__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1764</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">do_singleshot_analysis</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">shots_model</span><span class=\"o\">.</span><span class=\"n\">update_row</span><span class=\"p\">(</span><span class=\"nb\">file</span><span class=\"p\">,</span> <span class=\"n\">updated_row_data</span><span class=\"o\">=</span><span class=\"n\">updated_data</span><span class=\"p\">[</span><span class=\"nb\">file</span><span class=\"p\">])</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/site-packages/qtutils/invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">121</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">f</span>\n    <span class=\"k\">return</span> <span class=\"n\">inmain</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/site-packages/qtutils/invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">76</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">inmain</span>\n    <span class=\"k\">return</span> <span class=\"n\">get_inmain_result</span><span class=\"p\">(</span><span class=\"n\">in_main_later</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">))</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/site-packages/qtutils/invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">99</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">get_inmain_result</span>\n    <span class=\"k\">exec</span><span class=\"p\">(</span><span class=\"s1\">&#39;raise type, value, traceback&#39;</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/site-packages/qtutils/invoke_in_main.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">53</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">event</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">fn</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/labscript_suite/lyse/__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1344</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">update_row</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"n\">df_row_index</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">,)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">nlevels</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">updated_row_data</span><span class=\"p\">[</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">])</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/site-packages/pandas/core/frame.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1861</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">set_value</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">col</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/site-packages/pandas/core/indexing.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">179</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__setitem__</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_setitem_with_indexer</span><span class=\"p\">(</span><span class=\"n\">indexer</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/site-packages/pandas/core/indexing.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">341</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_setitem_with_indexer</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_setitem_with_indexer</span><span class=\"p\">(</span><span class=\"n\">new_indexer</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/Users/janwerkmann/anaconda/lib/python2.7/site-packages/pandas/core/indexing.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">579</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_setitem_with_indexer</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">&#39;Must have equal len keys and value &#39;</span>\n<span class=\"ne\">ValueError</span><span class=\"p\">:</span> <span class=\"n\">Must</span> <span class=\"n\">have</span> <span class=\"n\">equal</span> <span class=\"nb\">len</span> <span class=\"n\">keys</span> <span class=\"ow\">and</span> <span class=\"n\">value</span> <span class=\"n\">when</span> <span class=\"n\">setting</span> <span class=\"k\">with</span> <span class=\"n\">an</span> <span class=\"n\">iterable</span>\n</pre></div>\n\n\n<p>If I then restart lyse and load the same files as before everything works like a breeze. If I then restart lyse and add files that don't habe 'x' in them it crashes again.</p>", "type": "rendered"}, "created_on": "2017-08-17T19:16:01.969527+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-17T19:16:02.162113+00:00", "type": "pullrequest_comment", "id": 43048331}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43048286.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43048286"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "There is a remaining bug though - if you save_result with a non-iterable, then pandas optimises and makes the column a numerical datatype, and then if you save an iterable you get an error:\n\n\n```\n#!python\n\nimport timeit\nimport pandas as pd\n\nfrom lyse.dataframe_utilities import flat_dict_to_hierarchical_dataframe\n\nd = {('foo', ''): 8, ('bar', ''): None}\n\ndf = flat_dict_to_hierarchical_dataframe(d)\n\ndf.set_value(0, ('baz', ''), 1)\ndf.set_value(1, ('baz', ''), [1, 2])\n\n\n```\nresults in:\n\n\n```\n#!python\n\nTraceback (most recent call last):\n  File \"70.py\", line 11, in <module>\n    df.set_value(1, ('baz', ''), [1, 2])\n  File \"/usr/local/lib/python2.7/dist-packages/pandas/core/frame.py\", line 1861, in set_value\n    self.loc[index, col] = value\n  File \"/usr/local/lib/python2.7/dist-packages/pandas/core/indexing.py\", line 179, in __setitem__\n    self._setitem_with_indexer(indexer, value)\n  File \"/usr/local/lib/python2.7/dist-packages/pandas/core/indexing.py\", line 573, in _setitem_with_indexer\n    setter(labels[0], value)\n  File \"/usr/local/lib/python2.7/dist-packages/pandas/core/indexing.py\", line 513, in setter\n    s._data = s._data.setitem(indexer=pi, value=v)\n  File \"/usr/local/lib/python2.7/dist-packages/pandas/core/internals.py\", line 3203, in setitem\n    return self.apply('setitem', **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/pandas/core/internals.py\", line 3091, in apply\n    applied = getattr(b, f)(**kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/pandas/core/internals.py\", line 746, in setitem\n    values[indexer] = value\nValueError: setting an array element with a sequence.\n```\n\nSo lyse needs to detect the ValueError and be able to tell pandas to convert the dtype of the column to object() when neccesary.", "markup": "markdown", "html": "<p>There is a remaining bug though - if you save_result with a non-iterable, then pandas optimises and makes the column a numerical datatype, and then if you save an iterable you get an error:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">timeit</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"kn\">as</span> <span class=\"nn\">pd</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">lyse.dataframe_utilities</span> <span class=\"kn\">import</span> <span class=\"n\">flat_dict_to_hierarchical_dataframe</span>\n\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"p\">{(</span><span class=\"s1\">&#39;foo&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">):</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;bar&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">):</span> <span class=\"bp\">None</span><span class=\"p\">}</span>\n\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">flat_dict_to_hierarchical_dataframe</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;baz&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;baz&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">),</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n</pre></div>\n\n\n<p>results in:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;70.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;baz&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">),</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pandas/core/frame.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1861</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">set_value</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">col</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pandas/core/indexing.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">179</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__setitem__</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_setitem_with_indexer</span><span class=\"p\">(</span><span class=\"n\">indexer</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pandas/core/indexing.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">573</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_setitem_with_indexer</span>\n    <span class=\"n\">setter</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pandas/core/indexing.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">513</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">setter</span>\n    <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">_data</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">_data</span><span class=\"o\">.</span><span class=\"n\">setitem</span><span class=\"p\">(</span><span class=\"n\">indexer</span><span class=\"o\">=</span><span class=\"n\">pi</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">v</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pandas/core/internals.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">3203</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">setitem</span>\n    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"s1\">&#39;setitem&#39;</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pandas/core/internals.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">3091</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"nb\">apply</span>\n    <span class=\"n\">applied</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">)(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pandas/core/internals.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">746</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">setitem</span>\n    <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"n\">indexer</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n<span class=\"ne\">ValueError</span><span class=\"p\">:</span> <span class=\"n\">setting</span> <span class=\"n\">an</span> <span class=\"n\">array</span> <span class=\"n\">element</span> <span class=\"k\">with</span> <span class=\"n\">a</span> <span class=\"n\">sequence</span><span class=\"o\">.</span>\n</pre></div>\n\n\n<p>So lyse needs to detect the ValueError and be able to tell pandas to convert the dtype of the column to object() when neccesary.</p>", "type": "rendered"}, "created_on": "2017-08-17T19:15:17.957754+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-17T19:15:17.960557+00:00", "type": "pullrequest_comment", "id": 43048286}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43047947.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43047947"}}, "parent": {"id": 43047643, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43047643.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43047643"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "Interesting I'm wondering why this works with lyse code and not with other code. I'll try to run ```save_value('x', [1, 2, 3])``` in lyse before and after this change and will report back on whether that works.", "markup": "markdown", "html": "<p>Interesting I'm wondering why this works with lyse code and not with other code. I'll try to run <code>save_value('x', [1, 2, 3])</code> in lyse before and after this change and will report back on whether that works.</p>", "type": "rendered"}, "created_on": "2017-08-17T19:11:18.632421+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-17T19:11:18.682503+00:00", "type": "pullrequest_comment", "id": 43047947}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43047643.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43047643"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "here we go, this one demonstrates it (though it uses lyse to do so):\n\n\n```\n#!python\n\nimport timeit\nimport pandas as pd\n\nfrom lyse.dataframe_utilities import flat_dict_to_hierarchical_dataframe\n\nd = {('foo', ''): 8, ('bar', ''): None}\n\ndf = flat_dict_to_hierarchical_dataframe(d)\n\ndf.set_value(0, ('bar', ''), [3, 4])\n\ndf.loc[0, ('bar', '')] = [3, 4]\n```\n", "markup": "markdown", "html": "<p>here we go, this one demonstrates it (though it uses lyse to do so):</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">timeit</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"kn\">as</span> <span class=\"nn\">pd</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">lyse.dataframe_utilities</span> <span class=\"kn\">import</span> <span class=\"n\">flat_dict_to_hierarchical_dataframe</span>\n\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"p\">{(</span><span class=\"s1\">&#39;foo&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">):</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;bar&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">):</span> <span class=\"bp\">None</span><span class=\"p\">}</span>\n\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">flat_dict_to_hierarchical_dataframe</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;bar&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">),</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">])</span>\n\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;bar&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-08-17T19:07:36.584392+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-17T19:07:36.587429+00:00", "type": "pullrequest_comment", "id": 43047643}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43047181.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43047181"}}, "parent": {"id": 43044286, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43044286.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43044286"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "Thanks for testing! The performance improvement is icing on the cake (36 times faster for your test code, wow!). \n\nI'm not able to reproduce in self-contained code, so I'm not sure to exactly what situation the bug applies. But if you revert lyse to before the fix, and try a save_value('x', [1, 2, 3]) from an analysis routine, that's where I get the exception.", "markup": "markdown", "html": "<p>Thanks for testing! The performance improvement is icing on the cake (36 times faster for your test code, wow!). </p>\n<p>I'm not able to reproduce in self-contained code, so I'm not sure to exactly what situation the bug applies. But if you revert lyse to before the fix, and try a save_value('x', [1, 2, 3]) from an analysis routine, that's where I get the exception.</p>", "type": "rendered"}, "created_on": "2017-08-17T19:01:29.710264+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-17T19:01:29.712510+00:00", "type": "pullrequest_comment", "id": 43047181}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43044286.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43044286"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "I tried running our usual routines on some data and everything seems to work just fine\n\nI also tested ```set_value``` for performance and it seems to be a lot faster than loc. So thats great.\nThis is the code I used for testing performance:\n```\n#!python\n\nimport timeit\nimport pandas as pd\n\nd = {'one' : pd.Series([1., 2., 3.], index=['a', 'b', 'c']), 'two' : pd.Series([1., 2., 3., 4.], index=['a', 'b', 'c', 'd'])}\ndf = pd.DataFrame(d)\n\ndef test():\n    df.set_value('b', 'two', 5)\n\nprint(timeit.timeit(test, number=10000))\n\ndef test():\n    df.loc['b', 'two'] = 5\n\nprint(timeit.timeit(test, number=10000))\n```\n\nHowever I was net able to understand what this fixes. Neither  ```df.loc['b', 'two'] = [5, 6]``` nor  ```df.set_value('b', 'two', [5, 6])```\nwork for me (if run in the script above) . Am I understanding you description of the bug wrong? Could you provide some code that shows what is not working with ```loc``` and now works with ```set_value```?", "markup": "markdown", "html": "<p>I tried running our usual routines on some data and everything seems to work just fine</p>\n<p>I also tested <code>set_value</code> for performance and it seems to be a lot faster than loc. So thats great.\nThis is the code I used for testing performance:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">timeit</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"kn\">as</span> <span class=\"nn\">pd</span>\n\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;one&#39;</span> <span class=\"p\">:</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">([</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"p\">,</span> <span class=\"mf\">3.</span><span class=\"p\">],</span> <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;c&#39;</span><span class=\"p\">]),</span> <span class=\"s1\">&#39;two&#39;</span> <span class=\"p\">:</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">([</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"p\">,</span> <span class=\"mf\">3.</span><span class=\"p\">,</span> <span class=\"mf\">4.</span><span class=\"p\">],</span> <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;c&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;d&#39;</span><span class=\"p\">])}</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test</span><span class=\"p\">():</span>\n    <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;two&#39;</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">timeit</span><span class=\"o\">.</span><span class=\"n\">timeit</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">))</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test</span><span class=\"p\">():</span>\n    <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;two&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">timeit</span><span class=\"o\">.</span><span class=\"n\">timeit</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>However I was net able to understand what this fixes. Neither  <code>df.loc['b', 'two'] = [5, 6]</code> nor  <code>df.set_value('b', 'two', [5, 6])</code>\nwork for me (if run in the script above) . Am I understanding you description of the bug wrong? Could you provide some code that shows what is not working with <code>loc</code> and now works with <code>set_value</code>?</p>", "type": "rendered"}, "created_on": "2017-08-17T18:21:09.679370+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-17T18:21:09.776953+00:00", "type": "pullrequest_comment", "id": 43044286}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43028718.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43028718"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "Will merge on Monday i there are no comments.", "markup": "markdown", "html": "<p>Will merge on Monday i there are no comments.</p>", "type": "rendered"}, "created_on": "2017-08-17T15:13:04.697616+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-17T15:13:04.700410+00:00", "type": "pullrequest_comment", "id": 43028718}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"update": {"description": "Fix a bug in updating the dataframe after analysis has produced results. Pandas would raise an exception if you tried to save an iterable item as a value in the dataframe, because of ambiguities as to whether you are trying to set multiple values or not.\r\nSince we are only setting one value at a time, I've changed the form\r\nof the call to pandas to one that is explicitly for setting single\r\nvalues, removing the ambiguity and allowing iterable values to be set.\r\n\r\nI've given @shaunj and @pstarkey commit access to my fork so if either of you merges it and checks the \"close source branch\" box, it should hopefully actually close the branch this time.", "title": "Fix a bug in updating the dataframe", "destination": {"commit": {"hash": "3ec4b2fd3633", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/3ec4b2fd3633.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/3ec4b2fd3633"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "91be9ab9370f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/91be9ab9370f"}, "html": {"href": "#!/cbillington/lyse/commits/91be9ab9370f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2017-08-17T05:08:25.305450+00:00"}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"update": {"description": "Fix a bug in updating the dataframe after analysis has produced results. Pandas would raise an exception if you tried to save an iterable item as a value in the dataframe, because of ambiguities as to whether you are trying to set multiple values or not.\r\nSince we are only setting one value at a time, I've changed the form\r\nof the call to pandas to one that is explicitly for setting single\r\nvalues, removing the ambiguity and allowing iterable values to be set.", "title": "Fix a bug in updating the dataframe", "destination": {"commit": {"hash": "3ec4b2fd3633", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/3ec4b2fd3633.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/3ec4b2fd3633"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "91be9ab9370f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/91be9ab9370f"}, "html": {"href": "#!/cbillington/lyse/commits/91be9ab9370f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2017-08-17T02:07:00.829577+00:00"}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}, {"update": {"description": "Fix a bug in updating the dataframe after analysis has produced results. Pandas would raise an exception if you tried to save an iterable item as a value in the dataframe, because of ambiguities as to whether you are trying to set multiple values or not.\r\nSince we are only setting one value at a time, I've changed the form\r\nof the call to pandas to one that is explicitly for setting single\r\nvalues, removing the ambiguity and allowing iterable values to be set.", "title": "Fix a bug in updating the dataframe", "destination": {"commit": {"hash": "3ec4b2fd3633", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/3ec4b2fd3633.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/3ec4b2fd3633"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "91be9ab9370f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/91be9ab9370f"}, "html": {"href": "#!/cbillington/lyse/commits/91be9ab9370f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2017-08-17T02:07:00.769766+00:00"}, "pull_request": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}}]}