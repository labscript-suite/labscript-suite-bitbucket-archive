{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43044286.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43044286"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "I tried running our usual routines on some data and everything seems to work just fine\n\nI also tested ```set_value``` for performance and it seems to be a lot faster than loc. So thats great.\nThis is the code I used for testing performance:\n```\n#!python\n\nimport timeit\nimport pandas as pd\n\nd = {'one' : pd.Series([1., 2., 3.], index=['a', 'b', 'c']), 'two' : pd.Series([1., 2., 3., 4.], index=['a', 'b', 'c', 'd'])}\ndf = pd.DataFrame(d)\n\ndef test():\n    df.set_value('b', 'two', 5)\n\nprint(timeit.timeit(test, number=10000))\n\ndef test():\n    df.loc['b', 'two'] = 5\n\nprint(timeit.timeit(test, number=10000))\n```\n\nHowever I was net able to understand what this fixes. Neither  ```df.loc['b', 'two'] = [5, 6]``` nor  ```df.set_value('b', 'two', [5, 6])```\nwork for me (if run in the script above) . Am I understanding you description of the bug wrong? Could you provide some code that shows what is not working with ```loc``` and now works with ```set_value```?", "markup": "markdown", "html": "<p>I tried running our usual routines on some data and everything seems to work just fine</p>\n<p>I also tested <code>set_value</code> for performance and it seems to be a lot faster than loc. So thats great.\nThis is the code I used for testing performance:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">timeit</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"kn\">as</span> <span class=\"nn\">pd</span>\n\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;one&#39;</span> <span class=\"p\">:</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">([</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"p\">,</span> <span class=\"mf\">3.</span><span class=\"p\">],</span> <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;c&#39;</span><span class=\"p\">]),</span> <span class=\"s1\">&#39;two&#39;</span> <span class=\"p\">:</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">([</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"p\">,</span> <span class=\"mf\">3.</span><span class=\"p\">,</span> <span class=\"mf\">4.</span><span class=\"p\">],</span> <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;c&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;d&#39;</span><span class=\"p\">])}</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test</span><span class=\"p\">():</span>\n    <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;two&#39;</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">timeit</span><span class=\"o\">.</span><span class=\"n\">timeit</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">))</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test</span><span class=\"p\">():</span>\n    <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;two&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">timeit</span><span class=\"o\">.</span><span class=\"n\">timeit</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>However I was net able to understand what this fixes. Neither  <code>df.loc['b', 'two'] = [5, 6]</code> nor  <code>df.set_value('b', 'two', [5, 6])</code>\nwork for me (if run in the script above) . Am I understanding you description of the bug wrong? Could you provide some code that shows what is not working with <code>loc</code> and now works with <code>set_value</code>?</p>", "type": "rendered"}, "created_on": "2017-08-17T18:21:09.679370+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-17T18:21:09.776953+00:00", "type": "pullrequest_comment", "id": 43044286}