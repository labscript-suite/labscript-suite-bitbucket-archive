{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments/43048286.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31/_/diff#comment-43048286"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 31, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}}, "title": "Fix a bug in updating the dataframe"}, "content": {"raw": "There is a remaining bug though - if you save_result with a non-iterable, then pandas optimises and makes the column a numerical datatype, and then if you save an iterable you get an error:\n\n\n```\n#!python\n\nimport timeit\nimport pandas as pd\n\nfrom lyse.dataframe_utilities import flat_dict_to_hierarchical_dataframe\n\nd = {('foo', ''): 8, ('bar', ''): None}\n\ndf = flat_dict_to_hierarchical_dataframe(d)\n\ndf.set_value(0, ('baz', ''), 1)\ndf.set_value(1, ('baz', ''), [1, 2])\n\n\n```\nresults in:\n\n\n```\n#!python\n\nTraceback (most recent call last):\n  File \"70.py\", line 11, in <module>\n    df.set_value(1, ('baz', ''), [1, 2])\n  File \"/usr/local/lib/python2.7/dist-packages/pandas/core/frame.py\", line 1861, in set_value\n    self.loc[index, col] = value\n  File \"/usr/local/lib/python2.7/dist-packages/pandas/core/indexing.py\", line 179, in __setitem__\n    self._setitem_with_indexer(indexer, value)\n  File \"/usr/local/lib/python2.7/dist-packages/pandas/core/indexing.py\", line 573, in _setitem_with_indexer\n    setter(labels[0], value)\n  File \"/usr/local/lib/python2.7/dist-packages/pandas/core/indexing.py\", line 513, in setter\n    s._data = s._data.setitem(indexer=pi, value=v)\n  File \"/usr/local/lib/python2.7/dist-packages/pandas/core/internals.py\", line 3203, in setitem\n    return self.apply('setitem', **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/pandas/core/internals.py\", line 3091, in apply\n    applied = getattr(b, f)(**kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/pandas/core/internals.py\", line 746, in setitem\n    values[indexer] = value\nValueError: setting an array element with a sequence.\n```\n\nSo lyse needs to detect the ValueError and be able to tell pandas to convert the dtype of the column to object() when neccesary.", "markup": "markdown", "html": "<p>There is a remaining bug though - if you save_result with a non-iterable, then pandas optimises and makes the column a numerical datatype, and then if you save an iterable you get an error:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">timeit</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"kn\">as</span> <span class=\"nn\">pd</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">lyse.dataframe_utilities</span> <span class=\"kn\">import</span> <span class=\"n\">flat_dict_to_hierarchical_dataframe</span>\n\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"p\">{(</span><span class=\"s1\">&#39;foo&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">):</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;bar&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">):</span> <span class=\"bp\">None</span><span class=\"p\">}</span>\n\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">flat_dict_to_hierarchical_dataframe</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;baz&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;baz&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">),</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n</pre></div>\n\n\n<p>results in:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;70.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">&#39;baz&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">),</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pandas/core/frame.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1861</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">set_value</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">col</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pandas/core/indexing.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">179</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__setitem__</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_setitem_with_indexer</span><span class=\"p\">(</span><span class=\"n\">indexer</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pandas/core/indexing.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">573</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_setitem_with_indexer</span>\n    <span class=\"n\">setter</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pandas/core/indexing.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">513</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">setter</span>\n    <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">_data</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">_data</span><span class=\"o\">.</span><span class=\"n\">setitem</span><span class=\"p\">(</span><span class=\"n\">indexer</span><span class=\"o\">=</span><span class=\"n\">pi</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">v</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pandas/core/internals.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">3203</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">setitem</span>\n    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"s1\">&#39;setitem&#39;</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pandas/core/internals.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">3091</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"nb\">apply</span>\n    <span class=\"n\">applied</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">)(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pandas/core/internals.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">746</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">setitem</span>\n    <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"n\">indexer</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n<span class=\"ne\">ValueError</span><span class=\"p\">:</span> <span class=\"n\">setting</span> <span class=\"n\">an</span> <span class=\"n\">array</span> <span class=\"n\">element</span> <span class=\"k\">with</span> <span class=\"n\">a</span> <span class=\"n\">sequence</span><span class=\"o\">.</span>\n</pre></div>\n\n\n<p>So lyse needs to detect the ValueError and be able to tell pandas to convert the dtype of the column to object() when neccesary.</p>", "type": "rendered"}, "created_on": "2017-08-17T19:15:17.957754+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-17T19:15:17.960557+00:00", "type": "pullrequest_comment", "id": 43048286}