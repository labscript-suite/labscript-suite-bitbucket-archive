{"pagelen": 50, "values": [{"update": {"description": "Support integer indexing of the lyse DataFrame, using a MultiIndex of: `['sequence_index', 'run number', 'run repeat']`\r\n\r\nThis can be enabled in labconfig using:\r\n\r\n    [lyse]\r\n    integer_indexing = true\r\n\r\nIf this section or option are absent from the labconfig file, fallback to the existing MultiIndex of: `['sequence', 'run time']`.\r\n\r\nThis feature supports much easier use of `pd.DataFrame.loc`, e.g.\r\n\r\n```python\r\ndf = lyse.data()\r\ndf.loc[56]       # sequence 56 MultiIndexed by ['run number', 'repeat number']\r\ndf.loc[56:60]    # sequences 56 through 60 inclusive\r\ndf.loc[56,4]     # run number 4 of sequence 56, indexed by 'repeat number'\r\ndf.loc[56,2:6,:] # runs 2 through 6 (inclusive) of sequence 56\r\n```\r\n\r\nEnabling this feature changes the vertical header item to read, e.g. '105. 0056 \\| 0001 \\| 0106'.\r\n\r\nThis is far more useful, as these integers can all be used to construct a `pd.DataFrame.loc` or `pd.DataFrame.iloc` call to the lyse DataFrame.\r\n\r\nThe main problem with this feature is that the MultiIndex might not be unique if new shots are sent to or loaded into lyse with an existing sequence\\_index, e.g. if the sequence\\_index gets reset in runmanager or shots are loaded from multiple days. This can be avoided in user-side analysis code by boolean filtering based on the 'run time' column.", "title": "Integer indexing of the lyse DataFrame", "destination": {"commit": {"hash": "e58d25d6b8ef", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/e58d25d6b8ef.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/e58d25d6b8ef"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "04751559ac2d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse/commit/04751559ac2d"}, "html": {"href": "#!/monashspinor/lyse/commits/04751559ac2d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse"}, "html": {"href": "#!/monashspinor/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashspinor/lyse", "uuid": "{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}"}, "branch": {"name": "integer_indexing"}}, "state": "MERGED", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "date": "2017-11-21T01:32:55.907388+00:00"}, "pull_request": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39"}}, "title": "Integer indexing of the lyse DataFrame"}}, {"update": {"description": "Support integer indexing of the lyse DataFrame, using a MultiIndex of: `['sequence_index', 'run number', 'run repeat']`\r\n\r\nThis can be enabled in labconfig using:\r\n\r\n    [lyse]\r\n    integer_indexing = true\r\n\r\nIf this section or option are absent from the labconfig file, fallback to the existing MultiIndex of: `['sequence', 'run time']`.\r\n\r\nThis feature supports much easier use of `pd.DataFrame.loc`, e.g.\r\n\r\n```python\r\ndf = lyse.data()\r\ndf.loc[56]       # sequence 56 MultiIndexed by ['run number', 'repeat number']\r\ndf.loc[56:60]    # sequences 56 through 60 inclusive\r\ndf.loc[56,4]     # run number 4 of sequence 56, indexed by 'repeat number'\r\ndf.loc[56,2:6,:] # runs 2 through 6 (inclusive) of sequence 56\r\n```\r\n\r\nEnabling this feature changes the vertical header item to read, e.g. '105. 0056 \\| 0001 \\| 0106'.\r\n\r\nThis is far more useful, as these integers can all be used to construct a `pd.DataFrame.loc` or `pd.DataFrame.iloc` call to the lyse DataFrame.\r\n\r\nThe main problem with this feature is that the MultiIndex might not be unique if new shots are sent to or loaded into lyse with an existing sequence\\_index, e.g. if the sequence\\_index gets reset in runmanager or shots are loaded from multiple days. This can be avoided in user-side analysis code by boolean filtering based on the 'run time' column.", "title": "Integer indexing of the lyse DataFrame", "destination": {"commit": {"hash": "e58d25d6b8ef", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/e58d25d6b8ef.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/e58d25d6b8ef"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "04751559ac2d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse/commit/04751559ac2d"}, "html": {"href": "#!/monashspinor/lyse/commits/04751559ac2d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse"}, "html": {"href": "#!/monashspinor/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashspinor/lyse", "uuid": "{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}"}, "branch": {"name": "integer_indexing"}}, "state": "OPEN", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "date": "2017-11-21T01:32:55.255978+00:00"}, "pull_request": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39"}}, "title": "Integer indexing of the lyse DataFrame"}}, {"approval": {"date": "2017-11-15T14:51:49.491091+00:00", "pullrequest": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39"}}, "title": "Integer indexing of the lyse DataFrame"}, "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}}, "pull_request": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39"}}, "title": "Integer indexing of the lyse DataFrame"}}, {"update": {"description": "Support integer indexing of the lyse DataFrame, using a MultiIndex of: `['sequence_index', 'run number', 'run repeat']`\r\n\r\nThis can be enabled in labconfig using:\r\n\r\n    [lyse]\r\n    integer_indexing = true\r\n\r\nIf this section or option are absent from the labconfig file, fallback to the existing MultiIndex of: `['sequence', 'run time']`.\r\n\r\nThis feature supports much easier use of `pd.DataFrame.loc`, e.g.\r\n\r\n```python\r\ndf = lyse.data()\r\ndf.loc[56]       # sequence 56 MultiIndexed by ['run number', 'repeat number']\r\ndf.loc[56:60]    # sequences 56 through 60 inclusive\r\ndf.loc[56,4]     # run number 4 of sequence 56, indexed by 'repeat number'\r\ndf.loc[56,2:6,:] # runs 2 through 6 (inclusive) of sequence 56\r\n```\r\n\r\nEnabling this feature changes the vertical header item to read, e.g. '105. 0056 \\| 0001 \\| 0106'.\r\n\r\nThis is far more useful, as these integers can all be used to construct a `pd.DataFrame.loc` or `pd.DataFrame.iloc` call to the lyse DataFrame.\r\n\r\nThe main problem with this feature is that the MultiIndex might not be unique if new shots are sent to or loaded into lyse with an existing sequence\\_index, e.g. if the sequence\\_index gets reset in runmanager or shots are loaded from multiple days. This can be avoided in user-side analysis code by boolean filtering based on the 'run time' column.", "title": "Integer indexing of the lyse DataFrame", "destination": {"commit": {"hash": "e58d25d6b8ef", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/e58d25d6b8ef.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/e58d25d6b8ef"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "04751559ac2d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse/commit/04751559ac2d"}, "html": {"href": "#!/monashspinor/lyse/commits/04751559ac2d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse"}, "html": {"href": "#!/monashspinor/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashspinor/lyse", "uuid": "{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}"}, "branch": {"name": "integer_indexing"}}, "state": "OPEN", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "date": "2017-11-15T14:48:58.691886+00:00"}, "pull_request": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39"}}, "title": "Integer indexing of the lyse DataFrame"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39/comments/49650334.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39/_/diff#comment-49650334"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39"}}, "title": "Integer indexing of the lyse DataFrame"}, "content": {"raw": "The latest commit seems to have introduced some debug lines and commented unused code to dataframe\\_utilities.py \\(lines 146, 149 and 154-157\\). I think they should be removed.", "markup": "markdown", "html": "<p>The latest commit seems to have introduced some debug lines and commented unused code to dataframe_utilities.py (lines 146, 149 and 154-157). I think they should be removed.</p>", "type": "rendered"}, "created_on": "2017-11-15T14:26:22.413480+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-11-15T14:26:22.462512+00:00", "type": "pullrequest_comment", "id": 49650334}, "pull_request": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39"}}, "title": "Integer indexing of the lyse DataFrame"}}, {"update": {"description": "Support integer indexing of the lyse DataFrame, using a MultiIndex of: `['sequence_index', 'run number', 'run repeat']`\r\n\r\nThis can be enabled in labconfig using:\r\n\r\n    [lyse]\r\n    integer_indexing = true\r\n\r\nIf this section or option are absent from the labconfig file, fallback to the existing MultiIndex of: `['sequence', 'run time']`.\r\n\r\nThis feature supports much easier use of `pd.DataFrame.loc`, e.g.\r\n\r\n```python\r\ndf = lyse.data()\r\ndf.loc[56]       # sequence 56 MultiIndexed by ['run number', 'repeat number']\r\ndf.loc[56:60]    # sequences 56 through 60 inclusive\r\ndf.loc[56,4]     # run number 4 of sequence 56, indexed by 'repeat number'\r\ndf.loc[56,2:6,:] # runs 2 through 6 (inclusive) of sequence 56\r\n```\r\n\r\nEnabling this feature changes the vertical header item to read, e.g. '105. 0056 \\| 0001 \\| 0106'.\r\n\r\nThis is far more useful, as these integers can all be used to construct a `pd.DataFrame.loc` or `pd.DataFrame.iloc` call to the lyse DataFrame.\r\n\r\nThe main problem with this feature is that the MultiIndex might not be unique if new shots are sent to or loaded into lyse with an existing sequence\\_index, e.g. if the sequence\\_index gets reset in runmanager or shots are loaded from multiple days. This can be avoided in user-side analysis code by boolean filtering based on the 'run time' column.", "title": "Integer indexing of the lyse DataFrame", "destination": {"commit": {"hash": "e58d25d6b8ef", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/e58d25d6b8ef.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/e58d25d6b8ef"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e77fcc39ba6a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse/commit/e77fcc39ba6a"}, "html": {"href": "#!/monashspinor/lyse/commits/e77fcc39ba6a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse"}, "html": {"href": "#!/monashspinor/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashspinor/lyse", "uuid": "{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}"}, "branch": {"name": "integer_indexing"}}, "state": "OPEN", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "date": "2017-11-15T13:57:25.623714+00:00"}, "pull_request": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39"}}, "title": "Integer indexing of the lyse DataFrame"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39/comments/49351045.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39/_/diff#comment-49351045"}}, "parent": {"id": 49304763, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39/comments/49304763.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39/_/diff#comment-49304763"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39"}}, "title": "Integer indexing of the lyse DataFrame"}, "content": {"raw": "This pull request should still be able to proceed\\(in my opinion\\) as the integer indexing is optional and `sequence_index` is already present in lyse code anyway.\n\nBefore changing the naming of `run repeat` I think we should wait on what others think of it.\n\nI'll approve this pull request once the `NaN` bug on line 62 of dataframe\\_utilities is fixed.", "markup": "markdown", "html": "<p>This pull request should still be able to proceed(in my opinion) as the integer indexing is optional and <code>sequence_index</code> is already present in lyse code anyway.</p>\n<p>Before changing the naming of <code>run repeat</code> I think we should wait on what others think of it.</p>\n<p>I'll approve this pull request once the <code>NaN</code> bug on line 62 of dataframe_utilities is fixed.</p>", "type": "rendered"}, "created_on": "2017-11-11T10:04:18.767211+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-11-11T10:04:48.733505+00:00", "type": "pullrequest_comment", "id": 49351045}, "pull_request": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39"}}, "title": "Integer indexing of the lyse DataFrame"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39/comments/49304763.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39/_/diff#comment-49304763"}}, "parent": {"id": 49233601, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39/comments/49233601.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39/_/diff#comment-49233601"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39"}}, "title": "Integer indexing of the lyse DataFrame"}, "content": {"raw": "`sequence_index` exists only in [spielman/runmanager](#!/spielman/runmanager) presently, which I had not realised when issuing this pull request. See [here](#!/spielman/runmanager/src/c7d999113bf78c25c9683c3f96f06043014a8294/__main__.py?at=default&fileviewer=file-view-default), for example. This feature is thus dependent on runmanager being updated accordingly.\n\nIn the meantime, pull request #38 \\(and the associated request for blacs\\) can proceed, upon changing `run repeat` to something more appropriate.", "markup": "markdown", "html": "<p><code>sequence_index</code> exists only in <a data-is-external-link=\"true\" href=\"#!/spielman/runmanager\" rel=\"nofollow\">spielman/runmanager</a> presently, which I had not realised when issuing this pull request. See <a data-is-external-link=\"true\" href=\"#!/spielman/runmanager/src/c7d999113bf78c25c9683c3f96f06043014a8294/__main__.py?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow\">here</a>, for example. This feature is thus dependent on runmanager being updated accordingly.</p>\n<p>In the meantime, <a href=\"#!/labscript_suite/lyse/pull-requests/38/extract-the-run-repeat-attribute-from-shot\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #38</a> (and the associated request for blacs) can proceed, upon changing <code>run repeat</code> to something more appropriate.</p>", "type": "rendered"}, "created_on": "2017-11-10T14:17:31.966988+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": "2017-11-10T14:17:31.970020+00:00", "type": "pullrequest_comment", "id": 49304763}, "pull_request": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39"}}, "title": "Integer indexing of the lyse DataFrame"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39/comments/49233601.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39/_/diff#comment-49233601"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39"}}, "title": "Integer indexing of the lyse DataFrame"}, "content": {"raw": "I tested this and it works just fine \\(except for the one comment that I left in the code\\). \n\nI'm not sure about the naming of `run repeat`. Something along the lines of `repetition`, `repetition number`, `rep number` or `n_rep` would be a bit more descriptive in my opinion.\n\nAlso when or where is `sequence_index` being set in the h5 files? I can only find references to it in lyse.\n\n    grep -r 'sequence_index' --include '*.py' *\n    lyse/__init__.py:                df.set_index(['sequence_index', 'run number', 'run repeat'], inplace=True, drop=False)\n    lyse/dataframe_utilities.py:            row['sequence_index'] = h5_file.attrs['sequence_index']\n    lyse/dataframe_utilities.py:            row['sequence_index'] = None\n    lyse/__main__.py:                header_cols = ['sequence_index', 'run number', 'run repeat']", "markup": "markdown", "html": "<p>I tested this and it works just fine (except for the one comment that I left in the code). </p>\n<p>I'm not sure about the naming of <code>run repeat</code>. Something along the lines of <code>repetition</code>, <code>repetition number</code>, <code>rep number</code> or <code>n_rep</code> would be a bit more descriptive in my opinion.</p>\n<p>Also when or where is <code>sequence_index</code> being set in the h5 files? I can only find references to it in lyse.</p>\n<div class=\"codehilite\"><pre><span></span>grep -r &#39;sequence_index&#39; --include &#39;*.py&#39; *\nlyse/__init__.py:                df.set_index([&#39;sequence_index&#39;, &#39;run number&#39;, &#39;run repeat&#39;], inplace=True, drop=False)\nlyse/dataframe_utilities.py:            row[&#39;sequence_index&#39;] = h5_file.attrs[&#39;sequence_index&#39;]\nlyse/dataframe_utilities.py:            row[&#39;sequence_index&#39;] = None\nlyse/__main__.py:                header_cols = [&#39;sequence_index&#39;, &#39;run number&#39;, &#39;run repeat&#39;]\n</pre></div>", "type": "rendered"}, "created_on": "2017-11-09T19:57:28.666580+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-11-09T19:57:28.733352+00:00", "type": "pullrequest_comment", "id": 49233601}, "pull_request": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39"}}, "title": "Integer indexing of the lyse DataFrame"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39/comments/49231672.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39/_/diff#comment-49231672"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39"}}, "title": "Integer indexing of the lyse DataFrame"}, "content": {"raw": "this should be changed to `row['run number'] = float('nan')`", "markup": "markdown", "html": "<p>this should be changed to <code>row['run number'] = float('nan')</code></p>", "type": "rendered"}, "created_on": "2017-11-09T19:38:31.439869+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "inline": {}, "updated_on": "2017-11-09T19:38:31.470899+00:00", "type": "pullrequest_comment", "id": 49231672}, "pull_request": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39"}}, "title": "Integer indexing of the lyse DataFrame"}}, {"update": {"description": "Support integer indexing of the lyse DataFrame, using a MultiIndex of: `['sequence_index', 'run number', 'run repeat']`\r\n\r\nThis can be enabled in labconfig using:\r\n\r\n    [lyse]\r\n    integer_indexing = true\r\n\r\nIf this section or option are absent from the labconfig file, fallback to the existing MultiIndex of: `['sequence', 'run time']`.\r\n\r\nThis feature supports much easier use of `pd.DataFrame.loc`, e.g.\r\n\r\n```python\r\ndf = lyse.data()\r\ndf.loc[56]       # sequence 56 MultiIndexed by ['run number', 'repeat number']\r\ndf.loc[56:60]    # sequences 56 through 60 inclusive\r\ndf.loc[56,4]     # run number 4 of sequence 56, indexed by 'repeat number'\r\ndf.loc[56,2:6,:] # runs 2 through 6 (inclusive) of sequence 56\r\n```\r\n\r\nEnabling this feature changes the vertical header item to read, e.g. '105. 0056 \\| 0001 \\| 0106'.\r\n\r\nThis is far more useful, as these integers can all be used to construct a `pd.DataFrame.loc` or `pd.DataFrame.iloc` call to the lyse DataFrame.\r\n\r\nThe main problem with this feature is that the MultiIndex might not be unique if new shots are sent to or loaded into lyse with an existing sequence\\_index, e.g. if the sequence\\_index gets reset in runmanager or shots are loaded from multiple days. This can be avoided in user-side analysis code by boolean filtering based on the 'run time' column.", "title": "Integer indexing of the lyse DataFrame", "destination": {"commit": {"hash": "608f3b68bfbc", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/608f3b68bfbc.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/608f3b68bfbc"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "1d232b2178ef", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse/commit/1d232b2178ef"}, "html": {"href": "#!/monashspinor/lyse/commits/1d232b2178ef"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse"}, "html": {"href": "#!/monashspinor/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashspinor/lyse", "uuid": "{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}"}, "branch": {"name": "integer_indexing"}}, "state": "OPEN", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "date": "2017-11-09T03:38:07.042137+00:00"}, "pull_request": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39"}}, "title": "Integer indexing of the lyse DataFrame"}}, {"update": {"description": "Support integer indexing of the lyse DataFrame, using a MultiIndex of: `['sequence_index', 'run number', 'run repeat']`\r\n\r\nThis can be enabled in labconfig using:\r\n\r\n    [lyse]\r\n    integer_indexing = true\r\n\r\nIf this section or option are absent from the labconfig file, fallback to the existing MultiIndex of `['sequence', 'run time']`.\r\n\r\nThis feature supports much easier use of `pd.DataFrame.loc`, e.g.\r\n\r\n```python\r\ndf = lyse.data()\r\ndf.loc[56]       # sequence 56 MultiIndexed by ['run number', 'repeat number']\r\ndf.loc[56:60]    # sequences 56 through 60 inclusive\r\ndf.loc[56,4]     # run number 4 of sequence 56, indexed by 'repeat number'\r\ndf.loc[56,2:6,:] # runs 2 through 6 (inclusive) of sequence 56\r\n```\r\n\r\nEnabling this feature changes the vertical header item to read, e.g. 105. 0056 \\| 0001 \\| 0106\r\n\r\nThis is far more useful, as these integers can all be used to construct a `pd.DataFrame.loc` or `pd.DataFrame.iloc` call to the lyse DataFrame.\r\n\r\nThe main problem with this feature is that the MultiIndex might not be unique if new shots are sent to or loaded into lyse with an existing sequence\\_index, e.g. if the sequence\\_index gets reset in runmanager or shots are loaded from multiple days. This can be avoided in user-side analysis code by boolean filtering based on the 'run time' column.", "title": "Integer indexing of the lyse DataFrame", "destination": {"commit": {"hash": "608f3b68bfbc", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/608f3b68bfbc.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/608f3b68bfbc"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "1d232b2178ef", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse/commit/1d232b2178ef"}, "html": {"href": "#!/monashspinor/lyse/commits/1d232b2178ef"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse"}, "html": {"href": "#!/monashspinor/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashspinor/lyse", "uuid": "{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}"}, "branch": {"name": "integer_indexing"}}, "state": "OPEN", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "date": "2017-11-09T03:25:14.435589+00:00"}, "pull_request": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39"}}, "title": "Integer indexing of the lyse DataFrame"}}, {"update": {"description": "Support integer indexing of the lyse DataFrame, using a MultiIndex of: `['sequence_index', 'run number', 'run repeat']`\r\n\r\nThis can be enabled in labconfig using:\r\n\r\n    [lyse]\r\n    integer_indexing = true\r\n\r\nIf this section or option are absent from the labconfig file, fallback to the existing MultiIndex of `['sequence', 'run time']`.\r\n\r\nThis feature supports much easier use of `pd.DataFrame.loc`, e.g.\r\n\r\n```python\r\ndf = lyse.data()\r\ndf.loc[56]       # sequence 56 MultiIndexed by ['run number', 'repeat number']\r\ndf.loc[56:60]    # sequences 56 through 60 inclusive\r\ndf.loc[56,4]     # run number 4 of sequence 56, indexed by 'repeat number'\r\ndf.loc[56,2:6,:] # runs 2 through 6 (inclusive) of sequence 56\r\n```\r\n\r\nEnabling this feature changes the vertical header item to read, e.g. 105. 0056 \\| 0001 \\| 0106\r\n\r\nThis is far more useful, as these integers can all be used to construct a `pd.DataFrame.loc` or `pd.DataFrame.iloc` call to the lyse DataFrame.\r\n\r\nThe main problem with this feature is that the MultiIndex might not be unique if new shots are sent to or loaded into lyse with an existing sequence\\_index, e.g. if the sequence\\_index gets reset in runmanager or shots are loaded from multiple days. This can be avoided in user-side analysis code by boolean filtering based on the 'run time' column.", "title": "Integer indexing of the lyse DataFrame", "destination": {"commit": {"hash": "608f3b68bfbc", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/608f3b68bfbc.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/608f3b68bfbc"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "1d232b2178ef", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse/commit/1d232b2178ef"}, "html": {"href": "#!/monashspinor/lyse/commits/1d232b2178ef"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse"}, "html": {"href": "#!/monashspinor/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashspinor/lyse", "uuid": "{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}"}, "branch": {"name": "integer_indexing"}}, "state": "OPEN", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "date": "2017-11-09T03:25:14.377362+00:00"}, "pull_request": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39"}}, "title": "Integer indexing of the lyse DataFrame"}}]}