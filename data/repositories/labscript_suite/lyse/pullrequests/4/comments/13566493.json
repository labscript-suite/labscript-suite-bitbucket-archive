{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/4/comments/13566493.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/4/_/diff#comment-13566493"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/4.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/4"}}, "title": "Added version compatibility check for pandas due to changes to DataFrame.concat"}, "content": {"raw": "Try changing check_version() to use distutils and see how much stuff breaks :p\n\nNot all libraries are installed via pip or similar (ours are hg cloned!), so distutils might not know about them. I've also been in plenty of situations where the version distutils reports is different to the one you actually get when you import, because multiple versions are installed  and I guess the import search order must be different to the order distutils searches (or an old version was not properly removed, and left some old version file lying around). Of course you shouldn't have multiple copies installed, but this nonetheless comes up pretty frequently, and we'd like be doing checks on the runtime environment itself, it's what will actually determine whether the packages satisfy the version requirements for the currently running program or not. \n\nSo actually importing `__version__` from the package (which `check_version()` does) is the lowest common denominator.\n\nActually that's not quite true, not all packages have their version string stored under `package.__version__`. The lowest common denominator is obtaining the version string yourself by importing it and passing it to `check_version()`, which it also supports.\n\nAnyway I consider `check_version()` to be more reliable.\n\n\n\nOh, hang on a second. I've misunderstood, haven't I? You're importing the version literally too. Hm.", "markup": "markdown", "html": "<p>Try changing check_version() to use distutils and see how much stuff breaks :p</p>\n<p>Not all libraries are installed via pip or similar (ours are hg cloned!), so distutils might not know about them. I've also been in plenty of situations where the version distutils reports is different to the one you actually get when you import, because multiple versions are installed  and I guess the import search order must be different to the order distutils searches (or an old version was not properly removed, and left some old version file lying around). Of course you shouldn't have multiple copies installed, but this nonetheless comes up pretty frequently, and we'd like be doing checks on the runtime environment itself, it's what will actually determine whether the packages satisfy the version requirements for the currently running program or not. </p>\n<p>So actually importing <code>__version__</code> from the package (which <code>check_version()</code> does) is the lowest common denominator.</p>\n<p>Actually that's not quite true, not all packages have their version string stored under <code>package.__version__</code>. The lowest common denominator is obtaining the version string yourself by importing it and passing it to <code>check_version()</code>, which it also supports.</p>\n<p>Anyway I consider <code>check_version()</code> to be more reliable.</p>\n<p>Oh, hang on a second. I've misunderstood, haven't I? You're importing the version literally too. Hm.</p>", "type": "rendered"}, "created_on": "2016-01-18T04:57:43.327452+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2016-01-18T05:03:12.663382+00:00", "type": "pullrequest_comment", "id": 13566493}