{"rendered": {"description": {"raw": "Performance optimisation based on pull request #24\r\n\r\n* lookup rows in dataframe by filepath using a dictionary cache rather\r\n  than searching the dataframe. This removes the need for the method\r\n  get_model_row_by_filepath(), so it has been removed and the dictionary used\r\n  directly.\r\n\r\n* Remove redundant getting of the row index again for the Qt model - it is\r\n  the same row as the dataframe\r\n\r\n* Avoid setting the text of a QStandardItem twice by only creating it once\r\n  the text it should have is known\r\n\r\n* Add an argument to renumber_rows() that allows it to only renumber recent\r\n  rows for the case that new rows have been added and don't have numbers yet\r\n  but the existing row numbers are still valid\r\n\r\n* Modify batch processing of shot files to use a dynamic batch size, with\r\n  larger batches the more shots lyse has loaded. This is a good tradeoff\r\n  between GUI responsiveness when there are a small number of shot files\r\n  and speed when loading a large number of shot files. The batch size is 1/3\r\n  of the number of shots. Larger batch sizes mean less redundant concatenation\r\n  of dataframes.\r\n\r\n* Modify the progress bar message to say when it's reading shot files\r\n  vs concatenating dataframes vs updating the filebox GUI.", "markup": "markdown", "html": "<p>Performance optimisation based on <a href=\"#!/labscript_suite/lyse/pull-requests/24/performance\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #24</a></p>\n<ul>\n<li>\n<p>lookup rows in dataframe by filepath using a dictionary cache rather\n  than searching the dataframe. This removes the need for the method\n  get_model_row_by_filepath(), so it has been removed and the dictionary used\n  directly.</p>\n</li>\n<li>\n<p>Remove redundant getting of the row index again for the Qt model - it is\n  the same row as the dataframe</p>\n</li>\n<li>\n<p>Avoid setting the text of a QStandardItem twice by only creating it once\n  the text it should have is known</p>\n</li>\n<li>\n<p>Add an argument to renumber_rows() that allows it to only renumber recent\n  rows for the case that new rows have been added and don't have numbers yet\n  but the existing row numbers are still valid</p>\n</li>\n<li>\n<p>Modify batch processing of shot files to use a dynamic batch size, with\n  larger batches the more shots lyse has loaded. This is a good tradeoff\n  between GUI responsiveness when there are a small number of shot files\n  and speed when loading a large number of shot files. The batch size is 1/3\n  of the number of shots. Larger batch sizes mean less redundant concatenation\n  of dataframes.</p>\n</li>\n<li>\n<p>Modify the progress bar message to say when it's reading shot files\n  vs concatenating dataframes vs updating the filebox GUI.</p>\n</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Performance optimisation.", "markup": "markdown", "html": "<p>Performance optimisation.</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Performance optimisation based on pull request #24\r\n\r\n* lookup rows in dataframe by filepath using a dictionary cache rather\r\n  than searching the dataframe. This removes the need for the method\r\n  get_model_row_by_filepath(), so it has been removed and the dictionary used\r\n  directly.\r\n\r\n* Remove redundant getting of the row index again for the Qt model - it is\r\n  the same row as the dataframe\r\n\r\n* Avoid setting the text of a QStandardItem twice by only creating it once\r\n  the text it should have is known\r\n\r\n* Add an argument to renumber_rows() that allows it to only renumber recent\r\n  rows for the case that new rows have been added and don't have numbers yet\r\n  but the existing row numbers are still valid\r\n\r\n* Modify batch processing of shot files to use a dynamic batch size, with\r\n  larger batches the more shots lyse has loaded. This is a good tradeoff\r\n  between GUI responsiveness when there are a small number of shot files\r\n  and speed when loading a large number of shot files. The batch size is 1/3\r\n  of the number of shots. Larger batch sizes mean less redundant concatenation\r\n  of dataframes.\r\n\r\n* Modify the progress bar message to say when it's reading shot files\r\n  vs concatenating dataframes vs updating the filebox GUI.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/40/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:cd6db6b13190%0D2cc4c90d8ff2?from_pullrequest_id=40"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/40/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/40.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/40/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/40/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/40"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/40/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:cd6db6b13190%0D2cc4c90d8ff2?from_pullrequest_id=40"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/40/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/40/statuses_page=1.json"}}, "title": "Performance optimisation.", "close_source_branch": true, "reviewers": [{"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}], "id": 40, "destination": {"commit": {"hash": "2cc4c90d8ff2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/2cc4c90d8ff2.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/2cc4c90d8ff2"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2018-02-26T06:17:54.112525+00:00", "summary": {"raw": "Performance optimisation based on pull request #24\r\n\r\n* lookup rows in dataframe by filepath using a dictionary cache rather\r\n  than searching the dataframe. This removes the need for the method\r\n  get_model_row_by_filepath(), so it has been removed and the dictionary used\r\n  directly.\r\n\r\n* Remove redundant getting of the row index again for the Qt model - it is\r\n  the same row as the dataframe\r\n\r\n* Avoid setting the text of a QStandardItem twice by only creating it once\r\n  the text it should have is known\r\n\r\n* Add an argument to renumber_rows() that allows it to only renumber recent\r\n  rows for the case that new rows have been added and don't have numbers yet\r\n  but the existing row numbers are still valid\r\n\r\n* Modify batch processing of shot files to use a dynamic batch size, with\r\n  larger batches the more shots lyse has loaded. This is a good tradeoff\r\n  between GUI responsiveness when there are a small number of shot files\r\n  and speed when loading a large number of shot files. The batch size is 1/3\r\n  of the number of shots. Larger batch sizes mean less redundant concatenation\r\n  of dataframes.\r\n\r\n* Modify the progress bar message to say when it's reading shot files\r\n  vs concatenating dataframes vs updating the filebox GUI.", "markup": "markdown", "html": "<p>Performance optimisation based on <a href=\"#!/labscript_suite/lyse/pull-requests/24/performance\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #24</a></p>\n<ul>\n<li>\n<p>lookup rows in dataframe by filepath using a dictionary cache rather\n  than searching the dataframe. This removes the need for the method\n  get_model_row_by_filepath(), so it has been removed and the dictionary used\n  directly.</p>\n</li>\n<li>\n<p>Remove redundant getting of the row index again for the Qt model - it is\n  the same row as the dataframe</p>\n</li>\n<li>\n<p>Avoid setting the text of a QStandardItem twice by only creating it once\n  the text it should have is known</p>\n</li>\n<li>\n<p>Add an argument to renumber_rows() that allows it to only renumber recent\n  rows for the case that new rows have been added and don't have numbers yet\n  but the existing row numbers are still valid</p>\n</li>\n<li>\n<p>Modify batch processing of shot files to use a dynamic batch size, with\n  larger batches the more shots lyse has loaded. This is a good tradeoff\n  between GUI responsiveness when there are a small number of shot files\n  and speed when loading a large number of shot files. The batch size is 1/3\n  of the number of shots. Larger batch sizes mean less redundant concatenation\n  of dataframes.</p>\n</li>\n<li>\n<p>Modify the progress bar message to say when it's reading shot files\n  vs concatenating dataframes vs updating the filebox GUI.</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "f0ba6d5bba19", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/f0ba6d5bba19"}, "html": {"href": "#!/cbillington/lyse/commits/f0ba6d5bba19"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "feature"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"role": "PARTICIPANT", "participated_on": "2018-02-26T22:29:25.199656+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": "2018-02-26T12:53:59.109492+00:00", "type": "participant", "approved": true, "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}}], "reason": "", "updated_on": "2018-02-26T22:29:33.822223+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "cd6db6b13190", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/cd6db6b13190.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/cd6db6b13190"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}