{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/45/comments/80187162.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/45/_/diff#comment-80187162"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 45, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/45.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/45"}}, "title": "Added the ability for analysis scripts to register a custom Plot class"}, "content": {"raw": "This is fine, although I'm not familiar with how it's being used I'm happy to take your word for it.\n\nOn matters of style though, I'd rather not merge commented-out code such as `__init__.py`, line 453 onward and `analysis_subprocess.py` line 129.\n\nI'd also rather avoid the long lines. Could you raise the errors by doing something like (example from work-in-progress DAQmx code):\n\n```python\n    msg = \"\"\"Cannot add analog input to device with no parent pseudoclock.\n        Even if there is no buffered output, a pseudoclock is still required\n        to trigger the start of acquisition. Please specify a parent_device\n        and clock_terminal for device %s\"\"\"\n    raise ValueError(dedent(msg) % self.name)\n```\nwhere `dedent()` is `labscript_utils.dedent()` (and thus depend on labscript_utils 2.8.0)?\n\nThis also avoids having the string literal in the exception line itself, which avoids having it print twice when the exception is raised.\n\nI'm limiting lines to 88 characters in all new code I write in accordance with the style automated by [this project, 'black'](https://github.com/ambv/black), which looks like it'll become a sort of standard, so if you're wondering how long is too long, it'd be good to aim for 88 chars (particularly with the strings), though I don't care about 100% compliance (and I don't want to touch existing code for the sake of not making diff noise). Conforming to line length is annoying for strings though, hence why I made the `dedent()` function.", "markup": "markdown", "html": "<p>This is fine, although I'm not familiar with how it's being used I'm happy to take your word for it.</p>\n<p>On matters of style though, I'd rather not merge commented-out code such as <code>__init__.py</code>, line 453 onward and <code>analysis_subprocess.py</code> line 129.</p>\n<p>I'd also rather avoid the long lines. Could you raise the errors by doing something like (example from work-in-progress DAQmx code):</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;&quot;Cannot add analog input to device with no parent pseudoclock.</span>\n<span class=\"s2\">        Even if there is no buffered output, a pseudoclock is still required</span>\n<span class=\"s2\">        to trigger the start of acquisition. Please specify a parent_device</span>\n<span class=\"s2\">        and clock_terminal for device </span><span class=\"si\">%s</span><span class=\"s2\">&quot;&quot;&quot;</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"n\">dedent</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>where <code>dedent()</code> is <code>labscript_utils.dedent()</code> (and thus depend on labscript_utils 2.8.0)?</p>\n<p>This also avoids having the string literal in the exception line itself, which avoids having it print twice when the exception is raised.</p>\n<p>I'm limiting lines to 88 characters in all new code I write in accordance with the style automated by <a data-is-external-link=\"true\" href=\"https://github.com/ambv/black\" rel=\"nofollow\">this project, 'black'</a>, which looks like it'll become a sort of standard, so if you're wondering how long is too long, it'd be good to aim for 88 chars (particularly with the strings), though I don't care about 100% compliance (and I don't want to touch existing code for the sake of not making diff noise). Conforming to line length is annoying for strings though, hence why I made the <code>dedent()</code> function.</p>", "type": "rendered"}, "created_on": "2018-10-24T15:33:13.556155+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-10-24T15:33:13.566094+00:00", "type": "pullrequest_comment", "id": 80187162}