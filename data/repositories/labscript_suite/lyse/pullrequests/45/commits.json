{"pagelen": 100, "values": [{"hash": "c94b027c6994aba60e7c4265b7247962a7e6d0bc", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/c94b027c6994aba60e7c4265b7247962a7e6d0bc.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/commit/c94b027c6994aba60e7c4265b7247962a7e6d0bc/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/c94b027c6994aba60e7c4265b7247962a7e6d0bc"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/c94b027c6994aba60e7c4265b7247962a7e6d0bc"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/commit/c94b027c6994aba60e7c4265b7247962a7e6d0bc/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/commit/c94b027c6994aba60e7c4265b7247962a7e6d0bc/statuses_page=1.json"}}, "author": {"raw": "Philip Starkey <threepineapples@gmail.com>", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Merged in pstarkey/lyse/custom-Plot-classes (pull request #45)\n\nAdded the ability for analysis scripts to register a custom Plot class\n\nApproved-by: Shaun Johnstone <shaun.johnstone@gmail.com>", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/pstarkey/lyse\" rel=\"nofollow\" class=\"ap-connect-link\">pstarkey/lyse</a>/custom-Plot-classes (<a href=\"#!/labscript_suite/lyse/pull-requests/45/added-the-ability-for-analysis-scripts-to\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #45</a>)</p>\n<p>Added the ability for analysis scripts to register a custom Plot class</p>\n<p>Approved-by: Shaun Johnstone <a href=\"mailto:shaun.johnstone@gmail.com\">&#115;&#104;&#97;&#117;&#110;&#46;&#106;&#111;&#104;&#110;&#115;&#116;&#111;&#110;&#101;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>", "type": "rendered"}, "parents": [{"hash": "e652c2de1a31a17fac453ba4e549b88b56419e5e", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/e652c2de1a31a17fac453ba4e549b88b56419e5e.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/e652c2de1a31a17fac453ba4e549b88b56419e5e"}}}, {"hash": "7538fcc0517e52b7979e5d6d6e3c377d312cfd55", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/7538fcc0517e52b7979e5d6d6e3c377d312cfd55.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/7538fcc0517e52b7979e5d6d6e3c377d312cfd55"}}}], "date": "2018-11-02T02:59:34+00:00", "message": "Merged in pstarkey/lyse/custom-Plot-classes (pull request #45)\n\nAdded the ability for analysis scripts to register a custom Plot class\n\nApproved-by: Shaun Johnstone <shaun.johnstone@gmail.com>", "type": "commit"}, {"hash": "7538fcc0517e52b7979e5d6d6e3c377d312cfd55", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/7538fcc0517e52b7979e5d6d6e3c377d312cfd55.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/commit/7538fcc0517e52b7979e5d6d6e3c377d312cfd55/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/patch/7538fcc0517e52b7979e5d6d6e3c377d312cfd55"}, "html": {"href": "#!/labscript_suite/lyse/commits/7538fcc0517e52b7979e5d6d6e3c377d312cfd55"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/7538fcc0517e52b7979e5d6d6e3c377d312cfd55"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/commit/7538fcc0517e52b7979e5d6d6e3c377d312cfd55/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/commit/7538fcc0517e52b7979e5d6d6e3c377d312cfd55/statuses_page=1.json"}}, "author": {"raw": "Philip Starkey <threepineapples@gmail.com>", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Close branch custom-Plot-classes", "markup": "markdown", "html": "<p>Close branch custom-Plot-classes</p>", "type": "rendered"}, "parents": [{"hash": "a33f3d6b603661d93c56ca66f966e0c22d582962", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/a33f3d6b603661d93c56ca66f966e0c22d582962.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/a33f3d6b603661d93c56ca66f966e0c22d582962"}}}], "date": "2018-11-02T02:59:34+00:00", "message": "Close branch custom-Plot-classes", "type": "commit"}, {"hash": "a33f3d6b603661d93c56ca66f966e0c22d582962", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/a33f3d6b603661d93c56ca66f966e0c22d582962.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/commit/a33f3d6b603661d93c56ca66f966e0c22d582962/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/patch/a33f3d6b603661d93c56ca66f966e0c22d582962"}, "html": {"href": "#!/labscript_suite/lyse/commits/a33f3d6b603661d93c56ca66f966e0c22d582962"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/a33f3d6b603661d93c56ca66f966e0c22d582962"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/commit/a33f3d6b603661d93c56ca66f966e0c22d582962/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/commit/a33f3d6b603661d93c56ca66f966e0c22d582962/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "fixed bug where a plot would be created even if no plotting calls had been made (for example if the script crashed)\nThis previously resulted in a figure being made, which then made the figure a default size rather than whatever was specified on the first run (or first run since the plot window was closed)\n\nPlot sizes need to be fixed more comprehensively (so that the user can choose whether plot code should be able to resize plot windows or not), but that's for another time!", "markup": "markdown", "html": "<p>fixed bug where a plot would be created even if no plotting calls had been made (for example if the script crashed)<br />\nThis previously resulted in a figure being made, which then made the figure a default size rather than whatever was specified on the first run (or first run since the plot window was closed)</p>\n<p>Plot sizes need to be fixed more comprehensively (so that the user can choose whether plot code should be able to resize plot windows or not), but that's for another time!</p>", "type": "rendered"}, "parents": [{"hash": "63217a23b0ca7f768416b445586b619149010478", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/63217a23b0ca7f768416b445586b619149010478.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/63217a23b0ca7f768416b445586b619149010478"}}}], "date": "2018-10-26T02:25:43+00:00", "message": "fixed bug where a plot would be created even if no plotting calls had been made (for example if the script crashed)\nThis previously resulted in a figure being made, which then made the figure a default size rather than whatever was specified on the first run (or first run since the plot window was closed)\n\nPlot sizes need to be fixed more comprehensively (so that the user can choose whether plot code should be able to resize plot windows or not), but that's for another time!", "type": "commit"}, {"hash": "63217a23b0ca7f768416b445586b619149010478", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/63217a23b0ca7f768416b445586b619149010478.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/commit/63217a23b0ca7f768416b445586b619149010478/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/patch/63217a23b0ca7f768416b445586b619149010478"}, "html": {"href": "#!/labscript_suite/lyse/commits/63217a23b0ca7f768416b445586b619149010478"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/63217a23b0ca7f768416b445586b619149010478"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/commit/63217a23b0ca7f768416b445586b619149010478/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/commit/63217a23b0ca7f768416b445586b619149010478/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Made two lines shorter", "markup": "markdown", "html": "<p>Made two lines shorter</p>", "type": "rendered"}, "parents": [{"hash": "1f1b021ed40f01abca223cc914c261262ee2e5c6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/1f1b021ed40f01abca223cc914c261262ee2e5c6.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/1f1b021ed40f01abca223cc914c261262ee2e5c6"}}}], "date": "2018-10-25T22:36:38+00:00", "message": "Made two lines shorter", "type": "commit"}, {"hash": "1f1b021ed40f01abca223cc914c261262ee2e5c6", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/1f1b021ed40f01abca223cc914c261262ee2e5c6.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/commit/1f1b021ed40f01abca223cc914c261262ee2e5c6/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/patch/1f1b021ed40f01abca223cc914c261262ee2e5c6"}, "html": {"href": "#!/labscript_suite/lyse/commits/1f1b021ed40f01abca223cc914c261262ee2e5c6"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/1f1b021ed40f01abca223cc914c261262ee2e5c6"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/commit/1f1b021ed40f01abca223cc914c261262ee2e5c6/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/commit/1f1b021ed40f01abca223cc914c261262ee2e5c6/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Fixed bug in cases where figure() was not explicitly called.", "markup": "markdown", "html": "<p>Fixed bug in cases where figure() was not explicitly called.</p>", "type": "rendered"}, "parents": [{"hash": "16b11ef93019cd5252c469f459ec9cb80372a187", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/16b11ef93019cd5252c469f459ec9cb80372a187.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/16b11ef93019cd5252c469f459ec9cb80372a187"}}}], "date": "2018-10-25T22:26:31+00:00", "message": "Fixed bug in cases where figure() was not explicitly called.", "type": "commit"}, {"hash": "16b11ef93019cd5252c469f459ec9cb80372a187", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/16b11ef93019cd5252c469f459ec9cb80372a187.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/commit/16b11ef93019cd5252c469f459ec9cb80372a187/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/patch/16b11ef93019cd5252c469f459ec9cb80372a187"}, "html": {"href": "#!/labscript_suite/lyse/commits/16b11ef93019cd5252c469f459ec9cb80372a187"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/16b11ef93019cd5252c469f459ec9cb80372a187"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/commit/16b11ef93019cd5252c469f459ec9cb80372a187/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/commit/16b11ef93019cd5252c469f459ec9cb80372a187/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Mostly bug fixes for the expected behaviour of figures and the new features:\n\n* Added a dummy `Plot` object so that scripts that expect to be able to subclass lyse.Plot can still run from the terminal (scripts run from the terminal never instantiate the Plot subclass so anything works here)\n* Changed the figure manager to use a OrderedDict so that plot windows with string identifiers are created in the order in which `figure(identifier)` is called.\n* used labscript_utils.dedent for printing multi-line string comments nicely\n* Fixed a bug with using matplotlib.pyplot.close() when our custom version is called with a figure object as the argument (however I doubt anyone ever actually uses this functionality, so presumably it wasn't that important!)\n* Removed commented out code\n* Improved the reloading of Plot windows. Plot windows are now closed and recreated if either the registered Plot class or identifier has changed. Recreated Plot windows have their window state saved and restored to minimise inconvenience to the user.\n* Added a method to the Plot class that gets called when the window is closed (note: windows are only closed programmatically when the Plot class or identifier has changed. User interaction that \"closes\" windows still hides the window as before) so that subclasses can implement custom behaviour (and we can release the pan/zoom tool lock)\n* Added code that forces a redraw and title update of plot windows that are no in use anymore (so that you don't get confused by a plot showing stale data from a previous run of the analysis script).\n* As a consequence of the above, the Plot.analysis_complete() method (designed for us in Plot subclasses) now has a keyword argument which indicates whether this plot window was in use in this run of the analysis script.", "markup": "markdown", "html": "<p>Mostly bug fixes for the expected behaviour of figures and the new features:</p>\n<ul>\n<li>Added a dummy <code>Plot</code> object so that scripts that expect to be able to subclass lyse.Plot can still run from the terminal (scripts run from the terminal never instantiate the Plot subclass so anything works here)</li>\n<li>Changed the figure manager to use a OrderedDict so that plot windows with string identifiers are created in the order in which <code>figure(identifier)</code> is called.</li>\n<li>used labscript_utils.dedent for printing multi-line string comments nicely</li>\n<li>Fixed a bug with using matplotlib.pyplot.close() when our custom version is called with a figure object as the argument (however I doubt anyone ever actually uses this functionality, so presumably it wasn't that important!)</li>\n<li>Removed commented out code</li>\n<li>Improved the reloading of Plot windows. Plot windows are now closed and recreated if either the registered Plot class or identifier has changed. Recreated Plot windows have their window state saved and restored to minimise inconvenience to the user.</li>\n<li>Added a method to the Plot class that gets called when the window is closed (note: windows are only closed programmatically when the Plot class or identifier has changed. User interaction that \"closes\" windows still hides the window as before) so that subclasses can implement custom behaviour (and we can release the pan/zoom tool lock)</li>\n<li>Added code that forces a redraw and title update of plot windows that are no in use anymore (so that you don't get confused by a plot showing stale data from a previous run of the analysis script).</li>\n<li>As a consequence of the above, the Plot.analysis_complete() method (designed for us in Plot subclasses) now has a keyword argument which indicates whether this plot window was in use in this run of the analysis script.</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "90162fb21a2c0544f82156341c5d5d18a9ad405e", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/90162fb21a2c0544f82156341c5d5d18a9ad405e.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/90162fb21a2c0544f82156341c5d5d18a9ad405e"}}}], "date": "2018-10-25T04:54:51+00:00", "message": "Mostly bug fixes for the expected behaviour of figures and the new features:\n\n* Added a dummy `Plot` object so that scripts that expect to be able to subclass lyse.Plot can still run from the terminal (scripts run from the terminal never instantiate the Plot subclass so anything works here)\n* Changed the figure manager to use a OrderedDict so that plot windows with string identifiers are created in the order in which `figure(identifier)` is called.\n* used labscript_utils.dedent for printing multi-line string comments nicely\n* Fixed a bug with using matplotlib.pyplot.close() when our custom version is called with a figure object as the argument (however I doubt anyone ever actually uses this functionality, so presumably it wasn't that important!)\n* Removed commented out code\n* Improved the reloading of Plot windows. Plot windows are now closed and recreated if either the registered Plot class or identifier has changed. Recreated Plot windows have their window state saved and restored to minimise inconvenience to the user.\n* Added a method to the Plot class that gets called when the window is closed (note: windows are only closed programmatically when the Plot class or identifier has changed. User interaction that \"closes\" windows still hides the window as before) so that subclasses can implement custom behaviour (and we can release the pan/zoom tool lock)\n* Added code that forces a redraw and title update of plot windows that are no in use anymore (so that you don't get confused by a plot showing stale data from a previous run of the analysis script).\n* As a consequence of the above, the Plot.analysis_complete() method (designed for us in Plot subclasses) now has a keyword argument which indicates whether this plot window was in use in this run of the analysis script.", "type": "commit"}, {"hash": "90162fb21a2c0544f82156341c5d5d18a9ad405e", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/90162fb21a2c0544f82156341c5d5d18a9ad405e.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/commit/90162fb21a2c0544f82156341c5d5d18a9ad405e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/patch/90162fb21a2c0544f82156341c5d5d18a9ad405e"}, "html": {"href": "#!/labscript_suite/lyse/commits/90162fb21a2c0544f82156341c5d5d18a9ad405e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/90162fb21a2c0544f82156341c5d5d18a9ad405e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/commit/90162fb21a2c0544f82156341c5d5d18a9ad405e/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/commit/90162fb21a2c0544f82156341c5d5d18a9ad405e/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Some more changes:\n\n* reverted the analysis_subprocess.py script to storing the reference to the Plot keyed by the figure, rather than the identifier as identifiers can change (so my original change was wrong)\n* Added the ability to close/recreate windows if the Plot subclass changes (this was necessary because we now key by figure, not identifier, so the plot clas required for a window could in theory change if a figure is removed from a script). This now removes the requirement that you can't change the Plot class without restarting the script (or at least it should...but I have a separate bug with the module reloading that I don't believe is related to this pull request, but I'll revert and test once this commit is done)\n* Fixed a bug where figure creation without plotting would result in everything using the same figure. Now we allocate a figure if an identifier is explicitly specified. Probably we should allocate figures even if an identifier is not specified, but I've left it doing what it used to do for now (but this means that `fig=figure();fig2=figure()` will still give odd behaviour)\n* Fixed a bug where a plot title might not get updated because there were multiple references to the same figure object in the dictionary\n* fixed a bug on Python 3.6 where we deleted items from the dictionary we were iterating over", "markup": "markdown", "html": "<p>Some more changes:</p>\n<ul>\n<li>reverted the analysis_subprocess.py script to storing the reference to the Plot keyed by the figure, rather than the identifier as identifiers can change (so my original change was wrong)</li>\n<li>Added the ability to close/recreate windows if the Plot subclass changes (this was necessary because we now key by figure, not identifier, so the plot clas required for a window could in theory change if a figure is removed from a script). This now removes the requirement that you can't change the Plot class without restarting the script (or at least it should...but I have a separate bug with the module reloading that I don't believe is related to this pull request, but I'll revert and test once this commit is done)</li>\n<li>Fixed a bug where figure creation without plotting would result in everything using the same figure. Now we allocate a figure if an identifier is explicitly specified. Probably we should allocate figures even if an identifier is not specified, but I've left it doing what it used to do for now (but this means that <code>fig=figure();fig2=figure()</code> will still give odd behaviour)</li>\n<li>Fixed a bug where a plot title might not get updated because there were multiple references to the same figure object in the dictionary</li>\n<li>fixed a bug on Python 3.6 where we deleted items from the dictionary we were iterating over</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "279797ac5e680c35f22eb7866d70836f658d6216", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/279797ac5e680c35f22eb7866d70836f658d6216.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/279797ac5e680c35f22eb7866d70836f658d6216"}}}], "date": "2018-10-24T07:01:30+00:00", "message": "Some more changes:\n\n* reverted the analysis_subprocess.py script to storing the reference to the Plot keyed by the figure, rather than the identifier as identifiers can change (so my original change was wrong)\n* Added the ability to close/recreate windows if the Plot subclass changes (this was necessary because we now key by figure, not identifier, so the plot clas required for a window could in theory change if a figure is removed from a script). This now removes the requirement that you can't change the Plot class without restarting the script (or at least it should...but I have a separate bug with the module reloading that I don't believe is related to this pull request, but I'll revert and test once this commit is done)\n* Fixed a bug where figure creation without plotting would result in everything using the same figure. Now we allocate a figure if an identifier is explicitly specified. Probably we should allocate figures even if an identifier is not specified, but I've left it doing what it used to do for now (but this means that `fig=figure();fig2=figure()` will still give odd behaviour)\n* Fixed a bug where a plot title might not get updated because there were multiple references to the same figure object in the dictionary\n* fixed a bug on Python 3.6 where we deleted items from the dictionary we were iterating over", "type": "commit"}, {"hash": "279797ac5e680c35f22eb7866d70836f658d6216", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/279797ac5e680c35f22eb7866d70836f658d6216.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/commit/279797ac5e680c35f22eb7866d70836f658d6216/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/patch/279797ac5e680c35f22eb7866d70836f658d6216"}, "html": {"href": "#!/labscript_suite/lyse/commits/279797ac5e680c35f22eb7866d70836f658d6216"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/279797ac5e680c35f22eb7866d70836f658d6216"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/commit/279797ac5e680c35f22eb7866d70836f658d6216/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/commit/279797ac5e680c35f22eb7866d70836f658d6216/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added a method to the Plot class that is called by the lyse worker process when the analysis is complete.\n\nThis provides a notification to custom subclasses that the analysis is complete and user interaction is available via the Plot window (which might be used to enable buttons, etc.).", "markup": "markdown", "html": "<p>Added a method to the Plot class that is called by the lyse worker process when the analysis is complete.</p>\n<p>This provides a notification to custom subclasses that the analysis is complete and user interaction is available via the Plot window (which might be used to enable buttons, etc.).</p>", "type": "rendered"}, "parents": [{"hash": "f1936e3d19bee770d7219c4d014c23a033c19661", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/f1936e3d19bee770d7219c4d014c23a033c19661.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/f1936e3d19bee770d7219c4d014c23a033c19661"}}}], "date": "2018-10-23T04:30:25+00:00", "message": "Added a method to the Plot class that is called by the lyse worker process when the analysis is complete.\n\nThis provides a notification to custom subclasses that the analysis is complete and user interaction is available via the Plot window (which might be used to enable buttons, etc.).", "type": "commit"}, {"hash": "f1936e3d19bee770d7219c4d014c23a033c19661", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/f1936e3d19bee770d7219c4d014c23a033c19661.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/commit/f1936e3d19bee770d7219c4d014c23a033c19661/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/patch/f1936e3d19bee770d7219c4d014c23a033c19661"}, "html": {"href": "#!/labscript_suite/lyse/commits/f1936e3d19bee770d7219c4d014c23a033c19661"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/f1936e3d19bee770d7219c4d014c23a033c19661"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/commit/f1936e3d19bee770d7219c4d014c23a033c19661/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/commit/f1936e3d19bee770d7219c4d014c23a033c19661/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added a threading.Event to delay the return of results to lyse if the user requests it.\n\nThis allows the user to use the Plot subclass to interact with the data, and save additional results to HDF5 file via custom actions on their toolbar (which could be the result of user interaction with the plot) and then return the results to lyse (for example either on a button click, or after a timeout, or whatever you like!)\n\nTo use, call `lyse.delay_results_return()` at the end of your script.\nResults will then only be returned to lyse (so lyse will be stuck waiting for your analysis script to complete) until `lyse.delay_event.set()` is called (through some event ultimately processed by the Qt event loop).", "markup": "markdown", "html": "<p>Added a threading.Event to delay the return of results to lyse if the user requests it.</p>\n<p>This allows the user to use the Plot subclass to interact with the data, and save additional results to HDF5 file via custom actions on their toolbar (which could be the result of user interaction with the plot) and then return the results to lyse (for example either on a button click, or after a timeout, or whatever you like!)</p>\n<p>To use, call <code>lyse.delay_results_return()</code> at the end of your script.<br />\nResults will then only be returned to lyse (so lyse will be stuck waiting for your analysis script to complete) until <code>lyse.delay_event.set()</code> is called (through some event ultimately processed by the Qt event loop).</p>", "type": "rendered"}, "parents": [{"hash": "0b3fc87484c0212bfbfb4401d04aa0cf3b0eb855", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/0b3fc87484c0212bfbfb4401d04aa0cf3b0eb855.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/0b3fc87484c0212bfbfb4401d04aa0cf3b0eb855"}}}], "date": "2018-10-19T07:03:50+00:00", "message": "Added a threading.Event to delay the return of results to lyse if the user requests it.\n\nThis allows the user to use the Plot subclass to interact with the data, and save additional results to HDF5 file via custom actions on their toolbar (which could be the result of user interaction with the plot) and then return the results to lyse (for example either on a button click, or after a timeout, or whatever you like!)\n\nTo use, call `lyse.delay_results_return()` at the end of your script.\nResults will then only be returned to lyse (so lyse will be stuck waiting for your analysis script to complete) until `lyse.delay_event.set()` is called (through some event ultimately processed by the Qt event loop).", "type": "commit"}, {"hash": "0b3fc87484c0212bfbfb4401d04aa0cf3b0eb855", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/0b3fc87484c0212bfbfb4401d04aa0cf3b0eb855.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/commit/0b3fc87484c0212bfbfb4401d04aa0cf3b0eb855/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/patch/0b3fc87484c0212bfbfb4401d04aa0cf3b0eb855"}, "html": {"href": "#!/labscript_suite/lyse/commits/0b3fc87484c0212bfbfb4401d04aa0cf3b0eb855"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/0b3fc87484c0212bfbfb4401d04aa0cf3b0eb855"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/commit/0b3fc87484c0212bfbfb4401d04aa0cf3b0eb855/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/commit/0b3fc87484c0212bfbfb4401d04aa0cf3b0eb855/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Added the ability for analysis scripts to register a custom Plot class\n\nThis allows you to provide custom behaviour in plot windows (such as additional actions)\n\nUse `lyse.register_plot_class(identifier, cls)` to register a class for lyse to use when creating window for `figure(identifier)`, where cls must be a subclass of `lyse.Plot` (which is monkey patched in to the lyse module to avoid the double import denier script triggering if you try to import it directly from lyse.analysis_subprocess)\n\nCurrently we do not support changing the class from one run of the script to the next, without restarting the worker process (as that would require re-instantiating the plot which has a large number of problems). Also, in order to avoid the custom subclass being detected as changing from shot to shot, it needs to be imported from a separate module to the analysis script. If an invalid class is specified, then the default `Plot` class is used and message is printed in the lyse terminal.\n\nI also changed the indexing of the internal storage of plots to use the identifier rather than the fig object. This seems to make much more sense to me, and since we also now expose that dictionary to the analysis script via `lyse.plots`, I figured now would be a good time to change it! I can't see any downside to doing this but please correct me if I'm wrong.\n\nFinally, this obviously has no effect on lyse scripts run from the terminal, since we don't use our figure manager in such cases. A warning is printed informing the user in such instances (if they use `lyse.register_plot_class()`)", "markup": "markdown", "html": "<p>Added the ability for analysis scripts to register a custom Plot class</p>\n<p>This allows you to provide custom behaviour in plot windows (such as additional actions)</p>\n<p>Use <code>lyse.register_plot_class(identifier, cls)</code> to register a class for lyse to use when creating window for <code>figure(identifier)</code>, where cls must be a subclass of <code>lyse.Plot</code> (which is monkey patched in to the lyse module to avoid the double import denier script triggering if you try to import it directly from lyse.analysis_subprocess)</p>\n<p>Currently we do not support changing the class from one run of the script to the next, without restarting the worker process (as that would require re-instantiating the plot which has a large number of problems). Also, in order to avoid the custom subclass being detected as changing from shot to shot, it needs to be imported from a separate module to the analysis script. If an invalid class is specified, then the default <code>Plot</code> class is used and message is printed in the lyse terminal.</p>\n<p>I also changed the indexing of the internal storage of plots to use the identifier rather than the fig object. This seems to make much more sense to me, and since we also now expose that dictionary to the analysis script via <code>lyse.plots</code>, I figured now would be a good time to change it! I can't see any downside to doing this but please correct me if I'm wrong.</p>\n<p>Finally, this obviously has no effect on lyse scripts run from the terminal, since we don't use our figure manager in such cases. A warning is printed informing the user in such instances (if they use <code>lyse.register_plot_class()</code>)</p>", "type": "rendered"}, "parents": [{"hash": "e652c2de1a31a17fac453ba4e549b88b56419e5e", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/e652c2de1a31a17fac453ba4e549b88b56419e5e.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/e652c2de1a31a17fac453ba4e549b88b56419e5e"}}}], "date": "2018-10-19T06:06:16+00:00", "message": "Added the ability for analysis scripts to register a custom Plot class\n\nThis allows you to provide custom behaviour in plot windows (such as additional actions)\n\nUse `lyse.register_plot_class(identifier, cls)` to register a class for lyse to use when creating window for `figure(identifier)`, where cls must be a subclass of `lyse.Plot` (which is monkey patched in to the lyse module to avoid the double import denier script triggering if you try to import it directly from lyse.analysis_subprocess)\n\nCurrently we do not support changing the class from one run of the script to the next, without restarting the worker process (as that would require re-instantiating the plot which has a large number of problems). Also, in order to avoid the custom subclass being detected as changing from shot to shot, it needs to be imported from a separate module to the analysis script. If an invalid class is specified, then the default `Plot` class is used and message is printed in the lyse terminal.\n\nI also changed the indexing of the internal storage of plots to use the identifier rather than the fig object. This seems to make much more sense to me, and since we also now expose that dictionary to the analysis script via `lyse.plots`, I figured now would be a good time to change it! I can't see any downside to doing this but please correct me if I'm wrong.\n\nFinally, this obviously has no effect on lyse scripts run from the terminal, since we don't use our figure manager in such cases. A warning is printed informing the user in such instances (if they use `lyse.register_plot_class()`)", "type": "commit"}], "page": 1}