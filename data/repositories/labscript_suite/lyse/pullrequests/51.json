{"rendered": {"description": {"raw": "Going through our local repo I found a bunch of simple enhancements to lyse functionality we have been using that should probably be sent upstream. This one is the most extreme so I\u2019m splitting it into it\u2019s own PR.\r\n\r\nThis addresses Issue #44, essentially allowing keyword arguments to be passed through from save\\_result\\_array\\(s\\) to the h5py.create\\_dataset\\(\\) command. This allows one to use the native compression functionality that comes with h5py to save on some disk space when doing analysis on large datasets.\r\n\r\nI\u2019ve gone with the approach of just passing all keywords for simplicity, but I can see the argument for limiting which keywords are allowed explicitly in lyse instead of relying on h5py to balk at incorrect keywords. Thoughts?", "markup": "markdown", "html": "<p>Going through our local repo I found a bunch of simple enhancements to lyse functionality we have been using that should probably be sent upstream. This one is the most extreme so I\u2019m splitting it into it\u2019s own PR.</p>\n<p>This addresses Issue <a href=\"#!/labscript_suite/lyse/issues/44/allow-save_result_array-s-methods-to-use\" rel=\"nofollow\" title=\"Allow save_result_array(s) methods to use h5 dataset compression filters\" class=\"ap-connect-link\">#44</a>, essentially allowing keyword arguments to be passed through from save_result_array(s) to the h5py.create_dataset() command. This allows one to use the native compression functionality that comes with h5py to save on some disk space when doing analysis on large datasets.</p>\n<p>I\u2019ve gone with the approach of just passing all keywords for simplicity, but I can see the argument for limiting which keywords are allowed explicitly in lyse instead of relying on h5py to balk at incorrect keywords. Thoughts?</p>", "type": "rendered"}, "title": {"raw": "Allow for h5 array compression passthrough arguments in save_result_array(s)", "markup": "markdown", "html": "<p>Allow for h5 array compression passthrough arguments in save_result_array(s)</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Going through our local repo I found a bunch of simple enhancements to lyse functionality we have been using that should probably be sent upstream. This one is the most extreme so I\u2019m splitting it into it\u2019s own PR.\r\n\r\nThis addresses Issue #44, essentially allowing keyword arguments to be passed through from save\\_result\\_array\\(s\\) to the h5py.create\\_dataset\\(\\) command. This allows one to use the native compression functionality that comes with h5py to save on some disk space when doing analysis on large datasets.\r\n\r\nI\u2019ve gone with the approach of just passing all keywords for simplicity, but I can see the argument for limiting which keywords are allowed explicitly in lyse instead of relying on h5py to balk at incorrect keywords. Thoughts?", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/51/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:567daaba2a49%0D7594e4d51d61?from_pullrequest_id=51"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/51/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/51.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/51/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/51/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/51"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/51/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:567daaba2a49%0D7594e4d51d61?from_pullrequest_id=51"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/51/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/51/statuses_page=1.json"}}, "title": "Allow for h5 array compression passthrough arguments in save_result_array(s)", "close_source_branch": true, "reviewers": [{"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}], "id": 51, "destination": {"commit": {"hash": "7594e4d51d61", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/7594e4d51d61.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/7594e4d51d61"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-02-05T13:27:34.824314+00:00", "summary": {"raw": "Going through our local repo I found a bunch of simple enhancements to lyse functionality we have been using that should probably be sent upstream. This one is the most extreme so I\u2019m splitting it into it\u2019s own PR.\r\n\r\nThis addresses Issue #44, essentially allowing keyword arguments to be passed through from save\\_result\\_array\\(s\\) to the h5py.create\\_dataset\\(\\) command. This allows one to use the native compression functionality that comes with h5py to save on some disk space when doing analysis on large datasets.\r\n\r\nI\u2019ve gone with the approach of just passing all keywords for simplicity, but I can see the argument for limiting which keywords are allowed explicitly in lyse instead of relying on h5py to balk at incorrect keywords. Thoughts?", "markup": "markdown", "html": "<p>Going through our local repo I found a bunch of simple enhancements to lyse functionality we have been using that should probably be sent upstream. This one is the most extreme so I\u2019m splitting it into it\u2019s own PR.</p>\n<p>This addresses Issue <a href=\"#!/labscript_suite/lyse/issues/44/allow-save_result_array-s-methods-to-use\" rel=\"nofollow\" title=\"Allow save_result_array(s) methods to use h5 dataset compression filters\" class=\"ap-connect-link\">#44</a>, essentially allowing keyword arguments to be passed through from save_result_array(s) to the h5py.create_dataset() command. This allows one to use the native compression functionality that comes with h5py to save on some disk space when doing analysis on large datasets.</p>\n<p>I\u2019ve gone with the approach of just passing all keywords for simplicity, but I can see the argument for limiting which keywords are allowed explicitly in lyse instead of relying on h5py to balk at incorrect keywords. Thoughts?</p>", "type": "rendered"}, "source": {"commit": {"hash": "c8b6d2319b3f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/lyse/commit/c8b6d2319b3f"}, "html": {"href": "#!/dihm/lyse/commits/c8b6d2319b3f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/lyse"}, "html": {"href": "#!/dihm/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{093f183c-ad2a-4071-88e2-8c47ad45e99d}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "dihm/lyse", "uuid": "{093f183c-ad2a-4071-88e2-8c47ad45e99d}"}, "branch": {"name": "h5_savearray_compression"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2019-02-05T17:03:37.024409+00:00", "type": "participant", "approved": false, "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}}, {"role": "REVIEWER", "participated_on": "2019-02-05T17:00:19.257850+00:00", "type": "participant", "approved": true, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}], "reason": "", "updated_on": "2019-02-05T17:07:08.228731+00:00", "author": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "merge_commit": {"hash": "567daaba2a49", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/567daaba2a49.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/567daaba2a49"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}