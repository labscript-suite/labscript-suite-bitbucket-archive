{"rendered": {"description": {"raw": "Move side-effecty code in analysis_subprocess.py into its `__main__` block.\r\nThis makes importing `analysis_subprocess` side-effect-free, making it not\r\ninterfere with the multiprocessing module when subprocesses execute it\r\n(since it is the `__main__` module of the parent process, which multiprocessing executes unconditionally in the child process)\r\n\r\nActually, further change: make `analysis_subprocess.py` not even the `__main__` module when run in the usual way from lyse. Create a module object for the user's\r\nanalysis routine and insert it into sys.modules as the `__main__` module\r\n(and rename the analysis_subprocess module from `__main__` to\r\n`_analysis_subprocess`). Run the user's code in that module's `__dict__`,\r\nresetting the dict to its initial state each run.\r\n\r\nThis should enable multiprocessing code to find the `__main__` module and have it refer to the user's analysis routine script instead of `analysis_subprocess.py`.", "markup": "markdown", "html": "<p>Move side-effecty code in analysis_subprocess.py into its <code>__main__</code> block.\nThis makes importing <code>analysis_subprocess</code> side-effect-free, making it not\ninterfere with the multiprocessing module when subprocesses execute it\n(since it is the <code>__main__</code> module of the parent process, which multiprocessing executes unconditionally in the child process)</p>\n<p>Actually, further change: make <code>analysis_subprocess.py</code> not even the <code>__main__</code> module when run in the usual way from lyse. Create a module object for the user's\nanalysis routine and insert it into sys.modules as the <code>__main__</code> module\n(and rename the analysis_subprocess module from <code>__main__</code> to\n<code>_analysis_subprocess</code>). Run the user's code in that module's <code>__dict__</code>,\nresetting the dict to its initial state each run.</p>\n<p>This should enable multiprocessing code to find the <code>__main__</code> module and have it refer to the user's analysis routine script instead of <code>analysis_subprocess.py</code>.</p>", "type": "rendered"}, "title": {"raw": "Fix for #48: Make analysis_subprocess.py multiprocessing-friendly", "markup": "markdown", "html": "<p>Fix for <a href=\"#!/labscript_suite/lyse/issues/48/unable-to-fork-a-process-from-a-lyse\" rel=\"nofollow\" title=\"Unable to fork a process from a lyse script with multiprocessing\" class=\"ap-connect-link\"><s>#48</s></a>: Make analysis_subprocess.py multiprocessing-friendly</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Move side-effecty code in analysis_subprocess.py into its `__main__` block.\r\nThis makes importing `analysis_subprocess` side-effect-free, making it not\r\ninterfere with the multiprocessing module when subprocesses execute it\r\n(since it is the `__main__` module of the parent process, which multiprocessing executes unconditionally in the child process)\r\n\r\nActually, further change: make `analysis_subprocess.py` not even the `__main__` module when run in the usual way from lyse. Create a module object for the user's\r\nanalysis routine and insert it into sys.modules as the `__main__` module\r\n(and rename the analysis_subprocess module from `__main__` to\r\n`_analysis_subprocess`). Run the user's code in that module's `__dict__`,\r\nresetting the dict to its initial state each run.\r\n\r\nThis should enable multiprocessing code to find the `__main__` module and have it refer to the user's analysis routine script instead of `analysis_subprocess.py`.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/61/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:080da0076ab4%0D080da0076ab4?from_pullrequest_id=61"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/61/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/61.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/61/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/61/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/61"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/61/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:080da0076ab4%0D080da0076ab4?from_pullrequest_id=61"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/61/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/61/statuses_page=1.json"}}, "title": "Fix for #48: Make analysis_subprocess.py multiprocessing-friendly", "close_source_branch": true, "reviewers": [{"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, {"display_name": "Lincoln Turner", "uuid": "{7e35ca32-09d7-4a25-a548-32edef727dda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D"}, "html": {"href": "https://bitbucket.org/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2ac774c664cd58fc011cc65e0980b4c1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLT-3.png"}}, "nickname": "lincolndturner", "type": "user", "account_id": "5b46a53d845e7e2cdff75ad3"}], "id": 61, "destination": {"commit": {"hash": "080da0076ab4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/080da0076ab4.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/080da0076ab4"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-05-01T15:15:02.024116+00:00", "summary": {"raw": "Move side-effecty code in analysis_subprocess.py into its `__main__` block.\r\nThis makes importing `analysis_subprocess` side-effect-free, making it not\r\ninterfere with the multiprocessing module when subprocesses execute it\r\n(since it is the `__main__` module of the parent process, which multiprocessing executes unconditionally in the child process)\r\n\r\nActually, further change: make `analysis_subprocess.py` not even the `__main__` module when run in the usual way from lyse. Create a module object for the user's\r\nanalysis routine and insert it into sys.modules as the `__main__` module\r\n(and rename the analysis_subprocess module from `__main__` to\r\n`_analysis_subprocess`). Run the user's code in that module's `__dict__`,\r\nresetting the dict to its initial state each run.\r\n\r\nThis should enable multiprocessing code to find the `__main__` module and have it refer to the user's analysis routine script instead of `analysis_subprocess.py`.", "markup": "markdown", "html": "<p>Move side-effecty code in analysis_subprocess.py into its <code>__main__</code> block.\nThis makes importing <code>analysis_subprocess</code> side-effect-free, making it not\ninterfere with the multiprocessing module when subprocesses execute it\n(since it is the <code>__main__</code> module of the parent process, which multiprocessing executes unconditionally in the child process)</p>\n<p>Actually, further change: make <code>analysis_subprocess.py</code> not even the <code>__main__</code> module when run in the usual way from lyse. Create a module object for the user's\nanalysis routine and insert it into sys.modules as the <code>__main__</code> module\n(and rename the analysis_subprocess module from <code>__main__</code> to\n<code>_analysis_subprocess</code>). Run the user's code in that module's <code>__dict__</code>,\nresetting the dict to its initial state each run.</p>\n<p>This should enable multiprocessing code to find the <code>__main__</code> module and have it refer to the user's analysis routine script instead of <code>analysis_subprocess.py</code>.</p>", "type": "rendered"}, "source": {"commit": {"hash": "4c9ba4dfd251", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/4c9ba4dfd251"}, "html": {"href": "#!/cbillington/lyse/commits/4c9ba4dfd251"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "comment_count": 10, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Lincoln Turner", "uuid": "{7e35ca32-09d7-4a25-a548-32edef727dda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D"}, "html": {"href": "https://bitbucket.org/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2ac774c664cd58fc011cc65e0980b4c1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLT-3.png"}}, "nickname": "lincolndturner", "type": "user", "account_id": "5b46a53d845e7e2cdff75ad3"}}, {"role": "REVIEWER", "participated_on": "2019-05-06T05:09:26.576991+00:00", "type": "participant", "approved": true, "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, {"role": "PARTICIPANT", "participated_on": "2019-05-06T16:36:37.620155+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}}], "reason": "", "updated_on": "2019-05-06T17:31:53.414102+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "080da0076ab4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/080da0076ab4.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/080da0076ab4"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}