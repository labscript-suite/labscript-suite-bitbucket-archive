{"links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/7/comments/33069865.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/7/_/diff#comment-33069865"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/7.json"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/7"}}, "title": "zprocess version update, fix bug reported on mailing list"}, "content": {"raw": "We hit this bug in the Spielman RbLi lab as well (before pulling from my fork to get the fix), so it's not as rare as it first seemed.\n\nIt turns out this bug was a regression introduced by 244cf0e, which itself fixed #18.\n\nBy making lyse ignore empty dataframes when concatenating (as required by pandas \u2265 0.18), the dataframe lost its record of the current columns. This is fine now, as lyse now makes fewer assumptions about the state of columns, and happily recreates and deletes columns as necessary. It's a cleaner situation than before the regression - the situation then was just \"remember any column you've ever seen forever\". Now if you delete shots and add ones with entirely different columns, you'll only see columns relevant to the newer shots, instead of all the old ones full of NaNs. It's still possible to have superfluous columns full of NaNs if you add shots that lack current columns, then delete the shots that *do* have those columns. But that's not so bad - if you're loading shots together like that maybe that's what you want.\n\nAnyway, I have added an extra commit that makes lyse remember the visibility status of columns that were deleted and then reappeared. This means that if you mark columns as hidden, then delete shots, then add shots, the same columns will be hidden and you won't have to re-hide them again. This is how it used to work before the regression, but now the code is more explicit about it rather than expecting the dataframe columns to just live forever as before.", "markup": "markdown", "html": "<p>We hit this bug in the Spielman RbLi lab as well (before pulling from my fork to get the fix), so it's not as rare as it first seemed.</p>\n<p>It turns out this bug was a regression introduced by <a href=\"#!/labscript_suite/lyse/commits/244cf0e\" rel=\"nofollow\" class=\"ap-connect-link\">244cf0e</a>, which itself fixed <a href=\"#!/labscript_suite/lyse/issues/18/compatibility-with-pandas-018\" rel=\"nofollow\" title=\"Compatibility with pandas 0.18\" class=\"ap-connect-link\"><s>#18</s></a>.</p>\n<p>By making lyse ignore empty dataframes when concatenating (as required by pandas \u2265 0.18), the dataframe lost its record of the current columns. This is fine now, as lyse now makes fewer assumptions about the state of columns, and happily recreates and deletes columns as necessary. It's a cleaner situation than before the regression - the situation then was just \"remember any column you've ever seen forever\". Now if you delete shots and add ones with entirely different columns, you'll only see columns relevant to the newer shots, instead of all the old ones full of NaNs. It's still possible to have superfluous columns full of NaNs if you add shots that lack current columns, then delete the shots that <em>do</em> have those columns. But that's not so bad - if you're loading shots together like that maybe that's what you want.</p>\n<p>Anyway, I have added an extra commit that makes lyse remember the visibility status of columns that were deleted and then reappeared. This means that if you mark columns as hidden, then delete shots, then add shots, the same columns will be hidden and you won't have to re-hide them again. This is how it used to work before the regression, but now the code is more explicit about it rather than expecting the dataframe columns to just live forever as before.</p>", "type": "rendered"}, "created_on": "2017-03-13T21:47:03.604180+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-03-14T03:14:22.237555+00:00", "type": "pullrequest_comment", "id": 33069865}