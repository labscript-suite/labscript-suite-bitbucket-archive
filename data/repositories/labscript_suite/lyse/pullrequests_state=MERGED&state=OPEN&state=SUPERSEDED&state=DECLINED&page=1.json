{"pagelen": 50, "size": 72, "values": [{"description": "Fixed bug #13 where lyse did not check for duplicate shots when they arrived at\r\nthe same time.\r\n\r\nAlso wrapped incoming files loop in try: except: so it keeps running in case of\r\nsimilar problems in the future.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/1/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:000000000000%0Dae12d5c236f4?from_pullrequest_id=1"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/1/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/1.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/1/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/1/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/1"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/1/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:000000000000%0Dae12d5c236f4?from_pullrequest_id=1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/1/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/1/statuses_page=1.json"}}, "title": "Fix for bug #13 where lyse did not check for duplicate shots when they arrived at the same time", "close_source_branch": false, "type": "pullrequest", "id": 1, "destination": {"commit": {"hash": "ae12d5c236f4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/ae12d5c236f4.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/ae12d5c236f4"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2015-04-13T04:51:46.662415+00:00", "summary": {"raw": "Fixed bug #13 where lyse did not check for duplicate shots when they arrived at\r\nthe same time.\r\n\r\nAlso wrapped incoming files loop in try: except: so it keeps running in case of\r\nsimilar problems in the future.", "markup": "markdown", "html": "<p>Fixed bug <a href=\"#!/labscript_suite/lyse/issues/13/empty-rows-added-to-lyse-dataframe-causing\" rel=\"nofollow\" title=\"Empty rows added to lyse dataframe, causing &quot;Multiple items found&quot; lookup error\" class=\"ap-connect-link\"><s>#13</s></a> where lyse did not check for duplicate shots when they arrived at\nthe same time.</p>\n<p>Also wrapped incoming files loop in try: except: so it keeps running in case of\nsimilar problems in the future.</p>", "type": "rendered"}, "source": {"commit": {"hash": "8fb777194385", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse/commit/8fb777194385"}, "html": {"href": "#!/monashkrb/lyse/commits/8fb777194385"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse"}, "html": {"href": "#!/monashkrb/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4ad93bc7-ea3c-4386-833a-9f321a894870}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashkrb/lyse", "uuid": "{4ad93bc7-ea3c-4386-833a-9f321a894870}"}, "branch": {"name": "default"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2015-05-25T07:17:25.473439+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": null, "closed_by": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}}, {"description": "Simple try/except wrapper around the \"eng\" option in scientific notation function to prevent errors occurring when a number is outside the range of SI prefixes in the dictionary.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/2/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:000000000000%0D8fb777194385?from_pullrequest_id=2"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/2/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/2.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/2/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/2/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/2"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/2/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:000000000000%0D8fb777194385?from_pullrequest_id=2"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/2/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/2/statuses_page=1.json"}}, "title": "Fixes #15 by catching errors caused by very large or small numbers not having SI prefixes", "close_source_branch": false, "type": "pullrequest", "id": 2, "destination": {"commit": {"hash": "8fb777194385", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/8fb777194385.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/8fb777194385"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2015-07-16T02:09:43.935984+00:00", "summary": {"raw": "Simple try/except wrapper around the \"eng\" option in scientific notation function to prevent errors occurring when a number is outside the range of SI prefixes in the dictionary.", "markup": "markdown", "html": "<p>Simple try/except wrapper around the \"eng\" option in scientific notation function to prevent errors occurring when a number is outside the range of SI prefixes in the dictionary.</p>", "type": "rendered"}, "source": {"commit": {"hash": "0643271a6a5f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse/commit/0643271a6a5f"}, "html": {"href": "#!/monashkrb/lyse/commits/0643271a6a5f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse"}, "html": {"href": "#!/monashkrb/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4ad93bc7-ea3c-4386-833a-9f321a894870}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashkrb/lyse", "uuid": "{4ad93bc7-ea3c-4386-833a-9f321a894870}"}, "branch": {"name": "default"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2015-07-16T04:21:29.860557+00:00", "author": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "merge_commit": null, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "**Fix for issue #16, wrong execution order of routines after reordering with GUI buttons:**\r\n\r\nProblem was confusing a passive transformation with an active transformation when reordering a list:\r\n\r\npassive transformation: constructing a new list from a list of indices saying where in the old list each item should come from (what we were doing)\r\n\r\nactive transformation: constructing a new list out of a list of indices for where in the new list items in the old list should be moved to (what we should have been doing)\r\n\r\nWhen a single routine was moved, this simply swapped it with the one above or below it and so a passive and active transformation of the order were identical, so we didn't notice a problem. But for reordering multiple routines at once it gave the wrong result.\r\n\r\nThe GUI reordering was done with an active transformation as required, but the list used to determine the execution order was erroneously using a passive transformation which is now fixed.\r\n\r\n\r\n**Fix for issue #17, slow dataframe transfers:**\r\n\r\n\r\nMoved call to `df.convert_objects()` to the lyse server, which makes dataframes more\r\nefficiently picklable by replacing columns containing only a single array datatype\r\nwith an array of that datatype. Previously `df.convert_obects()` was only called\r\nafter the transfer, so the preceding pickling was slow.\r\n\r\nFor the large, mostly numeric dataframe tested, this speeds\r\nup pickling and unpickling by approx a factor of 5.\r\n\r\nAlso set `convert_numeric=False` in the call to `df.convert_objects()`. It was\r\npreviously set to `True`, but I don't think this is what we want. With it `False`,\r\nall-numeric columns are still converted as desired. With it `True`, *strings* are\r\nconverted to numbers even if only a single string is convertible to a numeric\r\nvalue, with all non-convertable values in the column becoming NaNs. I don't\r\nthink this is what we want. If the user asked for a string, the data should\r\nremain a string. It is presumptuous to assume otherwise and I suspect a\r\nmisunderstanding by whoever wrote this line originally.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/3/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:c8342f48860c%0D7e2ccc7c66c3?from_pullrequest_id=3"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/3/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/3.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/3/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/3/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/3"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/3/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:c8342f48860c%0D7e2ccc7c66c3?from_pullrequest_id=3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/3/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/3/statuses_page=1.json"}}, "title": "Fixes #16 and #17", "close_source_branch": false, "type": "pullrequest", "id": 3, "destination": {"commit": {"hash": "7e2ccc7c66c3", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/7e2ccc7c66c3.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/7e2ccc7c66c3"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2015-07-28T07:06:34.743712+00:00", "summary": {"raw": "**Fix for issue #16, wrong execution order of routines after reordering with GUI buttons:**\r\n\r\nProblem was confusing a passive transformation with an active transformation when reordering a list:\r\n\r\npassive transformation: constructing a new list from a list of indices saying where in the old list each item should come from (what we were doing)\r\n\r\nactive transformation: constructing a new list out of a list of indices for where in the new list items in the old list should be moved to (what we should have been doing)\r\n\r\nWhen a single routine was moved, this simply swapped it with the one above or below it and so a passive and active transformation of the order were identical, so we didn't notice a problem. But for reordering multiple routines at once it gave the wrong result.\r\n\r\nThe GUI reordering was done with an active transformation as required, but the list used to determine the execution order was erroneously using a passive transformation which is now fixed.\r\n\r\n\r\n**Fix for issue #17, slow dataframe transfers:**\r\n\r\n\r\nMoved call to `df.convert_objects()` to the lyse server, which makes dataframes more\r\nefficiently picklable by replacing columns containing only a single array datatype\r\nwith an array of that datatype. Previously `df.convert_obects()` was only called\r\nafter the transfer, so the preceding pickling was slow.\r\n\r\nFor the large, mostly numeric dataframe tested, this speeds\r\nup pickling and unpickling by approx a factor of 5.\r\n\r\nAlso set `convert_numeric=False` in the call to `df.convert_objects()`. It was\r\npreviously set to `True`, but I don't think this is what we want. With it `False`,\r\nall-numeric columns are still converted as desired. With it `True`, *strings* are\r\nconverted to numbers even if only a single string is convertible to a numeric\r\nvalue, with all non-convertable values in the column becoming NaNs. I don't\r\nthink this is what we want. If the user asked for a string, the data should\r\nremain a string. It is presumptuous to assume otherwise and I suspect a\r\nmisunderstanding by whoever wrote this line originally.", "markup": "markdown", "html": "<p><strong>Fix for issue <a href=\"#!/labscript_suite/lyse/issues/16/multi-shot-routines-run-out-of-order\" rel=\"nofollow\" title=\"Multi-shot routines run out of order\" class=\"ap-connect-link\"><s>#16</s></a>, wrong execution order of routines after reordering with GUI buttons:</strong></p>\n<p>Problem was confusing a passive transformation with an active transformation when reordering a list:</p>\n<p>passive transformation: constructing a new list from a list of indices saying where in the old list each item should come from (what we were doing)</p>\n<p>active transformation: constructing a new list out of a list of indices for where in the new list items in the old list should be moved to (what we should have been doing)</p>\n<p>When a single routine was moved, this simply swapped it with the one above or below it and so a passive and active transformation of the order were identical, so we didn't notice a problem. But for reordering multiple routines at once it gave the wrong result.</p>\n<p>The GUI reordering was done with an active transformation as required, but the list used to determine the execution order was erroneously using a passive transformation which is now fixed.</p>\n<p><strong>Fix for issue <a href=\"#!/labscript_suite/lyse/issues/17/main-interface-is-slow-unresponsive-when\" rel=\"nofollow\" title=\"Main interface is slow/unresponsive when multi-shot routines are running\" class=\"ap-connect-link\"><s>#17</s></a>, slow dataframe transfers:</strong></p>\n<p>Moved call to <code>df.convert_objects()</code> to the lyse server, which makes dataframes more\nefficiently picklable by replacing columns containing only a single array datatype\nwith an array of that datatype. Previously <code>df.convert_obects()</code> was only called\nafter the transfer, so the preceding pickling was slow.</p>\n<p>For the large, mostly numeric dataframe tested, this speeds\nup pickling and unpickling by approx a factor of 5.</p>\n<p>Also set <code>convert_numeric=False</code> in the call to <code>df.convert_objects()</code>. It was\npreviously set to <code>True</code>, but I don't think this is what we want. With it <code>False</code>,\nall-numeric columns are still converted as desired. With it <code>True</code>, <em>strings</em> are\nconverted to numbers even if only a single string is convertible to a numeric\nvalue, with all non-convertable values in the column becoming NaNs. I don't\nthink this is what we want. If the user asked for a string, the data should\nremain a string. It is presumptuous to assume otherwise and I suspect a\nmisunderstanding by whoever wrote this line originally.</p>", "type": "rendered"}, "source": {"commit": {"hash": "7e7c56c7fc4c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse/commit/7e7c56c7fc4c"}, "html": {"href": "#!/monashkrb/lyse/commits/7e7c56c7fc4c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse"}, "html": {"href": "#!/monashkrb/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4ad93bc7-ea3c-4386-833a-9f321a894870}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashkrb/lyse", "uuid": "{4ad93bc7-ea3c-4386-833a-9f321a894870}"}, "branch": {"name": "default"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2016-02-08T01:33:27.015125+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "c8342f48860c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/c8342f48860c.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/c8342f48860c"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Changes in pandas 0.17.0+ break adding shots. DataFrame.concat() may have a bug when concatenating a list of frames containing a null frame, and/or frames with distinct sets of columns.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/4/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:7e2ccc7c66c3%0D0643271a6a5f?from_pullrequest_id=4"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/4/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/4.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/4/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/4/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/4"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/4/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:7e2ccc7c66c3%0D0643271a6a5f?from_pullrequest_id=4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/4/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/4/statuses_page=1.json"}}, "title": "Added version compatibility check for pandas due to changes to DataFrame.concat", "close_source_branch": false, "type": "pullrequest", "id": 4, "destination": {"commit": {"hash": "0643271a6a5f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/0643271a6a5f.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/0643271a6a5f"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2016-01-15T01:19:41.283471+00:00", "summary": {"raw": "Changes in pandas 0.17.0+ break adding shots. DataFrame.concat() may have a bug when concatenating a list of frames containing a null frame, and/or frames with distinct sets of columns.", "markup": "markdown", "html": "<p>Changes in pandas 0.17.0+ break adding shots. DataFrame.concat() may have a bug when concatenating a list of frames containing a null frame, and/or frames with distinct sets of columns.</p>", "type": "rendered"}, "source": {"commit": {"hash": "7e2ccc7c66c3", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse/commit/7e2ccc7c66c3"}, "html": {"href": "#!/monashspinor/lyse/commits/7e2ccc7c66c3"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse"}, "html": {"href": "#!/monashspinor/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashspinor/lyse", "uuid": "{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}"}, "branch": {"name": "default"}}, "comment_count": 8, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2016-01-18T05:40:29.520118+00:00", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "merge_commit": {"hash": "7e2ccc7c66c3dd1b2193c68e8efe799eb5a81347", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/7e2ccc7c66c3dd1b2193c68e8efe799eb5a81347.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/7e2ccc7c66c3dd1b2193c68e8efe799eb5a81347"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "``concat_with_padding`` now only tries to concatenate non-empty DataFrames.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/5/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:01157820d95d%0Dc8342f48860c?from_pullrequest_id=5"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/5/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/5.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/5/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/5/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/5"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/5/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:01157820d95d%0Dc8342f48860c?from_pullrequest_id=5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/5/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/5/statuses_page=1.json"}}, "title": "Fixes issue #18, where adding shots to lyse failed with pandas >= 0.18.", "close_source_branch": false, "type": "pullrequest", "id": 5, "destination": {"commit": {"hash": "c8342f48860c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/c8342f48860c.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/c8342f48860c"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2016-08-22T01:33:15.078019+00:00", "summary": {"raw": "``concat_with_padding`` now only tries to concatenate non-empty DataFrames.", "markup": "markdown", "html": "<p><code>concat_with_padding</code> now only tries to concatenate non-empty DataFrames.</p>", "type": "rendered"}, "source": {"commit": {"hash": "01157820d95d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse/commit/01157820d95d"}, "html": {"href": "#!/monashspinor/lyse/commits/01157820d95d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse"}, "html": {"href": "#!/monashspinor/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashspinor/lyse", "uuid": "{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}"}, "branch": {"name": "default"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2016-08-22T05:30:51.063266+00:00", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "merge_commit": {"hash": "01157820d95d2be45422edfdc806d50492c52863", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/01157820d95d2be45422edfdc806d50492c52863.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/01157820d95d2be45422edfdc806d50492c52863"}}}, "closed_by": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, {"description": "\"An empty object that analysis routines can store data in. It will\r\npersist from one run of an analysis routine to the next when the routine\r\nis being run from within lyse. No attempt is made to store data to disk,\r\nso if the routine is run multiple times from the command line instead of\r\nfrom lyse, or the lyse analysis subprocess is restarted, data will not be\r\nretained. An alternate method should be used to store data if desired in\r\nthese cases\"", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/6/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:a472c0e36c9a%0D3f4880bb9ea6?from_pullrequest_id=6"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/6/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/6.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/6/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/6/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/6"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/6/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:a472c0e36c9a%0D3f4880bb9ea6?from_pullrequest_id=6"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/6/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/6/statuses_page=1.json"}}, "title": "Added an object lyse.routine_storage", "close_source_branch": false, "type": "pullrequest", "id": 6, "destination": {"commit": {"hash": "3f4880bb9ea6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/3f4880bb9ea6.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/3f4880bb9ea6"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2016-10-24T04:33:46.120410+00:00", "summary": {"raw": "\"An empty object that analysis routines can store data in. It will\r\npersist from one run of an analysis routine to the next when the routine\r\nis being run from within lyse. No attempt is made to store data to disk,\r\nso if the routine is run multiple times from the command line instead of\r\nfrom lyse, or the lyse analysis subprocess is restarted, data will not be\r\nretained. An alternate method should be used to store data if desired in\r\nthese cases\"", "markup": "markdown", "html": "<p>\"An empty object that analysis routines can store data in. It will\npersist from one run of an analysis routine to the next when the routine\nis being run from within lyse. No attempt is made to store data to disk,\nso if the routine is run multiple times from the command line instead of\nfrom lyse, or the lyse analysis subprocess is restarted, data will not be\nretained. An alternate method should be used to store data if desired in\nthese cases\"</p>", "type": "rendered"}, "source": {"commit": {"hash": "4b8bc82c35e5", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/4b8bc82c35e5"}, "html": {"href": "#!/cbillington/lyse/commits/4b8bc82c35e5"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "default"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-02-23T00:37:39.168014+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "a472c0e36c9a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/a472c0e36c9a.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/a472c0e36c9a"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "* Allow zprocess 2.0, which is backward compatible.\r\n\r\n* Fixed bug in which columns no longer present in the dataframe (due to removing\r\n    shots) were not removed from the Qt model.\r\n\r\n    This entailed changing DataFrameModel.update_row() and EditColumns.update_columns()\r\n\r\n    DataFrameModel.update_row() was modified to detect when the\r\n    Qt model has columns no longer present in the dataframe (this is the part\r\n    of the code where *new* columns are detected, as well). Defunct columns in the\r\n    Qt model are deleted and a few dictionaries are updated to reflect the new\r\n    numbering of columns.\r\n\r\n    Updated the conditional emission of the signal DataFrameModel.columns_changed()\r\n    at the end of this method. Previously only emitted when new columns were added,\r\n    is now emitted when columns were deleted as well\r\n\r\n    The only slot connected to this signal is FileBox.on_columns_changed(),\r\n    which calls EditColumns.update_columns() with some of the updated dictionaries\r\n    (EditColumns is the GUI for selecting which columns to show in the FileBox).\r\n\r\n    EditColumns.update_columns() has therefore been modified to correctly handle\r\n    the fact that the new dictionaries may have had columns removed, and not just\r\n    added as was previously the case.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/7/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:08e5cce7d63d%0Da472c0e36c9a?from_pullrequest_id=7"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/7/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/7.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/7/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/7/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/7"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/7/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:08e5cce7d63d%0Da472c0e36c9a?from_pullrequest_id=7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/7/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/7/statuses_page=1.json"}}, "title": "zprocess version update, fix bug reported on mailing list", "close_source_branch": true, "type": "pullrequest", "id": 7, "destination": {"commit": {"hash": "a472c0e36c9a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/a472c0e36c9a.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/a472c0e36c9a"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-02-22T15:59:12.975887+00:00", "summary": {"raw": "* Allow zprocess 2.0, which is backward compatible.\r\n\r\n* Fixed bug in which columns no longer present in the dataframe (due to removing\r\n    shots) were not removed from the Qt model.\r\n\r\n    This entailed changing DataFrameModel.update_row() and EditColumns.update_columns()\r\n\r\n    DataFrameModel.update_row() was modified to detect when the\r\n    Qt model has columns no longer present in the dataframe (this is the part\r\n    of the code where *new* columns are detected, as well). Defunct columns in the\r\n    Qt model are deleted and a few dictionaries are updated to reflect the new\r\n    numbering of columns.\r\n\r\n    Updated the conditional emission of the signal DataFrameModel.columns_changed()\r\n    at the end of this method. Previously only emitted when new columns were added,\r\n    is now emitted when columns were deleted as well\r\n\r\n    The only slot connected to this signal is FileBox.on_columns_changed(),\r\n    which calls EditColumns.update_columns() with some of the updated dictionaries\r\n    (EditColumns is the GUI for selecting which columns to show in the FileBox).\r\n\r\n    EditColumns.update_columns() has therefore been modified to correctly handle\r\n    the fact that the new dictionaries may have had columns removed, and not just\r\n    added as was previously the case.", "markup": "markdown", "html": "<ul>\n<li>\n<p>Allow zprocess 2.0, which is backward compatible.</p>\n</li>\n<li>\n<p>Fixed bug in which columns no longer present in the dataframe (due to removing\n    shots) were not removed from the Qt model.</p>\n<p>This entailed changing DataFrameModel.update_row() and EditColumns.update_columns()</p>\n<p>DataFrameModel.update_row() was modified to detect when the\nQt model has columns no longer present in the dataframe (this is the part\nof the code where <em>new</em> columns are detected, as well). Defunct columns in the\nQt model are deleted and a few dictionaries are updated to reflect the new\nnumbering of columns.</p>\n<p>Updated the conditional emission of the signal DataFrameModel.columns_changed()\nat the end of this method. Previously only emitted when new columns were added,\nis now emitted when columns were deleted as well</p>\n<p>The only slot connected to this signal is FileBox.on_columns_changed(),\nwhich calls EditColumns.update_columns() with some of the updated dictionaries\n(EditColumns is the GUI for selecting which columns to show in the FileBox).</p>\n<p>EditColumns.update_columns() has therefore been modified to correctly handle\nthe fact that the new dictionaries may have had columns removed, and not just\nadded as was previously the case.</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "bfa8a51db084", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/bfa8a51db084"}, "html": {"href": "#!/cbillington/lyse/commits/bfa8a51db084"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-11T15:52:31.231043+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "08e5cce7d63d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/08e5cce7d63d.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/08e5cce7d63d"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Pressing delete while having shots selected in the Filebox or routines selected in a RoutineBox will now delete the shots/routines. Also shift-delete suppresses the confirmation dialog box. This is just a keyboard shortcut that hooks into the same callback as clicking delete. Can't just hook a keyboard shortcut to the Qt \"actions\" because there are three different types of deletes depending on focus. So the code checks which has focus and calls the right callback.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/8/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:b9c427570b15%0D08e5cce7d63d?from_pullrequest_id=8"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/8/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/8.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/8/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/8/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/8"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/8/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:b9c427570b15%0D08e5cce7d63d?from_pullrequest_id=8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/8/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/8/statuses_page=1.json"}}, "title": "Added delete keyboard shortcut for deleting shots and routines.", "close_source_branch": true, "type": "pullrequest", "id": 8, "destination": {"commit": {"hash": "08e5cce7d63d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/08e5cce7d63d.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/08e5cce7d63d"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-03-13T22:25:07.539184+00:00", "summary": {"raw": "Pressing delete while having shots selected in the Filebox or routines selected in a RoutineBox will now delete the shots/routines. Also shift-delete suppresses the confirmation dialog box. This is just a keyboard shortcut that hooks into the same callback as clicking delete. Can't just hook a keyboard shortcut to the Qt \"actions\" because there are three different types of deletes depending on focus. So the code checks which has focus and calls the right callback.", "markup": "markdown", "html": "<p>Pressing delete while having shots selected in the Filebox or routines selected in a RoutineBox will now delete the shots/routines. Also shift-delete suppresses the confirmation dialog box. This is just a keyboard shortcut that hooks into the same callback as clicking delete. Can't just hook a keyboard shortcut to the Qt \"actions\" because there are three different types of deletes depending on focus. So the code checks which has focus and calls the right callback.</p>", "type": "rendered"}, "source": {"commit": {"hash": "b3bfb781c0c6", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/b3bfb781c0c6"}, "html": {"href": "#!/cbillington/lyse/commits/b3bfb781c0c6"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "feature"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-11T15:52:45.341566+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "b9c427570b15", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/b9c427570b15.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/b9c427570b15"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Each row's header item now has an integer prefixed to it. These simply increase sequentially and match the dataframe row indices.\r\n\r\nThis makes it possible to quickly find a shot in the Filebox if you know its index in the dataframe, which may be easier to get than the filepath or similar, since by the time a shot becomes a datapoint in a plot it may only be recognisable by its index, as it might have been put into a numpy array or similar.\r\n\r\n![ss_lyse.png](data/bitbucket.org/repo/BMBAeq/images/3933736945-ss_lyse.png)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/9/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:c4908e5d0a94%0Db9c427570b15?from_pullrequest_id=9"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/9/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/9.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/9/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/9/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/9"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/9/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:c4908e5d0a94%0Db9c427570b15?from_pullrequest_id=9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/9/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/9/statuses_page=1.json"}}, "title": "Added integer row labels to FileBox.", "close_source_branch": true, "type": "pullrequest", "id": 9, "destination": {"commit": {"hash": "b9c427570b15", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/b9c427570b15.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/b9c427570b15"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-03-20T21:39:57.285491+00:00", "summary": {"raw": "Each row's header item now has an integer prefixed to it. These simply increase sequentially and match the dataframe row indices.\r\n\r\nThis makes it possible to quickly find a shot in the Filebox if you know its index in the dataframe, which may be easier to get than the filepath or similar, since by the time a shot becomes a datapoint in a plot it may only be recognisable by its index, as it might have been put into a numpy array or similar.\r\n\r\n![ss_lyse.png](data/bitbucket.org/repo/BMBAeq/images/3933736945-ss_lyse.png)", "markup": "markdown", "html": "<p>Each row's header item now has an integer prefixed to it. These simply increase sequentially and match the dataframe row indices.</p>\n<p>This makes it possible to quickly find a shot in the Filebox if you know its index in the dataframe, which may be easier to get than the filepath or similar, since by the time a shot becomes a datapoint in a plot it may only be recognisable by its index, as it might have been put into a numpy array or similar.</p>\n<p><img alt=\"ss_lyse.png\" src=\"data/bitbucket.org/repo/BMBAeq/images/3933736945-ss_lyse.png\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "217e929e06f4", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/217e929e06f4"}, "html": {"href": "#!/cbillington/lyse/commits/217e929e06f4"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "feature2"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-11T15:52:58.484050+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "c4908e5d0a94", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/c4908e5d0a94.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/c4908e5d0a94"}}}, "closed_by": null}, {"description": "Whenever lyse tries to read a HDF5 file that has been deleted, it\r\npreviously would crash. Now, the shot's row\r\nin the filebox is marked with an icon showing it as deleted off disk\r\nand a warning is printed. No more singleshot analysis will be run on that shot\r\nfile, but its data will be kept in the dataframe until the user removes it\r\nfrom the filebox, and thus still be available for multishot analysis.\r\n\r\nThe use case for this is when an experiment is cycling just to 'keep warm' or\r\nwhatever, and shots are being deleted so as not to consume hard drive space.\r\n\r\nI removed some of the unused optional ways of calling some of lyse's\r\ninternal methods so as to decrease the number of places where\r\nlyse reads a HDF5 file. Previously multiple code paths were allowed - one\r\nwhich was a bit cleaner (reading HDF5 files at the last minute)\r\n and one which was a performance optimisation (read them in advance, outside the\r\n GUI thread, and pass the results to the GUI-related methods). Now only\r\nthe performant way of calling these methods is allowed - which is what all\r\nthe calling code was using anyway.\r\n\r\n![lyse_screenshot.png](data/bitbucket.org/repo/oEX56b/images/107755377-lyse_screenshot.png)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/10/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:9181f4c7d97e%0Df6184e67ecfb?from_pullrequest_id=10"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/10/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/10.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/10/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/10/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/10"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/10/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:9181f4c7d97e%0Df6184e67ecfb?from_pullrequest_id=10"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/10/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/10/statuses_page=1.json"}}, "title": "Make lyse handle gracefully shot files that have been deleted off disk.", "close_source_branch": true, "type": "pullrequest", "id": 10, "destination": {"commit": {"hash": "f6184e67ecfb", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/f6184e67ecfb.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/f6184e67ecfb"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-04-11T21:46:33.992301+00:00", "summary": {"raw": "Whenever lyse tries to read a HDF5 file that has been deleted, it\r\npreviously would crash. Now, the shot's row\r\nin the filebox is marked with an icon showing it as deleted off disk\r\nand a warning is printed. No more singleshot analysis will be run on that shot\r\nfile, but its data will be kept in the dataframe until the user removes it\r\nfrom the filebox, and thus still be available for multishot analysis.\r\n\r\nThe use case for this is when an experiment is cycling just to 'keep warm' or\r\nwhatever, and shots are being deleted so as not to consume hard drive space.\r\n\r\nI removed some of the unused optional ways of calling some of lyse's\r\ninternal methods so as to decrease the number of places where\r\nlyse reads a HDF5 file. Previously multiple code paths were allowed - one\r\nwhich was a bit cleaner (reading HDF5 files at the last minute)\r\n and one which was a performance optimisation (read them in advance, outside the\r\n GUI thread, and pass the results to the GUI-related methods). Now only\r\nthe performant way of calling these methods is allowed - which is what all\r\nthe calling code was using anyway.\r\n\r\n![lyse_screenshot.png](data/bitbucket.org/repo/oEX56b/images/107755377-lyse_screenshot.png)", "markup": "markdown", "html": "<p>Whenever lyse tries to read a HDF5 file that has been deleted, it\npreviously would crash. Now, the shot's row\nin the filebox is marked with an icon showing it as deleted off disk\nand a warning is printed. No more singleshot analysis will be run on that shot\nfile, but its data will be kept in the dataframe until the user removes it\nfrom the filebox, and thus still be available for multishot analysis.</p>\n<p>The use case for this is when an experiment is cycling just to 'keep warm' or\nwhatever, and shots are being deleted so as not to consume hard drive space.</p>\n<p>I removed some of the unused optional ways of calling some of lyse's\ninternal methods so as to decrease the number of places where\nlyse reads a HDF5 file. Previously multiple code paths were allowed - one\nwhich was a bit cleaner (reading HDF5 files at the last minute)\n and one which was a performance optimisation (read them in advance, outside the\n GUI thread, and pass the results to the GUI-related methods). Now only\nthe performant way of calling these methods is allowed - which is what all\nthe calling code was using anyway.</p>\n<p><img alt=\"lyse_screenshot.png\" src=\"data/bitbucket.org/repo/oEX56b/images/107755377-lyse_screenshot.png\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "0b35e6e97062", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/0b35e6e97062"}, "html": {"href": "#!/cbillington/lyse/commits/0b35e6e97062"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "feature"}}, "comment_count": 10, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-26T17:28:53.699155+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "9181f4c7d97e", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/9181f4c7d97e.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/9181f4c7d97e"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Presently the labscript suite uses a timestamp to identify sequences. The Spielman labs have introduced in addition to this a simple incrementing integer that counts from zero each day.\r\n\r\nThis pull request adds backward-compatible code to read in this `sequence_index` and put it in the dataframe in lyse, for those shots that have a `sequence_index`. `None` will be used for shots that do not have a `sequence_index` attribute.\r\n\r\nThis pull request as well as the pending \"lyse can deal with deleted shots better\" one represent convergence between the Spielman and main forks for lyse.\r\n\r\nMy plan at the moment is to modify runmanager to implement the `sequence_index` in a backward compatible way (which may already be the case for how it is implemented in the Spielman fork), so that both can coexist, and that the actual folder hierarchy that shot files get put in, and their filenames can be user configurable using something like a format string in the labconfig file - or just a setting to choose between two schemes. I think it is worth still demanding that the filenames uniquely identify the sequence and shot, which Spielman-fork-labscript doesn't currently enforce, so perhaps rather than an arbitrary format we can choose between:\r\n\r\n20170412T130554_test_0.h5\r\n\r\nand:\r\n\r\n2017-04-12_002_test_0.h5\r\n\r\n(where 002 is an example `sequence index`) so that filenames are still unique. In practice for me it's been quite nice having a single folder per sequence rather than dumping them all together, whether the filenames are unique or not. Anyway, as I said this should all be done in a backward compatible and configurable way that makes everybody happy, and can be debated in future pull requests for runmanager changes.\r\n\r\nIf these changes sound concerning, I think they shouldn't be - after giving it some thought I suspect I will be able to make everyone happy. At the very least things will be backward compatible and considered a bug if they're not.\r\n\r\nI've added everyone as reviewers not because I want them all to approve this (relatively tiny) change, but just so you get a notification and opportunity to chime in, because we don't really have a \"labscriptsuite-dev\" mailing list. I am considering either making one, or perhaps just starting to use the existing mailing list for development discussions. Let me know what you'd rather.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/11/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:4f78edf03091%0D5399a71f9447?from_pullrequest_id=11"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/11/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/11"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:4f78edf03091%0D5399a71f9447?from_pullrequest_id=11"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/11/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/11/statuses_page=1.json"}}, "title": "Read \"sequence_index\" attribute from shots that have it", "close_source_branch": false, "type": "pullrequest", "id": 11, "destination": {"commit": {"hash": "5399a71f9447", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/5399a71f9447.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/5399a71f9447"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-04-12T19:19:27.862796+00:00", "summary": {"raw": "Presently the labscript suite uses a timestamp to identify sequences. The Spielman labs have introduced in addition to this a simple incrementing integer that counts from zero each day.\r\n\r\nThis pull request adds backward-compatible code to read in this `sequence_index` and put it in the dataframe in lyse, for those shots that have a `sequence_index`. `None` will be used for shots that do not have a `sequence_index` attribute.\r\n\r\nThis pull request as well as the pending \"lyse can deal with deleted shots better\" one represent convergence between the Spielman and main forks for lyse.\r\n\r\nMy plan at the moment is to modify runmanager to implement the `sequence_index` in a backward compatible way (which may already be the case for how it is implemented in the Spielman fork), so that both can coexist, and that the actual folder hierarchy that shot files get put in, and their filenames can be user configurable using something like a format string in the labconfig file - or just a setting to choose between two schemes. I think it is worth still demanding that the filenames uniquely identify the sequence and shot, which Spielman-fork-labscript doesn't currently enforce, so perhaps rather than an arbitrary format we can choose between:\r\n\r\n20170412T130554_test_0.h5\r\n\r\nand:\r\n\r\n2017-04-12_002_test_0.h5\r\n\r\n(where 002 is an example `sequence index`) so that filenames are still unique. In practice for me it's been quite nice having a single folder per sequence rather than dumping them all together, whether the filenames are unique or not. Anyway, as I said this should all be done in a backward compatible and configurable way that makes everybody happy, and can be debated in future pull requests for runmanager changes.\r\n\r\nIf these changes sound concerning, I think they shouldn't be - after giving it some thought I suspect I will be able to make everyone happy. At the very least things will be backward compatible and considered a bug if they're not.\r\n\r\nI've added everyone as reviewers not because I want them all to approve this (relatively tiny) change, but just so you get a notification and opportunity to chime in, because we don't really have a \"labscriptsuite-dev\" mailing list. I am considering either making one, or perhaps just starting to use the existing mailing list for development discussions. Let me know what you'd rather.", "markup": "markdown", "html": "<p>Presently the labscript suite uses a timestamp to identify sequences. The Spielman labs have introduced in addition to this a simple incrementing integer that counts from zero each day.</p>\n<p>This pull request adds backward-compatible code to read in this <code>sequence_index</code> and put it in the dataframe in lyse, for those shots that have a <code>sequence_index</code>. <code>None</code> will be used for shots that do not have a <code>sequence_index</code> attribute.</p>\n<p>This pull request as well as the pending \"lyse can deal with deleted shots better\" one represent convergence between the Spielman and main forks for lyse.</p>\n<p>My plan at the moment is to modify runmanager to implement the <code>sequence_index</code> in a backward compatible way (which may already be the case for how it is implemented in the Spielman fork), so that both can coexist, and that the actual folder hierarchy that shot files get put in, and their filenames can be user configurable using something like a format string in the labconfig file - or just a setting to choose between two schemes. I think it is worth still demanding that the filenames uniquely identify the sequence and shot, which Spielman-fork-labscript doesn't currently enforce, so perhaps rather than an arbitrary format we can choose between:</p>\n<p>20170412T130554_test_0.h5</p>\n<p>and:</p>\n<p>2017-04-12_002_test_0.h5</p>\n<p>(where 002 is an example <code>sequence index</code>) so that filenames are still unique. In practice for me it's been quite nice having a single folder per sequence rather than dumping them all together, whether the filenames are unique or not. Anyway, as I said this should all be done in a backward compatible and configurable way that makes everybody happy, and can be debated in future pull requests for runmanager changes.</p>\n<p>If these changes sound concerning, I think they shouldn't be - after giving it some thought I suspect I will be able to make everyone happy. At the very least things will be backward compatible and considered a bug if they're not.</p>\n<p>I've added everyone as reviewers not because I want them all to approve this (relatively tiny) change, but just so you get a notification and opportunity to chime in, because we don't really have a \"labscriptsuite-dev\" mailing list. I am considering either making one, or perhaps just starting to use the existing mailing list for development discussions. Let me know what you'd rather.</p>", "type": "rendered"}, "source": {"commit": {"hash": "1cd498affc6e", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/1cd498affc6e"}, "html": {"href": "#!/cbillington/lyse/commits/1cd498affc6e"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "feature2"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-06-19T00:44:22.178998+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "4f78edf03091", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/4f78edf03091.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/4f78edf03091"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "Added \"copy to clipboard\" functionality for plots. An image can be copied to\r\nthe clipboard by clicking a button in the plot window's toolbar, or by ctrl-c/cmd-c when\r\nthe plot window has focus.\r\n\r\nCopying can also be done programatically like:\r\n\r\n        lyse.figure_to_clipboard(fig)\r\n\r\nThe copying is implemented by calling `savefig()` on the matplotlib figure object, then launching a subprocess that reads the resulting image file, puts it on the clipboard and then remains running until the clipboard is overwritten. This is necessary on some systems - most linux systems don't actually store copied data that is over a certain size, they wait until it is pasted before getting it from the memory of the source, so that program has to still be running or you lose your copied data. I've read this may or may not be the case sometimes on Windows or osx. Anyway the subprocess keeps the use of Qt separate from that of the main program, when not keeping it separate I also had strange behaviour like a 10 second hang at program shutdown (possibly Qt asking the window manager \"pretty please store my copy buffer, I'm about to close\" and the window manager just ignoring it until timeout).\r\n\r\nI originally envisioned having a way to programatically add text to the copy buffer so that the text and plot image would be copied together for pasting into a lab logbook, but this has turned out to be much more complex. I tested a few programs that allow you to copy text and images, and while they always work with themselves, interoperability is patchy.\r\n\r\nSince I'm using Qt to interact with the clipboard, and Qt does support putting arbitrary mime types on the clipboard, if we can figure out which mime type has the best interoperability for programs people are likely to be pasting into, then I can add this functionality later.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/12/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:8b07419dca65%0Dc4908e5d0a94?from_pullrequest_id=12"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/12/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/12.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/12/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/12/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/12"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/12/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:8b07419dca65%0Dc4908e5d0a94?from_pullrequest_id=12"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/12/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/12/statuses_page=1.json"}}, "title": "Copy plot to clipboard", "close_source_branch": false, "type": "pullrequest", "id": 12, "destination": {"commit": {"hash": "c4908e5d0a94", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/c4908e5d0a94.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/c4908e5d0a94"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-04-26T04:57:05.769255+00:00", "summary": {"raw": "Added \"copy to clipboard\" functionality for plots. An image can be copied to\r\nthe clipboard by clicking a button in the plot window's toolbar, or by ctrl-c/cmd-c when\r\nthe plot window has focus.\r\n\r\nCopying can also be done programatically like:\r\n\r\n        lyse.figure_to_clipboard(fig)\r\n\r\nThe copying is implemented by calling `savefig()` on the matplotlib figure object, then launching a subprocess that reads the resulting image file, puts it on the clipboard and then remains running until the clipboard is overwritten. This is necessary on some systems - most linux systems don't actually store copied data that is over a certain size, they wait until it is pasted before getting it from the memory of the source, so that program has to still be running or you lose your copied data. I've read this may or may not be the case sometimes on Windows or osx. Anyway the subprocess keeps the use of Qt separate from that of the main program, when not keeping it separate I also had strange behaviour like a 10 second hang at program shutdown (possibly Qt asking the window manager \"pretty please store my copy buffer, I'm about to close\" and the window manager just ignoring it until timeout).\r\n\r\nI originally envisioned having a way to programatically add text to the copy buffer so that the text and plot image would be copied together for pasting into a lab logbook, but this has turned out to be much more complex. I tested a few programs that allow you to copy text and images, and while they always work with themselves, interoperability is patchy.\r\n\r\nSince I'm using Qt to interact with the clipboard, and Qt does support putting arbitrary mime types on the clipboard, if we can figure out which mime type has the best interoperability for programs people are likely to be pasting into, then I can add this functionality later.", "markup": "markdown", "html": "<p>Added \"copy to clipboard\" functionality for plots. An image can be copied to\nthe clipboard by clicking a button in the plot window's toolbar, or by ctrl-c/cmd-c when\nthe plot window has focus.</p>\n<p>Copying can also be done programatically like:</p>\n<div class=\"codehilite\"><pre><span></span>    lyse.figure_to_clipboard(fig)\n</pre></div>\n\n\n<p>The copying is implemented by calling <code>savefig()</code> on the matplotlib figure object, then launching a subprocess that reads the resulting image file, puts it on the clipboard and then remains running until the clipboard is overwritten. This is necessary on some systems - most linux systems don't actually store copied data that is over a certain size, they wait until it is pasted before getting it from the memory of the source, so that program has to still be running or you lose your copied data. I've read this may or may not be the case sometimes on Windows or osx. Anyway the subprocess keeps the use of Qt separate from that of the main program, when not keeping it separate I also had strange behaviour like a 10 second hang at program shutdown (possibly Qt asking the window manager \"pretty please store my copy buffer, I'm about to close\" and the window manager just ignoring it until timeout).</p>\n<p>I originally envisioned having a way to programatically add text to the copy buffer so that the text and plot image would be copied together for pasting into a lab logbook, but this has turned out to be much more complex. I tested a few programs that allow you to copy text and images, and while they always work with themselves, interoperability is patchy.</p>\n<p>Since I'm using Qt to interact with the clipboard, and Qt does support putting arbitrary mime types on the clipboard, if we can figure out which mime type has the best interoperability for programs people are likely to be pasting into, then I can add this functionality later.</p>", "type": "rendered"}, "source": {"commit": {"hash": "0bb629e431be", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/0bb629e431be"}, "html": {"href": "#!/cbillington/lyse/commits/0bb629e431be"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "feature3"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-04-26T05:15:14.661428+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "8b07419dca65", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/8b07419dca65.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/8b07419dca65"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "Fixed bugs in clipboard functionality: do not import pathlib as some python 2 installations do not have it. Do not import PyQt4.QtWidgets, as on older versions of PyQt4 this is only available as PyQt4.QtGui.\r\n\r\nDefault to bbox_inches='tight' to avoid copying large amounts of whitespace when copying a figure.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/13/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:6be8ff02601d%0D8b07419dca65?from_pullrequest_id=13"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/13/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/13.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/13/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/13/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/13"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/13/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:6be8ff02601d%0D8b07419dca65?from_pullrequest_id=13"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/13/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/13/statuses_page=1.json"}}, "title": "Bugfix and improvement to copy-to-clipboard functionality", "close_source_branch": false, "type": "pullrequest", "id": 13, "destination": {"commit": {"hash": "8b07419dca65", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/8b07419dca65.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/8b07419dca65"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-05-01T18:32:40.168128+00:00", "summary": {"raw": "Fixed bugs in clipboard functionality: do not import pathlib as some python 2 installations do not have it. Do not import PyQt4.QtWidgets, as on older versions of PyQt4 this is only available as PyQt4.QtGui.\r\n\r\nDefault to bbox_inches='tight' to avoid copying large amounts of whitespace when copying a figure.", "markup": "markdown", "html": "<p>Fixed bugs in clipboard functionality: do not import pathlib as some python 2 installations do not have it. Do not import PyQt4.QtWidgets, as on older versions of PyQt4 this is only available as PyQt4.QtGui.</p>\n<p>Default to bbox_inches='tight' to avoid copying large amounts of whitespace when copying a figure.</p>", "type": "rendered"}, "source": {"commit": {"hash": "679a5e64ece4", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/679a5e64ece4"}, "html": {"href": "#!/cbillington/lyse/commits/679a5e64ece4"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "feature3"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-02T00:30:15.269110+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "6be8ff02601d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/6be8ff02601d.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/6be8ff02601d"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "Sort has been removed as of pandas 0.20.\r\nNote that there are still incompatabilities with pandas 0.20 in lyse (see issue #20), so I've set it to check that the version is less than this.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/14/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:f6184e67ecfb%0D6be8ff02601d?from_pullrequest_id=14"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/14/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/14.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/14/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/14/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/14"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/14/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:f6184e67ecfb%0D6be8ff02601d?from_pullrequest_id=14"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/14/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/14/statuses_page=1.json"}}, "title": "Replaced call of depreciated pandas sort() function with sort_index() to ensure forwards compatibility with pandas.", "close_source_branch": false, "type": "pullrequest", "id": 14, "destination": {"commit": {"hash": "6be8ff02601d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/6be8ff02601d.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/6be8ff02601d"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-05-19T00:37:53.971224+00:00", "summary": {"raw": "Sort has been removed as of pandas 0.20.\r\nNote that there are still incompatabilities with pandas 0.20 in lyse (see issue #20), so I've set it to check that the version is less than this.", "markup": "markdown", "html": "<p>Sort has been removed as of pandas 0.20.\nNote that there are still incompatabilities with pandas 0.20 in lyse (see issue <a href=\"#!/labscript_suite/lyse/issues/20/incompatibilities-with-pandas-0201\" rel=\"nofollow\" title=\"Incompatibilities with pandas 0.20.1\" class=\"ap-connect-link\"><s>#20</s></a>), so I've set it to check that the version is less than this.</p>", "type": "rendered"}, "source": {"commit": {"hash": "f6184e67ecfb", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse/commit/f6184e67ecfb"}, "html": {"href": "#!/monashkrb/lyse/commits/f6184e67ecfb"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/lyse"}, "html": {"href": "#!/monashkrb/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4ad93bc7-ea3c-4386-833a-9f321a894870}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashkrb/lyse", "uuid": "{4ad93bc7-ea3c-4386-833a-9f321a894870}"}, "branch": {"name": "default"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-19T15:04:09.821423+00:00", "author": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "merge_commit": {"hash": "f6184e67ecfb", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/f6184e67ecfb.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/f6184e67ecfb"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Fixed issue #20, dataframe_utilities.replace_with_padding() not working on pandas 0.20.1.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/15/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:3fe5aca35f87%0D9181f4c7d97e?from_pullrequest_id=15"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/15/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/15.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/15/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/15/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/15"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/15/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:3fe5aca35f87%0D9181f4c7d97e?from_pullrequest_id=15"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/15/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/15/statuses_page=1.json"}}, "title": "Fixed issue #20", "close_source_branch": true, "type": "pullrequest", "id": 15, "destination": {"commit": {"hash": "9181f4c7d97e", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/9181f4c7d97e.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/9181f4c7d97e"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-05-22T16:28:24.552711+00:00", "summary": {"raw": "Fixed issue #20, dataframe_utilities.replace_with_padding() not working on pandas 0.20.1.", "markup": "markdown", "html": "<p>Fixed issue <a href=\"#!/labscript_suite/lyse/issues/20/incompatibilities-with-pandas-0201\" rel=\"nofollow\" title=\"Incompatibilities with pandas 0.20.1\" class=\"ap-connect-link\"><s>#20</s></a>, dataframe_utilities.replace_with_padding() not working on pandas 0.20.1.</p>", "type": "rendered"}, "source": {"commit": {"hash": "53a3b7b18493", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/53a3b7b18493"}, "html": {"href": "#!/cbillington/lyse/commits/53a3b7b18493"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-06-06T18:11:03.269229+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "3fe5aca35f87", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/3fe5aca35f87.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/3fe5aca35f87"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Sequence.get_trace and Sequence.get_result_array didn't work because of run and path being in the wrong order. This should fix it.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/16/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:5399a71f9447%0D3fe5aca35f87?from_pullrequest_id=16"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/16/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/16.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/16/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/16/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/16"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/16/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:5399a71f9447%0D3fe5aca35f87?from_pullrequest_id=16"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/16/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/16/statuses_page=1.json"}}, "title": "Fixed Sequence.get_trace and Sequence.get_result_array", "close_source_branch": false, "type": "pullrequest", "id": 16, "destination": {"commit": {"hash": "3fe5aca35f87", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/3fe5aca35f87.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/3fe5aca35f87"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-06-13T20:52:42.279336+00:00", "summary": {"raw": "Sequence.get_trace and Sequence.get_result_array didn't work because of run and path being in the wrong order. This should fix it.", "markup": "markdown", "html": "<p>Sequence.get_trace and Sequence.get_result_array didn't work because of run and path being in the wrong order. This should fix it.</p>", "type": "rendered"}, "source": {"commit": {"hash": "5399a71f9447", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/5399a71f9447"}, "html": {"href": "#!/PhyNerd/lyse/commits/5399a71f9447"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "default"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-06-13T21:08:40.938258+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "5399a71f9447", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/5399a71f9447.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/5399a71f9447"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This change should speedup singleshot scripts by eliminating read operations at the end of analysis(haven't checkt if this is the case). It also adds updating the dataframe after multishot analysis. This can be useful at a later time if we decide to add functionality for sequences to save to the individual runs.\r\n\r\nThis was also discussed in Issue #22", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/17/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:2e16928a6e62%0Db2c123e4263f?from_pullrequest_id=17"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/17/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/17"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:2e16928a6e62%0Db2c123e4263f?from_pullrequest_id=17"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/17/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/17/statuses_page=1.json"}}, "title": "Update Dataframe without Readoperations", "close_source_branch": false, "type": "pullrequest", "id": 17, "destination": {"commit": {"hash": "b2c123e4263f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/b2c123e4263f.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/b2c123e4263f"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-06-20T20:43:22.635305+00:00", "summary": {"raw": "This change should speedup singleshot scripts by eliminating read operations at the end of analysis(haven't checkt if this is the case). It also adds updating the dataframe after multishot analysis. This can be useful at a later time if we decide to add functionality for sequences to save to the individual runs.\r\n\r\nThis was also discussed in Issue #22", "markup": "markdown", "html": "<p>This change should speedup singleshot scripts by eliminating read operations at the end of analysis(haven't checkt if this is the case). It also adds updating the dataframe after multishot analysis. This can be useful at a later time if we decide to add functionality for sequences to save to the individual runs.</p>\n<p>This was also discussed in Issue <a href=\"#!/labscript_suite/lyse/issues/22/allow-multishot-routines-to-add-to\" rel=\"nofollow\" title=\"Allow Multishot Routines to add to dataframe\" class=\"ap-connect-link\"><s>#22</s></a></p>", "type": "rendered"}, "source": {"commit": {"hash": "5dd2475a9618", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/5dd2475a9618"}, "html": {"href": "#!/PhyNerd/lyse/commits/5dd2475a9618"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "UpdateDataframeNoRead"}}, "comment_count": 44, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-01T00:44:49.742864+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "2e16928a6e62", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/2e16928a6e62.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/2e16928a6e62"}}}, "closed_by": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}}, {"description": "This pull request adresses issue #24 and adds the ability to save the current routines to a configuration file, revert back to previously saved configurations and load configurations.\r\nTo achieve the restore of the checked state of routines a few modifications to AnalysisRoutine and RoutineBox were needed.\r\nThe rest of the code is mainly copied from runmanager's source code.\r\n\r\nIn the future one could also think about adding the ability to save the dataframe to disk with one of pandas export functions (and restore it at a later point) however this is a bit harder and not part of this pull request.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/18/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:9c6bbe1588f2%0D37bf5c9a8493?from_pullrequest_id=18"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/18/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/18"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:9c6bbe1588f2%0D37bf5c9a8493?from_pullrequest_id=18"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/18/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/18/statuses_page=1.json"}}, "title": "Added ability to restore UI state", "close_source_branch": true, "type": "pullrequest", "id": 18, "destination": {"commit": {"hash": "37bf5c9a8493", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/37bf5c9a8493.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/37bf5c9a8493"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-07-05T19:39:14.782562+00:00", "summary": {"raw": "This pull request adresses issue #24 and adds the ability to save the current routines to a configuration file, revert back to previously saved configurations and load configurations.\r\nTo achieve the restore of the checked state of routines a few modifications to AnalysisRoutine and RoutineBox were needed.\r\nThe rest of the code is mainly copied from runmanager's source code.\r\n\r\nIn the future one could also think about adding the ability to save the dataframe to disk with one of pandas export functions (and restore it at a later point) however this is a bit harder and not part of this pull request.", "markup": "markdown", "html": "<p>This pull request adresses issue <a href=\"#!/labscript_suite/lyse/issues/24/use-configuration-file-to-load-default\" rel=\"nofollow\" title=\"Use configuration file to load default analysis scripts\" class=\"ap-connect-link\"><s>#24</s></a> and adds the ability to save the current routines to a configuration file, revert back to previously saved configurations and load configurations.\nTo achieve the restore of the checked state of routines a few modifications to AnalysisRoutine and RoutineBox were needed.\nThe rest of the code is mainly copied from runmanager's source code.</p>\n<p>In the future one could also think about adding the ability to save the dataframe to disk with one of pandas export functions (and restore it at a later point) however this is a bit harder and not part of this pull request.</p>", "type": "rendered"}, "source": {"commit": {"hash": "4065f47a32e8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/4065f47a32e8"}, "html": {"href": "#!/PhyNerd/lyse/commits/4065f47a32e8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "Config"}}, "comment_count": 53, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-16T19:30:52.668552+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "9c6bbe1588f2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/9c6bbe1588f2.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/9c6bbe1588f2"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Lyse currently crashes when executing analysis files that have non-ASCII characters(such as german Umlauts) in their filename.\r\nThis small change fixes that bug.\r\nThe screenshot shows the bug and the working execution of the analysis file after the bugfix is implemented (and the worker is restarted).\r\n![umlaut.png](data/bitbucket.org/repo/8zX8ezL/images/3075161029-umlaut.png)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/19/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/PhyNerd/lyse:ee1c8d4e1a1a%0D4f78edf03091?from_pullrequest_id=19"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/19/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/19.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/19/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/19/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/19"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/19/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/PhyNerd/lyse:ee1c8d4e1a1a%0D4f78edf03091?from_pullrequest_id=19"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/19/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/19/statuses_page=1.json"}}, "title": "Fix for non ASCII character bug", "close_source_branch": false, "type": "pullrequest", "id": 19, "destination": {"commit": {"hash": "4f78edf03091", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/4f78edf03091.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/4f78edf03091"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-07-06T18:37:20.021066+00:00", "summary": {"raw": "Lyse currently crashes when executing analysis files that have non-ASCII characters(such as german Umlauts) in their filename.\r\nThis small change fixes that bug.\r\nThe screenshot shows the bug and the working execution of the analysis file after the bugfix is implemented (and the worker is restarted).\r\n![umlaut.png](data/bitbucket.org/repo/8zX8ezL/images/3075161029-umlaut.png)", "markup": "markdown", "html": "<p>Lyse currently crashes when executing analysis files that have non-ASCII characters(such as german Umlauts) in their filename.\nThis small change fixes that bug.\nThe screenshot shows the bug and the working execution of the analysis file after the bugfix is implemented (and the worker is restarted).\n<img alt=\"umlaut.png\" src=\"data/bitbucket.org/repo/8zX8ezL/images/3075161029-umlaut.png\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "ee1c8d4e1a1a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/ee1c8d4e1a1a"}, "html": {"href": "#!/PhyNerd/lyse/commits/ee1c8d4e1a1a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "Umlautfix"}}, "comment_count": 0, "state": "DECLINED", "task_count": 0, "reason": "Lets lyse crash if a error is raised in a script, that uses non ascii characters. Need a bit more though.", "updated_on": "2017-07-07T10:04:30.460269+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": null, "closed_by": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}}, {"description": "This improves loading files speed by a Factor of 3 sometimes 4.\r\nAs the screenshot shows the line is about 4 times faster now.\r\n![performance.png](data/bitbucket.org/repo/8zX8ezL/images/2911508828-performance.png)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/20/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:cb33aaf008d5%0D4f78edf03091?from_pullrequest_id=20"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/20/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/20.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/20/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/20/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/20"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/20/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:cb33aaf008d5%0D4f78edf03091?from_pullrequest_id=20"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/20/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/20/statuses_page=1.json"}}, "title": "Increased performance of dataframe to dict", "close_source_branch": false, "type": "pullrequest", "id": 20, "destination": {"commit": {"hash": "4f78edf03091", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/4f78edf03091.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/4f78edf03091"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-07-13T13:22:46.045899+00:00", "summary": {"raw": "This improves loading files speed by a Factor of 3 sometimes 4.\r\nAs the screenshot shows the line is about 4 times faster now.\r\n![performance.png](data/bitbucket.org/repo/8zX8ezL/images/2911508828-performance.png)", "markup": "markdown", "html": "<p>This improves loading files speed by a Factor of 3 sometimes 4.\nAs the screenshot shows the line is about 4 times faster now.\n<img alt=\"performance.png\" src=\"data/bitbucket.org/repo/8zX8ezL/images/2911508828-performance.png\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "d06be5b7b48d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/d06be5b7b48d"}, "html": {"href": "#!/PhyNerd/lyse/commits/d06be5b7b48d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "Faster-File-Loading"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-07-17T16:17:44.818212+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "cb33aaf008d5", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/cb33aaf008d5.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/cb33aaf008d5"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Closing and dummy-merging all inactive branches.\r\n\r\nBranches closed include the gtk branch, which it looks like for some reason I had some commits for (including one by phil) which were not in the main repo. Don't know why, but it's pretty irrelevant now that the gtk branch is dead.\r\n\r\nThis pull request previously had a bugfix in it about supporting non-ascii analysis routine filenames, but that has turned out to be trickier than thought so it's now just about pruning dead branches.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/21/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:b2c123e4263f%0Dcb33aaf008d5?from_pullrequest_id=21"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/21/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/21.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/21/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/21/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/21"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/21/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:b2c123e4263f%0Dcb33aaf008d5?from_pullrequest_id=21"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/21/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/21/statuses_page=1.json"}}, "title": "Close all unclosed branches", "close_source_branch": true, "type": "pullrequest", "id": 21, "destination": {"commit": {"hash": "cb33aaf008d5", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/cb33aaf008d5.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/cb33aaf008d5"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-07-22T18:45:26.350178+00:00", "summary": {"raw": "Closing and dummy-merging all inactive branches.\r\n\r\nBranches closed include the gtk branch, which it looks like for some reason I had some commits for (including one by phil) which were not in the main repo. Don't know why, but it's pretty irrelevant now that the gtk branch is dead.\r\n\r\nThis pull request previously had a bugfix in it about supporting non-ascii analysis routine filenames, but that has turned out to be trickier than thought so it's now just about pruning dead branches.", "markup": "markdown", "html": "<p>Closing and dummy-merging all inactive branches.</p>\n<p>Branches closed include the gtk branch, which it looks like for some reason I had some commits for (including one by phil) which were not in the main repo. Don't know why, but it's pretty irrelevant now that the gtk branch is dead.</p>\n<p>This pull request previously had a bugfix in it about supporting non-ascii analysis routine filenames, but that has turned out to be trickier than thought so it's now just about pruning dead branches.</p>", "type": "rendered"}, "source": {"commit": {"hash": "68a14e8673e1", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/68a14e8673e1"}, "html": {"href": "#!/cbillington/lyse/commits/68a14e8673e1"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-07-24T18:03:52.881424+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "b2c123e4263f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/b2c123e4263f.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/b2c123e4263f"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "* Unicode dataframe column labels\r\n\r\n* all `__future__` imports enabled in all files\r\n\r\n* execfile() replaced with compile & exec, as forward compatible with Python 3\r\n(as well as allowing for non-ascii filenames, addressing issue #28).\r\n\r\n* Require zprocess 2.2.2 which fixes a bug that prevented sending non-ascii\r\ncharacters to the output box.\r\n\r\n* `str` aliased to `unicode` in Python 2.\r\n\r\n* set current working directory to that of the script prior to executing it\r\n\r\n* These changes are not tested in Python 3, but getting all strings unicode in\r\nPython 2 as well as all other `__future__` imports enabled is a good first step\r\nfor Python 3 compatibility. Further Python 3 compatibility should wait until PyQt5 porting (if any is required) is done.\r\n\r\n* In Python 2, unicode strings and bytestrings pass equality checks, meaning that\r\nindexing dataframes with bytestrings will still get the right columns even\r\nthough the column labels are now unicode strings:\r\n\r\n```\r\n>>> df[u'test_\u00fcmlaut', 'x']\r\nsequence                   run time\r\n2017-06-21 13:17:38-04:00  2017-07-25 16:15:53-04:00    70.0\r\n                           2017-07-25 16:15:54-04:00    70.0\r\n                           2017-07-25 16:15:54-04:00    70.0\r\n                           2017-07-25 16:15:54-04:00    70.0\r\n                           2017-07-25 16:15:54-04:00    70.0\r\nName: (test_\u00fcmlaut, x), dtype: float64\r\n```\r\n\r\nThis pull request should be compatible with @PhyNerd's pending \"update dataframe\" pull request (although his pull request converts dictionary keys to strings, this one aliases `str` to `unicode`, and so once applied will mean the other pull request will result in unicode dataframe keys as well)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/22/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:b90281ed6296%0Da0014cba8d91?from_pullrequest_id=22"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/22/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/22.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/22/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/22/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/22"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/22/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:b90281ed6296%0Da0014cba8d91?from_pullrequest_id=22"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/22/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/22/statuses_page=1.json"}}, "title": "Unicode strings and other Python 3 forward-compatible changes.", "close_source_branch": true, "type": "pullrequest", "id": 22, "destination": {"commit": {"hash": "a0014cba8d91", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/a0014cba8d91.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/a0014cba8d91"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-07-25T20:23:49.494667+00:00", "summary": {"raw": "* Unicode dataframe column labels\r\n\r\n* all `__future__` imports enabled in all files\r\n\r\n* execfile() replaced with compile & exec, as forward compatible with Python 3\r\n(as well as allowing for non-ascii filenames, addressing issue #28).\r\n\r\n* Require zprocess 2.2.2 which fixes a bug that prevented sending non-ascii\r\ncharacters to the output box.\r\n\r\n* `str` aliased to `unicode` in Python 2.\r\n\r\n* set current working directory to that of the script prior to executing it\r\n\r\n* These changes are not tested in Python 3, but getting all strings unicode in\r\nPython 2 as well as all other `__future__` imports enabled is a good first step\r\nfor Python 3 compatibility. Further Python 3 compatibility should wait until PyQt5 porting (if any is required) is done.\r\n\r\n* In Python 2, unicode strings and bytestrings pass equality checks, meaning that\r\nindexing dataframes with bytestrings will still get the right columns even\r\nthough the column labels are now unicode strings:\r\n\r\n```\r\n>>> df[u'test_\u00fcmlaut', 'x']\r\nsequence                   run time\r\n2017-06-21 13:17:38-04:00  2017-07-25 16:15:53-04:00    70.0\r\n                           2017-07-25 16:15:54-04:00    70.0\r\n                           2017-07-25 16:15:54-04:00    70.0\r\n                           2017-07-25 16:15:54-04:00    70.0\r\n                           2017-07-25 16:15:54-04:00    70.0\r\nName: (test_\u00fcmlaut, x), dtype: float64\r\n```\r\n\r\nThis pull request should be compatible with @PhyNerd's pending \"update dataframe\" pull request (although his pull request converts dictionary keys to strings, this one aliases `str` to `unicode`, and so once applied will mean the other pull request will result in unicode dataframe keys as well)", "markup": "markdown", "html": "<ul>\n<li>\n<p>Unicode dataframe column labels</p>\n</li>\n<li>\n<p>all <code>__future__</code> imports enabled in all files</p>\n</li>\n<li>\n<p>execfile() replaced with compile &amp; exec, as forward compatible with Python 3\n(as well as allowing for non-ascii filenames, addressing issue <a href=\"#!/labscript_suite/lyse/issues/28/lyse-doesnt-handle-unicode-well\" rel=\"nofollow\" title=\"Lyse doesn&#39;t handle unicode well\" class=\"ap-connect-link\"><s>#28</s></a>).</p>\n</li>\n<li>\n<p>Require zprocess 2.2.2 which fixes a bug that prevented sending non-ascii\ncharacters to the output box.</p>\n</li>\n<li>\n<p><code>str</code> aliased to <code>unicode</code> in Python 2.</p>\n</li>\n<li>\n<p>set current working directory to that of the script prior to executing it</p>\n</li>\n<li>\n<p>These changes are not tested in Python 3, but getting all strings unicode in\nPython 2 as well as all other <code>__future__</code> imports enabled is a good first step\nfor Python 3 compatibility. Further Python 3 compatibility should wait until PyQt5 porting (if any is required) is done.</p>\n</li>\n<li>\n<p>In Python 2, unicode strings and bytestrings pass equality checks, meaning that\nindexing dataframes with bytestrings will still get the right columns even\nthough the column labels are now unicode strings:</p>\n</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>&gt;&gt;&gt; df[u&#39;test_\u00fcmlaut&#39;, &#39;x&#39;]\nsequence                   run time\n2017-06-21 13:17:38-04:00  2017-07-25 16:15:53-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\nName: (test_\u00fcmlaut, x), dtype: float64\n</pre></div>\n\n\n<p>This pull request should be compatible with @PhyNerd's pending \"update dataframe\" pull request (although his pull request converts dictionary keys to strings, this one aliases <code>str</code> to <code>unicode</code>, and so once applied will mean the other pull request will result in unicode dataframe keys as well)</p>", "type": "rendered"}, "source": {"commit": {"hash": "e3f4935010c3", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/e3f4935010c3"}, "html": {"href": "#!/cbillington/lyse/commits/e3f4935010c3"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "feature"}}, "comment_count": 39, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-02-26T00:18:01.330411+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "b90281ed6296", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/b90281ed6296.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/b90281ed6296"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This pull request along with it's sister pull requests introduces qtutil's new abstraction layer for Qt. This abstraction layer is supposed to act like PyQt5. A few adjustments needed to be made so things don't break.\r\n\r\nThis pull request should also bring PyQt5 compatibility but this should be experimental at first so reviewing should not include this as a criterium for approval. (This has been discussed [here](https://pstarkey.github.io/bitbucket-archive/#!/pull-requests/1/pyqt5/diff#comment-41775691))\r\n\r\nTo test this one needs to also pull from my qtutils repo [here](https://bitbucket.org/PhyNerd/qtutils/).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/23/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:37bf5c9a8493%0D254b543e6518?from_pullrequest_id=23"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/23/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/23.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/23/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/23/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/23"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/23/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:37bf5c9a8493%0D254b543e6518?from_pullrequest_id=23"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/23/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/23/statuses_page=1.json"}}, "title": "qtutils 2.0.0 support and experimental PyQt5 support", "close_source_branch": true, "type": "pullrequest", "id": 23, "destination": {"commit": {"hash": "254b543e6518", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/254b543e6518.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/254b543e6518"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-08-01T19:42:42.417903+00:00", "summary": {"raw": "This pull request along with it's sister pull requests introduces qtutil's new abstraction layer for Qt. This abstraction layer is supposed to act like PyQt5. A few adjustments needed to be made so things don't break.\r\n\r\nThis pull request should also bring PyQt5 compatibility but this should be experimental at first so reviewing should not include this as a criterium for approval. (This has been discussed [here](https://pstarkey.github.io/bitbucket-archive/#!/pull-requests/1/pyqt5/diff#comment-41775691))\r\n\r\nTo test this one needs to also pull from my qtutils repo [here](https://bitbucket.org/PhyNerd/qtutils/).", "markup": "markdown", "html": "<p>This pull request along with it's sister pull requests introduces qtutil's new abstraction layer for Qt. This abstraction layer is supposed to act like PyQt5. A few adjustments needed to be made so things don't break.</p>\n<p>This pull request should also bring PyQt5 compatibility but this should be experimental at first so reviewing should not include this as a criterium for approval. (This has been discussed <a data-is-external-link=\"true\" href=\"https://pstarkey.github.io/bitbucket-archive/#!/pull-requests/1/pyqt5/diff#comment-41775691\" rel=\"nofollow\">here</a>)</p>\n<p>To test this one needs to also pull from my qtutils repo <a data-is-external-link=\"true\" href=\"https://bitbucket.org/PhyNerd/qtutils/\" rel=\"nofollow\">here</a>.</p>", "type": "rendered"}, "source": {"commit": {"hash": "12e3d8f1ed19", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/12e3d8f1ed19"}, "html": {"href": "#!/PhyNerd/lyse/commits/12e3d8f1ed19"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "Qt5"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-15T23:44:47.320526+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "37bf5c9a8493", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/37bf5c9a8493.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/37bf5c9a8493"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This pull request should increase speed of loading files and overall performance of update_row.\r\n\r\n* Close branch UpdateDataframeNoRead\r\n\r\n* Speed increase get_model_row_by_filepath\r\n\r\n* reduced for loops in add_files, added df_row_index to update_row, reordered some commands\r\n\r\n* made multishot do only one search of indices", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/24/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/PhyNerd/lyse:25ed33b9c298%0Db90281ed6296?from_pullrequest_id=24"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/24/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/24.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/24/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/24/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/24"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/24/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/PhyNerd/lyse:25ed33b9c298%0Db90281ed6296?from_pullrequest_id=24"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/24/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/24/statuses_page=1.json"}}, "title": "Performance", "close_source_branch": false, "type": "pullrequest", "id": 24, "destination": {"commit": {"hash": "b90281ed6296", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/b90281ed6296.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/b90281ed6296"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-08-02T17:54:05.079749+00:00", "summary": {"raw": "This pull request should increase speed of loading files and overall performance of update_row.\r\n\r\n* Close branch UpdateDataframeNoRead\r\n\r\n* Speed increase get_model_row_by_filepath\r\n\r\n* reduced for loops in add_files, added df_row_index to update_row, reordered some commands\r\n\r\n* made multishot do only one search of indices", "markup": "markdown", "html": "<p>This pull request should increase speed of loading files and overall performance of update_row.</p>\n<ul>\n<li>\n<p>Close branch UpdateDataframeNoRead</p>\n</li>\n<li>\n<p>Speed increase get_model_row_by_filepath</p>\n</li>\n<li>\n<p>reduced for loops in add_files, added df_row_index to update_row, reordered some commands</p>\n</li>\n<li>\n<p>made multishot do only one search of indices</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "25ed33b9c298", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/25ed33b9c298"}, "html": {"href": "#!/PhyNerd/lyse/commits/25ed33b9c298"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "Performance"}}, "comment_count": 8, "state": "DECLINED", "task_count": 0, "reason": "Superceded by pull request #40", "updated_on": "2018-02-26T09:02:22.187223+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": null, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Removed definition of config_path as it should be automatically defined by labconfig.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/25/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:efe68eae0ec6%0D2e16928a6e62?from_pullrequest_id=25"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/25/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/25.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/25/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/25/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/25"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/25/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:efe68eae0ec6%0D2e16928a6e62?from_pullrequest_id=25"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/25/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/25/statuses_page=1.json"}}, "title": "Labconfig", "close_source_branch": false, "type": "pullrequest", "id": 25, "destination": {"commit": {"hash": "2e16928a6e62", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/2e16928a6e62.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/2e16928a6e62"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-08-04T17:53:06.946905+00:00", "summary": {"raw": "Removed definition of config_path as it should be automatically defined by labconfig.", "markup": "markdown", "html": "<p>Removed definition of config_path as it should be automatically defined by labconfig.</p>", "type": "rendered"}, "source": {"commit": {"hash": "bbc3331a07c6", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/bbc3331a07c6"}, "html": {"href": "#!/PhyNerd/lyse/commits/bbc3331a07c6"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "labconfig"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-05T01:02:32.531944+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "efe68eae0ec6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/efe68eae0ec6.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/efe68eae0ec6"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This adds the ability to save and restore dataframes.\r\n\r\nWhen a dataframe is stored it is split into sequences each having it's own file. ~~The file format is hdf5 as this seems to be the only roundtripable format that pandas provides. To avoid confusion dataframes are stored with the ending \".df\" .~~  The dataframe is saved in a messagepack file \\(Pandas exported hdf5 files where not compatible across different python versions\\).\r\n\r\nUpon loading a check happens for any changes to the shot files since saving the dataframe. If changes happened these files are loaded regularly.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/26/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:e652c2de1a31%0D3473384e40f0?from_pullrequest_id=26"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/26/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/26.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/26/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/26/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/26"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/26/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:e652c2de1a31%0D3473384e40f0?from_pullrequest_id=26"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/26/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/26/statuses_page=1.json"}}, "title": "Save dataframes", "close_source_branch": true, "type": "pullrequest", "id": 26, "destination": {"commit": {"hash": "3473384e40f0", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/3473384e40f0.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/3473384e40f0"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-08-06T14:25:44.073340+00:00", "summary": {"raw": "This adds the ability to save and restore dataframes.\r\n\r\nWhen a dataframe is stored it is split into sequences each having it's own file. ~~The file format is hdf5 as this seems to be the only roundtripable format that pandas provides. To avoid confusion dataframes are stored with the ending \".df\" .~~  The dataframe is saved in a messagepack file \\(Pandas exported hdf5 files where not compatible across different python versions\\).\r\n\r\nUpon loading a check happens for any changes to the shot files since saving the dataframe. If changes happened these files are loaded regularly.", "markup": "markdown", "html": "<p>This adds the ability to save and restore dataframes.</p>\n<p>When a dataframe is stored it is split into sequences each having it's own file. <del>The file format is hdf5 as this seems to be the only roundtripable format that pandas provides. To avoid confusion dataframes are stored with the ending \".df\" .</del>  The dataframe is saved in a messagepack file (Pandas exported hdf5 files where not compatible across different python versions).</p>\n<p>Upon loading a check happens for any changes to the shot files since saving the dataframe. If changes happened these files are loaded regularly.</p>", "type": "rendered"}, "source": {"commit": {"hash": "c832c17c767d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/c832c17c767d"}, "html": {"href": "#!/PhyNerd/lyse/commits/c832c17c767d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "Load-Save-Dataframe"}}, "comment_count": 6, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-09-12T20:12:17.807043+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "e652c2de1a31", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/e652c2de1a31.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/e652c2de1a31"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Removed a hardcoded port and replaced it with one extracted from lab config.\r\nThis should allow users to change lyses port in lab config without breakage.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/27/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:ace3427c5f6a%0Defe68eae0ec6?from_pullrequest_id=27"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/27/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/27.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/27/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/27/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/27"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/27/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:ace3427c5f6a%0Defe68eae0ec6?from_pullrequest_id=27"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/27/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/27/statuses_page=1.json"}}, "title": "removed hardcoded port", "close_source_branch": false, "type": "pullrequest", "id": 27, "destination": {"commit": {"hash": "efe68eae0ec6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/efe68eae0ec6.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/efe68eae0ec6"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-08-09T17:07:36.995284+00:00", "summary": {"raw": "Removed a hardcoded port and replaced it with one extracted from lab config.\r\nThis should allow users to change lyses port in lab config without breakage.", "markup": "markdown", "html": "<p>Removed a hardcoded port and replaced it with one extracted from lab config.\nThis should allow users to change lyses port in lab config without breakage.</p>", "type": "rendered"}, "source": {"commit": {"hash": "28ce504f38fa", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/28ce504f38fa"}, "html": {"href": "#!/PhyNerd/lyse/commits/28ce504f38fa"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "labconfig-port"}}, "comment_count": 7, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-11T14:22:34.937488+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "ace3427c5f6a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/ace3427c5f6a.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/ace3427c5f6a"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This also fixes an additional issue - if a single shot analysis decided to save data for a *different* shot (I don't why it would do that, but it's allowed) - lyse would update that other shot's progress bar, which is silly.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/28/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:254b543e6518%0Dace3427c5f6a?from_pullrequest_id=28"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/28/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/28.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/28/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/28/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/28"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/28/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:254b543e6518%0Dace3427c5f6a?from_pullrequest_id=28"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/28/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/28/statuses_page=1.json"}}, "title": "Fixed issue #31: analysis status not updating if no saved results", "close_source_branch": true, "type": "pullrequest", "id": 28, "destination": {"commit": {"hash": "ace3427c5f6a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/ace3427c5f6a.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/ace3427c5f6a"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-08-11T19:16:15.628687+00:00", "summary": {"raw": "This also fixes an additional issue - if a single shot analysis decided to save data for a *different* shot (I don't why it would do that, but it's allowed) - lyse would update that other shot's progress bar, which is silly.", "markup": "markdown", "html": "<p>This also fixes an additional issue - if a single shot analysis decided to save data for a <em>different</em> shot (I don't why it would do that, but it's allowed) - lyse would update that other shot's progress bar, which is silly.</p>", "type": "rendered"}, "source": {"commit": {"hash": "0879b22d19c1", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/0879b22d19c1"}, "html": {"href": "#!/cbillington/lyse/commits/0879b22d19c1"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "comment_count": 10, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-15T04:19:18.070693+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "254b543e6518", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/254b543e6518.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/254b543e6518"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This pull request aims to make multishot routines(for lots of runs) faster, by storing image data and run objects on first load in a cross routine storage. \r\n\r\nThe storage uses nested dicts making access to all data of one kind(e.g. images) one request to the storage server rather then n_images * n_shots.\r\n\r\nTo reduce memory usage all data saved under a key equal to the filepath of a shot is removed when that shot is removed.\r\n\r\nCaching of runs and images can be disabled.\r\n\r\nThe reasoning for this pull request is:\r\n\r\nIn our lab we have a multishot routine that calculates trap positions for a grid of single atom traps, thresholds to determine atom count (1 or 0)  for those traps and finally saves the atom count to the individual shots. This routine needs all images from all shots to do so. As our typical shot amount of shots in a sequence is 2000 or greater this takes about 17 seconds with these changes here it's down to sub 1 second. \r\nWe are using this change in the lab for a week now and no negative effects have been noticed.\r\n\r\nThis should solve #26.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/29/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/PhyNerd/lyse:c25e8186f38b%0D5a58628c8ec1?from_pullrequest_id=29"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/29/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/29"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/PhyNerd/lyse:c25e8186f38b%0D5a58628c8ec1?from_pullrequest_id=29"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/29/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/29/statuses_page=1.json"}}, "title": "Cross routine caching", "close_source_branch": false, "type": "pullrequest", "id": 29, "destination": {"commit": {"hash": "5a58628c8ec1", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/5a58628c8ec1.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/5a58628c8ec1"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-08-14T18:43:07.140944+00:00", "summary": {"raw": "This pull request aims to make multishot routines(for lots of runs) faster, by storing image data and run objects on first load in a cross routine storage. \r\n\r\nThe storage uses nested dicts making access to all data of one kind(e.g. images) one request to the storage server rather then n_images * n_shots.\r\n\r\nTo reduce memory usage all data saved under a key equal to the filepath of a shot is removed when that shot is removed.\r\n\r\nCaching of runs and images can be disabled.\r\n\r\nThe reasoning for this pull request is:\r\n\r\nIn our lab we have a multishot routine that calculates trap positions for a grid of single atom traps, thresholds to determine atom count (1 or 0)  for those traps and finally saves the atom count to the individual shots. This routine needs all images from all shots to do so. As our typical shot amount of shots in a sequence is 2000 or greater this takes about 17 seconds with these changes here it's down to sub 1 second. \r\nWe are using this change in the lab for a week now and no negative effects have been noticed.\r\n\r\nThis should solve #26.", "markup": "markdown", "html": "<p>This pull request aims to make multishot routines(for lots of runs) faster, by storing image data and run objects on first load in a cross routine storage. </p>\n<p>The storage uses nested dicts making access to all data of one kind(e.g. images) one request to the storage server rather then n_images * n_shots.</p>\n<p>To reduce memory usage all data saved under a key equal to the filepath of a shot is removed when that shot is removed.</p>\n<p>Caching of runs and images can be disabled.</p>\n<p>The reasoning for this pull request is:</p>\n<p>In our lab we have a multishot routine that calculates trap positions for a grid of single atom traps, thresholds to determine atom count (1 or 0)  for those traps and finally saves the atom count to the individual shots. This routine needs all images from all shots to do so. As our typical shot amount of shots in a sequence is 2000 or greater this takes about 17 seconds with these changes here it's down to sub 1 second. \nWe are using this change in the lab for a week now and no negative effects have been noticed.</p>\n<p>This should solve <a href=\"#!/labscript_suite/lyse/issues/26/loading-images-takes-too-long\" rel=\"nofollow\" title=\"Loading images takes too long\" class=\"ap-connect-link\">#26</a>.</p>", "type": "rendered"}, "source": {"commit": {"hash": "c25e8186f38b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/c25e8186f38b"}, "html": {"href": "#!/PhyNerd/lyse/commits/c25e8186f38b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "cross-routine-storage"}}, "comment_count": 45, "state": "DECLINED", "task_count": 0, "reason": "Will likely implement differently eventually, is a niche use case in the meantime.", "updated_on": "2020-01-28T21:11:47.488165+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": null, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "There was a typo (multiple times) in the PyQt5 compatibility change this fixes it.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/30/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:3ec4b2fd3633%0D65947a43a5a9?from_pullrequest_id=30"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/30/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/30.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/30/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/30/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/30"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/30/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:3ec4b2fd3633%0D65947a43a5a9?from_pullrequest_id=30"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/30/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/30/statuses_page=1.json"}}, "title": "Fixed bug caused by typo", "close_source_branch": false, "type": "pullrequest", "id": 30, "destination": {"commit": {"hash": "65947a43a5a9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/65947a43a5a9.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/65947a43a5a9"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-08-16T21:23:55.804653+00:00", "summary": {"raw": "There was a typo (multiple times) in the PyQt5 compatibility change this fixes it.", "markup": "markdown", "html": "<p>There was a typo (multiple times) in the PyQt5 compatibility change this fixes it.</p>", "type": "rendered"}, "source": {"commit": {"hash": "3ec4b2fd3633", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/3ec4b2fd3633"}, "html": {"href": "#!/PhyNerd/lyse/commits/3ec4b2fd3633"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "default"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-16T21:28:04.138813+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "3ec4b2fd3633", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/3ec4b2fd3633.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/3ec4b2fd3633"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Fix a bug in updating the dataframe after analysis has produced results. Pandas would raise an exception if you tried to save an iterable item as a value in the dataframe, because of ambiguities as to whether you are trying to set multiple values or not.\r\nSince we are only setting one value at a time, I've changed the form\r\nof the call to pandas to one that is explicitly for setting single\r\nvalues, removing the ambiguity and allowing iterable values to be set.\r\n\r\nI've given @shaunj and @pstarkey commit access to my fork so if either of you merges it and checks the \"close source branch\" box, it should hopefully actually close the branch this time.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/31/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:a403e6511461%0Deb5f15c0bc06?from_pullrequest_id=31"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/31/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/31"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:a403e6511461%0Deb5f15c0bc06?from_pullrequest_id=31"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/31/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/31/statuses_page=1.json"}}, "title": "Fix a bug in updating the dataframe", "close_source_branch": true, "type": "pullrequest", "id": 31, "destination": {"commit": {"hash": "eb5f15c0bc06", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/eb5f15c0bc06.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/eb5f15c0bc06"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-08-17T02:07:00.755023+00:00", "summary": {"raw": "Fix a bug in updating the dataframe after analysis has produced results. Pandas would raise an exception if you tried to save an iterable item as a value in the dataframe, because of ambiguities as to whether you are trying to set multiple values or not.\r\nSince we are only setting one value at a time, I've changed the form\r\nof the call to pandas to one that is explicitly for setting single\r\nvalues, removing the ambiguity and allowing iterable values to be set.\r\n\r\nI've given @shaunj and @pstarkey commit access to my fork so if either of you merges it and checks the \"close source branch\" box, it should hopefully actually close the branch this time.", "markup": "markdown", "html": "<p>Fix a bug in updating the dataframe after analysis has produced results. Pandas would raise an exception if you tried to save an iterable item as a value in the dataframe, because of ambiguities as to whether you are trying to set multiple values or not.\nSince we are only setting one value at a time, I've changed the form\nof the call to pandas to one that is explicitly for setting single\nvalues, removing the ambiguity and allowing iterable values to be set.</p>\n<p>I've given @shaunj and @pstarkey commit access to my fork so if either of you merges it and checks the \"close source branch\" box, it should hopefully actually close the branch this time.</p>", "type": "rendered"}, "source": {"commit": {"hash": "bf80b2ce96ed", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/bf80b2ce96ed"}, "html": {"href": "#!/cbillington/lyse/commits/bf80b2ce96ed"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "comment_count": 26, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-10-04T16:24:19.187707+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "a403e6511461", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/a403e6511461.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/a403e6511461"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "I updated to the recently-merged Qt5 version and ran lyse and the window appeared for a moment only to vanish off my screen.\r\n\r\nI worked out that the saved window position had been from when I had two monitors, and so now that I only had one, that position was off to the right outside of my current screen's area.\r\n\r\nSo now I've changed it so that the window geometry is only restored if the screen geometry is the same.\r\n\r\nI have given @shjohnst and @pstarkey commit access to my fork so that hopefully if you merge you will see the \"close source branch\" checkbox and hopefully it will actually close when you merge it.\r\n\r\n---\r\n\r\nFix bug where restoring the window position/size when a different number of monotors or different monitor resolution is in use compared to when that information was saved could potentially move the window off the screen.\r\nMade it so that if the number of screens and their sizes is not the same\r\nas when the data was saved, to simply fall back on defaults.\r\n\r\nThis way those with a consistent setup will get lyse in the same position\r\nthey left it, and those with a varying setup will get the defaults after\r\ntheir setup changes.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/32/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:eb5f15c0bc06%0D1b76b809f4ac?from_pullrequest_id=32"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/32/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/32.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/32/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/32/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/32"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/32/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:eb5f15c0bc06%0D1b76b809f4ac?from_pullrequest_id=32"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/32/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/32/statuses_page=1.json"}}, "title": "Only restore window geometry if screen geometry is the same", "close_source_branch": true, "type": "pullrequest", "id": 32, "destination": {"commit": {"hash": "1b76b809f4ac", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/1b76b809f4ac.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/1b76b809f4ac"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-08-17T03:34:11.945519+00:00", "summary": {"raw": "I updated to the recently-merged Qt5 version and ran lyse and the window appeared for a moment only to vanish off my screen.\r\n\r\nI worked out that the saved window position had been from when I had two monitors, and so now that I only had one, that position was off to the right outside of my current screen's area.\r\n\r\nSo now I've changed it so that the window geometry is only restored if the screen geometry is the same.\r\n\r\nI have given @shjohnst and @pstarkey commit access to my fork so that hopefully if you merge you will see the \"close source branch\" checkbox and hopefully it will actually close when you merge it.\r\n\r\n---\r\n\r\nFix bug where restoring the window position/size when a different number of monotors or different monitor resolution is in use compared to when that information was saved could potentially move the window off the screen.\r\nMade it so that if the number of screens and their sizes is not the same\r\nas when the data was saved, to simply fall back on defaults.\r\n\r\nThis way those with a consistent setup will get lyse in the same position\r\nthey left it, and those with a varying setup will get the defaults after\r\ntheir setup changes.", "markup": "markdown", "html": "<p>I updated to the recently-merged Qt5 version and ran lyse and the window appeared for a moment only to vanish off my screen.</p>\n<p>I worked out that the saved window position had been from when I had two monitors, and so now that I only had one, that position was off to the right outside of my current screen's area.</p>\n<p>So now I've changed it so that the window geometry is only restored if the screen geometry is the same.</p>\n<p>I have given @shjohnst and @pstarkey commit access to my fork so that hopefully if you merge you will see the \"close source branch\" checkbox and hopefully it will actually close when you merge it.</p>\n<hr />\n<p>Fix bug where restoring the window position/size when a different number of monotors or different monitor resolution is in use compared to when that information was saved could potentially move the window off the screen.\nMade it so that if the number of screens and their sizes is not the same\nas when the data was saved, to simply fall back on defaults.</p>\n<p>This way those with a consistent setup will get lyse in the same position\nthey left it, and those with a varying setup will get the defaults after\ntheir setup changes.</p>", "type": "rendered"}, "source": {"commit": {"hash": "1865063c70f5", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/1865063c70f5"}, "html": {"href": "#!/cbillington/lyse/commits/1865063c70f5"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix2"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-10-04T16:24:04.862644+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "eb5f15c0bc06", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/eb5f15c0bc06.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/eb5f15c0bc06"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Made analysis loop continue if it encounters an uncaught  error, but raise\r\nthe error in a thread with a serious sounding warning about\r\nlyse possibly being in an inconsistent state.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/33/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:1b76b809f4ac%0D2fb10f54b181?from_pullrequest_id=33"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/33/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/33.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/33/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/33/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/33"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/33/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:1b76b809f4ac%0D2fb10f54b181?from_pullrequest_id=33"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/33/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/33/statuses_page=1.json"}}, "title": "Fixes issue #27: lyse broken after analysis loop crash", "close_source_branch": true, "type": "pullrequest", "id": 33, "destination": {"commit": {"hash": "2fb10f54b181", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/2fb10f54b181.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/2fb10f54b181"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-08-17T20:19:20.323089+00:00", "summary": {"raw": "Made analysis loop continue if it encounters an uncaught  error, but raise\r\nthe error in a thread with a serious sounding warning about\r\nlyse possibly being in an inconsistent state.", "markup": "markdown", "html": "<p>Made analysis loop continue if it encounters an uncaught  error, but raise\nthe error in a thread with a serious sounding warning about\nlyse possibly being in an inconsistent state.</p>", "type": "rendered"}, "source": {"commit": {"hash": "a777418d624c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/a777418d624c"}, "html": {"href": "#!/cbillington/lyse/commits/a777418d624c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix3"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-10-04T16:23:51.461715+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "1b76b809f4ac", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/1b76b809f4ac.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/1b76b809f4ac"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This adds a optional command line argument to lyse for a additional config file. Options stored in the additional config file are read before the main lab config file. \r\n\r\nThis allows the user to create a config file that only contains the lyse port and run multiple instances of lyse on the same machine. \r\n\r\nA example on how to use this:\r\n\r\nConfig file at /testpath/config.ini:\r\n```\r\n#!python\r\n[ports]\r\nlyse = 12345\r\n```\r\nAnd the command line call:\r\n\r\n```python -m lyse /testpath/config.ini```\r\n\r\n\r\nThis solves issue #32", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/34/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/PhyNerd/lyse:f1f5222a8df4%0D5a58628c8ec1?from_pullrequest_id=34"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/34/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/34.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/34/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/34/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/34"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/34/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/PhyNerd/lyse:f1f5222a8df4%0D5a58628c8ec1?from_pullrequest_id=34"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/34/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/34/statuses_page=1.json"}}, "title": "MultiInstance", "close_source_branch": false, "type": "pullrequest", "id": 34, "destination": {"commit": {"hash": "5a58628c8ec1", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/5a58628c8ec1.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/5a58628c8ec1"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-09-06T08:01:12.375061+00:00", "summary": {"raw": "This adds a optional command line argument to lyse for a additional config file. Options stored in the additional config file are read before the main lab config file. \r\n\r\nThis allows the user to create a config file that only contains the lyse port and run multiple instances of lyse on the same machine. \r\n\r\nA example on how to use this:\r\n\r\nConfig file at /testpath/config.ini:\r\n```\r\n#!python\r\n[ports]\r\nlyse = 12345\r\n```\r\nAnd the command line call:\r\n\r\n```python -m lyse /testpath/config.ini```\r\n\r\n\r\nThis solves issue #32", "markup": "markdown", "html": "<p>This adds a optional command line argument to lyse for a additional config file. Options stored in the additional config file are read before the main lab config file. </p>\n<p>This allows the user to create a config file that only contains the lyse port and run multiple instances of lyse on the same machine. </p>\n<p>A example on how to use this:</p>\n<p>Config file at /testpath/config.ini:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"p\">[</span><span class=\"n\">ports</span><span class=\"p\">]</span>\n<span class=\"n\">lyse</span> <span class=\"o\">=</span> <span class=\"mi\">12345</span>\n</pre></div>\n\n\n<p>And the command line call:</p>\n<p><code>python -m lyse /testpath/config.ini</code></p>\n<p>This solves issue <a href=\"#!/labscript_suite/lyse/issues/32/second-lyse-instance\" rel=\"nofollow\" title=\"Second lyse instance\" class=\"ap-connect-link\">#32</a></p>", "type": "rendered"}, "source": {"commit": {"hash": "f1f5222a8df4", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/f1f5222a8df4"}, "html": {"href": "#!/PhyNerd/lyse/commits/f1f5222a8df4"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "MultiInstance"}}, "comment_count": 5, "state": "DECLINED", "task_count": 0, "reason": "Should be implemented as more general support for custom configuration", "updated_on": "2020-01-28T21:10:31.873477+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": null, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This change makes it easier to use widgets in plots\r\nthat are created by analysis scripts. Now, self.canvas\r\nis set to the existing figure canvas, rather than\r\ncreating a new canvas.\r\n\r\nDSB", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/35/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:0178f9c0375d%0Db90281ed6296?from_pullrequest_id=35"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/35/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/35.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/35/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/35/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/35"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/35/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:0178f9c0375d%0Db90281ed6296?from_pullrequest_id=35"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/35/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/35/statuses_page=1.json"}}, "title": "Make fancy plots easier", "close_source_branch": false, "type": "pullrequest", "id": 35, "destination": {"commit": {"hash": "b90281ed6296", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/b90281ed6296.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/b90281ed6296"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-09-08T17:45:53.618654+00:00", "summary": {"raw": "This change makes it easier to use widgets in plots\r\nthat are created by analysis scripts. Now, self.canvas\r\nis set to the existing figure canvas, rather than\r\ncreating a new canvas.\r\n\r\nDSB", "markup": "markdown", "html": "<p>This change makes it easier to use widgets in plots\nthat are created by analysis scripts. Now, self.canvas\nis set to the existing figure canvas, rather than\ncreating a new canvas.</p>\n<p>DSB</p>", "type": "rendered"}, "source": {"commit": {"hash": "e72f4c67511b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/lyse/commit/e72f4c67511b"}, "html": {"href": "#!/dsbarker/lyse/commits/e72f4c67511b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dsbarker/lyse"}, "html": {"href": "#!/dsbarker/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f8a88aa5-81cb-44c0-a205-520f06b51f5c}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "dsbarker/lyse", "uuid": "{f8a88aa5-81cb-44c0-a205-520f06b51f5c}"}, "branch": {"name": "enable_fancy_plots"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-02-26T06:46:32.698646+00:00", "author": {"display_name": "Daniel Barker", "uuid": "{6f3f4446-92ab-4af6-83ed-bb2906b3a304}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D"}, "html": {"href": "https://bitbucket.org/%7B6f3f4446-92ab-4af6-83ed-bb2906b3a304%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbcf4c479308ad530548be5884a7c70fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDB-4.png"}}, "nickname": "dsbarker", "type": "user", "account_id": "557058:02be919f-267c-4793-9e86-ef07d163b58b"}, "merge_commit": {"hash": "0178f9c0375d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/0178f9c0375d.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/0178f9c0375d"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This should prevent problems with another app already having created `app_saved_configs` in the labconfig([runviewer might do this soon](#!/labscript_suite/runviewer/pull-requests/16/channel-configs/diff#L__main__.pyT255)) and lyse config folder not being created.\r\n\r\nI created this commit in my default branch there should be no open branches after a merge.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/36/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:2fb10f54b181%0D3ec4b2fd3633?from_pullrequest_id=36"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/36/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/36.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/36/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/36/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/36"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/36/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:2fb10f54b181%0D3ec4b2fd3633?from_pullrequest_id=36"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/36/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/36/statuses_page=1.json"}}, "title": "minor bugfix", "close_source_branch": false, "type": "pullrequest", "id": 36, "destination": {"commit": {"hash": "3ec4b2fd3633", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/3ec4b2fd3633.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/3ec4b2fd3633"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-09-15T07:47:13.842636+00:00", "summary": {"raw": "This should prevent problems with another app already having created `app_saved_configs` in the labconfig([runviewer might do this soon](#!/labscript_suite/runviewer/pull-requests/16/channel-configs/diff#L__main__.pyT255)) and lyse config folder not being created.\r\n\r\nI created this commit in my default branch there should be no open branches after a merge.", "markup": "markdown", "html": "<p>This should prevent problems with another app already having created <code>app_saved_configs</code> in the labconfig(<a data-is-external-link=\"true\" href=\"#!/labscript_suite/runviewer/pull-requests/16/channel-configs/diff#L__main__.pyT255\" rel=\"nofollow\">runviewer might do this soon</a>) and lyse config folder not being created.</p>\n<p>I created this commit in my default branch there should be no open branches after a merge.</p>", "type": "rendered"}, "source": {"commit": {"hash": "2fb10f54b181", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/2fb10f54b181"}, "html": {"href": "#!/PhyNerd/lyse/commits/2fb10f54b181"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "default"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-10-01T23:43:36.626768+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "2fb10f54b181", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/2fb10f54b181.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/2fb10f54b181"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "This fixes issue #33. \r\n\r\nWhen ever one selects many shots \\(about 200 is enough\\) in the lyse main window and new shots are coming in lyse currently freezes to the point of not being usable. This should fix that by blocking all signals from the model to the view during updates. After updates are done the block is removed and a signal is emitted to update the view.\r\n\r\nThis is running in our lab for a week now and we didn't notice any bad side effects.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/37/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:2cc4c90d8ff2%0D0178f9c0375d?from_pullrequest_id=37"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/37/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/37.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/37/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/37/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/37"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/37/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:2cc4c90d8ff2%0D0178f9c0375d?from_pullrequest_id=37"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/37/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/37/statuses_page=1.json"}}, "title": "Fix lyse hang during shot selection", "close_source_branch": true, "type": "pullrequest", "id": 37, "destination": {"commit": {"hash": "0178f9c0375d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/0178f9c0375d.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/0178f9c0375d"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-10-04T12:03:16.524844+00:00", "summary": {"raw": "This fixes issue #33. \r\n\r\nWhen ever one selects many shots \\(about 200 is enough\\) in the lyse main window and new shots are coming in lyse currently freezes to the point of not being usable. This should fix that by blocking all signals from the model to the view during updates. After updates are done the block is removed and a signal is emitted to update the view.\r\n\r\nThis is running in our lab for a week now and we didn't notice any bad side effects.", "markup": "markdown", "html": "<p>This fixes issue <a href=\"#!/labscript_suite/lyse/issues/33/lyse-freezes-on-selection\" rel=\"nofollow\" title=\"Lyse freezes on selection\" class=\"ap-connect-link\"><s>#33</s></a>. </p>\n<p>When ever one selects many shots (about 200 is enough) in the lyse main window and new shots are coming in lyse currently freezes to the point of not being usable. This should fix that by blocking all signals from the model to the view during updates. After updates are done the block is removed and a signal is emitted to update the view.</p>\n<p>This is running in our lab for a week now and we didn't notice any bad side effects.</p>", "type": "rendered"}, "source": {"commit": {"hash": "403cf4318ea0", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/403cf4318ea0"}, "html": {"href": "#!/PhyNerd/lyse/commits/403cf4318ea0"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "Select-Fix"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-02-26T06:54:22.186351+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "2cc4c90d8ff2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/2cc4c90d8ff2.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/2cc4c90d8ff2"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This is motivated in part by a plan to change the MultiIndex lyse's DataFrame from the existing timestamp indexing \\('sequence id', 'run time'\\) to purely integer indexing, e.g. to: \\('sequence index', 'run number', 'run repeat'\\).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/38/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:e58d25d6b8ef%0D608f3b68bfbc?from_pullrequest_id=38"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/38/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/38.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/38/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/38/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/38"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/38/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:e58d25d6b8ef%0D608f3b68bfbc?from_pullrequest_id=38"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/38/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/38/statuses_page=1.json"}}, "title": "Extract the 'run repeat' attribute from shot files", "close_source_branch": true, "type": "pullrequest", "id": 38, "destination": {"commit": {"hash": "608f3b68bfbc", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/608f3b68bfbc.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/608f3b68bfbc"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-11-08T21:00:08.056551+00:00", "summary": {"raw": "This is motivated in part by a plan to change the MultiIndex lyse's DataFrame from the existing timestamp indexing \\('sequence id', 'run time'\\) to purely integer indexing, e.g. to: \\('sequence index', 'run number', 'run repeat'\\).", "markup": "markdown", "html": "<p>This is motivated in part by a plan to change the MultiIndex lyse's DataFrame from the existing timestamp indexing ('sequence id', 'run time') to purely integer indexing, e.g. to: ('sequence index', 'run number', 'run repeat').</p>", "type": "rendered"}, "source": {"commit": {"hash": "d60f7d7722fb", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse/commit/d60f7d7722fb"}, "html": {"href": "#!/monashspinor/lyse/commits/d60f7d7722fb"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse"}, "html": {"href": "#!/monashspinor/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashspinor/lyse", "uuid": "{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}"}, "branch": {"name": "run_repeat"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-11-15T13:49:30.774051+00:00", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "merge_commit": {"hash": "e58d25d6b8ef", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/e58d25d6b8ef.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/e58d25d6b8ef"}}}, "closed_by": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, {"description": "Support integer indexing of the lyse DataFrame, using a MultiIndex of: `['sequence_index', 'run number', 'run repeat']`\r\n\r\nThis can be enabled in labconfig using:\r\n\r\n    [lyse]\r\n    integer_indexing = true\r\n\r\nIf this section or option are absent from the labconfig file, fallback to the existing MultiIndex of: `['sequence', 'run time']`.\r\n\r\nThis feature supports much easier use of `pd.DataFrame.loc`, e.g.\r\n\r\n```python\r\ndf = lyse.data()\r\ndf.loc[56]       # sequence 56 MultiIndexed by ['run number', 'repeat number']\r\ndf.loc[56:60]    # sequences 56 through 60 inclusive\r\ndf.loc[56,4]     # run number 4 of sequence 56, indexed by 'repeat number'\r\ndf.loc[56,2:6,:] # runs 2 through 6 (inclusive) of sequence 56\r\n```\r\n\r\nEnabling this feature changes the vertical header item to read, e.g. '105. 0056 \\| 0001 \\| 0106'.\r\n\r\nThis is far more useful, as these integers can all be used to construct a `pd.DataFrame.loc` or `pd.DataFrame.iloc` call to the lyse DataFrame.\r\n\r\nThe main problem with this feature is that the MultiIndex might not be unique if new shots are sent to or loaded into lyse with an existing sequence\\_index, e.g. if the sequence\\_index gets reset in runmanager or shots are loaded from multiple days. This can be avoided in user-side analysis code by boolean filtering based on the 'run time' column.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/39/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:a0014cba8d91%0De58d25d6b8ef?from_pullrequest_id=39"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/39/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/39"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:a0014cba8d91%0De58d25d6b8ef?from_pullrequest_id=39"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/39/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/39/statuses_page=1.json"}}, "title": "Integer indexing of the lyse DataFrame", "close_source_branch": true, "type": "pullrequest", "id": 39, "destination": {"commit": {"hash": "e58d25d6b8ef", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/e58d25d6b8ef.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/e58d25d6b8ef"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2017-11-09T03:25:14.360971+00:00", "summary": {"raw": "Support integer indexing of the lyse DataFrame, using a MultiIndex of: `['sequence_index', 'run number', 'run repeat']`\r\n\r\nThis can be enabled in labconfig using:\r\n\r\n    [lyse]\r\n    integer_indexing = true\r\n\r\nIf this section or option are absent from the labconfig file, fallback to the existing MultiIndex of: `['sequence', 'run time']`.\r\n\r\nThis feature supports much easier use of `pd.DataFrame.loc`, e.g.\r\n\r\n```python\r\ndf = lyse.data()\r\ndf.loc[56]       # sequence 56 MultiIndexed by ['run number', 'repeat number']\r\ndf.loc[56:60]    # sequences 56 through 60 inclusive\r\ndf.loc[56,4]     # run number 4 of sequence 56, indexed by 'repeat number'\r\ndf.loc[56,2:6,:] # runs 2 through 6 (inclusive) of sequence 56\r\n```\r\n\r\nEnabling this feature changes the vertical header item to read, e.g. '105. 0056 \\| 0001 \\| 0106'.\r\n\r\nThis is far more useful, as these integers can all be used to construct a `pd.DataFrame.loc` or `pd.DataFrame.iloc` call to the lyse DataFrame.\r\n\r\nThe main problem with this feature is that the MultiIndex might not be unique if new shots are sent to or loaded into lyse with an existing sequence\\_index, e.g. if the sequence\\_index gets reset in runmanager or shots are loaded from multiple days. This can be avoided in user-side analysis code by boolean filtering based on the 'run time' column.", "markup": "markdown", "html": "<p>Support integer indexing of the lyse DataFrame, using a MultiIndex of: <code>['sequence_index', 'run number', 'run repeat']</code></p>\n<p>This can be enabled in labconfig using:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">[lyse]</span>\n<span class=\"na\">integer_indexing</span> <span class=\"o\">=</span> <span class=\"s\">true</span>\n</pre></div>\n\n\n<p>If this section or option are absent from the labconfig file, fallback to the existing MultiIndex of: <code>['sequence', 'run time']</code>.</p>\n<p>This feature supports much easier use of <code>pd.DataFrame.loc</code>, e.g.</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">lyse</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">()</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"mi\">56</span><span class=\"p\">]</span>       <span class=\"c1\"># sequence 56 MultiIndexed by [&#39;run number&#39;, &#39;repeat number&#39;]</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"mi\">56</span><span class=\"p\">:</span><span class=\"mi\">60</span><span class=\"p\">]</span>    <span class=\"c1\"># sequences 56 through 60 inclusive</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"mi\">56</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">]</span>     <span class=\"c1\"># run number 4 of sequence 56, indexed by &#39;repeat number&#39;</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"mi\">56</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"p\">,:]</span> <span class=\"c1\"># runs 2 through 6 (inclusive) of sequence 56</span>\n</pre></div>\n\n\n<p>Enabling this feature changes the vertical header item to read, e.g. '105. 0056 \\| 0001 \\| 0106'.</p>\n<p>This is far more useful, as these integers can all be used to construct a <code>pd.DataFrame.loc</code> or <code>pd.DataFrame.iloc</code> call to the lyse DataFrame.</p>\n<p>The main problem with this feature is that the MultiIndex might not be unique if new shots are sent to or loaded into lyse with an existing sequence_index, e.g. if the sequence_index gets reset in runmanager or shots are loaded from multiple days. This can be avoided in user-side analysis code by boolean filtering based on the 'run time' column.</p>", "type": "rendered"}, "source": {"commit": {"hash": "04751559ac2d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse/commit/04751559ac2d"}, "html": {"href": "#!/monashspinor/lyse/commits/04751559ac2d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse"}, "html": {"href": "#!/monashspinor/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashspinor/lyse", "uuid": "{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}"}, "branch": {"name": "integer_indexing"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-11-21T01:32:55.896417+00:00", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "merge_commit": {"hash": "a0014cba8d91", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/a0014cba8d91.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/a0014cba8d91"}}}, "closed_by": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, {"description": "Performance optimisation based on pull request #24\r\n\r\n* lookup rows in dataframe by filepath using a dictionary cache rather\r\n  than searching the dataframe. This removes the need for the method\r\n  get_model_row_by_filepath(), so it has been removed and the dictionary used\r\n  directly.\r\n\r\n* Remove redundant getting of the row index again for the Qt model - it is\r\n  the same row as the dataframe\r\n\r\n* Avoid setting the text of a QStandardItem twice by only creating it once\r\n  the text it should have is known\r\n\r\n* Add an argument to renumber_rows() that allows it to only renumber recent\r\n  rows for the case that new rows have been added and don't have numbers yet\r\n  but the existing row numbers are still valid\r\n\r\n* Modify batch processing of shot files to use a dynamic batch size, with\r\n  larger batches the more shots lyse has loaded. This is a good tradeoff\r\n  between GUI responsiveness when there are a small number of shot files\r\n  and speed when loading a large number of shot files. The batch size is 1/3\r\n  of the number of shots. Larger batch sizes mean less redundant concatenation\r\n  of dataframes.\r\n\r\n* Modify the progress bar message to say when it's reading shot files\r\n  vs concatenating dataframes vs updating the filebox GUI.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/40/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:cd6db6b13190%0D2cc4c90d8ff2?from_pullrequest_id=40"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/40/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/40.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/40/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/40/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/40"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/40/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:cd6db6b13190%0D2cc4c90d8ff2?from_pullrequest_id=40"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/40/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/40/statuses_page=1.json"}}, "title": "Performance optimisation.", "close_source_branch": true, "type": "pullrequest", "id": 40, "destination": {"commit": {"hash": "2cc4c90d8ff2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/2cc4c90d8ff2.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/2cc4c90d8ff2"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2018-02-26T06:17:54.112525+00:00", "summary": {"raw": "Performance optimisation based on pull request #24\r\n\r\n* lookup rows in dataframe by filepath using a dictionary cache rather\r\n  than searching the dataframe. This removes the need for the method\r\n  get_model_row_by_filepath(), so it has been removed and the dictionary used\r\n  directly.\r\n\r\n* Remove redundant getting of the row index again for the Qt model - it is\r\n  the same row as the dataframe\r\n\r\n* Avoid setting the text of a QStandardItem twice by only creating it once\r\n  the text it should have is known\r\n\r\n* Add an argument to renumber_rows() that allows it to only renumber recent\r\n  rows for the case that new rows have been added and don't have numbers yet\r\n  but the existing row numbers are still valid\r\n\r\n* Modify batch processing of shot files to use a dynamic batch size, with\r\n  larger batches the more shots lyse has loaded. This is a good tradeoff\r\n  between GUI responsiveness when there are a small number of shot files\r\n  and speed when loading a large number of shot files. The batch size is 1/3\r\n  of the number of shots. Larger batch sizes mean less redundant concatenation\r\n  of dataframes.\r\n\r\n* Modify the progress bar message to say when it's reading shot files\r\n  vs concatenating dataframes vs updating the filebox GUI.", "markup": "markdown", "html": "<p>Performance optimisation based on <a href=\"#!/labscript_suite/lyse/pull-requests/24/performance\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #24</a></p>\n<ul>\n<li>\n<p>lookup rows in dataframe by filepath using a dictionary cache rather\n  than searching the dataframe. This removes the need for the method\n  get_model_row_by_filepath(), so it has been removed and the dictionary used\n  directly.</p>\n</li>\n<li>\n<p>Remove redundant getting of the row index again for the Qt model - it is\n  the same row as the dataframe</p>\n</li>\n<li>\n<p>Avoid setting the text of a QStandardItem twice by only creating it once\n  the text it should have is known</p>\n</li>\n<li>\n<p>Add an argument to renumber_rows() that allows it to only renumber recent\n  rows for the case that new rows have been added and don't have numbers yet\n  but the existing row numbers are still valid</p>\n</li>\n<li>\n<p>Modify batch processing of shot files to use a dynamic batch size, with\n  larger batches the more shots lyse has loaded. This is a good tradeoff\n  between GUI responsiveness when there are a small number of shot files\n  and speed when loading a large number of shot files. The batch size is 1/3\n  of the number of shots. Larger batch sizes mean less redundant concatenation\n  of dataframes.</p>\n</li>\n<li>\n<p>Modify the progress bar message to say when it's reading shot files\n  vs concatenating dataframes vs updating the filebox GUI.</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "f0ba6d5bba19", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/f0ba6d5bba19"}, "html": {"href": "#!/cbillington/lyse/commits/f0ba6d5bba19"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "feature"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-02-26T22:29:33.822223+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "cd6db6b13190", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/cd6db6b13190.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/cd6db6b13190"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Applied all changes highlighted by 2to3.py that manual inspection deemed necessary\r\n\r\nRequire qtutils 2.1.0 for Python 3 compat, release candidate of which is installable with:\r\n\r\n`pip install https://pstarkey.github.io/bitbucket-archive/#!/downloads/qtutils-2.1.0-rc1.zip`\r\n\r\nI've tested running this with both Python 2 and Python 3, and it can receive and analyse shots from (python2) BLACS in both cases.\r\n\r\nTo  test multiple Python versions with the same codebase of the labscript suite, you can copy the `.pth` file for an existing labscript suite install to another python install like:\r\n\r\n`cp ~/anaconda2/lib/python2.7/site-packages/labscript_suite.pth ~/anaconda3/lib/python3.6/site-packages/labscript_suite.pth`\r\n\r\nIn which case both `~/anaconda2/bin/python -m lyse` and `~/anaconda3/bin/python -m lyse` will be running the same code from the labscript suite install.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/41/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:9246f0e20695%0Dcd6db6b13190?from_pullrequest_id=41"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/41/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/41.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/41/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/41/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/41"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/41/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:9246f0e20695%0Dcd6db6b13190?from_pullrequest_id=41"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/41/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/41/statuses_page=1.json"}}, "title": "Python 3", "close_source_branch": true, "type": "pullrequest", "id": 41, "destination": {"commit": {"hash": "cd6db6b13190", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/cd6db6b13190.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/cd6db6b13190"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2018-02-27T02:45:34.202976+00:00", "summary": {"raw": "Applied all changes highlighted by 2to3.py that manual inspection deemed necessary\r\n\r\nRequire qtutils 2.1.0 for Python 3 compat, release candidate of which is installable with:\r\n\r\n`pip install https://pstarkey.github.io/bitbucket-archive/#!/downloads/qtutils-2.1.0-rc1.zip`\r\n\r\nI've tested running this with both Python 2 and Python 3, and it can receive and analyse shots from (python2) BLACS in both cases.\r\n\r\nTo  test multiple Python versions with the same codebase of the labscript suite, you can copy the `.pth` file for an existing labscript suite install to another python install like:\r\n\r\n`cp ~/anaconda2/lib/python2.7/site-packages/labscript_suite.pth ~/anaconda3/lib/python3.6/site-packages/labscript_suite.pth`\r\n\r\nIn which case both `~/anaconda2/bin/python -m lyse` and `~/anaconda3/bin/python -m lyse` will be running the same code from the labscript suite install.", "markup": "markdown", "html": "<p>Applied all changes highlighted by 2to3.py that manual inspection deemed necessary</p>\n<p>Require qtutils 2.1.0 for Python 3 compat, release candidate of which is installable with:</p>\n<p><code>pip install https://pstarkey.github.io/bitbucket-archive/#!/downloads/qtutils-2.1.0-rc1.zip</code></p>\n<p>I've tested running this with both Python 2 and Python 3, and it can receive and analyse shots from (python2) BLACS in both cases.</p>\n<p>To  test multiple Python versions with the same codebase of the labscript suite, you can copy the <code>.pth</code> file for an existing labscript suite install to another python install like:</p>\n<p><code>cp ~/anaconda2/lib/python2.7/site-packages/labscript_suite.pth ~/anaconda3/lib/python3.6/site-packages/labscript_suite.pth</code></p>\n<p>In which case both <code>~/anaconda2/bin/python -m lyse</code> and <code>~/anaconda3/bin/python -m lyse</code> will be running the same code from the labscript suite install.</p>", "type": "rendered"}, "source": {"commit": {"hash": "301f616ed590", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/301f616ed590"}, "html": {"href": "#!/cbillington/lyse/commits/301f616ed590"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "python3"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-03-01T00:07:16.924139+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "9246f0e20695", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/9246f0e20695.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/9246f0e20695"}}}, "closed_by": null}, {"description": "We ran into a script freezing by coding error today. This made the analysis loop freeze so we restarted the process but the analysis loop was still frozen.\r\n\r\n\u200c\r\n\r\nThis should fix the freeze by putting a error into the Readqueue of the analysis worker. If the analysis routine was running while the restart was called this should result in a error state of that script. If the script was not running nothing should happen.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/42/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:e3ff402963b2%0D9246f0e20695?from_pullrequest_id=42"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/42/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/42.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/42/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/42/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/42"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/42/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:e3ff402963b2%0D9246f0e20695?from_pullrequest_id=42"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/42/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/42/statuses_page=1.json"}}, "title": "fixed analysis loop freezing after script restart", "close_source_branch": true, "type": "pullrequest", "id": 42, "destination": {"commit": {"hash": "9246f0e20695", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/9246f0e20695.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/9246f0e20695"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2018-03-16T16:17:53.791473+00:00", "summary": {"raw": "We ran into a script freezing by coding error today. This made the analysis loop freeze so we restarted the process but the analysis loop was still frozen.\r\n\r\n\u200c\r\n\r\nThis should fix the freeze by putting a error into the Readqueue of the analysis worker. If the analysis routine was running while the restart was called this should result in a error state of that script. If the script was not running nothing should happen.", "markup": "markdown", "html": "<p>We ran into a script freezing by coding error today. This made the analysis loop freeze so we restarted the process but the analysis loop was still frozen.</p>\n<p>\u200c</p>\n<p>This should fix the freeze by putting a error into the Readqueue of the analysis worker. If the analysis routine was running while the restart was called this should result in a error state of that script. If the script was not running nothing should happen.</p>", "type": "rendered"}, "source": {"commit": {"hash": "199cfdac3e29", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse/commit/199cfdac3e29"}, "html": {"href": "#!/PhyNerd/lyse/commits/199cfdac3e29"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/lyse"}, "html": {"href": "#!/PhyNerd/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "PhyNerd/lyse", "uuid": "{d53abe9e-de63-48eb-9cc5-379fd9cdfed9}"}, "branch": {"name": "Analysis-loop-freez-fix"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-03-17T01:22:56.243756+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "e3ff402963b2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/e3ff402963b2.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/e3ff402963b2"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Use QShortcuts for keyboard shortcuts, to avoid duplication of events\r\nas could occur in the existing manual approach, and to make the code\r\ncleaner and less error prone.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/43/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:7edd6f06062e%0De3ff402963b2?from_pullrequest_id=43"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/43/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/43.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/43/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/43/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/43"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/43/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:7edd6f06062e%0De3ff402963b2?from_pullrequest_id=43"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/43/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/43/statuses_page=1.json"}}, "title": "Use QShortcuts", "close_source_branch": true, "type": "pullrequest", "id": 43, "destination": {"commit": {"hash": "e3ff402963b2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/e3ff402963b2.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/e3ff402963b2"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2018-05-30T11:00:49.311985+00:00", "summary": {"raw": "Use QShortcuts for keyboard shortcuts, to avoid duplication of events\r\nas could occur in the existing manual approach, and to make the code\r\ncleaner and less error prone.", "markup": "markdown", "html": "<p>Use QShortcuts for keyboard shortcuts, to avoid duplication of events\nas could occur in the existing manual approach, and to make the code\ncleaner and less error prone.</p>", "type": "rendered"}, "source": {"commit": {"hash": "9713818a48e3", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/9713818a48e3"}, "html": {"href": "#!/cbillington/lyse/commits/9713818a48e3"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "QShortcuts"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-06-05T02:41:56.221674+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "7edd6f06062e", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/7edd6f06062e.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/7edd6f06062e"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Remove workaround for a bug that has since been fixed.\r\nThe workaround was incompatible with PySide/PySide2, so removing it allows\r\nlyse to work with PySide2 (once supported by qtutils).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/44/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:3473384e40f0%0D7edd6f06062e?from_pullrequest_id=44"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/44/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/44.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/44/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/44/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/44"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/44/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:3473384e40f0%0D7edd6f06062e?from_pullrequest_id=44"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/44/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/44/statuses_page=1.json"}}, "title": "Remove workaround", "close_source_branch": true, "type": "pullrequest", "id": 44, "destination": {"commit": {"hash": "7edd6f06062e", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/7edd6f06062e.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/7edd6f06062e"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2018-06-15T06:05:24.666523+00:00", "summary": {"raw": "Remove workaround for a bug that has since been fixed.\r\nThe workaround was incompatible with PySide/PySide2, so removing it allows\r\nlyse to work with PySide2 (once supported by qtutils).", "markup": "markdown", "html": "<p>Remove workaround for a bug that has since been fixed.\nThe workaround was incompatible with PySide/PySide2, so removing it allows\nlyse to work with PySide2 (once supported by qtutils).</p>", "type": "rendered"}, "source": {"commit": {"hash": "31d19a95d3e1", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/31d19a95d3e1"}, "html": {"href": "#!/cbillington/lyse/commits/31d19a95d3e1"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "remove_workaround"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-06-18T06:30:46.992747+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "3473384e40f0", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/3473384e40f0.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/3473384e40f0"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This allows you to provide custom behaviour in plot windows \\(such as additional actions\\)\r\n\r\nUse `lyse.register_plot_class(identifier, cls)` to register a class for lyse to use when creating window for `figure(identifier)`, where cls must be a subclass of `lyse.Plot` \\(which is monkey patched in to the lyse module to avoid the double import denier script triggering if you try to import it directly from lyse.analysis\\_subprocess\\)\r\n\r\nCurrently we do not support changing the class from one run of the script to the next, without restarting the worker process \\(as that would require re-instantiating the plot which has a large number of problems\\). Also, in order to avoid the custom subclass being detected as changing from shot to shot, it needs to be imported from a separate module to the analysis script. If an invalid class is specified, then the default `Plot` class is used and message is printed in the lyse terminal.\r\n\r\nI also changed the indexing of the internal storage of plots to use the identifier rather than the fig object. This seems to make much more sense to me, and since we also now expose that dictionary to the analysis script via `lyse.plots`, I figured now would be a good time to change it! I can't see any downside to doing this but please correct me if I'm wrong.\r\n\r\nFinally, this obviously has no effect on lyse scripts run from the terminal, since we don't use our figure manager in such cases. A warning is printed informing the user in such instances \\(if they use `lyse.register_plot_class()`\\)\r\n\r\nThis was motivated by the vortex research Shaun did for his thesis, for which he directly modified the `Plot` class to implement custom functionality.\r\n\r\n**Update**\r\n\r\nAlso added a threading.Event to delay the return of results to lyse if the user requests it.\r\n\r\nThis allows the user to use the Plot subclass to interact with the data, and save additional results to HDF5 file via custom actions on their toolbar \\(which could be the result of user interaction with the plot\\) and then return the results to lyse \\(for example either on a button click, or after a timeout, or whatever you like!\\)\r\n\r\nTo use, call \\`lyse.delay\\_results\\_return\\(\\)\\` at the end of your script.  \r\nResults will then only be returned to lyse \\(so lyse will be stuck waiting for your analysis script to complete\\) until \\`lyse.delay\\_event.set\\(\\)\\` is called \\(through some event ultimately processed by the Qt event loop\\).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/45/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:c94b027c6994%0De652c2de1a31?from_pullrequest_id=45"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/45/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/45.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/45/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/45/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/45"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/45/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:c94b027c6994%0De652c2de1a31?from_pullrequest_id=45"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/45/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/45/statuses_page=1.json"}}, "title": "Added the ability for analysis scripts to register a custom Plot class", "close_source_branch": true, "type": "pullrequest", "id": 45, "destination": {"commit": {"hash": "e652c2de1a31", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/e652c2de1a31.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/e652c2de1a31"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2018-10-19T06:21:51.419755+00:00", "summary": {"raw": "This allows you to provide custom behaviour in plot windows \\(such as additional actions\\)\r\n\r\nUse `lyse.register_plot_class(identifier, cls)` to register a class for lyse to use when creating window for `figure(identifier)`, where cls must be a subclass of `lyse.Plot` \\(which is monkey patched in to the lyse module to avoid the double import denier script triggering if you try to import it directly from lyse.analysis\\_subprocess\\)\r\n\r\nCurrently we do not support changing the class from one run of the script to the next, without restarting the worker process \\(as that would require re-instantiating the plot which has a large number of problems\\). Also, in order to avoid the custom subclass being detected as changing from shot to shot, it needs to be imported from a separate module to the analysis script. If an invalid class is specified, then the default `Plot` class is used and message is printed in the lyse terminal.\r\n\r\nI also changed the indexing of the internal storage of plots to use the identifier rather than the fig object. This seems to make much more sense to me, and since we also now expose that dictionary to the analysis script via `lyse.plots`, I figured now would be a good time to change it! I can't see any downside to doing this but please correct me if I'm wrong.\r\n\r\nFinally, this obviously has no effect on lyse scripts run from the terminal, since we don't use our figure manager in such cases. A warning is printed informing the user in such instances \\(if they use `lyse.register_plot_class()`\\)\r\n\r\nThis was motivated by the vortex research Shaun did for his thesis, for which he directly modified the `Plot` class to implement custom functionality.\r\n\r\n**Update**\r\n\r\nAlso added a threading.Event to delay the return of results to lyse if the user requests it.\r\n\r\nThis allows the user to use the Plot subclass to interact with the data, and save additional results to HDF5 file via custom actions on their toolbar \\(which could be the result of user interaction with the plot\\) and then return the results to lyse \\(for example either on a button click, or after a timeout, or whatever you like!\\)\r\n\r\nTo use, call \\`lyse.delay\\_results\\_return\\(\\)\\` at the end of your script.  \r\nResults will then only be returned to lyse \\(so lyse will be stuck waiting for your analysis script to complete\\) until \\`lyse.delay\\_event.set\\(\\)\\` is called \\(through some event ultimately processed by the Qt event loop\\).", "markup": "markdown", "html": "<p>This allows you to provide custom behaviour in plot windows (such as additional actions)</p>\n<p>Use <code>lyse.register_plot_class(identifier, cls)</code> to register a class for lyse to use when creating window for <code>figure(identifier)</code>, where cls must be a subclass of <code>lyse.Plot</code> (which is monkey patched in to the lyse module to avoid the double import denier script triggering if you try to import it directly from lyse.analysis_subprocess)</p>\n<p>Currently we do not support changing the class from one run of the script to the next, without restarting the worker process (as that would require re-instantiating the plot which has a large number of problems). Also, in order to avoid the custom subclass being detected as changing from shot to shot, it needs to be imported from a separate module to the analysis script. If an invalid class is specified, then the default <code>Plot</code> class is used and message is printed in the lyse terminal.</p>\n<p>I also changed the indexing of the internal storage of plots to use the identifier rather than the fig object. This seems to make much more sense to me, and since we also now expose that dictionary to the analysis script via <code>lyse.plots</code>, I figured now would be a good time to change it! I can't see any downside to doing this but please correct me if I'm wrong.</p>\n<p>Finally, this obviously has no effect on lyse scripts run from the terminal, since we don't use our figure manager in such cases. A warning is printed informing the user in such instances (if they use <code>lyse.register_plot_class()</code>)</p>\n<p>This was motivated by the vortex research Shaun did for his thesis, for which he directly modified the <code>Plot</code> class to implement custom functionality.</p>\n<p><strong>Update</strong></p>\n<p>Also added a threading.Event to delay the return of results to lyse if the user requests it.</p>\n<p>This allows the user to use the Plot subclass to interact with the data, and save additional results to HDF5 file via custom actions on their toolbar (which could be the result of user interaction with the plot) and then return the results to lyse (for example either on a button click, or after a timeout, or whatever you like!)</p>\n<p>To use, call `lyse.delay_results_return()` at the end of your script.<br />\nResults will then only be returned to lyse (so lyse will be stuck waiting for your analysis script to complete) until `lyse.delay_event.set()` is called (through some event ultimately processed by the Qt event loop).</p>", "type": "rendered"}, "source": {"commit": {"hash": "a33f3d6b6036", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/lyse/commit/a33f3d6b6036"}, "html": {"href": "#!/pstarkey/lyse/commits/a33f3d6b6036"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/lyse"}, "html": {"href": "#!/pstarkey/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e5413385-6166-4d2c-9b39-d34598d7fb72}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "pstarkey/lyse", "uuid": "{e5413385-6166-4d2c-9b39-d34598d7fb72}"}, "branch": {"name": "custom-Plot-classes"}}, "comment_count": 10, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-11-02T02:59:36.429526+00:00", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "merge_commit": {"hash": "c94b027c6994", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/c94b027c6994.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/c94b027c6994"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "Have lyse load all of its resources with absolute paths and do not `chdir()` into the lyse directory.\r\n\r\nThis helps avoid the problem of lyse's behaviour depending on what directory it was launched from due to `chdir()` not updating the `__file__` attribute of modules, resulting in `__file__` being wrong for relative paths.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/46/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:a97de485c672%0D008bc1cfef25?from_pullrequest_id=46"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/46/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/46.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/46/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/46/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/46"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/46/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:a97de485c672%0D008bc1cfef25?from_pullrequest_id=46"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/46/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/46/statuses_page=1.json"}}, "title": "Path fixes", "close_source_branch": true, "type": "pullrequest", "id": 46, "destination": {"commit": {"hash": "008bc1cfef25", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/008bc1cfef25.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/008bc1cfef25"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2018-10-25T19:33:07.547025+00:00", "summary": {"raw": "Have lyse load all of its resources with absolute paths and do not `chdir()` into the lyse directory.\r\n\r\nThis helps avoid the problem of lyse's behaviour depending on what directory it was launched from due to `chdir()` not updating the `__file__` attribute of modules, resulting in `__file__` being wrong for relative paths.", "markup": "markdown", "html": "<p>Have lyse load all of its resources with absolute paths and do not <code>chdir()</code> into the lyse directory.</p>\n<p>This helps avoid the problem of lyse's behaviour depending on what directory it was launched from due to <code>chdir()</code> not updating the <code>__file__</code> attribute of modules, resulting in <code>__file__</code> being wrong for relative paths.</p>", "type": "rendered"}, "source": {"commit": {"hash": "1512ccfcbb9b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/1512ccfcbb9b"}, "html": {"href": "#!/cbillington/lyse/commits/1512ccfcbb9b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "absolute_paths"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-11-02T13:17:10.565709+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "a97de485c672", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/a97de485c672.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/a97de485c672"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "I encountered a bug where if an analysis routine without plots was run, and then plots were added to it, they would not show until the analysis worker process was restarted.\r\n\r\nThis fixes that bug.\r\n\r\nI wonder if it also might fix issue #25", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/47/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/None?from_pullrequest_id=47"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/47/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/47.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/47/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/47/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/47"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/47/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/None?from_pullrequest_id=47"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/47/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/47/statuses_page=1.json"}}, "title": "Bugfix for plots not showing without restart", "close_source_branch": false, "type": "pullrequest", "id": 47, "destination": {"commit": {"hash": "e652c2de1a31", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/e652c2de1a31.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/e652c2de1a31"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2018-10-25T21:21:25.623221+00:00", "summary": {"raw": "I encountered a bug where if an analysis routine without plots was run, and then plots were added to it, they would not show until the analysis worker process was restarted.\r\n\r\nThis fixes that bug.\r\n\r\nI wonder if it also might fix issue #25", "markup": "markdown", "html": "<p>I encountered a bug where if an analysis routine without plots was run, and then plots were added to it, they would not show until the analysis worker process was restarted.</p>\n<p>This fixes that bug.</p>\n<p>I wonder if it also might fix issue <a href=\"#!/labscript_suite/lyse/issues/25/plots-dont-update-after-error\" rel=\"nofollow\" title=\"Plots don&#39;t update after error\" class=\"ap-connect-link\">#25</a></p>", "type": "rendered"}, "source": {"commit": {"hash": "dcc2005c448b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/dcc2005c448b"}, "html": {"href": "#!/cbillington/lyse/commits/dcc2005c448b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "comment_count": 6, "state": "DECLINED", "task_count": 0, "reason": "Fix incompatible with pull request #45. An equivalent fix has been included as part of that pull request instead.", "updated_on": "2018-10-25T22:40:12.269061+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": null, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "* Ensure any bytestrings read from file attributes are turned into\r\n  unicode strings. This resolves an issue raised [on the mailing list](https://groups.google.com/d/msg/labscriptsuite/UVwPzn8WcRk/Kj9rLOuOBgAJ). Labscript suite programs only write vlen strings to these attributes, which are read in as native strings (bytes on py2, unicode on py3), but it's good to ensure they're all read as unicode strings no matter how they were written.\r\n\r\n* Remove pandas monkeypatch that has been included in pandas since\r\n  version 0.21, which we now depend on.\r\n\r\n* Remove an unused line of code.\r\n\r\n* Remove reading of attributes that only pertained to mise", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/48/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:008bc1cfef25%0Dc94b027c6994?from_pullrequest_id=48"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/48/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/48.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/48/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/48/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/48"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/48/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:008bc1cfef25%0Dc94b027c6994?from_pullrequest_id=48"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/48/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/48/statuses_page=1.json"}}, "title": "Bugfix and remove deprecated code", "close_source_branch": true, "type": "pullrequest", "id": 48, "destination": {"commit": {"hash": "c94b027c6994", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/c94b027c6994.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/c94b027c6994"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2018-10-26T19:38:09.186417+00:00", "summary": {"raw": "* Ensure any bytestrings read from file attributes are turned into\r\n  unicode strings. This resolves an issue raised [on the mailing list](https://groups.google.com/d/msg/labscriptsuite/UVwPzn8WcRk/Kj9rLOuOBgAJ). Labscript suite programs only write vlen strings to these attributes, which are read in as native strings (bytes on py2, unicode on py3), but it's good to ensure they're all read as unicode strings no matter how they were written.\r\n\r\n* Remove pandas monkeypatch that has been included in pandas since\r\n  version 0.21, which we now depend on.\r\n\r\n* Remove an unused line of code.\r\n\r\n* Remove reading of attributes that only pertained to mise", "markup": "markdown", "html": "<ul>\n<li>\n<p>Ensure any bytestrings read from file attributes are turned into\n  unicode strings. This resolves an issue raised <a data-is-external-link=\"true\" href=\"https://groups.google.com/d/msg/labscriptsuite/UVwPzn8WcRk/Kj9rLOuOBgAJ\" rel=\"nofollow\">on the mailing list</a>. Labscript suite programs only write vlen strings to these attributes, which are read in as native strings (bytes on py2, unicode on py3), but it's good to ensure they're all read as unicode strings no matter how they were written.</p>\n</li>\n<li>\n<p>Remove pandas monkeypatch that has been included in pandas since\n  version 0.21, which we now depend on.</p>\n</li>\n<li>\n<p>Remove an unused line of code.</p>\n</li>\n<li>\n<p>Remove reading of attributes that only pertained to mise</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "0f62e461b417", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/0f62e461b417"}, "html": {"href": "#!/cbillington/lyse/commits/0f62e461b417"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix-and-deprecation-removal"}}, "comment_count": 6, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-11-02T12:26:43.612030+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "008bc1cfef25", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/008bc1cfef25.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/008bc1cfef25"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Use new labscript_utils submodule to display a splash screen during startup.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/49/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:7594e4d51d61%0D1f4d40da9e97?from_pullrequest_id=49"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/49/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/49.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/49/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/49/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/49"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/49/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:7594e4d51d61%0D1f4d40da9e97?from_pullrequest_id=49"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/49/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/49/statuses_page=1.json"}}, "title": "Splash screen", "close_source_branch": true, "type": "pullrequest", "id": 49, "destination": {"commit": {"hash": "1f4d40da9e97", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/1f4d40da9e97.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/1f4d40da9e97"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-01-29T00:44:44.699037+00:00", "summary": {"raw": "Use new labscript_utils submodule to display a splash screen during startup.", "markup": "markdown", "html": "<p>Use new labscript_utils submodule to display a splash screen during startup.</p>", "type": "rendered"}, "source": {"commit": {"hash": "961027d82752", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/961027d82752"}, "html": {"href": "#!/cbillington/lyse/commits/961027d82752"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "splash"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-02-04T20:01:35.253907+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "7594e4d51d61", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/7594e4d51d61.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/7594e4d51d61"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "When loading the initial configuration, load the window geometry first,\r\nbefore showing the GUI, so that the main window doesn't jump around immediately\r\nafter it appears.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/50/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:1f4d40da9e97%0Dc60057dee1ff?from_pullrequest_id=50"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/50/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/50.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/50/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/50/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/50"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/50/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:1f4d40da9e97%0Dc60057dee1ff?from_pullrequest_id=50"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/50/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/50/statuses_page=1.json"}}, "title": "Prevent initial window jumpiness.", "close_source_branch": true, "type": "pullrequest", "id": 50, "destination": {"commit": {"hash": "c60057dee1ff", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/c60057dee1ff.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/c60057dee1ff"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-01-31T22:43:14.129599+00:00", "summary": {"raw": "When loading the initial configuration, load the window geometry first,\r\nbefore showing the GUI, so that the main window doesn't jump around immediately\r\nafter it appears.", "markup": "markdown", "html": "<p>When loading the initial configuration, load the window geometry first,\nbefore showing the GUI, so that the main window doesn't jump around immediately\nafter it appears.</p>", "type": "rendered"}, "source": {"commit": {"hash": "fd86ce5e9b12", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/fd86ce5e9b12"}, "html": {"href": "#!/cbillington/lyse/commits/fd86ce5e9b12"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "load_geometry"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-02-04T19:58:07.225715+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "1f4d40da9e97", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/1f4d40da9e97.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/1f4d40da9e97"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}], "page": 1, "next": "data/repositories/labscript_suite/lyse/pullrequests_state=MERGED&state=OPEN&state=SUPERSEDED&state=DECLINED&page=2.json"}