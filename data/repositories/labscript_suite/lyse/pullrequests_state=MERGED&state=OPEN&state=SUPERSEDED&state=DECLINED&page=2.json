{"pagelen": 50, "previous": "data/repositories/labscript_suite/lyse/pullrequests_state=MERGED&state=OPEN&state=SUPERSEDED&state=DECLINED&page=1.json", "values": [{"description": "Going through our local repo I found a bunch of simple enhancements to lyse functionality we have been using that should probably be sent upstream. This one is the most extreme so I\u2019m splitting it into it\u2019s own PR.\r\n\r\nThis addresses Issue #44, essentially allowing keyword arguments to be passed through from save\\_result\\_array\\(s\\) to the h5py.create\\_dataset\\(\\) command. This allows one to use the native compression functionality that comes with h5py to save on some disk space when doing analysis on large datasets.\r\n\r\nI\u2019ve gone with the approach of just passing all keywords for simplicity, but I can see the argument for limiting which keywords are allowed explicitly in lyse instead of relying on h5py to balk at incorrect keywords. Thoughts?", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/51/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:567daaba2a49%0D7594e4d51d61?from_pullrequest_id=51"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/51/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/51.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/51/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/51/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/51"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/51/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:567daaba2a49%0D7594e4d51d61?from_pullrequest_id=51"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/51/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/51/statuses_page=1.json"}}, "title": "Allow for h5 array compression passthrough arguments in save_result_array(s)", "close_source_branch": true, "type": "pullrequest", "id": 51, "destination": {"commit": {"hash": "7594e4d51d61", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/7594e4d51d61.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/7594e4d51d61"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-02-05T13:27:34.824314+00:00", "summary": {"raw": "Going through our local repo I found a bunch of simple enhancements to lyse functionality we have been using that should probably be sent upstream. This one is the most extreme so I\u2019m splitting it into it\u2019s own PR.\r\n\r\nThis addresses Issue #44, essentially allowing keyword arguments to be passed through from save\\_result\\_array\\(s\\) to the h5py.create\\_dataset\\(\\) command. This allows one to use the native compression functionality that comes with h5py to save on some disk space when doing analysis on large datasets.\r\n\r\nI\u2019ve gone with the approach of just passing all keywords for simplicity, but I can see the argument for limiting which keywords are allowed explicitly in lyse instead of relying on h5py to balk at incorrect keywords. Thoughts?", "markup": "markdown", "html": "<p>Going through our local repo I found a bunch of simple enhancements to lyse functionality we have been using that should probably be sent upstream. This one is the most extreme so I\u2019m splitting it into it\u2019s own PR.</p>\n<p>This addresses Issue <a href=\"#!/labscript_suite/lyse/issues/44/allow-save_result_array-s-methods-to-use\" rel=\"nofollow\" title=\"Allow save_result_array(s) methods to use h5 dataset compression filters\" class=\"ap-connect-link\">#44</a>, essentially allowing keyword arguments to be passed through from save_result_array(s) to the h5py.create_dataset() command. This allows one to use the native compression functionality that comes with h5py to save on some disk space when doing analysis on large datasets.</p>\n<p>I\u2019ve gone with the approach of just passing all keywords for simplicity, but I can see the argument for limiting which keywords are allowed explicitly in lyse instead of relying on h5py to balk at incorrect keywords. Thoughts?</p>", "type": "rendered"}, "source": {"commit": {"hash": "c8b6d2319b3f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/lyse/commit/c8b6d2319b3f"}, "html": {"href": "#!/dihm/lyse/commits/c8b6d2319b3f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/lyse"}, "html": {"href": "#!/dihm/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{093f183c-ad2a-4071-88e2-8c47ad45e99d}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "dihm/lyse", "uuid": "{093f183c-ad2a-4071-88e2-8c47ad45e99d}"}, "branch": {"name": "h5_savearray_compression"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-02-05T17:07:08.228731+00:00", "author": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "merge_commit": {"hash": "567daaba2a49", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/567daaba2a49.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/567daaba2a49"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "A few generally helpful lyse functions we have added in our lab to round out functionality. Particularly it adds get\\_result\\(\\) and get\\_results\\(\\) to match the corresponding save\\_result\\(\\) and save\\_results\\(\\) methods already in lyse. \r\n\r\nAlso added a more general get\\_attrs\\(\\) function that returns all attributes of a group as a dictionary, which is handy for getting non-result attributes like device configuration options, or even results themselves if a dictionary structure is desired.\r\n\r\nFinally, modified the docstrings I just made for the save\\_result\\(s\\) methods to be consistent with these and slightly more accurate.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/52/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:a5d1e772b84c%0D567daaba2a49?from_pullrequest_id=52"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/52/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/52.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/52/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/52/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/52"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/52/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:a5d1e772b84c%0D567daaba2a49?from_pullrequest_id=52"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/52/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/52/statuses_page=1.json"}}, "title": "Add some logically absent Lyse functions", "close_source_branch": true, "type": "pullrequest", "id": 52, "destination": {"commit": {"hash": "567daaba2a49", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/567daaba2a49.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/567daaba2a49"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-02-05T19:19:19.466634+00:00", "summary": {"raw": "A few generally helpful lyse functions we have added in our lab to round out functionality. Particularly it adds get\\_result\\(\\) and get\\_results\\(\\) to match the corresponding save\\_result\\(\\) and save\\_results\\(\\) methods already in lyse. \r\n\r\nAlso added a more general get\\_attrs\\(\\) function that returns all attributes of a group as a dictionary, which is handy for getting non-result attributes like device configuration options, or even results themselves if a dictionary structure is desired.\r\n\r\nFinally, modified the docstrings I just made for the save\\_result\\(s\\) methods to be consistent with these and slightly more accurate.", "markup": "markdown", "html": "<p>A few generally helpful lyse functions we have added in our lab to round out functionality. Particularly it adds get_result() and get_results() to match the corresponding save_result() and save_results() methods already in lyse. </p>\n<p>Also added a more general get_attrs() function that returns all attributes of a group as a dictionary, which is handy for getting non-result attributes like device configuration options, or even results themselves if a dictionary structure is desired.</p>\n<p>Finally, modified the docstrings I just made for the save_result(s) methods to be consistent with these and slightly more accurate.</p>", "type": "rendered"}, "source": {"commit": {"hash": "7f64b7d4faee", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/lyse/commit/7f64b7d4faee"}, "html": {"href": "#!/dihm/lyse/commits/7f64b7d4faee"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/lyse"}, "html": {"href": "#!/dihm/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{093f183c-ad2a-4071-88e2-8c47ad45e99d}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "dihm/lyse", "uuid": "{093f183c-ad2a-4071-88e2-8c47ad45e99d}"}, "branch": {"name": "more_lyse_functions"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-02-05T19:53:48.925574+00:00", "author": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "merge_commit": {"hash": "a5d1e772b84c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/a5d1e772b84c.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/a5d1e772b84c"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Do not use deprecated pandas set_value and get_value methods.\r\nUse new df.at[r, c] instead.\r\n\r\nThis should be tested on a real setup to make sure nothing surprising happens, though it passes my simple testing.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/53/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:9da5aebbf0ad%0Da5d1e772b84c?from_pullrequest_id=53"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/53/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/53.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/53/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/53/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/53"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/53/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:9da5aebbf0ad%0Da5d1e772b84c?from_pullrequest_id=53"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/53/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/53/statuses_page=1.json"}}, "title": "Update for pandas deprecated functions.", "close_source_branch": true, "type": "pullrequest", "id": 53, "destination": {"commit": {"hash": "a5d1e772b84c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/a5d1e772b84c.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/a5d1e772b84c"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-02-05T19:59:49.740886+00:00", "summary": {"raw": "Do not use deprecated pandas set_value and get_value methods.\r\nUse new df.at[r, c] instead.\r\n\r\nThis should be tested on a real setup to make sure nothing surprising happens, though it passes my simple testing.", "markup": "markdown", "html": "<p>Do not use deprecated pandas set_value and get_value methods.\nUse new df.at[r, c] instead.</p>\n<p>This should be tested on a real setup to make sure nothing surprising happens, though it passes my simple testing.</p>", "type": "rendered"}, "source": {"commit": {"hash": "58ab24edeb3e", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/58ab24edeb3e"}, "html": {"href": "#!/cbillington/lyse/commits/58ab24edeb3e"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "deprecation_update"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-02-11T16:20:59.054527+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "9da5aebbf0ad", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/9da5aebbf0ad.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/9da5aebbf0ad"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Update to use new zprocess functionality as wrapped by labscipt_utils.ls_zprocess and labscript_utils.qtwidgets.outputbox.\r\n\r\nRequires [labscript utils PR #66](#!/labscript_suite/labscript_utils/pull-requests/66)\r\n\r\nThis is required to move to encrypted communication.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/54/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:0c3fc38a5611%0D3b9b5e542e7b?from_pullrequest_id=54"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/54/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/54.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/54/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/54/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/54"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/54/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:0c3fc38a5611%0D3b9b5e542e7b?from_pullrequest_id=54"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/54/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/54/statuses_page=1.json"}}, "title": "Update to use new zprocess functionality", "close_source_branch": true, "type": "pullrequest", "id": 54, "destination": {"commit": {"hash": "3b9b5e542e7b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/3b9b5e542e7b.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/3b9b5e542e7b"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-02-07T03:03:11.973959+00:00", "summary": {"raw": "Update to use new zprocess functionality as wrapped by labscipt_utils.ls_zprocess and labscript_utils.qtwidgets.outputbox.\r\n\r\nRequires [labscript utils PR #66](#!/labscript_suite/labscript_utils/pull-requests/66)\r\n\r\nThis is required to move to encrypted communication.", "markup": "markdown", "html": "<p>Update to use new zprocess functionality as wrapped by labscipt_utils.ls_zprocess and labscript_utils.qtwidgets.outputbox.</p>\n<p>Requires <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript_utils/pull-requests/66\" rel=\"nofollow\">labscript utils PR #66</a></p>\n<p>This is required to move to encrypted communication.</p>", "type": "rendered"}, "source": {"commit": {"hash": "54c4ada11dc0", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/54c4ada11dc0"}, "html": {"href": "#!/cbillington/lyse/commits/54c4ada11dc0"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "zprocess_changes"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-02-22T15:59:51.143587+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "0c3fc38a5611", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/0c3fc38a5611.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/0c3fc38a5611"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Removed debug print statement for PY2", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/55/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:3b9b5e542e7b%0D9da5aebbf0ad?from_pullrequest_id=55"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/55/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/55.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/55/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/55/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/55"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/55/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:3b9b5e542e7b%0D9da5aebbf0ad?from_pullrequest_id=55"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/55/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/55/statuses_page=1.json"}}, "title": "Removed debug print statement for PY2", "close_source_branch": true, "type": "pullrequest", "id": 55, "destination": {"commit": {"hash": "9da5aebbf0ad", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/9da5aebbf0ad.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/9da5aebbf0ad"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-02-12T03:14:42.613719+00:00", "summary": {"raw": "Removed debug print statement for PY2", "markup": "markdown", "html": "<p>Removed debug print statement for PY2</p>", "type": "rendered"}, "source": {"commit": {"hash": "3028e5622a93", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/3028e5622a93.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/3028e5622a93"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "remove-print-statement"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-02-12T03:20:18.350788+00:00", "author": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "merge_commit": {"hash": "3b9b5e542e7b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/3b9b5e542e7b.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/3b9b5e542e7b"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Line wrapping in the FileBox is not desired since we are not expanding cells\r\nvertically, and if line wrapping is enabled the text is vertically centred\r\nand so not even the first line is readable.\r\n\r\nQTableView has word wrapping enabled by default, but Qt <= 5.11 had a bug such\r\nthat it had no effect. Qt 5.12 fixes this bug, resulting in the table wrapping\r\nlines unless word wrapping is explicitly disabled as in this commit.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/56/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:edc737142f13%0D0c3fc38a5611?from_pullrequest_id=56"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/56/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/56.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/56/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/56/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/56"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/56/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:edc737142f13%0D0c3fc38a5611?from_pullrequest_id=56"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/56/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/56/statuses_page=1.json"}}, "title": "Disable word wrap in FileBox QTableView", "close_source_branch": true, "type": "pullrequest", "id": 56, "destination": {"commit": {"hash": "0c3fc38a5611", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/0c3fc38a5611.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/0c3fc38a5611"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-03-29T20:58:09.700422+00:00", "summary": {"raw": "Line wrapping in the FileBox is not desired since we are not expanding cells\r\nvertically, and if line wrapping is enabled the text is vertically centred\r\nand so not even the first line is readable.\r\n\r\nQTableView has word wrapping enabled by default, but Qt <= 5.11 had a bug such\r\nthat it had no effect. Qt 5.12 fixes this bug, resulting in the table wrapping\r\nlines unless word wrapping is explicitly disabled as in this commit.", "markup": "markdown", "html": "<p>Line wrapping in the FileBox is not desired since we are not expanding cells\nvertically, and if line wrapping is enabled the text is vertically centred\nand so not even the first line is readable.</p>\n<p>QTableView has word wrapping enabled by default, but Qt &lt;= 5.11 had a bug such\nthat it had no effect. Qt 5.12 fixes this bug, resulting in the table wrapping\nlines unless word wrapping is explicitly disabled as in this commit.</p>", "type": "rendered"}, "source": {"commit": {"hash": "7f1564a1fbcd", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/7f1564a1fbcd"}, "html": {"href": "#!/cbillington/lyse/commits/7f1564a1fbcd"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "filebox-no-linewrap"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-04-01T15:45:42.899628+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "edc737142f13", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/edc737142f13.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/edc737142f13"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "* Restore missing zprocess import removed by mistake (used only in uncaught error handling).\r\n* Update columns visible after updating dataframe.\r\n* Fix bad indentation.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/57/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:7294f7910f4e%0D11054910f9b2?from_pullrequest_id=57"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/57/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/57.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/57/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/57/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/57"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/57/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:7294f7910f4e%0D11054910f9b2?from_pullrequest_id=57"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/57/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/57/statuses_page=1.json"}}, "title": "Minor bugfixes", "close_source_branch": false, "type": "pullrequest", "id": 57, "destination": {"commit": {"hash": "11054910f9b2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/11054910f9b2.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/11054910f9b2"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-04-22T18:19:20.360927+00:00", "summary": {"raw": "* Restore missing zprocess import removed by mistake (used only in uncaught error handling).\r\n* Update columns visible after updating dataframe.\r\n* Fix bad indentation.", "markup": "markdown", "html": "<ul>\n<li>Restore missing zprocess import removed by mistake (used only in uncaught error handling).</li>\n<li>Update columns visible after updating dataframe.</li>\n<li>Fix bad indentation.</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "efcc7ea89de1", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/efcc7ea89de1"}, "html": {"href": "#!/cbillington/lyse/commits/efcc7ea89de1"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-04-28T09:35:16.883327+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "7294f7910f4e", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/7294f7910f4e.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/7294f7910f4e"}}}, "closed_by": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, {"description": "This attempts to resolve issue #46 by setting the font size of the tableview headers without using stylesheets, which seem to mess with Qt's ability to compute how large the headers' contents are.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/58/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:96b98428ad89%0Debce04eba22c?from_pullrequest_id=58"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/58/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/58.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/58/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/58/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/58"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/58/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:96b98428ad89%0Debce04eba22c?from_pullrequest_id=58"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/58/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/58/statuses_page=1.json"}}, "title": "Resolve issue #46", "close_source_branch": true, "type": "pullrequest", "id": 58, "destination": {"commit": {"hash": "ebce04eba22c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/ebce04eba22c.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/ebce04eba22c"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-04-23T22:16:43.964297+00:00", "summary": {"raw": "This attempts to resolve issue #46 by setting the font size of the tableview headers without using stylesheets, which seem to mess with Qt's ability to compute how large the headers' contents are.", "markup": "markdown", "html": "<p>This attempts to resolve issue <a href=\"#!/labscript_suite/lyse/issues/46/text-of-row-header-is-truncated\" rel=\"nofollow\" title=\"Text of row header is truncated\" class=\"ap-connect-link\"><s>#46</s></a> by setting the font size of the tableview headers without using stylesheets, which seem to mess with Qt's ability to compute how large the headers' contents are.</p>", "type": "rendered"}, "source": {"commit": {"hash": "ba571308620b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/ba571308620b"}, "html": {"href": "#!/cbillington/lyse/commits/ba571308620b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix2"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-04-28T09:32:32.928439+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "96b98428ad89", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/96b98428ad89.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/96b98428ad89"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/59/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:a5e38b9e4c24%0D96b98428ad89?from_pullrequest_id=59"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/59/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/59.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/59/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/59/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/59"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/59/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:a5e38b9e4c24%0D96b98428ad89?from_pullrequest_id=59"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/59/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/59/statuses_page=1.json"}}, "title": "Resolve issue #47", "close_source_branch": true, "type": "pullrequest", "id": 59, "destination": {"commit": {"hash": "96b98428ad89", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/96b98428ad89.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/96b98428ad89"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-04-24T00:49:57.971008+00:00", "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "source": {"commit": {"hash": "0d773c1fbdd0", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rpanderson/lyse/commit/0d773c1fbdd0"}, "html": {"href": "#!/rpanderson/lyse/commits/0d773c1fbdd0"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rpanderson/lyse"}, "html": {"href": "#!/rpanderson/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{af3f4037-4cb2-49dd-b675-22e0ce6522c4}ts=2203673"}}, "type": "repository", "name": "lyse", "full_name": "rpanderson/lyse", "uuid": "{af3f4037-4cb2-49dd-b675-22e0ce6522c4}"}, "branch": {"name": "bugfix"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-04-24T15:26:22.009051+00:00", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "merge_commit": {"hash": "a5e38b9e4c24", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/a5e38b9e4c24.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/a5e38b9e4c24"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Use monospace font for vertical header, and remove additional space between row number and index string.\r\n\r\nThe `renumber_rows` function left-pads the row numbers so they will be aligned at the period, but this doesn't have the intended effect unless a monospace font is used. Here's a before and after with `integer_indexing = True`:\r\n\r\n![](data/bitbucket.org/repo/BMBAeq/images/2675465039-sans_vert_header_before.png)\r\n![](data/bitbucket.org/repo/oL84pAo/images/320547339-ubuntu_mono_vert_header.png)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/60/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:33f1c0ab51f6%0Da5e38b9e4c24?from_pullrequest_id=60"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/60/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/60.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/60/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/60/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/60"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/60/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:33f1c0ab51f6%0Da5e38b9e4c24?from_pullrequest_id=60"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/60/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/60/statuses_page=1.json"}}, "title": "Improve formatting of vertical (row) header", "close_source_branch": true, "type": "pullrequest", "id": 60, "destination": {"commit": {"hash": "a5e38b9e4c24", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/a5e38b9e4c24.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/a5e38b9e4c24"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-04-24T22:54:08.154746+00:00", "summary": {"raw": "Use monospace font for vertical header, and remove additional space between row number and index string.\r\n\r\nThe `renumber_rows` function left-pads the row numbers so they will be aligned at the period, but this doesn't have the intended effect unless a monospace font is used. Here's a before and after with `integer_indexing = True`:\r\n\r\n![](data/bitbucket.org/repo/BMBAeq/images/2675465039-sans_vert_header_before.png)\r\n![](data/bitbucket.org/repo/oL84pAo/images/320547339-ubuntu_mono_vert_header.png)", "markup": "markdown", "html": "<p>Use monospace font for vertical header, and remove additional space between row number and index string.</p>\n<p>The <code>renumber_rows</code> function left-pads the row numbers so they will be aligned at the period, but this doesn't have the intended effect unless a monospace font is used. Here's a before and after with <code>integer_indexing = True</code>:</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BMBAeq/images/2675465039-sans_vert_header_before.png\" />\n<img alt=\"\" src=\"data/bitbucket.org/repo/oL84pAo/images/320547339-ubuntu_mono_vert_header.png\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "4c7723859857", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rpanderson/lyse/commit/4c7723859857"}, "html": {"href": "#!/rpanderson/lyse/commits/4c7723859857"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rpanderson/lyse"}, "html": {"href": "#!/rpanderson/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{af3f4037-4cb2-49dd-b675-22e0ce6522c4}ts=2203673"}}, "type": "repository", "name": "lyse", "full_name": "rpanderson/lyse", "uuid": "{af3f4037-4cb2-49dd-b675-22e0ce6522c4}"}, "branch": {"name": "header_formatting"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-04-26T23:01:52.985516+00:00", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "merge_commit": {"hash": "33f1c0ab51f6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/33f1c0ab51f6.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/33f1c0ab51f6"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Move side-effecty code in analysis_subprocess.py into its `__main__` block.\r\nThis makes importing `analysis_subprocess` side-effect-free, making it not\r\ninterfere with the multiprocessing module when subprocesses execute it\r\n(since it is the `__main__` module of the parent process, which multiprocessing executes unconditionally in the child process)\r\n\r\nActually, further change: make `analysis_subprocess.py` not even the `__main__` module when run in the usual way from lyse. Create a module object for the user's\r\nanalysis routine and insert it into sys.modules as the `__main__` module\r\n(and rename the analysis_subprocess module from `__main__` to\r\n`_analysis_subprocess`). Run the user's code in that module's `__dict__`,\r\nresetting the dict to its initial state each run.\r\n\r\nThis should enable multiprocessing code to find the `__main__` module and have it refer to the user's analysis routine script instead of `analysis_subprocess.py`.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/61/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:080da0076ab4%0D080da0076ab4?from_pullrequest_id=61"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/61/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/61.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/61/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/61/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/61"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/61/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:080da0076ab4%0D080da0076ab4?from_pullrequest_id=61"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/61/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/61/statuses_page=1.json"}}, "title": "Fix for #48: Make analysis_subprocess.py multiprocessing-friendly", "close_source_branch": true, "type": "pullrequest", "id": 61, "destination": {"commit": {"hash": "080da0076ab4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/080da0076ab4.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/080da0076ab4"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-05-01T15:15:02.024116+00:00", "summary": {"raw": "Move side-effecty code in analysis_subprocess.py into its `__main__` block.\r\nThis makes importing `analysis_subprocess` side-effect-free, making it not\r\ninterfere with the multiprocessing module when subprocesses execute it\r\n(since it is the `__main__` module of the parent process, which multiprocessing executes unconditionally in the child process)\r\n\r\nActually, further change: make `analysis_subprocess.py` not even the `__main__` module when run in the usual way from lyse. Create a module object for the user's\r\nanalysis routine and insert it into sys.modules as the `__main__` module\r\n(and rename the analysis_subprocess module from `__main__` to\r\n`_analysis_subprocess`). Run the user's code in that module's `__dict__`,\r\nresetting the dict to its initial state each run.\r\n\r\nThis should enable multiprocessing code to find the `__main__` module and have it refer to the user's analysis routine script instead of `analysis_subprocess.py`.", "markup": "markdown", "html": "<p>Move side-effecty code in analysis_subprocess.py into its <code>__main__</code> block.\nThis makes importing <code>analysis_subprocess</code> side-effect-free, making it not\ninterfere with the multiprocessing module when subprocesses execute it\n(since it is the <code>__main__</code> module of the parent process, which multiprocessing executes unconditionally in the child process)</p>\n<p>Actually, further change: make <code>analysis_subprocess.py</code> not even the <code>__main__</code> module when run in the usual way from lyse. Create a module object for the user's\nanalysis routine and insert it into sys.modules as the <code>__main__</code> module\n(and rename the analysis_subprocess module from <code>__main__</code> to\n<code>_analysis_subprocess</code>). Run the user's code in that module's <code>__dict__</code>,\nresetting the dict to its initial state each run.</p>\n<p>This should enable multiprocessing code to find the <code>__main__</code> module and have it refer to the user's analysis routine script instead of <code>analysis_subprocess.py</code>.</p>", "type": "rendered"}, "source": {"commit": {"hash": "4c9ba4dfd251", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/4c9ba4dfd251"}, "html": {"href": "#!/cbillington/lyse/commits/4c9ba4dfd251"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "comment_count": 10, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-05-06T17:31:53.414102+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "080da0076ab4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/080da0076ab4.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/080da0076ab4"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Run `end_child` method of each `AnalysisRoutine` at `closeEvent` of `LyseMainWindow`. Postpone by up to 2s while waiting for workers to exit cleanly or be terminated by `check_child_exited`. This could probably be done with signals from `check_child_exited` but the recursive use of `QtCore.QTimer.singleShot` with a conditional or timeout is ubiquitous here already.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/62/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:51732f11fd67%0D33f1c0ab51f6?from_pullrequest_id=62"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/62/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/62.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/62/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/62/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/62"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/62/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:51732f11fd67%0D33f1c0ab51f6?from_pullrequest_id=62"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/62/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/62/statuses_page=1.json"}}, "title": "Terminate subprocesses at shutdown", "close_source_branch": true, "type": "pullrequest", "id": 62, "destination": {"commit": {"hash": "33f1c0ab51f6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/33f1c0ab51f6.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/33f1c0ab51f6"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-05-05T12:29:15.558673+00:00", "summary": {"raw": "Run `end_child` method of each `AnalysisRoutine` at `closeEvent` of `LyseMainWindow`. Postpone by up to 2s while waiting for workers to exit cleanly or be terminated by `check_child_exited`. This could probably be done with signals from `check_child_exited` but the recursive use of `QtCore.QTimer.singleShot` with a conditional or timeout is ubiquitous here already.", "markup": "markdown", "html": "<p>Run <code>end_child</code> method of each <code>AnalysisRoutine</code> at <code>closeEvent</code> of <code>LyseMainWindow</code>. Postpone by up to 2s while waiting for workers to exit cleanly or be terminated by <code>check_child_exited</code>. This could probably be done with signals from <code>check_child_exited</code> but the recursive use of <code>QtCore.QTimer.singleShot</code> with a conditional or timeout is ubiquitous here already.</p>", "type": "rendered"}, "source": {"commit": {"hash": "4acf24cdce0c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rpanderson/lyse/commit/4acf24cdce0c"}, "html": {"href": "#!/rpanderson/lyse/commits/4acf24cdce0c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rpanderson/lyse"}, "html": {"href": "#!/rpanderson/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{af3f4037-4cb2-49dd-b675-22e0ce6522c4}ts=2203673"}}, "type": "repository", "name": "lyse", "full_name": "rpanderson/lyse", "uuid": "{af3f4037-4cb2-49dd-b675-22e0ce6522c4}"}, "branch": {"name": "terminate_workers"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-05-06T16:04:30.308848+00:00", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "merge_commit": {"hash": "51732f11fd67", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/51732f11fd67.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/51732f11fd67"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Fix two issues with delayed closing of lyse\r\n\r\n* There was a bug where if no configuration changed, Lyse.on_close_event\r\n  would not terminate the subprocesses, and then it would wait the full\r\n  two seconds before quitting (and potentially leave any non-zprocess subprocesses\r\n  running). Refactored on_close_event(), factoring out the 'are you sure' dialog\r\n  and the termination of all subprocesses into separate functions while fixing\r\n  the logic here.\r\n* When lyse was to actually quit, it called qapplication.quit() instead of .close()\r\n  on the main window. This means if running with `python -i`, lyse doesn't actually\r\n  close, as the event loop just fires back up again. Now it actally calls close(),\r\n  and this triggers the same method that caught the first close event, which knows\r\n  it's the second time it's been called because a flag has been set so actually closes.\r\n  This also has the side effect that the user clicking close twice will close\r\n  lyse regardless of the timeout (which seems fine).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/63/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:fedfacf40eb7%0De8dda2f57f68?from_pullrequest_id=63"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/63/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/63.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/63/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/63/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/63"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/63/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:fedfacf40eb7%0De8dda2f57f68?from_pullrequest_id=63"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/63/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/63/statuses_page=1.json"}}, "title": "Fix two issues with delayed closing of lyse", "close_source_branch": true, "type": "pullrequest", "id": 63, "destination": {"commit": {"hash": "e8dda2f57f68", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/e8dda2f57f68.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/e8dda2f57f68"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-05-10T01:13:26.968729+00:00", "summary": {"raw": "Fix two issues with delayed closing of lyse\r\n\r\n* There was a bug where if no configuration changed, Lyse.on_close_event\r\n  would not terminate the subprocesses, and then it would wait the full\r\n  two seconds before quitting (and potentially leave any non-zprocess subprocesses\r\n  running). Refactored on_close_event(), factoring out the 'are you sure' dialog\r\n  and the termination of all subprocesses into separate functions while fixing\r\n  the logic here.\r\n* When lyse was to actually quit, it called qapplication.quit() instead of .close()\r\n  on the main window. This means if running with `python -i`, lyse doesn't actually\r\n  close, as the event loop just fires back up again. Now it actally calls close(),\r\n  and this triggers the same method that caught the first close event, which knows\r\n  it's the second time it's been called because a flag has been set so actually closes.\r\n  This also has the side effect that the user clicking close twice will close\r\n  lyse regardless of the timeout (which seems fine).", "markup": "markdown", "html": "<p>Fix two issues with delayed closing of lyse</p>\n<ul>\n<li>There was a bug where if no configuration changed, Lyse.on_close_event\n  would not terminate the subprocesses, and then it would wait the full\n  two seconds before quitting (and potentially leave any non-zprocess subprocesses\n  running). Refactored on_close_event(), factoring out the 'are you sure' dialog\n  and the termination of all subprocesses into separate functions while fixing\n  the logic here.</li>\n<li>When lyse was to actually quit, it called qapplication.quit() instead of .close()\n  on the main window. This means if running with <code>python -i</code>, lyse doesn't actually\n  close, as the event loop just fires back up again. Now it actally calls close(),\n  and this triggers the same method that caught the first close event, which knows\n  it's the second time it's been called because a flag has been set so actually closes.\n  This also has the side effect that the user clicking close twice will close\n  lyse regardless of the timeout (which seems fine).</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "efe00aa15132", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/efe00aa15132"}, "html": {"href": "#!/cbillington/lyse/commits/efe00aa15132"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-05-10T02:14:04.400421+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "fedfacf40eb7", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/fedfacf40eb7.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/fedfacf40eb7"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Increase subprocess startup timeout to 30 seconds. Slow computers starting many\r\nsubprocesses have been observed to timeout, requiring a restart of lyse to\r\nfix.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/64/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:c0ced1de0358%0Dfedfacf40eb7?from_pullrequest_id=64"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/64/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/64.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/64/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/64/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/64"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/64/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:c0ced1de0358%0Dfedfacf40eb7?from_pullrequest_id=64"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/64/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/64/statuses_page=1.json"}}, "title": "Increase subprocess startup timeout", "close_source_branch": true, "type": "pullrequest", "id": 64, "destination": {"commit": {"hash": "fedfacf40eb7", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/fedfacf40eb7.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/fedfacf40eb7"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-05-31T20:39:53.638463+00:00", "summary": {"raw": "Increase subprocess startup timeout to 30 seconds. Slow computers starting many\r\nsubprocesses have been observed to timeout, requiring a restart of lyse to\r\nfix.", "markup": "markdown", "html": "<p>Increase subprocess startup timeout to 30 seconds. Slow computers starting many\nsubprocesses have been observed to timeout, requiring a restart of lyse to\nfix.</p>", "type": "rendered"}, "source": {"commit": {"hash": "a847dd124ee7", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/a847dd124ee7.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/a847dd124ee7"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "increase_timeout"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-06-01T16:32:42.694609+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "c0ced1de0358", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/c0ced1de0358.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/c0ced1de0358"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Force multiprocessing to spawn new processes instead of forking them on >= 3.4.\r\nThis fixes issue #49 which was caused by forking, but zeromq not being fork-safe.\r\n\r\nThis is only relevant on unix - Windows does not fork in any case.\r\n\r\nThe call to `multiprocessing.set_start_method()` is wrapped in a check such that this will do nothing on Python versions < 3.4 where the functionality doesn't exist. Thus the bug is only fixed on Python 3.4+, but so be it.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/65/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:15bf5fd2b9ed%0Dc0ced1de0358?from_pullrequest_id=65"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/65/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/65.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/65/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/65/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/65"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/65/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:15bf5fd2b9ed%0Dc0ced1de0358?from_pullrequest_id=65"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/65/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/65/statuses_page=1.json"}}, "title": "Do not fork in analysis subprocess", "close_source_branch": true, "type": "pullrequest", "id": 65, "destination": {"commit": {"hash": "c0ced1de0358", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/c0ced1de0358.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/c0ced1de0358"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-06-06T20:36:53.823491+00:00", "summary": {"raw": "Force multiprocessing to spawn new processes instead of forking them on >= 3.4.\r\nThis fixes issue #49 which was caused by forking, but zeromq not being fork-safe.\r\n\r\nThis is only relevant on unix - Windows does not fork in any case.\r\n\r\nThe call to `multiprocessing.set_start_method()` is wrapped in a check such that this will do nothing on Python versions < 3.4 where the functionality doesn't exist. Thus the bug is only fixed on Python 3.4+, but so be it.", "markup": "markdown", "html": "<p>Force multiprocessing to spawn new processes instead of forking them on &gt;= 3.4.\nThis fixes issue <a href=\"#!/labscript_suite/lyse/issues/49/subprocess-deadlock-with-multiple-threads\" rel=\"nofollow\" title=\"Subprocess deadlock with multiple threads\" class=\"ap-connect-link\"><s>#49</s></a> which was caused by forking, but zeromq not being fork-safe.</p>\n<p>This is only relevant on unix - Windows does not fork in any case.</p>\n<p>The call to <code>multiprocessing.set_start_method()</code> is wrapped in a check such that this will do nothing on Python versions &lt; 3.4 where the functionality doesn't exist. Thus the bug is only fixed on Python 3.4+, but so be it.</p>", "type": "rendered"}, "source": {"commit": {"hash": "7930cddcab0c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/7930cddcab0c"}, "html": {"href": "#!/cbillington/lyse/commits/7930cddcab0c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-06-09T16:37:11.426418+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "15bf5fd2b9ed", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/15bf5fd2b9ed.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/15bf5fd2b9ed"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Use labscript_utils.properties get/set_attribute(s) functions to get and save\r\nanalysis results and image attributes, in order to automatically\r\nserialise/deserialise to/from JSON attributes that do not have a HDF5 equivalant.\r\n\r\nThis requires [labscript_utils pull request 86](#!/labscript_suite/labscript_utils/pull-requests/86/)\r\nI did not extend the serialising/deserialising to globals. We could consider extending globals to allow them to be more complex datatypes via JSON serialisation, but so far we have shied away from that so I think that's a separate discussion.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/66/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:743d4ad4fc8a%0D15bf5fd2b9ed?from_pullrequest_id=66"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/66/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/66.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/66/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/66/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/66"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/66/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:743d4ad4fc8a%0D15bf5fd2b9ed?from_pullrequest_id=66"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/66/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/66/statuses_page=1.json"}}, "title": "Make lyse able to read and write JSON-encoded attrbiutes.", "close_source_branch": true, "type": "pullrequest", "id": 66, "destination": {"commit": {"hash": "15bf5fd2b9ed", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/15bf5fd2b9ed.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/15bf5fd2b9ed"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-06-20T22:51:05.501886+00:00", "summary": {"raw": "Use labscript_utils.properties get/set_attribute(s) functions to get and save\r\nanalysis results and image attributes, in order to automatically\r\nserialise/deserialise to/from JSON attributes that do not have a HDF5 equivalant.\r\n\r\nThis requires [labscript_utils pull request 86](#!/labscript_suite/labscript_utils/pull-requests/86/)\r\nI did not extend the serialising/deserialising to globals. We could consider extending globals to allow them to be more complex datatypes via JSON serialisation, but so far we have shied away from that so I think that's a separate discussion.", "markup": "markdown", "html": "<p>Use labscript_utils.properties get/set_attribute(s) functions to get and save\nanalysis results and image attributes, in order to automatically\nserialise/deserialise to/from JSON attributes that do not have a HDF5 equivalant.</p>\n<p>This requires <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript_utils/pull-requests/86/\" rel=\"nofollow\">labscript_utils pull request 86</a>\nI did not extend the serialising/deserialising to globals. We could consider extending globals to allow them to be more complex datatypes via JSON serialisation, but so far we have shied away from that so I think that's a separate discussion.</p>", "type": "rendered"}, "source": {"commit": {"hash": "42a668de2163", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/42a668de2163"}, "html": {"href": "#!/cbillington/lyse/commits/42a668de2163"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "serialised_attributes"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-07-01T18:48:27.394157+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "743d4ad4fc8a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/743d4ad4fc8a.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/743d4ad4fc8a"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "It seems like QMainWindow.close() cannot be called whilst a close event is\r\ncurrently being handled. Delay call to close() until the mainloop is idle.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/67/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:b4b1df63bd0a%0D743d4ad4fc8a?from_pullrequest_id=67"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/67/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/67.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/67/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/67/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/67"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/67/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:b4b1df63bd0a%0D743d4ad4fc8a?from_pullrequest_id=67"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/67/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/67/statuses_page=1.json"}}, "title": "Fix issue #50: close button unresponsive if there are no routines", "close_source_branch": true, "type": "pullrequest", "id": 67, "destination": {"commit": {"hash": "743d4ad4fc8a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/743d4ad4fc8a.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/743d4ad4fc8a"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-08-06T17:59:01.769804+00:00", "summary": {"raw": "It seems like QMainWindow.close() cannot be called whilst a close event is\r\ncurrently being handled. Delay call to close() until the mainloop is idle.", "markup": "markdown", "html": "<p>It seems like QMainWindow.close() cannot be called whilst a close event is\ncurrently being handled. Delay call to close() until the mainloop is idle.</p>", "type": "rendered"}, "source": {"commit": {"hash": "3efb98358dad", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/3efb98358dad"}, "html": {"href": "#!/cbillington/lyse/commits/3efb98358dad"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-08-12T16:09:18.335257+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "b4b1df63bd0a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/b4b1df63bd0a.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/b4b1df63bd0a"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Although I don't see why the Qt model or dataframe might sometimes not update,\r\nI noticed that the calls to update_row with updated_row_data provided were\r\n*not* actually updating the Qt model, because the check for whether a column\r\nwas in the updated_row_data dictionary was comparing a column tuple padded with\r\nempty strings to one not padded with empty strings. Further, the call to update\r\nthe progress percentage was updating *all* qt model items for the row.\r\n\r\nNow, the two things are fixed - the updated_row_data does actually update\r\nthe qt model items, and the update of the status percentage does not.\r\n\r\nThere is no reason to believe this will fix issue #45 other than it touching\r\ncode that could be relevant and was not working as intended. I still don't\r\nsee specifically what could cause issue #45.\r\n\r\nAlso, the updated data dict sent back to lyse from analysis routines should\r\nonly include items under the 'results/' group in the HDF5 file. So this fixes\r\nthat too.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/68/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:4b07723b7656%0Ddf2333dd1e08?from_pullrequest_id=68"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/68/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/68.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/68/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/68/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/68"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/68/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:4b07723b7656%0Ddf2333dd1e08?from_pullrequest_id=68"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/68/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/68/statuses_page=1.json"}}, "title": "An attempt to fix issue #45.", "close_source_branch": true, "type": "pullrequest", "id": 68, "destination": {"commit": {"hash": "df2333dd1e08", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/df2333dd1e08.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/df2333dd1e08"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-08-06T20:08:08.007322+00:00", "summary": {"raw": "Although I don't see why the Qt model or dataframe might sometimes not update,\r\nI noticed that the calls to update_row with updated_row_data provided were\r\n*not* actually updating the Qt model, because the check for whether a column\r\nwas in the updated_row_data dictionary was comparing a column tuple padded with\r\nempty strings to one not padded with empty strings. Further, the call to update\r\nthe progress percentage was updating *all* qt model items for the row.\r\n\r\nNow, the two things are fixed - the updated_row_data does actually update\r\nthe qt model items, and the update of the status percentage does not.\r\n\r\nThere is no reason to believe this will fix issue #45 other than it touching\r\ncode that could be relevant and was not working as intended. I still don't\r\nsee specifically what could cause issue #45.\r\n\r\nAlso, the updated data dict sent back to lyse from analysis routines should\r\nonly include items under the 'results/' group in the HDF5 file. So this fixes\r\nthat too.", "markup": "markdown", "html": "<p>Although I don't see why the Qt model or dataframe might sometimes not update,\nI noticed that the calls to update_row with updated_row_data provided were\n<em>not</em> actually updating the Qt model, because the check for whether a column\nwas in the updated_row_data dictionary was comparing a column tuple padded with\nempty strings to one not padded with empty strings. Further, the call to update\nthe progress percentage was updating <em>all</em> qt model items for the row.</p>\n<p>Now, the two things are fixed - the updated_row_data does actually update\nthe qt model items, and the update of the status percentage does not.</p>\n<p>There is no reason to believe this will fix issue <a href=\"#!/labscript_suite/lyse/issues/45/dataframe-stopped-updating-after-multishot\" rel=\"nofollow\" title=\"Dataframe stopped updating after multishot routine error\" class=\"ap-connect-link\"><s>#45</s></a> other than it touching\ncode that could be relevant and was not working as intended. I still don't\nsee specifically what could cause issue <a href=\"#!/labscript_suite/lyse/issues/45/dataframe-stopped-updating-after-multishot\" rel=\"nofollow\" title=\"Dataframe stopped updating after multishot routine error\" class=\"ap-connect-link\"><s>#45</s></a>.</p>\n<p>Also, the updated data dict sent back to lyse from analysis routines should\nonly include items under the 'results/' group in the HDF5 file. So this fixes\nthat too.</p>", "type": "rendered"}, "source": {"commit": {"hash": "d89d18cf8055", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/d89d18cf8055"}, "html": {"href": "#!/cbillington/lyse/commits/d89d18cf8055"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "attempted-bugfix"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-12-10T18:27:26.266658+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "4b07723b7656", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/4b07723b7656.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/4b07723b7656"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/69/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:b7e1eb8b03ef%0Db4b1df63bd0a?from_pullrequest_id=69"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/69/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/69.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/69/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/69/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/69"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/69/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:b7e1eb8b03ef%0Db4b1df63bd0a?from_pullrequest_id=69"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/69/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/69/statuses_page=1.json"}}, "title": "Fixes issue #51", "close_source_branch": true, "type": "pullrequest", "id": 69, "destination": {"commit": {"hash": "b4b1df63bd0a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/b4b1df63bd0a.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/b4b1df63bd0a"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-08-13T14:37:28.866111+00:00", "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "source": {"commit": {"hash": "e662173df310", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rpanderson/lyse/commit/e662173df310"}, "html": {"href": "#!/rpanderson/lyse/commits/e662173df310"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/rpanderson/lyse"}, "html": {"href": "#!/rpanderson/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{af3f4037-4cb2-49dd-b675-22e0ce6522c4}ts=2203673"}}, "type": "repository", "name": "lyse", "full_name": "rpanderson/lyse", "uuid": "{af3f4037-4cb2-49dd-b675-22e0ce6522c4}"}, "branch": {"name": "serialised_attributes_bugfix"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-08-13T14:39:52.327366+00:00", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "merge_commit": {"hash": "b7e1eb8b03ef", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/b7e1eb8b03ef.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/b7e1eb8b03ef"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "In current versions of pandas and lyse, in normal use the majority of dataframe\r\ncolumns that can be are already specific datatypes and not 'object', so there is\r\nlimited performance improvement to the convert_objects call, and so not much downside\r\nto removing it without a replacement.\r\n\r\nSome colums that were temporarily a mixed datatype (due to the analysis\r\nresults being saved by single shot routines changing type) will remain dtype\r\nobject even if all the entries are later of the same type, which is not ideal.\r\n\r\nThis should be rare and so not likely to be a performance problem, which was the\r\noriginal purpose of adding convert_objects. But these columns may appear differently\r\nfrom the perspective of multishot routines, and some code may not be able to handle\r\nthem. However we will see empirically if this causes any problems, as perhaps\r\nall relevant code can in fact handle columns with dtype object fine, so we shouldn't\r\nfix what isn't broken until we know it actually is.\r\n\r\nWould be interested in testing to see that existing analysis routines don't run into trouble after this patch.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/70/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:0640ec756845%0Db7e1eb8b03ef?from_pullrequest_id=70"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/70/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/70.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/70/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/70/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/70"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/70/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:0640ec756845%0Db7e1eb8b03ef?from_pullrequest_id=70"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/70/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/70/statuses_page=1.json"}}, "title": "Fix for issue #52. Remove deprecated convert_objects() call", "close_source_branch": true, "type": "pullrequest", "id": 70, "destination": {"commit": {"hash": "b7e1eb8b03ef", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/b7e1eb8b03ef.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/b7e1eb8b03ef"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-08-14T14:07:48.601132+00:00", "summary": {"raw": "In current versions of pandas and lyse, in normal use the majority of dataframe\r\ncolumns that can be are already specific datatypes and not 'object', so there is\r\nlimited performance improvement to the convert_objects call, and so not much downside\r\nto removing it without a replacement.\r\n\r\nSome colums that were temporarily a mixed datatype (due to the analysis\r\nresults being saved by single shot routines changing type) will remain dtype\r\nobject even if all the entries are later of the same type, which is not ideal.\r\n\r\nThis should be rare and so not likely to be a performance problem, which was the\r\noriginal purpose of adding convert_objects. But these columns may appear differently\r\nfrom the perspective of multishot routines, and some code may not be able to handle\r\nthem. However we will see empirically if this causes any problems, as perhaps\r\nall relevant code can in fact handle columns with dtype object fine, so we shouldn't\r\nfix what isn't broken until we know it actually is.\r\n\r\nWould be interested in testing to see that existing analysis routines don't run into trouble after this patch.", "markup": "markdown", "html": "<p>In current versions of pandas and lyse, in normal use the majority of dataframe\ncolumns that can be are already specific datatypes and not 'object', so there is\nlimited performance improvement to the convert_objects call, and so not much downside\nto removing it without a replacement.</p>\n<p>Some colums that were temporarily a mixed datatype (due to the analysis\nresults being saved by single shot routines changing type) will remain dtype\nobject even if all the entries are later of the same type, which is not ideal.</p>\n<p>This should be rare and so not likely to be a performance problem, which was the\noriginal purpose of adding convert_objects. But these columns may appear differently\nfrom the perspective of multishot routines, and some code may not be able to handle\nthem. However we will see empirically if this causes any problems, as perhaps\nall relevant code can in fact handle columns with dtype object fine, so we shouldn't\nfix what isn't broken until we know it actually is.</p>\n<p>Would be interested in testing to see that existing analysis routines don't run into trouble after this patch.</p>", "type": "rendered"}, "source": {"commit": {"hash": "4b732d7a0b3d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/4b732d7a0b3d"}, "html": {"href": "#!/cbillington/lyse/commits/4b732d7a0b3d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-09-13T20:32:04.623661+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "0640ec756845", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/0640ec756845.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/0640ec756845"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This fixes a bug where the number of levels is incorrect after all shots are\r\ndeleted and shots with fewer levels are loaded. We could allow the number of\r\nlevels to decrease, but this is more trouble than it is worth since we store\r\npreviously-seen columns so that their visibility can be restored if they are\r\nseen again. Since their levels cannot be reduced, comparing them with other\r\ncolumns is difficult. There is surely a cleaner way to deal with all this,\r\nbut it will require more work, whereas the bug is fixed by simply ensuring that\r\nthe number of column levels never shrinks (which was an assumption since lyse's\r\ninception, only violated as a side effect of an unrelated change to `concat_with_padding`).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/71/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:447b70949c45%0D0640ec756845?from_pullrequest_id=71"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/71/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/71.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/71/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/71/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/71"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/71/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:447b70949c45%0D0640ec756845?from_pullrequest_id=71"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/71/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/71/statuses_page=1.json"}}, "title": "Ensure number of levels in the dataframe does not decrease.", "close_source_branch": true, "type": "pullrequest", "id": 71, "destination": {"commit": {"hash": "0640ec756845", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/0640ec756845.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/0640ec756845"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-10-23T19:50:25.376144+00:00", "summary": {"raw": "This fixes a bug where the number of levels is incorrect after all shots are\r\ndeleted and shots with fewer levels are loaded. We could allow the number of\r\nlevels to decrease, but this is more trouble than it is worth since we store\r\npreviously-seen columns so that their visibility can be restored if they are\r\nseen again. Since their levels cannot be reduced, comparing them with other\r\ncolumns is difficult. There is surely a cleaner way to deal with all this,\r\nbut it will require more work, whereas the bug is fixed by simply ensuring that\r\nthe number of column levels never shrinks (which was an assumption since lyse's\r\ninception, only violated as a side effect of an unrelated change to `concat_with_padding`).", "markup": "markdown", "html": "<p>This fixes a bug where the number of levels is incorrect after all shots are\ndeleted and shots with fewer levels are loaded. We could allow the number of\nlevels to decrease, but this is more trouble than it is worth since we store\npreviously-seen columns so that their visibility can be restored if they are\nseen again. Since their levels cannot be reduced, comparing them with other\ncolumns is difficult. There is surely a cleaner way to deal with all this,\nbut it will require more work, whereas the bug is fixed by simply ensuring that\nthe number of column levels never shrinks (which was an assumption since lyse's\ninception, only violated as a side effect of an unrelated change to <code>concat_with_padding</code>).</p>", "type": "rendered"}, "source": {"commit": {"hash": "12165647daaf", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/12165647daaf"}, "html": {"href": "#!/cbillington/lyse/commits/12165647daaf"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-10-31T16:33:39.113291+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "447b70949c45", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/447b70949c45.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/447b70949c45"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Allow instantiating a Run() from within a function. Previously a Run could not save results if it was instantiated from within a function, as within the function there is no local variable called `__file__`, which is what is used to determine the results \r\n\r\nNow we look at the global variables a frame sees instead of the local variables.\r\nSo `__file__` is visible and the group used will be whichever one the function\r\nwas defined in (likely the `__main__` module but up to you!)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/72/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diffstat/labscript_suite/lyse:df2333dd1e08%0D447b70949c45?from_pullrequest_id=72"}, "commits": {"href": "data/repositories/labscript_suite/lyse/pullrequests/72/commits.json"}, "self": {"href": "data/repositories/labscript_suite/lyse/pullrequests/72.json"}, "comments": {"href": "data/repositories/labscript_suite/lyse/pullrequests/72/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/72/merge"}, "html": {"href": "#!/labscript_suite/lyse/pull-requests/72"}, "activity": {"href": "data/repositories/labscript_suite/lyse/pullrequests/72/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/diff/labscript_suite/lyse:df2333dd1e08%0D447b70949c45?from_pullrequest_id=72"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/lyse/pullrequests/72/approve"}, "statuses": {"href": "data/repositories/labscript_suite/lyse/pullrequests/72/statuses_page=1.json"}}, "title": "Allow instantiating a Run() from within a function.", "close_source_branch": true, "type": "pullrequest", "id": 72, "destination": {"commit": {"hash": "447b70949c45", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/447b70949c45.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/447b70949c45"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/lyse.json"}, "html": {"href": "#!/labscript_suite/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{55eebdfe-43d1-4ae8-9049-50c55b295397}ts=249921"}}, "type": "repository", "name": "lyse", "full_name": "labscript_suite/lyse", "uuid": "{55eebdfe-43d1-4ae8-9049-50c55b295397}"}, "branch": {"name": "default"}}, "created_on": "2019-11-15T03:32:54.950667+00:00", "summary": {"raw": "Allow instantiating a Run() from within a function. Previously a Run could not save results if it was instantiated from within a function, as within the function there is no local variable called `__file__`, which is what is used to determine the results \r\n\r\nNow we look at the global variables a frame sees instead of the local variables.\r\nSo `__file__` is visible and the group used will be whichever one the function\r\nwas defined in (likely the `__main__` module but up to you!)", "markup": "markdown", "html": "<p>Allow instantiating a Run() from within a function. Previously a Run could not save results if it was instantiated from within a function, as within the function there is no local variable called <code>__file__</code>, which is what is used to determine the results </p>\n<p>Now we look at the global variables a frame sees instead of the local variables.\nSo <code>__file__</code> is visible and the group used will be whichever one the function\nwas defined in (likely the <code>__main__</code> module but up to you!)</p>", "type": "rendered"}, "source": {"commit": {"hash": "fe8766f82301", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse/commit/fe8766f82301"}, "html": {"href": "#!/cbillington/lyse/commits/fe8766f82301"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/lyse"}, "html": {"href": "#!/cbillington/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{47c91022-279d-4058-88a8-959fe9ffb409}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "cbillington/lyse", "uuid": "{47c91022-279d-4058-88a8-959fe9ffb409}"}, "branch": {"name": "bugfix2"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-12-04T02:54:00.930341+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "df2333dd1e08", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/lyse/commit/df2333dd1e08.json"}, "html": {"href": "#!/labscript_suite/lyse/commits/df2333dd1e08"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}], "page": 2, "size": 72}