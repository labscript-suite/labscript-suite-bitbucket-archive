{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/mise/issues/1/comments/38012012.json"}, "html": {"href": "#!/labscript_suite/mise/issues/1#comment-38012012"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/mise/issues/1.json"}}, "type": "issue", "id": 1, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/mise.json"}, "html": {"href": "#!/labscript_suite/mise"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3a557a30-078d-4d3a-bf88-05df8d7a7894}ts=249923"}}, "type": "repository", "name": "mise", "full_name": "labscript_suite/mise", "uuid": "{3a557a30-078d-4d3a-bf88-05df8d7a7894}"}, "title": "Port mise to Qt"}, "content": {"raw": "Mise is deprecated in favour of using a lyse analysis script (using the recent persistence feature). The main reason for this is simple: mise was a proof of concept for closed loop optimisation, but only implemented a very specific optimisation protocol and was not extensible. While we considered improving mise, it seemed somewhat pointless given you needed a lyse analysis script anyway, and could just include your optimisation logic there.\n\nThe aim is the use the runmanager API from a lyse script in order to change globals and compile new shots. There may need to be some work done before this is as friendly as we'd like, but I believe this will come as part of the tangentially related work @cbillington is doing at NIST regarding expanding the runmanager API for faster (but perhaps simpler) feedback that doesn't go through lyse.\n\n@cbillington can probably expand on this roadmap once he gets back from holidays in a couple of weeks", "markup": "markdown", "html": "<p>Mise is deprecated in favour of using a lyse analysis script (using the recent persistence feature). The main reason for this is simple: mise was a proof of concept for closed loop optimisation, but only implemented a very specific optimisation protocol and was not extensible. While we considered improving mise, it seemed somewhat pointless given you needed a lyse analysis script anyway, and could just include your optimisation logic there.</p>\n<p>The aim is the use the runmanager API from a lyse script in order to change globals and compile new shots. There may need to be some work done before this is as friendly as we'd like, but I believe this will come as part of the tangentially related work @cbillington is doing at NIST regarding expanding the runmanager API for faster (but perhaps simpler) feedback that doesn't go through lyse.</p>\n<p>@cbillington can probably expand on this roadmap once he gets back from holidays in a couple of weeks</p>", "type": "rendered"}, "created_on": "2017-07-04T10:52:04.249566+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 38012012}], "page": 1, "size": 1}