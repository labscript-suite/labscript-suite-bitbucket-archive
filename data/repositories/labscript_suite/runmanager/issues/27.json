{"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/27/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/27.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/27/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/27/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/27/more-standard-saving-and-loading-of"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/27/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "More standard saving and loading of globals from h5 files, file changed on disk detection", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When I first write runmanager, globals were written to the HDF5 file on every *keystroke*. Now they are written when you finish editing a cell.\r\n\r\nI propose to further demote this to only saving when prompted. You know, the way normal applications work where data is unsaved until you save it.\r\n\r\nThe main benefit of this is being able to muck with globals willy-nilly without fearing breaking things, because you can just revert, or not save on exit.\r\n\r\nIt would not even be hard to implement. On file-open, runmanager would make a copy of the file in a temporary directory. The user would edit globals on a per-group basis, which would display an asterisk or some other visual indication that they were unsaved. There would be a menu item and keyboard shortcut to save the currently visible group, and you would be prompted to save a group upon closing. Upon saving a group, that group would be copied over to the actual file, from the temporary file.\r\n\r\nRunmanager would allow you to run shots when globals were unsaved. This is safe because it is not a pointer to the globals files that is stored in the shot files, it is the globals themselves. So there is seemingly no benefit to forcing the user to save globals before compiling.\r\n\r\nYou would also be able to 'save as'.\r\n\r\nWhen another process changes the original h5 file on disk, the user should be able to choose whether to abandon their changes and reload groups from the file, or overwrite the changes. Like other programs that do this, we would not provide indication of what has changed.", "markup": "markdown", "html": "<p>When I first write runmanager, globals were written to the HDF5 file on every <em>keystroke</em>. Now they are written when you finish editing a cell.</p>\n<p>I propose to further demote this to only saving when prompted. You know, the way normal applications work where data is unsaved until you save it.</p>\n<p>The main benefit of this is being able to muck with globals willy-nilly without fearing breaking things, because you can just revert, or not save on exit.</p>\n<p>It would not even be hard to implement. On file-open, runmanager would make a copy of the file in a temporary directory. The user would edit globals on a per-group basis, which would display an asterisk or some other visual indication that they were unsaved. There would be a menu item and keyboard shortcut to save the currently visible group, and you would be prompted to save a group upon closing. Upon saving a group, that group would be copied over to the actual file, from the temporary file.</p>\n<p>Runmanager would allow you to run shots when globals were unsaved. This is safe because it is not a pointer to the globals files that is stored in the shot files, it is the globals themselves. So there is seemingly no benefit to forcing the user to save globals before compiling.</p>\n<p>You would also be able to 'save as'.</p>\n<p>When another process changes the original h5 file on disk, the user should be able to choose whether to abandon their changes and reload groups from the file, or overwrite the changes. Like other programs that do this, we would not provide indication of what has changed.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "new", "version": null, "edited_on": null, "created_on": "2014-10-03T22:44:42.689816+00:00", "milestone": null, "updated_on": "2014-10-08T01:09:14.671496+00:00", "type": "issue", "id": 27}