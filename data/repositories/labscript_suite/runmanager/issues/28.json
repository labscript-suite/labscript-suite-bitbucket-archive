{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/28/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/28.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/28/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/28/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/28/batch-compiler-does-not-notice-changes-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/28/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Batch compiler does not notice changes to unit conversions", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Because `labscript` itself is whitelisted by the `ModuleWatcher` used in `batch_compiler.py`, `labscript` and anything it imports do not get watched for changes and unloaded if they change.\r\n\r\n`labscript` imports `labscript_utils.unitconversions`, and so `unitconversions` is whitelisted and not reloaded. This is a problem! Unit conversions change, and new ones are introduced! We were making new ones today and were absolutely perplexed that our labscript code could not import them, until we realised what the problem was.\r\n\r\nPerhaps `batch_compiler.py` can remove unitconversions from the its ModuleWatcher's whitelist.\r\n\r\nBut a better solution would probably be to have `labscript` not import `unitconversions`.\r\n\r\nUsers should probably import the `unitconversions` they need explicitly, at which point they will be handled as normal by the `ModuleWatcher`.\r\n\r\nIt's true that some devices have default unit conversions they rely on, but these devices are not in labscript core, but rather in `labscript_devices`.\r\n\r\nIf a device in labscript core requires a unit conversions class, it should be imported explicitly so that only its module ends up on the whitelist.\r\n\r\nTo ensure all unit conversion modules don't get run whenever a single one is imported, the gathering of unit conversion classes (for BLACS to look them up by name for example) should be done on a function call, rather than an import. That way anyone can import a specific unit conversions class without worrying that `unitconversions/__init__.py` will go and import everyone else's code, and we won't accidentally white listthings for the`ModuleWatcher` that we didn't realise we were importing.", "markup": "markdown", "html": "<p>Because <code>labscript</code> itself is whitelisted by the <code>ModuleWatcher</code> used in <code>batch_compiler.py</code>, <code>labscript</code> and anything it imports do not get watched for changes and unloaded if they change.</p>\n<p><code>labscript</code> imports <code>labscript_utils.unitconversions</code>, and so <code>unitconversions</code> is whitelisted and not reloaded. This is a problem! Unit conversions change, and new ones are introduced! We were making new ones today and were absolutely perplexed that our labscript code could not import them, until we realised what the problem was.</p>\n<p>Perhaps <code>batch_compiler.py</code> can remove unitconversions from the its ModuleWatcher's whitelist.</p>\n<p>But a better solution would probably be to have <code>labscript</code> not import <code>unitconversions</code>.</p>\n<p>Users should probably import the <code>unitconversions</code> they need explicitly, at which point they will be handled as normal by the <code>ModuleWatcher</code>.</p>\n<p>It's true that some devices have default unit conversions they rely on, but these devices are not in labscript core, but rather in <code>labscript_devices</code>.</p>\n<p>If a device in labscript core requires a unit conversions class, it should be imported explicitly so that only its module ends up on the whitelist.</p>\n<p>To ensure all unit conversion modules don't get run whenever a single one is imported, the gathering of unit conversion classes (for BLACS to look them up by name for example) should be done on a function call, rather than an import. That way anyone can import a specific unit conversions class without worrying that <code>unitconversions/__init__.py</code> will go and import everyone else's code, and we won't accidentally white listthings for the<code>ModuleWatcher</code> that we didn't realise we were importing.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "new", "version": null, "edited_on": null, "created_on": "2014-10-03T23:31:24.664639+00:00", "milestone": null, "updated_on": "2014-10-03T23:31:24.664639+00:00", "type": "issue", "id": 28}