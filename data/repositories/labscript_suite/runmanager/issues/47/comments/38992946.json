{"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/47/comments/38992946.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/47#comment-38992946"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/47.json"}}, "type": "issue", "id": 47, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "title": "Move file creation to compile loop"}, "content": {"raw": "In order to support per-shot feedback in the middle of a sequence (for example to keep magnetic field cancellation as accurate as possible based on a measurement each shot), I'm planning on introducing a compilation queue to runmanager, so that you can have the shots compile 'just in time' as BLACS needs them, evaluating the globals at the time of compilation.\n\nAs David points out though, the point of a queue is to be able to have elements in the queue be different! If you can't 'lock in' the values of some globals at submission time, then that would not be great. So I'll need to think of how you can specify either on a per-global basis or a per-click-of-the-engage-button basis, whether the globals are to be 'just in time' or 'as submitted'.\n\n@PhyNerd, as mentioned elsewhere, the engage button is in the mainline runmanager greyed out when you have clicked it, so the distinction of 'abort one sequence' or 'abort multiple sequences' doesn't exist. If you guys have locally made changes that make the engage button remain active, then you may see undefined behaviour - I didn't intend for multiple compilations to be 'queued up'. However if I introduce a compilation queue, it could contain a treeview of sequences containing shots, and you could simply delete the ones that you want to abandon compilation for, either all of them, or on a per-shot or per-sequence basis. (and the shot files will not have been produced yet at that point).\n\nThe abort button could be relegated to aborting merely the current shot's compilation, which I could make it do more aggressively by terminating and restarting the compiler process, whereas at the moment it does not actually interrupt compilation mid-shot.", "markup": "markdown", "html": "<p>In order to support per-shot feedback in the middle of a sequence (for example to keep magnetic field cancellation as accurate as possible based on a measurement each shot), I'm planning on introducing a compilation queue to runmanager, so that you can have the shots compile 'just in time' as BLACS needs them, evaluating the globals at the time of compilation.</p>\n<p>As David points out though, the point of a queue is to be able to have elements in the queue be different! If you can't 'lock in' the values of some globals at submission time, then that would not be great. So I'll need to think of how you can specify either on a per-global basis or a per-click-of-the-engage-button basis, whether the globals are to be 'just in time' or 'as submitted'.</p>\n<p>@PhyNerd, as mentioned elsewhere, the engage button is in the mainline runmanager greyed out when you have clicked it, so the distinction of 'abort one sequence' or 'abort multiple sequences' doesn't exist. If you guys have locally made changes that make the engage button remain active, then you may see undefined behaviour - I didn't intend for multiple compilations to be 'queued up'. However if I introduce a compilation queue, it could contain a treeview of sequences containing shots, and you could simply delete the ones that you want to abandon compilation for, either all of them, or on a per-shot or per-sequence basis. (and the shot files will not have been produced yet at that point).</p>\n<p>The abort button could be relegated to aborting merely the current shot's compilation, which I could make it do more aggressively by terminating and restarting the compiler process, whereas at the moment it does not actually interrupt compilation mid-shot.</p>", "type": "rendered"}, "created_on": "2017-08-09T16:48:43.677300+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 38992946}