{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/47/comments/38982779.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/47#comment-38982779"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/47.json"}}, "type": "issue", "id": 47, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "title": "Move file creation to compile loop"}, "content": {"raw": "With this inplace we should also think about adding a context menu to the abort button where one can select the engaged sequence to abort. \n\nIn our lab we mostly want to abort the currently running compile process, but I could think of cases, where one would like to remove previously engaged sequences from the compile queue. This is a bit tricky as queues only support removing items from the front. But could be done with a set of sequences kept separately. The compile loop could check for membership of the currently compiling sequence in the set. If the sequence is not present (anymore) it would just stop compiling it and start the next.", "markup": "markdown", "html": "<p>With this inplace we should also think about adding a context menu to the abort button where one can select the engaged sequence to abort. </p>\n<p>In our lab we mostly want to abort the currently running compile process, but I could think of cases, where one would like to remove previously engaged sequences from the compile queue. This is a bit tricky as queues only support removing items from the front. But could be done with a set of sequences kept separately. The compile loop could check for membership of the currently compiling sequence in the set. If the sequence is not present (anymore) it would just stop compiling it and start the next.</p>", "type": "rendered"}, "created_on": "2017-08-09T10:07:45.529921+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 38982779}, {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/47/comments/38985733.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/47#comment-38985733"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/47.json"}}, "type": "issue", "id": 47, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "title": "Move file creation to compile loop"}, "content": {"raw": "This would be great in my opinion. I have so many aborted h5 files lurking around.\n\nBeyond that, could I also propose that the globals evaluation portion of globals parsing be moved into loop as well? We like to cycle our experiment while peaking up signals based on shot results. Right now the best we can do is repeat the same shot in BLACS and re-engage if we want to change any of the global parameters. Unless I'm much mistaken, moving the evaluation would mean we could implement our functionality with a simple while loop on the engage button. \n\nOf course now that I've actually thought about this some I'm realizing that it would probably be better to use a flag to trigger a re-evaluation in loop since normal operation certainly doesn't need the same globals evaluated to the same values for each shot in the sequence.\n\nIn any case, however we implement our compile loop idea we would definitely need the file creation to be in loop so I'm on board with this idea, for what that's worth.", "markup": "markdown", "html": "<p>This would be great in my opinion. I have so many aborted h5 files lurking around.</p>\n<p>Beyond that, could I also propose that the globals evaluation portion of globals parsing be moved into loop as well? We like to cycle our experiment while peaking up signals based on shot results. Right now the best we can do is repeat the same shot in BLACS and re-engage if we want to change any of the global parameters. Unless I'm much mistaken, moving the evaluation would mean we could implement our functionality with a simple while loop on the engage button. </p>\n<p>Of course now that I've actually thought about this some I'm realizing that it would probably be better to use a flag to trigger a re-evaluation in loop since normal operation certainly doesn't need the same globals evaluated to the same values for each shot in the sequence.</p>\n<p>In any case, however we implement our compile loop idea we would definitely need the file creation to be in loop so I'm on board with this idea, for what that's worth.</p>", "type": "rendered"}, "created_on": "2017-08-09T12:19:20.091453+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": null, "type": "issue_comment", "id": 38985733}, {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/47/comments/38992946.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/47#comment-38992946"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/47.json"}}, "type": "issue", "id": 47, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "title": "Move file creation to compile loop"}, "content": {"raw": "In order to support per-shot feedback in the middle of a sequence (for example to keep magnetic field cancellation as accurate as possible based on a measurement each shot), I'm planning on introducing a compilation queue to runmanager, so that you can have the shots compile 'just in time' as BLACS needs them, evaluating the globals at the time of compilation.\n\nAs David points out though, the point of a queue is to be able to have elements in the queue be different! If you can't 'lock in' the values of some globals at submission time, then that would not be great. So I'll need to think of how you can specify either on a per-global basis or a per-click-of-the-engage-button basis, whether the globals are to be 'just in time' or 'as submitted'.\n\n@PhyNerd, as mentioned elsewhere, the engage button is in the mainline runmanager greyed out when you have clicked it, so the distinction of 'abort one sequence' or 'abort multiple sequences' doesn't exist. If you guys have locally made changes that make the engage button remain active, then you may see undefined behaviour - I didn't intend for multiple compilations to be 'queued up'. However if I introduce a compilation queue, it could contain a treeview of sequences containing shots, and you could simply delete the ones that you want to abandon compilation for, either all of them, or on a per-shot or per-sequence basis. (and the shot files will not have been produced yet at that point).\n\nThe abort button could be relegated to aborting merely the current shot's compilation, which I could make it do more aggressively by terminating and restarting the compiler process, whereas at the moment it does not actually interrupt compilation mid-shot.", "markup": "markdown", "html": "<p>In order to support per-shot feedback in the middle of a sequence (for example to keep magnetic field cancellation as accurate as possible based on a measurement each shot), I'm planning on introducing a compilation queue to runmanager, so that you can have the shots compile 'just in time' as BLACS needs them, evaluating the globals at the time of compilation.</p>\n<p>As David points out though, the point of a queue is to be able to have elements in the queue be different! If you can't 'lock in' the values of some globals at submission time, then that would not be great. So I'll need to think of how you can specify either on a per-global basis or a per-click-of-the-engage-button basis, whether the globals are to be 'just in time' or 'as submitted'.</p>\n<p>@PhyNerd, as mentioned elsewhere, the engage button is in the mainline runmanager greyed out when you have clicked it, so the distinction of 'abort one sequence' or 'abort multiple sequences' doesn't exist. If you guys have locally made changes that make the engage button remain active, then you may see undefined behaviour - I didn't intend for multiple compilations to be 'queued up'. However if I introduce a compilation queue, it could contain a treeview of sequences containing shots, and you could simply delete the ones that you want to abandon compilation for, either all of them, or on a per-shot or per-sequence basis. (and the shot files will not have been produced yet at that point).</p>\n<p>The abort button could be relegated to aborting merely the current shot's compilation, which I could make it do more aggressively by terminating and restarting the compiler process, whereas at the moment it does not actually interrupt compilation mid-shot.</p>", "type": "rendered"}, "created_on": "2017-08-09T16:48:43.677300+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": null, "type": "issue_comment", "id": 38992946}, {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/47/comments/38993779.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/47#comment-38993779"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/47.json"}}, "type": "issue", "id": 47, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "title": "Move file creation to compile loop"}, "content": {"raw": "No it's not grayed out in mainline code I checked and wrote that over at #45. If it where grayed out the compile queue wouldn't make any sense that is in the mainline code as well.\n\nAnd there is also a issue about the abort stuff from @shaunj at #33 so I'm not the first to stumble upon this.\n\nbtw I fixed both #45 and #33 in a [pull request](#!/labscript_suite/runmanager/pull-requests/13/progressbars-and-abort-fix/diff) I made yesterday.", "markup": "markdown", "html": "<p>No it's not grayed out in mainline code I checked and wrote that over at <a href=\"#!/labscript_suite/runmanager/issues/45/compilation-progress-and-abort\" rel=\"nofollow\" title=\"Compilation progress and abort\" class=\"ap-connect-link\">#45</a>. If it where grayed out the compile queue wouldn't make any sense that is in the mainline code as well.</p>\n<p>And there is also a issue about the abort stuff from @shaunj at <a href=\"#!/labscript_suite/runmanager/issues/33/abort-button-only-stops-current-sequence\" rel=\"nofollow\" title=\"Abort button only stops current sequence of shots\" class=\"ap-connect-link\">#33</a> so I'm not the first to stumble upon this.</p>\n<p>btw I fixed both <a href=\"#!/labscript_suite/runmanager/issues/45/compilation-progress-and-abort\" rel=\"nofollow\" title=\"Compilation progress and abort\" class=\"ap-connect-link\">#45</a> and <a href=\"#!/labscript_suite/runmanager/issues/33/abort-button-only-stops-current-sequence\" rel=\"nofollow\" title=\"Abort button only stops current sequence of shots\" class=\"ap-connect-link\">#33</a> in a <a data-is-external-link=\"true\" href=\"#!/labscript_suite/runmanager/pull-requests/13/progressbars-and-abort-fix/diff\" rel=\"nofollow\">pull request</a> I made yesterday.</p>", "type": "rendered"}, "created_on": "2017-08-09T17:37:32.962742+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-09T17:42:34.503543+00:00", "type": "issue_comment", "id": 38993779}, {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/47/comments/38994482.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/47#comment-38994482"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/47.json"}}, "type": "issue", "id": 47, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "title": "Move file creation to compile loop"}, "content": {"raw": "I really like the treeview idea as it gives a lot more control to the user and is more visual than a context menu. \n\nAs for aborting the currently compiling shot I don't see much benefit in that other than if there is a endless loop or something like that going on.", "markup": "markdown", "html": "<p>I really like the treeview idea as it gives a lot more control to the user and is more visual than a context menu. </p>\n<p>As for aborting the currently compiling shot I don't see much benefit in that other than if there is a endless loop or something like that going on.</p>", "type": "rendered"}, "created_on": "2017-08-09T18:00:55.069083+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 38994482}, {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/47/comments/38994634.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/47#comment-38994634"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/47.json"}}, "type": "issue", "id": 47, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "title": "Move file creation to compile loop"}, "content": {"raw": "Ah, I see about the button not being greyed out. I just overlooked that - but I definitely didn't intend an actual queue. The fact that it's implemented as a queue object in Python is just because I like the actor model as a programming style as a result of playing [spacechem](http://www.zachtronics.com/spacechem/) (I am wearing a spacechem T-shirt right now). The fact that it nonetheless works is a testament to the actor model :p.\n\nWell we'll make the queue more explicit, we'll just have to decide on a mechanism for marking which shots or globals are to be 'just in time' determined vs locked in at engage-time. And then we can integrate those progress bars you've made a pull request about.\n\nAbout aborting the currently compiling shot, it wouldn't be worth putting much effort into, but since the functionality is already there in the form of the 'restart subprocess' button, it would be pretty simple to use it, but I won't bother for the moment if it turns out to be tricky.", "markup": "markdown", "html": "<p>Ah, I see about the button not being greyed out. I just overlooked that - but I definitely didn't intend an actual queue. The fact that it's implemented as a queue object in Python is just because I like the actor model as a programming style as a result of playing <a data-is-external-link=\"true\" href=\"http://www.zachtronics.com/spacechem/\" rel=\"nofollow\">spacechem</a> (I am wearing a spacechem T-shirt right now). The fact that it nonetheless works is a testament to the actor model :p.</p>\n<p>Well we'll make the queue more explicit, we'll just have to decide on a mechanism for marking which shots or globals are to be 'just in time' determined vs locked in at engage-time. And then we can integrate those progress bars you've made a pull request about.</p>\n<p>About aborting the currently compiling shot, it wouldn't be worth putting much effort into, but since the functionality is already there in the form of the 'restart subprocess' button, it would be pretty simple to use it, but I won't bother for the moment if it turns out to be tricky.</p>", "type": "rendered"}, "created_on": "2017-08-09T18:07:53.152188+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-09T18:11:48.276449+00:00", "type": "issue_comment", "id": 38994634}, {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/47/comments/38994921.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/47#comment-38994921"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/47.json"}}, "type": "issue", "id": 47, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "title": "Move file creation to compile loop"}, "content": {"raw": "Never heard of that game but it sure looks like fun.\n\nWell as currently everything is locked at engage-time I would say that we start off with having everything determined at engage-time. This is a really quick thing to to by just adding sets of globals to the queue instead of files and compiling and creating files in the loop.\n\nIn the next step we could then think about a mechanism of marking shots to be evaluated at runtime and add that information to the sets of globals. \n\nThose progress bars also have a bugfix that keeps the abort button from greying out with a non empty queue (issue #33). This is really needed for groups queueing up shots like we do as there is no way but to restart the subprocess to stop compilation atm.", "markup": "markdown", "html": "<p>Never heard of that game but it sure looks like fun.</p>\n<p>Well as currently everything is locked at engage-time I would say that we start off with having everything determined at engage-time. This is a really quick thing to to by just adding sets of globals to the queue instead of files and compiling and creating files in the loop.</p>\n<p>In the next step we could then think about a mechanism of marking shots to be evaluated at runtime and add that information to the sets of globals. </p>\n<p>Those progress bars also have a bugfix that keeps the abort button from greying out with a non empty queue (issue <a href=\"#!/labscript_suite/runmanager/issues/33/abort-button-only-stops-current-sequence\" rel=\"nofollow\" title=\"Abort button only stops current sequence of shots\" class=\"ap-connect-link\">#33</a>). This is really needed for groups queueing up shots like we do as there is no way but to restart the subprocess to stop compilation atm.</p>", "type": "rendered"}, "created_on": "2017-08-09T18:25:35.263060+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-09T18:25:49.847862+00:00", "type": "issue_comment", "id": 38994921}], "page": 1, "size": 7}