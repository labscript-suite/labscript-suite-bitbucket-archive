{"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/48/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/48.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/48/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/48/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/48/continuous-engage"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/48/vote"}}, "reporter": {"display_name": "Kevin Cox", "uuid": "{9fc7b87b-cbd0-445e-920a-da21302a36b1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9fc7b87b-cbd0-445e-920a-da21302a36b1%7D"}, "html": {"href": "https://bitbucket.org/%7B9fc7b87b-cbd0-445e-920a-da21302a36b1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2d7a249e8067b46827e198e271d79ea9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsKC-6.png"}}, "nickname": "kccox", "type": "user", "account_id": "557058:15635328-757a-4cd6-a88d-c9b8fab29217"}, "title": "Continuous Engage", "component": null, "votes": 1, "watches": 1, "content": {"raw": "Hi Guys,\r\n\r\nI'm a postdoc working in the lab with David Meyer.  I'm starting up an atom-cavity QED experiment (not BEC).  I want to add a control to continuously compile and run the labscript.    David hinted at our desire to do this in issue #44.  But what might be easiest, is just to add a button to runmanager that will \"engage\" every \"x\" seconds.  I'm thinking about adding this in our code presently.  After a quick google search, it looks like we could just use the QTimer class to call the engage event over and over.  Is this a decent idea?  Do you have any advice on how to do this the best way?  \r\n\r\nFurther, what would make this functionality even better (but probably isn't absolutely critical for us right away), is for runmanager to check and make sure blacs has finished before engaging again, so the queue doesn't keep filling up and to make sure the experiment rep rate is actually what you want (that is, x).  But it seems like this would require changing blacs as well, to communicate with runmanager about when runs are finished, or maybe if the queue is empty.  We may pursue adding this in our code as well.\r\n\r\nOverall, I think for higher rep-rate experiments, having a continuous compile and run is an important functionality.  It allows the person running the experiments to tweak things and do feedback on the fly, without having to hit engage over and over again.  So, if we get this working well, would you like us to make a pull request?", "markup": "markdown", "html": "<p>Hi Guys,</p>\n<p>I'm a postdoc working in the lab with David Meyer.  I'm starting up an atom-cavity QED experiment (not BEC).  I want to add a control to continuously compile and run the labscript.    David hinted at our desire to do this in issue <a href=\"#!/labscript_suite/runmanager/issues/44/changing-values-with-arrow-keys\" rel=\"nofollow\" title=\"changing values with arrow keys\" class=\"ap-connect-link\">#44</a>.  But what might be easiest, is just to add a button to runmanager that will \"engage\" every \"x\" seconds.  I'm thinking about adding this in our code presently.  After a quick google search, it looks like we could just use the QTimer class to call the engage event over and over.  Is this a decent idea?  Do you have any advice on how to do this the best way?  </p>\n<p>Further, what would make this functionality even better (but probably isn't absolutely critical for us right away), is for runmanager to check and make sure blacs has finished before engaging again, so the queue doesn't keep filling up and to make sure the experiment rep rate is actually what you want (that is, x).  But it seems like this would require changing blacs as well, to communicate with runmanager about when runs are finished, or maybe if the queue is empty.  We may pursue adding this in our code as well.</p>\n<p>Overall, I think for higher rep-rate experiments, having a continuous compile and run is an important functionality.  It allows the person running the experiments to tweak things and do feedback on the fly, without having to hit engage over and over again.  So, if we get this working well, would you like us to make a pull request?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-08-17T15:42:29.584443+00:00", "milestone": null, "updated_on": "2017-08-25T22:41:07.316081+00:00", "type": "issue", "id": 48}