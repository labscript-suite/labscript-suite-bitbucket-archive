{"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/48/comments/39354012.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/48#comment-39354012"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "title": "Continuous Engage"}, "content": {"raw": "Finally got around to putting our hack together for this today and figured I'd post the diffs here in case anybody else desperately needs the functionality while we patiently and graciously await your work on the more complete compile queue. It is simple, but effective.\n\nIn __main__.py \n\n```\n#!diff\n\n@@ -1350,8 +1350,24 @@\n             # Defer this until 50ms after the window has shown,\n             # so that the GUI pops up faster in the meantime\n             self.ui.firstPaint.connect(lambda: QtCore.QTimer.singleShot(50, load_the_config_file))\n+            \n+        # add a timer to check cycling status every X seconds\n+        self.timer = QtCore.QTimer()\n+        self.timer.timeout.connect(self.cycler)\n+        # start timer with default time, set in main.ui to be 1s (1000ms)\n+        self.cycle_time = int(self.ui.doubleSpinBox_cycle_time.value()*1000)\n+        self.timer.start(self.cycle_time)\n \n         self.ui.show()\n+        \n+    def cycler(self):\n+        # every timeout check if engage should be sent and update timer timeout\n+        if self.ui.checkBox_cycle.isChecked():\n+            self.ui.pushButton_engage.click()            \n+        \n+        self.cycle_time = int(self.ui.doubleSpinBox_cycle_time.value()*1000)\n+        if self.cycle_time != self.timer.interval():\n+            self.timer.start(self.cycle_time)\n \n     def setup_config(self):\n         required_config_params = {\"DEFAULT\": [\"experiment_name\"],\n```\n\nAnd in main.ui\n\n```\n#!diff\n\n@@ -274,6 +274,72 @@\n            </property>\n           </widget>\n          </item>\n+         <item>\n+          <layout class=\"QHBoxLayout\" name=\"cycle_layout\">\n+           <property name=\"spacing\">\n+            <number>0</number>\n+           </property>\n+           <item>\n+            <widget class=\"QCheckBox\" name=\"checkBox_cycle\">\n+             <property name=\"toolTip\">\n+              <string>Auto-Engage Every X seconds</string>\n+             </property>\n+             <property name=\"text\">\n+              <string>Cycle every</string>\n+             </property>\n+            </widget>\n+           </item>\n+           <item>\n+            <widget class=\"QDoubleSpinBox\" name=\"doubleSpinBox_cycle_time\">\n+             <property name=\"sizePolicy\">\n+              <sizepolicy hsizetype=\"Minimum\" vsizetype=\"Fixed\">\n+               <horstretch>0</horstretch>\n+               <verstretch>0</verstretch>\n+              </sizepolicy>\n+             </property>\n+             <property name=\"baseSize\">\n+              <size>\n+               <width>0</width>\n+               <height>0</height>\n+              </size>\n+             </property>\n+             <property name=\"toolTip\">\n+              <string>Cycle Time in seconds</string>\n+             </property>\n+             <property name=\"buttonSymbols\">\n+              <enum>QAbstractSpinBox::UpDownArrows</enum>\n+             </property>\n+             <property name=\"specialValueText\">\n+              <string/>\n+             </property>\n+             <property name=\"correctionMode\">\n+              <enum>QAbstractSpinBox::CorrectToNearestValue</enum>\n+             </property>\n+             <property name=\"prefix\">\n+              <string/>\n+             </property>\n+             <property name=\"suffix\">\n+              <string>s</string>\n+             </property>\n+             <property name=\"decimals\">\n+              <number>1</number>\n+             </property>\n+             <property name=\"minimum\">\n+              <double>0.100000000000000</double>\n+             </property>\n+             <property name=\"maximum\">\n+              <double>99.900000000000006</double>\n+             </property>\n+             <property name=\"singleStep\">\n+              <double>0.100000000000000</double>\n+             </property>\n+             <property name=\"value\">\n+              <double>1.000000000000000</double>\n+             </property>\n+            </widget>\n+           </item>\n+          </layout>\n+         </item>\n         </layout>\n        </widget>\n       </item>\n```", "markup": "markdown", "html": "<p>Finally got around to putting our hack together for this today and figured I'd post the diffs here in case anybody else desperately needs the functionality while we patiently and graciously await your work on the more complete compile queue. It is simple, but effective.</p>\n<p>In <strong>main</strong>.py </p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gu\">@@ -1350,8 +1350,24 @@</span>\n             # Defer this until 50ms after the window has shown,\n             # so that the GUI pops up faster in the meantime\n             self.ui.firstPaint.connect(lambda: QtCore.QTimer.singleShot(50, load_the_config_file))\n<span class=\"gi\">+            </span>\n<span class=\"gi\">+        # add a timer to check cycling status every X seconds</span>\n<span class=\"gi\">+        self.timer = QtCore.QTimer()</span>\n<span class=\"gi\">+        self.timer.timeout.connect(self.cycler)</span>\n<span class=\"gi\">+        # start timer with default time, set in main.ui to be 1s (1000ms)</span>\n<span class=\"gi\">+        self.cycle_time = int(self.ui.doubleSpinBox_cycle_time.value()*1000)</span>\n<span class=\"gi\">+        self.timer.start(self.cycle_time)</span>\n\n         self.ui.show()\n<span class=\"gi\">+        </span>\n<span class=\"gi\">+    def cycler(self):</span>\n<span class=\"gi\">+        # every timeout check if engage should be sent and update timer timeout</span>\n<span class=\"gi\">+        if self.ui.checkBox_cycle.isChecked():</span>\n<span class=\"gi\">+            self.ui.pushButton_engage.click()            </span>\n<span class=\"gi\">+        </span>\n<span class=\"gi\">+        self.cycle_time = int(self.ui.doubleSpinBox_cycle_time.value()*1000)</span>\n<span class=\"gi\">+        if self.cycle_time != self.timer.interval():</span>\n<span class=\"gi\">+            self.timer.start(self.cycle_time)</span>\n\n     def setup_config(self):\n         required_config_params = {&quot;DEFAULT&quot;: [&quot;experiment_name&quot;],\n</pre></div>\n\n\n<p>And in main.ui</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gu\">@@ -274,6 +274,72 @@</span>\n            &lt;/property&gt;\n           &lt;/widget&gt;\n          &lt;/item&gt;\n<span class=\"gi\">+         &lt;item&gt;</span>\n<span class=\"gi\">+          &lt;layout class=&quot;QHBoxLayout&quot; name=&quot;cycle_layout&quot;&gt;</span>\n<span class=\"gi\">+           &lt;property name=&quot;spacing&quot;&gt;</span>\n<span class=\"gi\">+            &lt;number&gt;0&lt;/number&gt;</span>\n<span class=\"gi\">+           &lt;/property&gt;</span>\n<span class=\"gi\">+           &lt;item&gt;</span>\n<span class=\"gi\">+            &lt;widget class=&quot;QCheckBox&quot; name=&quot;checkBox_cycle&quot;&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;toolTip&quot;&gt;</span>\n<span class=\"gi\">+              &lt;string&gt;Auto-Engage Every X seconds&lt;/string&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;text&quot;&gt;</span>\n<span class=\"gi\">+              &lt;string&gt;Cycle every&lt;/string&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+            &lt;/widget&gt;</span>\n<span class=\"gi\">+           &lt;/item&gt;</span>\n<span class=\"gi\">+           &lt;item&gt;</span>\n<span class=\"gi\">+            &lt;widget class=&quot;QDoubleSpinBox&quot; name=&quot;doubleSpinBox_cycle_time&quot;&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;sizePolicy&quot;&gt;</span>\n<span class=\"gi\">+              &lt;sizepolicy hsizetype=&quot;Minimum&quot; vsizetype=&quot;Fixed&quot;&gt;</span>\n<span class=\"gi\">+               &lt;horstretch&gt;0&lt;/horstretch&gt;</span>\n<span class=\"gi\">+               &lt;verstretch&gt;0&lt;/verstretch&gt;</span>\n<span class=\"gi\">+              &lt;/sizepolicy&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;baseSize&quot;&gt;</span>\n<span class=\"gi\">+              &lt;size&gt;</span>\n<span class=\"gi\">+               &lt;width&gt;0&lt;/width&gt;</span>\n<span class=\"gi\">+               &lt;height&gt;0&lt;/height&gt;</span>\n<span class=\"gi\">+              &lt;/size&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;toolTip&quot;&gt;</span>\n<span class=\"gi\">+              &lt;string&gt;Cycle Time in seconds&lt;/string&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;buttonSymbols&quot;&gt;</span>\n<span class=\"gi\">+              &lt;enum&gt;QAbstractSpinBox::UpDownArrows&lt;/enum&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;specialValueText&quot;&gt;</span>\n<span class=\"gi\">+              &lt;string/&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;correctionMode&quot;&gt;</span>\n<span class=\"gi\">+              &lt;enum&gt;QAbstractSpinBox::CorrectToNearestValue&lt;/enum&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;prefix&quot;&gt;</span>\n<span class=\"gi\">+              &lt;string/&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;suffix&quot;&gt;</span>\n<span class=\"gi\">+              &lt;string&gt;s&lt;/string&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;decimals&quot;&gt;</span>\n<span class=\"gi\">+              &lt;number&gt;1&lt;/number&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;minimum&quot;&gt;</span>\n<span class=\"gi\">+              &lt;double&gt;0.100000000000000&lt;/double&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;maximum&quot;&gt;</span>\n<span class=\"gi\">+              &lt;double&gt;99.900000000000006&lt;/double&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;singleStep&quot;&gt;</span>\n<span class=\"gi\">+              &lt;double&gt;0.100000000000000&lt;/double&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;value&quot;&gt;</span>\n<span class=\"gi\">+              &lt;double&gt;1.000000000000000&lt;/double&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+            &lt;/widget&gt;</span>\n<span class=\"gi\">+           &lt;/item&gt;</span>\n<span class=\"gi\">+          &lt;/layout&gt;</span>\n<span class=\"gi\">+         &lt;/item&gt;</span>\n         &lt;/layout&gt;\n        &lt;/widget&gt;\n       &lt;/item&gt;\n</pre></div>", "type": "rendered"}, "created_on": "2017-08-25T22:41:07.304436+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": null, "type": "issue_comment", "id": 39354012}