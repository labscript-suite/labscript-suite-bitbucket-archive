{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/48/comments/39154026.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/48#comment-39154026"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "title": "Continuous Engage"}, "content": {"raw": "Hi Kevin,\n\nWhilst you're free to implement something quickly to get this working for your purposes, this functionality would also be provided by my plans to add a \"compile queue\" to runmanager. In order to have per-shot feedback, I'm going to have to introduce requests from BLACS saying \"My queue is empty now, please compile and send me the next shot!\" or perhaps \"I have only one more shot in my queue, please compile and send me the next shot\" if you want to \"pipeline\" with a buffer of one shot to ensure the compilation isn't decreasing your duty-cycle (at a cost of the feedback only taking effect the shot after next rather than the next shot).\n\nIf I do this, then the runmanager compile queue will gain a \"repeat final\" mode just like the BLACS queue - and perhaps will simply inherit the setting from BLACS and not have its own (or perhaps vice-versa) - in which case you'd get the functionality you want, including avoiding producing a backlog in the BLACS queue.\n\nSo implement what you like to solve your immediate problem, but I think it's unlikely to make it into the mainline if you made a pull request. In which case you needn't make it be a quality implementation, if it's going to be superseded!\n\nAlthough I've been juggling all the pull requests coming in lately and the push for Qt5 support, my priority with labscript development otherwise has been to make the JQI  fork and mainline converge, which would entail this feedback business and a compilation queue for runmanager. So that's just a way of saying that it's a priority - I can't even use mainline labscript in my own lab until it's done!\n\nSo if the 3rd party pull requests calm down, as it looks like they will, I'll have more time to move things along with getting the JQI features into mainline, and this is next on the list!", "markup": "markdown", "html": "<p>Hi Kevin,</p>\n<p>Whilst you're free to implement something quickly to get this working for your purposes, this functionality would also be provided by my plans to add a \"compile queue\" to runmanager. In order to have per-shot feedback, I'm going to have to introduce requests from BLACS saying \"My queue is empty now, please compile and send me the next shot!\" or perhaps \"I have only one more shot in my queue, please compile and send me the next shot\" if you want to \"pipeline\" with a buffer of one shot to ensure the compilation isn't decreasing your duty-cycle (at a cost of the feedback only taking effect the shot after next rather than the next shot).</p>\n<p>If I do this, then the runmanager compile queue will gain a \"repeat final\" mode just like the BLACS queue - and perhaps will simply inherit the setting from BLACS and not have its own (or perhaps vice-versa) - in which case you'd get the functionality you want, including avoiding producing a backlog in the BLACS queue.</p>\n<p>So implement what you like to solve your immediate problem, but I think it's unlikely to make it into the mainline if you made a pull request. In which case you needn't make it be a quality implementation, if it's going to be superseded!</p>\n<p>Although I've been juggling all the pull requests coming in lately and the push for Qt5 support, my priority with labscript development otherwise has been to make the JQI  fork and mainline converge, which would entail this feedback business and a compilation queue for runmanager. So that's just a way of saying that it's a priority - I can't even use mainline labscript in my own lab until it's done!</p>\n<p>So if the 3rd party pull requests calm down, as it looks like they will, I'll have more time to move things along with getting the JQI features into mainline, and this is next on the list!</p>", "type": "rendered"}, "created_on": "2017-08-17T15:57:05.959690+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-17T15:57:17.475448+00:00", "type": "issue_comment", "id": 39154026}, {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/48/comments/39154453.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/48#comment-39154453"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "title": "Continuous Engage"}, "content": {"raw": "I broadly support something along the lines of \ncontinuous engage. We have a very bad implementation of something like this (which needs changes to all devices) running in our lab right now with a even worse implementation of issue #44. I'm working to replace both with [Pull request 12](#!/labscript_suite/runmanager/pull-requests/12) in combination with BLACS's repeat last feature, [delete repeated shots](#!/labscript_suite/blacs/pull-requests/9/delete-repeated-shots-functionality/diff) and some key combination to compile quickly while in editing mode of a global.\n\nHowever I'm stuck at the quick edit of globals. Which is kind of unfortunate, but @cbillington indicated that he would help there.\n\n@cbillington I still have quite a long list of things that our lab wants implemented, but those will probably take time. So at least from my side of things there should be not to many pull requests in the near future.", "markup": "markdown", "html": "<p>I broadly support something along the lines of \ncontinuous engage. We have a very bad implementation of something like this (which needs changes to all devices) running in our lab right now with a even worse implementation of issue <a href=\"#!/labscript_suite/runmanager/issues/44/changing-values-with-arrow-keys\" rel=\"nofollow\" title=\"changing values with arrow keys\" class=\"ap-connect-link\">#44</a>. I'm working to replace both with <a data-is-external-link=\"true\" href=\"#!/labscript_suite/runmanager/pull-requests/12\" rel=\"nofollow\">Pull request 12</a> in combination with BLACS's repeat last feature, <a data-is-external-link=\"true\" href=\"#!/labscript_suite/blacs/pull-requests/9/delete-repeated-shots-functionality/diff\" rel=\"nofollow\">delete repeated shots</a> and some key combination to compile quickly while in editing mode of a global.</p>\n<p>However I'm stuck at the quick edit of globals. Which is kind of unfortunate, but @cbillington indicated that he would help there.</p>\n<p>@cbillington I still have quite a long list of things that our lab wants implemented, but those will probably take time. So at least from my side of things there should be not to many pull requests in the near future.</p>", "type": "rendered"}, "created_on": "2017-08-17T16:21:58.047566+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 39154453}, {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/48/comments/39154483.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/48#comment-39154483"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "title": "Continuous Engage"}, "content": {"raw": "Hey Chris, \nThat all sounds great.  We continue to benefit from your hard work.  Here's what we will do.  If you think you will have a pull request for the new stuff in the next week or two, we will just wait for that.  If you think it may be a little longer, we will go ahead and do something quick and temporary in our own code.  Just let me know if you have a rough estimate for your timeline.  Also, let us know if there is any way we can help you.", "markup": "markdown", "html": "<p>Hey Chris, \nThat all sounds great.  We continue to benefit from your hard work.  Here's what we will do.  If you think you will have a pull request for the new stuff in the next week or two, we will just wait for that.  If you think it may be a little longer, we will go ahead and do something quick and temporary in our own code.  Just let me know if you have a rough estimate for your timeline.  Also, let us know if there is any way we can help you.</p>", "type": "rendered"}, "created_on": "2017-08-17T16:23:44.812416+00:00", "user": {"display_name": "Kevin Cox", "uuid": "{9fc7b87b-cbd0-445e-920a-da21302a36b1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9fc7b87b-cbd0-445e-920a-da21302a36b1%7D"}, "html": {"href": "https://bitbucket.org/%7B9fc7b87b-cbd0-445e-920a-da21302a36b1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2d7a249e8067b46827e198e271d79ea9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsKC-6.png"}}, "nickname": "kccox", "type": "user", "account_id": "557058:15635328-757a-4cd6-a88d-c9b8fab29217"}, "updated_on": null, "type": "issue_comment", "id": 39154483}, {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/48/comments/39158906.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/48#comment-39158906"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "title": "Continuous Engage"}, "content": {"raw": "I think it will be a little longer than that unfortunately! I'd say about 1-2 months. So do with that what you will, and I'll let you know if it's looking likely to materialise sooner. Realistically it will be done over the course of a few days, but I don't expect to get to it for at least 2 weeks, and more likely longer - so 1-2 months might be a reasonable estimate.", "markup": "markdown", "html": "<p>I think it will be a little longer than that unfortunately! I'd say about 1-2 months. So do with that what you will, and I'll let you know if it's looking likely to materialise sooner. Realistically it will be done over the course of a few days, but I don't expect to get to it for at least 2 weeks, and more likely longer - so 1-2 months might be a reasonable estimate.</p>", "type": "rendered"}, "created_on": "2017-08-17T21:20:28.774455+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-17T21:21:00.634628+00:00", "type": "issue_comment", "id": 39158906}, {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/48/comments/39354012.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/48#comment-39354012"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "title": "Continuous Engage"}, "content": {"raw": "Finally got around to putting our hack together for this today and figured I'd post the diffs here in case anybody else desperately needs the functionality while we patiently and graciously await your work on the more complete compile queue. It is simple, but effective.\n\nIn __main__.py \n\n```\n#!diff\n\n@@ -1350,8 +1350,24 @@\n             # Defer this until 50ms after the window has shown,\n             # so that the GUI pops up faster in the meantime\n             self.ui.firstPaint.connect(lambda: QtCore.QTimer.singleShot(50, load_the_config_file))\n+            \n+        # add a timer to check cycling status every X seconds\n+        self.timer = QtCore.QTimer()\n+        self.timer.timeout.connect(self.cycler)\n+        # start timer with default time, set in main.ui to be 1s (1000ms)\n+        self.cycle_time = int(self.ui.doubleSpinBox_cycle_time.value()*1000)\n+        self.timer.start(self.cycle_time)\n \n         self.ui.show()\n+        \n+    def cycler(self):\n+        # every timeout check if engage should be sent and update timer timeout\n+        if self.ui.checkBox_cycle.isChecked():\n+            self.ui.pushButton_engage.click()            \n+        \n+        self.cycle_time = int(self.ui.doubleSpinBox_cycle_time.value()*1000)\n+        if self.cycle_time != self.timer.interval():\n+            self.timer.start(self.cycle_time)\n \n     def setup_config(self):\n         required_config_params = {\"DEFAULT\": [\"experiment_name\"],\n```\n\nAnd in main.ui\n\n```\n#!diff\n\n@@ -274,6 +274,72 @@\n            </property>\n           </widget>\n          </item>\n+         <item>\n+          <layout class=\"QHBoxLayout\" name=\"cycle_layout\">\n+           <property name=\"spacing\">\n+            <number>0</number>\n+           </property>\n+           <item>\n+            <widget class=\"QCheckBox\" name=\"checkBox_cycle\">\n+             <property name=\"toolTip\">\n+              <string>Auto-Engage Every X seconds</string>\n+             </property>\n+             <property name=\"text\">\n+              <string>Cycle every</string>\n+             </property>\n+            </widget>\n+           </item>\n+           <item>\n+            <widget class=\"QDoubleSpinBox\" name=\"doubleSpinBox_cycle_time\">\n+             <property name=\"sizePolicy\">\n+              <sizepolicy hsizetype=\"Minimum\" vsizetype=\"Fixed\">\n+               <horstretch>0</horstretch>\n+               <verstretch>0</verstretch>\n+              </sizepolicy>\n+             </property>\n+             <property name=\"baseSize\">\n+              <size>\n+               <width>0</width>\n+               <height>0</height>\n+              </size>\n+             </property>\n+             <property name=\"toolTip\">\n+              <string>Cycle Time in seconds</string>\n+             </property>\n+             <property name=\"buttonSymbols\">\n+              <enum>QAbstractSpinBox::UpDownArrows</enum>\n+             </property>\n+             <property name=\"specialValueText\">\n+              <string/>\n+             </property>\n+             <property name=\"correctionMode\">\n+              <enum>QAbstractSpinBox::CorrectToNearestValue</enum>\n+             </property>\n+             <property name=\"prefix\">\n+              <string/>\n+             </property>\n+             <property name=\"suffix\">\n+              <string>s</string>\n+             </property>\n+             <property name=\"decimals\">\n+              <number>1</number>\n+             </property>\n+             <property name=\"minimum\">\n+              <double>0.100000000000000</double>\n+             </property>\n+             <property name=\"maximum\">\n+              <double>99.900000000000006</double>\n+             </property>\n+             <property name=\"singleStep\">\n+              <double>0.100000000000000</double>\n+             </property>\n+             <property name=\"value\">\n+              <double>1.000000000000000</double>\n+             </property>\n+            </widget>\n+           </item>\n+          </layout>\n+         </item>\n         </layout>\n        </widget>\n       </item>\n```", "markup": "markdown", "html": "<p>Finally got around to putting our hack together for this today and figured I'd post the diffs here in case anybody else desperately needs the functionality while we patiently and graciously await your work on the more complete compile queue. It is simple, but effective.</p>\n<p>In <strong>main</strong>.py </p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gu\">@@ -1350,8 +1350,24 @@</span>\n             # Defer this until 50ms after the window has shown,\n             # so that the GUI pops up faster in the meantime\n             self.ui.firstPaint.connect(lambda: QtCore.QTimer.singleShot(50, load_the_config_file))\n<span class=\"gi\">+            </span>\n<span class=\"gi\">+        # add a timer to check cycling status every X seconds</span>\n<span class=\"gi\">+        self.timer = QtCore.QTimer()</span>\n<span class=\"gi\">+        self.timer.timeout.connect(self.cycler)</span>\n<span class=\"gi\">+        # start timer with default time, set in main.ui to be 1s (1000ms)</span>\n<span class=\"gi\">+        self.cycle_time = int(self.ui.doubleSpinBox_cycle_time.value()*1000)</span>\n<span class=\"gi\">+        self.timer.start(self.cycle_time)</span>\n\n         self.ui.show()\n<span class=\"gi\">+        </span>\n<span class=\"gi\">+    def cycler(self):</span>\n<span class=\"gi\">+        # every timeout check if engage should be sent and update timer timeout</span>\n<span class=\"gi\">+        if self.ui.checkBox_cycle.isChecked():</span>\n<span class=\"gi\">+            self.ui.pushButton_engage.click()            </span>\n<span class=\"gi\">+        </span>\n<span class=\"gi\">+        self.cycle_time = int(self.ui.doubleSpinBox_cycle_time.value()*1000)</span>\n<span class=\"gi\">+        if self.cycle_time != self.timer.interval():</span>\n<span class=\"gi\">+            self.timer.start(self.cycle_time)</span>\n\n     def setup_config(self):\n         required_config_params = {&quot;DEFAULT&quot;: [&quot;experiment_name&quot;],\n</pre></div>\n\n\n<p>And in main.ui</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gu\">@@ -274,6 +274,72 @@</span>\n            &lt;/property&gt;\n           &lt;/widget&gt;\n          &lt;/item&gt;\n<span class=\"gi\">+         &lt;item&gt;</span>\n<span class=\"gi\">+          &lt;layout class=&quot;QHBoxLayout&quot; name=&quot;cycle_layout&quot;&gt;</span>\n<span class=\"gi\">+           &lt;property name=&quot;spacing&quot;&gt;</span>\n<span class=\"gi\">+            &lt;number&gt;0&lt;/number&gt;</span>\n<span class=\"gi\">+           &lt;/property&gt;</span>\n<span class=\"gi\">+           &lt;item&gt;</span>\n<span class=\"gi\">+            &lt;widget class=&quot;QCheckBox&quot; name=&quot;checkBox_cycle&quot;&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;toolTip&quot;&gt;</span>\n<span class=\"gi\">+              &lt;string&gt;Auto-Engage Every X seconds&lt;/string&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;text&quot;&gt;</span>\n<span class=\"gi\">+              &lt;string&gt;Cycle every&lt;/string&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+            &lt;/widget&gt;</span>\n<span class=\"gi\">+           &lt;/item&gt;</span>\n<span class=\"gi\">+           &lt;item&gt;</span>\n<span class=\"gi\">+            &lt;widget class=&quot;QDoubleSpinBox&quot; name=&quot;doubleSpinBox_cycle_time&quot;&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;sizePolicy&quot;&gt;</span>\n<span class=\"gi\">+              &lt;sizepolicy hsizetype=&quot;Minimum&quot; vsizetype=&quot;Fixed&quot;&gt;</span>\n<span class=\"gi\">+               &lt;horstretch&gt;0&lt;/horstretch&gt;</span>\n<span class=\"gi\">+               &lt;verstretch&gt;0&lt;/verstretch&gt;</span>\n<span class=\"gi\">+              &lt;/sizepolicy&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;baseSize&quot;&gt;</span>\n<span class=\"gi\">+              &lt;size&gt;</span>\n<span class=\"gi\">+               &lt;width&gt;0&lt;/width&gt;</span>\n<span class=\"gi\">+               &lt;height&gt;0&lt;/height&gt;</span>\n<span class=\"gi\">+              &lt;/size&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;toolTip&quot;&gt;</span>\n<span class=\"gi\">+              &lt;string&gt;Cycle Time in seconds&lt;/string&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;buttonSymbols&quot;&gt;</span>\n<span class=\"gi\">+              &lt;enum&gt;QAbstractSpinBox::UpDownArrows&lt;/enum&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;specialValueText&quot;&gt;</span>\n<span class=\"gi\">+              &lt;string/&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;correctionMode&quot;&gt;</span>\n<span class=\"gi\">+              &lt;enum&gt;QAbstractSpinBox::CorrectToNearestValue&lt;/enum&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;prefix&quot;&gt;</span>\n<span class=\"gi\">+              &lt;string/&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;suffix&quot;&gt;</span>\n<span class=\"gi\">+              &lt;string&gt;s&lt;/string&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;decimals&quot;&gt;</span>\n<span class=\"gi\">+              &lt;number&gt;1&lt;/number&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;minimum&quot;&gt;</span>\n<span class=\"gi\">+              &lt;double&gt;0.100000000000000&lt;/double&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;maximum&quot;&gt;</span>\n<span class=\"gi\">+              &lt;double&gt;99.900000000000006&lt;/double&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;singleStep&quot;&gt;</span>\n<span class=\"gi\">+              &lt;double&gt;0.100000000000000&lt;/double&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+             &lt;property name=&quot;value&quot;&gt;</span>\n<span class=\"gi\">+              &lt;double&gt;1.000000000000000&lt;/double&gt;</span>\n<span class=\"gi\">+             &lt;/property&gt;</span>\n<span class=\"gi\">+            &lt;/widget&gt;</span>\n<span class=\"gi\">+           &lt;/item&gt;</span>\n<span class=\"gi\">+          &lt;/layout&gt;</span>\n<span class=\"gi\">+         &lt;/item&gt;</span>\n         &lt;/layout&gt;\n        &lt;/widget&gt;\n       &lt;/item&gt;\n</pre></div>", "type": "rendered"}, "created_on": "2017-08-25T22:41:07.304436+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": null, "type": "issue_comment", "id": 39354012}], "page": 1, "size": 5}