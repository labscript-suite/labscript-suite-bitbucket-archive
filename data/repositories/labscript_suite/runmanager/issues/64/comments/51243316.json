{"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/64/comments/51243316.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/64#comment-51243316"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/64.json"}}, "type": "issue", "id": 64, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "title": "zip argument error in expand_globals"}, "content": {"raw": "Ah ok, you may have encountered this bug due to identically named globals, but it is broader than that.\n\nSimply creating a global called `x`, equal to `56`, and setting its expansion type to `'outer'` will result in an exception:\n\n```\nTraceback (most recent call last):\n  File \"/home/bilbo/labscript_suite/runmanager/__main__.py\", line 2503, in preparse_globals_loop\n    self.preparse_globals()\n  File \"/home/bilbo/labscript_suite/runmanager/__main__.py\", line 2484, in preparse_globals\n    results = self.parse_globals(active_groups, raise_exceptions=False, expand_globals=True, return_dimensions = True)\n  File \"/home/bilbo/labscript_suite/runmanager/__main__.py\", line 3164, in parse_globals\n    shots, dimensions = runmanager.expand_globals(sequence_globals, evaled_globals, expansion_order, return_dimensions=return_dimensions)\n  File \"/home/bilbo/labscript_suite/runmanager/__init__.py\", line 550, in expand_globals\n    axis = list(zip(*axis))\nTypeError: zip argument #1 must support iteration\n```\n\nNow that I can reproduce this I can think about what we're doing wrong and how to solve it.", "markup": "markdown", "html": "<p>Ah ok, you may have encountered this bug due to identically named globals, but it is broader than that.</p>\n<p>Simply creating a global called <code>x</code>, equal to <code>56</code>, and setting its expansion type to <code>'outer'</code> will result in an exception:</p>\n<div class=\"codehilite\"><pre><span></span>Traceback (most recent call last):\n  File &quot;/home/bilbo/labscript_suite/runmanager/__main__.py&quot;, line 2503, in preparse_globals_loop\n    self.preparse_globals()\n  File &quot;/home/bilbo/labscript_suite/runmanager/__main__.py&quot;, line 2484, in preparse_globals\n    results = self.parse_globals(active_groups, raise_exceptions=False, expand_globals=True, return_dimensions = True)\n  File &quot;/home/bilbo/labscript_suite/runmanager/__main__.py&quot;, line 3164, in parse_globals\n    shots, dimensions = runmanager.expand_globals(sequence_globals, evaled_globals, expansion_order, return_dimensions=return_dimensions)\n  File &quot;/home/bilbo/labscript_suite/runmanager/__init__.py&quot;, line 550, in expand_globals\n    axis = list(zip(*axis))\nTypeError: zip argument #1 must support iteration\n</pre></div>\n\n\n<p>Now that I can reproduce this I can think about what we're doing wrong and how to solve it.</p>", "type": "rendered"}, "created_on": "2019-03-20T19:57:33.917724+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-03-20T19:58:04.099918+00:00", "type": "issue_comment", "id": 51243316}