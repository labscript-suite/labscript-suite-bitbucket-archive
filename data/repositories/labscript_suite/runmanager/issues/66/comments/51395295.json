{"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/66/comments/51395295.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/66#comment-51395295"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/66.json"}}, "type": "issue", "id": 66, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "title": "Preparse thread memory leak/crash"}, "content": {"raw": "Should have figured it was something to do with this. The aim is to use `uWave_scan` as the only axis of the parameter space. The other globals just help in constructing the somewhat complicated scan structure (in this case, a mixture of 5 separate log scales and a linear scale).\n\nI end up needing fairly complex scans on a regular basis and have found that building in chunks worked OK in the past. Normally runmanager just gets confused then I manually deactivate all the unwanted expansions. Must have pushed a little too far adding that final linear range and didn't realize it until I restated runmanager after the update and the expansions were rechecked. Oops. I am back up and running though.\n\nAnyway, a few follow-up items then we can probably let this issue go.\n\n* The first thing I tried to get up and running was to just go into the globals file and remove all the expansions. That was only mildly effective though since runmanager seems to ignore that field and re-guess the expansions from scratch when first opened. Is that really desirable behavior? Why save the expansions to the file if they are ignored when it's read anyway?\n* Wrapping things in tuples works, but I'm not a fan of it as a long term solution. While I find it a bit obfuscating, my bigger concern is that it eats up real estate in the value field, which is already pretty limited. In fact, the main reason I have been breaking up the scan calculations is because putting them into one monolithic line isn't manageable since the entry field isn't big enough to see everything. Is there a way to 'fix' this more elegantly? I agree with Phil that having runmanager somehow do the logic automatically isn't worth the time or effort. I can conjure a few potential ideas that may be simpler:\n    * Some sort of control that tells runmanager to ignore a group when guessing expansions. Likely another column in the group tab. Then all these intermediate calculations could be moved into an ignored group. I imagine zip group detection might get a bit tricky though.\n    * What about just making the value field line wrap? Then it would be easy to move all the calculations to a single field.\n    * Have the expansions on first start be read from the globals file by default. Add a \"Re-evaluate Expansions\" button somewhere the user can manually use that provides that hard-reset functionality.\n\nAnyway, those are just a few thoughts. As always, thanks for your prompt replies.", "markup": "markdown", "html": "<p>Should have figured it was something to do with this. The aim is to use <code>uWave_scan</code> as the only axis of the parameter space. The other globals just help in constructing the somewhat complicated scan structure (in this case, a mixture of 5 separate log scales and a linear scale).</p>\n<p>I end up needing fairly complex scans on a regular basis and have found that building in chunks worked OK in the past. Normally runmanager just gets confused then I manually deactivate all the unwanted expansions. Must have pushed a little too far adding that final linear range and didn't realize it until I restated runmanager after the update and the expansions were rechecked. Oops. I am back up and running though.</p>\n<p>Anyway, a few follow-up items then we can probably let this issue go.</p>\n<ul>\n<li>The first thing I tried to get up and running was to just go into the globals file and remove all the expansions. That was only mildly effective though since runmanager seems to ignore that field and re-guess the expansions from scratch when first opened. Is that really desirable behavior? Why save the expansions to the file if they are ignored when it's read anyway?</li>\n<li>Wrapping things in tuples works, but I'm not a fan of it as a long term solution. While I find it a bit obfuscating, my bigger concern is that it eats up real estate in the value field, which is already pretty limited. In fact, the main reason I have been breaking up the scan calculations is because putting them into one monolithic line isn't manageable since the entry field isn't big enough to see everything. Is there a way to 'fix' this more elegantly? I agree with Phil that having runmanager somehow do the logic automatically isn't worth the time or effort. I can conjure a few potential ideas that may be simpler:<ul>\n<li>Some sort of control that tells runmanager to ignore a group when guessing expansions. Likely another column in the group tab. Then all these intermediate calculations could be moved into an ignored group. I imagine zip group detection might get a bit tricky though.</li>\n<li>What about just making the value field line wrap? Then it would be easy to move all the calculations to a single field.</li>\n<li>Have the expansions on first start be read from the globals file by default. Add a \"Re-evaluate Expansions\" button somewhere the user can manually use that provides that hard-reset functionality.</li>\n</ul>\n</li>\n</ul>\n<p>Anyway, those are just a few thoughts. As always, thanks for your prompt replies.</p>", "type": "rendered"}, "created_on": "2019-03-29T13:04:59.037139+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": null, "type": "issue_comment", "id": 51395295}