{"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/68/comments/51742387.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/68#comment-51742387"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/issues/68.json"}}, "type": "issue", "id": 68, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "title": "UI scripting"}, "content": {"raw": "I'm somewhat likely to be working on this in the next couple of weeks, as automated optimisation is happening in our labs. Will aim for the above minimal features and take it from there. Anyone else should feel free to work on it too, but maybe check with me if I've started on it yet so that we're not doubling up. \n\nThe runmanager API is clunky, but I think the clunkiness comes from there being no global state as to which globals groups are currently active and that sort of thing. This state is presently stored in the runmanager GUI (and saved to disk upon quitting), which is why GUI scripting is appealing, since then the script doesn't need to provide that state. But if runmanager were a GUIless program holding that state, or perhaps if the state were stored on disk and changes to it were scriptable without runmanger actually running, then I think that's more what phil is getting at. But I also think some of these more lofty goals should be considered pretty low priority, since in practice having to run a GUI program as a server (once it is scriptable) would not be preventing anyone from doing anything they need to do.", "markup": "markdown", "html": "<p>I'm somewhat likely to be working on this in the next couple of weeks, as automated optimisation is happening in our labs. Will aim for the above minimal features and take it from there. Anyone else should feel free to work on it too, but maybe check with me if I've started on it yet so that we're not doubling up. </p>\n<p>The runmanager API is clunky, but I think the clunkiness comes from there being no global state as to which globals groups are currently active and that sort of thing. This state is presently stored in the runmanager GUI (and saved to disk upon quitting), which is why GUI scripting is appealing, since then the script doesn't need to provide that state. But if runmanager were a GUIless program holding that state, or perhaps if the state were stored on disk and changes to it were scriptable without runmanger actually running, then I think that's more what phil is getting at. But I also think some of these more lofty goals should be considered pretty low priority, since in practice having to run a GUI program as a server (once it is scriptable) would not be preventing anyone from doing anything they need to do.</p>", "type": "rendered"}, "created_on": "2019-04-21T17:24:28.052848+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-04-21T17:25:21.194379+00:00", "type": "issue_comment", "id": 51742387}