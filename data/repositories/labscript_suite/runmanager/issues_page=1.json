{"pagelen": 100, "values": [{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/1/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/1.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/1/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/1/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/1/load-configuration-does-not-default-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/1/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "\"Load configuration\" does not default to current day's output directory", "component": null, "votes": 0, "watches": 3, "content": {"raw": "When you load a configuration in runmanager, the output directory is set to the one used on the day the configuration was saved. If runmanager was using the default directory (not manually changed) when it was saved, then it should load the appropriate default directory for the current day.", "markup": "markdown", "html": "<p>When you load a configuration in runmanager, the output directory is set to the one used on the day the configuration was saved. If runmanager was using the default directory (not manually changed) when it was saved, then it should load the appropriate default directory for the current day.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-06-11T07:45:42.926403+00:00", "milestone": null, "updated_on": "2014-09-13T18:44:20.424095+00:00", "type": "issue", "id": 1}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/2/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/2.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/2/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/2/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/2/paintevent-method-of-fingertabbar-is-not"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/2/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "paintEvent method of FingerTabBar is not implemented fully", "component": null, "votes": 0, "watches": 2, "content": {"raw": "This bug only applies to runmanager v2\r\n\r\nRe-ordering tabs doesn't look nice at all and gets confusing because some tabs don't draw correctly during a drag. I think this is because the implementation in FingerTabs is pretty rudimentary. I would suggest effectively duplicating the the paintEvent code from c++ (see https://qt.gitorious.org/qt/qt/source/5f0f5dd371cb5fbd1ae1cb8f7b6f03c0109d2d6c:src/gui/widgets/qtabbar.cpp#L1531 ) and modifying it to draw the text horizontally (as we do now). That way, hopefully things will look nice! You could merge this in with the labscript_utils/qwidgets/fingertabs code so that it fixes it in BLACS too.\r\n", "markup": "markdown", "html": "<p>This bug only applies to runmanager v2</p>\n<p>Re-ordering tabs doesn't look nice at all and gets confusing because some tabs don't draw correctly during a drag. I think this is because the implementation in FingerTabs is pretty rudimentary. I would suggest effectively duplicating the the paintEvent code from c++ (see <a href=\"https://qt.gitorious.org/qt/qt/source/5f0f5dd371cb5fbd1ae1cb8f7b6f03c0109d2d6c:src/gui/widgets/qtabbar.cpp#L1531\" rel=\"nofollow\" class=\"ap-connect-link\">https://qt.gitorious.org/qt/qt/source/5f0f5dd371cb5fbd1ae1cb8f7b6f03c0109d2d6c:src/gui/widgets/qtabbar.cpp#L1531</a> ) and modifying it to draw the text horizontally (as we do now). That way, hopefully things will look nice! You could merge this in with the labscript_utils/qwidgets/fingertabs code so that it fixes it in BLACS too.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "open", "version": null, "edited_on": null, "created_on": "2014-09-16T09:08:07.465222+00:00", "milestone": null, "updated_on": "2014-09-17T05:38:41.688557+00:00", "type": "issue", "id": 2}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/3/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/3.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/3/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/3/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/3/prevent-reordering-of-top-3-tabs"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/3/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Prevent reordering of top 3 tabs", "component": null, "votes": 0, "watches": 2, "content": {"raw": "A regression in runmanager v2.0:\r\n\r\nYou can now reorder the top 3 tabs (output, groups, axes). These should be fixed in place as they are special.", "markup": "markdown", "html": "<p>A regression in runmanager v2.0:</p>\n<p>You can now reorder the top 3 tabs (output, groups, axes). These should be fixed in place as they are special.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-09-16T09:11:53.515953+00:00", "milestone": null, "updated_on": "2014-09-17T05:39:08.469826+00:00", "type": "issue", "id": 3}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/4/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/4.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/4/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/4/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/4/keyboard-navigation-is-broken"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/4/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Keyboard navigation is broken", "component": null, "votes": 0, "watches": 2, "content": {"raw": "A regression in runmanager v2:\r\n\r\nYou used to be able to navigate around the cells in the groups and globals tabs' treeview. Now you can only use the keyboard to change the entire row selection.", "markup": "markdown", "html": "<p>A regression in runmanager v2:</p>\n<p>You used to be able to navigate around the cells in the groups and globals tabs' treeview. Now you can only use the keyboard to change the entire row selection.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-09-16T09:14:04.557149+00:00", "milestone": null, "updated_on": "2014-09-16T21:33:50.894336+00:00", "type": "issue", "id": 4}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/5/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/5.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/5/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/5/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/5/cannot-begin-editing-global-by-pressing"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/5/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "cannot begin editing global by pressing the \"enter\" key", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Regression in runmanager v2\r\n\r\nHitting enter when a row/column is highlighted (in the globals/groups treeviews) does not enter editing mode (it should)", "markup": "markdown", "html": "<p>Regression in runmanager v2</p>\n<p>Hitting enter when a row/column is highlighted (in the globals/groups treeviews) does not enter editing mode (it should)</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-09-16T09:15:36.235168+00:00", "milestone": null, "updated_on": "2014-09-17T01:05:18.747732+00:00", "type": "issue", "id": 5}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/6/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/6.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/6/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/6/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/6/navigation-while-editing-globals-via-tab"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/6/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Navigation while editing globals (via tab key) is broken", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Regression in v2\r\n\r\nHitting tab when editing a cell in the globals treeview seems really screwy. It takes you to the next row, when I would expect it to take you to the cell in the next column. \r\n\r\nI also liked the behaviour in runmanager (v1) where pressing tab on the units column was equivalent to hitting enter (you've finished editing at this point and are unlikely to want to go to the  expansion column).\r\n\r\nYou can exploit the above behaviour to enter values/units/expansions for the \"<click to add global>\" line and the only way to remove such entries is to exploit the above behaviour again.", "markup": "markdown", "html": "<p>Regression in v2</p>\n<p>Hitting tab when editing a cell in the globals treeview seems really screwy. It takes you to the next row, when I would expect it to take you to the cell in the next column. </p>\n<p>I also liked the behaviour in runmanager (v1) where pressing tab on the units column was equivalent to hitting enter (you've finished editing at this point and are unlikely to want to go to the  expansion column).</p>\n<p>You can exploit the above behaviour to enter values/units/expansions for the \"&lt;click to add global&gt;\" line and the only way to remove such entries is to exploit the above behaviour again.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-09-16T09:18:53.807707+00:00", "milestone": null, "updated_on": "2014-09-17T01:08:56.647654+00:00", "type": "issue", "id": 6}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/7/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/7.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/7/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/7/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/7/editing-should-move-to-an-empty-units"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/7/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Editing should move to an empty units column after editing a the value of a global", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Regression in v2\r\n\r\nThe old runmanager also used to always take you to the units column to enter a unit after changing a value if the unit column was empty. \r\n\r\nThis encourages units to be specified for every global, even if they are \"Arb.\" or \"-\". It provides context to numbers and avoid horrible situations where you don't know whether a time is in seconds, ms, us, etc, without looking at the code as well.", "markup": "markdown", "html": "<p>Regression in v2</p>\n<p>The old runmanager also used to always take you to the units column to enter a unit after changing a value if the unit column was empty. </p>\n<p>This encourages units to be specified for every global, even if they are \"Arb.\" or \"-\". It provides context to numbers and avoid horrible situations where you don't know whether a time is in seconds, ms, us, etc, without looking at the code as well.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-09-16T09:21:04.149156+00:00", "milestone": null, "updated_on": "2014-09-16T21:44:21.774519+00:00", "type": "issue", "id": 7}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/8/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/8.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/8/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/8/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/8/red-border-around-engage-button"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/8/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "red border around engage button", "component": null, "votes": 0, "watches": 2, "content": {"raw": "In runmanager v2, on PyQt v4.11.1 (x86) there appears to be a red border around the engage button when it is not highlighted.", "markup": "markdown", "html": "<p>In runmanager v2, on PyQt v4.11.1 (x86) there appears to be a red border around the engage button when it is not highlighted.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "closed", "version": null, "edited_on": null, "created_on": "2014-09-16T09:22:38.174410+00:00", "milestone": null, "updated_on": "2014-09-17T02:23:06.426792+00:00", "type": "issue", "id": 8}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/9/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/9.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/9/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/9/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/9/move-delete-column-of-globals-treeview-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/9/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Move delete column of globals treeview to the left", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Change in v2.0 that I would like to request is reverted\r\n\r\nWhen the value in the globals column is long (E.g. you have  lots of comments in your global value), the delete icon is pushed off to the left of the screen. This makes it annoying because you have to scroll to see the button, but then you can't see the name of teh global you are deleting! The global name and delete buttons should be next to each other.", "markup": "markdown", "html": "<p>Change in v2.0 that I would like to request is reverted</p>\n<p>When the value in the globals column is long (E.g. you have  lots of comments in your global value), the delete icon is pushed off to the left of the screen. This makes it annoying because you have to scroll to see the button, but then you can't see the name of teh global you are deleting! The global name and delete buttons should be next to each other.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-09-16T09:24:42.085501+00:00", "milestone": null, "updated_on": "2014-09-16T21:49:24.722233+00:00", "type": "issue", "id": 9}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/10/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/10.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/10/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/10/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/10/creating-a-new-globals-group-it-should"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/10/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Creating a new globals group, it should automaticaly mark it as active and open a tab for it", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Regression in v2\r\n\r\nWhen creating a new group, it should automatically open it (but not switch to the tab) and mark it as active. Most of the time, when you create a new group it is because you want to use it immediately and this saves two extra clicks.\r\n\r\nI don't think it should switch to the opened tab though because you may want to create more than 1 group before populating them with globals", "markup": "markdown", "html": "<p>Regression in v2</p>\n<p>When creating a new group, it should automatically open it (but not switch to the tab) and mark it as active. Most of the time, when you create a new group it is because you want to use it immediately and this saves two extra clicks.</p>\n<p>I don't think it should switch to the opened tab though because you may want to create more than 1 group before populating them with globals</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-09-16T09:26:39.536207+00:00", "milestone": null, "updated_on": "2014-09-16T21:49:59.810121+00:00", "type": "issue", "id": 10}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/11/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/11.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/11/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/11/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/11/output-folder-datestamp-format-should-be"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/11/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "output folder datestamp format should be configurable", "component": null, "votes": 0, "watches": 2, "content": {"raw": "The datestamp format for the experiment output folder has changed in v2. This means new shots created do not match the folder hierarchy we have used for the last three years. It is:\r\n\r\n*  A pain to rename all the folders as our files are now spread over an archive share\r\n* A pain to have to click through the extra folder level the new format introduces when manually looking at/loading already created shot files.\r\n\r\nI thus propose the data stamp is configurable, specified in the labconfig ini file. I recommend this just follow standard Python datetime syntax so that people can specify whatever they want (or nothing at all)\r\n\r\nMarking this as critical as we won't use it on a production machine in our lab until this can be configured.", "markup": "markdown", "html": "<p>The datestamp format for the experiment output folder has changed in v2. This means new shots created do not match the folder hierarchy we have used for the last three years. It is:</p>\n<ul>\n<li>A pain to rename all the folders as our files are now spread over an archive share</li>\n<li>A pain to have to click through the extra folder level the new format introduces when manually looking at/loading already created shot files.</li>\n</ul>\n<p>I thus propose the data stamp is configurable, specified in the labconfig ini file. I recommend this just follow standard Python datetime syntax so that people can specify whatever they want (or nothing at all)</p>\n<p>Marking this as critical as we won't use it on a production machine in our lab until this can be configured.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-09-16T09:30:56.331128+00:00", "milestone": null, "updated_on": "2014-09-17T03:42:59.966869+00:00", "type": "issue", "id": 11}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/12/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/12.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/12/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/12/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/12/tab-navigation-with-keyboard-shortcuts"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/12/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "tab navigation with keyboard shortcuts", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Ctrl-tab, ctrl-shift-tab and ctrl-w to switch and close tabs", "markup": "markdown", "html": "<p>Ctrl-tab, ctrl-shift-tab and ctrl-w to switch and close tabs</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-09-16T21:22:31.766702+00:00", "milestone": null, "updated_on": "2014-09-17T20:43:11.255713+00:00", "type": "issue", "id": 12}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/13/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/13.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/13/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/13/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/13/globals-files-without-units-or-expansion"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/13/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Globals files without units or expansion entry in h5 file raise exceptions", "component": null, "votes": 0, "watches": 2, "content": {"raw": "When testing with runmanager (changeset: 9165e460a942) there were a few bugs. Issue #6 allowed a global named \"<Click to add global>\" to be created. In some instances, this did not created the corresponding attribute in the units and expansion HDF5 groups.\r\n\r\nWhen globals do not have units (and presumably expansions) in the HDF5 file, and you open that group, runmanager raises an exception and creates a tab in an inconsistent state which you cannot close.\r\n\r\nFix: runmanager should create entries for units/expansion column in the HDF5 file, for each global, if they do not already exist. This will prevent crashes that require a restart of runmanager if the globals HDF5 file has a problem.", "markup": "markdown", "html": "<p>When testing with runmanager (changeset: <a href=\"#!/labscript_suite/runmanager/commits/9165e460a942\" rel=\"nofollow\" class=\"ap-connect-link\">9165e460a942</a>) there were a few bugs. Issue <a href=\"#!/labscript_suite/runmanager/issues/6/navigation-while-editing-globals-via-tab\" rel=\"nofollow\" title=\"Navigation while editing globals (via tab key) is broken\" class=\"ap-connect-link\"><s>#6</s></a> allowed a global named \"&lt;Click to add global&gt;\" to be created. In some instances, this did not created the corresponding attribute in the units and expansion HDF5 groups.</p>\n<p>When globals do not have units (and presumably expansions) in the HDF5 file, and you open that group, runmanager raises an exception and creates a tab in an inconsistent state which you cannot close.</p>\n<p>Fix: runmanager should create entries for units/expansion column in the HDF5 file, for each global, if they do not already exist. This will prevent crashes that require a restart of runmanager if the globals HDF5 file has a problem.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "new", "version": null, "edited_on": null, "created_on": "2014-09-17T00:29:42.116120+00:00", "milestone": null, "updated_on": "2014-09-17T06:09:20.861008+00:00", "type": "issue", "id": 13}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/14/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/14.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/14/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/14/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/14/cannot-select-multiple-globals-with-the"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/14/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Cannot select multiple globals with the mouse", "component": null, "votes": 0, "watches": 2, "content": {"raw": "It seems that you can't select multiple rows well.\r\n\r\nWith the mouse, it is impossible.\r\n\r\nWith the keyboard, you can select multiple rows using the shift key, but cannot use the CTRL key to select non-consecutive rows (well actually you can, if the delete column in the one with focus, and you hit ctrl+space to select the currently focussed row, but dismiss the \"do you want to delete this global popup\")\r\n\r\nThis makes the context menu a bit useless!\r\n\r\nI'm guessing this used to work, but was broken by changeset: 6f4df00f74cd", "markup": "markdown", "html": "<p>It seems that you can't select multiple rows well.</p>\n<p>With the mouse, it is impossible.</p>\n<p>With the keyboard, you can select multiple rows using the shift key, but cannot use the CTRL key to select non-consecutive rows (well actually you can, if the delete column in the one with focus, and you hit ctrl+space to select the currently focussed row, but dismiss the \"do you want to delete this global popup\")</p>\n<p>This makes the context menu a bit useless!</p>\n<p>I'm guessing this used to work, but was broken by changeset: <a href=\"#!/labscript_suite/runmanager/commits/6f4df00f74cd\" rel=\"nofollow\" class=\"ap-connect-link\">6f4df00f74cd</a></p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-09-17T00:35:57.020692+00:00", "milestone": null, "updated_on": "2014-09-17T02:33:21.127532+00:00", "type": "issue", "id": 14}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/15/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/15.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/15/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/15/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/15/global-names-are-not-checked-for-validity"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/15/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Global names are not checked for validity", "component": null, "votes": 0, "watches": 2, "content": {"raw": "I just made a global named \"7\". This isn't a valid Python name! The labscript compilation process returns a useful error (which is good) but I think the evaluation of globals should also be checking global names for validity.", "markup": "markdown", "html": "<p>I just made a global named \"7\". This isn't a valid Python name! The labscript compilation process returns a useful error (which is good) but I think the evaluation of globals should also be checking global names for validity.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-09-17T00:38:08.474336+00:00", "milestone": null, "updated_on": "2014-10-03T04:46:54.663695+00:00", "type": "issue", "id": 15}, {"priority": "blocker", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/16/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/16.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/16/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/16/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/16/cannot-start-runmanager-if-there-is-no"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/16/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Cannot start runmanager if there is no runmanager section in labconfig file", "component": null, "votes": 0, "watches": 2, "content": {"raw": "changset: 7e4a052eea2a has introduced a regression where you cannot start runmanager if there is no \"runmanager\" section in the labconfig file. \r\n\r\nLine 1083 in __main__.py raises an uncaught LabConfig.NoSectionError exception", "markup": "markdown", "html": "<p>changset: <a href=\"#!/labscript_suite/runmanager/commits/7e4a052eea2a\" rel=\"nofollow\" class=\"ap-connect-link\">7e4a052eea2a</a> has introduced a regression where you cannot start runmanager if there is no \"runmanager\" section in the labconfig file. </p>\n<p>Line 1083 in <strong>main</strong>.py raises an uncaught LabConfig.NoSectionError exception</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-09-17T05:50:33.852684+00:00", "milestone": null, "updated_on": "2014-09-17T05:56:01.455176+00:00", "type": "issue", "id": 16}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/17/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/17.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/17/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/17/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/17/missing-autoload_config_file-raises"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/17/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Missing autoload_config_file raises Exception", "component": null, "votes": 0, "watches": 2, "content": {"raw": "If the autoload_config_file parameter in the runmanager section of the LabConfig file points to a file that does not exist, an Exception is raised. \r\n\r\nGiven that we are printing \"loading default config file...\" in the output box, we should probably catch/suppress the Exception and print a warning indicating that the file could not be loaded.", "markup": "markdown", "html": "<p>If the autoload_config_file parameter in the runmanager section of the LabConfig file points to a file that does not exist, an Exception is raised. </p>\n<p>Given that we are printing \"loading default config file...\" in the output box, we should probably catch/suppress the Exception and print a warning indicating that the file could not be loaded.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-09-17T06:03:59.789446+00:00", "milestone": null, "updated_on": "2014-09-17T06:19:35.227459+00:00", "type": "issue", "id": 17}, {"priority": "blocker", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/18/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/18.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/18/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/18/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/18/cant-edit-global-name"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/18/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Can't edit global name", "component": null, "votes": 0, "watches": 2, "content": {"raw": "changeset: 70df99d28256 (commit message \"merge\") introduces a typo on line 822. I can't see where this was introduced, other than in that commit which is a bit odd.\r\n\r\nIt looks like the merge wasn't just including already committed changes?", "markup": "markdown", "html": "<p>changeset: <a href=\"#!/labscript_suite/runmanager/commits/70df99d28256\" rel=\"nofollow\" class=\"ap-connect-link\">70df99d28256</a> (commit message \"merge\") introduces a typo on line 822. I can't see where this was introduced, other than in that commit which is a bit odd.</p>\n<p>It looks like the merge wasn't just including already committed changes?</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-09-17T06:28:54.558970+00:00", "milestone": null, "updated_on": "2014-09-17T06:39:02.421841+00:00", "type": "issue", "id": 18}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/19/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/19.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/19/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/19/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/19/save-configuration-menu-entry"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/19/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "\"Save configuration\" menu entry", "component": null, "votes": 0, "watches": 2, "content": {"raw": "If you have a configuration loaded, you may want to save it. While you can \"save as\" and then overwrite, it would be easier to just have a save button!", "markup": "markdown", "html": "<p>If you have a configuration loaded, you may want to save it. While you can \"save as\" and then overwrite, it would be easier to just have a save button!</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-09-17T06:43:40.176420+00:00", "milestone": null, "updated_on": "2014-09-17T20:09:42.519452+00:00", "type": "issue", "id": 19}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/20/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/20.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/20/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/20/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/20/globals-view-scrolls-horizontally-when"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/20/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Globals view scrolls horizontally when editing (qt runmanager)", "component": null, "votes": 0, "watches": 2, "content": {"raw": "The viewport which displays globals and their values seems to scroll to align the \"Value\" column to the left hand side if the viewport is narrower than the contents (i.e. if there is a horizontal scroll bar).\r\n\r\nThis is not desired behaviour, since it means that you can no longer see the names of the globals, meaning you don't know which you are editing.", "markup": "markdown", "html": "<p>The viewport which displays globals and their values seems to scroll to align the \"Value\" column to the left hand side if the viewport is narrower than the contents (i.e. if there is a horizontal scroll bar).</p>\n<p>This is not desired behaviour, since it means that you can no longer see the names of the globals, meaning you don't know which you are editing.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-10-02T05:54:28.408517+00:00", "milestone": null, "updated_on": "2014-10-03T03:56:23.070251+00:00", "type": "issue", "id": 20}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/21/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/21.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/21/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/21/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/21/globals-are-sorted-by-delete-rather-than"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/21/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Globals are sorted by \"Delete\" rather than \"Name\"", "component": null, "votes": 0, "watches": 3, "content": {"raw": "In qt runmanager, by default, the lists of globals appear to be sorted by the \"Delete\" column, which makes no sense. In practice this reverts to sorting by \"Name\" since this is the next column across and the first which contains different values.\r\n\r\nIt would make more sense to have the arrow indicating which column is being sorted to be above this column rather than the first.", "markup": "markdown", "html": "<p>In qt runmanager, by default, the lists of globals appear to be sorted by the \"Delete\" column, which makes no sense. In practice this reverts to sorting by \"Name\" since this is the next column across and the first which contains different values.</p>\n<p>It would make more sense to have the arrow indicating which column is being sorted to be above this column rather than the first.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-10-02T05:57:36.256143+00:00", "milestone": null, "updated_on": "2014-10-02T23:58:53.131031+00:00", "type": "issue", "id": 21}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/22/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/22.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/22/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/22/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/22/globals-are-not-resorted-when-a-value-in"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/22/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Globals are not resorted when a value in the chosen sort column is changed", "component": null, "votes": 0, "watches": 2, "content": {"raw": "If you rename a global, and the group is sorted by name, you would expect it to resort the global into the correct place. This does not happen in the Qt runmanager (while it did in the GTK runmanager).\r\n\r\nThis bug similarly applies when adding a new global.", "markup": "markdown", "html": "<p>If you rename a global, and the group is sorted by name, you would expect it to resort the global into the correct place. This does not happen in the Qt runmanager (while it did in the GTK runmanager).</p>\n<p>This bug similarly applies when adding a new global.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-10-02T06:01:54.857777+00:00", "milestone": null, "updated_on": "2014-10-03T03:13:32.546899+00:00", "type": "issue", "id": 22}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/23/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/23.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/23/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/23/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/23/cursor-going-to-end-of-entry-when-clicked"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/23/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Cursor going to end of entry when clicked for editing vs highlighting the entry", "component": null, "votes": 0, "watches": 2, "content": {"raw": "There is a subtle difference between the way the text in an entry which is about to be edited is presented in Qt runmanager compared with GTK runmanager:\r\n\r\nIn GTK, the text is all highlighted as being selected, with no blinking cursor. If you start typing it will replace the highlighted text, but if you hit a sideways arrow, the cursor will appear at that end of the text box.\r\n\r\nIn Qt, the text is also highlighted, so you can still overwrite an entry by starting to type without selecting a cursor position, however there is a blinking cursor at the right hand end of the text. If you hit the left arrow, the highlight goes away and the cursor moves to the second last position in the text, rather than the start of the text box.\r\n\r\nYou can still quickly get the cursor to the start of the text box by hitting \"home\" rather than the arrow key, so this is a very low priority, and more a case of us having to change our habits when editing globals (we often keep old values or notes in the end of a global value as python comments, so generally want to edit the start of the string rather than the end.\r\nJust thought I'd document the fact that there is some slight difference in the behaviour.", "markup": "markdown", "html": "<p>There is a subtle difference between the way the text in an entry which is about to be edited is presented in Qt runmanager compared with GTK runmanager:</p>\n<p>In GTK, the text is all highlighted as being selected, with no blinking cursor. If you start typing it will replace the highlighted text, but if you hit a sideways arrow, the cursor will appear at that end of the text box.</p>\n<p>In Qt, the text is also highlighted, so you can still overwrite an entry by starting to type without selecting a cursor position, however there is a blinking cursor at the right hand end of the text. If you hit the left arrow, the highlight goes away and the cursor moves to the second last position in the text, rather than the start of the text box.</p>\n<p>You can still quickly get the cursor to the start of the text box by hitting \"home\" rather than the arrow key, so this is a very low priority, and more a case of us having to change our habits when editing globals (we often keep old values or notes in the end of a global value as python comments, so generally want to edit the start of the string rather than the end.\nJust thought I'd document the fact that there is some slight difference in the behaviour.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "new", "version": null, "edited_on": null, "created_on": "2014-10-03T00:31:58.043710+00:00", "milestone": null, "updated_on": "2014-10-03T22:09:51.349187+00:00", "type": "issue", "id": 23}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/24/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/24.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/24/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/24/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/24/globals-with-fixed-length-string-are-not"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/24/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Globals with fixed length string are not sorted correctly in Qt", "component": null, "votes": 0, "watches": 2, "content": {"raw": "GTK runmanager used fixed length strings to store globals, whereas Qt runmanager uses variable length strings.\r\n\r\nIn Qt runmanager, if you load a globals file which was created with GTK runmanager, the variables which were created in GTK will not sort by value, units or expansion, only name. Once you have modified one of these columns for a global, it will start sorting as expected, amongst other globals which have been edited or created in Qt runmanager.", "markup": "markdown", "html": "<p>GTK runmanager used fixed length strings to store globals, whereas Qt runmanager uses variable length strings.</p>\n<p>In Qt runmanager, if you load a globals file which was created with GTK runmanager, the variables which were created in GTK will not sort by value, units or expansion, only name. Once you have modified one of these columns for a global, it will start sorting as expected, amongst other globals which have been edited or created in Qt runmanager.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-10-03T06:31:06.772540+00:00", "milestone": null, "updated_on": "2014-10-04T06:16:22.519067+00:00", "type": "issue", "id": 24}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/25/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/25.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/25/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/25/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/25/global-evaluation-should-use-float"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/25/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "global evaluation should use float division", "component": null, "votes": 0, "watches": 1, "content": {"raw": "1/2 == 0 is not expected in globals. Here is how to fix it:\r\n\r\nhttp://stackoverflow.com/questions/9407640/python-eval-that-coerces-values-to-floating-point\r\n\r\nThis is just a note to myself so i don't forget to so this", "markup": "markdown", "html": "<p>1/2 == 0 is not expected in globals. Here is how to fix it:</p>\n<p><a href=\"http://stackoverflow.com/questions/9407640/python-eval-that-coerces-values-to-floating-point\" rel=\"nofollow\" class=\"ap-connect-link\">http://stackoverflow.com/questions/9407640/python-eval-that-coerces-values-to-floating-point</a></p>\n<p>This is just a note to myself so i don't forget to so this</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-10-03T18:12:58.521175+00:00", "milestone": null, "updated_on": "2017-08-07T03:47:30.785022+00:00", "type": "issue", "id": 25}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/26/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/26.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/26/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/26/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/26/new-globals-file-creation-does-not"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/26/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "New globals file creation does not automatically append .h5 to filename", "component": null, "votes": 0, "watches": 1, "content": {"raw": "'.h5' should be appended to the filename if the user doesn't explicitly type it.\r\n\r\nThis might be a setting with the QFileDialog, if not we should do it manually.", "markup": "markdown", "html": "<p>'.h5' should be appended to the filename if the user doesn't explicitly type it.</p>\n<p>This might be a setting with the QFileDialog, if not we should do it manually.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "new", "version": null, "edited_on": null, "created_on": "2014-10-03T22:29:46.248260+00:00", "milestone": null, "updated_on": "2017-09-09T20:11:30.121540+00:00", "type": "issue", "id": 26}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/27/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/27.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/27/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/27/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/27/more-standard-saving-and-loading-of"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/27/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "More standard saving and loading of globals from h5 files, file changed on disk detection", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When I first write runmanager, globals were written to the HDF5 file on every *keystroke*. Now they are written when you finish editing a cell.\r\n\r\nI propose to further demote this to only saving when prompted. You know, the way normal applications work where data is unsaved until you save it.\r\n\r\nThe main benefit of this is being able to muck with globals willy-nilly without fearing breaking things, because you can just revert, or not save on exit.\r\n\r\nIt would not even be hard to implement. On file-open, runmanager would make a copy of the file in a temporary directory. The user would edit globals on a per-group basis, which would display an asterisk or some other visual indication that they were unsaved. There would be a menu item and keyboard shortcut to save the currently visible group, and you would be prompted to save a group upon closing. Upon saving a group, that group would be copied over to the actual file, from the temporary file.\r\n\r\nRunmanager would allow you to run shots when globals were unsaved. This is safe because it is not a pointer to the globals files that is stored in the shot files, it is the globals themselves. So there is seemingly no benefit to forcing the user to save globals before compiling.\r\n\r\nYou would also be able to 'save as'.\r\n\r\nWhen another process changes the original h5 file on disk, the user should be able to choose whether to abandon their changes and reload groups from the file, or overwrite the changes. Like other programs that do this, we would not provide indication of what has changed.", "markup": "markdown", "html": "<p>When I first write runmanager, globals were written to the HDF5 file on every <em>keystroke</em>. Now they are written when you finish editing a cell.</p>\n<p>I propose to further demote this to only saving when prompted. You know, the way normal applications work where data is unsaved until you save it.</p>\n<p>The main benefit of this is being able to muck with globals willy-nilly without fearing breaking things, because you can just revert, or not save on exit.</p>\n<p>It would not even be hard to implement. On file-open, runmanager would make a copy of the file in a temporary directory. The user would edit globals on a per-group basis, which would display an asterisk or some other visual indication that they were unsaved. There would be a menu item and keyboard shortcut to save the currently visible group, and you would be prompted to save a group upon closing. Upon saving a group, that group would be copied over to the actual file, from the temporary file.</p>\n<p>Runmanager would allow you to run shots when globals were unsaved. This is safe because it is not a pointer to the globals files that is stored in the shot files, it is the globals themselves. So there is seemingly no benefit to forcing the user to save globals before compiling.</p>\n<p>You would also be able to 'save as'.</p>\n<p>When another process changes the original h5 file on disk, the user should be able to choose whether to abandon their changes and reload groups from the file, or overwrite the changes. Like other programs that do this, we would not provide indication of what has changed.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "new", "version": null, "edited_on": null, "created_on": "2014-10-03T22:44:42.689816+00:00", "milestone": null, "updated_on": "2014-10-08T01:09:14.671496+00:00", "type": "issue", "id": 27}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/28/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/28.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/28/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/28/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/28/batch-compiler-does-not-notice-changes-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/28/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Batch compiler does not notice changes to unit conversions", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Because `labscript` itself is whitelisted by the `ModuleWatcher` used in `batch_compiler.py`, `labscript` and anything it imports do not get watched for changes and unloaded if they change.\r\n\r\n`labscript` imports `labscript_utils.unitconversions`, and so `unitconversions` is whitelisted and not reloaded. This is a problem! Unit conversions change, and new ones are introduced! We were making new ones today and were absolutely perplexed that our labscript code could not import them, until we realised what the problem was.\r\n\r\nPerhaps `batch_compiler.py` can remove unitconversions from the its ModuleWatcher's whitelist.\r\n\r\nBut a better solution would probably be to have `labscript` not import `unitconversions`.\r\n\r\nUsers should probably import the `unitconversions` they need explicitly, at which point they will be handled as normal by the `ModuleWatcher`.\r\n\r\nIt's true that some devices have default unit conversions they rely on, but these devices are not in labscript core, but rather in `labscript_devices`.\r\n\r\nIf a device in labscript core requires a unit conversions class, it should be imported explicitly so that only its module ends up on the whitelist.\r\n\r\nTo ensure all unit conversion modules don't get run whenever a single one is imported, the gathering of unit conversion classes (for BLACS to look them up by name for example) should be done on a function call, rather than an import. That way anyone can import a specific unit conversions class without worrying that `unitconversions/__init__.py` will go and import everyone else's code, and we won't accidentally white listthings for the`ModuleWatcher` that we didn't realise we were importing.", "markup": "markdown", "html": "<p>Because <code>labscript</code> itself is whitelisted by the <code>ModuleWatcher</code> used in <code>batch_compiler.py</code>, <code>labscript</code> and anything it imports do not get watched for changes and unloaded if they change.</p>\n<p><code>labscript</code> imports <code>labscript_utils.unitconversions</code>, and so <code>unitconversions</code> is whitelisted and not reloaded. This is a problem! Unit conversions change, and new ones are introduced! We were making new ones today and were absolutely perplexed that our labscript code could not import them, until we realised what the problem was.</p>\n<p>Perhaps <code>batch_compiler.py</code> can remove unitconversions from the its ModuleWatcher's whitelist.</p>\n<p>But a better solution would probably be to have <code>labscript</code> not import <code>unitconversions</code>.</p>\n<p>Users should probably import the <code>unitconversions</code> they need explicitly, at which point they will be handled as normal by the <code>ModuleWatcher</code>.</p>\n<p>It's true that some devices have default unit conversions they rely on, but these devices are not in labscript core, but rather in <code>labscript_devices</code>.</p>\n<p>If a device in labscript core requires a unit conversions class, it should be imported explicitly so that only its module ends up on the whitelist.</p>\n<p>To ensure all unit conversion modules don't get run whenever a single one is imported, the gathering of unit conversion classes (for BLACS to look them up by name for example) should be done on a function call, rather than an import. That way anyone can import a specific unit conversions class without worrying that <code>unitconversions/__init__.py</code> will go and import everyone else's code, and we won't accidentally white listthings for the<code>ModuleWatcher</code> that we didn't realise we were importing.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "new", "version": null, "edited_on": null, "created_on": "2014-10-03T23:31:24.664639+00:00", "milestone": null, "updated_on": "2014-10-03T23:31:24.664639+00:00", "type": "issue", "id": 28}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/29/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/29.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/29/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/29/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/29/standard-output-and-standard-error-of"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/29/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Standard output and standard error of subprocess out of sync.", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Child process returns nonsense ordering of standard out and standard error, as if the two are being written to from separate threads, even when they're not.\r\n\r\nThis requires a fix in zprocess, and then runmanager will have to change to use it.\r\n\r\nAlso this looks terrible, howcome nobody reported this as a big before? :p", "markup": "markdown", "html": "<p>Child process returns nonsense ordering of standard out and standard error, as if the two are being written to from separate threads, even when they're not.</p>\n<p>This requires a fix in zprocess, and then runmanager will have to change to use it.</p>\n<p>Also this looks terrible, howcome nobody reported this as a big before? :p</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-10-03T23:51:09.847961+00:00", "milestone": null, "updated_on": "2014-10-04T08:53:06.716507+00:00", "type": "issue", "id": 29}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/30/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/30.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/30/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/30/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/30/output-of-multiple-compilations-not-easily"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/30/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Output of multiple compilations not easily distinguishable", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Runmanager should print something big and obvious and horizontal-line-looking when it starts to compile a shot, so that when you scroll up to see what went wrong, you can tell where the previous red mess of errors ends and the current one starts.\r\n\r\nIt should contain the name of the shot file, and maybe it should even be in a different colour, the possibilities are endless. ", "markup": "markdown", "html": "<p>Runmanager should print something big and obvious and horizontal-line-looking when it starts to compile a shot, so that when you scroll up to see what went wrong, you can tell where the previous red mess of errors ends and the current one starts.</p>\n<p>It should contain the name of the shot file, and maybe it should even be in a different colour, the possibilities are endless. </p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "new", "version": null, "edited_on": null, "created_on": "2014-10-04T00:52:58.397276+00:00", "milestone": null, "updated_on": "2014-10-04T00:52:58.397276+00:00", "type": "issue", "id": 30}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/31/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/31.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/31/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/31/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/31/axes-tab-control-over-loop-order-of"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/31/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Axes tab - control over loop order of parameter space and shuffling of individual axes", "component": null, "votes": 1, "watches": 3, "content": {"raw": "There is a half-written tab in runmanager labelled 'Axes', with a big blue Kronecker product icon on it.\r\n\r\nThis is a tab supposed to provide an overview of the currently described parameter space. It will have a nested treeview, with one entry for each axis being outer-producted, each as a child row of the one above it. This nesting, which will give each row indentation compared to the row above it, will reflect and dictate the order in which the axes are to be looped over while producing shots out of the parameter space. The order will be like that of a nested 'for' loop in code \u2014 the top level with the least indentation will be the one iterated over most slowly, and the bottom level iterated fastest.\r\n\r\nEach axis will have a 'shuffle' checkbox for whether that axis is to have its order randomised. This makes the global shuffle button a little redundant, but I think we should leave it in as a global switch to flick all the checkbuttons on and off, and visually show it as ambiguous (in whatever the most standard way to do that on a pushbutton is, I'll have to look up - otherwise maybe stick an icon of a checkbox on it showing the ambiguous state) if there is a mix of shuffle states on the axes.\r\n\r\nAn axis might be an outer-producted global, or a zip group. In the latter case the name of the zip group will be shown instead of the name of the globals therein, though perhaps we could show the globals too at an equal level of the heirarchy. But if that's hard, I'll put it in a tooltip instead.\r\n\r\nThe loop order will be reorderable via buttons on the side that move an item up or down, or possibly by drag and drop if it's easy enough to do.", "markup": "markdown", "html": "<p>There is a half-written tab in runmanager labelled 'Axes', with a big blue Kronecker product icon on it.</p>\n<p>This is a tab supposed to provide an overview of the currently described parameter space. It will have a nested treeview, with one entry for each axis being outer-producted, each as a child row of the one above it. This nesting, which will give each row indentation compared to the row above it, will reflect and dictate the order in which the axes are to be looped over while producing shots out of the parameter space. The order will be like that of a nested 'for' loop in code \u2014 the top level with the least indentation will be the one iterated over most slowly, and the bottom level iterated fastest.</p>\n<p>Each axis will have a 'shuffle' checkbox for whether that axis is to have its order randomised. This makes the global shuffle button a little redundant, but I think we should leave it in as a global switch to flick all the checkbuttons on and off, and visually show it as ambiguous (in whatever the most standard way to do that on a pushbutton is, I'll have to look up - otherwise maybe stick an icon of a checkbox on it showing the ambiguous state) if there is a mix of shuffle states on the axes.</p>\n<p>An axis might be an outer-producted global, or a zip group. In the latter case the name of the zip group will be shown instead of the name of the globals therein, though perhaps we could show the globals too at an equal level of the heirarchy. But if that's hard, I'll put it in a tooltip instead.</p>\n<p>The loop order will be reorderable via buttons on the side that move an item up or down, or possibly by drag and drop if it's easy enough to do.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "closed", "version": null, "edited_on": null, "created_on": "2014-10-04T01:10:44.619755+00:00", "milestone": null, "updated_on": "2018-02-26T22:34:22.564861+00:00", "type": "issue", "id": 31}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/32/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/32.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/32/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/32/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/32/output-box-scrolling-issues"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/32/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Output box scrolling issues", "component": null, "votes": 0, "watches": 2, "content": {"raw": "I haven't paid enough attention to be able to pinpoint what exact circumstances lead to it, but quite often in qt-runmanager the output box will end up with lots of extra whitespace (well, blackspace I guess!) at the bottom, pushing the printed information to the top of the screen. It seems to be related to changing tabs. It seems to catch up with itself when you get it to sit at the bottom of the scroll bar while a labscript is compiling and spitting out lines to be printed in the box.", "markup": "markdown", "html": "<p>I haven't paid enough attention to be able to pinpoint what exact circumstances lead to it, but quite often in qt-runmanager the output box will end up with lots of extra whitespace (well, blackspace I guess!) at the bottom, pushing the printed information to the top of the screen. It seems to be related to changing tabs. It seems to catch up with itself when you get it to sit at the bottom of the scroll bar while a labscript is compiling and spitting out lines to be printed in the box.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "new", "version": null, "edited_on": null, "created_on": "2015-01-23T04:33:58.027716+00:00", "milestone": null, "updated_on": "2015-01-23T04:33:58.027716+00:00", "type": "issue", "id": 32}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/33/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/33.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/33/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/33/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/33/abort-button-only-stops-current-sequence"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/33/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Abort button only stops current sequence of shots", "component": null, "votes": 0, "watches": 2, "content": {"raw": "If you click engage to start compiling a sequence of shots across some parameter space, then click again to start a second sequence compiling, then hit abort while the first is still compiling, the second sequence will still be compiled, and the abort button is greyed out so that you cannot abort it.", "markup": "markdown", "html": "<p>If you click engage to start compiling a sequence of shots across some parameter space, then click again to start a second sequence compiling, then hit abort while the first is still compiling, the second sequence will still be compiled, and the abort button is greyed out so that you cannot abort it.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "new", "version": null, "edited_on": null, "created_on": "2015-05-25T06:27:52.795246+00:00", "milestone": null, "updated_on": "2015-05-25T06:28:22.005849+00:00", "type": "issue", "id": 33}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/34/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/34.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/34/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/34/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/34/globals-tabs-can-be-relocated-before-the"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/34/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Globals tabs can be relocated before the fixed tabs", "component": null, "votes": 0, "watches": 2, "content": {"raw": "This is a bug with the GUI. The GUI is coded such that the Output/Axes/Groups tabs cannot be reordered. However, you can drag a loaded globals tab to any position, including between the fixed tabs. This then allows to to reorder the Groups tab, while the globals tab is now fixed.\r\n\r\nIt looks like the first 3 tabs are not movable, regardless of what tab they are, and tabs beyond the first 3 can be inserted wherever, breaking the design of the first three becoming unmovable.", "markup": "markdown", "html": "<p>This is a bug with the GUI. The GUI is coded such that the Output/Axes/Groups tabs cannot be reordered. However, you can drag a loaded globals tab to any position, including between the fixed tabs. This then allows to to reorder the Groups tab, while the globals tab is now fixed.</p>\n<p>It looks like the first 3 tabs are not movable, regardless of what tab they are, and tabs beyond the first 3 can be inserted wherever, breaking the design of the first three becoming unmovable.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "new", "version": null, "edited_on": null, "created_on": "2015-08-06T06:47:37.640121+00:00", "milestone": null, "updated_on": "2015-08-06T06:47:37.640121+00:00", "type": "issue", "id": 34}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/35/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/35.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/35/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/35/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/35/asynchronous-compilation-functions-should"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/35/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Asynchronous compilation functions should handle exceptions gracefully", "component": null, "votes": 0, "watches": 2, "content": {"raw": "The asynchronous compilation functions of the runmanager API need to catch exceptions in the worker processes and call `done_callback(False)` so that calling code is not stuck waiting for the runmanager API to finish compilation (when it has actually crashed and given up).\r\n\r\nSee #!/labscript_suite/blacs/issues/12/error-not-handled-well-during-connection", "markup": "markdown", "html": "<p>The asynchronous compilation functions of the runmanager API need to catch exceptions in the worker processes and call <code>done_callback(False)</code> so that calling code is not stuck waiting for the runmanager API to finish compilation (when it has actually crashed and given up).</p>\n<p>See <a href=\"#!/labscript_suite/blacs/issues/12/error-not-handled-well-during-connection\" rel=\"nofollow\" class=\"ap-connect-link\">#!/labscript_suite/blacs/issues/12/error-not-handled-well-during-connection</a></p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "new", "version": null, "edited_on": null, "created_on": "2015-09-21T01:25:04.361978+00:00", "milestone": null, "updated_on": "2015-09-21T01:25:04.361978+00:00", "type": "issue", "id": 35}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/36/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/36.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/36/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/36/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/36/the-engage-button-should-say-how-many"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/36/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "The engage button should say how many shots will be compiled", "component": null, "votes": 0, "watches": 2, "content": {"raw": "I think it would be good if the engage button instead said \"Engage (7)\" meaning there will be 7 shots compiled. This way you don't accidentally compile 50 billion shots when you only meant to compile 10 billion shots :)", "markup": "markdown", "html": "<p>I think it would be good if the engage button instead said \"Engage (7)\" meaning there will be 7 shots compiled. This way you don't accidentally compile 50 billion shots when you only meant to compile 10 billion shots :)</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-02-17T05:26:52.093090+00:00", "milestone": null, "updated_on": "2016-09-07T01:46:31.641439+00:00", "type": "issue", "id": 36}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/37/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/37.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/37/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/37/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/37/ability-to-star-or-favourite-globals"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/37/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Ability to \"star\" or favourite globals", "component": null, "votes": 0, "watches": 1, "content": {"raw": "It would be really handy if we could have a tab that shows starred/favourite globals.\r\n\r\nOften when you are doing a particular task, you need to regularly change globals across multiple tabs (perhaps even from shot to shot when trying to diagnose something). Being able to set a group of favourite globals would be handy when you know you're about to spend a few hours using them over and over again!", "markup": "markdown", "html": "<p>It would be really handy if we could have a tab that shows starred/favourite globals.</p>\n<p>Often when you are doing a particular task, you need to regularly change globals across multiple tabs (perhaps even from shot to shot when trying to diagnose something). Being able to set a group of favourite globals would be handy when you know you're about to spend a few hours using them over and over again!</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-09-07T01:49:06.726152+00:00", "milestone": null, "updated_on": "2016-09-07T01:49:06.726152+00:00", "type": "issue", "id": 37}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/38/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/38.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/38/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/38/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/38/saving-length-of-array-to-global-throws"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/38/vote"}}, "reporter": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "title": "Saving Length of Array to global throws KeyError", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I have a global with a calculated numpy array. When I try to save the size of the array in another global (using darray.size or len(darray)) for further use I get the following traceback.\r\n\r\n```\r\n#!python\r\nTraceback (most recent call last):\r\n  File \"C:\\Anaconda2\\envs\\labscript\\lib\\threading.py\", line 754, in run\r\n    self.__target(*self.__args, **self.__kwargs)\r\n  File \"C:\\Anaconda2\\envs\\labscript\\lib\\site-packages\\zprocess\\__init__.py\", line 67, in f\r\n    six.reraise(type, value, traceback)\r\n  File \"__main__.py\", line 2273, in preparse_globals_loop\r\n    self.preparse_globals()\r\n  File \"__main__.py\", line 2250, in preparse_globals\r\n    active_groups, evaled_globals, global_hierarchy, expansions)\r\n  File \"__main__.py\", line 2975, in guess_expansion_modes\r\n    expansion_types[dependency]['new_guess'] = str(global_name)\r\nKeyError: u'numStates'\r\n\r\n```\r\nDoing some digging I've found that my length variable is being added as a dependency of the original array but it is not being populated in the expansions and expansion_types dictionaries, hence the key failure.\r\n\r\nI suppose I could just calculate the required length external to runmanager where needed but it would be nice to have it as a global. Am I missing something obvious or is there something more fundamental going on?", "markup": "markdown", "html": "<p>I have a global with a calculated numpy array. When I try to save the size of the array in another global (using darray.size or len(darray)) for further use I get the following traceback.</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\Anaconda2\\envs\\labscript\\lib</span><span class=\"se\">\\t</span><span class=\"s2\">hreading.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">754</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">run</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__target</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\Anaconda2\\envs\\labscript\\lib\\site-packages\\zprocess\\__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">67</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">f</span>\n    <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">reraise</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">traceback</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2273</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">preparse_globals_loop</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">preparse_globals</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2250</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">preparse_globals</span>\n    <span class=\"n\">active_groups</span><span class=\"p\">,</span> <span class=\"n\">evaled_globals</span><span class=\"p\">,</span> <span class=\"n\">global_hierarchy</span><span class=\"p\">,</span> <span class=\"n\">expansions</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2975</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">guess_expansion_modes</span>\n    <span class=\"n\">expansion_types</span><span class=\"p\">[</span><span class=\"n\">dependency</span><span class=\"p\">][</span><span class=\"s1\">&#39;new_guess&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">global_name</span><span class=\"p\">)</span>\n<span class=\"ne\">KeyError</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">&#39;numStates&#39;</span>\n</pre></div>\n\n\n<p>Doing some digging I've found that my length variable is being added as a dependency of the original array but it is not being populated in the expansions and expansion_types dictionaries, hence the key failure.</p>\n<p>I suppose I could just calculate the required length external to runmanager where needed but it would be nice to have it as a global. Am I missing something obvious or is there something more fundamental going on?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-12T20:00:57.669571+00:00", "milestone": null, "updated_on": "2017-06-13T14:55:23.108287+00:00", "type": "issue", "id": 38}, {"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/39/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/39.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/39/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/39/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/39/new-folder-for-each-engage"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/39/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "New Folder for each engage", "component": null, "votes": 0, "watches": 2, "content": {"raw": "In our lab we commonly run a series of a few hundred shots, then tweak a few globals and run that series again.\r\nThis generates a lot of h5 Files and since not all series workout, we sometimes want to delete a whole series in bundle. \r\nCurrently this is quite cumbersome since we need to finde the files, that belong to one shot in the many hundreds of files generated that day.\r\n\r\nI propose creating a new Folder each time engage is clicked by changing the make_h5_files function in the following way:\r\n\r\n```\r\n#!python\r\n    def make_h5_files(self, labscript_file, output_folder, sequence_globals, shots, shuffle):\r\n        sequence_id = runmanager.generate_sequence_id(labscript_file)\r\n        output_folder = os.path.join(output_folder, sequence_id.split('T')[1].split('_')[0])\r\n        mkdir_p(output_folder)  # ensure it exists\r\n        run_files = runmanager.make_run_files(output_folder, sequence_globals, shots, sequence_id, shuffle)\r\n        logger.debug(run_files)\r\n        return labscript_file, run_files\r\n\r\n```", "markup": "markdown", "html": "<p>In our lab we commonly run a series of a few hundred shots, then tweak a few globals and run that series again.\nThis generates a lot of h5 Files and since not all series workout, we sometimes want to delete a whole series in bundle. \nCurrently this is quite cumbersome since we need to finde the files, that belong to one shot in the many hundreds of files generated that day.</p>\n<p>I propose creating a new Folder each time engage is clicked by changing the make_h5_files function in the following way:</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"k\">def</span> <span class=\"nf\">make_h5_files</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">labscript_file</span><span class=\"p\">,</span> <span class=\"n\">output_folder</span><span class=\"p\">,</span> <span class=\"n\">sequence_globals</span><span class=\"p\">,</span> <span class=\"n\">shots</span><span class=\"p\">,</span> <span class=\"n\">shuffle</span><span class=\"p\">):</span>\n        <span class=\"n\">sequence_id</span> <span class=\"o\">=</span> <span class=\"n\">runmanager</span><span class=\"o\">.</span><span class=\"n\">generate_sequence_id</span><span class=\"p\">(</span><span class=\"n\">labscript_file</span><span class=\"p\">)</span>\n        <span class=\"n\">output_folder</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">output_folder</span><span class=\"p\">,</span> <span class=\"n\">sequence_id</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;T&#39;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;_&#39;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"n\">mkdir_p</span><span class=\"p\">(</span><span class=\"n\">output_folder</span><span class=\"p\">)</span>  <span class=\"c1\"># ensure it exists</span>\n        <span class=\"n\">run_files</span> <span class=\"o\">=</span> <span class=\"n\">runmanager</span><span class=\"o\">.</span><span class=\"n\">make_run_files</span><span class=\"p\">(</span><span class=\"n\">output_folder</span><span class=\"p\">,</span> <span class=\"n\">sequence_globals</span><span class=\"p\">,</span> <span class=\"n\">shots</span><span class=\"p\">,</span> <span class=\"n\">sequence_id</span><span class=\"p\">,</span> <span class=\"n\">shuffle</span><span class=\"p\">)</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"n\">run_files</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">labscript_file</span><span class=\"p\">,</span> <span class=\"n\">run_files</span>\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-13T19:20:12.862422+00:00", "milestone": null, "updated_on": "2019-04-21T08:53:49.991613+00:00", "type": "issue", "id": 39}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/40/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/40.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/40/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/40/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/40/globals-diffing-broken-in-pandas-0201"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/40/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Globals diffing broken in pandas 0.20.1", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Globals diffing is broken with pandas 0.20.1\r\n\r\n\r\n```\r\n#!python\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/cjb7/labscript_suite/runmanager/__main__.py\", line 1942, in on_diff_globals_file_clicked\r\n    globals_diff_table = runmanager.globals_diff_groups(active_groups, other_groups)\r\n  File \"/home/cjb7/labscript_suite/runmanager/__init__.py\", line 805, in globals_diff_groups\r\n    df = df.sort()\r\n  File \"/usr/local/lib/python2.7/dist-packages/pandas/core/generic.py\", line 2970, in __getattr__\r\n    return object.__getattribute__(self, name)\r\nAttributeError: 'DataFrame' object has no attribute 'sort'\r\n```", "markup": "markdown", "html": "<p>Globals diffing is broken with pandas 0.20.1</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/home/cjb7/labscript_suite/runmanager/__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1942</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">on_diff_globals_file_clicked</span>\n    <span class=\"n\">globals_diff_table</span> <span class=\"o\">=</span> <span class=\"n\">runmanager</span><span class=\"o\">.</span><span class=\"n\">globals_diff_groups</span><span class=\"p\">(</span><span class=\"n\">active_groups</span><span class=\"p\">,</span> <span class=\"n\">other_groups</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/home/cjb7/labscript_suite/runmanager/__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">805</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">globals_diff_groups</span>\n    <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pandas/core/generic.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2970</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__getattr__</span>\n    <span class=\"k\">return</span> <span class=\"nb\">object</span><span class=\"o\">.</span><span class=\"fm\">__getattribute__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"ne\">AttributeError</span><span class=\"p\">:</span> <span class=\"s1\">&#39;DataFrame&#39;</span> <span class=\"nb\">object</span> <span class=\"n\">has</span> <span class=\"n\">no</span> <span class=\"n\">attribute</span> <span class=\"s1\">&#39;sort&#39;</span>\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-15T20:14:14.264340+00:00", "milestone": null, "updated_on": "2017-07-28T22:08:10.344710+00:00", "type": "issue", "id": 40}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/41/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/41.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/41/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/41/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/41/saving-and-restoration-of-window-size"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/41/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Saving and restoration of window size & location", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When runmanager is restarted, it defaults to its original size, with the \"output\" window docked to the main window. Usually we use it snapped to half a window, with the output window popped out taking up the other half. Is it possible to have runmanager remember how it was displayed before closing, so that it can re-open in the user's preferred configuration automatically?", "markup": "markdown", "html": "<p>When runmanager is restarted, it defaults to its original size, with the \"output\" window docked to the main window. Usually we use it snapped to half a window, with the output window popped out taking up the other half. Is it possible to have runmanager remember how it was displayed before closing, so that it can re-open in the user's preferred configuration automatically?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-06-19T01:00:08.820957+00:00", "milestone": null, "updated_on": "2017-06-19T01:02:21.387971+00:00", "type": "issue", "id": 41}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/42/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/42.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/42/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/42/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/42/compilation-errors-immediately-following"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/42/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Compilation errors immediately following changes to labscript_utils", "component": null, "votes": 0, "watches": 2, "content": {"raw": "It seems as though when changes are made to labscript_utils, runmanager notices, and reloads modules to ensure that everything still works. However, the first time you compile after this, there are often unusual errors, such as the following:\r\n\r\n```\r\n#!python\r\n\r\nC:\\labscript_suite\\labscript_utils\\qtwidgets\\elide_label.py modified: all modules will be reloaded next run.\r\nTraceback (most recent call last):\r\n  File \"C:\\labscript_suite\\userlib\\labscriptlib\\krb\\flat_trap_rb_bottom_z_lev.py\", line 1443, in <module>\r\n    stop(t + 200e-6)\r\n  File \"C:\\labscript_suite\\labscript\\labscript.py\", line 2003, in stop\r\n    generate_code()\r\n  File \"C:\\labscript_suite\\labscript\\labscript.py\", line 1914, in generate_code\r\n    device.generate_code(hdf5_file)\r\n  File \"C:\\labscript_suite\\labscript_devices\\PulseBlaster.py\", line 550, in generate_code\r\n    PseudoclockDevice.generate_code(self, hdf5_file)\r\n  File \"C:\\labscript_suite\\labscript\\labscript.py\", line 899, in generate_code\r\n    Device.generate_code(self, hdf5_file)\r\n  File \"C:\\labscript_suite\\labscript\\labscript.py\", line 393, in generate_code\r\n    device.generate_code(hdf5_file)\r\n  File \"C:\\labscript_suite\\labscript\\labscript.py\", line 785, in generate_code\r\n    self.generate_clock()\r\n  File \"C:\\labscript_suite\\labscript\\labscript.py\", line 773, in generate_clock\r\n    output.expand_timeseries(all_times[clock_line])\r\n  File \"C:\\labscript_suite\\labscript\\labscript.py\", line 1185, in expand_timeseries\r\n    outarray = self.timeseries[i]['function'](midpoints-self.timeseries[i]['initial time'])\r\n  File \"C:\\labscript_suite\\userlib\\labscriptlib\\krb\\switchablecoildriver.py\", line 210, in <lambda>\r\n    self.analogout.add_instruction(t, {'function': lambda x: abs(functions.sine_ramp(duration, initial, final)(x)), 'description':'sinusoidal ramp',\r\nAttributeError: 'NoneType' object has no attribute 'sine_ramp'\r\nCompilation aborted.\r\n```\r\nClicking \"Engage\" again will result in a normal compilation.\r\n\r\nCould this be a result of modules not being reloaded before runmanager starts the compilation? Can we make it wait until everything is ready to go so that this is avoided?", "markup": "markdown", "html": "<p>It seems as though when changes are made to labscript_utils, runmanager notices, and reloads modules to ensure that everything still works. However, the first time you compile after this, there are often unusual errors, such as the following:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">C</span><span class=\"p\">:</span>\\<span class=\"n\">labscript_suite</span>\\<span class=\"n\">labscript_utils</span>\\<span class=\"n\">qtwidgets</span>\\<span class=\"n\">elide_label</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">modified</span><span class=\"p\">:</span> <span class=\"nb\">all</span> <span class=\"n\">modules</span> <span class=\"n\">will</span> <span class=\"n\">be</span> <span class=\"n\">reloaded</span> <span class=\"nb\">next</span> <span class=\"n\">run</span><span class=\"o\">.</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\userlib\\labscriptlib\\krb</span><span class=\"se\">\\f</span><span class=\"s2\">lat_trap_rb_bottom_z_lev.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1443</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">stop</span><span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">+</span> <span class=\"mf\">200e-6</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2003</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">stop</span>\n    <span class=\"n\">generate_code</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1914</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_code</span>\n    <span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">generate_code</span><span class=\"p\">(</span><span class=\"n\">hdf5_file</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript_devices\\PulseBlaster.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">550</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_code</span>\n    <span class=\"n\">PseudoclockDevice</span><span class=\"o\">.</span><span class=\"n\">generate_code</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">hdf5_file</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">899</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_code</span>\n    <span class=\"n\">Device</span><span class=\"o\">.</span><span class=\"n\">generate_code</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">hdf5_file</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">393</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_code</span>\n    <span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">generate_code</span><span class=\"p\">(</span><span class=\"n\">hdf5_file</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">785</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_code</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">generate_clock</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">773</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">generate_clock</span>\n    <span class=\"n\">output</span><span class=\"o\">.</span><span class=\"n\">expand_timeseries</span><span class=\"p\">(</span><span class=\"n\">all_times</span><span class=\"p\">[</span><span class=\"n\">clock_line</span><span class=\"p\">])</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript\\labscript.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1185</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">expand_timeseries</span>\n    <span class=\"n\">outarray</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"s1\">&#39;function&#39;</span><span class=\"p\">](</span><span class=\"n\">midpoints</span><span class=\"o\">-</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"s1\">&#39;initial time&#39;</span><span class=\"p\">])</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\userlib\\labscriptlib\\krb\\switchablecoildriver.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">210</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"k\">lambda</span><span class=\"o\">&gt;</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">analogout</span><span class=\"o\">.</span><span class=\"n\">add_instruction</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;function&#39;</span><span class=\"p\">:</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">functions</span><span class=\"o\">.</span><span class=\"n\">sine_ramp</span><span class=\"p\">(</span><span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"n\">initial</span><span class=\"p\">,</span> <span class=\"n\">final</span><span class=\"p\">)(</span><span class=\"n\">x</span><span class=\"p\">)),</span> <span class=\"s1\">&#39;description&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;sinusoidal ramp&#39;</span><span class=\"p\">,</span>\n<span class=\"ne\">AttributeError</span><span class=\"p\">:</span> <span class=\"s1\">&#39;NoneType&#39;</span> <span class=\"nb\">object</span> <span class=\"n\">has</span> <span class=\"n\">no</span> <span class=\"n\">attribute</span> <span class=\"s1\">&#39;sine_ramp&#39;</span>\n<span class=\"n\">Compilation</span> <span class=\"n\">aborted</span><span class=\"o\">.</span>\n</pre></div>\n\n\n<p>Clicking \"Engage\" again will result in a normal compilation.</p>\n<p>Could this be a result of modules not being reloaded before runmanager starts the compilation? Can we make it wait until everything is ready to go so that this is avoided?</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-20T08:24:07.644966+00:00", "milestone": null, "updated_on": "2017-06-27T07:17:57.393290+00:00", "type": "issue", "id": 42}, {"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/43/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/43.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/43/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/43/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/43/copying-global-groups"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/43/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "Copying global groups", "component": null, "votes": 0, "watches": 1, "content": {"raw": "There should be a option to copy a group of globals at the press of a button.", "markup": "markdown", "html": "<p>There should be a option to copy a group of globals at the press of a button.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-08-04T09:36:42.799982+00:00", "milestone": null, "updated_on": "2017-08-21T17:59:53.136968+00:00", "type": "issue", "id": 43}, {"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/44/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/44.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/44/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/44/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/44/changing-values-with-arrow-keys"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/44/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "changing values with arrow keys", "component": null, "votes": 0, "watches": 1, "content": {"raw": "It would be nice to have the option to change globals quickly with the arrow keys. So if a global is selected up and down arrow keys should add/subtract 1 * step-size. Left an right arrow could be used to adjust the step size by a factor of 10. This should of course only happen if they are int/float at that moment.", "markup": "markdown", "html": "<p>It would be nice to have the option to change globals quickly with the arrow keys. So if a global is selected up and down arrow keys should add/subtract 1 * step-size. Left an right arrow could be used to adjust the step size by a factor of 10. This should of course only happen if they are int/float at that moment.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-08-04T09:40:13.705152+00:00", "milestone": null, "updated_on": "2017-08-05T08:59:02.739699+00:00", "type": "issue", "id": 44}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/45/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/45.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/45/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/45/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/45/compilation-progress-and-abort"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/45/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "Compilation progress and abort", "component": null, "votes": 0, "watches": 1, "content": {"raw": "There should be some sort of display showing the current progresses on compilation(s).\r\nIt would also be really handy to abort compilations that have been started earlier (not the last engage)and aren't done. \r\n\r\nEspecially in the evenings we engage a few sequences of a 1000 shots each for them to run over night. If we realize that something in a script was wrong we need to kill runmanager and start over as abort only affects the last engage not previous ones.", "markup": "markdown", "html": "<p>There should be some sort of display showing the current progresses on compilation(s).\nIt would also be really handy to abort compilations that have been started earlier (not the last engage)and aren't done. </p>\n<p>Especially in the evenings we engage a few sequences of a 1000 shots each for them to run over night. If we realize that something in a script was wrong we need to kill runmanager and start over as abort only affects the last engage not previous ones.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-08-04T10:33:28.531533+00:00", "milestone": null, "updated_on": "2017-08-04T11:27:46.436780+00:00", "type": "issue", "id": 45}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/46/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/46.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/46/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/46/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/46/engage-log"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/46/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "Engage Log", "component": null, "votes": 0, "watches": 1, "content": {"raw": "There should be a log file for engaged sequences so that one can find measurements from previous days/weeks more quickly. This shouldn't be too hard to do.", "markup": "markdown", "html": "<p>There should be a log file for engaged sequences so that one can find measurements from previous days/weeks more quickly. This shouldn't be too hard to do.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-08-04T12:34:53.760864+00:00", "milestone": null, "updated_on": "2017-08-04T12:53:08.875307+00:00", "type": "issue", "id": 46}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/47/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/47.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/47/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/47/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/47/move-file-creation-to-compile-loop"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/47/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "Move file creation to compile loop", "component": null, "votes": 1, "watches": 2, "content": {"raw": "Currently if one clicks engage all h5 files get created and then send of to the compiler loop for processing of the labscript.\r\n\r\nI think it would be better to send the compiler loop the parsed globals and let it create the h5 files individually when needed. This should reduce file clutter of aborted compilation. Only files of fully compiled shots would be in the output folder after pressing abort and not a mix of compiled an uncompiled shots. I'm guessing that this is what most users expect to happen anyway.", "markup": "markdown", "html": "<p>Currently if one clicks engage all h5 files get created and then send of to the compiler loop for processing of the labscript.</p>\n<p>I think it would be better to send the compiler loop the parsed globals and let it create the h5 files individually when needed. This should reduce file clutter of aborted compilation. Only files of fully compiled shots would be in the output folder after pressing abort and not a mix of compiled an uncompiled shots. I'm guessing that this is what most users expect to happen anyway.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-08-09T09:49:48.402355+00:00", "milestone": null, "updated_on": "2017-08-09T18:25:35.277823+00:00", "type": "issue", "id": 47}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/48/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/48.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/48/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/48/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/48/continuous-engage"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/48/vote"}}, "reporter": {"display_name": "Kevin Cox", "uuid": "{9fc7b87b-cbd0-445e-920a-da21302a36b1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9fc7b87b-cbd0-445e-920a-da21302a36b1%7D"}, "html": {"href": "https://bitbucket.org/%7B9fc7b87b-cbd0-445e-920a-da21302a36b1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2d7a249e8067b46827e198e271d79ea9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsKC-6.png"}}, "nickname": "kccox", "type": "user", "account_id": "557058:15635328-757a-4cd6-a88d-c9b8fab29217"}, "title": "Continuous Engage", "component": null, "votes": 1, "watches": 1, "content": {"raw": "Hi Guys,\r\n\r\nI'm a postdoc working in the lab with David Meyer.  I'm starting up an atom-cavity QED experiment (not BEC).  I want to add a control to continuously compile and run the labscript.    David hinted at our desire to do this in issue #44.  But what might be easiest, is just to add a button to runmanager that will \"engage\" every \"x\" seconds.  I'm thinking about adding this in our code presently.  After a quick google search, it looks like we could just use the QTimer class to call the engage event over and over.  Is this a decent idea?  Do you have any advice on how to do this the best way?  \r\n\r\nFurther, what would make this functionality even better (but probably isn't absolutely critical for us right away), is for runmanager to check and make sure blacs has finished before engaging again, so the queue doesn't keep filling up and to make sure the experiment rep rate is actually what you want (that is, x).  But it seems like this would require changing blacs as well, to communicate with runmanager about when runs are finished, or maybe if the queue is empty.  We may pursue adding this in our code as well.\r\n\r\nOverall, I think for higher rep-rate experiments, having a continuous compile and run is an important functionality.  It allows the person running the experiments to tweak things and do feedback on the fly, without having to hit engage over and over again.  So, if we get this working well, would you like us to make a pull request?", "markup": "markdown", "html": "<p>Hi Guys,</p>\n<p>I'm a postdoc working in the lab with David Meyer.  I'm starting up an atom-cavity QED experiment (not BEC).  I want to add a control to continuously compile and run the labscript.    David hinted at our desire to do this in issue <a href=\"#!/labscript_suite/runmanager/issues/44/changing-values-with-arrow-keys\" rel=\"nofollow\" title=\"changing values with arrow keys\" class=\"ap-connect-link\">#44</a>.  But what might be easiest, is just to add a button to runmanager that will \"engage\" every \"x\" seconds.  I'm thinking about adding this in our code presently.  After a quick google search, it looks like we could just use the QTimer class to call the engage event over and over.  Is this a decent idea?  Do you have any advice on how to do this the best way?  </p>\n<p>Further, what would make this functionality even better (but probably isn't absolutely critical for us right away), is for runmanager to check and make sure blacs has finished before engaging again, so the queue doesn't keep filling up and to make sure the experiment rep rate is actually what you want (that is, x).  But it seems like this would require changing blacs as well, to communicate with runmanager about when runs are finished, or maybe if the queue is empty.  We may pursue adding this in our code as well.</p>\n<p>Overall, I think for higher rep-rate experiments, having a continuous compile and run is an important functionality.  It allows the person running the experiments to tweak things and do feedback on the fly, without having to hit engage over and over again.  So, if we get this working well, would you like us to make a pull request?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-08-17T15:42:29.584443+00:00", "milestone": null, "updated_on": "2017-08-25T22:41:07.316081+00:00", "type": "issue", "id": 48}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/49/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/49.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/49/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/49/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/49/zip-groups-are-overridden-when-reopening"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/49/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Zip groups are overridden when reopening runmanager", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Zip groups vanish when you reopen runmanager. I don't yet know why, but I can confirm that the globals h5 file does contain the correct informatiojn about zip groups when they are initially set, and that this information is overridden after reopening runmanager.", "markup": "markdown", "html": "<p>Zip groups vanish when you reopen runmanager. I don't yet know why, but I can confirm that the globals h5 file does contain the correct informatiojn about zip groups when they are initially set, and that this information is overridden after reopening runmanager.</p>", "type": "rendered"}, "assignee": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-09-11T01:24:36.627172+00:00", "milestone": null, "updated_on": "2017-11-07T23:19:55.339366+00:00", "type": "issue", "id": 49}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/50/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/50.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/50/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/50/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/50/bugs-with-restoring-expansion-type-when"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/50/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Bugs with restoring expansion type when runmanager is reopened", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Following on from issue #49, there are two outstanding bugs I have found that I could not fix. These are:\r\n\r\n* Manually changing an \"outer\" expansion type to nothing (it will revert to \"outer\" when you reopen runmanager)\r\n* Manually changing a zip group to \"outer\" (it will revert to the zip group when you re-open)\r\n\r\nI think that to fix these we will need to save some data as to whether the expansion type was set manually by the user or automatically by runmanager (and that this needs to be stored in the HDF5 file along side the expansion type). My reasoning for this is that we currently guess the expansion type which is either none or expansion, and then decide if it is a zip group. Because we transition from outer -> zip, we thus can't distinguish zip -> outer as it will appear like it's at the start of the transition from outer -> zip. Similarly, arrays that have had their expansion type removed, will have the expansion type guessed as \"outer\", since the expansion is determined from the type and so you can't tell the difference.\r\n\r\nThere may be a way to solve this (without storing extra data in the HDF5 file) by rebuilding the metadata used in the calculation of the expansion type, when runmanager restores open groups. However, I'm not 100% certain this  is possible...", "markup": "markdown", "html": "<p>Following on from issue <a href=\"#!/labscript_suite/runmanager/issues/49/zip-groups-are-overridden-when-reopening\" rel=\"nofollow\" title=\"Zip groups are overridden when reopening runmanager\" class=\"ap-connect-link\"><s>#49</s></a>, there are two outstanding bugs I have found that I could not fix. These are:</p>\n<ul>\n<li>Manually changing an \"outer\" expansion type to nothing (it will revert to \"outer\" when you reopen runmanager)</li>\n<li>Manually changing a zip group to \"outer\" (it will revert to the zip group when you re-open)</li>\n</ul>\n<p>I think that to fix these we will need to save some data as to whether the expansion type was set manually by the user or automatically by runmanager (and that this needs to be stored in the HDF5 file along side the expansion type). My reasoning for this is that we currently guess the expansion type which is either none or expansion, and then decide if it is a zip group. Because we transition from outer -&gt; zip, we thus can't distinguish zip -&gt; outer as it will appear like it's at the start of the transition from outer -&gt; zip. Similarly, arrays that have had their expansion type removed, will have the expansion type guessed as \"outer\", since the expansion is determined from the type and so you can't tell the difference.</p>\n<p>There may be a way to solve this (without storing extra data in the HDF5 file) by rebuilding the metadata used in the calculation of the expansion type, when runmanager restores open groups. However, I'm not 100% certain this  is possible...</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-09-11T04:35:47.882764+00:00", "milestone": null, "updated_on": "2018-03-13T17:03:34.244769+00:00", "type": "issue", "id": 50}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/51/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/51.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/51/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/51/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/51/error-opening-runmanager"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/51/vote"}}, "reporter": {"display_name": "Julia Cline", "uuid": "{97718b1a-c50c-4a7e-9335-e1766097a67e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B97718b1a-c50c-4a7e-9335-e1766097a67e%7D"}, "html": {"href": "https://bitbucket.org/%7B97718b1a-c50c-4a7e-9335-e1766097a67e%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/514287ed8f5d88b9ad075409a8813a48d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJC-0.png"}}, "nickname": "julia_cline", "type": "user", "account_id": "5a4bf63de0a6f308201e17c4"}, "title": "Error opening runmanager", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I am new to labscript, so this may be a silly issue. When I try running runmanager, it gives me an error. I think that it is a problem with importing QtGui and QtWidgets. Here is the full text of the error:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\labscript_suite\\runmanager\\__main__.py\", line 46, in <module>\r\n    check_version('qtutils', '2.0.0', '3.0.0')\r\n  File \"C:\\labscript_suite\\labscript_utils\\__init__.py\", line 84, in check_version\r\n    _reraise(exc_info)\r\n  File \"C:\\labscript_suite\\labscript_utils\\__init__.py\", line 62, in _reraise\r\n    exec('raise type, value, traceback', globals(), locals())\r\n  File \"C:\\labscript_suite\\labscript_utils\\__init__.py\", line 47, in _get_version\r\n    module = __import__(module_name)\r\n  File \"C:\\Users\\thomp\\Anaconda2\\lib\\site-packages\\qtutils\\__init__.py\", line 23, in <module>\r\n    from qtutils.qt.QtCore import qInstallMessageHandler\r\n  File \"C:\\Users\\thomp\\Anaconda2\\lib\\site-packages\\qtutils\\qt.py\", line 82, in <module>\r\n    from PyQt5 import QtGui, QtCore, QtWidgets\r\nImportError: DLL load failed: The specified procedure could not be found.", "markup": "markdown", "html": "<p>I am new to labscript, so this may be a silly issue. When I try running runmanager, it gives me an error. I think that it is a problem with importing QtGui and QtWidgets. Here is the full text of the error:</p>\n<p>Traceback (most recent call last):\n  File \"C:\\labscript_suite\\runmanager__main<strong>.py\", line 46, in &lt;module&gt;\n    check_version('qtutils', '2.0.0', '3.0.0')\n  File \"C:\\labscript_suite\\labscript_utils__init</strong>.py\", line 84, in check_version\n    _reraise(exc_info)\n  File \"C:\\labscript_suite\\labscript_utils__init<strong>.py\", line 62, in _reraise\n    exec('raise type, value, traceback', globals(), locals())\n  File \"C:\\labscript_suite\\labscript_utils__init</strong>.py\", line 47, in _get_version\n    module = <strong>import</strong>(module_name)\n  File \"C:\\Users\\thomp\\Anaconda2\\lib\\site-packages\\qtutils__init__.py\", line 23, in &lt;module&gt;\n    from qtutils.qt.QtCore import qInstallMessageHandler\n  File \"C:\\Users\\thomp\\Anaconda2\\lib\\site-packages\\qtutils\\qt.py\", line 82, in &lt;module&gt;\n    from PyQt5 import QtGui, QtCore, QtWidgets\nImportError: DLL load failed: The specified procedure could not be found.</p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": null, "edited_on": null, "created_on": "2018-01-02T21:50:00.202635+00:00", "milestone": null, "updated_on": "2018-01-04T00:23:45.172730+00:00", "type": "issue", "id": 51}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/52/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/52.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/52/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/52/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/52/global-checkbox-for-active-groups-doesnt"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/52/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Global checkbox for active groups doesn't update after group deletion", "component": null, "votes": 0, "watches": 1, "content": {"raw": "If you have all groups in a globals file set as active, except for one, and then delete the one that is inactive, the checkbox indicating the \"active\" status of the whole file stays in the \"partial\" state rather than updating to \"checked\". \r\n\r\nSee image below. Note how the checkbox has a square in it instead of a tick because I just deleted the only inactive group!\r\n\r\n![runmanager_bug1.png](data/bitbucket.org/repo/6g5bg5/images/1491604812-runmanager_bug1.png)\r\n\r\nNote that this has no material effect, other than to look odd. It corrects itself if you change the active state of any of the remaining groups or restart runmanager.", "markup": "markdown", "html": "<p>If you have all groups in a globals file set as active, except for one, and then delete the one that is inactive, the checkbox indicating the \"active\" status of the whole file stays in the \"partial\" state rather than updating to \"checked\". </p>\n<p>See image below. Note how the checkbox has a square in it instead of a tick because I just deleted the only inactive group!</p>\n<p><img alt=\"runmanager_bug1.png\" src=\"data/bitbucket.org/repo/6g5bg5/images/1491604812-runmanager_bug1.png\" /></p>\n<p>Note that this has no material effect, other than to look odd. It corrects itself if you change the active state of any of the remaining groups or restart runmanager.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-01-17T03:44:19.765927+00:00", "milestone": null, "updated_on": "2018-01-17T03:44:19.765927+00:00", "type": "issue", "id": 52}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/53/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/53.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/53/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/53/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/53/modulewatcher-notices-changes-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/53/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "ModuleWatcher notices changes to runmanager module", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The ModuleWatcher module (created inside the batch compiler) seems to notice changes to runmanager and indicates it will reload `runmanager/__init__.py`. This occurs if you update runmanager via mercurial while runmanager is running.\r\n\r\nThis is probably undesirable since the batch compiler doesn't get explicitly reloaded, but the runmanager API inside batch compiler does get reloaded. This may lead to incompatibilities between the two.\r\n\r\nI think this may be a result of pull request #18.\r\n\r\nNote: There are already existing issues with ModuleWatcher, see issue #28.", "markup": "markdown", "html": "<p>The ModuleWatcher module (created inside the batch compiler) seems to notice changes to runmanager and indicates it will reload <code>runmanager/__init__.py</code>. This occurs if you update runmanager via mercurial while runmanager is running.</p>\n<p>This is probably undesirable since the batch compiler doesn't get explicitly reloaded, but the runmanager API inside batch compiler does get reloaded. This may lead to incompatibilities between the two.</p>\n<p>I think this may be a result of <a href=\"#!/labscript_suite/runmanager/pull-requests/18/allow-apis-other-than-labscript-to-be\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #18</a>.</p>\n<p>Note: There are already existing issues with ModuleWatcher, see issue <a href=\"#!/labscript_suite/runmanager/issues/28/batch-compiler-does-not-notice-changes-to\" rel=\"nofollow\" title=\"Batch compiler does not notice changes to unit conversions\" class=\"ap-connect-link\">#28</a>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-03-13T22:34:10.819494+00:00", "milestone": null, "updated_on": "2018-03-14T03:49:03.644832+00:00", "type": "issue", "id": 53}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/54/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/54.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/54/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/54/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/54/runmanager-doesnt-cache-the-labscript-file"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/54/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "runmanager doesn't cache the labscript file when compiling shots", "component": null, "votes": 0, "watches": 1, "content": {"raw": "runmanager sequentially instructs the batch compiler to compile each shot in a sequence and sends the labscript file path and the HDF5 file path to the batch compiler process.\r\n\r\nBecause only the path to the labscript file is passed, if a user modifies and saves the labscript file **during** the compilation,  then some shots will use the old labscript file, and some will use the new labscript file, rendering the results of the sequence meaningless.\r\n\r\nI think in order to protect against this we need to:\r\n\r\n1. cache a copy of the labscript file rather than exec-ing the file itself\r\n2. Use module watcher to detect changes to modules used by the labscript file and abort a compilation sequence if anything changes.\r\n\r\nAlternatively, if #47 was implemented, we might be able to solve point 2 above by holding the module watcher lock across the compilation of all shots.\r\n\r\nNote: There may be other corner cases I've missed in this analysis.", "markup": "markdown", "html": "<p>runmanager sequentially instructs the batch compiler to compile each shot in a sequence and sends the labscript file path and the HDF5 file path to the batch compiler process.</p>\n<p>Because only the path to the labscript file is passed, if a user modifies and saves the labscript file <strong>during</strong> the compilation,  then some shots will use the old labscript file, and some will use the new labscript file, rendering the results of the sequence meaningless.</p>\n<p>I think in order to protect against this we need to:</p>\n<ol>\n<li>cache a copy of the labscript file rather than exec-ing the file itself</li>\n<li>Use module watcher to detect changes to modules used by the labscript file and abort a compilation sequence if anything changes.</li>\n</ol>\n<p>Alternatively, if <a href=\"#!/labscript_suite/runmanager/issues/47/move-file-creation-to-compile-loop\" rel=\"nofollow\" title=\"Move file creation to compile loop\" class=\"ap-connect-link\">#47</a> was implemented, we might be able to solve point 2 above by holding the module watcher lock across the compilation of all shots.</p>\n<p>Note: There may be other corner cases I've missed in this analysis.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-03-13T22:41:12.307659+00:00", "milestone": null, "updated_on": "2018-03-27T23:22:12.311290+00:00", "type": "issue", "id": 54}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/55/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/55.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/55/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/55/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/55/no-compile-erros-in-outbox"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/55/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "No compile erros in outbox", "component": null, "votes": 0, "watches": 1, "content": {"raw": "With the current version of zprocess no compile errors are displayed in the outbox when there are any.", "markup": "markdown", "html": "<p>With the current version of zprocess no compile errors are displayed in the outbox when there are any.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-03-17T23:10:41.302789+00:00", "milestone": null, "updated_on": "2018-03-18T10:03:17.968049+00:00", "type": "issue", "id": 55}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/56/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/56.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/56/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/56/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/56/globals-can-no-longer-be-tuples-of-strings"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/56/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Globals can no longer be tuples of strings", "component": null, "votes": 0, "watches": 2, "content": {"raw": "In the past our group has used a global containing a tuple of strings to pass a list of strings through to lyse for analysis (we would list the aliases of results that we wanted to plot for the given experiment - this could be implemented better via analysis globals, but that's a whole different issue). We use a tuple since it isn't automatically iterated over by runmanager.\r\n\r\nIt seems as though somewhere along the way (most likely during Python 3 compatibility updates) the ability to save this datatype to the globals hdf5 file has been lost. When trying to compile an experiment with a global foo = ('aaa','bbb') I now get the following error:\r\n\r\n\r\n```\r\n#!python\r\n\r\nGlobal foo cannot be saved as an hdf5 attribute. Globals can only have relatively simple datatypes, with no nested structures. Original error was:\r\nTypeError: No conversion path for dtype: dtype('<U3')\r\nCompilation aborted.\r\n```\r\n\r\nThis also happens if the global is a list and the expansion is removed, to pass through the global as a list.", "markup": "markdown", "html": "<p>In the past our group has used a global containing a tuple of strings to pass a list of strings through to lyse for analysis (we would list the aliases of results that we wanted to plot for the given experiment - this could be implemented better via analysis globals, but that's a whole different issue). We use a tuple since it isn't automatically iterated over by runmanager.</p>\n<p>It seems as though somewhere along the way (most likely during Python 3 compatibility updates) the ability to save this datatype to the globals hdf5 file has been lost. When trying to compile an experiment with a global foo = ('aaa','bbb') I now get the following error:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Global</span> <span class=\"n\">foo</span> <span class=\"n\">cannot</span> <span class=\"n\">be</span> <span class=\"n\">saved</span> <span class=\"k\">as</span> <span class=\"n\">an</span> <span class=\"n\">hdf5</span> <span class=\"n\">attribute</span><span class=\"o\">.</span> <span class=\"n\">Globals</span> <span class=\"n\">can</span> <span class=\"n\">only</span> <span class=\"n\">have</span> <span class=\"n\">relatively</span> <span class=\"n\">simple</span> <span class=\"n\">datatypes</span><span class=\"p\">,</span> <span class=\"k\">with</span> <span class=\"n\">no</span> <span class=\"n\">nested</span> <span class=\"n\">structures</span><span class=\"o\">.</span> <span class=\"n\">Original</span> <span class=\"n\">error</span> <span class=\"n\">was</span><span class=\"p\">:</span>\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"n\">No</span> <span class=\"n\">conversion</span> <span class=\"n\">path</span> <span class=\"k\">for</span> <span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">dtype</span><span class=\"p\">(</span><span class=\"s1\">&#39;&lt;U3&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">Compilation</span> <span class=\"n\">aborted</span><span class=\"o\">.</span>\n</pre></div>\n\n\n<p>This also happens if the global is a list and the expansion is removed, to pass through the global as a list.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-05-10T00:58:45.265636+00:00", "milestone": null, "updated_on": "2019-02-05T17:12:25.761912+00:00", "type": "issue", "id": 56}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/57/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/57.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/57/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/57/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/57/runmanager-under-python-27-cannot-handle"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/57/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "runmanager under Python 2.7 cannot handle globals that contain unicode characters set under Python 3", "component": null, "votes": 0, "watches": 1, "content": {"raw": "If you set a global (under Python 3) to 'asdf\u0482', then close runmanager, open runmanager under Python 2, load the globals file and then try to open the tab for the globals file, you get the below exception (and runmanager gets stuck in a broken state)\r\n\r\n```\r\n#!python\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\labscript_suite\\labscript_py27\\runmanager\\__main__.py\", line 2177, in on_treeView_groups_leftClicked\r\n    self.open_group(globals_file, group_name)\r\n  File \"C:\\labscript_suite\\labscript_py27\\runmanager\\__main__.py\", line 2780, in open_group\r\n    group_tab = GroupTab(self.ui.tabWidget, globals_file, group_name)\r\n  File \"C:\\labscript_suite\\labscript_py27\\runmanager\\__main__.py\", line 604, in __init__\r\n    self.populate_model()\r\n  File \"C:\\labscript_suite\\labscript_py27\\runmanager\\__main__.py\", line 655, in populate_model\r\n    row = self.make_global_row(name, value, units, expansion)\r\n  File \"C:\\labscript_suite\\labscript_py27\\runmanager\\__main__.py\", line 719, in make_global_row\r\n    value_item.setData(str(value), self.GLOBALS_ROLE_PREVIOUS_TEXT)\r\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u0482' in position 6: ordinal not in range(128)\r\n\r\n```", "markup": "markdown", "html": "<p>If you set a global (under Python 3) to 'asdf\u0482', then close runmanager, open runmanager under Python 2, load the globals file and then try to open the tab for the globals file, you get the below exception (and runmanager gets stuck in a broken state)</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript_py27</span><span class=\"se\">\\r</span><span class=\"s2\">unmanager\\__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2177</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">on_treeView_groups_leftClicked</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">open_group</span><span class=\"p\">(</span><span class=\"n\">globals_file</span><span class=\"p\">,</span> <span class=\"n\">group_name</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript_py27</span><span class=\"se\">\\r</span><span class=\"s2\">unmanager\\__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">2780</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">open_group</span>\n    <span class=\"n\">group_tab</span> <span class=\"o\">=</span> <span class=\"n\">GroupTab</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">tabWidget</span><span class=\"p\">,</span> <span class=\"n\">globals_file</span><span class=\"p\">,</span> <span class=\"n\">group_name</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript_py27</span><span class=\"se\">\\r</span><span class=\"s2\">unmanager\\__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">604</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__init__</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">populate_model</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript_py27</span><span class=\"se\">\\r</span><span class=\"s2\">unmanager\\__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">655</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">populate_model</span>\n    <span class=\"n\">row</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">make_global_row</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"p\">,</span> <span class=\"n\">expansion</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript_py27</span><span class=\"se\">\\r</span><span class=\"s2\">unmanager\\__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">719</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">make_global_row</span>\n    <span class=\"n\">value_item</span><span class=\"o\">.</span><span class=\"n\">setData</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">GLOBALS_ROLE_PREVIOUS_TEXT</span><span class=\"p\">)</span>\n<span class=\"ne\">UnicodeEncodeError</span><span class=\"p\">:</span> <span class=\"s1\">&#39;ascii&#39;</span> <span class=\"n\">codec</span> <span class=\"n\">can</span><span class=\"s1\">&#39;t encode character u&#39;</span>\\<span class=\"n\">u0482</span><span class=\"s1\">&#39; in position 6: ordinal not in range(128)</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "invalid", "version": null, "edited_on": null, "created_on": "2018-05-10T06:20:21.425850+00:00", "milestone": null, "updated_on": "2018-05-11T07:02:31.524683+00:00", "type": "issue", "id": 57}, {"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/58/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/58.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/58/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/58/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/58/bugs-in-exception-handling-code-under"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/58/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Bugs in Exception handling code under Python 3", "component": null, "votes": 0, "watches": 1, "content": {"raw": "While investigating #56, I noticed that [this](#!/labscript_suite/runmanager/src/default/__init__.py#lines-453) and [this](#!/labscript_suite/runmanager/src/default/__init__.py#lines-643) line of code need to be updated as Exception.message doesn't exist under Python 3.\r\n\r\nProbably we should look at formatting exceptions properly (with at least a line number from the traceback) rather than just typecasting with `str`, however that's a bigger job than just those two lines. Whoever decides to pick this up can look into the best approach.", "markup": "markdown", "html": "<p>While investigating <a href=\"#!/labscript_suite/runmanager/issues/56/globals-can-no-longer-be-tuples-of-strings\" rel=\"nofollow\" title=\"Globals can no longer be tuples of strings\" class=\"ap-connect-link\"><s>#56</s></a>, I noticed that <a data-is-external-link=\"true\" href=\"#!/labscript_suite/runmanager/src/default/__init__.py#lines-453\" rel=\"nofollow\">this</a> and <a data-is-external-link=\"true\" href=\"#!/labscript_suite/runmanager/src/default/__init__.py#lines-643\" rel=\"nofollow\">this</a> line of code need to be updated as Exception.message doesn't exist under Python 3.</p>\n<p>Probably we should look at formatting exceptions properly (with at least a line number from the traceback) rather than just typecasting with <code>str</code>, however that's a bigger job than just those two lines. Whoever decides to pick this up can look into the best approach.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-05-10T06:24:30.677400+00:00", "milestone": null, "updated_on": "2018-05-10T07:43:39.408001+00:00", "type": "issue", "id": 58}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/59/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/59.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/59/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/59/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/59/keypresses-are-registered-twice"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/59/vote"}}, "reporter": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "title": "Keypresses are registered twice", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Since Qt5 (pull request #9), keypress events have been registered twice. Below I have debugged this by adding `logger.info` lines to [`on_keyPress`](#!/labscript_suite/runmanager/src/b77c04761d98bce8e15f41f109d37145264bacb9/__main__.py?at=default&fileviewer=file-view-default#__main__.py-1559) and [`on_keyRelease`](#!/labscript_suite/runmanager/src/b77c04761d98bce8e15f41f109d37145264bacb9/__main__.py?at=default&fileviewer=file-view-default#__main__.py-1579) .\r\n\r\nPressing F5 once used to (up to and including 7637500) result in:\r\n\r\n```\r\n2018-05-30 17:07:41,486 INFO runmanager: on_keyPress: F5\r\n2018-05-30 17:07:45,592 INFO runmanager: on_keyRelease: F5\r\n2018-05-30 17:07:45,594 INFO runmanager: Engage\r\n2018-05-30 17:07:45,595 INFO runmanager: Parsing globals...\r\n2018-05-30 17:07:45,607 INFO runmanager: Making h5 files\r\n2018-05-30 17:07:45,609 INFO runmanager: end engage\r\n```\r\n... but now results in (ba6441e and beyond):\r\n```\r\n2018-05-30 17:10:28,493 INFO runmanager: on_keyPress: F5\r\n2018-05-30 17:10:28,496 INFO runmanager: on_keyPress: F5\r\n2018-05-30 17:10:30,209 INFO runmanager: on_keyRelease: F5\r\n2018-05-30 17:10:30,210 INFO runmanager: Engage\r\n2018-05-30 17:10:30,210 INFO runmanager: Parsing globals...\r\n2018-05-30 17:10:30,415 INFO runmanager: Making h5 files\r\n2018-05-30 17:10:30,417 INFO runmanager: end engage\r\n2018-05-30 17:10:30,424 INFO runmanager: on_keyRelease: F5\r\n2018-05-30 17:10:30,424 INFO runmanager: Engage\r\n2018-05-30 17:10:30,424 INFO runmanager: Parsing globals...\r\n2018-05-30 17:10:30,430 INFO runmanager: Making h5 files\r\n2018-05-30 17:10:30,437 INFO runmanager: end engage\r\n```\r\nTo properly intercept the `QtCore.QEvent.KeyPress` and not have it handled twice, [`notify`](#!/labscript_suite/runmanager/src/b77c04761d98bce8e15f41f109d37145264bacb9/__main__.py?at=default&fileviewer=file-view-default#__main__.py-161) of `KeyPressQApplication` should return 1 (or `True`) for relevant events [SO](https://stackoverflow.com/a/45446380).", "markup": "markdown", "html": "<p>Since Qt5 (<a href=\"#!/labscript_suite/runmanager/pull-requests/9/qtutils-200-support-and-experimental-pyqt5\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #9</a>), keypress events have been registered twice. Below I have debugged this by adding <code>logger.info</code> lines to <a data-is-external-link=\"true\" href=\"#!/labscript_suite/runmanager/src/b77c04761d98bce8e15f41f109d37145264bacb9/__main__.py?at=default&amp;fileviewer=file-view-default#__main__.py-1559\" rel=\"nofollow\"><code>on_keyPress</code></a> and <a data-is-external-link=\"true\" href=\"#!/labscript_suite/runmanager/src/b77c04761d98bce8e15f41f109d37145264bacb9/__main__.py?at=default&amp;fileviewer=file-view-default#__main__.py-1579\" rel=\"nofollow\"><code>on_keyRelease</code></a> .</p>\n<p>Pressing F5 once used to (up to and including <a href=\"#!/labscript_suite/runmanager/commits/7637500\" rel=\"nofollow\" class=\"ap-connect-link\">7637500</a>) result in:</p>\n<div class=\"codehilite\"><pre><span></span>2018-05-30 17:07:41,486 INFO runmanager: on_keyPress: F5\n2018-05-30 17:07:45,592 INFO runmanager: on_keyRelease: F5\n2018-05-30 17:07:45,594 INFO runmanager: Engage\n2018-05-30 17:07:45,595 INFO runmanager: Parsing globals...\n2018-05-30 17:07:45,607 INFO runmanager: Making h5 files\n2018-05-30 17:07:45,609 INFO runmanager: end engage\n</pre></div>\n\n\n<p>... but now results in (<a href=\"#!/labscript_suite/runmanager/commits/ba6441e\" rel=\"nofollow\" class=\"ap-connect-link\">ba6441e</a> and beyond):</p>\n<div class=\"codehilite\"><pre><span></span>2018-05-30 17:10:28,493 INFO runmanager: on_keyPress: F5\n2018-05-30 17:10:28,496 INFO runmanager: on_keyPress: F5\n2018-05-30 17:10:30,209 INFO runmanager: on_keyRelease: F5\n2018-05-30 17:10:30,210 INFO runmanager: Engage\n2018-05-30 17:10:30,210 INFO runmanager: Parsing globals...\n2018-05-30 17:10:30,415 INFO runmanager: Making h5 files\n2018-05-30 17:10:30,417 INFO runmanager: end engage\n2018-05-30 17:10:30,424 INFO runmanager: on_keyRelease: F5\n2018-05-30 17:10:30,424 INFO runmanager: Engage\n2018-05-30 17:10:30,424 INFO runmanager: Parsing globals...\n2018-05-30 17:10:30,430 INFO runmanager: Making h5 files\n2018-05-30 17:10:30,437 INFO runmanager: end engage\n</pre></div>\n\n\n<p>To properly intercept the <code>QtCore.QEvent.KeyPress</code> and not have it handled twice, <a data-is-external-link=\"true\" href=\"#!/labscript_suite/runmanager/src/b77c04761d98bce8e15f41f109d37145264bacb9/__main__.py?at=default&amp;fileviewer=file-view-default#__main__.py-161\" rel=\"nofollow\"><code>notify</code></a> of <code>KeyPressQApplication</code> should return 1 (or <code>True</code>) for relevant events <a data-is-external-link=\"true\" href=\"https://stackoverflow.com/a/45446380\" rel=\"nofollow\">SO</a>.</p>", "type": "rendered"}, "assignee": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-05-30T07:44:37.218882+00:00", "milestone": null, "updated_on": "2018-05-30T11:51:01.788014+00:00", "type": "issue", "id": 59}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/60/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/60.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/60/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/60/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/60/difference-between-api-and-gui-when"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/60/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Difference between API and GUI when handling zip groups", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I believe the API won't automatically detect zip groups when compiling a sequence of shots. I'm not sure if this makes sense or not.\r\n\r\nOn the one hand, we could argue that if you are using the API, then the globals file should explicitly specify the expansion column correctly for every global and not expect the runmanager API to work things out.\r\n\r\nOn the other hand, this is a real PITA if you just want programmatic control over compilation of shots, but otherwise identical behaviour to the GUI.\r\n\r\nThe solution is probably supporting both ways. Anyway, the missing thing is the fact that `guess_expansion_modes` exists in the GUI code, not in the API code for runmanager, and that this needs to be iteratively called until the expansion types settle to a steady state (see `preparse_globals` in the GUI code.", "markup": "markdown", "html": "<p>I believe the API won't automatically detect zip groups when compiling a sequence of shots. I'm not sure if this makes sense or not.</p>\n<p>On the one hand, we could argue that if you are using the API, then the globals file should explicitly specify the expansion column correctly for every global and not expect the runmanager API to work things out.</p>\n<p>On the other hand, this is a real PITA if you just want programmatic control over compilation of shots, but otherwise identical behaviour to the GUI.</p>\n<p>The solution is probably supporting both ways. Anyway, the missing thing is the fact that <code>guess_expansion_modes</code> exists in the GUI code, not in the API code for runmanager, and that this needs to be iteratively called until the expansion types settle to a steady state (see <code>preparse_globals</code> in the GUI code.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-06-19T05:38:01.356470+00:00", "milestone": null, "updated_on": "2018-06-19T05:38:01.356470+00:00", "type": "issue", "id": 60}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/61/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/61.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/61/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/61/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/61/shuffle-is-deselected-when-no-globals-are"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/61/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Shuffle is deselected when no globals are being scanned", "component": null, "votes": 0, "watches": 2, "content": {"raw": "If you have been scanning a global with shuffle enabled, when that global is set to a constant, shuffle is turned off. This means that the next scan (e.g. over a different global) will not be shuffled unless it is manually turned back on again.", "markup": "markdown", "html": "<p>If you have been scanning a global with shuffle enabled, when that global is set to a constant, shuffle is turned off. This means that the next scan (e.g. over a different global) will not be shuffled unless it is manually turned back on again.</p>", "type": "rendered"}, "assignee": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-08-09T05:58:30.380962+00:00", "milestone": null, "updated_on": "2019-07-01T18:49:08.617370+00:00", "type": "issue", "id": 61}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/62/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/62.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/62/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/62/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/62/cascading-sections-for-global-variables"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/62/vote"}}, "reporter": null, "title": "Cascading sections for global variables.", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Not sure how difficult this would be to impliment into runmanager but when creating different global groups, it would be nice to have the abilitity to put these in 'folders' doin the GUI under the main groups that then cascade outwards. Eg.\r\n\r\nSection 1\r\n           >Starting values\r\n           >MOT On\r\nSection 2\r\n           >Ramp 1\r\n           >Ramp 2\r\netc.\r\n\r\nThese 'folders' would be cascadable, such that you can minimise the contents and only see the 'folder'. \r\n\r\nAgain, not sure how feasible or managable this would be as its stored in the h5 files, but it could be a slight improvement if you are dealing with a few different global blocks.", "markup": "markdown", "html": "<p>Not sure how difficult this would be to impliment into runmanager but when creating different global groups, it would be nice to have the abilitity to put these in 'folders' doin the GUI under the main groups that then cascade outwards. Eg.</p>\n<p>Section 1\n           &gt;Starting values\n           &gt;MOT On\nSection 2\n           &gt;Ramp 1\n           &gt;Ramp 2\netc.</p>\n<p>These 'folders' would be cascadable, such that you can minimise the contents and only see the 'folder'. </p>\n<p>Again, not sure how feasible or managable this would be as its stored in the h5 files, but it could be a slight improvement if you are dealing with a few different global blocks.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-02-20T03:27:56.292079+00:00", "milestone": null, "updated_on": "2019-02-20T03:27:56.292079+00:00", "type": "issue", "id": 62}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/63/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/63.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/63/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/63/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/63/problems-with-new-zprocess-changes"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/63/vote"}}, "reporter": {"display_name": "Lars Kohfahl", "uuid": "{14b59397-cbc0-4d8c-8a4a-fe99fb4d2d4a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B14b59397-cbc0-4d8c-8a4a-fe99fb4d2d4a%7D"}, "html": {"href": "https://bitbucket.org/%7B14b59397-cbc0-4d8c-8a4a-fe99fb4d2d4a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/630642264cd55e22515678a3a0489ac7d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLK-2.png"}}, "nickname": "lkohfahl", "type": "user", "account_id": "5aafc5d11396802a57aa7f3b"}, "title": "Problems with new zprocess changes", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When encountering another problem with conflicting groups in runmanager (I will write an extra Issue), an error was raised in the function \"preparse_globals_loop\" as there is still a zprocess.raise_exception_in_thread-function used in it but, if I am correct, zprocess is no longer imported.\r\nI also found zprocess being used in \"load_configuration\" and \"compile_loop\".\r\nProbably this function can just be added to ls_zprocess?", "markup": "markdown", "html": "<p>When encountering another problem with conflicting groups in runmanager (I will write an extra Issue), an error was raised in the function \"preparse_globals_loop\" as there is still a zprocess.raise_exception_in_thread-function used in it but, if I am correct, zprocess is no longer imported.\nI also found zprocess being used in \"load_configuration\" and \"compile_loop\".\nProbably this function can just be added to ls_zprocess?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-03-20T17:00:05.195519+00:00", "milestone": null, "updated_on": "2019-03-20T17:07:55.459235+00:00", "type": "issue", "id": 63}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/64/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/64.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/64/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/64/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/64/zip-argument-error-in-expand_globals"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/64/vote"}}, "reporter": {"display_name": "Lars Kohfahl", "uuid": "{14b59397-cbc0-4d8c-8a4a-fe99fb4d2d4a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B14b59397-cbc0-4d8c-8a4a-fe99fb4d2d4a%7D"}, "html": {"href": "https://bitbucket.org/%7B14b59397-cbc0-4d8c-8a4a-fe99fb4d2d4a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/630642264cd55e22515678a3a0489ac7d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLK-2.png"}}, "nickname": "lkohfahl", "type": "user", "account_id": "5aafc5d11396802a57aa7f3b"}, "title": "zip argument error in expand_globals", "component": null, "votes": 0, "watches": 1, "content": {"raw": "We have encountered a bug when having two groups with conflicting globals. To reproduce the error seems a bit tricky. This is the way it should work: \r\nOur example is that we have two groups named \"testing\" and \"testing_2\" with the same named globals (e.g. \"pb_time\") in it. Runmanager detects this error correctly. But when changing the global in both groups to a list and activating them, at some point an error is thrown (maybe try several times):\r\n\r\nThis is the errorcode originally thrown in the main experiment\r\nStart code:\r\n2019-03-20 17:36:51,668 ERROR runmanager: Got an exception:\r\nTraceback (most recent call last):\r\n  File \"C:\\labscript_suite\\runmanager\\__main__.py\", line 2725, in preparse_globa\r\nls_loop\r\n    self.preparse_globals()\r\n  File \"C:\\labscript_suite\\runmanager\\__main__.py\", line 2706, in preparse_globa\r\nls\r\n    results = self.parse_globals(active_groups, raise_exceptions=False, expand_g\r\nlobals=True, return_dimensions = True)\r\n  File \"C:\\labscript_suite\\runmanager\\__main__.py\", line 3386, in parse_globals\r\n    shots, dimensions = runmanager.expand_globals(sequence_globals, evaled_globa\r\nls, expansion_order, return_dimensions=return_dimensions)\r\n  File \"C:\\labscript_suite\\runmanager\\__init__.py\", line 552, in expand_globals\r\n    axis = list(zip(*axis))\r\nTypeError: zip argument #1 must support iteration\r\n\r\nEnd Code\r\n\r\nThis is the error code thrown with a test setup (error is always coming up again!):\r\nStart Code:\r\nTraceback (most recent call last):\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\threading.py\", line 864, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\zprocess\\utils.py\", line 25, in _reraise\r\n    raise value.with_traceback(traceback)\r\n  File \"C:\\labscript_suite\\runmanager\\__main__.py\", line 2726, in preparse_globals_loop\r\n    self.preparse_globals()\r\n  File \"C:\\labscript_suite\\runmanager\\__main__.py\", line 2707, in preparse_globals\r\n    results = self.parse_globals(active_groups, raise_exceptions=False, expand_globals=True, return_dimensions = True)\r\n  File \"C:\\labscript_suite\\runmanager\\__main__.py\", line 3387, in parse_globals\r\n    shots, dimensions = runmanager.expand_globals(sequence_globals, evaled_globals, expansion_order, return_dimensions=return_dimensions)\r\n  File \"C:\\labscript_suite\\runmanager\\__init__.py\", line 552, in expand_globals\r\n    axis = list(zip(*axis))\r\nTypeError: zip argument #1 must support iteration\r\n\r\nEnd Code\r\n\r\nIt seems that after the error has been thrown once, it is thrown even if no conflict between the globals is present anymore.\r\n\r\nWe have had a look at the \"axis\"-element in expand_globals and it is always a list of one-element-lists: [[0],[1],[2]]\r\nLet me know if more information is needed.", "markup": "markdown", "html": "<p>We have encountered a bug when having two groups with conflicting globals. To reproduce the error seems a bit tricky. This is the way it should work: \nOur example is that we have two groups named \"testing\" and \"testing_2\" with the same named globals (e.g. \"pb_time\") in it. Runmanager detects this error correctly. But when changing the global in both groups to a list and activating them, at some point an error is thrown (maybe try several times):</p>\n<p>This is the errorcode originally thrown in the main experiment\nStart code:\n2019-03-20 17:36:51,668 ERROR runmanager: Got an exception:\nTraceback (most recent call last):\n  File \"C:\\labscript_suite\\runmanager__main<strong>.py\", line 2725, in preparse_globa\nls_loop\n    self.preparse_globals()\n  File \"C:\\labscript_suite\\runmanager__main</strong>.py\", line 2706, in preparse_globa\nls\n    results = self.parse_globals(active_groups, raise_exceptions=False, expand_g\nlobals=True, return_dimensions = True)\n  File \"C:\\labscript_suite\\runmanager__main<strong>.py\", line 3386, in parse_globals\n    shots, dimensions = runmanager.expand_globals(sequence_globals, evaled_globa\nls, expansion_order, return_dimensions=return_dimensions)\n  File \"C:\\labscript_suite\\runmanager__init</strong>.py\", line 552, in expand_globals\n    axis = list(zip(*axis))\nTypeError: zip argument <a href=\"#!/labscript_suite/runmanager/issues/1/load-configuration-does-not-default-to\" rel=\"nofollow\" title=\"&quot;Load configuration&quot; does not default to current day&#39;s output directory\" class=\"ap-connect-link\"><s>#1</s></a> must support iteration</p>\n<p>End Code</p>\n<p>This is the error code thrown with a test setup (error is always coming up again!):\nStart Code:\nTraceback (most recent call last):\n  File \"C:\\ProgramData\\Anaconda3\\lib\\threading.py\", line 864, in run\n    self._target(<em>self._args, </em><em>self._kwargs)\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\zprocess\\utils.py\", line 25, in _reraise\n    raise value.with_traceback(traceback)\n  File \"C:\\labscript_suite\\runmanager__main<strong>.py\", line 2726, in preparse_globals_loop\n    self.preparse_globals()\n  File \"C:\\labscript_suite\\runmanager__main</strong>.py\", line 2707, in preparse_globals\n    results = self.parse_globals(active_groups, raise_exceptions=False, expand_globals=True, return_dimensions = True)\n  File \"C:\\labscript_suite\\runmanager__main<strong>.py\", line 3387, in parse_globals\n    shots, dimensions = runmanager.expand_globals(sequence_globals, evaled_globals, expansion_order, return_dimensions=return_dimensions)\n  File \"C:\\labscript_suite\\runmanager__init</strong>.py\", line 552, in expand_globals\n    axis = list(zip(</em>axis))\nTypeError: zip argument <a href=\"#!/labscript_suite/runmanager/issues/1/load-configuration-does-not-default-to\" rel=\"nofollow\" title=\"&quot;Load configuration&quot; does not default to current day&#39;s output directory\" class=\"ap-connect-link\"><s>#1</s></a> must support iteration</p>\n<p>End Code</p>\n<p>It seems that after the error has been thrown once, it is thrown even if no conflict between the globals is present anymore.</p>\n<p>We have had a look at the \"axis\"-element in expand_globals and it is always a list of one-element-lists: [[0],[1],[2]]\nLet me know if more information is needed.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-03-20T18:04:07.483092+00:00", "milestone": null, "updated_on": "2019-03-27T23:40:18.966285+00:00", "type": "issue", "id": 64}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/65/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/65.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/65/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/65/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/65/cannot-create-globals-in-recent-python"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/65/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Cannot create globals in recent Python releases", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The following 'bugfix' to Python's tokenizer module broke runmanager's checking of whether a global is a valid Python variable name:\r\n\r\nhttps://bugs.python.org/issue33899\r\n\r\nThis breaks runmanager for Python 3.7.1 and 3.6.6, released in October 2018. They even backported it to Python 2.7 but reverted it before releasing, so it doesn't affect Python 2.\r\n\r\nAnyhow I'll fix it in runmanager.", "markup": "markdown", "html": "<p>The following 'bugfix' to Python's tokenizer module broke runmanager's checking of whether a global is a valid Python variable name:</p>\n<p><a href=\"https://bugs.python.org/issue33899\" rel=\"nofollow\" class=\"ap-connect-link\">https://bugs.python.org/issue33899</a></p>\n<p>This breaks runmanager for Python 3.7.1 and 3.6.6, released in October 2018. They even backported it to Python 2.7 but reverted it before releasing, so it doesn't affect Python 2.</p>\n<p>Anyhow I'll fix it in runmanager.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-03-20T18:53:27.392452+00:00", "milestone": null, "updated_on": "2019-03-25T14:41:26.535008+00:00", "type": "issue", "id": 65}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/66/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/66.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/66/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/66/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/66/preparse-thread-memory-leak-crash"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/66/vote"}}, "reporter": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "title": "Preparse thread memory leak/crash", "component": null, "votes": 0, "watches": 1, "content": {"raw": "So I just brought my repositories up to speed and now I can't get runmanager to work. I'm not getting any really helpful information, but here is what I have so far:\r\n\r\n- Upon opening the GUI, the engage button is always grayed out.\r\n- All of my globals (including simple numbers) only show as \"Evaluating\" in their hover text.\r\n- One of the python processes spawned by runmanager quickly balloons in memory (multiple GB after a few seconds).\r\n- I'm running python 2.7.15.\r\n\r\nAttached is a screenshot of the GUI.", "markup": "markdown", "html": "<p>So I just brought my repositories up to speed and now I can't get runmanager to work. I'm not getting any really helpful information, but here is what I have so far:</p>\n<ul>\n<li>Upon opening the GUI, the engage button is always grayed out.</li>\n<li>All of my globals (including simple numbers) only show as \"Evaluating\" in their hover text.</li>\n<li>One of the python processes spawned by runmanager quickly balloons in memory (multiple GB after a few seconds).</li>\n<li>I'm running python 2.7.15.</li>\n</ul>\n<p>Attached is a screenshot of the GUI.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-03-28T20:39:39.579882+00:00", "milestone": null, "updated_on": "2019-04-16T16:20:16.439045+00:00", "type": "issue", "id": 66}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/67/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/67.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/67/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/67/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/67/next_sequence_index-not-found-error-using"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/67/vote"}}, "reporter": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "title": ".next_sequence_index not found error using pre-sequence index defaults", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Updating to tag 2.4.0 I now get many file not found errors for the .next_sequence_index file when opening and closing runmanager. It also appears that the closing error is preventing runmanager from updating runmanager.ini.\r\n\r\nAlso, my shot output folder gets erased on load. I get the corresponding non-default output folder message, but the reset to default folder button is not available.\r\n\r\nI'm guessing that part of this is just me not understanding how to work with the new sequence_index, but I also thought the idea was to not force people to immediately update to the new scheme so I'm not quite sure what is going on.\r\n\r\nThe opening runmanager traceback (which appears twice) is\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\labscript_suite\\runmanager\\__main__.py\", line 1411, in load_the_config_file\r\n    self.load_configuration(autoload_config_file)\r\n  File \"C:\\labscript_suite\\runmanager\\__main__.py\", line 3110, in load_configuration\r\n    default_output_folder = self.get_default_output_folder()\r\n  File \"C:\\Anaconda3\\envs\\labscript\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 228, in f\r\n    return inmain(fn, *args, **kwargs)\r\n  File \"C:\\Anaconda3\\envs\\labscript\\lib\\site-packages\\qtutils\\invoke_in_main.py\", line 102, in inmain\r\n    return fn(*args, **kwargs)\r\n  File \"C:\\labscript_suite\\runmanager\\__main__.py\", line 2388, in get_default_output_folder\r\n    increment_sequence_index=False,\r\n  File \"C:\\labscript_suite\\runmanager\\__init__.py\", line 663, in new_sequence_details\r\n    sequence_index = next_sequence_index(shot_basedir, now, increment_sequence_index)\r\n  File \"C:\\labscript_suite\\runmanager\\__init__.py\", line 624, in next_sequence_index\r\n    with open(sequence_index_file) as f:\r\nIOError: [Errno 2] No such file or directory: u'C:\\\\Users\\\\Experiment Control\\\\Experiments\\\\RydEIT2\\\\ProbeSweep\\\\.next_sequence_index'\r\n```\r\n\r\nRelevant labconfig is\r\n```\r\n[DEFAULT]\r\nexperiment_shot_storage = %(shared_drive)s\\Experiments\\%(experiment_name)s\r\n[runmanager]\r\nautoload_config_file = %(experiment_shot_storage)s\\runmanager.ini\r\noutput_folder_format = %%Y\\%%m\\%%d\r\n```", "markup": "markdown", "html": "<p>Updating to tag 2.4.0 I now get many file not found errors for the .next_sequence_index file when opening and closing runmanager. It also appears that the closing error is preventing runmanager from updating runmanager.ini.</p>\n<p>Also, my shot output folder gets erased on load. I get the corresponding non-default output folder message, but the reset to default folder button is not available.</p>\n<p>I'm guessing that part of this is just me not understanding how to work with the new sequence_index, but I also thought the idea was to not force people to immediately update to the new scheme so I'm not quite sure what is going on.</p>\n<p>The opening runmanager traceback (which appears twice) is</p>\n<div class=\"codehilite\"><pre><span></span>Traceback (most recent call last):\n  File &quot;C:\\labscript_suite\\runmanager\\__main__.py&quot;, line 1411, in load_the_config_file\n    self.load_configuration(autoload_config_file)\n  File &quot;C:\\labscript_suite\\runmanager\\__main__.py&quot;, line 3110, in load_configuration\n    default_output_folder = self.get_default_output_folder()\n  File &quot;C:\\Anaconda3\\envs\\labscript\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;, line 228, in f\n    return inmain(fn, *args, **kwargs)\n  File &quot;C:\\Anaconda3\\envs\\labscript\\lib\\site-packages\\qtutils\\invoke_in_main.py&quot;, line 102, in inmain\n    return fn(*args, **kwargs)\n  File &quot;C:\\labscript_suite\\runmanager\\__main__.py&quot;, line 2388, in get_default_output_folder\n    increment_sequence_index=False,\n  File &quot;C:\\labscript_suite\\runmanager\\__init__.py&quot;, line 663, in new_sequence_details\n    sequence_index = next_sequence_index(shot_basedir, now, increment_sequence_index)\n  File &quot;C:\\labscript_suite\\runmanager\\__init__.py&quot;, line 624, in next_sequence_index\n    with open(sequence_index_file) as f:\nIOError: [Errno 2] No such file or directory: u&#39;C:\\\\Users\\\\Experiment Control\\\\Experiments\\\\RydEIT2\\\\ProbeSweep\\\\.next_sequence_index&#39;\n</pre></div>\n\n\n<p>Relevant labconfig is</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">[DEFAULT]</span>\n<span class=\"na\">experiment_shot_storage</span> <span class=\"o\">=</span> <span class=\"s\">%(shared_drive)s\\Experiments\\%(experiment_name)s</span>\n<span class=\"k\">[runmanager]</span>\n<span class=\"na\">autoload_config_file</span> <span class=\"o\">=</span> <span class=\"s\">%(experiment_shot_storage)s\\runmanager.ini</span>\n<span class=\"na\">output_folder_format</span> <span class=\"o\">=</span> <span class=\"s\">%%Y\\%%m\\%%d</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-04-18T16:15:59.411020+00:00", "milestone": null, "updated_on": "2019-04-18T18:22:26.440739+00:00", "type": "issue", "id": 67}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/68/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/68.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/68/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/68/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/68/ui-scripting"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/68/vote"}}, "reporter": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "title": "UI scripting", "component": null, "votes": 0, "watches": 1, "content": {"raw": "... does what it says on the packet (get it?). Main use case is algorithmic optimisation, including from a lyse analysis script.\r\n\r\nMinimal features include:\r\n\r\n  1. Setting the value of particular global variables (with the specification of which global variable(s) to change done script-side).\r\n  1. Pressing the Engage button (shot compilation).\r\n  1. Locking some/all elements of the UI for some duration, e.g. while these global variables are being changed. \r\n\r\nAdditional features might include:\r\n\r\n  1. A new column in the tree- or table-view to enable/disable globals from being remotely altered.\r\n  1. A top-level control to enable/disable any remote control.\r\n  1. Some indication of whether a global is being (or has been) remotely changed. This could be at the per-variable or whole-UI level. If this were to happen more than transiently, there'll need to be the concept of a remote control session. This is inextricably linked to minimal feature 3, i.e. whether remote control should lock the entire UI (reminiscent of SCPI programming of test equipment), which in turn dictates the type of control element used for additional feature 2.", "markup": "markdown", "html": "<p>... does what it says on the packet (get it?). Main use case is algorithmic optimisation, including from a lyse analysis script.</p>\n<p>Minimal features include:</p>\n<ol>\n<li>Setting the value of particular global variables (with the specification of which global variable(s) to change done script-side).</li>\n<li>Pressing the Engage button (shot compilation).</li>\n<li>Locking some/all elements of the UI for some duration, e.g. while these global variables are being changed. </li>\n</ol>\n<p>Additional features might include:</p>\n<ol>\n<li>A new column in the tree- or table-view to enable/disable globals from being remotely altered.</li>\n<li>A top-level control to enable/disable any remote control.</li>\n<li>Some indication of whether a global is being (or has been) remotely changed. This could be at the per-variable or whole-UI level. If this were to happen more than transiently, there'll need to be the concept of a remote control session. This is inextricably linked to minimal feature 3, i.e. whether remote control should lock the entire UI (reminiscent of SCPI programming of test equipment), which in turn dictates the type of control element used for additional feature 2.</li>\n</ol>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-04-21T09:34:43.854130+00:00", "milestone": null, "updated_on": "2019-06-25T18:12:03.045412+00:00", "type": "issue", "id": 68}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runmanager/issues/69/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/issues/69.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/69/watch"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/issues/69/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/issues/69/output-folder-sometimes-not-updated"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/issues/69/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "output folder sometimes not updated", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Runmanager sometimes fails to update the output folder when you compile a new sequence. Seems to happen pretty frequently when compiling shots very rapidly.", "markup": "markdown", "html": "<p>Runmanager sometimes fails to update the output folder when you compile a new sequence. Seems to happen pretty frequently when compiling shots very rapidly.</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-12-10T22:38:23.836163+00:00", "milestone": null, "updated_on": "2020-01-28T22:21:11.195567+00:00", "type": "issue", "id": 69}], "page": 1, "size": 69}