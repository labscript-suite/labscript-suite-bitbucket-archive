{"pagelen": 50, "values": [{"update": {"description": "This adds the ability to quickly change numeric globals with the arrow keys. (issue #44)\r\nIf one now uses the up, down, left, right keys a numeric global is adjusted in a hopefuly intuitive way. \r\nIt's hard to explain so here is a gif:\r\n![arrow_switching.gif](https://bitbucket.org/repo/9p5Xy7e/images/2884992424-arrow_switching.gif)\r\n\r\nThis should make it easy to quickly edit all numeric globals with just arrow keys and enter on the keyboard. (enter to start/end editing and arrow for moving around and changing values)", "title": "Arrow Key switching", "destination": {"commit": {"hash": "3349e44897b4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/3349e44897b4.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/3349e44897b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "reason": "Superseded by PR #44", "source": {"commit": {"hash": "6a9786e4d015", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager/commit/6a9786e4d015"}, "html": {"href": "#!/PhyNerd/runmanager/commits/6a9786e4d015"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager"}, "html": {"href": "#!/PhyNerd/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "PhyNerd/runmanager", "uuid": "{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}"}, "branch": {"name": "quick-arrow-edit"}}, "state": "DECLINED", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-12-08T03:34:45.180525+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"update": {"description": "This adds the ability to quickly change numeric globals with the arrow keys. (issue #44)\r\nIf one now uses the up, down, left, right keys a numeric global is adjusted in a hopefuly intuitive way. \r\nIt's hard to explain so here is a gif:\r\n![arrow_switching.gif](https://bitbucket.org/repo/9p5Xy7e/images/2884992424-arrow_switching.gif)\r\n\r\nThis should make it easy to quickly edit all numeric globals with just arrow keys and enter on the keyboard. (enter to start/end editing and arrow for moving around and changing values)", "title": "Arrow Key switching", "destination": {"commit": {"hash": "5b5017e1befc", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/5b5017e1befc.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/5b5017e1befc"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "6a9786e4d015", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager/commit/6a9786e4d015"}, "html": {"href": "#!/PhyNerd/runmanager/commits/6a9786e4d015"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager"}, "html": {"href": "#!/PhyNerd/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "PhyNerd/runmanager", "uuid": "{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}"}, "branch": {"name": "quick-arrow-edit"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-26T17:44:39.824473+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42886469.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42886469"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}, "content": {"raw": "This pull request has merge conflicts due to the qtutils 2 merge.\nWill fix, when implementing the changes @cbillington is working on.", "markup": "markdown", "html": "<p>This pull request has merge conflicts due to the qtutils 2 merge.\nWill fix, when implementing the changes @cbillington is working on.</p>", "type": "rendered"}, "created_on": "2017-08-16T06:38:25.212915+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-16T06:38:25.268128+00:00", "type": "pullrequest_comment", "id": 42886469}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42398962.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42398962"}}, "parent": {"id": 42398161, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42398161.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42398161"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}, "content": {"raw": "Sure I wasn't really happy with all the hacks I had to do till now anyway. \n\nThe parsing stuff also came to mind at first but seemed a bit overkill at the time for such a seemingly small feature. ", "markup": "markdown", "html": "<p>Sure I wasn't really happy with all the hacks I had to do till now anyway. </p>\n<p>The parsing stuff also came to mind at first but seemed a bit overkill at the time for such a seemingly small feature. </p>", "type": "rendered"}, "created_on": "2017-08-08T15:20:50.137935+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-08T15:20:50.181440+00:00", "type": "pullrequest_comment", "id": 42398962}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42398161.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42398161"}}, "parent": {"id": 42397157, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42397157.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42397157"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}, "content": {"raw": "Yes, there are loads of corner cases! I think it is possible to handle them all though, using some of Pythons tools for parsing Python source code. I've been working on a handful of functions to show this  (but I've intentionally left this code on my home computer because I have other things I need to be working on at work, so I don't have access to it now), so if you hold off trying to catch more corner cases I think I can make something that behaves sensibly whilst preserving the ability to type anything into that box (for example comments, or where the float is the argument in a call to np.linspace).\n\nSo if that's OK do you mind leaving it with me for a bit?", "markup": "markdown", "html": "<p>Yes, there are loads of corner cases! I think it is possible to handle them all though, using some of Pythons tools for parsing Python source code. I've been working on a handful of functions to show this  (but I've intentionally left this code on my home computer because I have other things I need to be working on at work, so I don't have access to it now), so if you hold off trying to catch more corner cases I think I can make something that behaves sensibly whilst preserving the ability to type anything into that box (for example comments, or where the float is the argument in a call to np.linspace).</p>\n<p>So if that's OK do you mind leaving it with me for a bit?</p>", "type": "rendered"}, "created_on": "2017-08-08T15:14:16.519663+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-08T15:14:16.524151+00:00", "type": "pullrequest_comment", "id": 42398161}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42397157.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42397157"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}, "content": {"raw": "This is turning out to have more edge cases than expected. \nI fixed a few bugs involving negative numbers just now. \n\nNumbers with scientific notation seem to still cause problems do we want to have arrow key switching for them as well? \nThis is a bit tricky and I don't think that it's worth it. I would personally just add a check if the number is scientific and only if not have the feature active. Thoughts?", "markup": "markdown", "html": "<p>This is turning out to have more edge cases than expected. \nI fixed a few bugs involving negative numbers just now. </p>\n<p>Numbers with scientific notation seem to still cause problems do we want to have arrow key switching for them as well? \nThis is a bit tricky and I don't think that it's worth it. I would personally just add a check if the number is scientific and only if not have the feature active. Thoughts?</p>", "type": "rendered"}, "created_on": "2017-08-08T15:06:01.046512+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-08T15:06:01.103186+00:00", "type": "pullrequest_comment", "id": 42397157}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"update": {"description": "This adds the ability to quickly change numeric globals with the arrow keys. (issue #44)\r\nIf one now uses the up, down, left, right keys a numeric global is adjusted in a hopefuly intuitive way. \r\nIt's hard to explain so here is a gif:\r\n![arrow_switching.gif](https://bitbucket.org/repo/9p5Xy7e/images/2884992424-arrow_switching.gif)\r\n\r\nThis should make it easy to quickly edit all numeric globals with just arrow keys and enter on the keyboard. (enter to start/end editing and arrow for moving around and changing values)", "title": "Arrow Key switching", "destination": {"commit": {"hash": "9cf28f527db2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/9cf28f527db2.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/9cf28f527db2"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b21196852e3f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager/commit/b21196852e3f"}, "html": {"href": "#!/PhyNerd/runmanager/commits/b21196852e3f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager"}, "html": {"href": "#!/PhyNerd/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "PhyNerd/runmanager", "uuid": "{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}"}, "branch": {"name": "quick-arrow-edit"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-08T14:55:29.834229+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42306536.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42306536"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}, "content": {"raw": "Ok so I updated it there is still 2 minor bug that I'll fix later today: When you edit a integer like \"10000\" and press down next to the 1 you get \"0\" instead of \"00000\". There is also no indication except the cursor on what digit will get edited. I aim to fix them later today. I'd be interested if besides those 2 problems there is anything else that should still be changed. \n\nUpdate: found some more bugs and fixed them and the leading zeros bug. Also reduced the code by a few lines. Will look into indicating current digit now. \n\nUpdate2: didn't find anything simple and short and also think the cursor should be indication enough. If anyone has some good idea or some code to change the text cursor I'd be happy about that. If not I'd also be fine with the feature just the way it is now.", "markup": "markdown", "html": "<p>Ok so I updated it there is still 2 minor bug that I'll fix later today: When you edit a integer like \"10000\" and press down next to the 1 you get \"0\" instead of \"00000\". There is also no indication except the cursor on what digit will get edited. I aim to fix them later today. I'd be interested if besides those 2 problems there is anything else that should still be changed. </p>\n<p>Update: found some more bugs and fixed them and the leading zeros bug. Also reduced the code by a few lines. Will look into indicating current digit now. </p>\n<p>Update2: didn't find anything simple and short and also think the cursor should be indication enough. If anyone has some good idea or some code to change the text cursor I'd be happy about that. If not I'd also be fine with the feature just the way it is now.</p>", "type": "rendered"}, "created_on": "2017-08-07T15:23:17.325751+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-07T16:51:39.795185+00:00", "type": "pullrequest_comment", "id": 42306536}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"update": {"description": "This adds the ability to quickly change numeric globals with the arrow keys. (issue #44)\r\nIf one now uses the up, down, left, right keys a numeric global is adjusted in a hopefuly intuitive way. \r\nIt's hard to explain so here is a gif:\r\n![arrow_switching.gif](https://bitbucket.org/repo/9p5Xy7e/images/2884992424-arrow_switching.gif)\r\n\r\nThis should make it easy to quickly edit all numeric globals with just arrow keys and enter on the keyboard. (enter to start/end editing and arrow for moving around and changing values)", "title": "Arrow Key switching", "destination": {"commit": {"hash": "9cf28f527db2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/9cf28f527db2.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/9cf28f527db2"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "adb74d9e427d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager/commit/adb74d9e427d"}, "html": {"href": "#!/PhyNerd/runmanager/commits/adb74d9e427d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager"}, "html": {"href": "#!/PhyNerd/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "PhyNerd/runmanager", "uuid": "{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}"}, "branch": {"name": "quick-arrow-edit"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-07T16:31:22.989129+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"update": {"description": "This adds the ability to quickly change numeric globals with the arrow keys. (issue #44)\r\nIf one now uses the up, down, left, right keys a numeric global is adjusted in a hopefuly intuitive way. \r\nIt's hard to explain so here is a gif:\r\n![arrow_switching.gif](https://bitbucket.org/repo/9p5Xy7e/images/2884992424-arrow_switching.gif)\r\n\r\nThis should make it easy to quickly edit all numeric globals with just arrow keys and enter on the keyboard. (enter to start/end editing and arrow for moving around and changing values)", "title": "Arrow Key switching", "destination": {"commit": {"hash": "9cf28f527db2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/9cf28f527db2.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/9cf28f527db2"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "83a2cff4aabe", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager/commit/83a2cff4aabe"}, "html": {"href": "#!/PhyNerd/runmanager/commits/83a2cff4aabe"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager"}, "html": {"href": "#!/PhyNerd/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "PhyNerd/runmanager", "uuid": "{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}"}, "branch": {"name": "quick-arrow-edit"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-07T16:20:49.215809+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"update": {"description": "This adds the ability to quickly change numeric globals with the arrow keys. (issue #44)\r\nIf one now uses the up, down, left, right keys a numeric global is adjusted in a hopefuly intuitive way. \r\nIt's hard to explain so here is a gif:\r\n![arrow_switching.gif](https://bitbucket.org/repo/9p5Xy7e/images/2884992424-arrow_switching.gif)\r\n\r\nThis should make it easy to quickly edit all numeric globals with just arrow keys and enter on the keyboard. (enter to start/end editing and arrow for moving around and changing values)", "title": "Arrow Key switching", "destination": {"commit": {"hash": "9cf28f527db2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/9cf28f527db2.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/9cf28f527db2"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "9452b4250a8c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager/commit/9452b4250a8c"}, "html": {"href": "#!/PhyNerd/runmanager/commits/9452b4250a8c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager"}, "html": {"href": "#!/PhyNerd/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "PhyNerd/runmanager", "uuid": "{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}"}, "branch": {"name": "quick-arrow-edit"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-07T15:18:33.967714+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"update": {"description": "This adds the ability to quickly change numeric globals with the arrow keys. (issue #44)\r\nIf one now uses the up, down, left, right keys a numeric global is adjusted in a hopefuly intuitive way. \r\nIt's hard to explain so here is a gif:\r\n![arrow_switching.gif](https://bitbucket.org/repo/9p5Xy7e/images/2884992424-arrow_switching.gif)\r\n\r\nThis should make it easy to quickly edit all numeric globals with just arrow keys and enter on the keyboard. (enter to start/end editing and arrow for moving around and changing values)", "title": "Arrow Key switching", "destination": {"commit": {"hash": "9cf28f527db2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/9cf28f527db2.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/9cf28f527db2"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "996f5e706ce0", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager/commit/996f5e706ce0"}, "html": {"href": "#!/PhyNerd/runmanager/commits/996f5e706ce0"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager"}, "html": {"href": "#!/PhyNerd/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "PhyNerd/runmanager", "uuid": "{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}"}, "branch": {"name": "quick-arrow-edit"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-07T15:16:24.882134+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42279802.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42279802"}}, "parent": {"id": 42252589, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42252589.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42252589"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}, "content": {"raw": "uhh nice I think I can work with this :) Thanks!\nI hope to get to try using this by this afternoon", "markup": "markdown", "html": "<p>uhh nice I think I can work with this :) Thanks!\nI hope to get to try using this by this afternoon</p>", "type": "rendered"}, "created_on": "2017-08-07T10:24:02.423493+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-07T10:24:02.479458+00:00", "type": "pullrequest_comment", "id": 42279802}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42261776.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42261776"}}, "parent": {"id": 42252700, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42252700.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42252700"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}, "content": {"raw": "To be clear editing is not linkes to the selected digit it selects the digit just to make things more visible.\n\nI 'm not great with UI stuff so the arrows are probably beyond my skillset. But I like the idea of using the cursor for the selection of significant digits. However I still need to track the left and right arrow to add new zeros.", "markup": "markdown", "html": "<p>To be clear editing is not linkes to the selected digit it selects the digit just to make things more visible.</p>\n<p>I 'm not great with UI stuff so the arrows are probably beyond my skillset. But I like the idea of using the cursor for the selection of significant digits. However I still need to track the left and right arrow to add new zeros.</p>", "type": "rendered"}, "created_on": "2017-08-07T06:37:50.069269+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-07T07:32:13.549866+00:00", "type": "pullrequest_comment", "id": 42261776}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42252589.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42252589"}}, "parent": {"id": 42252485, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42252485.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42252485"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}, "content": {"raw": "Not just that, but numpy may make assumptions about what type of array to make based on whether you pass in a float or not, or you might be setting some device properties that are ultimately going to be written to a C API for some device, and the C API needs floats. We were even typing hex integers into labscript at one point because it was some serial number for a camera (I think we changed them to strings eventually).  Whereas this code presently would parse hex as an integer and write it back with its base 10 value.\n\n\nI'm pretty adamant about making sure that the user gets what they typed, but I'm also happy to help make it happen, since it's an interesting problem!\n\nFor example, if you want to know if a string is a Python base 10 int, or a float, here's all the things I think one needs to take into account:\n\n```\n#!python\n\nimport sys\nimport ast\nPY2 = sys.version_info[0] == 2\nif not PY2:\n    long = int\n\n\ndef is_decimal_int(s):\n    try:\n        value = ast.literal_eval(s)\n    except SyntaxError:\n        return False\n    \n    if type(ast.literal_eval(s)) in [int, long]:\n        if PY2:\n            # int literals starting with zero in PY2 are octal:\n            if s.startswith('0'):\n                return False\n        try:\n            int(s)\n        except ValueError:\n            # Not base 10\n            return False\n        return True\n\ndef is_float(s):\n    try:\n        value = ast.literal_eval(s)\n    except SyntaxError:\n        return False\n    return type(value) == float\n\n\nif __name__ == '__main__':\n    assert not is_decimal_int('123.0')\n    assert is_decimal_int('123')\n    assert not is_decimal_int('0o123')\n    assert not is_decimal_int('0xdeadbeef')\n    assert not is_decimal_int('0b10110110')\n    assert not is_decimal_int('0123') \n    if PY2:       \n        assert not is_decimal_int('123_000')\n    else:\n        assert is_decimal_int('123_000')\n\n    assert is_float('01.0')\n    assert is_float('1.0')\n    assert is_float('-1.1232165321')\n    assert not is_float('1')\n    if PY2:\n        assert not is_float('1_000_000.0')\n    else:\n        assert is_float('1_000_000.0')\n```", "markup": "markdown", "html": "<p>Not just that, but numpy may make assumptions about what type of array to make based on whether you pass in a float or not, or you might be setting some device properties that are ultimately going to be written to a C API for some device, and the C API needs floats. We were even typing hex integers into labscript at one point because it was some serial number for a camera (I think we changed them to strings eventually).  Whereas this code presently would parse hex as an integer and write it back with its base 10 value.</p>\n<p>I'm pretty adamant about making sure that the user gets what they typed, but I'm also happy to help make it happen, since it's an interesting problem!</p>\n<p>For example, if you want to know if a string is a Python base 10 int, or a float, here's all the things I think one needs to take into account:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">ast</span>\n<span class=\"n\">PY2</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">version_info</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">PY2</span><span class=\"p\">:</span>\n    <span class=\"nb\">long</span> <span class=\"o\">=</span> <span class=\"nb\">int</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">is_decimal_int</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">literal_eval</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">SyntaxError</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"bp\">False</span>\n\n    <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">literal_eval</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">))</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">long</span><span class=\"p\">]:</span>\n        <span class=\"k\">if</span> <span class=\"n\">PY2</span><span class=\"p\">:</span>\n            <span class=\"c1\"># int literals starting with zero in PY2 are octal:</span>\n            <span class=\"k\">if</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s1\">&#39;0&#39;</span><span class=\"p\">):</span>\n                <span class=\"k\">return</span> <span class=\"bp\">False</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Not base 10</span>\n            <span class=\"k\">return</span> <span class=\"bp\">False</span>\n        <span class=\"k\">return</span> <span class=\"bp\">True</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">is_float</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">literal_eval</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">SyntaxError</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"bp\">False</span>\n    <span class=\"k\">return</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">float</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"k\">assert</span> <span class=\"ow\">not</span> <span class=\"n\">is_decimal_int</span><span class=\"p\">(</span><span class=\"s1\">&#39;123.0&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">is_decimal_int</span><span class=\"p\">(</span><span class=\"s1\">&#39;123&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"ow\">not</span> <span class=\"n\">is_decimal_int</span><span class=\"p\">(</span><span class=\"s1\">&#39;0o123&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"ow\">not</span> <span class=\"n\">is_decimal_int</span><span class=\"p\">(</span><span class=\"s1\">&#39;0xdeadbeef&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"ow\">not</span> <span class=\"n\">is_decimal_int</span><span class=\"p\">(</span><span class=\"s1\">&#39;0b10110110&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"ow\">not</span> <span class=\"n\">is_decimal_int</span><span class=\"p\">(</span><span class=\"s1\">&#39;0123&#39;</span><span class=\"p\">)</span> \n    <span class=\"k\">if</span> <span class=\"n\">PY2</span><span class=\"p\">:</span>       \n        <span class=\"k\">assert</span> <span class=\"ow\">not</span> <span class=\"n\">is_decimal_int</span><span class=\"p\">(</span><span class=\"s1\">&#39;123_000&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">assert</span> <span class=\"n\">is_decimal_int</span><span class=\"p\">(</span><span class=\"s1\">&#39;123_000&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">assert</span> <span class=\"n\">is_float</span><span class=\"p\">(</span><span class=\"s1\">&#39;01.0&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">is_float</span><span class=\"p\">(</span><span class=\"s1\">&#39;1.0&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">is_float</span><span class=\"p\">(</span><span class=\"s1\">&#39;-1.1232165321&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"ow\">not</span> <span class=\"n\">is_float</span><span class=\"p\">(</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">PY2</span><span class=\"p\">:</span>\n        <span class=\"k\">assert</span> <span class=\"ow\">not</span> <span class=\"n\">is_float</span><span class=\"p\">(</span><span class=\"s1\">&#39;1_000_000.0&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">assert</span> <span class=\"n\">is_float</span><span class=\"p\">(</span><span class=\"s1\">&#39;1_000_000.0&#39;</span><span class=\"p\">)</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-08-06T23:44:51.079670+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-07T00:06:35.005917+00:00", "type": "pullrequest_comment", "id": 42252589}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42252700.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42252700"}}, "parent": {"id": 42252609, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42252609.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42252609"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}, "content": {"raw": "For me I see a flashing cursor and a highlight - if you hit delete or backspace they do the same thing (which makes sense). It seems pretty slick, but I agree it could be better: If you move the cursor with the *mouse*, then you press the up arrow, it highlights the least significant digit again - and you're right, it should highlight the one before the cursor. If you start typing at any time it does overwrite the highlighted digit, when probably what you would want is insertion at the cursor. That could be changed in code whilst still providing the highlight - or the 'highlight' could be graphically changed so that it is clear it's not a textual selection. It could be turned into a pair of tiny arrows above and below the digit for example.", "markup": "markdown", "html": "<p>For me I see a flashing cursor and a highlight - if you hit delete or backspace they do the same thing (which makes sense). It seems pretty slick, but I agree it could be better: If you move the cursor with the <em>mouse</em>, then you press the up arrow, it highlights the least significant digit again - and you're right, it should highlight the one before the cursor. If you start typing at any time it does overwrite the highlighted digit, when probably what you would want is insertion at the cursor. That could be changed in code whilst still providing the highlight - or the 'highlight' could be graphically changed so that it is clear it's not a textual selection. It could be turned into a pair of tiny arrows above and below the digit for example.</p>", "type": "rendered"}, "created_on": "2017-08-06T23:53:20.544451+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-06T23:53:20.547129+00:00", "type": "pullrequest_comment", "id": 42252700}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42252609.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42252609"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}, "content": {"raw": "Full discolsure: I haven't actually tested the code yet!\n\nSo I'm a little concerned with the fact that this code updates the selected text. I think this means that the interface becomes confusing if you actually want to type something (because typing will replace the selected digit). I also suspect that if you were to type a new number (or part of a number in) that the step would be set wrong. Similarly, the code doesn't seem to handle backspace or delete keys, so I suspect using those might also make the step out of sync?\n\nI wonder if it wouldn't be better to not monitor left/right keys at all, and simply increase the value by the amount of the decade immediately left of the cursor (without requiring selection). I believe this is how LabVIEW does this. That way you don't have to handle as many key events, and you don't have to mess with selection of text either.", "markup": "markdown", "html": "<p>Full discolsure: I haven't actually tested the code yet!</p>\n<p>So I'm a little concerned with the fact that this code updates the selected text. I think this means that the interface becomes confusing if you actually want to type something (because typing will replace the selected digit). I also suspect that if you were to type a new number (or part of a number in) that the step would be set wrong. Similarly, the code doesn't seem to handle backspace or delete keys, so I suspect using those might also make the step out of sync?</p>\n<p>I wonder if it wouldn't be better to not monitor left/right keys at all, and simply increase the value by the amount of the decade immediately left of the cursor (without requiring selection). I believe this is how LabVIEW does this. That way you don't have to handle as many key events, and you don't have to mess with selection of text either.</p>", "type": "rendered"}, "created_on": "2017-08-06T23:45:51.919980+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-08-06T23:45:51.922837+00:00", "type": "pullrequest_comment", "id": 42252609}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42252485.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42252485"}}, "parent": {"id": 42244896, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42244896.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42244896"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}, "content": {"raw": "I believe the concern with float vs integer division is that there may be parts deep with labscript that rely on integer division. So without a careful inspection of the entire codebase of labscript, and a comprehensive test suite, we've been reluctant to make the change.", "markup": "markdown", "html": "<p>I believe the concern with float vs integer division is that there may be parts deep with labscript that rely on integer division. So without a careful inspection of the entire codebase of labscript, and a comprehensive test suite, we've been reluctant to make the change.</p>", "type": "rendered"}, "created_on": "2017-08-06T23:38:04.165165+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-08-06T23:38:04.167410+00:00", "type": "pullrequest_comment", "id": 42252485}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42244896.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42244896"}}, "parent": {"id": 42244877, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42244877.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42244877"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}, "content": {"raw": "No rush I was gonna call it a day soon anyway.\n\nUpdate: Ok some thinking later I have two comments. \nFirst why worry about python 2 and 3 division differences as they be in the past very soon anyway or could get fixed with a few imports of future. \nSecond if we want to worry I could treat int and float the same until editing ends, only doing the conversion to int if the variable was a int to start with. And if int has become a float then just let it stay float. This would done by saving \"self.was_int\" just like when initializing \"self.stepsize\". This is probably the cleanest and most intuitive way to do the conservation of types .\n\nUpdate 2: Just keeping a variable \"self.was_int\" won't work as then floats can't become int ever. Is importing float division into experiment script sandbox a option? (it will have to happen sometime anyway)", "markup": "markdown", "html": "<p>No rush I was gonna call it a day soon anyway.</p>\n<p>Update: Ok some thinking later I have two comments. \nFirst why worry about python 2 and 3 division differences as they be in the past very soon anyway or could get fixed with a few imports of future. \nSecond if we want to worry I could treat int and float the same until editing ends, only doing the conversion to int if the variable was a int to start with. And if int has become a float then just let it stay float. This would done by saving \"self.was_int\" just like when initializing \"self.stepsize\". This is probably the cleanest and most intuitive way to do the conservation of types .</p>\n<p>Update 2: Just keeping a variable \"self.was_int\" won't work as then floats can't become int ever. Is importing float division into experiment script sandbox a option? (it will have to happen sometime anyway)</p>", "type": "rendered"}, "created_on": "2017-08-05T20:35:54.737354+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-06T08:54:24.759821+00:00", "type": "pullrequest_comment", "id": 42244896}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"update": {"description": "This adds the ability to quickly change numeric globals with the arrow keys. (issue #44)\r\nIf one now uses the up, down, left, right keys a numeric global is adjusted in a hopefuly intuitive way. \r\nIt's hard to explain so here is a gif:\r\n![arrow_switching.gif](https://bitbucket.org/repo/9p5Xy7e/images/2884992424-arrow_switching.gif)\r\n\r\nThis should make it easy to quickly edit all numeric globals with just arrow keys and enter on the keyboard. (enter to start/end editing and arrow for moving around and changing values)", "title": "Arrow Key switching", "destination": {"commit": {"hash": "9cf28f527db2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/9cf28f527db2.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/9cf28f527db2"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0455699c4995", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager/commit/0455699c4995"}, "html": {"href": "#!/PhyNerd/runmanager/commits/0455699c4995"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager"}, "html": {"href": "#!/PhyNerd/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "PhyNerd/runmanager", "uuid": "{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}"}, "branch": {"name": "quick-arrow-edit"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-05T20:38:39.212682+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42244877.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42244877"}}, "parent": {"id": 42244863, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42244863.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42244863"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}, "content": {"raw": "no problem at all!\n\nI'll have a quick think about the zeros etc, though I have to run right now so I'll get back to you!", "markup": "markdown", "html": "<p>no problem at all!</p>\n<p>I'll have a quick think about the zeros etc, though I have to run right now so I'll get back to you!</p>", "type": "rendered"}, "created_on": "2017-08-05T20:34:17.833218+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-05T20:34:17.836599+00:00", "type": "pullrequest_comment", "id": 42244877}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42244863.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42244863"}}, "parent": {"id": 42244808, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42244808.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42244808"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}, "content": {"raw": "* ok sure didn't think about that\n* My bad didn't check spelling. Also one comment is a bit wrong about every zero being removed but one (i's actually all zeros). I'll change those right away\n* ok removing the int conversion is easy I added that just as I though it would be nicer. So i see two options. First being that I treat ints and floats differently. A int would then always stay a int. And a float would stay a float. Second all are treated equally and I remove all tailing zeros that are not 0*10^-1 converting ints to floats in the process.", "markup": "markdown", "html": "<ul>\n<li>ok sure didn't think about that</li>\n<li>My bad didn't check spelling. Also one comment is a bit wrong about every zero being removed but one (i's actually all zeros). I'll change those right away</li>\n<li>ok removing the int conversion is easy I added that just as I though it would be nicer. So i see two options. First being that I treat ints and floats differently. A int would then always stay a int. And a float would stay a float. Second all are treated equally and I remove all tailing zeros that are not 0*10^-1 converting ints to floats in the process.</li>\n</ul>", "type": "rendered"}, "created_on": "2017-08-05T20:31:38.276339+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-05T20:31:38.346029+00:00", "type": "pullrequest_comment", "id": 42244863}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42244808.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42244808"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}, "content": {"raw": "This is great! I was wondering how it would be possible to have a sensible step size without cumbersome extra configuration menus or something, but the editing the different digits by moving arrow keys left and right is a great way to do that.\n\nA few comments:\n\n*   `QtCore.Qt.Key_Tab` should be added to list of keys that indicate editing finished: `if key in (QtCore.Qt.Key_Enter, QtCore.Qt.Key_Return, QtCore.Qt.Key_Tab):`\n\n* Typos: `dicimalpoint` -> `decimalpoint`, `determin` -> `determine`\n\n* It's not ideal that if the user types '5.0' they get '5', or if they type '5.10' they get '5.1'.  The latter is just about it being faithful to what they typed, and the former could be practical - floats and ints are different datatypes and you may intentionally be creating one rather than the other (in Python 2 this has implications for division for example). The added trailing and leading zeros should definitely be removed though (lest integers be interpreted as octals! That would be confusing!), but I think the logic for how the text is manipulated (though it goes via converting it to a float) could be improved so that the datatype (if compatible with the changes made) and any trailing (or leading) zeros typed by the user are retained.", "markup": "markdown", "html": "<p>This is great! I was wondering how it would be possible to have a sensible step size without cumbersome extra configuration menus or something, but the editing the different digits by moving arrow keys left and right is a great way to do that.</p>\n<p>A few comments:</p>\n<ul>\n<li>\n<p><code>QtCore.Qt.Key_Tab</code> should be added to list of keys that indicate editing finished: <code>if key in (QtCore.Qt.Key_Enter, QtCore.Qt.Key_Return, QtCore.Qt.Key_Tab):</code></p>\n</li>\n<li>\n<p>Typos: <code>dicimalpoint</code> -&gt; <code>decimalpoint</code>, <code>determin</code> -&gt; <code>determine</code></p>\n</li>\n<li>\n<p>It's not ideal that if the user types '5.0' they get '5', or if they type '5.10' they get '5.1'.  The latter is just about it being faithful to what they typed, and the former could be practical - floats and ints are different datatypes and you may intentionally be creating one rather than the other (in Python 2 this has implications for division for example). The added trailing and leading zeros should definitely be removed though (lest integers be interpreted as octals! That would be confusing!), but I think the logic for how the text is manipulated (though it goes via converting it to a float) could be improved so that the datatype (if compatible with the changes made) and any trailing (or leading) zeros typed by the user are retained.</p>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2017-08-05T20:20:46.274204+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-05T20:20:46.276559+00:00", "type": "pullrequest_comment", "id": 42244808}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"update": {"description": "This adds the ability to quickly change numeric globals with the arrow keys. (issue #44)\r\nIf one now uses the up, down, left, right keys a numeric global is adjusted in a hopefuly intuitive way. \r\nIt's hard to explain so here is a gif:\r\n![arrow_switching.gif](https://bitbucket.org/repo/9p5Xy7e/images/2884992424-arrow_switching.gif)\r\n\r\nThis should make it easy to quickly edit all numeric globals with just arrow keys and enter on the keyboard. (enter to start/end editing and arrow for moving around and changing values)", "title": "Arrow Key switching", "destination": {"commit": {"hash": "9cf28f527db2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/9cf28f527db2.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/9cf28f527db2"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0851134c0a6b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager/commit/0851134c0a6b"}, "html": {"href": "#!/PhyNerd/runmanager/commits/0851134c0a6b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager"}, "html": {"href": "#!/PhyNerd/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "PhyNerd/runmanager", "uuid": "{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}"}, "branch": {"name": "quick-arrow-edit"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-05T19:23:50.672051+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42244534.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42244534"}}, "parent": {"id": 42244532, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42244532.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42244532"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}, "content": {"raw": "Ok great then there are no known bugs :)", "markup": "markdown", "html": "<p>Ok great then there are no known bugs :)</p>", "type": "rendered"}, "created_on": "2017-08-05T19:21:58.959047+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-05T19:21:59.015252+00:00", "type": "pullrequest_comment", "id": 42244534}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42244532.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42244532"}}, "parent": {"id": 42244522, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42244522.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42244522"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}, "content": {"raw": "That's intentional - it's supposed to force you to type units! Here's the code that does it, if you're curious:\n\n\n```\n#!python\n\ndef complete_change_global_value(self, global_name, previous_value, new_value, item, previous_background, previous_icon):\n        try:\n            runmanager.set_value(self.globals_file, self.group_name, global_name, new_value)\n        except Exception as e:\n            error_dialog(str(e))\n            # Set the item text back to the old name, since the change failed:\n            with self.globals_model_item_changed_disconnected:\n                item.setText(previous_value)\n                item.setData(previous_value, self.GLOBALS_ROLE_PREVIOUS_TEXT)\n                item.setData(previous_value, self.GLOBALS_ROLE_SORT_DATA)\n                item.setData(previous_background, QtCore.Qt.BackgroundRole)\n                item.setIcon(previous_icon)\n        else:\n            self.check_for_boolean_values(item)\n            self.do_model_sort()\n            item.setToolTip('Evaluating...')\n            self.globals_changed()\n            units_item = self.get_global_item_by_name(global_name, self.GLOBALS_COL_UNITS)\n            units = units_item.text()\n            if not units:\n                # Go into editing the units item automatically:\n                units_item_index = units_item.index()\n                self.ui.treeView_globals.setCurrentIndex(units_item_index)\n                self.ui.treeView_globals.edit(units_item_index)\n            else:\n                # If this changed the sort order, ensure the item is still visible:\n                scroll_treeview_to_row_if_current(self.ui.treeView_globals, item)\n```\n\nWe usually type \"arbitrary\" or something if it's something with no units. But we wanted to avoid people getting into the habit of leaving it blank, which is otherwise an easy habit to get into if it doesn't automatically take you there.", "markup": "markdown", "html": "<p>That's intentional - it's supposed to force you to type units! Here's the code that does it, if you're curious:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">complete_change_global_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">global_name</span><span class=\"p\">,</span> <span class=\"n\">previous_value</span><span class=\"p\">,</span> <span class=\"n\">new_value</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"p\">,</span> <span class=\"n\">previous_background</span><span class=\"p\">,</span> <span class=\"n\">previous_icon</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">runmanager</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">globals_file</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">group_name</span><span class=\"p\">,</span> <span class=\"n\">global_name</span><span class=\"p\">,</span> <span class=\"n\">new_value</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"n\">error_dialog</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">))</span>\n            <span class=\"c1\"># Set the item text back to the old name, since the change failed:</span>\n            <span class=\"k\">with</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">globals_model_item_changed_disconnected</span><span class=\"p\">:</span>\n                <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">setText</span><span class=\"p\">(</span><span class=\"n\">previous_value</span><span class=\"p\">)</span>\n                <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">setData</span><span class=\"p\">(</span><span class=\"n\">previous_value</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">GLOBALS_ROLE_PREVIOUS_TEXT</span><span class=\"p\">)</span>\n                <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">setData</span><span class=\"p\">(</span><span class=\"n\">previous_value</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">GLOBALS_ROLE_SORT_DATA</span><span class=\"p\">)</span>\n                <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">setData</span><span class=\"p\">(</span><span class=\"n\">previous_background</span><span class=\"p\">,</span> <span class=\"n\">QtCore</span><span class=\"o\">.</span><span class=\"n\">Qt</span><span class=\"o\">.</span><span class=\"n\">BackgroundRole</span><span class=\"p\">)</span>\n                <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">setIcon</span><span class=\"p\">(</span><span class=\"n\">previous_icon</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">check_for_boolean_values</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">do_model_sort</span><span class=\"p\">()</span>\n            <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">setToolTip</span><span class=\"p\">(</span><span class=\"s1\">&#39;Evaluating...&#39;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">globals_changed</span><span class=\"p\">()</span>\n            <span class=\"n\">units_item</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_global_item_by_name</span><span class=\"p\">(</span><span class=\"n\">global_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">GLOBALS_COL_UNITS</span><span class=\"p\">)</span>\n            <span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"n\">units_item</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">units</span><span class=\"p\">:</span>\n                <span class=\"c1\"># Go into editing the units item automatically:</span>\n                <span class=\"n\">units_item_index</span> <span class=\"o\">=</span> <span class=\"n\">units_item</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">()</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">treeView_globals</span><span class=\"o\">.</span><span class=\"n\">setCurrentIndex</span><span class=\"p\">(</span><span class=\"n\">units_item_index</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">treeView_globals</span><span class=\"o\">.</span><span class=\"n\">edit</span><span class=\"p\">(</span><span class=\"n\">units_item_index</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"c1\"># If this changed the sort order, ensure the item is still visible:</span>\n                <span class=\"n\">scroll_treeview_to_row_if_current</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">treeView_globals</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>We usually type \"arbitrary\" or something if it's something with no units. But we wanted to avoid people getting into the habit of leaving it blank, which is otherwise an easy habit to get into if it doesn't automatically take you there.</p>", "type": "rendered"}, "created_on": "2017-08-05T19:20:56.321029+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-05T19:20:56.324304+00:00", "type": "pullrequest_comment", "id": 42244532}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments/42244522.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12/_/diff#comment-42244522"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}, "content": {"raw": "The only strange bug known till now is that upon saving the right neighboring field enters edit mode. (I have no idea why)", "markup": "markdown", "html": "<p>The only strange bug known till now is that upon saving the right neighboring field enters edit mode. (I have no idea why)</p>", "type": "rendered"}, "created_on": "2017-08-05T19:16:49.025908+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-08-05T19:16:49.080692+00:00", "type": "pullrequest_comment", "id": 42244522}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"update": {"description": "This adds the ability to quickly change numeric globals with the arrow keys. (issue #44)\r\nIf one now uses the up, down, left, right keys a numeric global is adjusted in a hopefuly intuitive way. \r\nIt's hard to explain so here is a gif:\r\n![arrow_switching.gif](https://bitbucket.org/repo/9p5Xy7e/images/2884992424-arrow_switching.gif)", "title": "Arrow Key switching", "destination": {"commit": {"hash": "9cf28f527db2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/9cf28f527db2.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/9cf28f527db2"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0851134c0a6b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager/commit/0851134c0a6b"}, "html": {"href": "#!/PhyNerd/runmanager/commits/0851134c0a6b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager"}, "html": {"href": "#!/PhyNerd/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "PhyNerd/runmanager", "uuid": "{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}"}, "branch": {"name": "quick-arrow-edit"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-05T19:14:08.001229+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}, {"update": {"description": "This adds the ability to quickly change numeric globals with the arrow keys. (issue #44)\r\nIf one now uses the up, down, left, right keys a numeric global is adjusted in a hopefuly intuitive way. \r\nIt's hard to explain so here is a gif:\r\n![arrow_switching.gif](https://bitbucket.org/repo/9p5Xy7e/images/2884992424-arrow_switching.gif)", "title": "Arrow Key switching", "destination": {"commit": {"hash": "9cf28f527db2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/9cf28f527db2.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/9cf28f527db2"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0851134c0a6b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager/commit/0851134c0a6b"}, "html": {"href": "#!/PhyNerd/runmanager/commits/0851134c0a6b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager"}, "html": {"href": "#!/PhyNerd/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "PhyNerd/runmanager", "uuid": "{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}"}, "branch": {"name": "quick-arrow-edit"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-08-05T19:14:07.931632+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}}, "title": "Arrow Key switching"}}]}