{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/16/comments/59770045.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/16/_/diff#comment-59770045"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/16.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/16"}}, "title": "Python3"}, "content": {"raw": "labscript and labscript\\_devices python3 changes need more testing and blacs is blocked by the former. \n\nSo what about this one?\n\nSummary of the changes made:\n\n* future imports in all files\n* StringIO -> io and Queue -> queue in python3\n* str -> unicode \\(before everything was unicode anyway\\)\n* casted all zip, dict.key\\(\\), dict.value\\(\\) to list\n* replaced `execfile` with the same code we used to replace it in lyse\n* replaced `generator.next()` with `next(generator)` as that works for both python2 and python3\n\n\u200c", "markup": "markdown", "html": "<p>labscript and labscript_devices python3 changes need more testing and blacs is blocked by the former. </p>\n<p>So what about this one?</p>\n<p>Summary of the changes made:</p>\n<ul>\n<li>future imports in all files</li>\n<li>StringIO -&gt; io and Queue -&gt; queue in python3</li>\n<li>str -&gt; unicode (before everything was unicode anyway)</li>\n<li>casted all zip, dict.key(), dict.value() to list</li>\n<li>replaced <code>execfile</code> with the same code we used to replace it in lyse</li>\n<li>replaced <code>generator.next()</code> with <code>next(generator)</code> as that works for both python2 and python3</li>\n</ul>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2018-03-23T21:39:41.450679+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-23T21:39:41.529710+00:00", "type": "pullrequest_comment", "id": 59770045}, {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/16/comments/59847493.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/16/_/diff#comment-59847493"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/16.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/16"}}, "title": "Python3"}, "content": {"raw": "I'm pretty happy with this!\n\nSome comments:\n\nIn `get_all_groups()`, `if not isinstance(h5_files, list)` is not a sufficient check since the the h5_files could be a generator or tuple, not just a list. So better to stick with `if not isinstance(h5_files, str) or isinstance(h5_files, bytes)`, with just translation of the string types to the python 3 names for them.\n\nOther than that I am happy!\n\nFeel free to replace all occurances of `value.decode() if isinstance(value, bytes) else str(value)` with a call to a global function if you like:\n\n```python\ndef _ensure_str(s):\n    \"\"\"convert bytestrings and numpy strings to python strings\"\"\"\n    return s.decode() if isinstance(s, bytes) else str(s)\n...\nvalue = _ensure_str(value)\n```\n\nIt's slightly less error prone but I am pretty indifferent.\n", "markup": "markdown", "html": "<p>I'm pretty happy with this!</p>\n<p>Some comments:</p>\n<p>In <code>get_all_groups()</code>, <code>if not isinstance(h5_files, list)</code> is not a sufficient check since the the h5_files could be a generator or tuple, not just a list. So better to stick with <code>if not isinstance(h5_files, str) or isinstance(h5_files, bytes)</code>, with just translation of the string types to the python 3 names for them.</p>\n<p>Other than that I am happy!</p>\n<p>Feel free to replace all occurances of <code>value.decode() if isinstance(value, bytes) else str(value)</code> with a call to a global function if you like:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">_ensure_str</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;convert bytestrings and numpy strings to python strings&quot;&quot;&quot;</span>\n    <span class=\"k\">return</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">_ensure_str</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>It's slightly less error prone but I am pretty indifferent.</p>", "type": "rendered"}, "created_on": "2018-03-26T11:30:43.115892+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-26T11:30:43.119247+00:00", "type": "pullrequest_comment", "id": 59847493}, {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/16/comments/59850329.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/16/_/diff#comment-59850329"}}, "parent": {"id": 59847493, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/16/comments/59847493.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/16/_/diff#comment-59847493"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/16.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/16"}}, "title": "Python3"}, "content": {"raw": "Thanks for the review!\n\nI'll change `if not isinstance(h5_files, list)` once I verify that it doesn't cause any problems. \\(it's been to long since I made the change might have prevented some bugs\\)\n\nI think I'll make the `_ensure_str` changes as well that makes it easier to remove them once python2 is deprecated.", "markup": "markdown", "html": "<p>Thanks for the review!</p>\n<p>I'll change <code>if not isinstance(h5_files, list)</code> once I verify that it doesn't cause any problems. (it's been to long since I made the change might have prevented some bugs)</p>\n<p>I think I'll make the <code>_ensure_str</code> changes as well that makes it easier to remove them once python2 is deprecated.</p>", "type": "rendered"}, "created_on": "2018-03-26T11:54:47.638559+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-26T11:54:47.704082+00:00", "type": "pullrequest_comment", "id": 59850329}, {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/16/comments/59917293.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/16/_/diff#comment-59917293"}}, "parent": {"id": 59850329, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/16/comments/59850329.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/16/_/diff#comment-59850329"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/16.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/16"}}, "title": "Python3"}, "content": {"raw": "I applied the requested changes.\n\nBasic testing under both python2 and python3 revealed no bugs.", "markup": "markdown", "html": "<p>I applied the requested changes.</p>\n<p>Basic testing under both python2 and python3 revealed no bugs.</p>", "type": "rendered"}, "created_on": "2018-03-26T21:36:10.115821+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-26T21:36:20.350948+00:00", "type": "pullrequest_comment", "id": 59917293}, {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/16/comments/59929532.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/16/_/diff#comment-59929532"}}, "parent": {"id": 59917293, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/16/comments/59917293.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/16/_/diff#comment-59917293"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/16.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/16"}}, "title": "Python3"}, "content": {"raw": "Excellent, thank you!", "markup": "markdown", "html": "<p>Excellent, thank you!</p>", "type": "rendered"}, "created_on": "2018-03-27T01:59:09.774557+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-27T01:59:09.777407+00:00", "type": "pullrequest_comment", "id": 59929532}], "page": 1, "size": 5}