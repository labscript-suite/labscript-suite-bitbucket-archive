{"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/17/comments/49468292.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/17/_/diff#comment-49468292"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 17, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/17.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/17"}}, "title": "The \"Axes\" tab"}, "content": {"raw": "I'm thinking that I may change the shuffle algorithm.\n\nCurrently it behaves as a set of nested for loops, where the list to be iterated over is shuffled at each level \\(which I believe is what was proposed in #31\\). However, this leads to the following behaviour...\n\nconsider a set of globals:\n\n* a=\\[1,2,3\\]\n* b=\\[4,5,6\\]\n* c=\\[7,8,9\\]\n\nLet's assume we shuffle b and c, so we produce shots like this:\n\n* \\(a=1, b=5, c=9\\)\n* \\(a=1, b=5, c=7\\)\n* \\(a=1, b=5, c=8\\)\n* \\(a=1, b=4, c=9\\)\n* \\(a=1, b=4, c=7\\)\n* \\(a=1, b=4, c=8\\)\n* \\(a=1, b=6, c=9\\)\n* \\(a=1, b=6, c=7\\)\n* \\(a=1, b=6, c=8\\)\n* etc...\n\nNote that \"c\" always iterates in the same order \\(9,7,8,9,7,8,9,7,8...\\) despite being shuffled. Similarly, if we were to continue listing the combinations, \"b\" would iterate in the same order for a=2. To me, this seems bad as results from shots may contain systematic errors due to the identical iteration of globals. I think a better approach would be to instead, generate all combinations of globals \\(do the Caertesian product\\) and group them by the hierarchy of globals as shown in the screen shot. Then, iterate over this hierarchy and shuffle child shots for each value of a parent global. For example, this would mean grouping like this:\n\n* a=1  \n   b=4  \n   \\(a=1, b=4, c=7\\)  \n   \\(a=1, b=4, c=8\\)  \n   \\(a=1, b=4, c=9\\)  \n   b=5  \n   \\(a=1, b=5, c=7\\)  \n   \\(a=1, b=5, c=8\\)  \n   \\(a=1, b=5, c=9\\)  \n   b=6  \n   \\(a=1, b=6, c=7\\)  \n   \\(a=1, b=6, c=8\\)  \n   \\(a=1, b=6, c=9\\)  \n   a=2  \n   b=4  \n   \\(a=2, b=4, c=7\\)  \n   \\(a=2, b=4, c=8\\)  \n   \\(a=2, b=4, c=9\\)  \n   b=5  \n   \\(a=2, b=5, c=7\\)  \n   \\(a=2, b=5, c=8\\)  \n   \\(a=2, b=5, c=9\\)  \n   b=6  \n   \\(a=2, b=6, c=7\\)  \n   \\(a=2, b=6, c=8\\)  \n   \\(a=2, b=6, c=9\\)  \n   a=3  \n   b=4  \n   \\(a=3, b=4, c=7\\)  \n   \\(a=3, b=4, c=8\\)  \n   \\(a=3, b=4, c=9\\)  \n   b=5  \n   \\(a=3, b=5, c=7\\)  \n   \\(a=3, b=5, c=8\\)  \n   \\(a=3, b=5, c=9\\)  \n   b=6  \n   \\(a=3, b=6, c=7\\)  \n   \\(a=3, b=6, c=8\\)  \n   \\(a=3, b=6, c=9\\)\n\nAnd then first shuffling \"a\"\n\n* a=2  \n   b=4  \n   \\(a=2, b=4, c=7\\)  \n   \\(a=2, b=4, c=8\\)  \n   \\(a=2, b=4, c=9\\)  \n   b=5  \n   \\(a=2, b=5, c=7\\)  \n   \\(a=2, b=5, c=8\\)  \n   \\(a=2, b=5, c=9\\)  \n   b=6  \n   \\(a=2, b=6, c=7\\)  \n   \\(a=2, b=6, c=8\\)  \n   \\(a=2, b=6, c=9\\)  \n   a=1  \n   b=4  \n   \\(a=1, b=4, c=7\\)  \n   \\(a=1, b=4, c=8\\)  \n   \\(a=1, b=4, c=9\\)  \n   b=5  \n   \\(a=1, b=5, c=7\\)  \n   \\(a=1, b=5, c=8\\)  \n   \\(a=1, b=5, c=9\\)  \n   b=6  \n   \\(a=1, b=6, c=7\\)  \n   \\(a=1, b=6, c=8\\)  \n   \\(a=1, b=6, c=9\\)  \n   a=3  \n   b=4  \n   \\(a=3, b=4, c=7\\)  \n   \\(a=3, b=4, c=8\\)  \n   \\(a=3, b=4, c=9\\)  \n   b=5  \n   \\(a=3, b=5, c=7\\)  \n   \\(a=3, b=5, c=8\\)  \n   \\(a=3, b=5, c=9\\)  \n   b=6  \n   \\(a=3, b=6, c=7\\)  \n   \\(a=3, b=6, c=8\\)  \n   \\(a=3, b=6, c=9\\)\n\nThen shuffling level b for each a \\(note that the order of b for each a is different\\)\n\n* a=2  \n   b=6  \n   \\(a=2, b=6, c=7\\)  \n   \\(a=2, b=6, c=8\\)  \n   \\(a=2, b=6, c=9\\)  \n   b=4  \n   \\(a=2, b=4, c=7\\)  \n   \\(a=2, b=4, c=8\\)  \n   \\(a=2, b=4, c=9\\)  \n   b=5  \n   \\(a=2, b=5, c=7\\)  \n   \\(a=2, b=5, c=8\\)  \n   \\(a=2, b=5, c=9\\)  \n   a=1  \n   b=5  \n   \\(a=1, b=5, c=7\\)  \n   \\(a=1, b=5, c=8\\)  \n   \\(a=1, b=5, c=9\\)  \n   b=4  \n   \\(a=1, b=4, c=7\\)  \n   \\(a=1, b=4, c=8\\)  \n   \\(a=1, b=4, c=9\\)  \n   b=6  \n   \\(a=1, b=6, c=7\\)  \n   \\(a=1, b=6, c=8\\)  \n   \\(a=1, b=6, c=9\\)  \n   a=3  \n   b=5  \n   \\(a=3, b=5, c=7\\)  \n   \\(a=3, b=5, c=8\\)  \n   \\(a=3, b=5, c=9\\)  \n   b=6  \n   \\(a=3, b=6, c=7\\)  \n   \\(a=3, b=6, c=8\\)  \n   \\(a=3, b=6, c=9\\)  \n   b=4  \n   \\(a=3, b=4, c=7\\)  \n   \\(a=3, b=4, c=8\\)  \n   \\(a=3, b=4, c=9\\)\n\nThen shuffle c randomly in each set of the 9 sets of 3 shots displayed above \\(which I can't be bother showing right now...\\)\n\nDo people think this is a significant improvement to the shuffling algorithm? Currently this is somewhat mitigated by the fact that if all globals have shuffled tick, then I also do a global shuffle. I suspect that's probably still a good idea to do, because even with my new proposal above, you still have all the a=x shots first, then all the a=y shots next and then all the a=z shots after that, even if the actual values of x,y,z change from sequence to sequence.\n\nUPDATE: Just had a thought with my last point...it may instead be beneficial to have an additional check box per global in the axes tab which indicates whether or not the global should be shuffled with the parent \\(so do not preserve the hierarchy\\) or only shuffled within the global \\(preserve the hierarchy as described above\\). Alternatively, this could be indicated with indentation \\(but that requires additional controls to manage a complex hierarchy of globals\\). Maybe this should be bumped into a different issue/pull request as this pull request is still an improvement over the existing system, even if it is not perfect \\(and still replicates the old system if all globals are selected to be shuffled\\)", "markup": "markdown", "html": "<p>I'm thinking that I may change the shuffle algorithm.</p>\n<p>Currently it behaves as a set of nested for loops, where the list to be iterated over is shuffled at each level (which I believe is what was proposed in <a href=\"#!/labscript_suite/runmanager/issues/31/axes-tab-control-over-loop-order-of\" rel=\"nofollow\" title=\"Axes tab - control over loop order of parameter space and shuffling of individual axes\" class=\"ap-connect-link\"><s>#31</s></a>). However, this leads to the following behaviour...</p>\n<p>consider a set of globals:</p>\n<ul>\n<li>a=[1,2,3]</li>\n<li>b=[4,5,6]</li>\n<li>c=[7,8,9]</li>\n</ul>\n<p>Let's assume we shuffle b and c, so we produce shots like this:</p>\n<ul>\n<li>(a=1, b=5, c=9)</li>\n<li>(a=1, b=5, c=7)</li>\n<li>(a=1, b=5, c=8)</li>\n<li>(a=1, b=4, c=9)</li>\n<li>(a=1, b=4, c=7)</li>\n<li>(a=1, b=4, c=8)</li>\n<li>(a=1, b=6, c=9)</li>\n<li>(a=1, b=6, c=7)</li>\n<li>(a=1, b=6, c=8)</li>\n<li>etc...</li>\n</ul>\n<p>Note that \"c\" always iterates in the same order (9,7,8,9,7,8,9,7,8...) despite being shuffled. Similarly, if we were to continue listing the combinations, \"b\" would iterate in the same order for a=2. To me, this seems bad as results from shots may contain systematic errors due to the identical iteration of globals. I think a better approach would be to instead, generate all combinations of globals (do the Caertesian product) and group them by the hierarchy of globals as shown in the screen shot. Then, iterate over this hierarchy and shuffle child shots for each value of a parent global. For example, this would mean grouping like this:</p>\n<ul>\n<li>a=1<br />\n   b=4<br />\n   (a=1, b=4, c=7)<br />\n   (a=1, b=4, c=8)<br />\n   (a=1, b=4, c=9)<br />\n   b=5<br />\n   (a=1, b=5, c=7)<br />\n   (a=1, b=5, c=8)<br />\n   (a=1, b=5, c=9)<br />\n   b=6<br />\n   (a=1, b=6, c=7)<br />\n   (a=1, b=6, c=8)<br />\n   (a=1, b=6, c=9)<br />\n   a=2<br />\n   b=4<br />\n   (a=2, b=4, c=7)<br />\n   (a=2, b=4, c=8)<br />\n   (a=2, b=4, c=9)<br />\n   b=5<br />\n   (a=2, b=5, c=7)<br />\n   (a=2, b=5, c=8)<br />\n   (a=2, b=5, c=9)<br />\n   b=6<br />\n   (a=2, b=6, c=7)<br />\n   (a=2, b=6, c=8)<br />\n   (a=2, b=6, c=9)<br />\n   a=3<br />\n   b=4<br />\n   (a=3, b=4, c=7)<br />\n   (a=3, b=4, c=8)<br />\n   (a=3, b=4, c=9)<br />\n   b=5<br />\n   (a=3, b=5, c=7)<br />\n   (a=3, b=5, c=8)<br />\n   (a=3, b=5, c=9)<br />\n   b=6<br />\n   (a=3, b=6, c=7)<br />\n   (a=3, b=6, c=8)<br />\n   (a=3, b=6, c=9)</li>\n</ul>\n<p>And then first shuffling \"a\"</p>\n<ul>\n<li>a=2<br />\n   b=4<br />\n   (a=2, b=4, c=7)<br />\n   (a=2, b=4, c=8)<br />\n   (a=2, b=4, c=9)<br />\n   b=5<br />\n   (a=2, b=5, c=7)<br />\n   (a=2, b=5, c=8)<br />\n   (a=2, b=5, c=9)<br />\n   b=6<br />\n   (a=2, b=6, c=7)<br />\n   (a=2, b=6, c=8)<br />\n   (a=2, b=6, c=9)<br />\n   a=1<br />\n   b=4<br />\n   (a=1, b=4, c=7)<br />\n   (a=1, b=4, c=8)<br />\n   (a=1, b=4, c=9)<br />\n   b=5<br />\n   (a=1, b=5, c=7)<br />\n   (a=1, b=5, c=8)<br />\n   (a=1, b=5, c=9)<br />\n   b=6<br />\n   (a=1, b=6, c=7)<br />\n   (a=1, b=6, c=8)<br />\n   (a=1, b=6, c=9)<br />\n   a=3<br />\n   b=4<br />\n   (a=3, b=4, c=7)<br />\n   (a=3, b=4, c=8)<br />\n   (a=3, b=4, c=9)<br />\n   b=5<br />\n   (a=3, b=5, c=7)<br />\n   (a=3, b=5, c=8)<br />\n   (a=3, b=5, c=9)<br />\n   b=6<br />\n   (a=3, b=6, c=7)<br />\n   (a=3, b=6, c=8)<br />\n   (a=3, b=6, c=9)</li>\n</ul>\n<p>Then shuffling level b for each a (note that the order of b for each a is different)</p>\n<ul>\n<li>a=2<br />\n   b=6<br />\n   (a=2, b=6, c=7)<br />\n   (a=2, b=6, c=8)<br />\n   (a=2, b=6, c=9)<br />\n   b=4<br />\n   (a=2, b=4, c=7)<br />\n   (a=2, b=4, c=8)<br />\n   (a=2, b=4, c=9)<br />\n   b=5<br />\n   (a=2, b=5, c=7)<br />\n   (a=2, b=5, c=8)<br />\n   (a=2, b=5, c=9)<br />\n   a=1<br />\n   b=5<br />\n   (a=1, b=5, c=7)<br />\n   (a=1, b=5, c=8)<br />\n   (a=1, b=5, c=9)<br />\n   b=4<br />\n   (a=1, b=4, c=7)<br />\n   (a=1, b=4, c=8)<br />\n   (a=1, b=4, c=9)<br />\n   b=6<br />\n   (a=1, b=6, c=7)<br />\n   (a=1, b=6, c=8)<br />\n   (a=1, b=6, c=9)<br />\n   a=3<br />\n   b=5<br />\n   (a=3, b=5, c=7)<br />\n   (a=3, b=5, c=8)<br />\n   (a=3, b=5, c=9)<br />\n   b=6<br />\n   (a=3, b=6, c=7)<br />\n   (a=3, b=6, c=8)<br />\n   (a=3, b=6, c=9)<br />\n   b=4<br />\n   (a=3, b=4, c=7)<br />\n   (a=3, b=4, c=8)<br />\n   (a=3, b=4, c=9)</li>\n</ul>\n<p>Then shuffle c randomly in each set of the 9 sets of 3 shots displayed above (which I can't be bother showing right now...)</p>\n<p>Do people think this is a significant improvement to the shuffling algorithm? Currently this is somewhat mitigated by the fact that if all globals have shuffled tick, then I also do a global shuffle. I suspect that's probably still a good idea to do, because even with my new proposal above, you still have all the a=x shots first, then all the a=y shots next and then all the a=z shots after that, even if the actual values of x,y,z change from sequence to sequence.</p>\n<p>UPDATE: Just had a thought with my last point...it may instead be beneficial to have an additional check box per global in the axes tab which indicates whether or not the global should be shuffled with the parent (so do not preserve the hierarchy) or only shuffled within the global (preserve the hierarchy as described above). Alternatively, this could be indicated with indentation (but that requires additional controls to manage a complex hierarchy of globals). Maybe this should be bumped into a different issue/pull request as this pull request is still an improvement over the existing system, even if it is not perfect (and still replicates the old system if all globals are selected to be shuffled)</p>", "type": "rendered"}, "created_on": "2017-11-13T23:05:38.361004+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-11-13T23:14:04.531175+00:00", "type": "pullrequest_comment", "id": 49468292}