{"pagelen": 50, "values": [{"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18/comments/133515534.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18/_/diff#comment-133515534"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}, "content": {"raw": "What do you think about this one, Phil?\n\nDo you want to resolve merge conflicts and still go for it, or abandon it in favour of some different approach at some arbitrary future time?", "markup": "markdown", "html": "<p>What do you think about this one, Phil?</p>\n<p>Do you want to resolve merge conflicts and still go for it, or abandon it in favour of some different approach at some arbitrary future time?</p>", "type": "rendered"}, "created_on": "2020-01-28T21:45:19.887303+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2020-01-28T21:45:19.894571+00:00", "type": "pullrequest_comment", "id": 133515534}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18/comments/66519921.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18/_/diff#comment-66519921"}}, "parent": {"id": 59935452, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18/comments/59935452.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18/_/diff#comment-59935452"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}, "content": {"raw": "They are solved in [#!/PhyNerd/runmanager/commits/c722577a2478bd8500c246a4fabfc568c79b4cf0](#!/PhyNerd/runmanager/commits/c722577a2478bd8500c246a4fabfc568c79b4cf0) we are running the changes with this commit for a few weeks now without problems \\(under python3\\)", "markup": "markdown", "html": "<p>They are solved in <a data-is-external-link=\"true\" href=\"#!/PhyNerd/runmanager/commits/c722577a2478bd8500c246a4fabfc568c79b4cf0\" rel=\"nofollow\">#!/PhyNerd/runmanager/commits/c722577a2478bd8500c246a4fabfc568c79b4cf0</a> we are running the changes with this commit for a few weeks now without problems (under python3)</p>", "type": "rendered"}, "created_on": "2018-06-07T18:18:05.120962+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-06-07T18:18:05.173529+00:00", "type": "pullrequest_comment", "id": 66519921}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18/comments/59935452.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18/_/diff#comment-59935452"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}, "content": {"raw": "Once the merge conflicts are resolved, this should be merged.", "markup": "markdown", "html": "<p>Once the merge conflicts are resolved, this should be merged.</p>", "type": "rendered"}, "created_on": "2018-03-27T04:50:29.700127+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-27T04:50:29.703690+00:00", "type": "pullrequest_comment", "id": 59935452}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18/comments/59385080.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18/_/diff#comment-59385080"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}, "content": {"raw": "I made a few changes to make this python 3 compatible. If you want you can pull them from [my repo](#!/PhyNerd/runmanager/commits/c722577a2478bd8500c246a4fabfc568c79b4cf0).", "markup": "markdown", "html": "<p>I made a few changes to make this python 3 compatible. If you want you can pull them from <a data-is-external-link=\"true\" href=\"#!/PhyNerd/runmanager/commits/c722577a2478bd8500c246a4fabfc568c79b4cf0\" rel=\"nofollow\">my repo</a>.</p>", "type": "rendered"}, "created_on": "2018-03-20T20:23:12.728385+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-20T20:23:12.790030+00:00", "type": "pullrequest_comment", "id": 59385080}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}}, {"update": {"description": "This pull request allows new batch compilers to be written, allowing other APIs other than labscript to be used. This allows runmanager to become a generic parameter \\(and parameter space\\) manager, which could be useful for many things including handling parameter space scans for computational simulations.\r\n\r\nThis requires labscript pull request 27, otherwise known as labscript v2.4.0\r\n\r\nThere are a bunch of changes \\(outlined in the commit messages below\\). Feel free to ask me questions!\r\n\r\nPlease let me do the merging once approved, so the branch gets closed properly!\r\n\r\n* Created new branch labscript-agnostic\r\n* Generalised batch\\_compiler so that it can be subclassed to compiler experiments using something other than labscript.\r\n\r\n    This also involved:\r\n\r\n\r\n\r\n    * creating a new batch compiler for labscript based on the generalised class\r\n    * Moving the globals loading code from labscript to runmanager batch compiler \\(so that we don't have to duplicate it inside labscript alternatives\\)\r\n    * Adding version checks for the batch compiler script \\(now needs labscript 2.4 due to the above point\\)\r\n    \r\n        There are some additional benefits to this, for instance the `__builtins__` dict is saved just before invoking the script, which means that any modules that modify `__builtins__` on reload will not have those modifications removed. We also now hold the module watcher and kill lock during cleanup \\(which I don't think was the case previously unless I don't properly understand when `finally` is executed!\\)\r\n\r\n    \r\n    \r\n* Cleaned up the new batch compiler scripts so that we can instantiate the processors without needing it to be launched as a zprocess subprocess.\r\n\r\n    This allows someone to use the BatchProcessor class in their own script to compile labscript \\(or other\\) scripts while automatically gaining access to the machinery for loading globals. Ultimately we could reintroduce a command line utility to take a labscript file and globals file and compile a shot \\(like we used to have\\).\r\n\r\n\r\n\r\n    As an example of the above, consider doing: from runmanage.batch\\_compiler\\_labscript import BatchProcessor batch\\_processor = BatchProcessor\\(\\) batch\\_processor.compile\\(labscript\\_file, globals\\_file\\)\r\n\r\n\r\n* modified the labscript batch compiler to use the new kwargs in labscript for disabling loading/cleanup of globals from HDF5 file as this is now handled by runmanager.\r\n* Modified runmanager to use a new \\(optional\\) labconfig parameter \\[runmanager\\\\batch\\_compiler\\_script\\] as the path to use when launching the batch compiler.\r\n\r\n    This allows custom batch\\_compilers to be used that invoke something other than labscript, making runmanager a generic parameter \\(and parameter space\\) manager that could be applied to a variety of situations \\(such as automating scanning a parameter space in a computational simulation\\).", "title": "Allow APIs other than labscript to be invoked by runmanager", "destination": {"commit": {"hash": "7f5031fbb4c9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/7f5031fbb4c9.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/7f5031fbb4c9"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "6e44dc101acd", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/runmanager/commit/6e44dc101acd"}, "html": {"href": "#!/pstarkey/runmanager/commits/6e44dc101acd"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/runmanager"}, "html": {"href": "#!/pstarkey/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{2f11f5fd-c84d-42bd-a265-eda8b5bef98b}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "pstarkey/runmanager", "uuid": "{2f11f5fd-c84d-42bd-a265-eda8b5bef98b}"}, "branch": {"name": "labscript-agnostic"}}, "state": "OPEN", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "date": "2018-03-13T22:23:15.724056+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}}, {"approval": {"date": "2018-03-13T13:14:15.360459+00:00", "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}, "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18/comments/58671650.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18/_/diff#comment-58671650"}}, "parent": {"id": 58640539, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18/comments/58640539.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18/_/diff#comment-58640539"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}, "content": {"raw": "Ok so testing has shown no side effects until now for this and it's corresponding labscript pull request.", "markup": "markdown", "html": "<p>Ok so testing has shown no side effects until now for this and it's corresponding labscript pull request.</p>", "type": "rendered"}, "created_on": "2018-03-13T13:14:12.112467+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-13T13:14:12.149463+00:00", "type": "pullrequest_comment", "id": 58671650}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18/comments/58640539.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18/_/diff#comment-58640539"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}, "content": {"raw": "Changes sound good I'll merge this into our lab fork later today and report back how that went.", "markup": "markdown", "html": "<p>Changes sound good I'll merge this into our lab fork later today and report back how that went.</p>", "type": "rendered"}, "created_on": "2018-03-13T09:18:56.860203+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-03-13T09:18:56.906870+00:00", "type": "pullrequest_comment", "id": 58640539}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18/comments/58636792.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18/_/diff#comment-58636792"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}, "content": {"raw": "Looks good!\n\nWhile we're here, could you change:\n\n\n```\n#!python\n\ntry:\n    assert '.' not in name\n    exec(name + ' = 0')\n    exec('del ' + name )\nexcept:\n```\ninto:\n```python\n if not runmanager.is_valid_python_identifier(name):\n```\nThat way we're not executing almost arbitrary code to check the name (it leaks into the surrounding scope in Python 2, and the `del` can just as well delete your variables! You can prevent it leaking but `runmanager.is_valid_python_identifier` is the bomb-proof way to know that it's a Python identifier)", "markup": "markdown", "html": "<p>Looks good!</p>\n<p>While we're here, could you change:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"k\">assert</span> <span class=\"s1\">&#39;.&#39;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">name</span>\n    <span class=\"k\">exec</span><span class=\"p\">(</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s1\">&#39; = 0&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">exec</span><span class=\"p\">(</span><span class=\"s1\">&#39;del &#39;</span> <span class=\"o\">+</span> <span class=\"n\">name</span> <span class=\"p\">)</span>\n<span class=\"k\">except</span><span class=\"p\">:</span>\n</pre></div>\n\n\n<p>into:</p>\n<div class=\"codehilite language-python\"><pre><span></span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">runmanager</span><span class=\"o\">.</span><span class=\"n\">is_valid_python_identifier</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n</pre></div>\n\n\n<p>That way we're not executing almost arbitrary code to check the name (it leaks into the surrounding scope in Python 2, and the <code>del</code> can just as well delete your variables! You can prevent it leaking but <code>runmanager.is_valid_python_identifier</code> is the bomb-proof way to know that it's a Python identifier)</p>", "type": "rendered"}, "created_on": "2018-03-13T08:49:45.352991+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-13T08:51:10.271621+00:00", "type": "pullrequest_comment", "id": 58636792}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}}, {"approval": {"date": "2018-03-13T08:50:19.152519+00:00", "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18/comments/58636855.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18/_/diff#comment-58636855"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}, "content": {"raw": "Other than that merge whenever you're happy", "markup": "markdown", "html": "<p>Other than that merge whenever you're happy</p>", "type": "rendered"}, "created_on": "2018-03-13T08:50:15.512996+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-03-13T08:50:15.520929+00:00", "type": "pullrequest_comment", "id": 58636855}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}}, {"update": {"description": "This pull request allows new batch compilers to be written, allowing other APIs other than labscript to be used. This allows runmanager to become a generic parameter \\(and parameter space\\) manager, which could be useful for many things including handling parameter space scans for computational simulations.\r\n\r\nThis requires labscript pull request 27, otherwise known as labscript v2.4.0\r\n\r\nThere are a bunch of changes \\(outlined in the commit messages below\\). Feel free to ask me questions!\r\n\r\nPlease let me do the merging once approved, so the branch gets closed properly!\r\n\r\n* Created new branch labscript-agnostic\r\n* Generalised batch\\_compiler so that it can be subclassed to compiler experiments using something other than labscript.\r\n\r\n    This also involved:\r\n\r\n\r\n\r\n    * creating a new batch compiler for labscript based on the generalised class\r\n    * Moving the globals loading code from labscript to runmanager batch compiler \\(so that we don't have to duplicate it inside labscript alternatives\\)\r\n    * Adding version checks for the batch compiler script \\(now needs labscript 2.4 due to the above point\\)\r\n    \r\n        There are some additional benefits to this, for instance the `__builtins__` dict is saved just before invoking the script, which means that any modules that modify `__builtins__` on reload will not have those modifications removed. We also now hold the module watcher and kill lock during cleanup \\(which I don't think was the case previously unless I don't properly understand when `finally` is executed!\\)\r\n\r\n    \r\n    \r\n* Cleaned up the new batch compiler scripts so that we can instantiate the processors without needing it to be launched as a zprocess subprocess.\r\n\r\n    This allows someone to use the BatchProcessor class in their own script to compile labscript \\(or other\\) scripts while automatically gaining access to the machinery for loading globals. Ultimately we could reintroduce a command line utility to take a labscript file and globals file and compile a shot \\(like we used to have\\).\r\n\r\n\r\n\r\n    As an example of the above, consider doing: from runmanage.batch\\_compiler\\_labscript import BatchProcessor batch\\_processor = BatchProcessor\\(\\) batch\\_processor.compile\\(labscript\\_file, globals\\_file\\)\r\n\r\n\r\n* modified the labscript batch compiler to use the new kwargs in labscript for disabling loading/cleanup of globals from HDF5 file as this is now handled by runmanager.\r\n* Modified runmanager to use a new \\(optional\\) labconfig parameter \\[runmanager\\\\batch\\_compiler\\_script\\] as the path to use when launching the batch compiler.\r\n\r\n    This allows custom batch\\_compilers to be used that invoke something other than labscript, making runmanager a generic parameter \\(and parameter space\\) manager that could be applied to a variety of situations \\(such as automating scanning a parameter space in a computational simulation\\).", "title": "Allow APIs other than labscript to be invoked by runmanager", "destination": {"commit": {"hash": "7f5031fbb4c9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/7f5031fbb4c9.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/7f5031fbb4c9"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7d81be15c55f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/runmanager/commit/7d81be15c55f"}, "html": {"href": "#!/pstarkey/runmanager/commits/7d81be15c55f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/runmanager"}, "html": {"href": "#!/pstarkey/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{2f11f5fd-c84d-42bd-a265-eda8b5bef98b}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "pstarkey/runmanager", "uuid": "{2f11f5fd-c84d-42bd-a265-eda8b5bef98b}"}, "branch": {"name": "labscript-agnostic"}}, "state": "OPEN", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "date": "2018-03-13T06:18:10.460882+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}}, {"update": {"description": "This pull request allows new batch compilers to be written, allowing other APIs other than runmanager to be used. This allows runmanager to become a generic parameter \\(and parameter space\\) manager, which could be useful for many things including handling parameter space scans for computational simulations.\r\n\r\nThis requires [labscript pull request 27](#!/labscript_suite/labscript/pull-requests/27/disabled-loading-cleanup-of-globals-into/diff), otherwise known as labscript v2.4.0\r\n\r\nThere are a bunch of changes \\(outlined in the commit messages below\\). Feel free to ask me questions!\r\n\r\nPlease let me do the merging once approved, so the branch gets closed properly!\r\n\r\n* Created new branch labscript-agnostic\r\n* Generalised batch\\_compiler so that it can be subclassed to compiler experiments using something other than labscript.\r\n\r\n    This also involved: \r\n\r\n\r\n\r\n    * creating a new batch compiler for labscript based on the generalised class \r\n    * Moving the globals loading code from labscript to runmanager batch compiler \\(so that we don't have to duplicate it inside labscript alternatives\\) \r\n    * Adding version checks for the batch compiler script \\(now needs labscript 2.4 due to the above point\\)\r\n    \r\n        There are some additional benefits to this, for instance the `__builtins__` dict is saved just before invoking the script, which means that any modules that modify `__builtins__` on reload will not have those modifications removed. We also now hold the module watcher and kill lock during cleanup \\(which I don't think was the case previously unless I don't properly understand when `finally` is executed!\\)\r\n\r\n    \r\n    \r\n        \r\n\r\n    \r\n    \r\n* Cleaned up the new batch compiler scripts so that we can instantiate the processors without needing it to be launched as a zprocess subprocess.\r\n\r\n    This allows someone to use the BatchProcessor class in their own script to compile labscript \\(or other\\) scripts while automatically gaining access to the machinery for loading globals. Ultimately we could reintroduce a command line utility to take a labscript file and globals file and compile a shot \\(like we used to have\\).\r\n\r\n\r\n\r\n    As an example of the above, consider doing: from runmanage.batch\\_compiler\\_labscript import BatchProcessor batch\\_processor = BatchProcessor\\(\\) batch\\_processor.compile\\(labscript\\_file, globals\\_file\\)\r\n\r\n\r\n\r\n    \r\n\r\n\r\n* modified the labscript batch compiler to use the new kwargs in labscript for disabling loading/cleanup of globals from HDF5 file as this is now handled by runmanager.\r\n* Modified runmanager to use a new \\(optional\\) labconfig parameter \\[runmanager\\\\batch\\_compiler\\_script\\] as the path to use when launching the batch compiler.\r\n\r\n    This allows custom batch\\_compilers to be used that invoke something other than labscript, making runmanager a generic parameter \\(and parameter space\\) manager that could be applied to a variety of situations \\(such as automating scanning a parameter space in a computational simulation\\).", "title": "Allow APIs other than labscript to be invoked by runmanager", "destination": {"commit": {"hash": "7f5031fbb4c9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/7f5031fbb4c9.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/7f5031fbb4c9"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7d81be15c55f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/runmanager/commit/7d81be15c55f"}, "html": {"href": "#!/pstarkey/runmanager/commits/7d81be15c55f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/runmanager"}, "html": {"href": "#!/pstarkey/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{2f11f5fd-c84d-42bd-a265-eda8b5bef98b}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "pstarkey/runmanager", "uuid": "{2f11f5fd-c84d-42bd-a265-eda8b5bef98b}"}, "branch": {"name": "labscript-agnostic"}}, "state": "OPEN", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "date": "2018-03-13T05:15:46.823673+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}}, {"update": {"description": "This pull request allows new batch compilers to be written, allowing other APIs other than runmanager to be used. This allows runmanager to become a generic parameter \\(and parameter space\\) manager, which could be useful for many things including handling parameter space scans for computational simulations.\r\n\r\nThis requires [labscript pull request 27](#!/labscript_suite/labscript/pull-requests/27/disabled-loading-cleanup-of-globals-into/diff), otherwise known as labscript v2.4.0\r\n\r\nThere are a bunch of changes \\(outlined in the commit messages below\\). Feel free to ask me questions!\r\n\r\nPlease let me do the merging once approved, so the branch gets closed properly!\r\n\r\n* Created new branch labscript-agnostic\r\n* Generalised batch\\_compiler so that it can be subclassed to compiler experiments using something other than labscript.\r\n\r\n    This also involved: \r\n\r\n\r\n\r\n    * creating a new batch compiler for labscript based on the generalised class \r\n    * Moving the globals loading code from labscript to runmanager batch compiler \\(so that we don't have to duplicate it inside labscript alternatives\\) \r\n    * Adding version checks for the batch compiler script \\(now needs labscript 2.4 due to the above point\\)\r\n    \r\n        There are some additional benefits to this, for instance the `__builtins__` dict is saved just before invoking the script, which means that any modules that modify `__builtins__` on reload will not have those modifications removed. We also now hold the module watcher and kill lock during cleanup \\(which I don't think was the case previously unless I don't properly understand when `finally` is executed!\\)\r\n\r\n    \r\n    \r\n        \r\n\r\n    \r\n    \r\n* Cleaned up the new batch compiler scripts so that we can instantiate the processors without needing it to be launched as a zprocess subprocess.\r\n\r\n    This allows someone to use the BatchProcessor class in their own script to compile labscript \\(or other\\) scripts while automatically gaining access to the machinery for loading globals. Ultimately we could reintroduce a command line utility to take a labscript file and globals file and compile a shot \\(like we used to have\\).\r\n\r\n\r\n\r\n    As an example of the above, consider doing: from runmanage.batch\\_compiler\\_labscript import BatchProcessor batch\\_processor = BatchProcessor\\(\\) batch\\_processor.compile\\(labscript\\_file, globals\\_file\\)\r\n\r\n\r\n\r\n    \r\n\r\n\r\n* modified the labscript batch compiler to use the new kwargs in labscript for disabling loading/cleanup of globals from HDF5 file as this is now handled by runmanager.\r\n* Modified runmanager to use a new \\(optional\\) labconfig parameter \\[runmanager\\\\batch\\_compiler\\_script\\] as the path to use when launching the batch compiler.\r\n\r\n    This allows custom batch\\_compilers to be used that invoke something other than labscript, making runmanager a generic parameter \\(and parameter space\\) manager that could be applied to a variety of situations \\(such as automating scanning a parameter space in a computational simulation\\).", "title": "Allow APIs other than labscript to be invoked by runmanager", "destination": {"commit": {"hash": "7f5031fbb4c9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/7f5031fbb4c9.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/7f5031fbb4c9"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7d81be15c55f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/runmanager/commit/7d81be15c55f"}, "html": {"href": "#!/pstarkey/runmanager/commits/7d81be15c55f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/runmanager"}, "html": {"href": "#!/pstarkey/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{2f11f5fd-c84d-42bd-a265-eda8b5bef98b}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "pstarkey/runmanager", "uuid": "{2f11f5fd-c84d-42bd-a265-eda8b5bef98b}"}, "branch": {"name": "labscript-agnostic"}}, "state": "OPEN", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "date": "2018-03-13T05:15:46.753764+00:00"}, "pull_request": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}}, "title": "Allow APIs other than labscript to be invoked by runmanager"}}]}