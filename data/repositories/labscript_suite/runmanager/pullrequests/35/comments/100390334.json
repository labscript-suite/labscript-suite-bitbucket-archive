{"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/35/comments/100390334.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/35/_/diff#comment-100390334"}}, "parent": {"id": 100389066, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/35/comments/100389066.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/35/_/diff#comment-100389066"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/35.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/35"}}, "title": "Word-wrapping in treeviews and item views, adapted from David Meyer's implementation."}, "content": {"raw": "Yes, I switched it to the monospace font for the name and value, since they are both code - well one is a variable name and the other is code, at least. This helps with indentation for a multi-line value, though that\u2019s not as relevant for the name. I think it makes a lot of sense for the value to be monospace, and I\u2019m less adamant about the name. I guess I wish the mono font was _slightly_ bolder, that annoys me. But making it actually bold looks way too bold. Does it look any better to you if the font size is bumped up by one \\(add UBUNTU\\_FONT\\_SIZE \\+= 1 at the top of `__main__.py`\\)?\n\nIt looks like I erroneously added a bit of extra vertical padding compared to what I intended. I\u2019ve now changed it to have the same row width as before. It\u2019s tricky because before it was just a fixed width and now it\u2019s the item\u2019s width plus some padding, and the item\u2019s width even when it\u2019s one line of text only depends on whether it has an icon. So it ended up with a few extra pixels but they\u2019re gone now!\n\nI could probably make the <add new global> item selectable via keyboard without much effort - we\u2019re already hooking into the arrow keys in a place in the code where this would make sense to handle.\n\nI could change <click to add global> to the same monospace font so it is more obviously part of the column, excluding it was intentional but I don\u2019t mind either way.\n\nIncreasing the size of the expansion column to the size of \u2018outer\u2019 sounds good, I\u2019ll give it a shot.", "markup": "markdown", "html": "<p>Yes, I switched it to the monospace font for the name and value, since they are both code - well one is a variable name and the other is code, at least. This helps with indentation for a multi-line value, though that\u2019s not as relevant for the name. I think it makes a lot of sense for the value to be monospace, and I\u2019m less adamant about the name. I guess I wish the mono font was <em>slightly</em> bolder, that annoys me. But making it actually bold looks way too bold. Does it look any better to you if the font size is bumped up by one (add UBUNTU_FONT_SIZE += 1 at the top of <code>__main__.py</code>)?</p>\n<p>It looks like I erroneously added a bit of extra vertical padding compared to what I intended. I\u2019ve now changed it to have the same row width as before. It\u2019s tricky because before it was just a fixed width and now it\u2019s the item\u2019s width plus some padding, and the item\u2019s width even when it\u2019s one line of text only depends on whether it has an icon. So it ended up with a few extra pixels but they\u2019re gone now!</p>\n<p>I could probably make the &lt;add new global&gt; item selectable via keyboard without much effort - we\u2019re already hooking into the arrow keys in a place in the code where this would make sense to handle.</p>\n<p>I could change &lt;click to add global&gt; to the same monospace font so it is more obviously part of the column, excluding it was intentional but I don\u2019t mind either way.</p>\n<p>Increasing the size of the expansion column to the size of \u2018outer\u2019 sounds good, I\u2019ll give it a shot.</p>", "type": "rendered"}, "created_on": "2019-04-30T02:11:28.609018+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-04-30T02:11:28.618813+00:00", "type": "pullrequest_comment", "id": 100390334}