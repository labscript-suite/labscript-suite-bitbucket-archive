{"links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/35/comments/99414999.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/35/_/diff#comment-99414999"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/35.json"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/35"}}, "title": "Word-wrapping in treeviews and item views, adapted from David Meyer's implementation."}, "content": {"raw": "What do you think about allowing Shift\\+Return to add newlines? I kind-of like it so I can add whitespace to large variable definitions so they are easier to read.\n\n![](data/bitbucket.org/repo/6g5bg5/images/4088474748-image.png)\nIt appears to be as easy as modifying the keyPressEvent of the Editor.\n\n```python\ndef keyPressEvent(self, event):\r\n    if event.key() == QtCore.Qt.Key_Return and event.modifiers() == QtCore.Qt.ShiftModifier:\r\n        return QtWidgets.QTextEdit.keyPressEvent(self, event)\r\n    elif event.key() in [QtCore.Qt.Key_Enter, QtCore.Qt.Key_Return]:\r\n        event.accept()\r\n        self.close()\r\n        return\r\n    return QtWidgets.QTextEdit.keyPressEvent(self, event)\n```", "markup": "markdown", "html": "<p>What do you think about allowing Shift+Return to add newlines? I kind-of like it so I can add whitespace to large variable definitions so they are easier to read.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/6g5bg5/images/4088474748-image.png\" />\nIt appears to be as easy as modifying the keyPressEvent of the Editor.</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">keyPressEvent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">QtCore</span><span class=\"o\">.</span><span class=\"n\">Qt</span><span class=\"o\">.</span><span class=\"n\">Key_Return</span> <span class=\"ow\">and</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">modifiers</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">QtCore</span><span class=\"o\">.</span><span class=\"n\">Qt</span><span class=\"o\">.</span><span class=\"n\">ShiftModifier</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">QtWidgets</span><span class=\"o\">.</span><span class=\"n\">QTextEdit</span><span class=\"o\">.</span><span class=\"n\">keyPressEvent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"n\">QtCore</span><span class=\"o\">.</span><span class=\"n\">Qt</span><span class=\"o\">.</span><span class=\"n\">Key_Enter</span><span class=\"p\">,</span> <span class=\"n\">QtCore</span><span class=\"o\">.</span><span class=\"n\">Qt</span><span class=\"o\">.</span><span class=\"n\">Key_Return</span><span class=\"p\">]:</span>\n        <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">accept</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span>\n    <span class=\"k\">return</span> <span class=\"n\">QtWidgets</span><span class=\"o\">.</span><span class=\"n\">QTextEdit</span><span class=\"o\">.</span><span class=\"n\">keyPressEvent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">)</span>\n</pre></div>", "type": "rendered"}, "created_on": "2019-04-19T12:55:03.961122+00:00", "user": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "updated_on": "2019-04-19T12:55:04.048712+00:00", "type": "pullrequest_comment", "id": 99414999}