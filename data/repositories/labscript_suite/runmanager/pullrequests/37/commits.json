{"pagelen": 100, "values": [{"hash": "9d9121194d63252d2a603ed4e9e81ed5462f1c75", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/9d9121194d63252d2a603ed4e9e81ed5462f1c75.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/commit/9d9121194d63252d2a603ed4e9e81ed5462f1c75/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/9d9121194d63252d2a603ed4e9e81ed5462f1c75"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/9d9121194d63252d2a603ed4e9e81ed5462f1c75"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/commit/9d9121194d63252d2a603ed4e9e81ed5462f1c75/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/commit/9d9121194d63252d2a603ed4e9e81ed5462f1c75/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Merged in cbillington/runmanager/remote (pull request #37)\n\nBasic remote control of runmanager.\n\nApproved-by: Russell Anderson <russrussruss@gmail.com>", "markup": "markdown", "html": "<p>Merged in <a href=\"#!/cbillington/runmanager\" rel=\"nofollow\" class=\"ap-connect-link\">cbillington/runmanager</a>/remote (<a href=\"#!/labscript_suite/runmanager/pull-requests/37/basic-remote-control-of-runmanager\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #37</a>)</p>\n<p>Basic remote control of runmanager.</p>\n<p>Approved-by: Russell Anderson <a href=\"mailto:russrussruss@gmail.com\">&#114;&#117;&#115;&#115;&#114;&#117;&#115;&#115;&#114;&#117;&#115;&#115;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>", "type": "rendered"}, "parents": [{"hash": "8d32f49f391c37d7f968afe84e92a86991270d7f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/8d32f49f391c37d7f968afe84e92a86991270d7f.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/8d32f49f391c37d7f968afe84e92a86991270d7f"}}}, {"hash": "d391a30fe9479efa7cd0d469fdf899cf7c3db1a9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/d391a30fe9479efa7cd0d469fdf899cf7c3db1a9.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/d391a30fe9479efa7cd0d469fdf899cf7c3db1a9"}}}], "date": "2019-05-20T14:53:06+00:00", "message": "Merged in cbillington/runmanager/remote (pull request #37)\n\nBasic remote control of runmanager.\n\nApproved-by: Russell Anderson <russrussruss@gmail.com>", "type": "commit"}, {"hash": "d391a30fe9479efa7cd0d469fdf899cf7c3db1a9", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/d391a30fe9479efa7cd0d469fdf899cf7c3db1a9.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/commit/d391a30fe9479efa7cd0d469fdf899cf7c3db1a9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/patch/d391a30fe9479efa7cd0d469fdf899cf7c3db1a9"}, "html": {"href": "#!/labscript_suite/runmanager/commits/d391a30fe9479efa7cd0d469fdf899cf7c3db1a9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/d391a30fe9479efa7cd0d469fdf899cf7c3db1a9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/commit/d391a30fe9479efa7cd0d469fdf899cf7c3db1a9/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/commit/d391a30fe9479efa7cd0d469fdf899cf7c3db1a9/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Close branch remote", "markup": "markdown", "html": "<p>Close branch remote</p>", "type": "rendered"}, "parents": [{"hash": "5a8f7283597adbd82a17372e44b113438fabbf03", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/5a8f7283597adbd82a17372e44b113438fabbf03.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/5a8f7283597adbd82a17372e44b113438fabbf03"}}}], "date": "2019-05-20T14:53:06+00:00", "message": "Close branch remote", "type": "commit"}, {"hash": "5a8f7283597adbd82a17372e44b113438fabbf03", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/5a8f7283597adbd82a17372e44b113438fabbf03.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/commit/5a8f7283597adbd82a17372e44b113438fabbf03/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/patch/5a8f7283597adbd82a17372e44b113438fabbf03"}, "html": {"href": "#!/labscript_suite/runmanager/commits/5a8f7283597adbd82a17372e44b113438fabbf03"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/5a8f7283597adbd82a17372e44b113438fabbf03"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/commit/5a8f7283597adbd82a17372e44b113438fabbf03/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/commit/5a8f7283597adbd82a17372e44b113438fabbf03/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "* Trigger a preparse after remote set_globals()\n* Add `interactive` kwarg to Runmanager.get_active_groups so that it can raise\n  an exception for remote calls rather than show an error dialog.\n* Turn app.preparse_globals_required into a Queue instead of an Event so that\n  the number of times it is triggerd can be counted, in order that callers\n  can block until all preparsing is complete using .join()\n* Add method runmanager.wait_until_preparse_complete() that does this.\n* Call app.wait_until_preparse_complete.wait() in handle_n_shots so that the\n  result is not subject to a race condition w.r.t. previous remote calls.\n* Call app.wait_until_preparse_complete() in handle_engage(). I'm not sure\n  it's necessary, but it is strange to be (virtually) clicking engage when the\n  button is greyed out, and there may be code (present or future ) that assumes\n  you can't do this.\n* Do not run blocking remote code such as globals evaluation in the main thread.\n  have remote methods only hop into the main thread when required.\n* Modify remote handle_error_in_globals to take into account all globals, not\n  just those open in tabs.\n* remove inmain() call from the remote server's handler - apply inmain calls\n  only where they are required within individual handler methods, so that the\n  GUI is not blocked by globals parsing.\n* remove some unused imports", "markup": "markdown", "html": "<ul>\n<li>Trigger a preparse after remote set_globals()</li>\n<li>Add <code>interactive</code> kwarg to Runmanager.get_active_groups so that it can raise<br />\n  an exception for remote calls rather than show an error dialog.</li>\n<li>Turn app.preparse_globals_required into a Queue instead of an Event so that<br />\n  the number of times it is triggerd can be counted, in order that callers<br />\n  can block until all preparsing is complete using .join()</li>\n<li>Add method runmanager.wait_until_preparse_complete() that does this.</li>\n<li>Call app.wait_until_preparse_complete.wait() in handle_n_shots so that the<br />\n  result is not subject to a race condition w.r.t. previous remote calls.</li>\n<li>Call app.wait_until_preparse_complete() in handle_engage(). I'm not sure<br />\n  it's necessary, but it is strange to be (virtually) clicking engage when the<br />\n  button is greyed out, and there may be code (present or future ) that assumes<br />\n  you can't do this.</li>\n<li>Do not run blocking remote code such as globals evaluation in the main thread.<br />\n  have remote methods only hop into the main thread when required.</li>\n<li>Modify remote handle_error_in_globals to take into account all globals, not<br />\n  just those open in tabs.</li>\n<li>remove inmain() call from the remote server's handler - apply inmain calls<br />\n  only where they are required within individual handler methods, so that the<br />\n  GUI is not blocked by globals parsing.</li>\n<li>remove some unused imports</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "b414a5fea450807a890fb923ee0c06cf6ee7b055", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/b414a5fea450807a890fb923ee0c06cf6ee7b055.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/b414a5fea450807a890fb923ee0c06cf6ee7b055"}}}], "date": "2019-05-13T23:51:40+00:00", "message": "* Trigger a preparse after remote set_globals()\n* Add `interactive` kwarg to Runmanager.get_active_groups so that it can raise\n  an exception for remote calls rather than show an error dialog.\n* Turn app.preparse_globals_required into a Queue instead of an Event so that\n  the number of times it is triggerd can be counted, in order that callers\n  can block until all preparsing is complete using .join()\n* Add method runmanager.wait_until_preparse_complete() that does this.\n* Call app.wait_until_preparse_complete.wait() in handle_n_shots so that the\n  result is not subject to a race condition w.r.t. previous remote calls.\n* Call app.wait_until_preparse_complete() in handle_engage(). I'm not sure\n  it's necessary, but it is strange to be (virtually) clicking engage when the\n  button is greyed out, and there may be code (present or future ) that assumes\n  you can't do this.\n* Do not run blocking remote code such as globals evaluation in the main thread.\n  have remote methods only hop into the main thread when required.\n* Modify remote handle_error_in_globals to take into account all globals, not\n  just those open in tabs.\n* remove inmain() call from the remote server's handler - apply inmain calls\n  only where they are required within individual handler methods, so that the\n  GUI is not blocked by globals parsing.\n* remove some unused imports", "type": "commit"}, {"hash": "b414a5fea450807a890fb923ee0c06cf6ee7b055", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/b414a5fea450807a890fb923ee0c06cf6ee7b055.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/commit/b414a5fea450807a890fb923ee0c06cf6ee7b055/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/patch/b414a5fea450807a890fb923ee0c06cf6ee7b055"}, "html": {"href": "#!/labscript_suite/runmanager/commits/b414a5fea450807a890fb923ee0c06cf6ee7b055"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/b414a5fea450807a890fb923ee0c06cf6ee7b055"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/commit/b414a5fea450807a890fb923ee0c06cf6ee7b055/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/commit/b414a5fea450807a890fb923ee0c06cf6ee7b055/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "Added the following remote methods:\n* get/set_labscript_file\n* get_set_shot_output_folder\n* error_in_globals (only considers open tabs of atcive groups)\n* is_output_folder_default\n* reset_shot_output_folder\n\nThis required the following new attributes:\n* GroupTab().tab_contains_errors\n* RunManager().non_default_folder", "markup": "markdown", "html": "<p>Added the following remote methods:<br />\n<em> get/set_labscript_file<br />\n</em> get_set_shot_output_folder<br />\n<em> error_in_globals (only considers open tabs of atcive groups)<br />\n</em> is_output_folder_default<br />\n* reset_shot_output_folder</p>\n<p>This required the following new attributes:<br />\n<em> GroupTab().tab_contains_errors<br />\n</em> RunManager().non_default_folder</p>", "type": "rendered"}, "parents": [{"hash": "672f8c85c741001207dff7162a1e787ead689586", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/672f8c85c741001207dff7162a1e787ead689586.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/672f8c85c741001207dff7162a1e787ead689586"}}}], "date": "2019-05-11T10:42:19+00:00", "message": "Added the following remote methods:\n* get/set_labscript_file\n* get_set_shot_output_folder\n* error_in_globals (only considers open tabs of atcive groups)\n* is_output_folder_default\n* reset_shot_output_folder\n\nThis required the following new attributes:\n* GroupTab().tab_contains_errors\n* RunManager().non_default_folder", "type": "commit"}, {"hash": "672f8c85c741001207dff7162a1e787ead689586", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/672f8c85c741001207dff7162a1e787ead689586.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/commit/672f8c85c741001207dff7162a1e787ead689586/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/patch/672f8c85c741001207dff7162a1e787ead689586"}, "html": {"href": "#!/labscript_suite/runmanager/commits/672f8c85c741001207dff7162a1e787ead689586"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/672f8c85c741001207dff7162a1e787ead689586"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/commit/672f8c85c741001207dff7162a1e787ead689586/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/commit/672f8c85c741001207dff7162a1e787ead689586/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "Added (get) n_shots, the prospective number of shots that appear on the engage\nbutton. This required a new RunManager attribute, as it has only ever been used\nto update the text of the engage button.\n\nAdded abort remote control.", "markup": "markdown", "html": "<p>Added (get) n_shots, the prospective number of shots that appear on the engage<br />\nbutton. This required a new RunManager attribute, as it has only ever been used<br />\nto update the text of the engage button.</p>\n<p>Added abort remote control.</p>", "type": "rendered"}, "parents": [{"hash": "9e41137747866f1b83d674f26d7b7319ff3e9266", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/9e41137747866f1b83d674f26d7b7319ff3e9266.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/9e41137747866f1b83d674f26d7b7319ff3e9266"}}}], "date": "2019-05-10T11:40:19+00:00", "message": "Added (get) n_shots, the prospective number of shots that appear on the engage\nbutton. This required a new RunManager attribute, as it has only ever been used\nto update the text of the engage button.\n\nAdded abort remote control.", "type": "commit"}, {"hash": "9e41137747866f1b83d674f26d7b7319ff3e9266", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/9e41137747866f1b83d674f26d7b7319ff3e9266.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/commit/9e41137747866f1b83d674f26d7b7319ff3e9266/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/patch/9e41137747866f1b83d674f26d7b7319ff3e9266"}, "html": {"href": "#!/labscript_suite/runmanager/commits/9e41137747866f1b83d674f26d7b7319ff3e9266"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/9e41137747866f1b83d674f26d7b7319ff3e9266"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/commit/9e41137747866f1b83d674f26d7b7319ff3e9266/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/commit/9e41137747866f1b83d674f26d7b7319ff3e9266/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "Set/get for 'Run shot(s)', 'View shot(s)', and 'Shuffle' controls.", "markup": "markdown", "html": "<p>Set/get for 'Run shot(s)', 'View shot(s)', and 'Shuffle' controls.</p>", "type": "rendered"}, "parents": [{"hash": "dd03cd2111b2159712a6308d6f624a10cc2e1cf9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/dd03cd2111b2159712a6308d6f624a10cc2e1cf9.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/dd03cd2111b2159712a6308d6f624a10cc2e1cf9"}}}], "date": "2019-05-10T11:17:38+00:00", "message": "Set/get for 'Run shot(s)', 'View shot(s)', and 'Shuffle' controls.", "type": "commit"}, {"hash": "dd03cd2111b2159712a6308d6f624a10cc2e1cf9", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/dd03cd2111b2159712a6308d6f624a10cc2e1cf9.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/commit/dd03cd2111b2159712a6308d6f624a10cc2e1cf9/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/patch/dd03cd2111b2159712a6308d6f624a10cc2e1cf9"}, "html": {"href": "#!/labscript_suite/runmanager/commits/dd03cd2111b2159712a6308d6f624a10cc2e1cf9"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/dd03cd2111b2159712a6308d6f624a10cc2e1cf9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/commit/dd03cd2111b2159712a6308d6f624a10cc2e1cf9/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/commit/dd03cd2111b2159712a6308d6f624a10cc2e1cf9/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Error if trying to set global that is defined in multiple active groups.\n\nNo attempt is made to ensure setting globals is an all-or-nothing affair. Globals\nset prior to the error will not be reverted, globals not yet set will not still\nbe attempted to be set.", "markup": "markdown", "html": "<p>Error if trying to set global that is defined in multiple active groups.</p>\n<p>No attempt is made to ensure setting globals is an all-or-nothing affair. Globals<br />\nset prior to the error will not be reverted, globals not yet set will not still<br />\nbe attempted to be set.</p>", "type": "rendered"}, "parents": [{"hash": "354b4f92892db9d4e3f2a6b00873978f3643f2ec", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/354b4f92892db9d4e3f2a6b00873978f3643f2ec.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/354b4f92892db9d4e3f2a6b00873978f3643f2ec"}}}], "date": "2019-05-09T18:30:53+00:00", "message": "Error if trying to set global that is defined in multiple active groups.\n\nNo attempt is made to ensure setting globals is an all-or-nothing affair. Globals\nset prior to the error will not be reverted, globals not yet set will not still\nbe attempted to be set.", "type": "commit"}, {"hash": "354b4f92892db9d4e3f2a6b00873978f3643f2ec", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/354b4f92892db9d4e3f2a6b00873978f3643f2ec.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/commit/354b4f92892db9d4e3f2a6b00873978f3643f2ec/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/patch/354b4f92892db9d4e3f2a6b00873978f3643f2ec"}, "html": {"href": "#!/labscript_suite/runmanager/commits/354b4f92892db9d4e3f2a6b00873978f3643f2ec"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/354b4f92892db9d4e3f2a6b00873978f3643f2ec"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/commit/354b4f92892db9d4e3f2a6b00873978f3643f2ec/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/commit/354b4f92892db9d4e3f2a6b00873978f3643f2ec/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Implement `raw` kwarg for `remote.set_globals()` and `remote.get_globals()`.\nif set to True (default is False), then globals values are accepted and returned\n as string expressions as stored in the HDF5 file and runmanager GUI.\nOtherwise they are treated as python objects, and are `repr()`'d before setting\nand `eval()`'d (by runmanager the usual way) upon getting.\n\nComment out `get_globals_full()` and `set_globals_full()` for now since I'm\nnot sure what they should do exactly, though obviously setting and getting more\nthings will need to be added to the remote API in some way.", "markup": "markdown", "html": "<p>Implement <code>raw</code> kwarg for <code>remote.set_globals()</code> and <code>remote.get_globals()</code>.<br />\nif set to True (default is False), then globals values are accepted and returned<br />\n as string expressions as stored in the HDF5 file and runmanager GUI.<br />\nOtherwise they are treated as python objects, and are <code>repr()</code>'d before setting<br />\nand <code>eval()</code>'d (by runmanager the usual way) upon getting.</p>\n<p>Comment out <code>get_globals_full()</code> and <code>set_globals_full()</code> for now since I'm<br />\nnot sure what they should do exactly, though obviously setting and getting more<br />\nthings will need to be added to the remote API in some way.</p>", "type": "rendered"}, "parents": [{"hash": "fed4c76930a43953d942ee6c246cb2a362e7ae87", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/fed4c76930a43953d942ee6c246cb2a362e7ae87.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/fed4c76930a43953d942ee6c246cb2a362e7ae87"}}}], "date": "2019-05-09T16:59:06+00:00", "message": "Implement `raw` kwarg for `remote.set_globals()` and `remote.get_globals()`.\nif set to True (default is False), then globals values are accepted and returned\n as string expressions as stored in the HDF5 file and runmanager GUI.\nOtherwise they are treated as python objects, and are `repr()`'d before setting\nand `eval()`'d (by runmanager the usual way) upon getting.\n\nComment out `get_globals_full()` and `set_globals_full()` for now since I'm\nnot sure what they should do exactly, though obviously setting and getting more\nthings will need to be added to the remote API in some way.", "type": "commit"}, {"hash": "fed4c76930a43953d942ee6c246cb2a362e7ae87", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/fed4c76930a43953d942ee6c246cb2a362e7ae87.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/commit/fed4c76930a43953d942ee6c246cb2a362e7ae87/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/patch/fed4c76930a43953d942ee6c246cb2a362e7ae87"}, "html": {"href": "#!/labscript_suite/runmanager/commits/fed4c76930a43953d942ee6c246cb2a362e7ae87"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/fed4c76930a43953d942ee6c246cb2a362e7ae87"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/commit/fed4c76930a43953d942ee6c246cb2a362e7ae87/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/commit/fed4c76930a43953d942ee6c246cb2a362e7ae87/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Fix bug: wrong default port number\nFix bug: set text on item before setting other details, otherwise\non_globals_model_value_changed gets triggered multiple times and the value is\nin fact set back and forth three times instead of just once. This also had the\nside effect of the latter changes being treated as interactive and thus not\nsuppressing auto focusing of the units cell as intended.", "markup": "markdown", "html": "<p>Fix bug: wrong default port number<br />\nFix bug: set text on item before setting other details, otherwise<br />\non_globals_model_value_changed gets triggered multiple times and the value is<br />\nin fact set back and forth three times instead of just once. This also had the<br />\nside effect of the latter changes being treated as interactive and thus not<br />\nsuppressing auto focusing of the units cell as intended.</p>", "type": "rendered"}, "parents": [{"hash": "042f842324d7128c0f1e02cac47f6889df203ab4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/042f842324d7128c0f1e02cac47f6889df203ab4.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/042f842324d7128c0f1e02cac47f6889df203ab4"}}}], "date": "2019-05-09T16:16:04+00:00", "message": "Fix bug: wrong default port number\nFix bug: set text on item before setting other details, otherwise\non_globals_model_value_changed gets triggered multiple times and the value is\nin fact set back and forth three times instead of just once. This also had the\nside effect of the latter changes being treated as interactive and thus not\nsuppressing auto focusing of the units cell as intended.", "type": "commit"}, {"hash": "042f842324d7128c0f1e02cac47f6889df203ab4", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/042f842324d7128c0f1e02cac47f6889df203ab4.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/commit/042f842324d7128c0f1e02cac47f6889df203ab4/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/patch/042f842324d7128c0f1e02cac47f6889df203ab4"}, "html": {"href": "#!/labscript_suite/runmanager/commits/042f842324d7128c0f1e02cac47f6889df203ab4"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/042f842324d7128c0f1e02cac47f6889df203ab4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/commit/042f842324d7128c0f1e02cac47f6889df203ab4/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/commit/042f842324d7128c0f1e02cac47f6889df203ab4/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Split functionality to find comments out of `remove_comments_and_tokenify()`,\ninto new function `get_comments()`, so that it can be used separately by code that\nwants the comments themselves and not just to remove them. This way the remote\nserver's `set_globals()` can preserve only an expression-final comment (or\ncomment block) in multi-line expressions.\n\nUse this functionality in RemoteServer.set_globals() to do the above.\n\nBoth `remote_comments_and_tokenify()` (used in diffing globals) and `get_comments()`\n(used to preserve comments in RemoteServer.set_globals())\nare now compatible with multi-line expressions, and so should work with\nthe word_wrap branch, though some testing would be good.\n\nExample of these two functions in action (with an intentional sytax error in\nthe code being tokenized):\n\n```python\nfrom runmanager import remove_comments_and_tokenify, find_comments\ns = \"\"\"\nfoo(a, # 123\n    b, # baz\n    c)! # qux\n    # foo\n    \"\"\"\n\nexpr, tokens = remove_comments_and_tokenify(s)\nprint(\"without comments:\")\nfor line in expr.splitlines():\n    print(repr(line))\n\nprint(\"tokens:\", tokens)\ncomments = find_comments(s)\nprint(\"comments only:\")\nfor start, end in comments:\n    print(repr(s[start:end]))\n```\nresult:\n```\nwithout comments:\n''\n'foo(a,'\n'    b,'\n'    c)!'\ntokens: ['\\n', 'foo', '(', 'a', ',', '\\n', 'b', ',', '\\n', 'c', ')', '!']\ncomments only:\n' # 123'\n' # baz'\n' # qux\\n    # foo\\n    '\n```", "markup": "markdown", "html": "<p>Split functionality to find comments out of <code>remove_comments_and_tokenify()</code>,<br />\ninto new function <code>get_comments()</code>, so that it can be used separately by code that<br />\nwants the comments themselves and not just to remove them. This way the remote<br />\nserver's <code>set_globals()</code> can preserve only an expression-final comment (or<br />\ncomment block) in multi-line expressions.</p>\n<p>Use this functionality in RemoteServer.set_globals() to do the above.</p>\n<p>Both <code>remote_comments_and_tokenify()</code> (used in diffing globals) and <code>get_comments()</code><br />\n(used to preserve comments in RemoteServer.set_globals())<br />\nare now compatible with multi-line expressions, and so should work with<br />\nthe word_wrap branch, though some testing would be good.</p>\n<p>Example of these two functions in action (with an intentional sytax error in<br />\nthe code being tokenized):</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">runmanager</span> <span class=\"kn\">import</span> <span class=\"n\">remove_comments_and_tokenify</span><span class=\"p\">,</span> <span class=\"n\">find_comments</span>\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"s2\">foo(a, # 123</span>\n<span class=\"s2\">    b, # baz</span>\n<span class=\"s2\">    c)! # qux</span>\n<span class=\"s2\">    # foo</span>\n<span class=\"s2\">    &quot;&quot;&quot;</span>\n\n<span class=\"n\">expr</span><span class=\"p\">,</span> <span class=\"n\">tokens</span> <span class=\"o\">=</span> <span class=\"n\">remove_comments_and_tokenify</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;without comments:&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">expr</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">():</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">))</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;tokens:&quot;</span><span class=\"p\">,</span> <span class=\"n\">tokens</span><span class=\"p\">)</span>\n<span class=\"n\">comments</span> <span class=\"o\">=</span> <span class=\"n\">find_comments</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;comments only:&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">end</span> <span class=\"ow\">in</span> <span class=\"n\">comments</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">[</span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"n\">end</span><span class=\"p\">]))</span>\n</pre></div>\n\n\n<p>result:</p>\n<div class=\"codehilite\"><pre><span></span>without comments:\n&#39;&#39;\n&#39;foo(a,&#39;\n&#39;    b,&#39;\n&#39;    c)!&#39;\ntokens: [&#39;\\n&#39;, &#39;foo&#39;, &#39;(&#39;, &#39;a&#39;, &#39;,&#39;, &#39;\\n&#39;, &#39;b&#39;, &#39;,&#39;, &#39;\\n&#39;, &#39;c&#39;, &#39;)&#39;, &#39;!&#39;]\ncomments only:\n&#39; # 123&#39;\n&#39; # baz&#39;\n&#39; # qux\\n    # foo\\n    &#39;\n</pre></div>", "type": "rendered"}, "parents": [{"hash": "bf39b5fb732c4674f30378e74987d1a0305c5ce7", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/bf39b5fb732c4674f30378e74987d1a0305c5ce7.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/bf39b5fb732c4674f30378e74987d1a0305c5ce7"}}}], "date": "2019-05-09T14:05:23+00:00", "message": "Split functionality to find comments out of `remove_comments_and_tokenify()`,\ninto new function `get_comments()`, so that it can be used separately by code that\nwants the comments themselves and not just to remove them. This way the remote\nserver's `set_globals()` can preserve only an expression-final comment (or\ncomment block) in multi-line expressions.\n\nUse this functionality in RemoteServer.set_globals() to do the above.\n\nBoth `remote_comments_and_tokenify()` (used in diffing globals) and `get_comments()`\n(used to preserve comments in RemoteServer.set_globals())\nare now compatible with multi-line expressions, and so should work with\nthe word_wrap branch, though some testing would be good.\n\nExample of these two functions in action (with an intentional sytax error in\nthe code being tokenized):\n\n```python\nfrom runmanager import remove_comments_and_tokenify, find_comments\ns = \"\"\"\nfoo(a, # 123\n    b, # baz\n    c)! # qux\n    # foo\n    \"\"\"\n\nexpr, tokens = remove_comments_and_tokenify(s)\nprint(\"without comments:\")\nfor line in expr.splitlines():\n    print(repr(line))\n\nprint(\"tokens:\", tokens)\ncomments = find_comments(s)\nprint(\"comments only:\")\nfor start, end in comments:\n    print(repr(s[start:end]))\n```\nresult:\n```\nwithout comments:\n''\n'foo(a,'\n'    b,'\n'    c)!'\ntokens: ['\\n', 'foo', '(', 'a', ',', '\\n', 'b', ',', '\\n', 'c', ')', '!']\ncomments only:\n' # 123'\n' # baz'\n' # qux\\n    # foo\\n    '\n```", "type": "commit"}, {"hash": "bf39b5fb732c4674f30378e74987d1a0305c5ce7", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/bf39b5fb732c4674f30378e74987d1a0305c5ce7.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/commit/bf39b5fb732c4674f30378e74987d1a0305c5ce7/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/patch/bf39b5fb732c4674f30378e74987d1a0305c5ce7"}, "html": {"href": "#!/labscript_suite/runmanager/commits/bf39b5fb732c4674f30378e74987d1a0305c5ce7"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/bf39b5fb732c4674f30378e74987d1a0305c5ce7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/commit/bf39b5fb732c4674f30378e74987d1a0305c5ce7/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/commit/bf39b5fb732c4674f30378e74987d1a0305c5ce7/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "preserve comments when setting global values.\n\nNote: I don't expect this to work with multi-line expressions in the word-wrap\nbranch. But this can be fixed in the remove_comments_and_tokenify() function\nin that branch.", "markup": "markdown", "html": "<p>preserve comments when setting global values.</p>\n<p>Note: I don't expect this to work with multi-line expressions in the word-wrap<br />\nbranch. But this can be fixed in the remove_comments_and_tokenify() function<br />\nin that branch.</p>", "type": "rendered"}, "parents": [{"hash": "1ace84a183fe66fdfcd53beee5333b760e547e04", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/1ace84a183fe66fdfcd53beee5333b760e547e04.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/1ace84a183fe66fdfcd53beee5333b760e547e04"}}}], "date": "2019-05-09T03:55:42+00:00", "message": "preserve comments when setting global values.\n\nNote: I don't expect this to work with multi-line expressions in the word-wrap\nbranch. But this can be fixed in the remove_comments_and_tokenify() function\nin that branch.", "type": "commit"}, {"hash": "1ace84a183fe66fdfcd53beee5333b760e547e04", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/1ace84a183fe66fdfcd53beee5333b760e547e04.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/commit/1ace84a183fe66fdfcd53beee5333b760e547e04/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/patch/1ace84a183fe66fdfcd53beee5333b760e547e04"}, "html": {"href": "#!/labscript_suite/runmanager/commits/1ace84a183fe66fdfcd53beee5333b760e547e04"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/1ace84a183fe66fdfcd53beee5333b760e547e04"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/commit/1ace84a183fe66fdfcd53beee5333b760e547e04/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/commit/1ace84a183fe66fdfcd53beee5333b760e547e04/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Basic remote control of runmanager.\n\nGetting and setting of globals, clicking of engage button with:\n\n`runmanager.remote.get_globals()`\n`runmanager.remtote.set_globals()`\n`runmanager.remote.engage()`\n\nRequires a runmanager host and port to be set in labconfig, otherwise defaults\nused. One may also intantiate a runmanager.remote.Client manually to specify\nany host and port. The server uses the labconfig port, or a default if not\npresent.\n\nRequire labscript_utils 2.12.5 with a fix for the security-wrapped ZMQClient class", "markup": "markdown", "html": "<p>Basic remote control of runmanager.</p>\n<p>Getting and setting of globals, clicking of engage button with:</p>\n<p><code>runmanager.remote.get_globals()</code><br />\n<code>runmanager.remtote.set_globals()</code><br />\n<code>runmanager.remote.engage()</code></p>\n<p>Requires a runmanager host and port to be set in labconfig, otherwise defaults<br />\nused. One may also intantiate a runmanager.remote.Client manually to specify<br />\nany host and port. The server uses the labconfig port, or a default if not<br />\npresent.</p>\n<p>Require labscript_utils 2.12.5 with a fix for the security-wrapped ZMQClient class</p>", "type": "rendered"}, "parents": [{"hash": "8d32f49f391c37d7f968afe84e92a86991270d7f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/8d32f49f391c37d7f968afe84e92a86991270d7f.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/8d32f49f391c37d7f968afe84e92a86991270d7f"}}}], "date": "2019-05-08T22:24:15+00:00", "message": "Basic remote control of runmanager.\n\nGetting and setting of globals, clicking of engage button with:\n\n`runmanager.remote.get_globals()`\n`runmanager.remtote.set_globals()`\n`runmanager.remote.engage()`\n\nRequires a runmanager host and port to be set in labconfig, otherwise defaults\nused. One may also intantiate a runmanager.remote.Client manually to specify\nany host and port. The server uses the labconfig port, or a default if not\npresent.\n\nRequire labscript_utils 2.12.5 with a fix for the security-wrapped ZMQClient class", "type": "commit"}], "page": 1}