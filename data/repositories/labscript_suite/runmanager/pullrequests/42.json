{"rendered": {"reason": {"raw": "Will recreate on github", "markup": "markdown", "html": "<p>Will recreate on github</p>", "type": "rendered"}, "description": {"raw": "This modifies the runmanager remote API to use the RPCServer and RPCClient classes in [labscript_utils PR #89](#!/labscript_suite/labscript_utils/pull-requests/89/)\r\n\r\nIt is backward compatible with clients speaking the old protocol.\r\n\r\nThe  RPCServer and RPCClient classes are designed to allow RPC requests to come with version requirements, so that clients can make requests for new remote methods, or modified ways of calling existing methods, and know that if the server is not new enough for the changes, a version exception will be raised instead of some unhelpful crash downstream.\r\n\r\nThis will allow us to evolve the inter-process protocols over time, which so far have been forced to be static since we have had no way of doing remote versioning.\r\n\r\nThe RPCServer and RPCClient classes were modelled after what runmanager was doing already, which is why this is not a very big change. The idea is that we will morph the other apps' client-server code to be like this too.", "markup": "markdown", "html": "<p>This modifies the runmanager remote API to use the RPCServer and RPCClient classes in <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript_utils/pull-requests/89/\" rel=\"nofollow\">labscript_utils PR #89</a></p>\n<p>It is backward compatible with clients speaking the old protocol.</p>\n<p>The  RPCServer and RPCClient classes are designed to allow RPC requests to come with version requirements, so that clients can make requests for new remote methods, or modified ways of calling existing methods, and know that if the server is not new enough for the changes, a version exception will be raised instead of some unhelpful crash downstream.</p>\n<p>This will allow us to evolve the inter-process protocols over time, which so far have been forced to be static since we have had no way of doing remote versioning.</p>\n<p>The RPCServer and RPCClient classes were modelled after what runmanager was doing already, which is why this is not a very big change. The idea is that we will morph the other apps' client-server code to be like this too.</p>", "type": "rendered"}, "title": {"raw": "Use new RPCServer and RPCClient classes for runmanager remote API.", "markup": "markdown", "html": "<p>Use new RPCServer and RPCClient classes for runmanager remote API.</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This modifies the runmanager remote API to use the RPCServer and RPCClient classes in [labscript_utils PR #89](#!/labscript_suite/labscript_utils/pull-requests/89/)\r\n\r\nIt is backward compatible with clients speaking the old protocol.\r\n\r\nThe  RPCServer and RPCClient classes are designed to allow RPC requests to come with version requirements, so that clients can make requests for new remote methods, or modified ways of calling existing methods, and know that if the server is not new enough for the changes, a version exception will be raised instead of some unhelpful crash downstream.\r\n\r\nThis will allow us to evolve the inter-process protocols over time, which so far have been forced to be static since we have had no way of doing remote versioning.\r\n\r\nThe RPCServer and RPCClient classes were modelled after what runmanager was doing already, which is why this is not a very big change. The idea is that we will morph the other apps' client-server code to be like this too.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/42/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/cbillington/runmanager:276cf23acd99%0Daee8db70cba6?from_pullrequest_id=42"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/42/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/42.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/42/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/42/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/42"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/42/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/cbillington/runmanager:276cf23acd99%0Daee8db70cba6?from_pullrequest_id=42"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/42/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/42/statuses_page=1.json"}}, "title": "Use new RPCServer and RPCClient classes for runmanager remote API.", "close_source_branch": false, "reviewers": [{"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}], "id": 42, "destination": {"commit": {"hash": "aee8db70cba6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/aee8db70cba6.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/aee8db70cba6"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2019-08-13T20:51:35.456172+00:00", "summary": {"raw": "This modifies the runmanager remote API to use the RPCServer and RPCClient classes in [labscript_utils PR #89](#!/labscript_suite/labscript_utils/pull-requests/89/)\r\n\r\nIt is backward compatible with clients speaking the old protocol.\r\n\r\nThe  RPCServer and RPCClient classes are designed to allow RPC requests to come with version requirements, so that clients can make requests for new remote methods, or modified ways of calling existing methods, and know that if the server is not new enough for the changes, a version exception will be raised instead of some unhelpful crash downstream.\r\n\r\nThis will allow us to evolve the inter-process protocols over time, which so far have been forced to be static since we have had no way of doing remote versioning.\r\n\r\nThe RPCServer and RPCClient classes were modelled after what runmanager was doing already, which is why this is not a very big change. The idea is that we will morph the other apps' client-server code to be like this too.", "markup": "markdown", "html": "<p>This modifies the runmanager remote API to use the RPCServer and RPCClient classes in <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript_utils/pull-requests/89/\" rel=\"nofollow\">labscript_utils PR #89</a></p>\n<p>It is backward compatible with clients speaking the old protocol.</p>\n<p>The  RPCServer and RPCClient classes are designed to allow RPC requests to come with version requirements, so that clients can make requests for new remote methods, or modified ways of calling existing methods, and know that if the server is not new enough for the changes, a version exception will be raised instead of some unhelpful crash downstream.</p>\n<p>This will allow us to evolve the inter-process protocols over time, which so far have been forced to be static since we have had no way of doing remote versioning.</p>\n<p>The RPCServer and RPCClient classes were modelled after what runmanager was doing already, which is why this is not a very big change. The idea is that we will morph the other apps' client-server code to be like this too.</p>", "type": "rendered"}, "source": {"commit": {"hash": "276cf23acd99", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/276cf23acd99"}, "html": {"href": "#!/cbillington/runmanager/commits/276cf23acd99"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "RPCServer"}}, "comment_count": 1, "state": "DECLINED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, {"role": "PARTICIPANT", "participated_on": "2020-01-28T21:32:07.424972+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}}], "reason": "Will recreate on github", "updated_on": "2020-01-28T21:32:14.608600+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": null, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}