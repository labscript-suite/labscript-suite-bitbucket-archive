{"pagelen": 50, "values": [{"description": "Revision 579ccd8e1fb3 introduced a regression as a result of a misguided attempt for forward compatibility with Python 3. This caused `runmanager.get_all_groups()` to misidentify what type of argument it was being passed, and to think it had a list of filepaths when it had actually been passed a single filepath. It then iterated over the characters of the filepath, and obviously failed to open the hdf5 file.\r\n\r\nThis was discovered because it prevented the globals diff functionality in runmanager from working.\r\n\r\nAfter fixing this, it was discovered that the way we are calling DataFrame.to_string() uses a keyword argument that is only valid in pandas > 0.13. So I added a version check for pandas > 0.13.\r\n\r\nI bumped the version string from '2.0.3' to '2.0.4-dev', to be released as 2.0.4 if the only additional changes before then are bugfixes.\r\n\r\nThis fix has been deployed to the spinor lab, I propose a few days' use to confirm everything is ok before this pull request is accepted.\r\n\r\nIt's not as trivial a fix as it looks, because the regression had aliased the name 'unicode' to point to 'str'. That meant that some functions that previously returned bytestrings now return unicode strings. This was intended behaviour all along, but is a big enough change that a bit of testing to ensure it doesn't cause any other regressions is worthwhile.\r\n\r\nSpinor people added as reviewers because they're the ones running it in the lab", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/1/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:000000000000%0D46d311b5446b?from_pullrequest_id=1"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/1/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/1.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/1/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/1/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/1"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/1/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:000000000000%0D46d311b5446b?from_pullrequest_id=1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/1/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/1/statuses_page=1.json"}}, "title": "Regression fix for globals diff functionality", "close_source_branch": false, "type": "pullrequest", "id": 1, "destination": {"commit": {"hash": "46d311b5446b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/46d311b5446b.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/46d311b5446b"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2015-02-16T05:36:42.531575+00:00", "summary": {"raw": "Revision 579ccd8e1fb3 introduced a regression as a result of a misguided attempt for forward compatibility with Python 3. This caused `runmanager.get_all_groups()` to misidentify what type of argument it was being passed, and to think it had a list of filepaths when it had actually been passed a single filepath. It then iterated over the characters of the filepath, and obviously failed to open the hdf5 file.\r\n\r\nThis was discovered because it prevented the globals diff functionality in runmanager from working.\r\n\r\nAfter fixing this, it was discovered that the way we are calling DataFrame.to_string() uses a keyword argument that is only valid in pandas > 0.13. So I added a version check for pandas > 0.13.\r\n\r\nI bumped the version string from '2.0.3' to '2.0.4-dev', to be released as 2.0.4 if the only additional changes before then are bugfixes.\r\n\r\nThis fix has been deployed to the spinor lab, I propose a few days' use to confirm everything is ok before this pull request is accepted.\r\n\r\nIt's not as trivial a fix as it looks, because the regression had aliased the name 'unicode' to point to 'str'. That meant that some functions that previously returned bytestrings now return unicode strings. This was intended behaviour all along, but is a big enough change that a bit of testing to ensure it doesn't cause any other regressions is worthwhile.\r\n\r\nSpinor people added as reviewers because they're the ones running it in the lab", "markup": "markdown", "html": "<p>Revision <a href=\"#!/labscript_suite/runmanager/commits/579ccd8e1fb3\" rel=\"nofollow\" class=\"ap-connect-link\">579ccd8e1fb3</a> introduced a regression as a result of a misguided attempt for forward compatibility with Python 3. This caused <code>runmanager.get_all_groups()</code> to misidentify what type of argument it was being passed, and to think it had a list of filepaths when it had actually been passed a single filepath. It then iterated over the characters of the filepath, and obviously failed to open the hdf5 file.</p>\n<p>This was discovered because it prevented the globals diff functionality in runmanager from working.</p>\n<p>After fixing this, it was discovered that the way we are calling DataFrame.to_string() uses a keyword argument that is only valid in pandas &gt; 0.13. So I added a version check for pandas &gt; 0.13.</p>\n<p>I bumped the version string from '2.0.3' to '2.0.4-dev', to be released as 2.0.4 if the only additional changes before then are bugfixes.</p>\n<p>This fix has been deployed to the spinor lab, I propose a few days' use to confirm everything is ok before this pull request is accepted.</p>\n<p>It's not as trivial a fix as it looks, because the regression had aliased the name 'unicode' to point to 'str'. That meant that some functions that previously returned bytestrings now return unicode strings. This was intended behaviour all along, but is a big enough change that a bit of testing to ensure it doesn't cause any other regressions is worthwhile.</p>\n<p>Spinor people added as reviewers because they're the ones running it in the lab</p>", "type": "rendered"}, "source": {"commit": {"hash": "d95a6dfdb737", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/runmanager/commit/d95a6dfdb737"}, "html": {"href": "#!/monashspinor/runmanager/commits/d95a6dfdb737"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/runmanager"}, "html": {"href": "#!/monashspinor/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4daf97df-bd70-4449-afe3-3eaa8f7b4f88}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "monashspinor/runmanager", "uuid": "{4daf97df-bd70-4449-afe3-3eaa8f7b4f88}"}, "branch": {"name": "default"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2015-03-05T23:56:23.265622+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": null, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/2/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:000000000000%0Dd95a6dfdb737?from_pullrequest_id=2"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/2/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/2.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/2/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/2/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/2"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/2/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:000000000000%0Dd95a6dfdb737?from_pullrequest_id=2"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/2/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/2/statuses_page=1.json"}}, "title": "Added try/except around mise import when parsing globals as mise is no longer installed by default when using the labscript suite installer.", "close_source_branch": false, "type": "pullrequest", "id": 2, "destination": {"commit": {"hash": "d95a6dfdb737", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/d95a6dfdb737.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/d95a6dfdb737"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2015-06-10T05:21:39.947744+00:00", "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "source": {"commit": {"hash": "bdbcaabfc173", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/runmanager/commit/bdbcaabfc173"}, "html": {"href": "#!/pstarkey/runmanager/commits/bdbcaabfc173"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/runmanager"}, "html": {"href": "#!/pstarkey/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{2f11f5fd-c84d-42bd-a265-eda8b5bef98b}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "pstarkey/runmanager", "uuid": "{2f11f5fd-c84d-42bd-a265-eda8b5bef98b}"}, "branch": {"name": "default"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2015-08-04T23:25:11.717057+00:00", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "merge_commit": null, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/3/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:7f3022829ce8%0D2a3efa3e701b?from_pullrequest_id=3"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/3/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/3.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/3/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/3/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/3"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/3/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:7f3022829ce8%0D2a3efa3e701b?from_pullrequest_id=3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/3/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/3/statuses_page=1.json"}}, "title": "Implements Issue #36: \"The engage button should say how many shots will be compiled\"", "close_source_branch": false, "type": "pullrequest", "id": 3, "destination": {"commit": {"hash": "2a3efa3e701b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/2a3efa3e701b.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/2a3efa3e701b"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2016-02-18T02:44:02.187957+00:00", "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "source": {"commit": {"hash": "7f3022829ce8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/runmanager/commit/7f3022829ce8"}, "html": {"href": "#!/monashkrb/runmanager/commits/7f3022829ce8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/runmanager"}, "html": {"href": "#!/monashkrb/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5decc07f-72b7-4292-b42b-23a6bbca9a63}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "monashkrb/runmanager", "uuid": "{5decc07f-72b7-4292-b42b-23a6bbca9a63}"}, "branch": {"name": "default"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2016-09-07T01:46:10.214782+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "7f3022829ce83e639a971966a29194431fc1a945", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/7f3022829ce83e639a971966a29194431fc1a945.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/7f3022829ce83e639a971966a29194431fc1a945"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "Moved the globals diff utility functions and implementation from [__main.py__](#!/monashspinor/runmanager/src/7f3022829ce83e639a971966a29194431fc1a945/__main__.py?at=default&fileviewer=file-view-default#__main__.py-1916) into __init__.py (not optimal, but it's where dict_diff & other utilities are). Turned these into general purpose functions globals_diff_groups (which accepts two sets of globals groups) and globals_diff_shots (which accepts filenames). These can be used outside of the GUI, for example globals_diff.py,\r\nwhich can be added to the (right-click) 'Send to' menu on Windows by copying a\r\nshortcut to globals_diff.bat in shell:sendto.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/4/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:e4cf9c51701a%0Df03adbabf68b?from_pullrequest_id=4"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/4/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/4.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/4/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/4/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/4"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/4/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:e4cf9c51701a%0Df03adbabf68b?from_pullrequest_id=4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/4/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/4/statuses_page=1.json"}}, "title": "Generalised globals diff implementation to permit command line comparison of two shot files", "close_source_branch": true, "type": "pullrequest", "id": 4, "destination": {"commit": {"hash": "f03adbabf68b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/f03adbabf68b.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/f03adbabf68b"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2017-02-06T22:32:31.532001+00:00", "summary": {"raw": "Moved the globals diff utility functions and implementation from [__main.py__](#!/monashspinor/runmanager/src/7f3022829ce83e639a971966a29194431fc1a945/__main__.py?at=default&fileviewer=file-view-default#__main__.py-1916) into __init__.py (not optimal, but it's where dict_diff & other utilities are). Turned these into general purpose functions globals_diff_groups (which accepts two sets of globals groups) and globals_diff_shots (which accepts filenames). These can be used outside of the GUI, for example globals_diff.py,\r\nwhich can be added to the (right-click) 'Send to' menu on Windows by copying a\r\nshortcut to globals_diff.bat in shell:sendto.", "markup": "markdown", "html": "<p>Moved the globals diff utility functions and implementation from <a data-is-external-link=\"true\" href=\"#!/monashspinor/runmanager/src/7f3022829ce83e639a971966a29194431fc1a945/__main__.py?at=default&amp;fileviewer=file-view-default#__main__.py-1916\" rel=\"nofollow\"><strong>main.py</strong></a> into <strong>init</strong>.py (not optimal, but it's where dict_diff &amp; other utilities are). Turned these into general purpose functions globals_diff_groups (which accepts two sets of globals groups) and globals_diff_shots (which accepts filenames). These can be used outside of the GUI, for example globals_diff.py,\nwhich can be added to the (right-click) 'Send to' menu on Windows by copying a\nshortcut to globals_diff.bat in shell:sendto.</p>", "type": "rendered"}, "source": {"commit": {"hash": "857f9ad3f6cb", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/runmanager/commit/857f9ad3f6cb"}, "html": {"href": "#!/monashspinor/runmanager/commits/857f9ad3f6cb"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/runmanager"}, "html": {"href": "#!/monashspinor/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4daf97df-bd70-4449-afe3-3eaa8f7b4f88}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "monashspinor/runmanager", "uuid": "{4daf97df-bd70-4449-afe3-3eaa8f7b4f88}"}, "branch": {"name": "globals_diff"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-05-22T22:52:12.313199+00:00", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "merge_commit": {"hash": "e4cf9c51701a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/e4cf9c51701a.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/e4cf9c51701a"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "I've implemented a fix for issue #38. \r\n\r\nThe globals h5 file I used to test is [here](https://drive.google.com/file/d/0B2bGfZaZxqvbVm5wMEg4cVRtRzQ/view?usp=sharing). I don't believe I've introduced any regressions, but there may be edge cases I forgot to test. The globals file contains a set of globals I believe covers all possible behaviour. Feel free to update and correct if I've missed something.\r\n\r\nI've added @dihm as a reviewer since he logged the bug, but I'm not sure how that will work given he is not a maintainer of the main repository. I guess we'll see how bitbucket handles that!\r\n\r\nChanges:\r\n\r\n* Now check to make sure that global dependencies are only returned by `find_dependencies` when the result of the evaluated dependency is also an allowed expansion type (as determined by `runmanager.guess_expansion_type`).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/5/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:5732e011a98f%0De4cf9c51701a?from_pullrequest_id=5"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/5/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/5.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/5/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/5/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/5"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/5/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:5732e011a98f%0De4cf9c51701a?from_pullrequest_id=5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/5/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/5/statuses_page=1.json"}}, "title": "Fixes issue #38", "close_source_branch": false, "type": "pullrequest", "id": 5, "destination": {"commit": {"hash": "e4cf9c51701a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/e4cf9c51701a.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/e4cf9c51701a"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2017-06-13T00:25:38.479117+00:00", "summary": {"raw": "I've implemented a fix for issue #38. \r\n\r\nThe globals h5 file I used to test is [here](https://drive.google.com/file/d/0B2bGfZaZxqvbVm5wMEg4cVRtRzQ/view?usp=sharing). I don't believe I've introduced any regressions, but there may be edge cases I forgot to test. The globals file contains a set of globals I believe covers all possible behaviour. Feel free to update and correct if I've missed something.\r\n\r\nI've added @dihm as a reviewer since he logged the bug, but I'm not sure how that will work given he is not a maintainer of the main repository. I guess we'll see how bitbucket handles that!\r\n\r\nChanges:\r\n\r\n* Now check to make sure that global dependencies are only returned by `find_dependencies` when the result of the evaluated dependency is also an allowed expansion type (as determined by `runmanager.guess_expansion_type`).", "markup": "markdown", "html": "<p>I've implemented a fix for issue <a href=\"#!/labscript_suite/runmanager/issues/38/saving-length-of-array-to-global-throws\" rel=\"nofollow\" title=\"Saving Length of Array to global throws KeyError\" class=\"ap-connect-link\"><s>#38</s></a>. </p>\n<p>The globals h5 file I used to test is <a data-is-external-link=\"true\" href=\"https://drive.google.com/file/d/0B2bGfZaZxqvbVm5wMEg4cVRtRzQ/view?usp=sharing\" rel=\"nofollow\">here</a>. I don't believe I've introduced any regressions, but there may be edge cases I forgot to test. The globals file contains a set of globals I believe covers all possible behaviour. Feel free to update and correct if I've missed something.</p>\n<p>I've added @dihm as a reviewer since he logged the bug, but I'm not sure how that will work given he is not a maintainer of the main repository. I guess we'll see how bitbucket handles that!</p>\n<p>Changes:</p>\n<ul>\n<li>Now check to make sure that global dependencies are only returned by <code>find_dependencies</code> when the result of the evaluated dependency is also an allowed expansion type (as determined by <code>runmanager.guess_expansion_type</code>).</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "5732e011a98f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/runmanager/commit/5732e011a98f"}, "html": {"href": "#!/monashkrb/runmanager/commits/5732e011a98f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/runmanager"}, "html": {"href": "#!/monashkrb/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{5decc07f-72b7-4292-b42b-23a6bbca9a63}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "monashkrb/runmanager", "uuid": "{5decc07f-72b7-4292-b42b-23a6bbca9a63}"}, "branch": {"name": "default"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-06-13T14:55:20.793868+00:00", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "merge_commit": {"hash": "5732e011a98f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/5732e011a98f.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/5732e011a98f"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "- Fix incompatibility with pandas 0.20, in which df.sort() is deprecated.\r\ndf.sort_index() is used instead. This method has existed since at least 0.15,\r\nso switching to it is backward compatible.\r\n\r\n- Fix regression introduced in c4f793b8 which failed to print diff table\r\nto output box due to a simple typo.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/6/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:ea022df964e6%0D5732e011a98f?from_pullrequest_id=6"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/6/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/6.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/6/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/6/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/6"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/6/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:ea022df964e6%0D5732e011a98f?from_pullrequest_id=6"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/6/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/6/statuses_page=1.json"}}, "title": "Fix for issue #40, globals diffing", "close_source_branch": false, "type": "pullrequest", "id": 6, "destination": {"commit": {"hash": "5732e011a98f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/5732e011a98f.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/5732e011a98f"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2017-06-15T20:23:02.872000+00:00", "summary": {"raw": "- Fix incompatibility with pandas 0.20, in which df.sort() is deprecated.\r\ndf.sort_index() is used instead. This method has existed since at least 0.15,\r\nso switching to it is backward compatible.\r\n\r\n- Fix regression introduced in c4f793b8 which failed to print diff table\r\nto output box due to a simple typo.", "markup": "markdown", "html": "<ul>\n<li>\n<p>Fix incompatibility with pandas 0.20, in which df.sort() is deprecated.\ndf.sort_index() is used instead. This method has existed since at least 0.15,\nso switching to it is backward compatible.</p>\n</li>\n<li>\n<p>Fix regression introduced in <a href=\"#!/labscript_suite/runmanager/commits/c4f793b8\" rel=\"nofollow\" class=\"ap-connect-link\">c4f793b8</a> which failed to print diff table\nto output box due to a simple typo.</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "66f8e0ee6a13", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/66f8e0ee6a13"}, "html": {"href": "#!/cbillington/runmanager/commits/66f8e0ee6a13"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "bugfix"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-06-19T00:38:15.132152+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "ea022df964e6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/ea022df964e6.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/ea022df964e6"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "Fix issue #42, ModuleWatcher unloading modules mid-compilation.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/7/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:ab11104655b5%0D6b2af36af6ce?from_pullrequest_id=7"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/7/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/7.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/7/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/7/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/7"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/7/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:ab11104655b5%0D6b2af36af6ce?from_pullrequest_id=7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/7/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/7/statuses_page=1.json"}}, "title": "Fix issue #42, ModuleWatcher unloading modules mid-compilation.", "close_source_branch": false, "type": "pullrequest", "id": 7, "destination": {"commit": {"hash": "6b2af36af6ce", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/6b2af36af6ce.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/6b2af36af6ce"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2017-06-21T01:09:40.018580+00:00", "summary": {"raw": "Fix issue #42, ModuleWatcher unloading modules mid-compilation.", "markup": "markdown", "html": "<p>Fix issue <a href=\"#!/labscript_suite/runmanager/issues/42/compilation-errors-immediately-following\" rel=\"nofollow\" title=\"Compilation errors immediately following changes to labscript_utils\" class=\"ap-connect-link\"><s>#42</s></a>, ModuleWatcher unloading modules mid-compilation.</p>", "type": "rendered"}, "source": {"commit": {"hash": "55a065c590e8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/55a065c590e8"}, "html": {"href": "#!/cbillington/runmanager/commits/55a065c590e8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "bugfix"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-06-27T07:17:56.453964+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "ab11104655b5", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/ab11104655b5.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/ab11104655b5"}}}, "closed_by": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}}, {"description": "This bug was causing lyse to incorrectly create files instead of realising that\r\nthey had been deleted.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/8/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:6b2af36af6ce%0Dea022df964e6?from_pullrequest_id=8"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/8/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/8.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/8/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/8/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/8"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/8/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:6b2af36af6ce%0Dea022df964e6?from_pullrequest_id=8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/8/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/8/statuses_page=1.json"}}, "title": "Fix bug in runmanager.get_shot_globals(), do not open the file in write mode.", "close_source_branch": false, "type": "pullrequest", "id": 8, "destination": {"commit": {"hash": "ea022df964e6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/ea022df964e6.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/ea022df964e6"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2017-06-21T17:27:16.489109+00:00", "summary": {"raw": "This bug was causing lyse to incorrectly create files instead of realising that\r\nthey had been deleted.", "markup": "markdown", "html": "<p>This bug was causing lyse to incorrectly create files instead of realising that\nthey had been deleted.</p>", "type": "rendered"}, "source": {"commit": {"hash": "e25984fc9dbb", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/e25984fc9dbb"}, "html": {"href": "#!/cbillington/runmanager/commits/e25984fc9dbb"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "bugfix2"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-06-22T06:34:01.394047+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "6b2af36af6ce", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/6b2af36af6ce.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/6b2af36af6ce"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "This pull request along with it's sister pull requests introduces qtutil's new abstraction layer for Qt. This abstraction layer is supposed to act like PyQt5. A few adjustments needed to be made so things don't break.\r\n\r\nThis pull request should also bring PyQt5 compatibility but this should be experimental at first so reviewing should not include this as a criterium for approval. (This has been discussed [here](https://pstarkey.github.io/bitbucket-archive/#!/pull-requests/1/pyqt5/diff#comment-41775691))\r\n\r\nTo test this one needs to also pull from my qtutils repo [here](https://bitbucket.org/PhyNerd/qtutils/).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/9/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:ba6441ea86e4%0D76375007de1f?from_pullrequest_id=9"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/9/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/9.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/9/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/9/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/9"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/9/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:ba6441ea86e4%0D76375007de1f?from_pullrequest_id=9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/9/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/9/statuses_page=1.json"}}, "title": "qtutils 2.0.0 support and experimental PyQt5 support", "close_source_branch": true, "type": "pullrequest", "id": 9, "destination": {"commit": {"hash": "76375007de1f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/76375007de1f.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/76375007de1f"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2017-08-01T19:46:39.027063+00:00", "summary": {"raw": "This pull request along with it's sister pull requests introduces qtutil's new abstraction layer for Qt. This abstraction layer is supposed to act like PyQt5. A few adjustments needed to be made so things don't break.\r\n\r\nThis pull request should also bring PyQt5 compatibility but this should be experimental at first so reviewing should not include this as a criterium for approval. (This has been discussed [here](https://pstarkey.github.io/bitbucket-archive/#!/pull-requests/1/pyqt5/diff#comment-41775691))\r\n\r\nTo test this one needs to also pull from my qtutils repo [here](https://bitbucket.org/PhyNerd/qtutils/).", "markup": "markdown", "html": "<p>This pull request along with it's sister pull requests introduces qtutil's new abstraction layer for Qt. This abstraction layer is supposed to act like PyQt5. A few adjustments needed to be made so things don't break.</p>\n<p>This pull request should also bring PyQt5 compatibility but this should be experimental at first so reviewing should not include this as a criterium for approval. (This has been discussed <a data-is-external-link=\"true\" href=\"https://pstarkey.github.io/bitbucket-archive/#!/pull-requests/1/pyqt5/diff#comment-41775691\" rel=\"nofollow\">here</a>)</p>\n<p>To test this one needs to also pull from my qtutils repo <a data-is-external-link=\"true\" href=\"https://bitbucket.org/PhyNerd/qtutils/\" rel=\"nofollow\">here</a>.</p>", "type": "rendered"}, "source": {"commit": {"hash": "ed7d8df84b17", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager/commit/ed7d8df84b17"}, "html": {"href": "#!/PhyNerd/runmanager/commits/ed7d8df84b17"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager"}, "html": {"href": "#!/PhyNerd/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "PhyNerd/runmanager", "uuid": "{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}"}, "branch": {"name": "Qt5"}}, "comment_count": 12, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-15T23:43:48.302012+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "ba6441ea86e4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/ba6441ea86e4.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/ba6441ea86e4"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Removed definition of config_path as it should be automatically defined by labconfig.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/10/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:9cf28f527db2%0Dab11104655b5?from_pullrequest_id=10"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/10/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/10.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/10/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/10/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/10"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/10/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:9cf28f527db2%0Dab11104655b5?from_pullrequest_id=10"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/10/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/10/statuses_page=1.json"}}, "title": "Labconfig", "close_source_branch": false, "type": "pullrequest", "id": 10, "destination": {"commit": {"hash": "ab11104655b5", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/ab11104655b5.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/ab11104655b5"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2017-08-04T18:03:55.069429+00:00", "summary": {"raw": "Removed definition of config_path as it should be automatically defined by labconfig.", "markup": "markdown", "html": "<p>Removed definition of config_path as it should be automatically defined by labconfig.</p>", "type": "rendered"}, "source": {"commit": {"hash": "f4061967c1fa", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager/commit/f4061967c1fa"}, "html": {"href": "#!/PhyNerd/runmanager/commits/f4061967c1fa"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager"}, "html": {"href": "#!/PhyNerd/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "PhyNerd/runmanager", "uuid": "{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}"}, "branch": {"name": "labconfig"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-05T01:01:59.661758+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "9cf28f527db2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/9cf28f527db2.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/9cf28f527db2"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This adds the ability to copy/move global groups (see issue #43) to the right-click menu. \r\n\r\nCopying is really handy if you want to setup a new type of experiment using a bunch of the same globals but with different values or if you are tying out new values and want to keep the old one(backups are always great). \r\n\r\nMoving can help with splitting huge global files into smaller ones.\r\n\r\nCopies are automatically named NAME_copy. If this name should already exist they are named NAME_copy(#) where # increments  until free name is found.\r\n\r\nMoved groups get a suffix if a group group with the same name should already exist in the new file.\r\nThe suffix is (#) where # increments until free name is found.\r\n\r\n![screenshot.png](data/bitbucket.org/repo/6g5bg5/images/3167270748-screenshot.png)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/11/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:76375007de1f%0D9cf28f527db2?from_pullrequest_id=11"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/11/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/11.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/11/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/11/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/11"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/11/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:76375007de1f%0D9cf28f527db2?from_pullrequest_id=11"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/11/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/11/statuses_page=1.json"}}, "title": "Copy and move global groups", "close_source_branch": false, "type": "pullrequest", "id": 11, "destination": {"commit": {"hash": "9cf28f527db2", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/9cf28f527db2.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/9cf28f527db2"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2017-08-05T10:09:37.272403+00:00", "summary": {"raw": "This adds the ability to copy/move global groups (see issue #43) to the right-click menu. \r\n\r\nCopying is really handy if you want to setup a new type of experiment using a bunch of the same globals but with different values or if you are tying out new values and want to keep the old one(backups are always great). \r\n\r\nMoving can help with splitting huge global files into smaller ones.\r\n\r\nCopies are automatically named NAME_copy. If this name should already exist they are named NAME_copy(#) where # increments  until free name is found.\r\n\r\nMoved groups get a suffix if a group group with the same name should already exist in the new file.\r\nThe suffix is (#) where # increments until free name is found.\r\n\r\n![screenshot.png](data/bitbucket.org/repo/6g5bg5/images/3167270748-screenshot.png)", "markup": "markdown", "html": "<p>This adds the ability to copy/move global groups (see issue <a href=\"#!/labscript_suite/runmanager/issues/43/copying-global-groups\" rel=\"nofollow\" title=\"Copying global groups\" class=\"ap-connect-link\"><s>#43</s></a>) to the right-click menu. </p>\n<p>Copying is really handy if you want to setup a new type of experiment using a bunch of the same globals but with different values or if you are tying out new values and want to keep the old one(backups are always great). </p>\n<p>Moving can help with splitting huge global files into smaller ones.</p>\n<p>Copies are automatically named NAME_copy. If this name should already exist they are named NAME_copy(#) where # increments  until free name is found.</p>\n<p>Moved groups get a suffix if a group group with the same name should already exist in the new file.\nThe suffix is (#) where # increments until free name is found.</p>\n<p><img alt=\"screenshot.png\" src=\"data/bitbucket.org/repo/6g5bg5/images/3167270748-screenshot.png\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "87996b88b7d3", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager/commit/87996b88b7d3"}, "html": {"href": "#!/PhyNerd/runmanager/commits/87996b88b7d3"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager"}, "html": {"href": "#!/PhyNerd/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "PhyNerd/runmanager", "uuid": "{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}"}, "branch": {"name": "copy-global-groups"}}, "comment_count": 13, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-11T15:11:53.105314+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "76375007de1f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/76375007de1f.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/76375007de1f"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This adds the ability to quickly change numeric globals with the arrow keys. (issue #44)\r\nIf one now uses the up, down, left, right keys a numeric global is adjusted in a hopefuly intuitive way. \r\nIt's hard to explain so here is a gif:\r\n![arrow_switching.gif](data/bitbucket.org/repo/9p5Xy7e/images/2884992424-arrow_switching.gif)\r\n\r\nThis should make it easy to quickly edit all numeric globals with just arrow keys and enter on the keyboard. (enter to start/end editing and arrow for moving around and changing values)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/12/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/PhyNerd/runmanager:6a9786e4d015%0D3349e44897b4?from_pullrequest_id=12"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/12/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/12"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/PhyNerd/runmanager:6a9786e4d015%0D3349e44897b4?from_pullrequest_id=12"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/12/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/12/statuses_page=1.json"}}, "title": "Arrow Key switching", "close_source_branch": false, "type": "pullrequest", "id": 12, "destination": {"commit": {"hash": "3349e44897b4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/3349e44897b4.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/3349e44897b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2017-08-05T19:14:07.889184+00:00", "summary": {"raw": "This adds the ability to quickly change numeric globals with the arrow keys. (issue #44)\r\nIf one now uses the up, down, left, right keys a numeric global is adjusted in a hopefuly intuitive way. \r\nIt's hard to explain so here is a gif:\r\n![arrow_switching.gif](data/bitbucket.org/repo/9p5Xy7e/images/2884992424-arrow_switching.gif)\r\n\r\nThis should make it easy to quickly edit all numeric globals with just arrow keys and enter on the keyboard. (enter to start/end editing and arrow for moving around and changing values)", "markup": "markdown", "html": "<p>This adds the ability to quickly change numeric globals with the arrow keys. (issue <a href=\"#!/labscript_suite/runmanager/issues/44/changing-values-with-arrow-keys\" rel=\"nofollow\" title=\"changing values with arrow keys\" class=\"ap-connect-link\">#44</a>)\nIf one now uses the up, down, left, right keys a numeric global is adjusted in a hopefuly intuitive way. \nIt's hard to explain so here is a gif:\n<img alt=\"arrow_switching.gif\" src=\"data/bitbucket.org/repo/9p5Xy7e/images/2884992424-arrow_switching.gif\" /></p>\n<p>This should make it easy to quickly edit all numeric globals with just arrow keys and enter on the keyboard. (enter to start/end editing and arrow for moving around and changing values)</p>", "type": "rendered"}, "source": {"commit": {"hash": "6a9786e4d015", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager/commit/6a9786e4d015"}, "html": {"href": "#!/PhyNerd/runmanager/commits/6a9786e4d015"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager"}, "html": {"href": "#!/PhyNerd/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "PhyNerd/runmanager", "uuid": "{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}"}, "branch": {"name": "quick-arrow-edit"}}, "comment_count": 18, "state": "DECLINED", "task_count": 0, "reason": "Superseded by PR #44", "updated_on": "2019-12-08T03:34:45.172939+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": null, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This adds two progressbars to runmanager. One showing the current compilation progress the other showing total progress of engaged sequences.\r\n\r\nAlso the abort button now only gets disabled, if the compilation queue is empty and not if the first compilation finished. Abort always aborts the current compilation. This should fix #45 and #33. \r\n\r\n![progressbars.gif](data/bitbucket.org/repo/6g5bg5/images/206173113-progressbars.gif)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/13/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/PhyNerd/runmanager:e39fb158b4c1%0D1280b7eb55cb?from_pullrequest_id=13"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/13/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/13.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/13/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/13/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/13"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/13/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/PhyNerd/runmanager:e39fb158b4c1%0D1280b7eb55cb?from_pullrequest_id=13"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/13/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/13/statuses_page=1.json"}}, "title": "Progressbars and abort fix", "close_source_branch": false, "type": "pullrequest", "id": 13, "destination": {"commit": {"hash": "1280b7eb55cb", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/1280b7eb55cb.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/1280b7eb55cb"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2017-08-08T18:33:27.058053+00:00", "summary": {"raw": "This adds two progressbars to runmanager. One showing the current compilation progress the other showing total progress of engaged sequences.\r\n\r\nAlso the abort button now only gets disabled, if the compilation queue is empty and not if the first compilation finished. Abort always aborts the current compilation. This should fix #45 and #33. \r\n\r\n![progressbars.gif](data/bitbucket.org/repo/6g5bg5/images/206173113-progressbars.gif)", "markup": "markdown", "html": "<p>This adds two progressbars to runmanager. One showing the current compilation progress the other showing total progress of engaged sequences.</p>\n<p>Also the abort button now only gets disabled, if the compilation queue is empty and not if the first compilation finished. Abort always aborts the current compilation. This should fix <a href=\"#!/labscript_suite/runmanager/issues/45/compilation-progress-and-abort\" rel=\"nofollow\" title=\"Compilation progress and abort\" class=\"ap-connect-link\">#45</a> and <a href=\"#!/labscript_suite/runmanager/issues/33/abort-button-only-stops-current-sequence\" rel=\"nofollow\" title=\"Abort button only stops current sequence of shots\" class=\"ap-connect-link\">#33</a>. </p>\n<p><img alt=\"progressbars.gif\" src=\"data/bitbucket.org/repo/6g5bg5/images/206173113-progressbars.gif\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "e39fb158b4c1", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager/commit/e39fb158b4c1"}, "html": {"href": "#!/PhyNerd/runmanager/commits/e39fb158b4c1"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager"}, "html": {"href": "#!/PhyNerd/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "PhyNerd/runmanager", "uuid": "{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}"}, "branch": {"name": "Progressbar"}}, "comment_count": 13, "state": "DECLINED", "task_count": 0, "reason": "", "updated_on": "2018-04-23T01:15:06.926661+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": null, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Got rid of all code that interacts with or mentions the long-dead mise.\r\n\r\nI'm removing the 'mise' port number from the default labconfig made by the installer and runmanager threw an error about it not being there - so I got rid of all of this functionality from runmanager since it is long gone.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/14/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:f4a97dbb3928%0Dba6441ea86e4?from_pullrequest_id=14"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/14/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/14.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/14/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/14/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/14"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/14/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:f4a97dbb3928%0Dba6441ea86e4?from_pullrequest_id=14"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/14/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/14/statuses_page=1.json"}}, "title": "Removed vestigial references to mise", "close_source_branch": true, "type": "pullrequest", "id": 14, "destination": {"commit": {"hash": "ba6441ea86e4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/ba6441ea86e4.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/ba6441ea86e4"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2017-08-11T21:01:56.968336+00:00", "summary": {"raw": "Got rid of all code that interacts with or mentions the long-dead mise.\r\n\r\nI'm removing the 'mise' port number from the default labconfig made by the installer and runmanager threw an error about it not being there - so I got rid of all of this functionality from runmanager since it is long gone.", "markup": "markdown", "html": "<p>Got rid of all code that interacts with or mentions the long-dead mise.</p>\n<p>I'm removing the 'mise' port number from the default labconfig made by the installer and runmanager threw an error about it not being there - so I got rid of all of this functionality from runmanager since it is long gone.</p>", "type": "rendered"}, "source": {"commit": {"hash": "c721ee67db11", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/c721ee67db11"}, "html": {"href": "#!/cbillington/runmanager/commits/c721ee67db11"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "remove-mise"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-16T18:52:41.106466+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "f4a97dbb3928", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/f4a97dbb3928.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/f4a97dbb3928"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "fixes issue #49 (mostly)\r\n\r\nCurrently this does not fix the following cases:\r\n\r\n* Manually changing an \"outer\" expansion type to nothing (it will revert to \"outer\" when you reopen runmanager)\r\n* Manually changing a zip group to \"outer\" (it will revert to the zip group when you re-open)\r\n\r\nI believe these two cases are very difficult to solve. They may actually be impossible to solve without storing (in the HDF5 file) whether the expansion type was set manually (by the user) or automatically (by runmanager)  \r\n\r\n# **An additional change this introduces**\r\n\r\nWhile zip groups have always been automatically named based on the top level global dependency, the zip group chosen when a global had multiple dependencies was less clear. I believe it used to be based on the alphabetical order of the top level dependencies (the globals that do **not** depend on other globals), with the last one (when sorted alphabetically) chosen as the zip group name for a given global (although this would only update the zip group name of the globals that depended on this last one...if that makes sense).  \r\n  \r\nNow, the zip group name is chosen based on which zip group was created first. So if a global is part of a zip group, the name will **not** update, even if a dependency becomes a list later on. I think this makes more sense, as there is less consequential behaviour going on.\r\n\r\n\u200c\r\n\r\n# **Those who wish to test**\r\n\r\nPlease play around with zip groups and outer products. I would suggest having at least several independent sets (to avoid confusing I don't mean Python sets, I just mean a collection of globals that you will use together) of globals (two or three globals per set should be enough) that depend on globals only from within each set. Then introduce some globals that depend on globals from more than one of those sets. Also have globals that don't relate to any others. \r\n\r\nOnce you've set up some globals\r\n\r\n* Then start playing around with changing globals from single values to arrays. \r\n* See if the zip group naming makes sense\r\n* See if the changes from no expansion to outer product to zip group expansion makes sense.\r\n* See if the expansion state is maintained when you open and close runmanager\r\n* You may also want to play with global names, since some code still depends on alphabetical sorting and so there may be bugs I haven't uncovered there\r\n* See if you can break it in any way!\r\n\r\nThanks!\r\n\r\nP.S. Please leave me to merge so that the branch gets closed!", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/15/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:e3f7497da894%0D3025fbd5ff06?from_pullrequest_id=15"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/15/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/15.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/15/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/15/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/15"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/15/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:e3f7497da894%0D3025fbd5ff06?from_pullrequest_id=15"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/15/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/15/statuses_page=1.json"}}, "title": "Fixed several bugs where custom zip groups were overridden.", "close_source_branch": true, "type": "pullrequest", "id": 15, "destination": {"commit": {"hash": "3025fbd5ff06", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/3025fbd5ff06.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/3025fbd5ff06"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2017-09-11T04:28:12.682918+00:00", "summary": {"raw": "fixes issue #49 (mostly)\r\n\r\nCurrently this does not fix the following cases:\r\n\r\n* Manually changing an \"outer\" expansion type to nothing (it will revert to \"outer\" when you reopen runmanager)\r\n* Manually changing a zip group to \"outer\" (it will revert to the zip group when you re-open)\r\n\r\nI believe these two cases are very difficult to solve. They may actually be impossible to solve without storing (in the HDF5 file) whether the expansion type was set manually (by the user) or automatically (by runmanager)  \r\n\r\n# **An additional change this introduces**\r\n\r\nWhile zip groups have always been automatically named based on the top level global dependency, the zip group chosen when a global had multiple dependencies was less clear. I believe it used to be based on the alphabetical order of the top level dependencies (the globals that do **not** depend on other globals), with the last one (when sorted alphabetically) chosen as the zip group name for a given global (although this would only update the zip group name of the globals that depended on this last one...if that makes sense).  \r\n  \r\nNow, the zip group name is chosen based on which zip group was created first. So if a global is part of a zip group, the name will **not** update, even if a dependency becomes a list later on. I think this makes more sense, as there is less consequential behaviour going on.\r\n\r\n\u200c\r\n\r\n# **Those who wish to test**\r\n\r\nPlease play around with zip groups and outer products. I would suggest having at least several independent sets (to avoid confusing I don't mean Python sets, I just mean a collection of globals that you will use together) of globals (two or three globals per set should be enough) that depend on globals only from within each set. Then introduce some globals that depend on globals from more than one of those sets. Also have globals that don't relate to any others. \r\n\r\nOnce you've set up some globals\r\n\r\n* Then start playing around with changing globals from single values to arrays. \r\n* See if the zip group naming makes sense\r\n* See if the changes from no expansion to outer product to zip group expansion makes sense.\r\n* See if the expansion state is maintained when you open and close runmanager\r\n* You may also want to play with global names, since some code still depends on alphabetical sorting and so there may be bugs I haven't uncovered there\r\n* See if you can break it in any way!\r\n\r\nThanks!\r\n\r\nP.S. Please leave me to merge so that the branch gets closed!", "markup": "markdown", "html": "<p>fixes issue <a href=\"#!/labscript_suite/runmanager/issues/49/zip-groups-are-overridden-when-reopening\" rel=\"nofollow\" title=\"Zip groups are overridden when reopening runmanager\" class=\"ap-connect-link\"><s>#49</s></a> (mostly)</p>\n<p>Currently this does not fix the following cases:</p>\n<ul>\n<li>Manually changing an \"outer\" expansion type to nothing (it will revert to \"outer\" when you reopen runmanager)</li>\n<li>Manually changing a zip group to \"outer\" (it will revert to the zip group when you re-open)</li>\n</ul>\n<p>I believe these two cases are very difficult to solve. They may actually be impossible to solve without storing (in the HDF5 file) whether the expansion type was set manually (by the user) or automatically (by runmanager)  </p>\n<h1 id=\"markdown-header-an-additional-change-this-introduces\"><strong>An additional change this introduces</strong></h1>\n<p>While zip groups have always been automatically named based on the top level global dependency, the zip group chosen when a global had multiple dependencies was less clear. I believe it used to be based on the alphabetical order of the top level dependencies (the globals that do <strong>not</strong> depend on other globals), with the last one (when sorted alphabetically) chosen as the zip group name for a given global (although this would only update the zip group name of the globals that depended on this last one...if that makes sense).  </p>\n<p>Now, the zip group name is chosen based on which zip group was created first. So if a global is part of a zip group, the name will <strong>not</strong> update, even if a dependency becomes a list later on. I think this makes more sense, as there is less consequential behaviour going on.</p>\n<p>\u200c</p>\n<h1 id=\"markdown-header-those-who-wish-to-test\"><strong>Those who wish to test</strong></h1>\n<p>Please play around with zip groups and outer products. I would suggest having at least several independent sets (to avoid confusing I don't mean Python sets, I just mean a collection of globals that you will use together) of globals (two or three globals per set should be enough) that depend on globals only from within each set. Then introduce some globals that depend on globals from more than one of those sets. Also have globals that don't relate to any others. </p>\n<p>Once you've set up some globals</p>\n<ul>\n<li>Then start playing around with changing globals from single values to arrays. </li>\n<li>See if the zip group naming makes sense</li>\n<li>See if the changes from no expansion to outer product to zip group expansion makes sense.</li>\n<li>See if the expansion state is maintained when you open and close runmanager</li>\n<li>You may also want to play with global names, since some code still depends on alphabetical sorting and so there may be bugs I haven't uncovered there</li>\n<li>See if you can break it in any way!</li>\n</ul>\n<p>Thanks!</p>\n<p>P.S. Please leave me to merge so that the branch gets closed!</p>", "type": "rendered"}, "source": {"commit": {"hash": "aa6dcd7dd7c1", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/runmanager/commit/aa6dcd7dd7c1"}, "html": {"href": "#!/pstarkey/runmanager/commits/aa6dcd7dd7c1"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/runmanager"}, "html": {"href": "#!/pstarkey/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{2f11f5fd-c84d-42bd-a265-eda8b5bef98b}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "pstarkey/runmanager", "uuid": "{2f11f5fd-c84d-42bd-a265-eda8b5bef98b}"}, "branch": {"name": "issue49"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-11-07T23:19:51.888145+00:00", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "merge_commit": {"hash": "e3f7497da894", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/e3f7497da894.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/e3f7497da894"}}}, "closed_by": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"description": "This pull request aims at bringing Python 2/3 compatibility to runmanager. \r\n\r\n* **future** imports and Python 3 compatibility\r\n* fixed unicode errors in python 3\r\n* replaced execfile with exec\r\n* replaced StringIO and casted some dict.keys\\(\\) to list", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/16/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:1280b7eb55cb%0D7f5031fbb4c9?from_pullrequest_id=16"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/16/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/16.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/16/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/16/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/16"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/16/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:1280b7eb55cb%0D7f5031fbb4c9?from_pullrequest_id=16"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/16/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/16/statuses_page=1.json"}}, "title": "Python3", "close_source_branch": true, "type": "pullrequest", "id": 16, "destination": {"commit": {"hash": "7f5031fbb4c9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/7f5031fbb4c9.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/7f5031fbb4c9"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2017-10-19T13:36:06.803690+00:00", "summary": {"raw": "This pull request aims at bringing Python 2/3 compatibility to runmanager. \r\n\r\n* **future** imports and Python 3 compatibility\r\n* fixed unicode errors in python 3\r\n* replaced execfile with exec\r\n* replaced StringIO and casted some dict.keys\\(\\) to list", "markup": "markdown", "html": "<p>This pull request aims at bringing Python 2/3 compatibility to runmanager. </p>\n<ul>\n<li><strong>future</strong> imports and Python 3 compatibility</li>\n<li>fixed unicode errors in python 3</li>\n<li>replaced execfile with exec</li>\n<li>replaced StringIO and casted some dict.keys() to list</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "dd4082a43ec9", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager/commit/dd4082a43ec9"}, "html": {"href": "#!/PhyNerd/runmanager/commits/dd4082a43ec9"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager"}, "html": {"href": "#!/PhyNerd/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "PhyNerd/runmanager", "uuid": "{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}"}, "branch": {"name": "Python3"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-03-27T01:59:09.801385+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "1280b7eb55cb", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/1280b7eb55cb.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/1280b7eb55cb"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Implemented the axes tab. Fixes issue #31\r\n\r\n* Globals \\(and zip groups\\) that are being expanded upon to make maultiple shots are now displayed in the axes tab.\r\n* You can reorder the globals/zip groups which will now change the order in which they are expanded over.\r\n* Expansion occurs over globals as if the hierarchy represented nested for loops in Python \\(so you iterate over all values in the most indented \\(lowest\\) level first for a fixed value in each higher level, etc.\\)\r\n* You can now shuffle specific globals only.\r\n* The global shuffle is now a tri-state checkbox and will toggle shuffle on/off for all globals/zip groups\r\n* The global shuffle also shuffles the set of shots \\(as before\\) if all globals/zip groups are set to shuffle \\(which ensures that you don't get any grouping by the higher levels as you would only be shuffling the order of values within a single global/zip group\\)\r\n* The axes tab is saved in the runmanager configuration file \\(it doesn't make sense to save it in the globals file as the axes tab may show the expansions that span multiple h5 files if you are drawing globals from multiple files\\)\r\n\r\n\u200c\r\n\r\nPlease leave me to merge once approved so that I can close the branch in my repo\r\n\r\nUpdate \\(image!\\):\r\n\r\n![runmanager\\_axes.png](https://bitbucket.org/repo/6g5bg5/images/1107094758-runmanager\\_axes.png 'runmanager\\_axes.png')", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/17/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:7f5031fbb4c9%0De3f7497da894?from_pullrequest_id=17"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/17/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/17.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/17/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/17/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/17"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/17/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:7f5031fbb4c9%0De3f7497da894?from_pullrequest_id=17"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/17/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/17/statuses_page=1.json"}}, "title": "The \"Axes\" tab", "close_source_branch": true, "type": "pullrequest", "id": 17, "destination": {"commit": {"hash": "e3f7497da894", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/e3f7497da894.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/e3f7497da894"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2017-11-11T10:27:10.817825+00:00", "summary": {"raw": "Implemented the axes tab. Fixes issue #31\r\n\r\n* Globals \\(and zip groups\\) that are being expanded upon to make maultiple shots are now displayed in the axes tab.\r\n* You can reorder the globals/zip groups which will now change the order in which they are expanded over.\r\n* Expansion occurs over globals as if the hierarchy represented nested for loops in Python \\(so you iterate over all values in the most indented \\(lowest\\) level first for a fixed value in each higher level, etc.\\)\r\n* You can now shuffle specific globals only.\r\n* The global shuffle is now a tri-state checkbox and will toggle shuffle on/off for all globals/zip groups\r\n* The global shuffle also shuffles the set of shots \\(as before\\) if all globals/zip groups are set to shuffle \\(which ensures that you don't get any grouping by the higher levels as you would only be shuffling the order of values within a single global/zip group\\)\r\n* The axes tab is saved in the runmanager configuration file \\(it doesn't make sense to save it in the globals file as the axes tab may show the expansions that span multiple h5 files if you are drawing globals from multiple files\\)\r\n\r\n\u200c\r\n\r\nPlease leave me to merge once approved so that I can close the branch in my repo\r\n\r\nUpdate \\(image!\\):\r\n\r\n![runmanager\\_axes.png](https://bitbucket.org/repo/6g5bg5/images/1107094758-runmanager\\_axes.png 'runmanager\\_axes.png')", "markup": "markdown", "html": "<p>Implemented the axes tab. Fixes issue <a href=\"#!/labscript_suite/runmanager/issues/31/axes-tab-control-over-loop-order-of\" rel=\"nofollow\" title=\"Axes tab - control over loop order of parameter space and shuffling of individual axes\" class=\"ap-connect-link\"><s>#31</s></a></p>\n<ul>\n<li>Globals (and zip groups) that are being expanded upon to make maultiple shots are now displayed in the axes tab.</li>\n<li>You can reorder the globals/zip groups which will now change the order in which they are expanded over.</li>\n<li>Expansion occurs over globals as if the hierarchy represented nested for loops in Python (so you iterate over all values in the most indented (lowest) level first for a fixed value in each higher level, etc.)</li>\n<li>You can now shuffle specific globals only.</li>\n<li>The global shuffle is now a tri-state checkbox and will toggle shuffle on/off for all globals/zip groups</li>\n<li>The global shuffle also shuffles the set of shots (as before) if all globals/zip groups are set to shuffle (which ensures that you don't get any grouping by the higher levels as you would only be shuffling the order of values within a single global/zip group)</li>\n<li>The axes tab is saved in the runmanager configuration file (it doesn't make sense to save it in the globals file as the axes tab may show the expansions that span multiple h5 files if you are drawing globals from multiple files)</li>\n</ul>\n<p>\u200c</p>\n<p>Please leave me to merge once approved so that I can close the branch in my repo</p>\n<p>Update (image!):</p>\n<p><img alt=\"runmanager_axes.png\" src=\"data/bitbucket.org/repo/6g5bg5/images/1107094758-runmanager95axes.png\" title=\"runmanager_axes.png\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "56a7da0a468c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/runmanager/commit/56a7da0a468c"}, "html": {"href": "#!/pstarkey/runmanager/commits/56a7da0a468c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/runmanager"}, "html": {"href": "#!/pstarkey/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{2f11f5fd-c84d-42bd-a265-eda8b5bef98b}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "pstarkey/runmanager", "uuid": "{2f11f5fd-c84d-42bd-a265-eda8b5bef98b}"}, "branch": {"name": "issue31-axes-tab"}}, "comment_count": 8, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-02-26T22:34:22.466918+00:00", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "merge_commit": {"hash": "7f5031fbb4c9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/7f5031fbb4c9.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/7f5031fbb4c9"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This pull request allows new batch compilers to be written, allowing other APIs other than labscript to be used. This allows runmanager to become a generic parameter \\(and parameter space\\) manager, which could be useful for many things including handling parameter space scans for computational simulations.\r\n\r\nThis requires labscript pull request 27, otherwise known as labscript v2.4.0\r\n\r\nThere are a bunch of changes \\(outlined in the commit messages below\\). Feel free to ask me questions!\r\n\r\nPlease let me do the merging once approved, so the branch gets closed properly!\r\n\r\n* Created new branch labscript-agnostic\r\n* Generalised batch\\_compiler so that it can be subclassed to compiler experiments using something other than labscript.\r\n\r\n    This also involved:\r\n\r\n\r\n\r\n    * creating a new batch compiler for labscript based on the generalised class\r\n    * Moving the globals loading code from labscript to runmanager batch compiler \\(so that we don't have to duplicate it inside labscript alternatives\\)\r\n    * Adding version checks for the batch compiler script \\(now needs labscript 2.4 due to the above point\\)\r\n    \r\n        There are some additional benefits to this, for instance the `__builtins__` dict is saved just before invoking the script, which means that any modules that modify `__builtins__` on reload will not have those modifications removed. We also now hold the module watcher and kill lock during cleanup \\(which I don't think was the case previously unless I don't properly understand when `finally` is executed!\\)\r\n\r\n    \r\n    \r\n* Cleaned up the new batch compiler scripts so that we can instantiate the processors without needing it to be launched as a zprocess subprocess.\r\n\r\n    This allows someone to use the BatchProcessor class in their own script to compile labscript \\(or other\\) scripts while automatically gaining access to the machinery for loading globals. Ultimately we could reintroduce a command line utility to take a labscript file and globals file and compile a shot \\(like we used to have\\).\r\n\r\n\r\n\r\n    As an example of the above, consider doing: from runmanage.batch\\_compiler\\_labscript import BatchProcessor batch\\_processor = BatchProcessor\\(\\) batch\\_processor.compile\\(labscript\\_file, globals\\_file\\)\r\n\r\n\r\n* modified the labscript batch compiler to use the new kwargs in labscript for disabling loading/cleanup of globals from HDF5 file as this is now handled by runmanager.\r\n* Modified runmanager to use a new \\(optional\\) labconfig parameter \\[runmanager\\\\batch\\_compiler\\_script\\] as the path to use when launching the batch compiler.\r\n\r\n    This allows custom batch\\_compilers to be used that invoke something other than labscript, making runmanager a generic parameter \\(and parameter space\\) manager that could be applied to a variety of situations \\(such as automating scanning a parameter space in a computational simulation\\).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/18/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/pstarkey/runmanager:6e44dc101acd%0D895af9405e51?from_pullrequest_id=18"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/18/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/18"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/pstarkey/runmanager:6e44dc101acd%0D895af9405e51?from_pullrequest_id=18"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/18/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/18/statuses_page=1.json"}}, "title": "Allow APIs other than labscript to be invoked by runmanager", "close_source_branch": true, "type": "pullrequest", "id": 18, "destination": {"commit": {"hash": "895af9405e51", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/895af9405e51.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/895af9405e51"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2018-03-13T05:15:46.738344+00:00", "summary": {"raw": "This pull request allows new batch compilers to be written, allowing other APIs other than labscript to be used. This allows runmanager to become a generic parameter \\(and parameter space\\) manager, which could be useful for many things including handling parameter space scans for computational simulations.\r\n\r\nThis requires labscript pull request 27, otherwise known as labscript v2.4.0\r\n\r\nThere are a bunch of changes \\(outlined in the commit messages below\\). Feel free to ask me questions!\r\n\r\nPlease let me do the merging once approved, so the branch gets closed properly!\r\n\r\n* Created new branch labscript-agnostic\r\n* Generalised batch\\_compiler so that it can be subclassed to compiler experiments using something other than labscript.\r\n\r\n    This also involved:\r\n\r\n\r\n\r\n    * creating a new batch compiler for labscript based on the generalised class\r\n    * Moving the globals loading code from labscript to runmanager batch compiler \\(so that we don't have to duplicate it inside labscript alternatives\\)\r\n    * Adding version checks for the batch compiler script \\(now needs labscript 2.4 due to the above point\\)\r\n    \r\n        There are some additional benefits to this, for instance the `__builtins__` dict is saved just before invoking the script, which means that any modules that modify `__builtins__` on reload will not have those modifications removed. We also now hold the module watcher and kill lock during cleanup \\(which I don't think was the case previously unless I don't properly understand when `finally` is executed!\\)\r\n\r\n    \r\n    \r\n* Cleaned up the new batch compiler scripts so that we can instantiate the processors without needing it to be launched as a zprocess subprocess.\r\n\r\n    This allows someone to use the BatchProcessor class in their own script to compile labscript \\(or other\\) scripts while automatically gaining access to the machinery for loading globals. Ultimately we could reintroduce a command line utility to take a labscript file and globals file and compile a shot \\(like we used to have\\).\r\n\r\n\r\n\r\n    As an example of the above, consider doing: from runmanage.batch\\_compiler\\_labscript import BatchProcessor batch\\_processor = BatchProcessor\\(\\) batch\\_processor.compile\\(labscript\\_file, globals\\_file\\)\r\n\r\n\r\n* modified the labscript batch compiler to use the new kwargs in labscript for disabling loading/cleanup of globals from HDF5 file as this is now handled by runmanager.\r\n* Modified runmanager to use a new \\(optional\\) labconfig parameter \\[runmanager\\\\batch\\_compiler\\_script\\] as the path to use when launching the batch compiler.\r\n\r\n    This allows custom batch\\_compilers to be used that invoke something other than labscript, making runmanager a generic parameter \\(and parameter space\\) manager that could be applied to a variety of situations \\(such as automating scanning a parameter space in a computational simulation\\).", "markup": "markdown", "html": "<p>This pull request allows new batch compilers to be written, allowing other APIs other than labscript to be used. This allows runmanager to become a generic parameter (and parameter space) manager, which could be useful for many things including handling parameter space scans for computational simulations.</p>\n<p>This requires labscript pull request 27, otherwise known as labscript v2.4.0</p>\n<p>There are a bunch of changes (outlined in the commit messages below). Feel free to ask me questions!</p>\n<p>Please let me do the merging once approved, so the branch gets closed properly!</p>\n<ul>\n<li>Created new branch labscript-agnostic</li>\n<li>\n<p>Generalised batch_compiler so that it can be subclassed to compiler experiments using something other than labscript.</p>\n<p>This also involved:</p>\n<ul>\n<li>creating a new batch compiler for labscript based on the generalised class</li>\n<li>Moving the globals loading code from labscript to runmanager batch compiler (so that we don't have to duplicate it inside labscript alternatives)</li>\n<li>\n<p>Adding version checks for the batch compiler script (now needs labscript 2.4 due to the above point)</p>\n<p>There are some additional benefits to this, for instance the <code>__builtins__</code> dict is saved just before invoking the script, which means that any modules that modify <code>__builtins__</code> on reload will not have those modifications removed. We also now hold the module watcher and kill lock during cleanup (which I don't think was the case previously unless I don't properly understand when <code>finally</code> is executed!)</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Cleaned up the new batch compiler scripts so that we can instantiate the processors without needing it to be launched as a zprocess subprocess.</p>\n<p>This allows someone to use the BatchProcessor class in their own script to compile labscript (or other) scripts while automatically gaining access to the machinery for loading globals. Ultimately we could reintroduce a command line utility to take a labscript file and globals file and compile a shot (like we used to have).</p>\n<p>As an example of the above, consider doing: from runmanage.batch_compiler_labscript import BatchProcessor batch_processor = BatchProcessor() batch_processor.compile(labscript_file, globals_file)</p>\n</li>\n<li>\n<p>modified the labscript batch compiler to use the new kwargs in labscript for disabling loading/cleanup of globals from HDF5 file as this is now handled by runmanager.</p>\n</li>\n<li>\n<p>Modified runmanager to use a new (optional) labconfig parameter [runmanager\\batch_compiler_script] as the path to use when launching the batch compiler.</p>\n<p>This allows custom batch_compilers to be used that invoke something other than labscript, making runmanager a generic parameter (and parameter space) manager that could be applied to a variety of situations (such as automating scanning a parameter space in a computational simulation).</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "6e44dc101acd", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/runmanager/commit/6e44dc101acd"}, "html": {"href": "#!/pstarkey/runmanager/commits/6e44dc101acd"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/runmanager"}, "html": {"href": "#!/pstarkey/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{2f11f5fd-c84d-42bd-a265-eda8b5bef98b}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "pstarkey/runmanager", "uuid": "{2f11f5fd-c84d-42bd-a265-eda8b5bef98b}"}, "branch": {"name": "labscript-agnostic"}}, "comment_count": 8, "state": "OPEN", "task_count": 0, "reason": "", "updated_on": "2020-01-28T21:45:19.894571+00:00", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "merge_commit": null, "closed_by": null}, {"description": "Fixed async compile error handling for python 3 and python 2 with unicode literals.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/19/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:96ee800fb6be%0D1280b7eb55cb?from_pullrequest_id=19"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/19/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/19.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/19/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/19/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/19"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/19/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:96ee800fb6be%0D1280b7eb55cb?from_pullrequest_id=19"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/19/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/19/statuses_page=1.json"}}, "title": "Fixed BLACS issue #42", "close_source_branch": false, "type": "pullrequest", "id": 19, "destination": {"commit": {"hash": "1280b7eb55cb", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/1280b7eb55cb.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/1280b7eb55cb"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2018-04-26T23:18:51.767390+00:00", "summary": {"raw": "Fixed async compile error handling for python 3 and python 2 with unicode literals.", "markup": "markdown", "html": "<p>Fixed async compile error handling for python 3 and python 2 with unicode literals.</p>", "type": "rendered"}, "source": {"commit": {"hash": "96ee800fb6be", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager/commit/96ee800fb6be"}, "html": {"href": "#!/PhyNerd/runmanager/commits/96ee800fb6be"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/runmanager"}, "html": {"href": "#!/PhyNerd/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "PhyNerd/runmanager", "uuid": "{c22a4e6f-3edf-4cf1-ba9b-d1248f2df52c}"}, "branch": {"name": "default"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-04-26T23:21:13.148436+00:00", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "merge_commit": {"hash": "96ee800fb6be", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/96ee800fb6be.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/96ee800fb6be"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Fix issue #56 for Python 2 by telling eval() not to use the __future__ imports.\r\nPython 3 fix will have to wait for a pull request submitted to h5py", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/20/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:09037a6d6075%0D96ee800fb6be?from_pullrequest_id=20"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/20/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/20.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/20/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/20/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/20"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/20/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:09037a6d6075%0D96ee800fb6be?from_pullrequest_id=20"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/20/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/20/statuses_page=1.json"}}, "title": "Fix issue #56 for Python 2", "close_source_branch": true, "type": "pullrequest", "id": 20, "destination": {"commit": {"hash": "96ee800fb6be", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/96ee800fb6be.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/96ee800fb6be"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2018-05-10T05:40:45.236012+00:00", "summary": {"raw": "Fix issue #56 for Python 2 by telling eval() not to use the __future__ imports.\r\nPython 3 fix will have to wait for a pull request submitted to h5py", "markup": "markdown", "html": "<p>Fix issue <a href=\"#!/labscript_suite/runmanager/issues/56/globals-can-no-longer-be-tuples-of-strings\" rel=\"nofollow\" title=\"Globals can no longer be tuples of strings\" class=\"ap-connect-link\"><s>#56</s></a> for Python 2 by telling eval() not to use the <strong>future</strong> imports.\nPython 3 fix will have to wait for a pull request submitted to h5py</p>", "type": "rendered"}, "source": {"commit": {"hash": "2c49ec229769", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/2c49ec229769"}, "html": {"href": "#!/cbillington/runmanager/commits/2c49ec229769"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "bugfix"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-05-10T06:54:35.506740+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "09037a6d6075", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/09037a6d6075.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/09037a6d6075"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/21/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:b77c04761d98%0D09037a6d6075?from_pullrequest_id=21"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/21/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/21.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/21/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/21/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/21"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/21/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:b77c04761d98%0D09037a6d6075?from_pullrequest_id=21"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/21/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/21/statuses_page=1.json"}}, "title": "FIx issue #58", "close_source_branch": true, "type": "pullrequest", "id": 21, "destination": {"commit": {"hash": "09037a6d6075", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/09037a6d6075.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/09037a6d6075"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2018-05-10T06:56:16.271500+00:00", "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "source": {"commit": {"hash": "4c2770c32c16", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/4c2770c32c16"}, "html": {"href": "#!/cbillington/runmanager/commits/4c2770c32c16"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "bugfix"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-05-10T07:43:37.570790+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "b77c04761d98", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/b77c04761d98.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/b77c04761d98"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Fixes bug where each QtCore.QEvent.KeyPress and QtCore.QEvent.KeyRelease event was handled twice.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/22/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:73ade628203a%0Db77c04761d98?from_pullrequest_id=22"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/22/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/22.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/22/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/22/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/22"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/22/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:73ade628203a%0Db77c04761d98?from_pullrequest_id=22"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/22/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/22/statuses_page=1.json"}}, "title": "Resolves issue #59", "close_source_branch": true, "type": "pullrequest", "id": 22, "destination": {"commit": {"hash": "b77c04761d98", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/b77c04761d98.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/b77c04761d98"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2018-05-30T07:47:58.433294+00:00", "summary": {"raw": "Fixes bug where each QtCore.QEvent.KeyPress and QtCore.QEvent.KeyRelease event was handled twice.", "markup": "markdown", "html": "<p>Fixes bug where each QtCore.QEvent.KeyPress and QtCore.QEvent.KeyRelease event was handled twice.</p>", "type": "rendered"}, "source": {"commit": {"hash": "52b797b6566c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/runmanager/commit/52b797b6566c"}, "html": {"href": "#!/monashspinor/runmanager/commits/52b797b6566c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/runmanager"}, "html": {"href": "#!/monashspinor/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4daf97df-bd70-4449-afe3-3eaa8f7b4f88}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "monashspinor/runmanager", "uuid": "{4daf97df-bd70-4449-afe3-3eaa8f7b4f88}"}, "branch": {"name": "keypress_bugfix"}}, "comment_count": 6, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-05-30T10:11:06.786793+00:00", "author": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "merge_commit": {"hash": "73ade628203a", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/73ade628203a.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/73ade628203a"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Use QShortcuts for keyboard shortcuts, resolving issue #59", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/23/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:e5e96dc53619%0D2e28d04ef4e5?from_pullrequest_id=23"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/23/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/23.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/23/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/23/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/23"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/23/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:e5e96dc53619%0D2e28d04ef4e5?from_pullrequest_id=23"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/23/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/23/statuses_page=1.json"}}, "title": "Use QShortcuts for keyboard shortcuts, resolving issue #59", "close_source_branch": true, "type": "pullrequest", "id": 23, "destination": {"commit": {"hash": "2e28d04ef4e5", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/2e28d04ef4e5.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/2e28d04ef4e5"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2018-05-30T10:10:34.587803+00:00", "summary": {"raw": "Use QShortcuts for keyboard shortcuts, resolving issue #59", "markup": "markdown", "html": "<p>Use QShortcuts for keyboard shortcuts, resolving issue <a href=\"#!/labscript_suite/runmanager/issues/59/keypresses-are-registered-twice\" rel=\"nofollow\" title=\"Keypresses are registered twice\" class=\"ap-connect-link\"><s>#59</s></a></p>", "type": "rendered"}, "source": {"commit": {"hash": "28c71ebe663f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/28c71ebe663f"}, "html": {"href": "#!/cbillington/runmanager/commits/28c71ebe663f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "QShortcuts"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-05-30T11:50:59.364024+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "e5e96dc53619", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/e5e96dc53619.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/e5e96dc53619"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Fixed bug where compilation of single shot (aka connection table recompilation) using a globals file that contained globals of lists/arrays resulted in a confusing error.\n\nPreviously, the error listed the names of every global group provided that group contains more than one global. This is because we changed the return result of `evaluate_globals` without updating this code.\n\nNow we return the names of globals where the \"expansion\" column is set. I think this might ignore automatic zip groups, but that probably makes sense as you really only care about the globals that you need to edit, which would still be listed as 'outer' since we don't run the automatic zip group checking code in the API (in fact that code (`guess_expansion_modes`) only exists in the GUI part of runmanager, which means the API/GUI are not actually equivalent when compiling a sequence of shots. Not relevant here....but I'll log an issue about it anyway!)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/24/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:64befa11a8f4%0De5e96dc53619?from_pullrequest_id=24"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/24/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/24.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/24/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/24/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/24"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/24/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:64befa11a8f4%0De5e96dc53619?from_pullrequest_id=24"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/24/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/24/statuses_page=1.json"}}, "title": "Fixed bug where compilation of single shot (aka connection table recompilation) using a globals file that contained globals of lists/arrays resulted in a confusing error.", "close_source_branch": true, "type": "pullrequest", "id": 24, "destination": {"commit": {"hash": "e5e96dc53619", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/e5e96dc53619.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/e5e96dc53619"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2018-06-19T05:33:21.897426+00:00", "summary": {"raw": "Fixed bug where compilation of single shot (aka connection table recompilation) using a globals file that contained globals of lists/arrays resulted in a confusing error.\n\nPreviously, the error listed the names of every global group provided that group contains more than one global. This is because we changed the return result of `evaluate_globals` without updating this code.\n\nNow we return the names of globals where the \"expansion\" column is set. I think this might ignore automatic zip groups, but that probably makes sense as you really only care about the globals that you need to edit, which would still be listed as 'outer' since we don't run the automatic zip group checking code in the API (in fact that code (`guess_expansion_modes`) only exists in the GUI part of runmanager, which means the API/GUI are not actually equivalent when compiling a sequence of shots. Not relevant here....but I'll log an issue about it anyway!)", "markup": "markdown", "html": "<p>Fixed bug where compilation of single shot (aka connection table recompilation) using a globals file that contained globals of lists/arrays resulted in a confusing error.</p>\n<p>Previously, the error listed the names of every global group provided that group contains more than one global. This is because we changed the return result of <code>evaluate_globals</code> without updating this code.</p>\n<p>Now we return the names of globals where the \"expansion\" column is set. I think this might ignore automatic zip groups, but that probably makes sense as you really only care about the globals that you need to edit, which would still be listed as 'outer' since we don't run the automatic zip group checking code in the API (in fact that code (<code>guess_expansion_modes</code>) only exists in the GUI part of runmanager, which means the API/GUI are not actually equivalent when compiling a sequence of shots. Not relevant here....but I'll log an issue about it anyway!)</p>", "type": "rendered"}, "source": {"commit": {"hash": "f5b16f91816f", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/f5b16f91816f.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/f5b16f91816f"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "pstarkey/bugfix"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-06-19T05:42:25.252428+00:00", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "merge_commit": {"hash": "64befa11a8f4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/64befa11a8f4.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/64befa11a8f4"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "The namespace in which labscripts are compiled did not have a `__file__` attribute.\r\n\r\nThis prevented warning messages from printing correct files and line numbers. For example the deprecation warnings being discussed over at the `labscript_devices` pull request would display information as if the line being warned about were in `batch_compiler.py` instead of in the user's labscript.\r\n\r\nThis pull request fixes the problem by adding a `__file__` attribute. version-dependent encoding is copied from lyse, where we had the same trouble in the past.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/25/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:ade64c333f8b%0D64befa11a8f4?from_pullrequest_id=25"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/25/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/25.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/25/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/25/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/25"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/25/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:ade64c333f8b%0D64befa11a8f4?from_pullrequest_id=25"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/25/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/25/statuses_page=1.json"}}, "title": "Add `__file__` to compilation sandbox", "close_source_branch": true, "type": "pullrequest", "id": 25, "destination": {"commit": {"hash": "64befa11a8f4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/64befa11a8f4.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/64befa11a8f4"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2018-10-02T21:21:13.658138+00:00", "summary": {"raw": "The namespace in which labscripts are compiled did not have a `__file__` attribute.\r\n\r\nThis prevented warning messages from printing correct files and line numbers. For example the deprecation warnings being discussed over at the `labscript_devices` pull request would display information as if the line being warned about were in `batch_compiler.py` instead of in the user's labscript.\r\n\r\nThis pull request fixes the problem by adding a `__file__` attribute. version-dependent encoding is copied from lyse, where we had the same trouble in the past.", "markup": "markdown", "html": "<p>The namespace in which labscripts are compiled did not have a <code>__file__</code> attribute.</p>\n<p>This prevented warning messages from printing correct files and line numbers. For example the deprecation warnings being discussed over at the <code>labscript_devices</code> pull request would display information as if the line being warned about were in <code>batch_compiler.py</code> instead of in the user's labscript.</p>\n<p>This pull request fixes the problem by adding a <code>__file__</code> attribute. version-dependent encoding is copied from lyse, where we had the same trouble in the past.</p>", "type": "rendered"}, "source": {"commit": {"hash": "9301e164e19a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/9301e164e19a"}, "html": {"href": "#!/cbillington/runmanager/commits/9301e164e19a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "bugfix"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-10-03T14:44:46.566817+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "ade64c333f8b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/ade64c333f8b.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/ade64c333f8b"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Turn on `__future__` imports in the globals evaluation context.\r\nThis means unicode string literals and float division will apply to globals.\r\n\r\nUnicode strings in tuples no longer cause an issue as we have a workaround that allows them to be saved as numpy arrays of vlen unicode strings.\r\n\r\nHowever, without `unicode_literals` enabled in the context in which globals are evaluated, runmanager running in Python 2 will save arrays of bytestrings, which will not function well on Python 3.\r\n\r\nNow that saving tuples/lists of unicode strings is supported via the workaround (and soon by h5py itself, see pull request [here](https://github.com/h5py/h5py/pull/1032)), we should enable `unicode_literals` in the globals evaluation context.\r\n\r\nAlso, enabling float division is likely to be harmless, I don't expect anyone to be doing intentional integer division.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/26/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:51923e1afeb3%0Dade64c333f8b?from_pullrequest_id=26"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/26/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/26.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/26/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/26/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/26"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/26/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:51923e1afeb3%0Dade64c333f8b?from_pullrequest_id=26"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/26/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/26/statuses_page=1.json"}}, "title": "Turn on `__future__` imports in the globals evaluation context.", "close_source_branch": true, "type": "pullrequest", "id": 26, "destination": {"commit": {"hash": "ade64c333f8b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/ade64c333f8b.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/ade64c333f8b"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2018-11-01T01:33:59.210411+00:00", "summary": {"raw": "Turn on `__future__` imports in the globals evaluation context.\r\nThis means unicode string literals and float division will apply to globals.\r\n\r\nUnicode strings in tuples no longer cause an issue as we have a workaround that allows them to be saved as numpy arrays of vlen unicode strings.\r\n\r\nHowever, without `unicode_literals` enabled in the context in which globals are evaluated, runmanager running in Python 2 will save arrays of bytestrings, which will not function well on Python 3.\r\n\r\nNow that saving tuples/lists of unicode strings is supported via the workaround (and soon by h5py itself, see pull request [here](https://github.com/h5py/h5py/pull/1032)), we should enable `unicode_literals` in the globals evaluation context.\r\n\r\nAlso, enabling float division is likely to be harmless, I don't expect anyone to be doing intentional integer division.", "markup": "markdown", "html": "<p>Turn on <code>__future__</code> imports in the globals evaluation context.\nThis means unicode string literals and float division will apply to globals.</p>\n<p>Unicode strings in tuples no longer cause an issue as we have a workaround that allows them to be saved as numpy arrays of vlen unicode strings.</p>\n<p>However, without <code>unicode_literals</code> enabled in the context in which globals are evaluated, runmanager running in Python 2 will save arrays of bytestrings, which will not function well on Python 3.</p>\n<p>Now that saving tuples/lists of unicode strings is supported via the workaround (and soon by h5py itself, see pull request <a data-is-external-link=\"true\" href=\"https://github.com/h5py/h5py/pull/1032\" rel=\"nofollow\">here</a>), we should enable <code>unicode_literals</code> in the globals evaluation context.</p>\n<p>Also, enabling float division is likely to be harmless, I don't expect anyone to be doing intentional integer division.</p>", "type": "rendered"}, "source": {"commit": {"hash": "ad11cf1bbb2b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/ad11cf1bbb2b"}, "html": {"href": "#!/cbillington/runmanager/commits/ad11cf1bbb2b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "future_globals"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-11-05T18:30:26.937987+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "51923e1afeb3", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/51923e1afeb3.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/51923e1afeb3"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Use new labscript_utils submodule to display a splash screen during startup.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/27/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:e4e664f44768%0D222f5553549d?from_pullrequest_id=27"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/27/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/27.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/27/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/27/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/27"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/27/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:e4e664f44768%0D222f5553549d?from_pullrequest_id=27"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/27/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/27/statuses_page=1.json"}}, "title": "Splash screen", "close_source_branch": true, "type": "pullrequest", "id": 27, "destination": {"commit": {"hash": "222f5553549d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/222f5553549d.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/222f5553549d"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2019-01-29T00:37:19.479990+00:00", "summary": {"raw": "Use new labscript_utils submodule to display a splash screen during startup.", "markup": "markdown", "html": "<p>Use new labscript_utils submodule to display a splash screen during startup.</p>", "type": "rendered"}, "source": {"commit": {"hash": "86b23c767cea", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/86b23c767cea"}, "html": {"href": "#!/cbillington/runmanager/commits/86b23c767cea"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "splash"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-02-04T20:01:55.956039+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "e4e664f44768", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/e4e664f44768.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/e4e664f44768"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Update to use new zprocess functionality as wrapped by labscipt_utils.ls_zprocess.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/28/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:8c5efc656535%0De4e664f44768?from_pullrequest_id=28"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/28/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/28.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/28/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/28/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/28"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/28/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:8c5efc656535%0De4e664f44768?from_pullrequest_id=28"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/28/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/28/statuses_page=1.json"}}, "title": "Update to use new zprocess functionality", "close_source_branch": true, "type": "pullrequest", "id": 28, "destination": {"commit": {"hash": "e4e664f44768", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/e4e664f44768.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/e4e664f44768"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2019-02-07T04:17:32.200941+00:00", "summary": {"raw": "Update to use new zprocess functionality as wrapped by labscipt_utils.ls_zprocess.", "markup": "markdown", "html": "<p>Update to use new zprocess functionality as wrapped by labscipt_utils.ls_zprocess.</p>", "type": "rendered"}, "source": {"commit": {"hash": "df0dee77c3ea", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/df0dee77c3ea"}, "html": {"href": "#!/cbillington/runmanager/commits/df0dee77c3ea"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "zprocess_changes"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-02-22T16:00:10.250001+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "8c5efc656535", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/8c5efc656535.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/8c5efc656535"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "When making a shot file, create all parent directories if they don't exist,\r\nand do not error if they do already exist.\r\n\r\nThis is relevant when BLACS is making connection table files after the path has to the h5 file has been changed in labconfig and its parent directories do not exist yet. This comes up if using BLACS to initially compile a connection table.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/29/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/cbillington/runmanager:3e2ad832e774%0D8c5efc656535?from_pullrequest_id=29"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/29/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/29.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/29/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/29/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/29"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/29/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/cbillington/runmanager:3e2ad832e774%0D8c5efc656535?from_pullrequest_id=29"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/29/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/29/statuses_page=1.json"}}, "title": "Create non-existing directories", "close_source_branch": false, "type": "pullrequest", "id": 29, "destination": {"commit": {"hash": "8c5efc656535", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/8c5efc656535.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/8c5efc656535"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2019-03-13T20:12:44.187369+00:00", "summary": {"raw": "When making a shot file, create all parent directories if they don't exist,\r\nand do not error if they do already exist.\r\n\r\nThis is relevant when BLACS is making connection table files after the path has to the h5 file has been changed in labconfig and its parent directories do not exist yet. This comes up if using BLACS to initially compile a connection table.", "markup": "markdown", "html": "<p>When making a shot file, create all parent directories if they don't exist,\nand do not error if they do already exist.</p>\n<p>This is relevant when BLACS is making connection table files after the path has to the h5 file has been changed in labconfig and its parent directories do not exist yet. This comes up if using BLACS to initially compile a connection table.</p>", "type": "rendered"}, "source": {"commit": {"hash": "3e2ad832e774", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/3e2ad832e774"}, "html": {"href": "#!/cbillington/runmanager/commits/3e2ad832e774"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "mkdirs"}}, "comment_count": 2, "state": "DECLINED", "task_count": 0, "reason": "superseded by #30", "updated_on": "2019-03-14T23:05:04.951325+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": null, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Add the concept of a sequence_index to runmanager.\r\n\r\nThe sequence index is an incrementing integer starting from zero each day for\r\neach experiment script. It is stored on disk in\r\n<experiment_shot_storage>/<script_name>/.next_sequence_index and accessed using\r\nzlock so that it may be incremented atomically.\r\n\r\nThe sequence index may be used in the output folder format, which defaults to:\r\n`output_folder_format = %%Y/%%m/%%d/{sequence_index:05d}`, resulting in output\r\nfolders like:\r\n<shared_drive>/Experiments/<experiment_name>/<script_name>/2019/03/14/00006\r\n\r\nThe format string will be fed first to `strftime()`, then a call to `.format()`\r\nwith `sequence_index` and `sequence_timestamp` kwargs, where `sequence_timestamp` is\r\nthe time in format `'%Y%m%dT%H%M%S'`, which is the existing format used in\r\n`sequence_id`s.\r\n\r\nAllow the shot filename to also have its format configured, such as:\r\n`filename_prefix_format = %%Y-%%m-%%d_{sequence_index:05d}_{script_basename}`,\r\nresulting in shot filenames like:\r\n`2019-03-14_00006_myscript_1.h5`\r\n\r\nThis is similarly passed through `strftime` and then `.format` with `sequence_index`,\r\n`sequence_timestamp`, and `script_basename` kwargs.\r\n\r\n`script_basename` is not allowed in the `output_folder_format` format string though, since we've for the moment hard-coded that the script basename is at the top level of the subfolder hierarchy under `experiment_shot_storage`, and it is more difficult to change that without breaking existing setups - I also don't really want to change it, despite some downsides, at the moment I think the script name at the top level is almost always what you want.\r\n\r\nThe pre-set `output_folder_format` in newly installed labconfigs will be:\r\n`%%Y/%%m/%%d/{sequence_index:05d}`\r\nwhich will also be the default if the setting is not present in the labconfig file. Since this setting already exists, this change won't break existing setups, which have it set already.\r\n\r\nThe pre-set `filename_prefix_format` in newly installed labconfigs will be:\r\n`%%Y-%%m-%%d_{sequence_index:05d}_{script_basename}`\r\nbut if not present in labconfig files, `{sequence_timestamp}_{script_basename}`\r\nwill be used, to preserve the present behaviour of using the sequence id. This is necessary to not modify existing setups since the setting did not exist already.\r\n\r\nFor compatibility with lyse (which uses it to index the dataframe), the `sequence_id` is still saved to the h5 file, but other attributes are saved too. These are:\r\n\r\n'script_basename': the basename of the script, i.e. myscript\r\n\r\n\r\n'sequence_date': a string of the date only, i.e. 2019-03-14\r\n\r\n\r\n'sequence_index': the sequence_index as an integer,\r\n\r\n\r\n'sequence_id': the sequence_id, i.e. 20190314183955_myscript\r\n\r\nThe idea is that `script_basename`, `sequence_date` and `sequence_index` become an\r\nalternative to `sequence_id` as a way of uniquely identifying a sequence. lyse\r\nalready has a labconfig setting where it uses the `sequence_index` if present to\r\nindex the dataframe (added for the  sake of Spielman fork shots which already\r\nhave `sequence_index`), but it has the issue that sequences cannot be fully uniquely\r\ndetermined by that alone since the date and script name are needed too. So\r\nthe date and script name are added to the attrs for this purpose, but `sequence_id`\r\nis retained for now, perhaps indefinitely since it also provides a timestamp for when the sequence was compiled. It is still useful even if it is not used in filenames or by lyse.\r\n\r\nRefactored runmanager functions to achieve this. There is now a fairly monolithic function\r\nnew_sequence_details(), which returns the attrs, folder and filepath prefix for\r\nthe given labconfig settings and current time. It's all in one function because\r\nthe different pieces all use timestamps, and so to avoid races it either has to be\r\na single function call or the caller would need to carry around a datetime object.\r\nSince it is not too complicated I made it a single function call, though the callers\r\nare often ignoring one or more of its return values.\r\n\r\nRemoved generate_sequence_id, since the functions that accept a sequence_id\r\nnow accept the sequence_attrs dict instead (one entry of which is the sequence_id).\r\nThis and the modifying of other function call signatures is a backward incompatible\r\nchange in the sense of the API that runmanager exposes, but is backward-compatible\r\nwith how other labscript programs use the runmanager API, i.e. BLACS. So I think\r\nthis is acceptable - code using the runmanager API directly may need to change.\r\nWe could do a major version bump to indicate this.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/30/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:e359aed6f4a1%0D56dc84f4c750?from_pullrequest_id=30"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/30/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/30.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/30/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/30/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/30"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/30/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:e359aed6f4a1%0D56dc84f4c750?from_pullrequest_id=30"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/30/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/30/statuses_page=1.json"}}, "title": "Add the concept of a sequence_index to runmanager.", "close_source_branch": true, "type": "pullrequest", "id": 30, "destination": {"commit": {"hash": "56dc84f4c750", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/56dc84f4c750.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/56dc84f4c750"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2019-03-14T23:04:28.741209+00:00", "summary": {"raw": "Add the concept of a sequence_index to runmanager.\r\n\r\nThe sequence index is an incrementing integer starting from zero each day for\r\neach experiment script. It is stored on disk in\r\n<experiment_shot_storage>/<script_name>/.next_sequence_index and accessed using\r\nzlock so that it may be incremented atomically.\r\n\r\nThe sequence index may be used in the output folder format, which defaults to:\r\n`output_folder_format = %%Y/%%m/%%d/{sequence_index:05d}`, resulting in output\r\nfolders like:\r\n<shared_drive>/Experiments/<experiment_name>/<script_name>/2019/03/14/00006\r\n\r\nThe format string will be fed first to `strftime()`, then a call to `.format()`\r\nwith `sequence_index` and `sequence_timestamp` kwargs, where `sequence_timestamp` is\r\nthe time in format `'%Y%m%dT%H%M%S'`, which is the existing format used in\r\n`sequence_id`s.\r\n\r\nAllow the shot filename to also have its format configured, such as:\r\n`filename_prefix_format = %%Y-%%m-%%d_{sequence_index:05d}_{script_basename}`,\r\nresulting in shot filenames like:\r\n`2019-03-14_00006_myscript_1.h5`\r\n\r\nThis is similarly passed through `strftime` and then `.format` with `sequence_index`,\r\n`sequence_timestamp`, and `script_basename` kwargs.\r\n\r\n`script_basename` is not allowed in the `output_folder_format` format string though, since we've for the moment hard-coded that the script basename is at the top level of the subfolder hierarchy under `experiment_shot_storage`, and it is more difficult to change that without breaking existing setups - I also don't really want to change it, despite some downsides, at the moment I think the script name at the top level is almost always what you want.\r\n\r\nThe pre-set `output_folder_format` in newly installed labconfigs will be:\r\n`%%Y/%%m/%%d/{sequence_index:05d}`\r\nwhich will also be the default if the setting is not present in the labconfig file. Since this setting already exists, this change won't break existing setups, which have it set already.\r\n\r\nThe pre-set `filename_prefix_format` in newly installed labconfigs will be:\r\n`%%Y-%%m-%%d_{sequence_index:05d}_{script_basename}`\r\nbut if not present in labconfig files, `{sequence_timestamp}_{script_basename}`\r\nwill be used, to preserve the present behaviour of using the sequence id. This is necessary to not modify existing setups since the setting did not exist already.\r\n\r\nFor compatibility with lyse (which uses it to index the dataframe), the `sequence_id` is still saved to the h5 file, but other attributes are saved too. These are:\r\n\r\n'script_basename': the basename of the script, i.e. myscript\r\n\r\n\r\n'sequence_date': a string of the date only, i.e. 2019-03-14\r\n\r\n\r\n'sequence_index': the sequence_index as an integer,\r\n\r\n\r\n'sequence_id': the sequence_id, i.e. 20190314183955_myscript\r\n\r\nThe idea is that `script_basename`, `sequence_date` and `sequence_index` become an\r\nalternative to `sequence_id` as a way of uniquely identifying a sequence. lyse\r\nalready has a labconfig setting where it uses the `sequence_index` if present to\r\nindex the dataframe (added for the  sake of Spielman fork shots which already\r\nhave `sequence_index`), but it has the issue that sequences cannot be fully uniquely\r\ndetermined by that alone since the date and script name are needed too. So\r\nthe date and script name are added to the attrs for this purpose, but `sequence_id`\r\nis retained for now, perhaps indefinitely since it also provides a timestamp for when the sequence was compiled. It is still useful even if it is not used in filenames or by lyse.\r\n\r\nRefactored runmanager functions to achieve this. There is now a fairly monolithic function\r\nnew_sequence_details(), which returns the attrs, folder and filepath prefix for\r\nthe given labconfig settings and current time. It's all in one function because\r\nthe different pieces all use timestamps, and so to avoid races it either has to be\r\na single function call or the caller would need to carry around a datetime object.\r\nSince it is not too complicated I made it a single function call, though the callers\r\nare often ignoring one or more of its return values.\r\n\r\nRemoved generate_sequence_id, since the functions that accept a sequence_id\r\nnow accept the sequence_attrs dict instead (one entry of which is the sequence_id).\r\nThis and the modifying of other function call signatures is a backward incompatible\r\nchange in the sense of the API that runmanager exposes, but is backward-compatible\r\nwith how other labscript programs use the runmanager API, i.e. BLACS. So I think\r\nthis is acceptable - code using the runmanager API directly may need to change.\r\nWe could do a major version bump to indicate this.", "markup": "markdown", "html": "<p>Add the concept of a sequence_index to runmanager.</p>\n<p>The sequence index is an incrementing integer starting from zero each day for\neach experiment script. It is stored on disk in\n&lt;experiment_shot_storage&gt;/&lt;script_name&gt;/.next_sequence_index and accessed using\nzlock so that it may be incremented atomically.</p>\n<p>The sequence index may be used in the output folder format, which defaults to:\n<code>output_folder_format = %%Y/%%m/%%d/{sequence_index:05d}</code>, resulting in output\nfolders like:\n&lt;shared_drive&gt;/Experiments/&lt;experiment_name&gt;/&lt;script_name&gt;/2019/03/14/00006</p>\n<p>The format string will be fed first to <code>strftime()</code>, then a call to <code>.format()</code>\nwith <code>sequence_index</code> and <code>sequence_timestamp</code> kwargs, where <code>sequence_timestamp</code> is\nthe time in format <code>'%Y%m%dT%H%M%S'</code>, which is the existing format used in\n<code>sequence_id</code>s.</p>\n<p>Allow the shot filename to also have its format configured, such as:\n<code>filename_prefix_format = %%Y-%%m-%%d_{sequence_index:05d}_{script_basename}</code>,\nresulting in shot filenames like:\n<code>2019-03-14_00006_myscript_1.h5</code></p>\n<p>This is similarly passed through <code>strftime</code> and then <code>.format</code> with <code>sequence_index</code>,\n<code>sequence_timestamp</code>, and <code>script_basename</code> kwargs.</p>\n<p><code>script_basename</code> is not allowed in the <code>output_folder_format</code> format string though, since we've for the moment hard-coded that the script basename is at the top level of the subfolder hierarchy under <code>experiment_shot_storage</code>, and it is more difficult to change that without breaking existing setups - I also don't really want to change it, despite some downsides, at the moment I think the script name at the top level is almost always what you want.</p>\n<p>The pre-set <code>output_folder_format</code> in newly installed labconfigs will be:\n<code>%%Y/%%m/%%d/{sequence_index:05d}</code>\nwhich will also be the default if the setting is not present in the labconfig file. Since this setting already exists, this change won't break existing setups, which have it set already.</p>\n<p>The pre-set <code>filename_prefix_format</code> in newly installed labconfigs will be:\n<code>%%Y-%%m-%%d_{sequence_index:05d}_{script_basename}</code>\nbut if not present in labconfig files, <code>{sequence_timestamp}_{script_basename}</code>\nwill be used, to preserve the present behaviour of using the sequence id. This is necessary to not modify existing setups since the setting did not exist already.</p>\n<p>For compatibility with lyse (which uses it to index the dataframe), the <code>sequence_id</code> is still saved to the h5 file, but other attributes are saved too. These are:</p>\n<p>'script_basename': the basename of the script, i.e. myscript</p>\n<p>'sequence_date': a string of the date only, i.e. 2019-03-14</p>\n<p>'sequence_index': the sequence_index as an integer,</p>\n<p>'sequence_id': the sequence_id, i.e. 20190314183955_myscript</p>\n<p>The idea is that <code>script_basename</code>, <code>sequence_date</code> and <code>sequence_index</code> become an\nalternative to <code>sequence_id</code> as a way of uniquely identifying a sequence. lyse\nalready has a labconfig setting where it uses the <code>sequence_index</code> if present to\nindex the dataframe (added for the  sake of Spielman fork shots which already\nhave <code>sequence_index</code>), but it has the issue that sequences cannot be fully uniquely\ndetermined by that alone since the date and script name are needed too. So\nthe date and script name are added to the attrs for this purpose, but <code>sequence_id</code>\nis retained for now, perhaps indefinitely since it also provides a timestamp for when the sequence was compiled. It is still useful even if it is not used in filenames or by lyse.</p>\n<p>Refactored runmanager functions to achieve this. There is now a fairly monolithic function\nnew_sequence_details(), which returns the attrs, folder and filepath prefix for\nthe given labconfig settings and current time. It's all in one function because\nthe different pieces all use timestamps, and so to avoid races it either has to be\na single function call or the caller would need to carry around a datetime object.\nSince it is not too complicated I made it a single function call, though the callers\nare often ignoring one or more of its return values.</p>\n<p>Removed generate_sequence_id, since the functions that accept a sequence_id\nnow accept the sequence_attrs dict instead (one entry of which is the sequence_id).\nThis and the modifying of other function call signatures is a backward incompatible\nchange in the sense of the API that runmanager exposes, but is backward-compatible\nwith how other labscript programs use the runmanager API, i.e. BLACS. So I think\nthis is acceptable - code using the runmanager API directly may need to change.\nWe could do a major version bump to indicate this.</p>", "type": "rendered"}, "source": {"commit": {"hash": "69854d456aa9", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/69854d456aa9"}, "html": {"href": "#!/cbillington/runmanager/commits/69854d456aa9"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "sequence_index"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-05-22T06:53:27.278740+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "e359aed6f4a1", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/e359aed6f4a1.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/e359aed6f4a1"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Fix issue #65 - cannot create globals in latest Python releases.\r\n\r\nThe issue was caused by a change in the behaviour of the tokenize module\r\nwhen the source being tokenized does not end in a newline character.\r\n\r\nSee https://bugs.python.org/issue33899\r\n\r\nWill merge next Monday if no comments.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/31/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:7efcbe795931%0Dcf1091dc96c3?from_pullrequest_id=31"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/31/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/31.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/31/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/31/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/31"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/31/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:7efcbe795931%0Dcf1091dc96c3?from_pullrequest_id=31"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/31/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/31/statuses_page=1.json"}}, "title": "Fix issue #65 - cannot create globals in latest Python releases.", "close_source_branch": true, "type": "pullrequest", "id": 31, "destination": {"commit": {"hash": "cf1091dc96c3", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/cf1091dc96c3.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/cf1091dc96c3"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2019-03-20T19:27:15.106627+00:00", "summary": {"raw": "Fix issue #65 - cannot create globals in latest Python releases.\r\n\r\nThe issue was caused by a change in the behaviour of the tokenize module\r\nwhen the source being tokenized does not end in a newline character.\r\n\r\nSee https://bugs.python.org/issue33899\r\n\r\nWill merge next Monday if no comments.", "markup": "markdown", "html": "<p>Fix issue <a href=\"#!/labscript_suite/runmanager/issues/65/cannot-create-globals-in-recent-python\" rel=\"nofollow\" title=\"Cannot create globals in recent Python releases\" class=\"ap-connect-link\"><s>#65</s></a> - cannot create globals in latest Python releases.</p>\n<p>The issue was caused by a change in the behaviour of the tokenize module\nwhen the source being tokenized does not end in a newline character.</p>\n<p>See <a href=\"https://bugs.python.org/issue33899\" rel=\"nofollow\" class=\"ap-connect-link\">https://bugs.python.org/issue33899</a></p>\n<p>Will merge next Monday if no comments.</p>", "type": "rendered"}, "source": {"commit": {"hash": "ecbc226c7a61", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/ecbc226c7a61"}, "html": {"href": "#!/cbillington/runmanager/commits/ecbc226c7a61"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "bugfix"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-03-25T14:41:23.353784+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "7efcbe795931", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/7efcbe795931.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/7efcbe795931"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "When expanding globals, don't make axes for values that are exceptions.\r\n\r\nShould fix issue #64\r\n\r\nIn Python 2, the code didn't cause an uncaught exception because for some reason exception objects are iterable - with one element equal to their message. In Python 3 exception objects are not iterable.\r\n\r\nRather than reproduce the Python2 behaviour in (which was nonsensical anyway) in Python 3, I've just had runmanager skip making axes for globals that have evaluated to an exception. This appears to cause no problem, since the axes aren't used for anything if there are exceptions, as far as I can tell. But it might be good to test this on a more complex setup than just my setup. The change in behaviour is for Python 2 and Python 3.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/32/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:056026525408%0D7efcbe795931?from_pullrequest_id=32"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/32/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/32.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/32/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/32/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/32"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/32/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:056026525408%0D7efcbe795931?from_pullrequest_id=32"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/32/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/32/statuses_page=1.json"}}, "title": "Fix #64", "close_source_branch": true, "type": "pullrequest", "id": 32, "destination": {"commit": {"hash": "7efcbe795931", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/7efcbe795931.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/7efcbe795931"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2019-03-20T20:29:54.295511+00:00", "summary": {"raw": "When expanding globals, don't make axes for values that are exceptions.\r\n\r\nShould fix issue #64\r\n\r\nIn Python 2, the code didn't cause an uncaught exception because for some reason exception objects are iterable - with one element equal to their message. In Python 3 exception objects are not iterable.\r\n\r\nRather than reproduce the Python2 behaviour in (which was nonsensical anyway) in Python 3, I've just had runmanager skip making axes for globals that have evaluated to an exception. This appears to cause no problem, since the axes aren't used for anything if there are exceptions, as far as I can tell. But it might be good to test this on a more complex setup than just my setup. The change in behaviour is for Python 2 and Python 3.", "markup": "markdown", "html": "<p>When expanding globals, don't make axes for values that are exceptions.</p>\n<p>Should fix issue <a href=\"#!/labscript_suite/runmanager/issues/64/zip-argument-error-in-expand_globals\" rel=\"nofollow\" title=\"zip argument error in expand_globals\" class=\"ap-connect-link\"><s>#64</s></a></p>\n<p>In Python 2, the code didn't cause an uncaught exception because for some reason exception objects are iterable - with one element equal to their message. In Python 3 exception objects are not iterable.</p>\n<p>Rather than reproduce the Python2 behaviour in (which was nonsensical anyway) in Python 3, I've just had runmanager skip making axes for globals that have evaluated to an exception. This appears to cause no problem, since the axes aren't used for anything if there are exceptions, as far as I can tell. But it might be good to test this on a more complex setup than just my setup. The change in behaviour is for Python 2 and Python 3.</p>", "type": "rendered"}, "source": {"commit": {"hash": "3ce904450f66", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/3ce904450f66"}, "html": {"href": "#!/cbillington/runmanager/commits/3ce904450f66"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "bugfix2"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-03-27T23:40:18.394630+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "056026525408", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/056026525408.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/056026525408"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Remove use of NetworkOnlyLock, which no longer exists in h5_lock. This was an accidental break in backward compatibility. NetWorkOnlyLocks were only used in runmanager if you right clicked in the groups tab and selected \"open selected groups\".\r\n\r\nNetworkOnlyLocks worked by acquiring a zlock lock once before many openings\r\nand closings og a h5 file, and those openings and closings used regular in-process\r\nthreading.RLocks. This reduced network traffic.\r\n\r\nThe complexity of reimplementing NetworkOnlyLocks is not worth the slight\r\nperformance improvement in my opinion. It would be easier to refactor how\r\nrunmanager opens globals to pass around an already opened file instead. It is\r\nalways possible to refactor code in this way, so that should be the preferred\r\napproach if we encounter performance issues with repeated file openings in\r\nthe future. But I don't think it matters for this one. The delay of opening the file\r\nonce per group will be at most a few milliseconds per group.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/33/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:a830a0ae5e4e%0D056026525408?from_pullrequest_id=33"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/33/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/33.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/33/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/33/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/33"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/33/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:a830a0ae5e4e%0D056026525408?from_pullrequest_id=33"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/33/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/33/statuses_page=1.json"}}, "title": "Remove use of NetworkOnlyLock", "close_source_branch": true, "type": "pullrequest", "id": 33, "destination": {"commit": {"hash": "056026525408", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/056026525408.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/056026525408"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2019-03-28T21:51:27.221963+00:00", "summary": {"raw": "Remove use of NetworkOnlyLock, which no longer exists in h5_lock. This was an accidental break in backward compatibility. NetWorkOnlyLocks were only used in runmanager if you right clicked in the groups tab and selected \"open selected groups\".\r\n\r\nNetworkOnlyLocks worked by acquiring a zlock lock once before many openings\r\nand closings og a h5 file, and those openings and closings used regular in-process\r\nthreading.RLocks. This reduced network traffic.\r\n\r\nThe complexity of reimplementing NetworkOnlyLocks is not worth the slight\r\nperformance improvement in my opinion. It would be easier to refactor how\r\nrunmanager opens globals to pass around an already opened file instead. It is\r\nalways possible to refactor code in this way, so that should be the preferred\r\napproach if we encounter performance issues with repeated file openings in\r\nthe future. But I don't think it matters for this one. The delay of opening the file\r\nonce per group will be at most a few milliseconds per group.", "markup": "markdown", "html": "<p>Remove use of NetworkOnlyLock, which no longer exists in h5_lock. This was an accidental break in backward compatibility. NetWorkOnlyLocks were only used in runmanager if you right clicked in the groups tab and selected \"open selected groups\".</p>\n<p>NetworkOnlyLocks worked by acquiring a zlock lock once before many openings\nand closings og a h5 file, and those openings and closings used regular in-process\nthreading.RLocks. This reduced network traffic.</p>\n<p>The complexity of reimplementing NetworkOnlyLocks is not worth the slight\nperformance improvement in my opinion. It would be easier to refactor how\nrunmanager opens globals to pass around an already opened file instead. It is\nalways possible to refactor code in this way, so that should be the preferred\napproach if we encounter performance issues with repeated file openings in\nthe future. But I don't think it matters for this one. The delay of opening the file\nonce per group will be at most a few milliseconds per group.</p>", "type": "rendered"}, "source": {"commit": {"hash": "f7aa92be4618", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/f7aa92be4618"}, "html": {"href": "#!/cbillington/runmanager/commits/f7aa92be4618"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "bugfix"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-04-01T15:45:52.658503+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "a830a0ae5e4e", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/a830a0ae5e4e.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/a830a0ae5e4e"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This enables word wrapping the in the global value fields as discussed in Issue #66.\r\n\r\nIn order for the word wrapping to work sensibly, whitespace needs to be added to the line in the form of spaces or newlines where desired/allowed by python syntax.\r\n\r\nA remaining issue is that the method for calculating the row height is not aware of text eliding. If the width of the value column is narrow enough that multiple rows of wrapped text are elided the row will be larger than the displayed text. Manually making the column width larger will correct it. \r\n\r\nAs best I can tell, fixing this would require a lot of custom logic with very little payoff since the whole point of this change is to allow the user to completely remove all text eliding in order to see entire entries \\(ie it is assumed to always be better to manually make the column wider than to auto-magically make the height smaller through eliding rules\\).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/34/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/dihm/runmanager:f8b6d91191ab%0Df598b77f5b16?from_pullrequest_id=34"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/34/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/34.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/34/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/34/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/34"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/34/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/dihm/runmanager:f8b6d91191ab%0Df598b77f5b16?from_pullrequest_id=34"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/34/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/34/statuses_page=1.json"}}, "title": "Enable word wrap for globals value column", "close_source_branch": false, "type": "pullrequest", "id": 34, "destination": {"commit": {"hash": "f598b77f5b16", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/f598b77f5b16.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/f598b77f5b16"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2019-04-17T11:46:59.189908+00:00", "summary": {"raw": "This enables word wrapping the in the global value fields as discussed in Issue #66.\r\n\r\nIn order for the word wrapping to work sensibly, whitespace needs to be added to the line in the form of spaces or newlines where desired/allowed by python syntax.\r\n\r\nA remaining issue is that the method for calculating the row height is not aware of text eliding. If the width of the value column is narrow enough that multiple rows of wrapped text are elided the row will be larger than the displayed text. Manually making the column width larger will correct it. \r\n\r\nAs best I can tell, fixing this would require a lot of custom logic with very little payoff since the whole point of this change is to allow the user to completely remove all text eliding in order to see entire entries \\(ie it is assumed to always be better to manually make the column wider than to auto-magically make the height smaller through eliding rules\\).", "markup": "markdown", "html": "<p>This enables word wrapping the in the global value fields as discussed in Issue <a href=\"#!/labscript_suite/runmanager/issues/66/preparse-thread-memory-leak-crash\" rel=\"nofollow\" title=\"Preparse thread memory leak/crash\" class=\"ap-connect-link\">#66</a>.</p>\n<p>In order for the word wrapping to work sensibly, whitespace needs to be added to the line in the form of spaces or newlines where desired/allowed by python syntax.</p>\n<p>A remaining issue is that the method for calculating the row height is not aware of text eliding. If the width of the value column is narrow enough that multiple rows of wrapped text are elided the row will be larger than the displayed text. Manually making the column width larger will correct it. </p>\n<p>As best I can tell, fixing this would require a lot of custom logic with very little payoff since the whole point of this change is to allow the user to completely remove all text eliding in order to see entire entries (ie it is assumed to always be better to manually make the column wider than to auto-magically make the height smaller through eliding rules).</p>", "type": "rendered"}, "source": {"commit": {"hash": "f8b6d91191ab", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/runmanager/commit/f8b6d91191ab"}, "html": {"href": "#!/dihm/runmanager/commits/f8b6d91191ab"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/dihm/runmanager"}, "html": {"href": "#!/dihm/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b4eae553-2dc8-4579-b697-a57e879bcb02}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "dihm/runmanager", "uuid": "{b4eae553-2dc8-4579-b697-a57e879bcb02}"}, "branch": {"name": "word_wrap"}}, "comment_count": 5, "state": "DECLINED", "task_count": 0, "reason": "superseded by PR #35", "updated_on": "2019-04-18T15:33:59.097932+00:00", "author": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "merge_commit": null, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Word-wrapping in treeviews and item views, adapted from David Meyer's implementation (pull request #34).\r\n\r\nSwapped the globals treeview for a tableview. This involved replacing the custom\r\ntreeview with a mixin class, so that it could be reused for both the new tableview\r\nand the existing treeviews.\r\n\r\nThis was because TableViews have automatic vertical resizing of rows to contents,\r\nwhereas treeviews do not.\r\n\r\nAdded a custom editor for globals that also has word wrapping and expands\r\nvertically when wrapping occurs. The editor is a QTextEdit instead of a QPlainTextEdit\r\nbecause QPlainTextEdit has worse resizing semantics, preferring to return sizes in\r\nnumber of lines instead of pixels, and always having one additional blank line\r\nof space reported in its size. QTextEdit is simple enough to use instead, we\r\njust have to explicitly say we want to set and get plain text only.\r\n\r\nDisabled resizing of all columns that were still possible to resize. All columns\r\nare not set to their minimum width except for one column in each view that is\r\nset to stretch, which in the case of the globals view is the value column.\r\n\r\nMost of the diff is noise of variable renamings due to changing the treeview\r\nfor a tableview, and boilerplate changes due to using a mixin. The changes of\r\nsubstance are the new TableView class definition, the new Editor class defintion,\r\nand some changes to the ItemDelegate (which I also simplified to not use\r\nfont metrics in its height calculation). The other meaningful changes are setting\r\na stretch section for the views and setting all other sections to minimum column\r\nwidth.\r\n\r\nNote that Qt <= 5.11 had a fairly major bug such that word wrapping in a QTableView had no effect. Therefore this pull request may not do nothing unless it is run with Qt 5.12 or greater. Qt 5.12 is not actually available yet in the conda repositories, though I expect it to be there very soon (it's the next LTS version, and was released in January, so conda will update to it from 5.9 which was the last LTS). \r\n\r\nSo testing this if you don't have Qt 5.12 will be basically just regression testing. Still worth it I suppose. I also suppose that the fix might have been backported to earlier Qt versions, so small chance the change will actually do something on other versions.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/35/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:1ae2f3b1b85d%0D1188efa40ea4?from_pullrequest_id=35"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/35/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/35.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/35/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/35/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/35"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/35/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:1ae2f3b1b85d%0D1188efa40ea4?from_pullrequest_id=35"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/35/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/35/statuses_page=1.json"}}, "title": "Word-wrapping in treeviews and item views, adapted from David Meyer's implementation.", "close_source_branch": true, "type": "pullrequest", "id": 35, "destination": {"commit": {"hash": "1188efa40ea4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/1188efa40ea4.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/1188efa40ea4"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2019-04-18T05:09:10.814460+00:00", "summary": {"raw": "Word-wrapping in treeviews and item views, adapted from David Meyer's implementation (pull request #34).\r\n\r\nSwapped the globals treeview for a tableview. This involved replacing the custom\r\ntreeview with a mixin class, so that it could be reused for both the new tableview\r\nand the existing treeviews.\r\n\r\nThis was because TableViews have automatic vertical resizing of rows to contents,\r\nwhereas treeviews do not.\r\n\r\nAdded a custom editor for globals that also has word wrapping and expands\r\nvertically when wrapping occurs. The editor is a QTextEdit instead of a QPlainTextEdit\r\nbecause QPlainTextEdit has worse resizing semantics, preferring to return sizes in\r\nnumber of lines instead of pixels, and always having one additional blank line\r\nof space reported in its size. QTextEdit is simple enough to use instead, we\r\njust have to explicitly say we want to set and get plain text only.\r\n\r\nDisabled resizing of all columns that were still possible to resize. All columns\r\nare not set to their minimum width except for one column in each view that is\r\nset to stretch, which in the case of the globals view is the value column.\r\n\r\nMost of the diff is noise of variable renamings due to changing the treeview\r\nfor a tableview, and boilerplate changes due to using a mixin. The changes of\r\nsubstance are the new TableView class definition, the new Editor class defintion,\r\nand some changes to the ItemDelegate (which I also simplified to not use\r\nfont metrics in its height calculation). The other meaningful changes are setting\r\na stretch section for the views and setting all other sections to minimum column\r\nwidth.\r\n\r\nNote that Qt <= 5.11 had a fairly major bug such that word wrapping in a QTableView had no effect. Therefore this pull request may not do nothing unless it is run with Qt 5.12 or greater. Qt 5.12 is not actually available yet in the conda repositories, though I expect it to be there very soon (it's the next LTS version, and was released in January, so conda will update to it from 5.9 which was the last LTS). \r\n\r\nSo testing this if you don't have Qt 5.12 will be basically just regression testing. Still worth it I suppose. I also suppose that the fix might have been backported to earlier Qt versions, so small chance the change will actually do something on other versions.", "markup": "markdown", "html": "<p>Word-wrapping in treeviews and item views, adapted from David Meyer's implementation (<a href=\"#!/labscript_suite/runmanager/pull-requests/34/enable-word-wrap-for-globals-value-column\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #34</a>).</p>\n<p>Swapped the globals treeview for a tableview. This involved replacing the custom\ntreeview with a mixin class, so that it could be reused for both the new tableview\nand the existing treeviews.</p>\n<p>This was because TableViews have automatic vertical resizing of rows to contents,\nwhereas treeviews do not.</p>\n<p>Added a custom editor for globals that also has word wrapping and expands\nvertically when wrapping occurs. The editor is a QTextEdit instead of a QPlainTextEdit\nbecause QPlainTextEdit has worse resizing semantics, preferring to return sizes in\nnumber of lines instead of pixels, and always having one additional blank line\nof space reported in its size. QTextEdit is simple enough to use instead, we\njust have to explicitly say we want to set and get plain text only.</p>\n<p>Disabled resizing of all columns that were still possible to resize. All columns\nare not set to their minimum width except for one column in each view that is\nset to stretch, which in the case of the globals view is the value column.</p>\n<p>Most of the diff is noise of variable renamings due to changing the treeview\nfor a tableview, and boilerplate changes due to using a mixin. The changes of\nsubstance are the new TableView class definition, the new Editor class defintion,\nand some changes to the ItemDelegate (which I also simplified to not use\nfont metrics in its height calculation). The other meaningful changes are setting\na stretch section for the views and setting all other sections to minimum column\nwidth.</p>\n<p>Note that Qt &lt;= 5.11 had a fairly major bug such that word wrapping in a QTableView had no effect. Therefore this pull request may not do nothing unless it is run with Qt 5.12 or greater. Qt 5.12 is not actually available yet in the conda repositories, though I expect it to be there very soon (it's the next LTS version, and was released in January, so conda will update to it from 5.9 which was the last LTS). </p>\n<p>So testing this if you don't have Qt 5.12 will be basically just regression testing. Still worth it I suppose. I also suppose that the fix might have been backported to earlier Qt versions, so small chance the change will actually do something on other versions.</p>", "type": "rendered"}, "source": {"commit": {"hash": "51e205a94429", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/51e205a94429"}, "html": {"href": "#!/cbillington/runmanager/commits/51e205a94429"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "word_wrap"}}, "comment_count": 29, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-05-29T18:51:31.802963+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "1ae2f3b1b85d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/1ae2f3b1b85d.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/1ae2f3b1b85d"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Fix bug: security-wrapped OutputBox was not being used, resulting in no output when encryption enabled.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/36/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:8d32f49f391c%0Dd02a1b0a8ac8?from_pullrequest_id=36"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/36/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/36.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/36/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/36/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/36"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/36/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:8d32f49f391c%0Dd02a1b0a8ac8?from_pullrequest_id=36"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/36/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/36/statuses_page=1.json"}}, "title": "Use encryption-friendly outputbox", "close_source_branch": true, "type": "pullrequest", "id": 36, "destination": {"commit": {"hash": "d02a1b0a8ac8", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/d02a1b0a8ac8.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/d02a1b0a8ac8"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2019-04-26T19:46:35.938789+00:00", "summary": {"raw": "Fix bug: security-wrapped OutputBox was not being used, resulting in no output when encryption enabled.", "markup": "markdown", "html": "<p>Fix bug: security-wrapped OutputBox was not being used, resulting in no output when encryption enabled.</p>", "type": "rendered"}, "source": {"commit": {"hash": "6a6ff3d5df70", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/6a6ff3d5df70"}, "html": {"href": "#!/cbillington/runmanager/commits/6a6ff3d5df70"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "bugfix"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-04-28T15:25:19.951674+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "8d32f49f391c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/8d32f49f391c.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/8d32f49f391c"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Getting and setting of globals, and virtual-clicking of engage button with:\r\n\r\n`runmanager.remote.get_globals()`\r\n\r\n`runmanager.remote.set_globals()`\r\n\r\n`runmanager.remote.engage()`\r\n\r\nRequires a runmanager host and port to be set in labconfig, otherwise defaults\r\nused. One may also intantiate a `runmanager.remote.Client` manually to specify\r\nany host and port. The server uses the labconfig port, or a default if not\r\npresent.\r\n\r\nRequire labscript_utils 2.12.5 ([labscript_utils pull request 80](#!/labscript_suite/labscript_utils/pull-requests/80/)) with a fix for the security-wrapped ZMQClient class.\r\n\r\nThis is a work in progress, but we're about to start using it in this form fairly imminently so I've gotten the most important functions in place first.\r\n\r\nThis partially addresses issue #68", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/37/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:9d9121194d63%0D8d32f49f391c?from_pullrequest_id=37"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/37/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/37.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/37/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/37/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/37"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/37/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:9d9121194d63%0D8d32f49f391c?from_pullrequest_id=37"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/37/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/37/statuses_page=1.json"}}, "title": "Basic remote control of runmanager.", "close_source_branch": true, "type": "pullrequest", "id": 37, "destination": {"commit": {"hash": "8d32f49f391c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/8d32f49f391c.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/8d32f49f391c"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2019-05-08T22:29:27.062970+00:00", "summary": {"raw": "Getting and setting of globals, and virtual-clicking of engage button with:\r\n\r\n`runmanager.remote.get_globals()`\r\n\r\n`runmanager.remote.set_globals()`\r\n\r\n`runmanager.remote.engage()`\r\n\r\nRequires a runmanager host and port to be set in labconfig, otherwise defaults\r\nused. One may also intantiate a `runmanager.remote.Client` manually to specify\r\nany host and port. The server uses the labconfig port, or a default if not\r\npresent.\r\n\r\nRequire labscript_utils 2.12.5 ([labscript_utils pull request 80](#!/labscript_suite/labscript_utils/pull-requests/80/)) with a fix for the security-wrapped ZMQClient class.\r\n\r\nThis is a work in progress, but we're about to start using it in this form fairly imminently so I've gotten the most important functions in place first.\r\n\r\nThis partially addresses issue #68", "markup": "markdown", "html": "<p>Getting and setting of globals, and virtual-clicking of engage button with:</p>\n<p><code>runmanager.remote.get_globals()</code></p>\n<p><code>runmanager.remote.set_globals()</code></p>\n<p><code>runmanager.remote.engage()</code></p>\n<p>Requires a runmanager host and port to be set in labconfig, otherwise defaults\nused. One may also intantiate a <code>runmanager.remote.Client</code> manually to specify\nany host and port. The server uses the labconfig port, or a default if not\npresent.</p>\n<p>Require labscript_utils 2.12.5 (<a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript_utils/pull-requests/80/\" rel=\"nofollow\">labscript_utils pull request 80</a>) with a fix for the security-wrapped ZMQClient class.</p>\n<p>This is a work in progress, but we're about to start using it in this form fairly imminently so I've gotten the most important functions in place first.</p>\n<p>This partially addresses issue <a href=\"#!/labscript_suite/runmanager/issues/68/ui-scripting\" rel=\"nofollow\" title=\"UI scripting\" class=\"ap-connect-link\"><s>#68</s></a></p>", "type": "rendered"}, "source": {"commit": {"hash": "5a8f7283597a", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/5a8f7283597a"}, "html": {"href": "#!/cbillington/runmanager/commits/5a8f7283597a"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "remote"}}, "comment_count": 11, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-05-20T14:53:10.432521+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "9d9121194d63", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/9d9121194d63.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/9d9121194d63"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Fix an issue with output folder. Updating was asynchronous and so the wrong\r\nfolder could be used if engage clicked twice rapidly (even though the shots\r\nwould have the corect filenames). Further, the updating thread could crash\r\nif the zlock server goes down momentarily. Now it just prints a warning and\r\ndoesn't crash.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/38/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:1188efa40ea4%0D15bd52492e0c?from_pullrequest_id=38"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/38/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/38.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/38/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/38/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/38"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/38/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:1188efa40ea4%0D15bd52492e0c?from_pullrequest_id=38"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/38/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/38/statuses_page=1.json"}}, "title": "Fix an issue with output folder updating when sequence index changes.", "close_source_branch": true, "type": "pullrequest", "id": 38, "destination": {"commit": {"hash": "15bd52492e0c", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/15bd52492e0c.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/15bd52492e0c"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2019-05-17T20:43:14.065858+00:00", "summary": {"raw": "Fix an issue with output folder. Updating was asynchronous and so the wrong\r\nfolder could be used if engage clicked twice rapidly (even though the shots\r\nwould have the corect filenames). Further, the updating thread could crash\r\nif the zlock server goes down momentarily. Now it just prints a warning and\r\ndoesn't crash.", "markup": "markdown", "html": "<p>Fix an issue with output folder. Updating was asynchronous and so the wrong\nfolder could be used if engage clicked twice rapidly (even though the shots\nwould have the corect filenames). Further, the updating thread could crash\nif the zlock server goes down momentarily. Now it just prints a warning and\ndoesn't crash.</p>", "type": "rendered"}, "source": {"commit": {"hash": "072bf2965b22", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/072bf2965b22"}, "html": {"href": "#!/cbillington/runmanager/commits/072bf2965b22"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "sequence-index-bugfix"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-05-20T14:57:03.438540+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "1188efa40ea4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/1188efa40ea4.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/1188efa40ea4"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "I noticed runmanager was taking quite a bit of time to parse globals when many of them were being set remotely at once, and I realised it was doing them twice at a time instead of en-masse as intended. This was due to a simple bug that this fixes.\r\n\r\nAlso, 5 seconds is way too short a timeout when runmanager might be doing considerable work preventing it from responding to remote request. Even if it usually responds very quickly, you don't want this timeout to be the reason your optimisation run crashes. Increased to 15 seconds.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/39/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:4d0019925963%0D1ae2f3b1b85d?from_pullrequest_id=39"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/39/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/39.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/39/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/39/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/39"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/39/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:4d0019925963%0D1ae2f3b1b85d?from_pullrequest_id=39"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/39/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/39/statuses_page=1.json"}}, "title": "Remote bugfix", "close_source_branch": true, "type": "pullrequest", "id": 39, "destination": {"commit": {"hash": "1ae2f3b1b85d", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/1ae2f3b1b85d.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/1ae2f3b1b85d"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2019-05-31T20:34:30.849684+00:00", "summary": {"raw": "I noticed runmanager was taking quite a bit of time to parse globals when many of them were being set remotely at once, and I realised it was doing them twice at a time instead of en-masse as intended. This was due to a simple bug that this fixes.\r\n\r\nAlso, 5 seconds is way too short a timeout when runmanager might be doing considerable work preventing it from responding to remote request. Even if it usually responds very quickly, you don't want this timeout to be the reason your optimisation run crashes. Increased to 15 seconds.", "markup": "markdown", "html": "<p>I noticed runmanager was taking quite a bit of time to parse globals when many of them were being set remotely at once, and I realised it was doing them twice at a time instead of en-masse as intended. This was due to a simple bug that this fixes.</p>\n<p>Also, 5 seconds is way too short a timeout when runmanager might be doing considerable work preventing it from responding to remote request. Even if it usually responds very quickly, you don't want this timeout to be the reason your optimisation run crashes. Increased to 15 seconds.</p>", "type": "rendered"}, "source": {"commit": {"hash": "ed03697e1050", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/ed03697e1050"}, "html": {"href": "#!/cbillington/runmanager/commits/ed03697e1050"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "remote-bugfix"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-06-01T16:38:37.621014+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "4d0019925963", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/4d0019925963.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/4d0019925963"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Use consolas as the small monospaced font on Windows rather than Ubuntu.\r\n\r\nQt's font rendering on windows'seems to be more variable, and at least on Windows 7,\r\nthe Ubuntu font at smaller sizes looks absolutely horrendous. On Windows 10\r\nit is a little better, but still with Qt and whatever settings I have, there\r\ndoesn't seem to be any sub-pixel smoothing.\r\n\r\nConsolas is wider at the same height and so more forgiving of bad font rendering.\r\nIt should be present on all Windows 7 and Windows 10 computers.\r\n\r\nThis was pointed out by Phil in the pull request that changed the font to be Ubuntu mono, but I didn't see how bad it could get until I deployed it to a lab computer. So, point taken. Is this any better do you think @{philipstarkey}?\r\n\r\nIt looks like windows *can* be better, but often isn't, and people shouldn't have to change their font rendering settings just to be able to read globals values without squinting.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/40/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:d8aee36423b8%0D4d0019925963?from_pullrequest_id=40"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/40/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/40.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/40/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/40/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/40"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/40/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:d8aee36423b8%0D4d0019925963?from_pullrequest_id=40"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/40/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/40/statuses_page=1.json"}}, "title": "Use consolas as the small monospaced font on Windows rather than Ubuntu.", "close_source_branch": true, "type": "pullrequest", "id": 40, "destination": {"commit": {"hash": "4d0019925963", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/4d0019925963.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/4d0019925963"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2019-06-01T19:17:50.067782+00:00", "summary": {"raw": "Use consolas as the small monospaced font on Windows rather than Ubuntu.\r\n\r\nQt's font rendering on windows'seems to be more variable, and at least on Windows 7,\r\nthe Ubuntu font at smaller sizes looks absolutely horrendous. On Windows 10\r\nit is a little better, but still with Qt and whatever settings I have, there\r\ndoesn't seem to be any sub-pixel smoothing.\r\n\r\nConsolas is wider at the same height and so more forgiving of bad font rendering.\r\nIt should be present on all Windows 7 and Windows 10 computers.\r\n\r\nThis was pointed out by Phil in the pull request that changed the font to be Ubuntu mono, but I didn't see how bad it could get until I deployed it to a lab computer. So, point taken. Is this any better do you think @{philipstarkey}?\r\n\r\nIt looks like windows *can* be better, but often isn't, and people shouldn't have to change their font rendering settings just to be able to read globals values without squinting.", "markup": "markdown", "html": "<p>Use consolas as the small monospaced font on Windows rather than Ubuntu.</p>\n<p>Qt's font rendering on windows'seems to be more variable, and at least on Windows 7,\nthe Ubuntu font at smaller sizes looks absolutely horrendous. On Windows 10\nit is a little better, but still with Qt and whatever settings I have, there\ndoesn't seem to be any sub-pixel smoothing.</p>\n<p>Consolas is wider at the same height and so more forgiving of bad font rendering.\nIt should be present on all Windows 7 and Windows 10 computers.</p>\n<p>This was pointed out by Phil in the pull request that changed the font to be Ubuntu mono, but I didn't see how bad it could get until I deployed it to a lab computer. So, point taken. Is this any better do you think <span class=\"ap-mention\" data-atlassian-id=\"557058:2f99420c-1dbd-4837-952c-82c421b8fbdd\">@Philip Starkey</span>?</p>\n<p>It looks like windows <em>can</em> be better, but often isn't, and people shouldn't have to change their font rendering settings just to be able to read globals values without squinting.</p>", "type": "rendered"}, "source": {"commit": {"hash": "bd472223bd18", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/bd472223bd18.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/bd472223bd18"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "runmanager-mono-font"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-06-09T16:33:27.258852+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "d8aee36423b8", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/d8aee36423b8.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/d8aee36423b8"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Fix issue #61, shuffle checkstate not preserved upon removing and adding 'outer' globals.\r\n\r\nAlso fix that the checkox is initially set to be a tristate one. It should not\r\nbe settable to a partially checked state by the user.\r\n\r\nDeploying this in our lab today will merge in Monday if there are no issues.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/41/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:3349e44897b4%0Dd8aee36423b8?from_pullrequest_id=41"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/41/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/41.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/41/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/41/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/41"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/41/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:3349e44897b4%0Dd8aee36423b8?from_pullrequest_id=41"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/41/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/41/statuses_page=1.json"}}, "title": "Fix issue #61, shuffle checkstate not preserved upon removing and adding 'outer' globals.", "close_source_branch": true, "type": "pullrequest", "id": 41, "destination": {"commit": {"hash": "d8aee36423b8", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/d8aee36423b8.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/d8aee36423b8"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2019-06-25T19:01:56.519984+00:00", "summary": {"raw": "Fix issue #61, shuffle checkstate not preserved upon removing and adding 'outer' globals.\r\n\r\nAlso fix that the checkox is initially set to be a tristate one. It should not\r\nbe settable to a partially checked state by the user.\r\n\r\nDeploying this in our lab today will merge in Monday if there are no issues.", "markup": "markdown", "html": "<p>Fix issue <a href=\"#!/labscript_suite/runmanager/issues/61/shuffle-is-deselected-when-no-globals-are\" rel=\"nofollow\" title=\"Shuffle is deselected when no globals are being scanned\" class=\"ap-connect-link\"><s>#61</s></a>, shuffle checkstate not preserved upon removing and adding 'outer' globals.</p>\n<p>Also fix that the checkox is initially set to be a tristate one. It should not\nbe settable to a partially checked state by the user.</p>\n<p>Deploying this in our lab today will merge in Monday if there are no issues.</p>", "type": "rendered"}, "source": {"commit": {"hash": "1e4adcd9dd18", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/1e4adcd9dd18"}, "html": {"href": "#!/cbillington/runmanager/commits/1e4adcd9dd18"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "bugfix"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-07-01T18:49:08.182239+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "3349e44897b4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/3349e44897b4.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/3349e44897b4"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "This modifies the runmanager remote API to use the RPCServer and RPCClient classes in [labscript_utils PR #89](#!/labscript_suite/labscript_utils/pull-requests/89/)\r\n\r\nIt is backward compatible with clients speaking the old protocol.\r\n\r\nThe  RPCServer and RPCClient classes are designed to allow RPC requests to come with version requirements, so that clients can make requests for new remote methods, or modified ways of calling existing methods, and know that if the server is not new enough for the changes, a version exception will be raised instead of some unhelpful crash downstream.\r\n\r\nThis will allow us to evolve the inter-process protocols over time, which so far have been forced to be static since we have had no way of doing remote versioning.\r\n\r\nThe RPCServer and RPCClient classes were modelled after what runmanager was doing already, which is why this is not a very big change. The idea is that we will morph the other apps' client-server code to be like this too.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/42/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/cbillington/runmanager:276cf23acd99%0Daee8db70cba6?from_pullrequest_id=42"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/42/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/42.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/42/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/42/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/42"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/42/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/cbillington/runmanager:276cf23acd99%0Daee8db70cba6?from_pullrequest_id=42"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/42/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/42/statuses_page=1.json"}}, "title": "Use new RPCServer and RPCClient classes for runmanager remote API.", "close_source_branch": false, "type": "pullrequest", "id": 42, "destination": {"commit": {"hash": "aee8db70cba6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/aee8db70cba6.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/aee8db70cba6"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2019-08-13T20:51:35.456172+00:00", "summary": {"raw": "This modifies the runmanager remote API to use the RPCServer and RPCClient classes in [labscript_utils PR #89](#!/labscript_suite/labscript_utils/pull-requests/89/)\r\n\r\nIt is backward compatible with clients speaking the old protocol.\r\n\r\nThe  RPCServer and RPCClient classes are designed to allow RPC requests to come with version requirements, so that clients can make requests for new remote methods, or modified ways of calling existing methods, and know that if the server is not new enough for the changes, a version exception will be raised instead of some unhelpful crash downstream.\r\n\r\nThis will allow us to evolve the inter-process protocols over time, which so far have been forced to be static since we have had no way of doing remote versioning.\r\n\r\nThe RPCServer and RPCClient classes were modelled after what runmanager was doing already, which is why this is not a very big change. The idea is that we will morph the other apps' client-server code to be like this too.", "markup": "markdown", "html": "<p>This modifies the runmanager remote API to use the RPCServer and RPCClient classes in <a data-is-external-link=\"true\" href=\"#!/labscript_suite/labscript_utils/pull-requests/89/\" rel=\"nofollow\">labscript_utils PR #89</a></p>\n<p>It is backward compatible with clients speaking the old protocol.</p>\n<p>The  RPCServer and RPCClient classes are designed to allow RPC requests to come with version requirements, so that clients can make requests for new remote methods, or modified ways of calling existing methods, and know that if the server is not new enough for the changes, a version exception will be raised instead of some unhelpful crash downstream.</p>\n<p>This will allow us to evolve the inter-process protocols over time, which so far have been forced to be static since we have had no way of doing remote versioning.</p>\n<p>The RPCServer and RPCClient classes were modelled after what runmanager was doing already, which is why this is not a very big change. The idea is that we will morph the other apps' client-server code to be like this too.</p>", "type": "rendered"}, "source": {"commit": {"hash": "276cf23acd99", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/276cf23acd99"}, "html": {"href": "#!/cbillington/runmanager/commits/276cf23acd99"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "RPCServer"}}, "comment_count": 1, "state": "DECLINED", "task_count": 0, "reason": "Will recreate on github", "updated_on": "2020-01-28T21:32:14.608600+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": null, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "When right-clicking to open selected groups, include all groups belonging to selected globals files.\r\n\r\nThe previous behaviour (ignoring the selected files) was a minor annoyance reported by a user.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/43/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:aee8db70cba6%0D3349e44897b4?from_pullrequest_id=43"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/43/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/43.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/43/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/43/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/43"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/43/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:aee8db70cba6%0D3349e44897b4?from_pullrequest_id=43"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/43/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/43/statuses_page=1.json"}}, "title": "Open all groups of selected globals files.", "close_source_branch": true, "type": "pullrequest", "id": 43, "destination": {"commit": {"hash": "3349e44897b4", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/3349e44897b4.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/3349e44897b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2019-12-03T19:33:34.324246+00:00", "summary": {"raw": "When right-clicking to open selected groups, include all groups belonging to selected globals files.\r\n\r\nThe previous behaviour (ignoring the selected files) was a minor annoyance reported by a user.", "markup": "markdown", "html": "<p>When right-clicking to open selected groups, include all groups belonging to selected globals files.</p>\n<p>The previous behaviour (ignoring the selected files) was a minor annoyance reported by a user.</p>", "type": "rendered"}, "source": {"commit": {"hash": "847bcb844f03", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/847bcb844f03"}, "html": {"href": "#!/cbillington/runmanager/commits/847bcb844f03"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "open-all"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-12-10T14:27:49.644796+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "aee8db70cba6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/aee8db70cba6.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/aee8db70cba6"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Allow modifying numerical/boolean globals with up and down arrow keys.\r\n\r\nThis is a reimplementation of and obviates PR #12.\r\n\r\nThis is as general as I think it can be - any numbers can be modified this way, so long as they parse as a valid Python numeric or boolean literal. The modification is done by `ast.literal_eval()`ing the expression or converting the string to a `Decimal()` object and so the number of digits is never modified and there is no such thing as floating point rounding error. It works with arbitrary bases, i.e. hex, binary, octal (if that sounds pedantic, that was by far the easiest part of this). It preserves any formatting such as optional underscores in numbers, plus signs and leading zeros in exponents, whether you've decided to write your hex numbers in lower case or upper case, additional unnecessary zeros after the decimal point, that sort of thing (*that* was the hard part) \r\n\r\nUpon modification of the value this way, the new values are committed to the Qt model *immediately*, such that in an upcoming feature (or in @{557058:411f7712-e1fa-438c-b578-0359da2d9f06}'s custom implementation) where you can have shots continuously being compiled and run using whatever runmanager's current values are, the changes will take effect in the next shot. But the modification is still part of the undo buffer, and the original value will be restored if you press escape. Also it doesn't queue up multiple commit events at once, so you can hold an arrow key down and not cause the app to freeze handling every change.\r\n\r\nThe only context in which the feature is disabled is if you are in a multi-line expression in runmanager, since the arrow keys would be expected to move the cursor in that context. I couldn't think of a good solution to this, so just disabled it if it's multi-line. Can trivially re-enable it if anyone can think of a sensible keybinding.\r\n\r\nIt looks like this:\r\n\r\n![Peek 2019-12-07 22-27.gif](data/bitbucket.org/repo/Az8jb5/images/2452532398-Peek_2019-12-07_22-27.gif)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/44/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/cbillington/runmanager:813c40dda3c4%0Daee8db70cba6?from_pullrequest_id=44"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/44/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/44.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/44/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/44/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/44"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/44/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/cbillington/runmanager:813c40dda3c4%0Daee8db70cba6?from_pullrequest_id=44"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/44/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/44/statuses_page=1.json"}}, "title": "Icrementing/decrementing globals with arrow keys", "close_source_branch": false, "type": "pullrequest", "id": 44, "destination": {"commit": {"hash": "aee8db70cba6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/aee8db70cba6.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/aee8db70cba6"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2019-12-08T03:33:40.355181+00:00", "summary": {"raw": "Allow modifying numerical/boolean globals with up and down arrow keys.\r\n\r\nThis is a reimplementation of and obviates PR #12.\r\n\r\nThis is as general as I think it can be - any numbers can be modified this way, so long as they parse as a valid Python numeric or boolean literal. The modification is done by `ast.literal_eval()`ing the expression or converting the string to a `Decimal()` object and so the number of digits is never modified and there is no such thing as floating point rounding error. It works with arbitrary bases, i.e. hex, binary, octal (if that sounds pedantic, that was by far the easiest part of this). It preserves any formatting such as optional underscores in numbers, plus signs and leading zeros in exponents, whether you've decided to write your hex numbers in lower case or upper case, additional unnecessary zeros after the decimal point, that sort of thing (*that* was the hard part) \r\n\r\nUpon modification of the value this way, the new values are committed to the Qt model *immediately*, such that in an upcoming feature (or in @{557058:411f7712-e1fa-438c-b578-0359da2d9f06}'s custom implementation) where you can have shots continuously being compiled and run using whatever runmanager's current values are, the changes will take effect in the next shot. But the modification is still part of the undo buffer, and the original value will be restored if you press escape. Also it doesn't queue up multiple commit events at once, so you can hold an arrow key down and not cause the app to freeze handling every change.\r\n\r\nThe only context in which the feature is disabled is if you are in a multi-line expression in runmanager, since the arrow keys would be expected to move the cursor in that context. I couldn't think of a good solution to this, so just disabled it if it's multi-line. Can trivially re-enable it if anyone can think of a sensible keybinding.\r\n\r\nIt looks like this:\r\n\r\n![Peek 2019-12-07 22-27.gif](data/bitbucket.org/repo/Az8jb5/images/2452532398-Peek_2019-12-07_22-27.gif)", "markup": "markdown", "html": "<p>Allow modifying numerical/boolean globals with up and down arrow keys.</p>\n<p>This is a reimplementation of and obviates <a href=\"#!/labscript_suite/runmanager/pull-requests/12/arrow-key-switching\" rel=\"nofollow\" class=\"ap-connect-link\">PR #12</a>.</p>\n<p>This is as general as I think it can be - any numbers can be modified this way, so long as they parse as a valid Python numeric or boolean literal. The modification is done by <code>ast.literal_eval()</code>ing the expression or converting the string to a <code>Decimal()</code> object and so the number of digits is never modified and there is no such thing as floating point rounding error. It works with arbitrary bases, i.e. hex, binary, octal (if that sounds pedantic, that was by far the easiest part of this). It preserves any formatting such as optional underscores in numbers, plus signs and leading zeros in exponents, whether you've decided to write your hex numbers in lower case or upper case, additional unnecessary zeros after the decimal point, that sort of thing (<em>that</em> was the hard part) </p>\n<p>Upon modification of the value this way, the new values are committed to the Qt model <em>immediately</em>, such that in an upcoming feature (or in <span class=\"ap-mention\" data-atlassian-id=\"557058:411f7712-e1fa-438c-b578-0359da2d9f06\">@David Meyer</span>'s custom implementation) where you can have shots continuously being compiled and run using whatever runmanager's current values are, the changes will take effect in the next shot. But the modification is still part of the undo buffer, and the original value will be restored if you press escape. Also it doesn't queue up multiple commit events at once, so you can hold an arrow key down and not cause the app to freeze handling every change.</p>\n<p>The only context in which the feature is disabled is if you are in a multi-line expression in runmanager, since the arrow keys would be expected to move the cursor in that context. I couldn't think of a good solution to this, so just disabled it if it's multi-line. Can trivially re-enable it if anyone can think of a sensible keybinding.</p>\n<p>It looks like this:</p>\n<p><img alt=\"Peek 2019-12-07 22-27.gif\" src=\"data/bitbucket.org/repo/Az8jb5/images/2452532398-Peek_2019-12-07_22-27.gif\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "813c40dda3c4", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/813c40dda3c4"}, "html": {"href": "#!/cbillington/runmanager/commits/813c40dda3c4"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "arrow-switching"}}, "comment_count": 2, "state": "DECLINED", "task_count": 0, "reason": "Will re-create git-side", "updated_on": "2020-01-28T21:42:03.514365+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": null, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"description": "Runmanager was not updating the default shot output folder upon a change in\r\nthe labscript file (including restoring the labscript file at startup), leading\r\nit to sometimes  think that the user had intentionally chosen to not use the\r\ndefault shot output folder, even though they had made no such choice.\r\n\r\nOther issues may remain, but this resolves one of them.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/45/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diffstat/labscript_suite/runmanager:895af9405e51%0Daee8db70cba6?from_pullrequest_id=45"}, "commits": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/45/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/45.json"}, "comments": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/45/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/45/merge"}, "html": {"href": "#!/labscript_suite/runmanager/pull-requests/45"}, "activity": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/45/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/diff/labscript_suite/runmanager:895af9405e51%0Daee8db70cba6?from_pullrequest_id=45"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runmanager/pullrequests/45/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runmanager/pullrequests/45/statuses_page=1.json"}}, "title": "Fix issue #69.", "close_source_branch": true, "type": "pullrequest", "id": 45, "destination": {"commit": {"hash": "aee8db70cba6", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/aee8db70cba6.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/aee8db70cba6"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runmanager.json"}, "html": {"href": "#!/labscript_suite/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9b4f21e6-54b0-41ea-8f01-db1919f2f790}ts=249918"}}, "type": "repository", "name": "runmanager", "full_name": "labscript_suite/runmanager", "uuid": "{9b4f21e6-54b0-41ea-8f01-db1919f2f790}"}, "branch": {"name": "default"}}, "created_on": "2019-12-16T09:27:30.405002+00:00", "summary": {"raw": "Runmanager was not updating the default shot output folder upon a change in\r\nthe labscript file (including restoring the labscript file at startup), leading\r\nit to sometimes  think that the user had intentionally chosen to not use the\r\ndefault shot output folder, even though they had made no such choice.\r\n\r\nOther issues may remain, but this resolves one of them.", "markup": "markdown", "html": "<p>Runmanager was not updating the default shot output folder upon a change in\nthe labscript file (including restoring the labscript file at startup), leading\nit to sometimes  think that the user had intentionally chosen to not use the\ndefault shot output folder, even though they had made no such choice.</p>\n<p>Other issues may remain, but this resolves one of them.</p>", "type": "rendered"}, "source": {"commit": {"hash": "c817a8ed1036", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager/commit/c817a8ed1036"}, "html": {"href": "#!/cbillington/runmanager/commits/c817a8ed1036"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runmanager"}, "html": {"href": "#!/cbillington/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f721817a-d5b9-4d43-8c50-99a9be0a8896}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "cbillington/runmanager", "uuid": "{f721817a-d5b9-4d43-8c50-99a9be0a8896}"}, "branch": {"name": "bugfix"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2020-01-28T22:21:10.487328+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "895af9405e51", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runmanager/commit/895af9405e51.json"}, "html": {"href": "#!/labscript_suite/runmanager/commits/895af9405e51"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}], "page": 1, "size": 45}