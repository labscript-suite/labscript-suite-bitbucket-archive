{"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/12/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/12.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/12/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/12/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/12/actual-shuttertimes-in-runviewer"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/12/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "actual Shuttertimes in runviewer", "component": null, "votes": 0, "watches": 2, "content": {"raw": "As already discussed in #5 I aim to add the real shutter open/close times to runviewer.\r\n\r\nI think this is best done by keeping the plot the same and adding a Infinite line (green: open, red:close) to the plot at the appropriate time.\r\n\r\nTo achieve this I would like to add to connection_table_properties in labscript in the following way:\r\n\r\n```\r\n#!python\r\n\r\nclass Shutter(DigitalOut):\r\n    description = 'shutter'\r\n\r\n    @set_passed_properties(\r\n        property_names = {\"connection_table_properties\": [\"open_state\"]}\r\n        )\r\n    def __init__(self,name,parent_device,connection,delay=(0,0),open_state=1,\r\n                 **kwargs):\r\n```\r\n\r\nIn runviewer I would add to  Shot.load_devices:\r\n\r\n```\r\n#!python\r\n\r\n        shutters = [name for name, clazz in get_children(self.connection_table, device).items() if clazz == \"Shutter\"]\r\n        self.add_shutter_times(shutters)\r\n```\r\nand:\r\n\r\n```\r\n#!python\r\n\r\n    def add_shutter_times(self, names):\r\n        for name in names:\r\n            x_values, y_values = self._traces[name]\r\n            change_values = []\r\n            values = zip(x_values, y_values)\r\n            for i in range(1, len(values)):\r\n                if values[i][1] != values[i - 1][1]:\r\n                    change_values.append(values[i])\r\n            # Todo Handle Inverted Schutters?\r\n            self._shutter_times[name] = {x_value + (self.calibrations[name][1] if y_value == 1 else self.calibrations[name][0]): y_value for x_value, y_value in change_values}\r\n```\r\nThe display of InfiniteLines in the plots is then easy.\r\nThoughts?", "markup": "markdown", "html": "<p>As already discussed in <a href=\"#!/labscript_suite/runviewer/issues/5/markers-and-nonlinear-timescale\" rel=\"nofollow\" title=\"Markers and nonlinear timescale\" class=\"ap-connect-link\"><s>#5</s></a> I aim to add the real shutter open/close times to runviewer.</p>\n<p>I think this is best done by keeping the plot the same and adding a Infinite line (green: open, red:close) to the plot at the appropriate time.</p>\n<p>To achieve this I would like to add to connection_table_properties in labscript in the following way:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Shutter</span><span class=\"p\">(</span><span class=\"n\">DigitalOut</span><span class=\"p\">):</span>\n    <span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;shutter&#39;</span>\n\n    <span class=\"nd\">@set_passed_properties</span><span class=\"p\">(</span>\n        <span class=\"n\">property_names</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;connection_table_properties&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;open_state&quot;</span><span class=\"p\">]}</span>\n        <span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"n\">parent_device</span><span class=\"p\">,</span><span class=\"n\">connection</span><span class=\"p\">,</span><span class=\"n\">delay</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"n\">open_state</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n                 <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n</pre></div>\n\n\n<p>In runviewer I would add to  Shot.load_devices:</p>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"n\">shutters</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">name</span> <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">clazz</span> <span class=\"ow\">in</span> <span class=\"n\">get_children</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">connection_table</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"n\">clazz</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Shutter&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_shutter_times</span><span class=\"p\">(</span><span class=\"n\">shutters</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>and:</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"k\">def</span> <span class=\"nf\">add_shutter_times</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">names</span><span class=\"p\">:</span>\n            <span class=\"n\">x_values</span><span class=\"p\">,</span> <span class=\"n\">y_values</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_traces</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span>\n            <span class=\"n\">change_values</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">x_values</span><span class=\"p\">,</span> <span class=\"n\">y_values</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">)):</span>\n                <span class=\"k\">if</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n                    <span class=\"n\">change_values</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n            <span class=\"c1\"># Todo Handle Inverted Schutters?</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_shutter_times</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">x_value</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">calibrations</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">y_value</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">calibrations</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]):</span> <span class=\"n\">y_value</span> <span class=\"k\">for</span> <span class=\"n\">x_value</span><span class=\"p\">,</span> <span class=\"n\">y_value</span> <span class=\"ow\">in</span> <span class=\"n\">change_values</span><span class=\"p\">}</span>\n</pre></div>\n\n\n<p>The display of InfiniteLines in the plots is then easy.\nThoughts?</p>", "type": "rendered"}, "assignee": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-23T08:10:14.550138+00:00", "milestone": null, "updated_on": "2017-10-16T21:51:13.423680+00:00", "type": "issue", "id": 12}