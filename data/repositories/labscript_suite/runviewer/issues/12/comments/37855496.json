{"links": {"self": {"href": "data/repositories/labscript_suite/runviewer/issues/12/comments/37855496.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/12#comment-37855496"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer/issues/12.json"}}, "type": "issue", "id": 12, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "title": "actual Shuttertimes in runviewer"}, "content": {"raw": "I'm somewhat perturbed by the fact that this is a special case for `Shutter`, however I've been thinking about this over the weekend and I can't see an easy way to make it generalised.\n\nSo I think I'll say I'm happy with the approximate implementation, but please leave comments in the runviewer code that say this is a temporary solution (and that the implementation is not expected to stay static, so don't rely on this as an API) until we generically support custom runviewer behaviour for all subclasses of `Output`.\n\nIn the long term, I think we may need to register subclasses of `Output` with a decorator, along with a similar implementation for output type subclasses for use in BLACS and runviewer like we currently do with hardware devices. @cbillington may want to comment on that suggestion (perhaps I should break it out into a new issue)", "markup": "markdown", "html": "<p>I'm somewhat perturbed by the fact that this is a special case for <code>Shutter</code>, however I've been thinking about this over the weekend and I can't see an easy way to make it generalised.</p>\n<p>So I think I'll say I'm happy with the approximate implementation, but please leave comments in the runviewer code that say this is a temporary solution (and that the implementation is not expected to stay static, so don't rely on this as an API) until we generically support custom runviewer behaviour for all subclasses of <code>Output</code>.</p>\n<p>In the long term, I think we may need to register subclasses of <code>Output</code> with a decorator, along with a similar implementation for output type subclasses for use in BLACS and runviewer like we currently do with hardware devices. @cbillington may want to comment on that suggestion (perhaps I should break it out into a new issue)</p>", "type": "rendered"}, "created_on": "2017-06-27T05:59:02.896271+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 37855496}