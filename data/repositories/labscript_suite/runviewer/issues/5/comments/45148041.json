{"links": {"self": {"href": "data/repositories/labscript_suite/runviewer/issues/5/comments/45148041.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/5#comment-45148041"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer/issues/5.json"}}, "type": "issue", "id": 5, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "title": "Markers and nonlinear timescale"}, "content": {"raw": "Hi Jan, I've just checked out your nonlinear time code (running the tip of the APQ branch, so a little out of date compared with the markers branch, but it seems to run ok).\nI assume that you're waiting for the markers pull request to go through before you make a request for the nonlinear code? I've had a couple of thoughts on possible further features that could be added, and figured that given the basic functionality hasn't been merged in yet this would be the best place to discuss them.\n\nIt would be very cool if instead of just plotting the markers spaced evenly along the time axis, you could instead click and drag the marker lines to any location between the neighboring markers along the x-axis (you could add some sort of extra widget across the top of the plots where the clicking and dragging happens if it's easier). In this case, you'd probably want to disable scrolling and zooming in the time axis, as instead one would drag markers around to get the desired view.\n\nI don't know how feasible this would be, but it could also be useful to be able to add in temporary markers (i.e. not actually saving them to the H5 file) by hand in runviewer. This way, if you wanted to zoom in on a particular region using the ideas above, you could click to add extra markers either side of it and drag them out.\n\nIn terms of the user interface, I imagine the above ideas working in a similar way to the gradient tool in Illustrator or Photoshop, where extra colour markers can be added along an axis, then moved along it to change the local rate at which the colours change (in our case, it would instead change the local rate at which time progresses along the axis). As to the actual implementation, it seems like it should be possible to have it re-scale in real time, as the bars are dragged, given we already have the plots re-sampling when zooming. It would require a new scaling function that took the relative distance of each marker along the axis as its input.\n\nLet me know what you think, and whether any of these ideas are even possible!", "markup": "markdown", "html": "<p>Hi Jan, I've just checked out your nonlinear time code (running the tip of the APQ branch, so a little out of date compared with the markers branch, but it seems to run ok).\nI assume that you're waiting for the markers pull request to go through before you make a request for the nonlinear code? I've had a couple of thoughts on possible further features that could be added, and figured that given the basic functionality hasn't been merged in yet this would be the best place to discuss them.</p>\n<p>It would be very cool if instead of just plotting the markers spaced evenly along the time axis, you could instead click and drag the marker lines to any location between the neighboring markers along the x-axis (you could add some sort of extra widget across the top of the plots where the clicking and dragging happens if it's easier). In this case, you'd probably want to disable scrolling and zooming in the time axis, as instead one would drag markers around to get the desired view.</p>\n<p>I don't know how feasible this would be, but it could also be useful to be able to add in temporary markers (i.e. not actually saving them to the H5 file) by hand in runviewer. This way, if you wanted to zoom in on a particular region using the ideas above, you could click to add extra markers either side of it and drag them out.</p>\n<p>In terms of the user interface, I imagine the above ideas working in a similar way to the gradient tool in Illustrator or Photoshop, where extra colour markers can be added along an axis, then moved along it to change the local rate at which the colours change (in our case, it would instead change the local rate at which time progresses along the axis). As to the actual implementation, it seems like it should be possible to have it re-scale in real time, as the bars are dragged, given we already have the plots re-sampling when zooming. It would require a new scaling function that took the relative distance of each marker along the axis as its input.</p>\n<p>Let me know what you think, and whether any of these ideas are even possible!</p>", "type": "rendered"}, "created_on": "2018-05-02T05:52:23.808806+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": null, "type": "issue_comment", "id": 45148041}