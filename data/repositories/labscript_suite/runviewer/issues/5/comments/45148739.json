{"links": {"self": {"href": "data/repositories/labscript_suite/runviewer/issues/5/comments/45148739.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/5#comment-45148739"}}, "issue": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer/issues/5.json"}}, "type": "issue", "id": 5, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "title": "Markers and nonlinear timescale"}, "content": {"raw": "Yes I'm waiting on the marker feature to finally merge. I didn't think it would take almost a year when I created the marker pull request. The APQ branch is quite outdated our lab uses GitHub  and Git to manage our code. Therefore I usually don't update stuff here that is not related to pull requests.\n\nMh the dragging feature and the temporary markers definitely are within the realm of possibility. I think pyqtgraphs InfiniteLines support dragging any have a signal attached to it. In both cases we would need to rethink the current rescale implementation which was designed to be static. We could maybe even  include it in the resample to make it faster.\n\nBut for the start we should first stick to the currently proposed simple feature wich we can than extend over time.", "markup": "markdown", "html": "<p>Yes I'm waiting on the marker feature to finally merge. I didn't think it would take almost a year when I created the marker pull request. The APQ branch is quite outdated our lab uses GitHub  and Git to manage our code. Therefore I usually don't update stuff here that is not related to pull requests.</p>\n<p>Mh the dragging feature and the temporary markers definitely are within the realm of possibility. I think pyqtgraphs InfiniteLines support dragging any have a signal attached to it. In both cases we would need to rethink the current rescale implementation which was designed to be static. We could maybe even  include it in the resample to make it faster.</p>\n<p>But for the start we should first stick to the currently proposed simple feature wich we can than extend over time.</p>", "type": "rendered"}, "created_on": "2018-05-02T06:44:56.548058+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 45148739}