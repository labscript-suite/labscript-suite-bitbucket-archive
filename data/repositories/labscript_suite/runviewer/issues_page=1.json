{"pagelen": 100, "values": [{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/1/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/1.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/1/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/1/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/1/cannot-import-resample"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/1/vote"}}, "reporter": {"display_name": "Matt Earnshaw", "uuid": "{17c89cfb-6d26-4163-b407-ca2461f38dc5}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17c89cfb-6d26-4163-b407-ca2461f38dc5%7D"}, "html": {"href": "https://bitbucket.org/%7B17c89cfb-6d26-4163-b407-ca2461f38dc5%7D/"}, "avatar": {"href": "https://bitbucket.org/account/mearnshaw/avatar/"}}, "nickname": "mearnshaw", "type": "user", "account_id": null}, "title": "cannot import resample", "component": null, "votes": 0, "watches": 1, "content": {"raw": "resample module not distributed (only the pyd binary is) which causes an ImportError on my system", "markup": "markdown", "html": "<p>resample module not distributed (only the pyd binary is) which causes an ImportError on my system</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-06-26T16:36:12.166176+00:00", "milestone": null, "updated_on": "2014-07-14T12:45:37.266521+00:00", "type": "issue", "id": 1}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/2/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/2.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/2/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/2/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/2/pyqtgraph-v0910-is-incompatible-with"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/2/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "PyQtGraph v0.9.10 is incompatible with runviewer 2.0.1", "component": null, "votes": 0, "watches": 2, "content": {"raw": "The latest version of PyQtGraph has changed the x,y array dimension requirements when [stepMode=True](http://www.pyqtgraph.org/documentation/graphicsItems/plotdataitem.html?highlight=stepmode#pyqtgraph.PlotDataItem.__init__).\r\n\r\nTraceback raised is:\r\n```\r\n#!python\r\n\r\nTraceback (most recent call last):\r\n  File \"__main__.py\", line 303, in on_shot_selection_changed\r\n    self.update_channels_treeview()\r\n  File \"__main__.py\", line 419, in update_channels_treeview\r\n    self.update_plots()\r\n  File \"__main__.py\", line 478, in update_plots\r\n    self.create_plot(channel, ticked_shots)\r\n  File \"__main__.py\", line 501, in create_plot\r\n    plot_item = self.plot_widgets[channel].plot([],[], pen=pg.mkPen(QColor(colour), width=2), stepMode=True)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyqtgraph/graphicsItems/PlotItem/PlotItem.py\", line 630, in plot\r\n    item = PlotDataItem(*args, **kargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyqtgraph/graphicsItems/PlotDataItem.py\", line 176, in __init__\r\n    self.setData(*args, **kargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyqtgraph/graphicsItems/PlotDataItem.py\", line 460, in setData\r\n    self.updateItems()\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyqtgraph/graphicsItems/PlotDataItem.py\", line 486, in updateItems\r\n    self.curve.setData(x=x, y=y, **curveArgs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyqtgraph/graphicsItems/PlotCurveItem.py\", line 299, in setData\r\n    self.updateData(*args, **kargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyqtgraph/graphicsItems/PlotCurveItem.py\", line 342, in updateData\r\n    raise Exception(\"len(X) must be len(Y)+1 since stepMode=True (got %s and %s)\" % (self.xData.shape, self.yData.shape))\r\nException: len(X) must be len(Y)+1 since stepMode=True (got (0,) and (0,))\r\n```\r\n\r\nThe current workaround is to only use pyqtgraph v0.9.8 until we fix the issue", "markup": "markdown", "html": "<p>The latest version of PyQtGraph has changed the x,y array dimension requirements when <a data-is-external-link=\"true\" href=\"http://www.pyqtgraph.org/documentation/graphicsItems/plotdataitem.html?highlight=stepmode#pyqtgraph.PlotDataItem.__init__\" rel=\"nofollow\">stepMode=True</a>.</p>\n<p>Traceback raised is:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">303</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">on_shot_selection_changed</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_channels_treeview</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">419</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">update_channels_treeview</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_plots</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">478</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">update_plots</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_plot</span><span class=\"p\">(</span><span class=\"n\">channel</span><span class=\"p\">,</span> <span class=\"n\">ticked_shots</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">501</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">create_plot</span>\n    <span class=\"n\">plot_item</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plot_widgets</span><span class=\"p\">[</span><span class=\"n\">channel</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">([],[],</span> <span class=\"n\">pen</span><span class=\"o\">=</span><span class=\"n\">pg</span><span class=\"o\">.</span><span class=\"n\">mkPen</span><span class=\"p\">(</span><span class=\"n\">QColor</span><span class=\"p\">(</span><span class=\"n\">colour</span><span class=\"p\">),</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">stepMode</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pyqtgraph/graphicsItems/PlotItem/PlotItem.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">630</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">plot</span>\n    <span class=\"n\">item</span> <span class=\"o\">=</span> <span class=\"n\">PlotDataItem</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pyqtgraph/graphicsItems/PlotDataItem.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">176</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__init__</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setData</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pyqtgraph/graphicsItems/PlotDataItem.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">460</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">setData</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">updateItems</span><span class=\"p\">()</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pyqtgraph/graphicsItems/PlotDataItem.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">486</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">updateItems</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">curve</span><span class=\"o\">.</span><span class=\"n\">setData</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">curveArgs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pyqtgraph/graphicsItems/PlotCurveItem.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">299</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">setData</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">updateData</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/local/lib/python2.7/dist-packages/pyqtgraph/graphicsItems/PlotCurveItem.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">342</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">updateData</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s2\">&quot;len(X) must be len(Y)+1 since stepMode=True (got </span><span class=\"si\">%s</span><span class=\"s2\"> and </span><span class=\"si\">%s</span><span class=\"s2\">)&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">xData</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">yData</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">))</span>\n<span class=\"ne\">Exception</span><span class=\"p\">:</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">)</span> <span class=\"n\">must</span> <span class=\"n\">be</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Y</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mi\">1</span> <span class=\"n\">since</span> <span class=\"n\">stepMode</span><span class=\"o\">=</span><span class=\"bp\">True</span> <span class=\"p\">(</span><span class=\"n\">got</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,)</span> <span class=\"ow\">and</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,))</span>\n</pre></div>\n\n\n<p>The current workaround is to only use pyqtgraph v0.9.8 until we fix the issue</p>", "type": "rendered"}, "assignee": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-03-24T22:45:10.951147+00:00", "milestone": null, "updated_on": "2015-04-02T05:26:15.442606+00:00", "type": "issue", "id": 2}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/3/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/3.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/3/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/3/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/3/rfblaster-support"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/3/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "rfblaster support", "component": null, "votes": 0, "watches": 1, "content": {"raw": "At the moment, runviewer cannot display the output of rfblasters. This makes it hard to debug their outputs!", "markup": "markdown", "html": "<p>At the moment, runviewer cannot display the output of rfblasters. This makes it hard to debug their outputs!</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2015-06-12T03:59:13.416474+00:00", "milestone": null, "updated_on": "2015-06-12T03:59:13.416474+00:00", "type": "issue", "id": 3}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/4/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/4.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/4/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/4/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/4/version-check-for-zprocess-does-not-allow"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/4/vote"}}, "reporter": {"display_name": "David Meyer", "uuid": "{8df655d6-8661-4957-b4ba-669cef19bf2d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D"}, "html": {"href": "https://bitbucket.org/%7B8df655d6-8661-4957-b4ba-669cef19bf2d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2a4efe81a17e5aeccdbc4ef2ca2cc463d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDM-0.png"}}, "nickname": "dihm", "type": "user", "account_id": "557058:411f7712-e1fa-438c-b578-0359da2d9f06"}, "title": "Version check for zprocess does not allow 2.2.0", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The recent update to zprocess 2.2.0 prevents runviewer from opening on the version check. Using zprocess 2.2.0 has not caused any issues for us, so a simple update of the version check seems to be all that is needed.", "markup": "markdown", "html": "<p>The recent update to zprocess 2.2.0 prevents runviewer from opening on the version check. Using zprocess 2.2.0 has not caused any issues for us, so a simple update of the version check seems to be all that is needed.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-02T11:38:45.893512+00:00", "milestone": null, "updated_on": "2017-06-02T13:15:16.761056+00:00", "type": "issue", "id": 4}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/5/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/5.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/5/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/5/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/5/markers-and-nonlinear-timescale"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/5/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "Markers and nonlinear timescale", "component": null, "votes": 0, "watches": 2, "content": {"raw": "In our group we extended labscript to allow for adding markers in the experiment script to make shot analysis in runviewer easier.\r\nThese markers are then be displayed in runviewer to give a quick overview of the experiment stages without needing to know the exact times of where things happen.\r\nAdditionally we adjusted the time axis to make the markers space evenly, since there are longlasting stages in wich not much is happening (loading the MOT) and stages where a lot is happening on a small scale. This also allows for a quicker overview without needing lots of zooming in.\r\nTo make things a bit clearer I attached a screenshot of a shot in our runviewer.\r\n\r\nThe drawback of this change is that there (at least currently) is no way of displaying multiple shots at one, since they might differ in their markers. \r\nThis is why I raise the question: is this something that would be of use for the main branch(in wich case I would create pull requests for this change) or is the drawback too great?\r\n\r\nEdit: There also is a tooltip displaying the current time the mouse is hovering over so thats why our time axis is empty", "markup": "markdown", "html": "<p>In our group we extended labscript to allow for adding markers in the experiment script to make shot analysis in runviewer easier.\nThese markers are then be displayed in runviewer to give a quick overview of the experiment stages without needing to know the exact times of where things happen.\nAdditionally we adjusted the time axis to make the markers space evenly, since there are longlasting stages in wich not much is happening (loading the MOT) and stages where a lot is happening on a small scale. This also allows for a quicker overview without needing lots of zooming in.\nTo make things a bit clearer I attached a screenshot of a shot in our runviewer.</p>\n<p>The drawback of this change is that there (at least currently) is no way of displaying multiple shots at one, since they might differ in their markers. \nThis is why I raise the question: is this something that would be of use for the main branch(in wich case I would create pull requests for this change) or is the drawback too great?</p>\n<p>Edit: There also is a tooltip displaying the current time the mouse is hovering over so thats why our time axis is empty</p>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-17T19:32:24.445491+00:00", "milestone": null, "updated_on": "2018-05-11T02:34:17.357936+00:00", "type": "issue", "id": 5}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/6/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/6.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/6/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/6/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/6/file-menu-items-do-nothing"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/6/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "File menu items do nothing", "component": null, "votes": 0, "watches": 1, "content": {"raw": "There are a few items in the file menu, but none of them seem to be linked up to do anything yet.", "markup": "markdown", "html": "<p>There are a few items in the file menu, but none of them seem to be linked up to do anything yet.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-19T01:10:12.047287+00:00", "milestone": null, "updated_on": "2017-06-20T02:18:04.256711+00:00", "type": "issue", "id": 6}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/7/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/7.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/7/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/7/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/7/error-when-ticking-unticking-multiple"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/7/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Error when ticking/unticking multiple shots", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Sometimes when ticking or unticking multiple shots, several error message popups appear, with the following exception:\r\n\r\n\r\n```\r\n#!python\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\labscript_suite\\runviewer\\__main__.py\", line 351, in on_shot_selection_changed\r\n    self.plot_items[channel][shot].setPen(pg.mkPen(QColor(colour), width=2))\r\nTypeError: arguments did not match any overloaded call:\r\n  QColor(Qt.GlobalColor): argument 1 has unexpected type 'function'\r\n  QColor(int): too many arguments\r\n  QColor(QVariant): argument 1 has unexpected type 'function'\r\n  QColor(): argument 1 has unexpected type 'function'\r\n  QColor(int, int, int, alpha: int = 255): argument 1 has unexpected type 'function'\r\n```\r\n\r\nThe shots still get ticked/unticked despite the errors.", "markup": "markdown", "html": "<p>Sometimes when ticking or unticking multiple shots, several error message popups appear, with the following exception:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite</span><span class=\"se\">\\r</span><span class=\"s2\">unviewer\\__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">351</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">on_shot_selection_changed</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plot_items</span><span class=\"p\">[</span><span class=\"n\">channel</span><span class=\"p\">][</span><span class=\"n\">shot</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">setPen</span><span class=\"p\">(</span><span class=\"n\">pg</span><span class=\"o\">.</span><span class=\"n\">mkPen</span><span class=\"p\">(</span><span class=\"n\">QColor</span><span class=\"p\">(</span><span class=\"n\">colour</span><span class=\"p\">),</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"n\">arguments</span> <span class=\"n\">did</span> <span class=\"ow\">not</span> <span class=\"n\">match</span> <span class=\"nb\">any</span> <span class=\"n\">overloaded</span> <span class=\"n\">call</span><span class=\"p\">:</span>\n  <span class=\"n\">QColor</span><span class=\"p\">(</span><span class=\"n\">Qt</span><span class=\"o\">.</span><span class=\"n\">GlobalColor</span><span class=\"p\">):</span> <span class=\"n\">argument</span> <span class=\"mi\">1</span> <span class=\"n\">has</span> <span class=\"n\">unexpected</span> <span class=\"nb\">type</span> <span class=\"s1\">&#39;function&#39;</span>\n  <span class=\"n\">QColor</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">):</span> <span class=\"n\">too</span> <span class=\"n\">many</span> <span class=\"n\">arguments</span>\n  <span class=\"n\">QColor</span><span class=\"p\">(</span><span class=\"n\">QVariant</span><span class=\"p\">):</span> <span class=\"n\">argument</span> <span class=\"mi\">1</span> <span class=\"n\">has</span> <span class=\"n\">unexpected</span> <span class=\"nb\">type</span> <span class=\"s1\">&#39;function&#39;</span>\n  <span class=\"n\">QColor</span><span class=\"p\">():</span> <span class=\"n\">argument</span> <span class=\"mi\">1</span> <span class=\"n\">has</span> <span class=\"n\">unexpected</span> <span class=\"nb\">type</span> <span class=\"s1\">&#39;function&#39;</span>\n  <span class=\"n\">QColor</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">255</span><span class=\"p\">):</span> <span class=\"n\">argument</span> <span class=\"mi\">1</span> <span class=\"n\">has</span> <span class=\"n\">unexpected</span> <span class=\"nb\">type</span> <span class=\"s1\">&#39;function&#39;</span>\n</pre></div>\n\n\n<p>The shots still get ticked/unticked despite the errors.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-19T05:21:50.392896+00:00", "milestone": null, "updated_on": "2017-06-20T01:49:00.897614+00:00", "type": "issue", "id": 7}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/8/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/8.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/8/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/8/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/8/delete-shots-not-implemented"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/8/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Delete shots not implemented", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently, the only way to remove shots from runviewer is to restart the program.\r\n\r\nThere is a delete button, but it has not been set to do anything yet", "markup": "markdown", "html": "<p>Currently, the only way to remove shots from runviewer is to restart the program.</p>\n<p>There is a delete button, but it has not been set to do anything yet</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-20T01:49:12.932987+00:00", "milestone": null, "updated_on": "2018-01-25T03:48:41.501578+00:00", "type": "issue", "id": 8}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/9/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/9.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/9/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/9/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/9/grouping-of-channels-not-implemented"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/9/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Grouping of channels not implemented", "component": null, "votes": 0, "watches": 1, "content": {"raw": "There are group/ungroup channels buttons on the on the interface, but these do not do anything yet.\r\n\r\nI believe that the original idea was to be able to select several channels and group them so that they would be plotted together on the same y-axis.", "markup": "markdown", "html": "<p>There are group/ungroup channels buttons on the on the interface, but these do not do anything yet.</p>\n<p>I believe that the original idea was to be able to select several channels and group them so that they would be plotted together on the same y-axis.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-06-20T02:14:45.441147+00:00", "milestone": null, "updated_on": "2017-06-20T02:14:45.441147+00:00", "type": "issue", "id": 9}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/10/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/10.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/10/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/10/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/10/filepath-issue-possible-qt-api-issues"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/10/vote"}}, "reporter": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "title": "Filepath issue, possible Qt API issues", "component": null, "votes": 0, "watches": 2, "content": {"raw": "With current mainline runviewer I get an exception opening a shot file:\r\n\r\n\r\n```\r\n#!python\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/cjb7/labscript_suite/runviewer/__main__.py\", line 291, in on_add_shot\r\n    selected_files = [os.path.abspath(shot_file) for shot_file in selected_files]\r\n  File \"/usr/lib/python2.7/posixpath.py\", line 367, in abspath\r\n    if not isabs(path):\r\n  File \"/usr/lib/python2.7/posixpath.py\", line 61, in isabs\r\n    return s.startswith('/')\r\nAttributeError: 'QString' object has no attribute 'startswith'\r\n```\r\n\r\nThis is clearly because the code `selected_files = [os.path.abspath(shot_file) for shot_file in selected_files]` has been copied from lyse or runmanager, which are configured to use version 2 of the PyQt4 API, in which `selected_files` is a list of ordinary Python strings, whereas runviewer uses the older version 1, in which `selected_files` is a list of QString objects.\r\n\r\nThe fix for me is to change it to: `shot_files = [os.path.abspath(str(shot_file)) for shot_file in shot_files]` to convert the `QStrings` into normal strings, but I'm wondering why this seemingly doesn't break for you, @shaunj. Perhaps the import stuff at the start is making  runviewer use PySide? Perhaps PySide has changed to use the new API?\r\n\r\n`str(shot_file)` will work for either version of the API, so is a fix regardless. I also wonder if this is the source of the confusion over whether some QColor object is a function or not.\r\n\r\nKeep in mind that PyQt API version 2 is the future, so if current code is compatible with it, the following should be added at the top of programs to enable it:\r\n\r\n```\r\n#!python\r\n\r\nimport sip\r\n\r\n# Have to set PyQt API via sip before importing PyQt:\r\nAPI_NAMES = [\"QDate\", \"QDateTime\", \"QString\", \"QTextStream\", \"QTime\", \"QUrl\", \"QVariant\"]\r\nAPI_VERSION = 2\r\nfor name in API_NAMES:\r\n    sip.setapi(name, API_VERSION)\r\n```\r\n\r\nWhich will make it much easier to port to PyQt5 and Python 3, both of which only support the new API.\r\n\r\nI am unsure how PySide factors in to this, the above code doesn't do anything with it, and I'm not sure what API version it uses. PySide apparently doesn't work with Qt 5 or Python 3.5 yet, meaning if we port to those versions before they do, we will probably just have to drop support for PySide.\r\n\r\nThere is also the complication of pyqtgraph - it also chooses what Qt wrapper to use depending on what has already been imported, and so it can influence runviewer's choice because it is imported before runviewer makes the decision. However pyqtgraph appears to have always preferred PyQt4.\r\n\r\nJust some things to consider. I'm sure @philipstarkey has opinions about PySide etc.", "markup": "markdown", "html": "<p>With current mainline runviewer I get an exception opening a shot file:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/home/cjb7/labscript_suite/runviewer/__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">291</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">on_add_shot</span>\n    <span class=\"n\">selected_files</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">abspath</span><span class=\"p\">(</span><span class=\"n\">shot_file</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">shot_file</span> <span class=\"ow\">in</span> <span class=\"n\">selected_files</span><span class=\"p\">]</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/lib/python2.7/posixpath.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">367</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">abspath</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">isabs</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/lib/python2.7/posixpath.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">61</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">isabs</span>\n    <span class=\"k\">return</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s1\">&#39;/&#39;</span><span class=\"p\">)</span>\n<span class=\"ne\">AttributeError</span><span class=\"p\">:</span> <span class=\"s1\">&#39;QString&#39;</span> <span class=\"nb\">object</span> <span class=\"n\">has</span> <span class=\"n\">no</span> <span class=\"n\">attribute</span> <span class=\"s1\">&#39;startswith&#39;</span>\n</pre></div>\n\n\n<p>This is clearly because the code <code>selected_files = [os.path.abspath(shot_file) for shot_file in selected_files]</code> has been copied from lyse or runmanager, which are configured to use version 2 of the PyQt4 API, in which <code>selected_files</code> is a list of ordinary Python strings, whereas runviewer uses the older version 1, in which <code>selected_files</code> is a list of QString objects.</p>\n<p>The fix for me is to change it to: <code>shot_files = [os.path.abspath(str(shot_file)) for shot_file in shot_files]</code> to convert the <code>QStrings</code> into normal strings, but I'm wondering why this seemingly doesn't break for you, @shaunj. Perhaps the import stuff at the start is making  runviewer use PySide? Perhaps PySide has changed to use the new API?</p>\n<p><code>str(shot_file)</code> will work for either version of the API, so is a fix regardless. I also wonder if this is the source of the confusion over whether some QColor object is a function or not.</p>\n<p>Keep in mind that PyQt API version 2 is the future, so if current code is compatible with it, the following should be added at the top of programs to enable it:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">sip</span>\n\n<span class=\"c1\"># Have to set PyQt API via sip before importing PyQt:</span>\n<span class=\"n\">API_NAMES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;QDate&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;QDateTime&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;QString&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;QTextStream&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;QTime&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;QUrl&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;QVariant&quot;</span><span class=\"p\">]</span>\n<span class=\"n\">API_VERSION</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">API_NAMES</span><span class=\"p\">:</span>\n    <span class=\"n\">sip</span><span class=\"o\">.</span><span class=\"n\">setapi</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">API_VERSION</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Which will make it much easier to port to PyQt5 and Python 3, both of which only support the new API.</p>\n<p>I am unsure how PySide factors in to this, the above code doesn't do anything with it, and I'm not sure what API version it uses. PySide apparently doesn't work with Qt 5 or Python 3.5 yet, meaning if we port to those versions before they do, we will probably just have to drop support for PySide.</p>\n<p>There is also the complication of pyqtgraph - it also chooses what Qt wrapper to use depending on what has already been imported, and so it can influence runviewer's choice because it is imported before runviewer makes the decision. However pyqtgraph appears to have always preferred PyQt4.</p>\n<p>Just some things to consider. I'm sure @philipstarkey has opinions about PySide etc.</p>", "type": "rendered"}, "assignee": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-20T20:19:35.199692+00:00", "milestone": null, "updated_on": "2017-06-27T06:06:21.383347+00:00", "type": "issue", "id": 10}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/11/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/11.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/11/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/11/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/11/bug-in-the-ui"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/11/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "Bug in the UI", "component": null, "votes": 0, "watches": 2, "content": {"raw": "When canceling the select file dialog I get this error:\r\n![Bildschirmfoto 2017-06-22 um 20.36.16.png](data/bitbucket.org/repo/AeyynE/images/81279156-Bildschirmfoto_2017-06-22_um_20.36.16.png)", "markup": "markdown", "html": "<p>When canceling the select file dialog I get this error:\n<img alt=\"Bildschirmfoto 2017-06-22 um 20.36.16.png\" src=\"data/bitbucket.org/repo/AeyynE/images/81279156-Bildschirmfoto_2017-06-22_um_20.36.16.png\" /></p>", "type": "rendered"}, "assignee": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-22T18:37:33.208389+00:00", "milestone": null, "updated_on": "2017-06-27T06:47:09.712904+00:00", "type": "issue", "id": 11}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/12/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/12.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/12/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/12/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/12/actual-shuttertimes-in-runviewer"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/12/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "actual Shuttertimes in runviewer", "component": null, "votes": 0, "watches": 2, "content": {"raw": "As already discussed in #5 I aim to add the real shutter open/close times to runviewer.\r\n\r\nI think this is best done by keeping the plot the same and adding a Infinite line (green: open, red:close) to the plot at the appropriate time.\r\n\r\nTo achieve this I would like to add to connection_table_properties in labscript in the following way:\r\n\r\n```\r\n#!python\r\n\r\nclass Shutter(DigitalOut):\r\n    description = 'shutter'\r\n\r\n    @set_passed_properties(\r\n        property_names = {\"connection_table_properties\": [\"open_state\"]}\r\n        )\r\n    def __init__(self,name,parent_device,connection,delay=(0,0),open_state=1,\r\n                 **kwargs):\r\n```\r\n\r\nIn runviewer I would add to  Shot.load_devices:\r\n\r\n```\r\n#!python\r\n\r\n        shutters = [name for name, clazz in get_children(self.connection_table, device).items() if clazz == \"Shutter\"]\r\n        self.add_shutter_times(shutters)\r\n```\r\nand:\r\n\r\n```\r\n#!python\r\n\r\n    def add_shutter_times(self, names):\r\n        for name in names:\r\n            x_values, y_values = self._traces[name]\r\n            change_values = []\r\n            values = zip(x_values, y_values)\r\n            for i in range(1, len(values)):\r\n                if values[i][1] != values[i - 1][1]:\r\n                    change_values.append(values[i])\r\n            # Todo Handle Inverted Schutters?\r\n            self._shutter_times[name] = {x_value + (self.calibrations[name][1] if y_value == 1 else self.calibrations[name][0]): y_value for x_value, y_value in change_values}\r\n```\r\nThe display of InfiniteLines in the plots is then easy.\r\nThoughts?", "markup": "markdown", "html": "<p>As already discussed in <a href=\"#!/labscript_suite/runviewer/issues/5/markers-and-nonlinear-timescale\" rel=\"nofollow\" title=\"Markers and nonlinear timescale\" class=\"ap-connect-link\"><s>#5</s></a> I aim to add the real shutter open/close times to runviewer.</p>\n<p>I think this is best done by keeping the plot the same and adding a Infinite line (green: open, red:close) to the plot at the appropriate time.</p>\n<p>To achieve this I would like to add to connection_table_properties in labscript in the following way:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Shutter</span><span class=\"p\">(</span><span class=\"n\">DigitalOut</span><span class=\"p\">):</span>\n    <span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;shutter&#39;</span>\n\n    <span class=\"nd\">@set_passed_properties</span><span class=\"p\">(</span>\n        <span class=\"n\">property_names</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;connection_table_properties&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;open_state&quot;</span><span class=\"p\">]}</span>\n        <span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"n\">parent_device</span><span class=\"p\">,</span><span class=\"n\">connection</span><span class=\"p\">,</span><span class=\"n\">delay</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"n\">open_state</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n                 <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n</pre></div>\n\n\n<p>In runviewer I would add to  Shot.load_devices:</p>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"n\">shutters</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">name</span> <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">clazz</span> <span class=\"ow\">in</span> <span class=\"n\">get_children</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">connection_table</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"n\">clazz</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Shutter&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_shutter_times</span><span class=\"p\">(</span><span class=\"n\">shutters</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>and:</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"k\">def</span> <span class=\"nf\">add_shutter_times</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">names</span><span class=\"p\">:</span>\n            <span class=\"n\">x_values</span><span class=\"p\">,</span> <span class=\"n\">y_values</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_traces</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span>\n            <span class=\"n\">change_values</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">x_values</span><span class=\"p\">,</span> <span class=\"n\">y_values</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">)):</span>\n                <span class=\"k\">if</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n                    <span class=\"n\">change_values</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n            <span class=\"c1\"># Todo Handle Inverted Schutters?</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_shutter_times</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">x_value</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">calibrations</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">y_value</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">calibrations</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]):</span> <span class=\"n\">y_value</span> <span class=\"k\">for</span> <span class=\"n\">x_value</span><span class=\"p\">,</span> <span class=\"n\">y_value</span> <span class=\"ow\">in</span> <span class=\"n\">change_values</span><span class=\"p\">}</span>\n</pre></div>\n\n\n<p>The display of InfiniteLines in the plots is then easy.\nThoughts?</p>", "type": "rendered"}, "assignee": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-23T08:10:14.550138+00:00", "milestone": null, "updated_on": "2017-10-16T21:51:13.423680+00:00", "type": "issue", "id": 12}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/13/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/13.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/13/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/13/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/13/short-pulses-at-t-0-not-visible-when"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/13/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Short pulses at t=0 not visible when zoomed out", "component": null, "votes": 0, "watches": 2, "content": {"raw": "The runviewer resampling is supposed to make all instructions visible, even if they would otherwise be too short to display on the current zoom setting. It seems as though digital signals on a pulseblaster that occur at t=0 cannot be seen until you zoom in on them to within an order of magnitude of the timescale of the instruction (e.g. 100e-6 s pulse can only be seen when the scale is approx 100e-3 s per tick)", "markup": "markdown", "html": "<p>The runviewer resampling is supposed to make all instructions visible, even if they would otherwise be too short to display on the current zoom setting. It seems as though digital signals on a pulseblaster that occur at t=0 cannot be seen until you zoom in on them to within an order of magnitude of the timescale of the instruction (e.g. 100e-6 s pulse can only be seen when the scale is approx 100e-3 s per tick)</p>", "type": "rendered"}, "assignee": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "state": "new", "version": null, "edited_on": null, "created_on": "2017-06-27T06:12:52.446041+00:00", "milestone": null, "updated_on": "2017-06-27T06:12:52.446041+00:00", "type": "issue", "id": 13}, {"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/14/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/14.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/14/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/14/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/14/smaller-plots-for-digitals"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/14/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "Smaller plots for digitals", "component": null, "votes": 0, "watches": 2, "content": {"raw": "I propose having digital outputs such as shutters, digitalouts and clocklines display in a smaller plot (smaller y axis) as they don't profit from the extra space.\r\nThey should also get their y-axis-ticks replaced with Hi and Lo to distinguish them from analog outputs.\r\nHere is a screenshot I made of how things could look (ignoring the markers, non linear time and different label position):\r\n![Bildschirmfoto 2017-06-27 um 22.18.16.png](data/bitbucket.org/repo/AeyynE/images/360170202-Bildschirmfoto_2017-06-27_um_22.18.16.png)", "markup": "markdown", "html": "<p>I propose having digital outputs such as shutters, digitalouts and clocklines display in a smaller plot (smaller y axis) as they don't profit from the extra space.\nThey should also get their y-axis-ticks replaced with Hi and Lo to distinguish them from analog outputs.\nHere is a screenshot I made of how things could look (ignoring the markers, non linear time and different label position):\n<img alt=\"Bildschirmfoto 2017-06-27 um 22.18.16.png\" src=\"data/bitbucket.org/repo/AeyynE/images/360170202-Bildschirmfoto_2017-06-27_um_22.18.16.png\" /></p>", "type": "rendered"}, "assignee": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "state": "new", "version": null, "edited_on": null, "created_on": "2017-06-27T20:23:27.084709+00:00", "milestone": null, "updated_on": "2018-05-11T10:32:19.701867+00:00", "type": "issue", "id": 14}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/15/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/15.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/15/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/15/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/15/save-restore-checked-channels"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/15/vote"}}, "reporter": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "title": "Save/Restore checked channels", "component": null, "votes": 0, "watches": 1, "content": {"raw": "It would be nice to have the option to save and restore the checked state of channels. I'd suggest we add the ability to save them to a config folder with the LabConfig module. That way one could save a set of default channel configurations that are often used. \r\n\r\nIn our lab we commonly want to look at all channels related to one laser (shutters, intensity stabilization, AOMs etc.). Finding the channels in the list and checking them as well as unchecking previous channels takes a long time. This feature would help to quickly check an uncheck channels to those configurations.\r\n\r\nI would also keep this separate from other configuration data such as GUI state that one might want to save. \r\n\r\nIs this something that others are interested in or is this something that is specifix to our lab?", "markup": "markdown", "html": "<p>It would be nice to have the option to save and restore the checked state of channels. I'd suggest we add the ability to save them to a config folder with the LabConfig module. That way one could save a set of default channel configurations that are often used. </p>\n<p>In our lab we commonly want to look at all channels related to one laser (shutters, intensity stabilization, AOMs etc.). Finding the channels in the list and checking them as well as unchecking previous channels takes a long time. This feature would help to quickly check an uncheck channels to those configurations.</p>\n<p>I would also keep this separate from other configuration data such as GUI state that one might want to save. </p>\n<p>Is this something that others are interested in or is this something that is specifix to our lab?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-09-05T14:05:35.694389+00:00", "milestone": null, "updated_on": "2017-10-02T23:19:56.618347+00:00", "type": "issue", "id": 15}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/16/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/16.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/16/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/16/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/16/shutter-markers-for-shutters-attached-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/16/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Shutter markers for shutters attached to PulseBlasters do not show up", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The title says it all.\r\n\r\nThe cause of this is due to the complicated internal object hierarchy for direct pulseblaster outputs. An internal `IntermediateDevice` and `ClockLine` are created for the pulseblaster direct outputs, but the `IntermediateDevice` subclass does not have it's own runviewer parsing class (as other intermediate devices do). Instead, the pulseblaster class calls the runviewer `add_trace` method for internally connected intermediate devices.\r\n\r\nIn order to fix this issue, and make the shutter code more robust, we should move the code for the shutters out of `_load_device` and into `add_trace`, thus ensuring that shutter markers can be calculated for any trace that is added (regardless of how it is added). \r\n\r\nThis may incur a performance penalty, since we will need to look up the open state on a per channel basis (which possibly requires traversing the connection table more than we currently do?), but since the load shot code is not performant anyway, I don't think it matters!", "markup": "markdown", "html": "<p>The title says it all.</p>\n<p>The cause of this is due to the complicated internal object hierarchy for direct pulseblaster outputs. An internal <code>IntermediateDevice</code> and <code>ClockLine</code> are created for the pulseblaster direct outputs, but the <code>IntermediateDevice</code> subclass does not have it's own runviewer parsing class (as other intermediate devices do). Instead, the pulseblaster class calls the runviewer <code>add_trace</code> method for internally connected intermediate devices.</p>\n<p>In order to fix this issue, and make the shutter code more robust, we should move the code for the shutters out of <code>_load_device</code> and into <code>add_trace</code>, thus ensuring that shutter markers can be calculated for any trace that is added (regardless of how it is added). </p>\n<p>This may incur a performance penalty, since we will need to look up the open state on a per channel basis (which possibly requires traversing the connection table more than we currently do?), but since the load shot code is not performant anyway, I don't think it matters!</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-10-02T23:46:45.756213+00:00", "milestone": null, "updated_on": "2018-05-11T02:05:14.687914+00:00", "type": "issue", "id": 16}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/17/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/17.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/17/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/17/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/17/tooltip-should-show-line-number-from"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/17/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Tooltip should show line number from experiment logic file", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I've just had an idea to create mapping between each point in a runviewer trace, and the line number of the experiment logic python file that generated that point. That way, you could easily identify which bit of your experiment logic Python code was responsible for generating a particular feature you are seeing.\r\n\r\nThis probably should be implemented as part of the next major labscript version (and not before).\r\n\r\nI probably don't suggest saving this information along side every hardware instruction, but rather store a separate table (or tables) in much the same way we do for markers and other metadata displayed in runviewer.\r\n\r\nSome ideas for how to access this information are [here](https://stackoverflow.com/questions/24438976/python-debugging-get-filename-and-line-number-from-which-a-function-is-called) and probably I would just suggest we put it in all of the labscript functions we expect to be called (that is, we want to know where the `channel.method()` was called, and not say where the wrapper function `make_BEC` was called and also not where `Output.add_instruction()` was called, which probably prohibits putting it inside the method of that name).", "markup": "markdown", "html": "<p>I've just had an idea to create mapping between each point in a runviewer trace, and the line number of the experiment logic python file that generated that point. That way, you could easily identify which bit of your experiment logic Python code was responsible for generating a particular feature you are seeing.</p>\n<p>This probably should be implemented as part of the next major labscript version (and not before).</p>\n<p>I probably don't suggest saving this information along side every hardware instruction, but rather store a separate table (or tables) in much the same way we do for markers and other metadata displayed in runviewer.</p>\n<p>Some ideas for how to access this information are <a data-is-external-link=\"true\" href=\"https://stackoverflow.com/questions/24438976/python-debugging-get-filename-and-line-number-from-which-a-function-is-called\" rel=\"nofollow\">here</a> and probably I would just suggest we put it in all of the labscript functions we expect to be called (that is, we want to know where the <code>channel.method()</code> was called, and not say where the wrapper function <code>make_BEC</code> was called and also not where <code>Output.add_instruction()</code> was called, which probably prohibits putting it inside the method of that name).</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-11-06T00:39:45.166383+00:00", "milestone": null, "updated_on": "2017-11-06T00:48:44.118800+00:00", "type": "issue", "id": 17}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/18/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/18.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/18/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/18/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/18/no-allowed-version-of-pyqtgraph-works-100"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/18/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "No allowed version of pyqtgraph works 100% correctly with runviewer", "component": null, "votes": 0, "watches": 2, "content": {"raw": "It looks like pyqtgraph v0.9.10 is the oldest version that runviewer will support (based on the import check). However this raises a double import denier error (see below).\r\n\r\nIf I try and use pyqtgraph v0.10.0 (the only other version allowed by the import check), then runviewer loads, but you can't reset the x-axis (time axis). Presumably we don't actually support v0.10.0 yet and the solution is to fix the double import denier issue?\r\n\r\nNote: This is done with the current tip version as the latest tagged version also has an issue with the double import denier.\r\n\r\n\r\n```\r\n#!python\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\labscript_suite\\labscript_py27\\runviewer\\__main__.py\", line 63, in <module>\r\n    check_version('pyqtgraph', '0.9.10', '1')\r\n  File \"C:\\labscript_suite\\labscript_py27\\labscript_utils\\__init__.py\", line 89, in check_version\r\n    _reraise(exc_info)\r\n  File \"C:\\labscript_suite\\labscript_py27\\labscript_utils\\__init__.py\", line 67, in _reraise\r\n    exec('raise type, value, traceback', globals(), locals())\r\n  File \"C:\\labscript_suite\\labscript_py27\\labscript_utils\\__init__.py\", line 52, in _get_version\r\n    module = __import__(module_name)\r\n  File \"C:\\labscript_suite\\labscript_py27\\labscript_utils\\double_import_denier.py\", line 38, in load_module\r\n    return imp.load_module(name, self.fp, self.pathname, self.description)\r\n  File \"C:\\Anaconda3\\envs\\labscript_py27\\lib\\site-packages\\pyqtgraph\\__init__.py\", line 13, in <module>\r\n    from .Qt import QtGui\r\n  File \"C:\\labscript_suite\\labscript_py27\\labscript_utils\\double_import_denier.py\", line 38, in load_module\r\n    return imp.load_module(name, self.fp, self.pathname, self.description)\r\n  File \"C:\\Anaconda3\\envs\\labscript_py27\\lib\\site-packages\\pyqtgraph\\Qt.py\", line 32, in <module>\r\n    raise Exception(\"PyQtGraph requires either PyQt4 or PySide; neither package could be imported.\")\r\nException: PyQtGraph requires either PyQt4 or PySide; neither package could be imported.\r\n\r\n```", "markup": "markdown", "html": "<p>It looks like pyqtgraph v0.9.10 is the oldest version that runviewer will support (based on the import check). However this raises a double import denier error (see below).</p>\n<p>If I try and use pyqtgraph v0.10.0 (the only other version allowed by the import check), then runviewer loads, but you can't reset the x-axis (time axis). Presumably we don't actually support v0.10.0 yet and the solution is to fix the double import denier issue?</p>\n<p>Note: This is done with the current tip version as the latest tagged version also has an issue with the double import denier.</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript_py27</span><span class=\"se\">\\r</span><span class=\"s2\">unviewer\\__main__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">63</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">check_version</span><span class=\"p\">(</span><span class=\"s1\">&#39;pyqtgraph&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;0.9.10&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;1&#39;</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript_py27\\labscript_utils\\__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">89</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">check_version</span>\n    <span class=\"n\">_reraise</span><span class=\"p\">(</span><span class=\"n\">exc_info</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript_py27\\labscript_utils\\__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">67</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_reraise</span>\n    <span class=\"k\">exec</span><span class=\"p\">(</span><span class=\"s1\">&#39;raise type, value, traceback&#39;</span><span class=\"p\">,</span> <span class=\"nb\">globals</span><span class=\"p\">(),</span> <span class=\"nb\">locals</span><span class=\"p\">())</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript_py27\\labscript_utils\\__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">52</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_get_version</span>\n    <span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"nb\">__import__</span><span class=\"p\">(</span><span class=\"n\">module_name</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript_py27\\labscript_utils\\double_import_denier.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">38</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">load_module</span>\n    <span class=\"k\">return</span> <span class=\"n\">imp</span><span class=\"o\">.</span><span class=\"n\">load_module</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pathname</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">description</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\Anaconda3\\envs\\labscript_py27\\lib\\site-packages\\pyqtgraph\\__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">.Qt</span> <span class=\"kn\">import</span> <span class=\"n\">QtGui</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\labscript_suite\\labscript_py27\\labscript_utils\\double_import_denier.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">38</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">load_module</span>\n    <span class=\"k\">return</span> <span class=\"n\">imp</span><span class=\"o\">.</span><span class=\"n\">load_module</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pathname</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">description</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\Anaconda3\\envs\\labscript_py27\\lib\\site-packages\\pyqtgraph\\Qt.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s2\">&quot;PyQtGraph requires either PyQt4 or PySide; neither package could be imported.&quot;</span><span class=\"p\">)</span>\n<span class=\"ne\">Exception</span><span class=\"p\">:</span> <span class=\"n\">PyQtGraph</span> <span class=\"n\">requires</span> <span class=\"n\">either</span> <span class=\"n\">PyQt4</span> <span class=\"ow\">or</span> <span class=\"n\">PySide</span><span class=\"p\">;</span> <span class=\"n\">neither</span> <span class=\"n\">package</span> <span class=\"n\">could</span> <span class=\"n\">be</span> <span class=\"n\">imported</span><span class=\"o\">.</span>\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "state": "invalid", "version": null, "edited_on": null, "created_on": "2018-04-30T04:29:38.092495+00:00", "milestone": null, "updated_on": "2018-04-30T07:50:18.895059+00:00", "type": "issue", "id": 18}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/19/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/19.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/19/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/19/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/19/reset-time-axis-button-doesnt-work-if-plot"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/19/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "reset time axis button doesn't work if plot view is scrolled down", "component": null, "votes": 0, "watches": 1, "content": {"raw": "If you have enough plots so that you get a scrollbar, and you scroll down, then the reset time axis button doesn't work. This is because the tiny plot at the top which links all the time axes together must be visible in order for the reset time axis button to work.", "markup": "markdown", "html": "<p>If you have enough plots so that you get a scrollbar, and you scroll down, then the reset time axis button doesn't work. This is because the tiny plot at the top which links all the time axes together must be visible in order for the reset time axis button to work.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-04-30T07:11:56.090657+00:00", "milestone": null, "updated_on": "2018-05-01T00:48:40.677507+00:00", "type": "issue", "id": 19}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/20/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/20.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/20/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/20/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/20/tooltip-should-give-y-value-of-trace-not"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/20/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Tooltip should give y-value of trace, not mouse location", "component": null, "votes": 0, "watches": 2, "content": {"raw": "At the moment, the tooltip displays three parameters:\r\n\r\n* Plot: <name of channel>\r\n* Time: <time corresponding to mouse pointer position>\r\n* Value: <y-axis value corresponding to mouse pointer position>\r\n\r\nTo me, it would make much more sense if \"Value\" gave the corresponding value of the output channel at the time corresponding to the horizontal position of the pointer, rather than the pointer position.\r\n\r\n@PhyNerd it won't let me assign you to this issue, however as you implemented the feature you may be interested in looking into this", "markup": "markdown", "html": "<p>At the moment, the tooltip displays three parameters:</p>\n<ul>\n<li>Plot: &lt;name of channel&gt;</li>\n<li>Time: &lt;time corresponding to mouse pointer position&gt;</li>\n<li>Value: &lt;y-axis value corresponding to mouse pointer position&gt;</li>\n</ul>\n<p>To me, it would make much more sense if \"Value\" gave the corresponding value of the output channel at the time corresponding to the horizontal position of the pointer, rather than the pointer position.</p>\n<p>@PhyNerd it won't let me assign you to this issue, however as you implemented the feature you may be interested in looking into this</p>", "type": "rendered"}, "assignee": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-05-02T04:57:09.489935+00:00", "milestone": null, "updated_on": "2018-05-11T00:35:00.526148+00:00", "type": "issue", "id": 20}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/21/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/21.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/21/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/21/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/21/shot-enabled-checkbox-should-be-relocated"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/21/vote"}}, "reporter": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "title": "Shot enabled checkbox should be relocated.", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently, the checkbox to enable the shot is located in the path column. This made sense a long time ago, but now with the addition of the \"shutter\" marker checkbox, the placement is a bit weird. I think we should move it to a new column, and make that column be the first.\r\n\r\nSo the header layout would be: |enabled|colour|shutters|path|", "markup": "markdown", "html": "<p>Currently, the checkbox to enable the shot is located in the path column. This made sense a long time ago, but now with the addition of the \"shutter\" marker checkbox, the placement is a bit weird. I think we should move it to a new column, and make that column be the first.</p>\n<p>So the header layout would be: |enabled|colour|shutters|path|</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-05-02T06:55:35.727842+00:00", "milestone": null, "updated_on": "2018-05-02T06:55:35.727842+00:00", "type": "issue", "id": 21}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/22/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/22.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/22/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/22/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/22/units"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/22/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Units", "component": null, "votes": 0, "watches": 2, "content": {"raw": "As far as I can tell, units are not yet implemented in runviewer. There are a couple of lines of code that try to set the units of the y-axis, but this does not seem to be fully implemented yet. Given that we have fancy unit conversions in BLACS, it would make sense to try to implement them in runviewer too! In almost all cases it would be more sensible to plot in a converted unit rather than the base, e.g. plot coil traces in amps, not volts on the control line, or AOM frequencies in MHz detuned from an atomic line, not Hz.\r\n\r\nI'm not sure what the best way to incorporate this into to GUI would be. Perhaps the easiest would be to include a selector box next to each channel in the list of channels in the lower left pane, rather than trying to have it incorporated into the graph y-axis. Then the values would have to be passed through the appropriate unit conversion class to generate the data to be plotted.", "markup": "markdown", "html": "<p>As far as I can tell, units are not yet implemented in runviewer. There are a couple of lines of code that try to set the units of the y-axis, but this does not seem to be fully implemented yet. Given that we have fancy unit conversions in BLACS, it would make sense to try to implement them in runviewer too! In almost all cases it would be more sensible to plot in a converted unit rather than the base, e.g. plot coil traces in amps, not volts on the control line, or AOM frequencies in MHz detuned from an atomic line, not Hz.</p>\n<p>I'm not sure what the best way to incorporate this into to GUI would be. Perhaps the easiest would be to include a selector box next to each channel in the list of channels in the lower left pane, rather than trying to have it incorporated into the graph y-axis. Then the values would have to be passed through the appropriate unit conversion class to generate the data to be plotted.</p>", "type": "rendered"}, "assignee": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "state": "new", "version": null, "edited_on": null, "created_on": "2018-05-03T01:41:20.043553+00:00", "milestone": null, "updated_on": "2018-05-03T02:38:27.225971+00:00", "type": "issue", "id": 22}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/23/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/23.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/23/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/23/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/23/latest-version-is-incompatible-with-pyqt4"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/23/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Latest version is incompatible with PyQt4", "component": null, "votes": 0, "watches": 1, "content": {"raw": "It turns out that I only tested the markers pull request #9 on a computer with PyQt5.\r\n\r\nI just tried using it on a computer still running PyQt4 and it crashed (sorry, didn't think to save the error message, something about not being able to check a NoneType or similar). Updating to PyQt5 resolved this.\r\n\r\nWe should either officially cut support for PyQt4 (i.e. don't try to import it, and if it's there but PyQt5 isn't, print a message advising the user to upgrade), or fix the code to be backwards compatible.", "markup": "markdown", "html": "<p>It turns out that I only tested the markers <a href=\"#!/labscript_suite/runviewer/pull-requests/9/markers\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #9</a> on a computer with PyQt5.</p>\n<p>I just tried using it on a computer still running PyQt4 and it crashed (sorry, didn't think to save the error message, something about not being able to check a NoneType or similar). Updating to PyQt5 resolved this.</p>\n<p>We should either officially cut support for PyQt4 (i.e. don't try to import it, and if it's there but PyQt5 isn't, print a message advising the user to upgrade), or fix the code to be backwards compatible.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-05-09T07:31:02.766278+00:00", "milestone": null, "updated_on": "2018-05-11T00:34:03.920465+00:00", "type": "issue", "id": 23}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/24/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/24.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/24/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/24/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/24/custom-scaling-for-nonlinear-time"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/24/vote"}}, "reporter": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "title": "Custom scaling for nonlinear time", "component": null, "votes": 0, "watches": 1, "content": {"raw": "To extend the functionality of nonlinear time, I propose that we introduce the ability to move markers by hand, by clicking & dragging them in the top markers plot area.\r\nThis would be active at all times, and instead of the current toggle button to switch between nonlinear time and linear time, there would be two reset push buttons, one to move the markers back to their 'natural' positions, corresponding to linear time, and one to move the markers to be evenly spaced, as they are in the current implementation of nonlinear time.\r\n\r\nWhen the markers are in their regular linear time positions, the x-axis should show time ticks, but once markers have been moved time will only be accessible via the tooltip (as it is in the current nonlinear time mode).\r\n\r\nFollowing on from discussion in issue #5, and discussions with @cbillington, I would suggest that the behavior of markers is similar to that of the columns in a file browser (or runmanager), where moving a marker re-scales the space to its left, and translates markers to its right.\r\n\r\nA basic example of this functionality, based on example code by @PhyNerd, is available here: https://pastebin.com/2PeQgwD4", "markup": "markdown", "html": "<p>To extend the functionality of nonlinear time, I propose that we introduce the ability to move markers by hand, by clicking &amp; dragging them in the top markers plot area.\nThis would be active at all times, and instead of the current toggle button to switch between nonlinear time and linear time, there would be two reset push buttons, one to move the markers back to their 'natural' positions, corresponding to linear time, and one to move the markers to be evenly spaced, as they are in the current implementation of nonlinear time.</p>\n<p>When the markers are in their regular linear time positions, the x-axis should show time ticks, but once markers have been moved time will only be accessible via the tooltip (as it is in the current nonlinear time mode).</p>\n<p>Following on from discussion in issue <a href=\"#!/labscript_suite/runviewer/issues/5/markers-and-nonlinear-timescale\" rel=\"nofollow\" title=\"Markers and nonlinear timescale\" class=\"ap-connect-link\"><s>#5</s></a>, and discussions with @cbillington, I would suggest that the behavior of markers is similar to that of the columns in a file browser (or runmanager), where moving a marker re-scales the space to its left, and translates markers to its right.</p>\n<p>A basic example of this functionality, based on example code by @PhyNerd, is available here: <a href=\"https://pastebin.com/2PeQgwD4\" rel=\"nofollow\" class=\"ap-connect-link\">https://pastebin.com/2PeQgwD4</a></p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-05-11T02:45:40.490486+00:00", "milestone": null, "updated_on": "2018-08-07T06:27:20.528629+00:00", "type": "issue", "id": 24}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "links": {"attachments": {"href": "data/repositories/labscript_suite/runviewer/issues/25/attachments_page=1.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/issues/25.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/25/watch"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/issues/25/comments_page=1.json"}, "html": {"href": "#!/labscript_suite/runviewer/issues/25/deleting-shot-sin-run-viewer-quicker"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/issues/25/vote"}}, "reporter": null, "title": "Deleting shot sin run viewer quicker", "component": null, "votes": 0, "watches": null, "content": {"raw": "Allow for the delete key to remove highlighted shots in run viewer. This can be done in BLACS but would be nice in run viewer too as it will save time rather than having to click a few buttons.", "markup": "markdown", "html": "<p>Allow for the delete key to remove highlighted shots in run viewer. This can be done in BLACS but would be nice in run viewer too as it will save time rather than having to click a few buttons.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-02-19T04:57:33.293194+00:00", "milestone": null, "updated_on": "2019-02-22T15:59:44.888042+00:00", "type": "issue", "id": 25}], "page": 1, "size": 25}