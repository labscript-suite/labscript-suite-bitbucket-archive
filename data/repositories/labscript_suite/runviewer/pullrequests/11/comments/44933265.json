{"links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/11/comments/44933265.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/11/_/diff#comment-44933265"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 11, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/11.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/11"}}, "title": "Shutter Times"}, "content": {"raw": "Great! Interface looks good (except for one minor issue I'll mention below)\n\nI'm reviewing the code now (rather than the interface):\n\n* The inner loop in `add_shutter_times` I suspect is inefficient (may only show up in testing if you have shutters on an NI card that has a high sample rate analog out ramp?). I suspect the following (untested) code is more efficient since it's implemented in numpy. It's very, very untested though so you might want to double check I haven't got an off by one error!\n\n```Python\nchange_indices = np.where(y_values[:-1] != y_values[1:])[0]\r\nchange_indices += 1 # use the index of the value that is changed to\r\nchange_values = zip(x_values[change_indices], y_values[change_indices])\r\nchange_values.insert(0, (x_values[0], y_values[0])) # insert first value\n```\n\n* The width of the colour column in the list of shots is now too narrow (because it is being auto resized I think). At least on my machine, I can't see the colour boxes in the drop down list (when trying to change the plot colour) due to the scrollbar. If you make the column wider by hand, you can see the colour boxes.  \n* `create_plot` and `update_plots` seem to share some very similar code. You might want to consider factoring it out into a separate function to avoid duplication. The main argument for this is that means you don't forget to update the code in both places when making a change! (In the future we're very likely to forget the code exists twice!) I mention this because it looks like there is still some left over code in `create_plot` to do with the colour of markers matching the plot colour which I think you've now undone?\n\n\u200c", "markup": "markdown", "html": "<p>Great! Interface looks good (except for one minor issue I'll mention below)</p>\n<p>I'm reviewing the code now (rather than the interface):</p>\n<ul>\n<li>The inner loop in <code>add_shutter_times</code> I suspect is inefficient (may only show up in testing if you have shutters on an NI card that has a high sample rate analog out ramp?). I suspect the following (untested) code is more efficient since it's implemented in numpy. It's very, very untested though so you might want to double check I haven't got an off by one error!</li>\n</ul>\n<div class=\"codehilite language-Python\"><pre><span></span><span class=\"n\">change_indices</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">y_values</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">y_values</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:])[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">change_indices</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span> <span class=\"c1\"># use the index of the value that is changed to</span>\n<span class=\"n\">change_values</span> <span class=\"o\">=</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">x_values</span><span class=\"p\">[</span><span class=\"n\">change_indices</span><span class=\"p\">],</span> <span class=\"n\">y_values</span><span class=\"p\">[</span><span class=\"n\">change_indices</span><span class=\"p\">])</span>\n<span class=\"n\">change_values</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">x_values</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">y_values</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span> <span class=\"c1\"># insert first value</span>\n</pre></div>\n\n\n<ul>\n<li>The width of the colour column in the list of shots is now too narrow (because it is being auto resized I think). At least on my machine, I can't see the colour boxes in the drop down list (when trying to change the plot colour) due to the scrollbar. If you make the column wider by hand, you can see the colour boxes.  </li>\n<li><code>create_plot</code> and <code>update_plots</code> seem to share some very similar code. You might want to consider factoring it out into a separate function to avoid duplication. The main argument for this is that means you don't forget to update the code in both places when making a change! (In the future we're very likely to forget the code exists twice!) I mention this because it looks like there is still some left over code in <code>create_plot</code> to do with the colour of markers matching the plot colour which I think you've now undone?</li>\n</ul>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2017-09-14T05:06:02.232002+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-09-14T05:06:02.234579+00:00", "type": "pullrequest_comment", "id": 44933265}