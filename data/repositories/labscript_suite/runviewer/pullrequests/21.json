{"rendered": {"description": {"raw": "Ported `resample` extension to Cython for easier maintenance and uniformity with other extensions (i.e. rfblaster extensions). I split off the platform independence stuff into a separate project called [`autocython`](http://autocython.readthedocs.io/en/latest/) since I end up writing exactly the same code to do this any time I do anything with Cython. `autocython` keeps all the compiled extensions in the same directory with a platform-specific suffix (only on Python 2, since Python 3 names extension .so and .pyd files with its own platform-specific suffixes already). You can compile for a new platform either by running runviewer (the compile will happen at import), or by running `python -m autocython` in the extension directory. I'll use the same method to get the rfblaster code compiling for Python 2 and 3. This introduces a dependence on `autocython`, which I can add as a dependency to the labscript installer, and I've added a check to `runviewer.resample` prompting anyone updating to install `autocython` from pip.\r\n\r\nCommits:\r\n\r\n* Ported resample extension to Cython, and add run-time compilation attempt\r\n    for platforms that have not had the extension precompiled.\r\n\r\n    The port is a straight copy-paste of resample4 from `__main__.py` with replacements\r\n    of len() and [-1] with the known length N of the arrays and N - 1 respectively.\r\n\r\n    Compilation no longer has a numpy dendendency since Cython has its own arrays.\r\n\r\n    The Cython extension does not hold the GIL, whereas I believe the C extension did.\r\n\r\n* Use autocython for platform abstraction and auto compiling.\r\n\r\n* Compile for linux\r\n\r\n* Compile for Windows\r\n\r\n* Compile for mac", "markup": "markdown", "html": "<p>Ported <code>resample</code> extension to Cython for easier maintenance and uniformity with other extensions (i.e. rfblaster extensions). I split off the platform independence stuff into a separate project called <a data-is-external-link=\"true\" href=\"http://autocython.readthedocs.io/en/latest/\" rel=\"nofollow\"><code>autocython</code></a> since I end up writing exactly the same code to do this any time I do anything with Cython. <code>autocython</code> keeps all the compiled extensions in the same directory with a platform-specific suffix (only on Python 2, since Python 3 names extension .so and .pyd files with its own platform-specific suffixes already). You can compile for a new platform either by running runviewer (the compile will happen at import), or by running <code>python -m autocython</code> in the extension directory. I'll use the same method to get the rfblaster code compiling for Python 2 and 3. This introduces a dependence on <code>autocython</code>, which I can add as a dependency to the labscript installer, and I've added a check to <code>runviewer.resample</code> prompting anyone updating to install <code>autocython</code> from pip.</p>\n<p>Commits:</p>\n<ul>\n<li>\n<p>Ported resample extension to Cython, and add run-time compilation attempt\n    for platforms that have not had the extension precompiled.</p>\n<p>The port is a straight copy-paste of resample4 from <code>__main__.py</code> with replacements\nof len() and [-1] with the known length N of the arrays and N - 1 respectively.</p>\n<p>Compilation no longer has a numpy dendendency since Cython has its own arrays.</p>\n<p>The Cython extension does not hold the GIL, whereas I believe the C extension did.</p>\n</li>\n<li>\n<p>Use autocython for platform abstraction and auto compiling.</p>\n</li>\n<li>\n<p>Compile for linux</p>\n</li>\n<li>\n<p>Compile for Windows</p>\n</li>\n<li>\n<p>Compile for mac</p>\n</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Port resample to Cython", "markup": "markdown", "html": "<p>Port resample to Cython</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Ported `resample` extension to Cython for easier maintenance and uniformity with other extensions (i.e. rfblaster extensions). I split off the platform independence stuff into a separate project called [`autocython`](http://autocython.readthedocs.io/en/latest/) since I end up writing exactly the same code to do this any time I do anything with Cython. `autocython` keeps all the compiled extensions in the same directory with a platform-specific suffix (only on Python 2, since Python 3 names extension .so and .pyd files with its own platform-specific suffixes already). You can compile for a new platform either by running runviewer (the compile will happen at import), or by running `python -m autocython` in the extension directory. I'll use the same method to get the rfblaster code compiling for Python 2 and 3. This introduces a dependence on `autocython`, which I can add as a dependency to the labscript installer, and I've added a check to `runviewer.resample` prompting anyone updating to install `autocython` from pip.\r\n\r\nCommits:\r\n\r\n* Ported resample extension to Cython, and add run-time compilation attempt\r\n    for platforms that have not had the extension precompiled.\r\n\r\n    The port is a straight copy-paste of resample4 from `__main__.py` with replacements\r\n    of len() and [-1] with the known length N of the arrays and N - 1 respectively.\r\n\r\n    Compilation no longer has a numpy dendendency since Cython has its own arrays.\r\n\r\n    The Cython extension does not hold the GIL, whereas I believe the C extension did.\r\n\r\n* Use autocython for platform abstraction and auto compiling.\r\n\r\n* Compile for linux\r\n\r\n* Compile for Windows\r\n\r\n* Compile for mac", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/pullrequests/21/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/diffstat/labscript_suite/runviewer:8486ad106167%0Dfee96c61935b?from_pullrequest_id=21"}, "commits": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/21/commits.json"}, "self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/21.json"}, "comments": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/21/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/pullrequests/21/merge"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/21"}, "activity": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/21/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/diff/labscript_suite/runviewer:8486ad106167%0Dfee96c61935b?from_pullrequest_id=21"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/labscript_suite/runviewer/pullrequests/21/approve"}, "statuses": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/21/statuses_page=1.json"}}, "title": "Port resample to Cython", "close_source_branch": true, "reviewers": [{"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}], "id": 21, "destination": {"commit": {"hash": "fee96c61935b", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/commit/fee96c61935b.json"}, "html": {"href": "#!/labscript_suite/runviewer/commits/fee96c61935b"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "branch": {"name": "default"}}, "created_on": "2018-03-23T03:20:52.840653+00:00", "summary": {"raw": "Ported `resample` extension to Cython for easier maintenance and uniformity with other extensions (i.e. rfblaster extensions). I split off the platform independence stuff into a separate project called [`autocython`](http://autocython.readthedocs.io/en/latest/) since I end up writing exactly the same code to do this any time I do anything with Cython. `autocython` keeps all the compiled extensions in the same directory with a platform-specific suffix (only on Python 2, since Python 3 names extension .so and .pyd files with its own platform-specific suffixes already). You can compile for a new platform either by running runviewer (the compile will happen at import), or by running `python -m autocython` in the extension directory. I'll use the same method to get the rfblaster code compiling for Python 2 and 3. This introduces a dependence on `autocython`, which I can add as a dependency to the labscript installer, and I've added a check to `runviewer.resample` prompting anyone updating to install `autocython` from pip.\r\n\r\nCommits:\r\n\r\n* Ported resample extension to Cython, and add run-time compilation attempt\r\n    for platforms that have not had the extension precompiled.\r\n\r\n    The port is a straight copy-paste of resample4 from `__main__.py` with replacements\r\n    of len() and [-1] with the known length N of the arrays and N - 1 respectively.\r\n\r\n    Compilation no longer has a numpy dendendency since Cython has its own arrays.\r\n\r\n    The Cython extension does not hold the GIL, whereas I believe the C extension did.\r\n\r\n* Use autocython for platform abstraction and auto compiling.\r\n\r\n* Compile for linux\r\n\r\n* Compile for Windows\r\n\r\n* Compile for mac", "markup": "markdown", "html": "<p>Ported <code>resample</code> extension to Cython for easier maintenance and uniformity with other extensions (i.e. rfblaster extensions). I split off the platform independence stuff into a separate project called <a data-is-external-link=\"true\" href=\"http://autocython.readthedocs.io/en/latest/\" rel=\"nofollow\"><code>autocython</code></a> since I end up writing exactly the same code to do this any time I do anything with Cython. <code>autocython</code> keeps all the compiled extensions in the same directory with a platform-specific suffix (only on Python 2, since Python 3 names extension .so and .pyd files with its own platform-specific suffixes already). You can compile for a new platform either by running runviewer (the compile will happen at import), or by running <code>python -m autocython</code> in the extension directory. I'll use the same method to get the rfblaster code compiling for Python 2 and 3. This introduces a dependence on <code>autocython</code>, which I can add as a dependency to the labscript installer, and I've added a check to <code>runviewer.resample</code> prompting anyone updating to install <code>autocython</code> from pip.</p>\n<p>Commits:</p>\n<ul>\n<li>\n<p>Ported resample extension to Cython, and add run-time compilation attempt\n    for platforms that have not had the extension precompiled.</p>\n<p>The port is a straight copy-paste of resample4 from <code>__main__.py</code> with replacements\nof len() and [-1] with the known length N of the arrays and N - 1 respectively.</p>\n<p>Compilation no longer has a numpy dendendency since Cython has its own arrays.</p>\n<p>The Cython extension does not hold the GIL, whereas I believe the C extension did.</p>\n</li>\n<li>\n<p>Use autocython for platform abstraction and auto compiling.</p>\n</li>\n<li>\n<p>Compile for linux</p>\n</li>\n<li>\n<p>Compile for Windows</p>\n</li>\n<li>\n<p>Compile for mac</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "097b8cd81290", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer/commit/097b8cd81290"}, "html": {"href": "#!/cbillington/runviewer/commits/097b8cd81290"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer"}, "html": {"href": "#!/cbillington/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3069dd3f-2a1f-409f-bebf-21e0965d6671}ts=python"}}, "type": "repository", "name": "runviewer", "full_name": "cbillington/runviewer", "uuid": "{3069dd3f-2a1f-409f-bebf-21e0965d6671}"}, "branch": {"name": "cython"}}, "comment_count": 7, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2018-03-23T07:37:00.412335+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "REVIEWER", "participated_on": "2018-03-23T03:44:52.310582+00:00", "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"role": "REVIEWER", "participated_on": "2018-03-23T08:44:11.960755+00:00", "type": "participant", "approved": true, "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}}], "reason": "", "updated_on": "2018-03-27T04:49:42.769501+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "8486ad106167", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/commit/8486ad106167.json"}, "html": {"href": "#!/labscript_suite/runviewer/commits/8486ad106167"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}