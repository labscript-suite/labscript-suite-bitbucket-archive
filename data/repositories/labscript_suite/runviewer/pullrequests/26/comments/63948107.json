{"links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/26/comments/63948107.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/26/_/diff#comment-63948107"}}, "parent": {"id": 63855137, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/26/comments/63855137.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/26/_/diff#comment-63855137"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/26.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/26"}}, "title": "Non linear Time"}, "content": {"raw": "I think I've worked out what is going on. It is dependent on your numpy version. Yesterday when downgrading to PyQt4 conda downgraded my numpy (which is why I hadn't seen this in previous tests of nonlinear time code), but when going back to PyQt5 it didn't update numpy again.\n\nIt seems as though when time is nonlinear, the datatype of \"unscaled_t\" is a numpy array (the array contains a single float64 value). In numpy 1.11.3, which is what I was downgraded to, this apparently does not support the .f formatting. On numpy 1.14.3 it does, so the code works fine.\n\nWe should either use check that the user has an up to date numpy, or wrap unscaled_t in float() on line 440 as follows:\n\n```\n#!python\n\ntext = \"Plot: {} \\nTime: {:.9f}s\\nValue: {}\".format(name, float(unscaled_t), y_val)\n```\n", "markup": "markdown", "html": "<p>I think I've worked out what is going on. It is dependent on your numpy version. Yesterday when downgrading to PyQt4 conda downgraded my numpy (which is why I hadn't seen this in previous tests of nonlinear time code), but when going back to PyQt5 it didn't update numpy again.</p>\n<p>It seems as though when time is nonlinear, the datatype of \"unscaled_t\" is a numpy array (the array contains a single float64 value). In numpy 1.11.3, which is what I was downgraded to, this apparently does not support the .f formatting. On numpy 1.14.3 it does, so the code works fine.</p>\n<p>We should either use check that the user has an up to date numpy, or wrap unscaled_t in float() on line 440 as follows:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Plot: {} </span><span class=\"se\">\\n</span><span class=\"s2\">Time: {:.9f}s</span><span class=\"se\">\\n</span><span class=\"s2\">Value: {}&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">unscaled_t</span><span class=\"p\">),</span> <span class=\"n\">y_val</span><span class=\"p\">)</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-05-11T00:26:49.781899+00:00", "user": {"display_name": "Shaun Johnstone", "uuid": "{652df738-313d-472c-b7b5-a3f8f98a3322}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D"}, "html": {"href": "https://bitbucket.org/%7B652df738-313d-472c-b7b5-a3f8f98a3322%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/38984f1761fc67ce892911496abee619d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSJ-3.png"}}, "nickname": "shjohnst", "type": "user", "account_id": "557058:1b9a15fb-8e4f-407e-b7b9-567c5e1fa1b4"}, "updated_on": "2018-05-11T00:26:49.787906+00:00", "type": "pullrequest_comment", "id": 63948107}