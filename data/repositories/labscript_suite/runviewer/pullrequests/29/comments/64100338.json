{"links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/29/comments/64100338.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/29/_/diff#comment-64100338"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/29.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/29"}}, "title": "New Nonlinear time"}, "content": {"raw": "I looked at this for a few minutes and here are a few thoughts:\n\n1. The markers are glitchy during fast movement because of a race condition. If rescaling happens a second time before all markers were moved to their new position \\(by the last rescaling\\) the markers can be all over the place after movement.\n2. Linear spacing of markers seems to be broken:![bug.png](https://bitbucket.org/repo/AeyynE/images/4182746106-bug.png 'bug.png')  \n  I can provide you with a shot file if you want to reproduce.\n3. Resampling should not happen until the end of marker movement. You might want to move the `self._resample = True` to `_marker_moved` that fixes a lot of glitching for me. This function also does not need to call `_marker_moving` again as that has been triggered before anyway.\n4. I\u2019m no fan of making `self.old_scalehandler` a object variable as it is just a helper variable and does not need to be stored over longer periods of time. It also seems that you are not consistent in updating it each time  `self.scalehandler` changes.\n5. On line 590 you start a new loop and I\u2019m not sure why. I think you can get rid of the variable `new_marker_times` and move the marker movement code to the loop before.\n6. I think you can drop lines 593-594\n\nI might have a few more comments later and maybe a few solutions.", "markup": "markdown", "html": "<p>I looked at this for a few minutes and here are a few thoughts:</p>\n<ol>\n<li>The markers are glitchy during fast movement because of a race condition. If rescaling happens a second time before all markers were moved to their new position (by the last rescaling) the markers can be all over the place after movement.</li>\n<li>Linear spacing of markers seems to be broken:<img alt=\"bug.png\" src=\"data/bitbucket.org/repo/AeyynE/images/4182746106-bug.png\" title=\"bug.png\" /><br />\n  I can provide you with a shot file if you want to reproduce.</li>\n<li>Resampling should not happen until the end of marker movement. You might want to move the <code>self._resample = True</code> to <code>_marker_moved</code> that fixes a lot of glitching for me. This function also does not need to call <code>_marker_moving</code> again as that has been triggered before anyway.</li>\n<li>I\u2019m no fan of making <code>self.old_scalehandler</code> a object variable as it is just a helper variable and does not need to be stored over longer periods of time. It also seems that you are not consistent in updating it each time  <code>self.scalehandler</code> changes.</li>\n<li>On line 590 you start a new loop and I\u2019m not sure why. I think you can get rid of the variable <code>new_marker_times</code> and move the marker movement code to the loop before.</li>\n<li>I think you can drop lines 593-594</li>\n</ol>\n<p>I might have a few more comments later and maybe a few solutions.</p>", "type": "rendered"}, "created_on": "2018-05-14T07:59:05.305463+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2018-05-14T07:59:05.411753+00:00", "type": "pullrequest_comment", "id": 64100338}