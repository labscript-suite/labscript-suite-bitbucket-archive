{"pagelen": 50, "values": [{"update": {"description": "(with backward compatibility - the resulting repo can still be just cloned into the python import path as is the case on existing labscript suite installs)\r\n\r\n* Move files into standard Python package repository layout.\r\n\r\n* Add setup.py, and shim modules for `__init__.py` and `__main__.py`. The shim `__init__.py` does a bit of magic to redirect the import to the package enclosed one level lower. The `__main__.py` runs `labscript_utils.winshell.fix_shortcuts()` if `labscript_utils` is new enough, and then runs the new shortcut. If `labscript_utils` is not new enough or if not on Windows, it runs the real `__main__.py` (in which case the user will get an error about `labscript_utils` not being new enough). This creates a pretty seamless upgrade - if one updates the existing runviewer repository within labscript_utils, everything will continue to work.\r\n\r\n* Define `runviwer_dir` in `__init__.py` based on `__file__`. Use it for opening files in package dir: splash screen svg and .ui file. Do not chdir() at startup. Require labscript_utils 2.15.0 which has check_version and winshell functions compatible with the new repository layout.\r\n\r\n* Recompile resample for Python 3.8 linux, windows 32 and 64 bit\r\n\r\nThis requires [labscript_utils PR #96](#!/labscript_suite/labscript_utils/pull-requests/96/preparations-for-apps-to-be-restructured) for the `winshell` and `check_version` changes, and [labscript_utils PR #95](#!/labscript_suite/labscript_utils/pull-requests/95) for the change to not create log files in the package install directory..\r\n\r\nWith those two pull requests in `labscript_utils`, runviewer works as a regular PyPI package, I've uploaded it to `test.pypi.org`, and it can be installed with:\r\n\r\n`pip install --index-url https://test.pypi.org/simple/ runviewer`\r\n\r\nAfter running that and then `python -m labscript_utils.winshell --fix_shortcuts`, you'll be running runviewer from a regular package! But the repo is still entirely compatible with being run from within the labscript suite install directory.", "title": "Restructure into standard Python package", "destination": {"commit": {"hash": "cde474f6f5b9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/commit/cde474f6f5b9.json"}, "html": {"href": "#!/labscript_suite/runviewer/commits/cde474f6f5b9"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "881d16bd5a15", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer/commit/881d16bd5a15"}, "html": {"href": "#!/cbillington/runviewer/commits/881d16bd5a15"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer"}, "html": {"href": "#!/cbillington/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3069dd3f-2a1f-409f-bebf-21e0965d6671}ts=python"}}, "type": "repository", "name": "runviewer", "full_name": "cbillington/runviewer", "uuid": "{3069dd3f-2a1f-409f-bebf-21e0965d6671}"}, "branch": {"name": "restructure"}}, "state": "MERGED", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2020-01-28T21:31:40.108599+00:00"}, "pull_request": {"type": "pullrequest", "id": 37, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37"}}, "title": "Restructure into standard Python package"}}, {"update": {"description": "(with backward compatibility - the resulting repo can still be just cloned into the python import path as is the case on existing labscript suite installs)\r\n\r\n* Move files into standard Python package repository layout.\r\n\r\n* Add setup.py, and shim modules for `__init__.py` and `__main__.py`. The shim `__init__.py` does a bit of magic to redirect the import to the package enclosed one level lower. The `__main__.py` runs `labscript_utils.winshell.fix_shortcuts()` if `labscript_utils` is new enough, and then runs the new shortcut. If `labscript_utils` is not new enough or if not on Windows, it runs the real `__main__.py` (in which case the user will get an error about `labscript_utils` not being new enough). This creates a pretty seamless upgrade - if one updates the existing runviewer repository within labscript_utils, everything will continue to work.\r\n\r\n* Define `runviwer_dir` in `__init__.py` based on `__file__`. Use it for opening files in package dir: splash screen svg and .ui file. Do not chdir() at startup. Require labscript_utils 2.15.0 which has check_version and winshell functions compatible with the new repository layout.\r\n\r\n* Recompile resample for Python 3.8 linux, windows 32 and 64 bit\r\n\r\nThis requires [labscript_utils PR #96](#!/labscript_suite/labscript_utils/pull-requests/96/preparations-for-apps-to-be-restructured) for the `winshell` and `check_version` changes, and [labscript_utils PR #95](#!/labscript_suite/labscript_utils/pull-requests/95) for the change to not create log files in the package install directory..\r\n\r\nWith those two pull requests in `labscript_utils`, runviewer works as a regular PyPI package, I've uploaded it to `test.pypi.org`, and it can be installed with:\r\n\r\n`pip install --index-url https://test.pypi.org/simple/ runviewer`\r\n\r\nAfter running that and then `python -m labscript_utils.winshell --fix_shortcuts`, you'll be running runviewer from a regular package! But the repo is still entirely compatible with being run from within the labscript suite install directory.", "title": "Restructure into standard Python package", "destination": {"commit": {"hash": "cde474f6f5b9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/commit/cde474f6f5b9.json"}, "html": {"href": "#!/labscript_suite/runviewer/commits/cde474f6f5b9"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "881d16bd5a15", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer/commit/881d16bd5a15"}, "html": {"href": "#!/cbillington/runviewer/commits/881d16bd5a15"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer"}, "html": {"href": "#!/cbillington/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3069dd3f-2a1f-409f-bebf-21e0965d6671}ts=python"}}, "type": "repository", "name": "runviewer", "full_name": "cbillington/runviewer", "uuid": "{3069dd3f-2a1f-409f-bebf-21e0965d6671}"}, "branch": {"name": "restructure"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2020-01-28T21:31:38.416163+00:00"}, "pull_request": {"type": "pullrequest", "id": 37, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37"}}, "title": "Restructure into standard Python package"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37/comments/133513994.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37/_/diff#comment-133513994"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 37, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37"}}, "title": "Restructure into standard Python package"}, "content": {"raw": "Merging. Can remove the \u2018shim\u2019 once a replacement \u2018dev\u2019 setup\u2014where each repository directory is individually added to the path instead of all of the `labscript_suite`directory\u2014is in place.\n\n\u200c", "markup": "markdown", "html": "<p>Merging. Can remove the \u2018shim\u2019 once a replacement \u2018dev\u2019 setup\u2014where each repository directory is individually added to the path instead of all of the <code>labscript_suite</code>directory\u2014is in place.</p>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2020-01-28T21:31:33.752457+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2020-01-28T21:31:33.758977+00:00", "type": "pullrequest_comment", "id": 133513994}, "pull_request": {"type": "pullrequest", "id": 37, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37"}}, "title": "Restructure into standard Python package"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37/comments/130224792.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37/_/diff#comment-130224792"}}, "parent": {"id": 130224757, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37/comments/130224757.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37/_/diff#comment-130224757"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 37, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37"}}, "title": "Restructure into standard Python package"}, "content": {"raw": "Yep - will have to add BLACS, labscript\\_utils, labscript\\_devices dependencies once they are packages that can be depended on, and a run-time check on whether a labscript suite \u2018profile\u2019 has been created \\(though that runtime check will probably be in labsript\\_utils rather than runviewer\\) - the idea being that you will install packages and then run a command to set up a \u2018profile\u2019 containing labconfig, userlib, etc. See [here](#!/labscript_suite/installer/issues/31/tasks-required-before-moving-to-standard) for details.", "markup": "markdown", "html": "<p>Yep - will have to add BLACS, labscript_utils, labscript_devices dependencies once they are packages that can be depended on, and a run-time check on whether a labscript suite \u2018profile\u2019 has been created (though that runtime check will probably be in labsript_utils rather than runviewer) - the idea being that you will install packages and then run a command to set up a \u2018profile\u2019 containing labconfig, userlib, etc. See <a data-is-external-link=\"true\" href=\"#!/labscript_suite/installer/issues/31/tasks-required-before-moving-to-standard\" rel=\"nofollow\">here</a> for details.</p>", "type": "rendered"}, "created_on": "2020-01-01T05:54:11.083851+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2020-01-01T05:54:11.090557+00:00", "type": "pullrequest_comment", "id": 130224792}, "pull_request": {"type": "pullrequest", "id": 37, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37"}}, "title": "Restructure into standard Python package"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37/comments/130224757.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37/_/diff#comment-130224757"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 37, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37"}}, "title": "Restructure into standard Python package"}, "content": {"raw": "In addition to labscript\\_utils, this package also depends on blacs, labscript, labscript\\_devices, and a valid labconfig \\(whose location must be detected from labscript\\_utils.labconfig.config\\_prefix\\).", "markup": "markdown", "html": "<p>In addition to labscript_utils, this package also depends on blacs, labscript, labscript_devices, and a valid labconfig (whose location must be detected from labscript_utils.labconfig.config_prefix).</p>", "type": "rendered"}, "created_on": "2020-01-01T05:44:09.296620+00:00", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}, "updated_on": "2020-01-01T05:44:09.301375+00:00", "type": "pullrequest_comment", "id": 130224757}, "pull_request": {"type": "pullrequest", "id": 37, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37"}}, "title": "Restructure into standard Python package"}}, {"update": {"description": "(with backward compatibility - the resulting repo can still be just cloned into the python import path as is the case on existing labscript suite installs)\r\n\r\n* Move files into standard Python package repository layout.\r\n\r\n* Add setup.py, and shim modules for `__init__.py` and `__main__.py`. The shim `__init__.py` does a bit of magic to redirect the import to the package enclosed one level lower. The `__main__.py` runs `labscript_utils.winshell.fix_shortcuts()` if `labscript_utils` is new enough, and then runs the new shortcut. If `labscript_utils` is not new enough or if not on Windows, it runs the real `__main__.py` (in which case the user will get an error about `labscript_utils` not being new enough). This creates a pretty seamless upgrade - if one updates the existing runviewer repository within labscript_utils, everything will continue to work.\r\n\r\n* Define `runviwer_dir` in `__init__.py` based on `__file__`. Use it for opening files in package dir: splash screen svg and .ui file. Do not chdir() at startup. Require labscript_utils 2.15.0 which has check_version and winshell functions compatible with the new repository layout.\r\n\r\n* Recompile resample for Python 3.8 linux, windows 32 and 64 bit\r\n\r\nThis requires [labscript_utils PR #96](#!/labscript_suite/labscript_utils/pull-requests/96/preparations-for-apps-to-be-restructured) for the `winshell` and `check_version` changes, and [labscript_utils PR #95](#!/labscript_suite/labscript_utils/pull-requests/95) for the change to not create log files in the package install directory..\r\n\r\nWith those two pull requests in `labscript_utils`, runviewer works as a regular PyPI package, I've uploaded it to `test.pypi.org`, and it can be installed with:\r\n\r\n`pip install --index-url https://test.pypi.org/simple/ runviewer`\r\n\r\nAfter running that and then `python -m labscript_utils.winshell --fix_shortcuts`, you'll be running runviewer from a regular package! But the repo is still entirely compatible with being run from within the labscript suite install directory.", "title": "Restructure into standard Python package", "destination": {"commit": {"hash": "cde474f6f5b9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/commit/cde474f6f5b9.json"}, "html": {"href": "#!/labscript_suite/runviewer/commits/cde474f6f5b9"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "881d16bd5a15", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer/commit/881d16bd5a15"}, "html": {"href": "#!/cbillington/runviewer/commits/881d16bd5a15"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer"}, "html": {"href": "#!/cbillington/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3069dd3f-2a1f-409f-bebf-21e0965d6671}ts=python"}}, "type": "repository", "name": "runviewer", "full_name": "cbillington/runviewer", "uuid": "{3069dd3f-2a1f-409f-bebf-21e0965d6671}"}, "branch": {"name": "restructure"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-12-04T01:53:52.301812+00:00"}, "pull_request": {"type": "pullrequest", "id": 37, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37"}}, "title": "Restructure into standard Python package"}}, {"comment": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37/comments/126927530.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37/_/diff#comment-126927530"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 37, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37"}}, "title": "Restructure into standard Python package"}, "content": {"raw": "\u200c\n\nThe diffs are meaningless because of the renames. Here\u2019s the diff from all the commits from the second one onward, since all file moving happened in the first commit:\n\n```diff\ndiff -r c28ad91c637a .hgignore\n--- a/.hgignore\tFri Nov 29 18:03:59 2019 -0500\n+++ b/.hgignore\tSun Dec 01 16:43:38 2019 -0500\n@@ -1,3 +1,9 @@\n syntax: glob\n-*pyc\n+*.pyc\n runviewer.log\n+.eggs\n+build\n+conda_build\n+dist\n+conda_dist\n+*.egg-info\n\\ No newline at end of file\ndiff -r c28ad91c637a __init__.py\n--- /dev/null\tThu Jan 01 00:00:00 1970 +0000\n+++ b/__init__.py\tSun Dec 01 16:43:38 2019 -0500\n@@ -0,0 +1,13 @@\n+# This is a shim to the real package one subfolder below. It exists for backward\n+# compatibility with installations from before the restructuring of this project's\n+# repository into the usual structure for Python packages. This allows these\n+# installations to continue functioning and being updatable as we switch the\n+# repositories to the new repo layout one-at-a-time.\n+import sys\n+import os\n+try:\n+    sys.path.insert(0, os.path.dirname(os.path.realpath(__file__)))\n+    del sys.modules[__name__]\n+    __import__(__name__)\n+finally:\n+    del sys.path[0]\ndiff -r c28ad91c637a __main__.py\n--- /dev/null\tThu Jan 01 00:00:00 1970 +0000\n+++ b/__main__.py\tSun Dec 01 16:43:38 2019 -0500\n@@ -0,0 +1,29 @@\n+# This is a shim to the real __main__.py. See __init__.py in this directory for an\n+# explanation. Redirecting this file in addition to the package is necessary since the\n+# launchers execute this file directly, not via import machinery. This file will fix the\n+# lasunchers, if labscript_utils is new enough, to point to the real __main__.py.\n+\n+import sys\n+import os\n+here = os.path.dirname(os.path.realpath(__file__))\n+name = os.path.basename(here)\n+if os.name == 'nt':\n+    from labscript_utils import check_version, VersionException\n+    # If labscript_utils is new enough, fix the shortcuts so that they point to the new\n+    # location of __main__.py, then run the new shortcut and quit\n+    try:\n+        check_version('labscript_utils', '2.15', '3')\n+    except VersionException:\n+        pass\n+    else:\n+        from labscript_utils import labscript_suite_profile\n+        from labscript_utils.winshell import fix_shortcuts, launcher_name\n+        fix_shortcuts()\n+        shortcut = os.path.join(labscript_suite_profile, launcher_name(name))\n+        os.startfile(shortcut)\n+        sys.exit(0)\n+\n+# Otherwise just run the real __main__.py. The user will get an error saying\n+# to update labscript_utils\n+import runpy\n+runpy.run_path(os.path.join(here, name, '__main__.py'), run_name='__main__')\n\\ No newline at end of file\ndiff -r c28ad91c637a runviewer/__init__.py\n--- a/runviewer/__init__.py\tFri Nov 29 18:03:59 2019 -0500\n+++ b/runviewer/__init__.py\tSun Dec 01 16:43:38 2019 -0500\n@@ -10,5 +10,7 @@\n # the project for the full license.                                 #\n #                                                                   #\n #####################################################################\n+import os\n \n __version__ = '2.3.0'\n+runviewer_dir = os.path.dirname(os.path.realpath(__file__))\ndiff -r c28ad91c637a runviewer/__main__.py\n--- a/runviewer/__main__.py\tFri Nov 29 18:03:59 2019 -0500\n+++ b/runviewer/__main__.py\tSun Dec 01 16:43:38 2019 -0500\n@@ -21,10 +21,11 @@\n except ImportError:\n     raise ImportError('Require labscript_utils > 2.1.0')\n \n-check_version('labscript_utils', '2.10.0', '3')\n+check_version('labscript_utils', '2.15.0', '3')\n # Splash screen\n+from runviewer import runviewer_dir\n from labscript_utils.splash import Splash\n-splash = Splash(os.path.join(os.path.dirname(__file__), 'runviewer.svg'))\n+splash = Splash(os.path.join(runviewer_dir, 'runviewer.svg'))\n splash.show()\n \n splash.update_text('importing standard library modules')\n@@ -46,9 +47,6 @@\n # Quit on ctrl-c\n signal.signal(signal.SIGINT, signal.SIG_DFL)\n \n-# Set working directory to runviewer folder, resolving symlinks\n-runviewer_dir = os.path.dirname(os.path.realpath(__file__))\n-os.chdir(runviewer_dir)\n \n splash.update_text('importing Qt')\n check_version('qtutils', '2.0.0', '3.0.0')\n@@ -243,7 +241,7 @@\n class RunViewer(object):\n     def __init__(self, exp_config):\n         splash.update_text('loading graphical interface')\n-        self.ui = UiLoader().load(os.path.join(os.path.dirname(os.path.realpath(__file__)), 'main.ui'), RunviewerMainWindow())\n+        self.ui = UiLoader().load(os.path.join(runviewer_dir, 'main.ui'), RunviewerMainWindow())\n \n         # setup shot treeview model\n         self.shot_model = QStandardItemModel()\ndiff -r c28ad91c637a runviewer/resample/autocython_compile_state.json\n--- a/runviewer/resample/autocython_compile_state.json\tFri Nov 29 18:03:59 2019 -0500\n+++ b/runviewer/resample/autocython_compile_state.json\tSun Dec 01 16:43:38 2019 -0500\n@@ -19,6 +19,16 @@\n         \"setup.py\": \"2717ccaf1ef62b0dac38b67613bfc703b9f313d76c8ac35dee1a8ea2f58940b7\",\n         \"so\": \"dcbb2da1b40ec83a535363fd4a3086d613aa7f3b757a4cda52452f908b6c7c84\"\n     },\n+    \"resample.cp38-win32.pyd\": {\n+        \"pyx\": \"2ce9098cc8a417339614b97bdae1a54f333308bba5d680b1237ea835ecc819e0\",\n+        \"setup.py\": \"2717ccaf1ef62b0dac38b67613bfc703b9f313d76c8ac35dee1a8ea2f58940b7\",\n+        \"so\": \"4b230b87545cf48e36f954056f9bd1b1bb2a34f2e0ab90144a6b3e5941ef15ef\"\n+    },\n+    \"resample.cp38-win_amd64.pyd\": {\n+        \"pyx\": \"2ce9098cc8a417339614b97bdae1a54f333308bba5d680b1237ea835ecc819e0\",\n+        \"setup.py\": \"2717ccaf1ef62b0dac38b67613bfc703b9f313d76c8ac35dee1a8ea2f58940b7\",\n+        \"so\": \"cba9ad71ed3e2a07fa4959f2767bd23174a2b79f5a5753bd73738d8440550e06\"\n+    },\n     \"resample.cpython-36m-darwin.so\": {\n         \"pyx\": \"2ce9098cc8a417339614b97bdae1a54f333308bba5d680b1237ea835ecc819e0\",\n         \"setup.py\": \"2717ccaf1ef62b0dac38b67613bfc703b9f313d76c8ac35dee1a8ea2f58940b7\",\n@@ -39,6 +49,11 @@\n         \"setup.py\": \"2717ccaf1ef62b0dac38b67613bfc703b9f313d76c8ac35dee1a8ea2f58940b7\",\n         \"so\": \"254103913345527f214fc9d0db97f4c3b75de24737ae6af446c82c4c1cea8688\"\n     },\n+    \"resample.cpython-38-x86_64-linux-gnu.so\": {\n+        \"pyx\": \"2ce9098cc8a417339614b97bdae1a54f333308bba5d680b1237ea835ecc819e0\",\n+        \"setup.py\": \"2717ccaf1ef62b0dac38b67613bfc703b9f313d76c8ac35dee1a8ea2f58940b7\",\n+        \"so\": \"7738de3042f5db11972ba7bc48034b895ad58c4080a6271349359a7eb6c5d0cb\"\n+    },\n     \"resample_py27_darwin_64bit.so\": {\n         \"pyx\": \"2ce9098cc8a417339614b97bdae1a54f333308bba5d680b1237ea835ecc819e0\",\n         \"setup.py\": \"2717ccaf1ef62b0dac38b67613bfc703b9f313d76c8ac35dee1a8ea2f58940b7\",\ndiff -r c28ad91c637a runviewer/resample/resample.cp38-win32.pyd\nBinary file runviewer/resample/resample.cp38-win32.pyd has changed\ndiff -r c28ad91c637a runviewer/resample/resample.cp38-win_amd64.pyd\nBinary file runviewer/resample/resample.cp38-win_amd64.pyd has changed\ndiff -r c28ad91c637a runviewer/resample/resample.cpython-38-x86_64-linux-gnu.so\nBinary file runviewer/resample/resample.cpython-38-x86_64-linux-gnu.so has changed\ndiff -r c28ad91c637a setup.py\n--- /dev/null\tThu Jan 01 00:00:00 1970 +0000\n+++ b/setup.py\tSun Dec 01 16:43:38 2019 -0500\n@@ -0,0 +1,95 @@\n+# USAGE NOTES\n+#\n+# Make a PyPI release tarball with:\n+#\n+#     python setup.py sdist\n+#\n+# Upload to test PyPI with:\n+#\n+#     twine upload --repository-url https://test.pypi.org/legacy/ dist/*\n+#\n+# Install from test PyPI with:\n+#\n+#     pip install --index-url https://test.pypi.org/simple/ runviewer\n+#\n+# Upload to real PyPI with:\n+#\n+#     twine upload dist/*\n+#\n+# Build conda packages for all platforms (in a conda environment with conda-build and\n+# conda-verify installed) with:\n+#\n+#     python setup.py conda_dist\n+#\n+# Upoad to your own account (for testing) on anaconda cloud (in a conda environment with\n+# anaconda-client installed) with:\n+#\n+#     anaconda upload --skip-existing\n+#          conda_dist/linux-64/* dist_conda/osx-64/*\n+#          conda_dist/win-32/* conda_dist/win-64/*\n+#\n+# (This command can be shorter on Unix, but Windows won't recursively expand wildcards)\n+#\n+# Upoad to the labscript-suite organisation's channel on anaconda cloud (in a\n+# conda environment with anaconda-client installed) with:\n+#\n+#     anaconda -c labscript-suite upload --skip-existing\n+#          conda_dist/linux-64/* conda_dist/osx-64/*\n+#          conda_dist/win-32/* conda_dist/win-64/*\n+#\n+# If you need to rebuild the same version of the package for conda due to a packaging\n+# issue, you must increment CONDA_BUILD_NUMBER in order to create a unique version on\n+# anaconda cloud. When subsequently releasing a new version of the package,\n+# CONDA_BUILD_NUMBER should be reset to zero.\n+\n+import os\n+import runviewer\n+from setuptools import setup\n+\n+try:\n+    from setuptools_conda import conda_dist\n+except ImportError:\n+    conda_dist = None\n+\n+SETUP_REQUIRES = ['setuptools', 'setuptools_scm']\n+\n+# TODO: add labscript suite deps once they are on PyPI/anaconda cloud\n+INSTALL_REQUIRES_CONDA = [\n+    \"pyqtgraph >=0.9.10\",\n+    \"numpy >=1.15\",\n+    \"scipy\",\n+    \"h5py\",\n+]\n+\n+INSTALL_REQUIRES = INSTALL_REQUIRES_CONDA + [\n+    \"autocython\",\n+    \"zprocess\",\n+    \"qtutils >= 2.0.0\",\n+]\n+\n+setup(\n+    name='runviewer',\n+    version=runviewer.__version__,\n+    description=\"A program to view shots compiled by labscript\",\n+    long_description=open('README.md').read(),\n+    long_description_content_type='text/markdown',\n+    author='The labscript suite community',\n+    author_email='labscriptsuite@googlegroups.com ',\n+    url='http://labscriptsuite.org',\n+    license=\"BSD\",\n+    packages=[\"runviewer\", \"runviewer.resample\"],\n+    zip_safe=False,\n+    setup_requires=SETUP_REQUIRES,\n+    include_package_data=True,\n+    python_requires=\">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5\",\n+    install_requires=INSTALL_REQUIRES if 'CONDA_BUILD' not in os.environ else [],\n+    cmdclass={'conda_dist': conda_dist} if conda_dist is not None else {},\n+    command_options={\n+        'conda_dist': {\n+            'pythons': (__file__, ['2.7', '3.6', '3.7']),\n+            'platforms': (__file__, 'all'),\n+            'force_conversion': (__file__, True),\n+            'install_requires': (__file__, INSTALL_REQUIRES_CONDA)\n+        },\n+    },\n+)\n```\n\n\u200c", "markup": "markdown", "html": "<p>\u200c</p>\n<p>The diffs are meaningless because of the renames. Here\u2019s the diff from all the commits from the second one onward, since all file moving happened in the first commit:</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gh\">diff -r c28ad91c637a .hgignore</span>\n<span class=\"gd\">--- a/.hgignore Fri Nov 29 18:03:59 2019 -0500</span>\n<span class=\"gi\">+++ b/.hgignore Sun Dec 01 16:43:38 2019 -0500</span>\n<span class=\"gu\">@@ -1,3 +1,9 @@</span>\n syntax: glob\n<span class=\"gd\">-*pyc</span>\n<span class=\"gi\">+*.pyc</span>\n runviewer.log\n<span class=\"gi\">+.eggs</span>\n<span class=\"gi\">+build</span>\n<span class=\"gi\">+conda_build</span>\n<span class=\"gi\">+dist</span>\n<span class=\"gi\">+conda_dist</span>\n<span class=\"gi\">+*.egg-info</span>\n\\ No newline at end of file\n<span class=\"gh\">diff -r c28ad91c637a __init__.py</span>\n<span class=\"gd\">--- /dev/null   Thu Jan 01 00:00:00 1970 +0000</span>\n<span class=\"gi\">+++ b/__init__.py   Sun Dec 01 16:43:38 2019 -0500</span>\n<span class=\"gu\">@@ -0,0 +1,13 @@</span>\n<span class=\"gi\">+# This is a shim to the real package one subfolder below. It exists for backward</span>\n<span class=\"gi\">+# compatibility with installations from before the restructuring of this project&#39;s</span>\n<span class=\"gi\">+# repository into the usual structure for Python packages. This allows these</span>\n<span class=\"gi\">+# installations to continue functioning and being updatable as we switch the</span>\n<span class=\"gi\">+# repositories to the new repo layout one-at-a-time.</span>\n<span class=\"gi\">+import sys</span>\n<span class=\"gi\">+import os</span>\n<span class=\"gi\">+try:</span>\n<span class=\"gi\">+    sys.path.insert(0, os.path.dirname(os.path.realpath(__file__)))</span>\n<span class=\"gi\">+    del sys.modules[__name__]</span>\n<span class=\"gi\">+    __import__(__name__)</span>\n<span class=\"gi\">+finally:</span>\n<span class=\"gi\">+    del sys.path[0]</span>\n<span class=\"gh\">diff -r c28ad91c637a __main__.py</span>\n<span class=\"gd\">--- /dev/null   Thu Jan 01 00:00:00 1970 +0000</span>\n<span class=\"gi\">+++ b/__main__.py   Sun Dec 01 16:43:38 2019 -0500</span>\n<span class=\"gu\">@@ -0,0 +1,29 @@</span>\n<span class=\"gi\">+# This is a shim to the real __main__.py. See __init__.py in this directory for an</span>\n<span class=\"gi\">+# explanation. Redirecting this file in addition to the package is necessary since the</span>\n<span class=\"gi\">+# launchers execute this file directly, not via import machinery. This file will fix the</span>\n<span class=\"gi\">+# lasunchers, if labscript_utils is new enough, to point to the real __main__.py.</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+import sys</span>\n<span class=\"gi\">+import os</span>\n<span class=\"gi\">+here = os.path.dirname(os.path.realpath(__file__))</span>\n<span class=\"gi\">+name = os.path.basename(here)</span>\n<span class=\"gi\">+if os.name == &#39;nt&#39;:</span>\n<span class=\"gi\">+    from labscript_utils import check_version, VersionException</span>\n<span class=\"gi\">+    # If labscript_utils is new enough, fix the shortcuts so that they point to the new</span>\n<span class=\"gi\">+    # location of __main__.py, then run the new shortcut and quit</span>\n<span class=\"gi\">+    try:</span>\n<span class=\"gi\">+        check_version(&#39;labscript_utils&#39;, &#39;2.15&#39;, &#39;3&#39;)</span>\n<span class=\"gi\">+    except VersionException:</span>\n<span class=\"gi\">+        pass</span>\n<span class=\"gi\">+    else:</span>\n<span class=\"gi\">+        from labscript_utils import labscript_suite_profile</span>\n<span class=\"gi\">+        from labscript_utils.winshell import fix_shortcuts, launcher_name</span>\n<span class=\"gi\">+        fix_shortcuts()</span>\n<span class=\"gi\">+        shortcut = os.path.join(labscript_suite_profile, launcher_name(name))</span>\n<span class=\"gi\">+        os.startfile(shortcut)</span>\n<span class=\"gi\">+        sys.exit(0)</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+# Otherwise just run the real __main__.py. The user will get an error saying</span>\n<span class=\"gi\">+# to update labscript_utils</span>\n<span class=\"gi\">+import runpy</span>\n<span class=\"gi\">+runpy.run_path(os.path.join(here, name, &#39;__main__.py&#39;), run_name=&#39;__main__&#39;)</span>\n\\ No newline at end of file\n<span class=\"gh\">diff -r c28ad91c637a runviewer/__init__.py</span>\n<span class=\"gd\">--- a/runviewer/__init__.py Fri Nov 29 18:03:59 2019 -0500</span>\n<span class=\"gi\">+++ b/runviewer/__init__.py Sun Dec 01 16:43:38 2019 -0500</span>\n<span class=\"gu\">@@ -10,5 +10,7 @@</span>\n # the project for the full license.                                 #\n #                                                                   #\n #####################################################################\n<span class=\"gi\">+import os</span>\n\n __version__ = &#39;2.3.0&#39;\n<span class=\"gi\">+runviewer_dir = os.path.dirname(os.path.realpath(__file__))</span>\n<span class=\"gh\">diff -r c28ad91c637a runviewer/__main__.py</span>\n<span class=\"gd\">--- a/runviewer/__main__.py Fri Nov 29 18:03:59 2019 -0500</span>\n<span class=\"gi\">+++ b/runviewer/__main__.py Sun Dec 01 16:43:38 2019 -0500</span>\n<span class=\"gu\">@@ -21,10 +21,11 @@</span>\n except ImportError:\n     raise ImportError(&#39;Require labscript_utils &gt; 2.1.0&#39;)\n\n<span class=\"gd\">-check_version(&#39;labscript_utils&#39;, &#39;2.10.0&#39;, &#39;3&#39;)</span>\n<span class=\"gi\">+check_version(&#39;labscript_utils&#39;, &#39;2.15.0&#39;, &#39;3&#39;)</span>\n # Splash screen\n<span class=\"gi\">+from runviewer import runviewer_dir</span>\n from labscript_utils.splash import Splash\n<span class=\"gd\">-splash = Splash(os.path.join(os.path.dirname(__file__), &#39;runviewer.svg&#39;))</span>\n<span class=\"gi\">+splash = Splash(os.path.join(runviewer_dir, &#39;runviewer.svg&#39;))</span>\n splash.show()\n\n splash.update_text(&#39;importing standard library modules&#39;)\n<span class=\"gu\">@@ -46,9 +47,6 @@</span>\n # Quit on ctrl-c\n signal.signal(signal.SIGINT, signal.SIG_DFL)\n\n<span class=\"gd\">-# Set working directory to runviewer folder, resolving symlinks</span>\n<span class=\"gd\">-runviewer_dir = os.path.dirname(os.path.realpath(__file__))</span>\n<span class=\"gd\">-os.chdir(runviewer_dir)</span>\n\n splash.update_text(&#39;importing Qt&#39;)\n check_version(&#39;qtutils&#39;, &#39;2.0.0&#39;, &#39;3.0.0&#39;)\n<span class=\"gu\">@@ -243,7 +241,7 @@</span>\n class RunViewer(object):\n     def __init__(self, exp_config):\n         splash.update_text(&#39;loading graphical interface&#39;)\n<span class=\"gd\">-        self.ui = UiLoader().load(os.path.join(os.path.dirname(os.path.realpath(__file__)), &#39;main.ui&#39;), RunviewerMainWindow())</span>\n<span class=\"gi\">+        self.ui = UiLoader().load(os.path.join(runviewer_dir, &#39;main.ui&#39;), RunviewerMainWindow())</span>\n\n         # setup shot treeview model\n         self.shot_model = QStandardItemModel()\n<span class=\"gh\">diff -r c28ad91c637a runviewer/resample/autocython_compile_state.json</span>\n<span class=\"gd\">--- a/runviewer/resample/autocython_compile_state.json  Fri Nov 29 18:03:59 2019 -0500</span>\n<span class=\"gi\">+++ b/runviewer/resample/autocython_compile_state.json  Sun Dec 01 16:43:38 2019 -0500</span>\n<span class=\"gu\">@@ -19,6 +19,16 @@</span>\n         &quot;setup.py&quot;: &quot;2717ccaf1ef62b0dac38b67613bfc703b9f313d76c8ac35dee1a8ea2f58940b7&quot;,\n         &quot;so&quot;: &quot;dcbb2da1b40ec83a535363fd4a3086d613aa7f3b757a4cda52452f908b6c7c84&quot;\n     },\n<span class=\"gi\">+    &quot;resample.cp38-win32.pyd&quot;: {</span>\n<span class=\"gi\">+        &quot;pyx&quot;: &quot;2ce9098cc8a417339614b97bdae1a54f333308bba5d680b1237ea835ecc819e0&quot;,</span>\n<span class=\"gi\">+        &quot;setup.py&quot;: &quot;2717ccaf1ef62b0dac38b67613bfc703b9f313d76c8ac35dee1a8ea2f58940b7&quot;,</span>\n<span class=\"gi\">+        &quot;so&quot;: &quot;4b230b87545cf48e36f954056f9bd1b1bb2a34f2e0ab90144a6b3e5941ef15ef&quot;</span>\n<span class=\"gi\">+    },</span>\n<span class=\"gi\">+    &quot;resample.cp38-win_amd64.pyd&quot;: {</span>\n<span class=\"gi\">+        &quot;pyx&quot;: &quot;2ce9098cc8a417339614b97bdae1a54f333308bba5d680b1237ea835ecc819e0&quot;,</span>\n<span class=\"gi\">+        &quot;setup.py&quot;: &quot;2717ccaf1ef62b0dac38b67613bfc703b9f313d76c8ac35dee1a8ea2f58940b7&quot;,</span>\n<span class=\"gi\">+        &quot;so&quot;: &quot;cba9ad71ed3e2a07fa4959f2767bd23174a2b79f5a5753bd73738d8440550e06&quot;</span>\n<span class=\"gi\">+    },</span>\n     &quot;resample.cpython-36m-darwin.so&quot;: {\n         &quot;pyx&quot;: &quot;2ce9098cc8a417339614b97bdae1a54f333308bba5d680b1237ea835ecc819e0&quot;,\n         &quot;setup.py&quot;: &quot;2717ccaf1ef62b0dac38b67613bfc703b9f313d76c8ac35dee1a8ea2f58940b7&quot;,\n<span class=\"gu\">@@ -39,6 +49,11 @@</span>\n         &quot;setup.py&quot;: &quot;2717ccaf1ef62b0dac38b67613bfc703b9f313d76c8ac35dee1a8ea2f58940b7&quot;,\n         &quot;so&quot;: &quot;254103913345527f214fc9d0db97f4c3b75de24737ae6af446c82c4c1cea8688&quot;\n     },\n<span class=\"gi\">+    &quot;resample.cpython-38-x86_64-linux-gnu.so&quot;: {</span>\n<span class=\"gi\">+        &quot;pyx&quot;: &quot;2ce9098cc8a417339614b97bdae1a54f333308bba5d680b1237ea835ecc819e0&quot;,</span>\n<span class=\"gi\">+        &quot;setup.py&quot;: &quot;2717ccaf1ef62b0dac38b67613bfc703b9f313d76c8ac35dee1a8ea2f58940b7&quot;,</span>\n<span class=\"gi\">+        &quot;so&quot;: &quot;7738de3042f5db11972ba7bc48034b895ad58c4080a6271349359a7eb6c5d0cb&quot;</span>\n<span class=\"gi\">+    },</span>\n     &quot;resample_py27_darwin_64bit.so&quot;: {\n         &quot;pyx&quot;: &quot;2ce9098cc8a417339614b97bdae1a54f333308bba5d680b1237ea835ecc819e0&quot;,\n         &quot;setup.py&quot;: &quot;2717ccaf1ef62b0dac38b67613bfc703b9f313d76c8ac35dee1a8ea2f58940b7&quot;,\n<span class=\"gh\">diff -r c28ad91c637a runviewer/resample/resample.cp38-win32.pyd</span>\nBinary file runviewer/resample/resample.cp38-win32.pyd has changed\n<span class=\"gh\">diff -r c28ad91c637a runviewer/resample/resample.cp38-win_amd64.pyd</span>\nBinary file runviewer/resample/resample.cp38-win_amd64.pyd has changed\n<span class=\"gh\">diff -r c28ad91c637a runviewer/resample/resample.cpython-38-x86_64-linux-gnu.so</span>\nBinary file runviewer/resample/resample.cpython-38-x86_64-linux-gnu.so has changed\n<span class=\"gh\">diff -r c28ad91c637a setup.py</span>\n<span class=\"gd\">--- /dev/null   Thu Jan 01 00:00:00 1970 +0000</span>\n<span class=\"gi\">+++ b/setup.py  Sun Dec 01 16:43:38 2019 -0500</span>\n<span class=\"gu\">@@ -0,0 +1,95 @@</span>\n<span class=\"gi\">+# USAGE NOTES</span>\n<span class=\"gi\">+#</span>\n<span class=\"gi\">+# Make a PyPI release tarball with:</span>\n<span class=\"gi\">+#</span>\n<span class=\"gi\">+#     python setup.py sdist</span>\n<span class=\"gi\">+#</span>\n<span class=\"gi\">+# Upload to test PyPI with:</span>\n<span class=\"gi\">+#</span>\n<span class=\"gi\">+#     twine upload --repository-url https://test.pypi.org/legacy/ dist/*</span>\n<span class=\"gi\">+#</span>\n<span class=\"gi\">+# Install from test PyPI with:</span>\n<span class=\"gi\">+#</span>\n<span class=\"gi\">+#     pip install --index-url https://test.pypi.org/simple/ runviewer</span>\n<span class=\"gi\">+#</span>\n<span class=\"gi\">+# Upload to real PyPI with:</span>\n<span class=\"gi\">+#</span>\n<span class=\"gi\">+#     twine upload dist/*</span>\n<span class=\"gi\">+#</span>\n<span class=\"gi\">+# Build conda packages for all platforms (in a conda environment with conda-build and</span>\n<span class=\"gi\">+# conda-verify installed) with:</span>\n<span class=\"gi\">+#</span>\n<span class=\"gi\">+#     python setup.py conda_dist</span>\n<span class=\"gi\">+#</span>\n<span class=\"gi\">+# Upoad to your own account (for testing) on anaconda cloud (in a conda environment with</span>\n<span class=\"gi\">+# anaconda-client installed) with:</span>\n<span class=\"gi\">+#</span>\n<span class=\"gi\">+#     anaconda upload --skip-existing</span>\n<span class=\"gi\">+#          conda_dist/linux-64/* dist_conda/osx-64/*</span>\n<span class=\"gi\">+#          conda_dist/win-32/* conda_dist/win-64/*</span>\n<span class=\"gi\">+#</span>\n<span class=\"gi\">+# (This command can be shorter on Unix, but Windows won&#39;t recursively expand wildcards)</span>\n<span class=\"gi\">+#</span>\n<span class=\"gi\">+# Upoad to the labscript-suite organisation&#39;s channel on anaconda cloud (in a</span>\n<span class=\"gi\">+# conda environment with anaconda-client installed) with:</span>\n<span class=\"gi\">+#</span>\n<span class=\"gi\">+#     anaconda -c labscript-suite upload --skip-existing</span>\n<span class=\"gi\">+#          conda_dist/linux-64/* conda_dist/osx-64/*</span>\n<span class=\"gi\">+#          conda_dist/win-32/* conda_dist/win-64/*</span>\n<span class=\"gi\">+#</span>\n<span class=\"gi\">+# If you need to rebuild the same version of the package for conda due to a packaging</span>\n<span class=\"gi\">+# issue, you must increment CONDA_BUILD_NUMBER in order to create a unique version on</span>\n<span class=\"gi\">+# anaconda cloud. When subsequently releasing a new version of the package,</span>\n<span class=\"gi\">+# CONDA_BUILD_NUMBER should be reset to zero.</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+import os</span>\n<span class=\"gi\">+import runviewer</span>\n<span class=\"gi\">+from setuptools import setup</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+try:</span>\n<span class=\"gi\">+    from setuptools_conda import conda_dist</span>\n<span class=\"gi\">+except ImportError:</span>\n<span class=\"gi\">+    conda_dist = None</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+SETUP_REQUIRES = [&#39;setuptools&#39;, &#39;setuptools_scm&#39;]</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+# TODO: add labscript suite deps once they are on PyPI/anaconda cloud</span>\n<span class=\"gi\">+INSTALL_REQUIRES_CONDA = [</span>\n<span class=\"gi\">+    &quot;pyqtgraph &gt;=0.9.10&quot;,</span>\n<span class=\"gi\">+    &quot;numpy &gt;=1.15&quot;,</span>\n<span class=\"gi\">+    &quot;scipy&quot;,</span>\n<span class=\"gi\">+    &quot;h5py&quot;,</span>\n<span class=\"gi\">+]</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+INSTALL_REQUIRES = INSTALL_REQUIRES_CONDA + [</span>\n<span class=\"gi\">+    &quot;autocython&quot;,</span>\n<span class=\"gi\">+    &quot;zprocess&quot;,</span>\n<span class=\"gi\">+    &quot;qtutils &gt;= 2.0.0&quot;,</span>\n<span class=\"gi\">+]</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+setup(</span>\n<span class=\"gi\">+    name=&#39;runviewer&#39;,</span>\n<span class=\"gi\">+    version=runviewer.__version__,</span>\n<span class=\"gi\">+    description=&quot;A program to view shots compiled by labscript&quot;,</span>\n<span class=\"gi\">+    long_description=open(&#39;README.md&#39;).read(),</span>\n<span class=\"gi\">+    long_description_content_type=&#39;text/markdown&#39;,</span>\n<span class=\"gi\">+    author=&#39;The labscript suite community&#39;,</span>\n<span class=\"gi\">+    author_email=&#39;labscriptsuite@googlegroups.com &#39;,</span>\n<span class=\"gi\">+    url=&#39;http://labscriptsuite.org&#39;,</span>\n<span class=\"gi\">+    license=&quot;BSD&quot;,</span>\n<span class=\"gi\">+    packages=[&quot;runviewer&quot;, &quot;runviewer.resample&quot;],</span>\n<span class=\"gi\">+    zip_safe=False,</span>\n<span class=\"gi\">+    setup_requires=SETUP_REQUIRES,</span>\n<span class=\"gi\">+    include_package_data=True,</span>\n<span class=\"gi\">+    python_requires=&quot;&gt;=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5&quot;,</span>\n<span class=\"gi\">+    install_requires=INSTALL_REQUIRES if &#39;CONDA_BUILD&#39; not in os.environ else [],</span>\n<span class=\"gi\">+    cmdclass={&#39;conda_dist&#39;: conda_dist} if conda_dist is not None else {},</span>\n<span class=\"gi\">+    command_options={</span>\n<span class=\"gi\">+        &#39;conda_dist&#39;: {</span>\n<span class=\"gi\">+            &#39;pythons&#39;: (__file__, [&#39;2.7&#39;, &#39;3.6&#39;, &#39;3.7&#39;]),</span>\n<span class=\"gi\">+            &#39;platforms&#39;: (__file__, &#39;all&#39;),</span>\n<span class=\"gi\">+            &#39;force_conversion&#39;: (__file__, True),</span>\n<span class=\"gi\">+            &#39;install_requires&#39;: (__file__, INSTALL_REQUIRES_CONDA)</span>\n<span class=\"gi\">+        },</span>\n<span class=\"gi\">+    },</span>\n<span class=\"gi\">+)</span>\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2019-11-30T05:05:27.528198+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-12-01T21:44:40.959570+00:00", "type": "pullrequest_comment", "id": 126927530}, "pull_request": {"type": "pullrequest", "id": 37, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37"}}, "title": "Restructure into standard Python package"}}, {"update": {"description": "(with backward compatibility - the resulting repo can still be just cloned into the python import path as is the case on existing labscript suite installs)\r\n\r\n* Move files into standard Python package repository layout.\r\n\r\n* Add setup.py, and shim modules for `__init__.py` and `__main__.py`. The shim `__init__.py` does a bit of magic to redirect the import to the package enclosed one level lower. The `__main__.py` runs `labscript_utils.winshell.fix_shortcuts()` if `labscript_utils` is new enough, and then runs the new shortcut. If `labscript_utils` is not new enough or if not on Windows, it runs the real `__main__.py` (in which case the user will get an error about `labscript_utils` not being new enough). This creates a pretty seamless upgrade - if one updates the existing runviewer repository within labscript_utils, everything will continue to work.\r\n\r\n* Define `runviwer_dir` in `__init__.py` based on `__file__`. Use it for opening files in package dir: splash screen svg and .ui file. Do not chdir() at startup. Require labscript_utils 2.15.0 which has check_version and winshell functions compatible with the new repository layout.\r\n\r\n* Recompile resample for Python 3.8 linux, windows 32 and 64 bit\r\n\r\nThis requires [labscript_utils PR #96](#!/labscript_suite/labscript_utils/pull-requests/96/preparations-for-apps-to-be-restructured) for the `winshell` and `check_version` changes, and [labscript_utils PR #95](#!/labscript_suite/labscript_utils/pull-requests/95) for the change to not create log files in the package install directory..\r\n\r\nWith those two pull requests in `labscript_utils`, runviewer works as a regular PyPI package, I've uploaded it to `test.pypi.org`, and it can be installed with:\r\n\r\n`pip install --index-url https://test.pypi.org/simple/ runviewer`\r\n\r\nAfter running that and then `python -m labscript_utils.winshell --fix_shortcuts`, you'll be running runviewer from a regular package! But the repo is still entirely compatible with being run from within the labscript suite install directory.", "title": "Restructure into standard Python package", "destination": {"commit": {"hash": "cde474f6f5b9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/commit/cde474f6f5b9.json"}, "html": {"href": "#!/labscript_suite/runviewer/commits/cde474f6f5b9"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0316f8405799", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer/commit/0316f8405799"}, "html": {"href": "#!/cbillington/runviewer/commits/0316f8405799"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer"}, "html": {"href": "#!/cbillington/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3069dd3f-2a1f-409f-bebf-21e0965d6671}ts=python"}}, "type": "repository", "name": "runviewer", "full_name": "cbillington/runviewer", "uuid": "{3069dd3f-2a1f-409f-bebf-21e0965d6671}"}, "branch": {"name": "restructure"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-12-01T21:41:54.605117+00:00"}, "pull_request": {"type": "pullrequest", "id": 37, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37"}}, "title": "Restructure into standard Python package"}}, {"update": {"description": "(with backward compatibility - the resulting repo can still be just cloned into the python import path as is the case on existing labscript suite installs)\r\n\r\n* Move files into standard Python package repository layout.\r\n\r\n* Add setup.py, and shim modules for `__init__.py` and `__main__.py`. The shim `__init__.py` does a bit of magic to redirect the import to the package enclosed one level lower. The `__main__.py` runs `labscript_utils.winshell.fix_shortcuts()` if `labscript_utils` is new enough, and then runs the new shortcut. If `labscript_utils` is not new enough or if not on Windows, it runs the real `__main__.py` (in which case the user will get an error about `labscript_utils` not being new enough). This creates a pretty seamless upgrade - if one updates the existing runviewer repository within labscript_utils, everything will continue to work.\r\n\r\n* Define `runviwer_dir` in `__init__.py` based on `__file__`. Use it for opening files in package dir: splash screen svg and .ui file. Do not chdir() at startup. Require labscript_utils 2.15.0 which has check_version and winshell functions compatible with the new repository layout.\r\n\r\n* Recompile resample for Python 3.8 linux, windows 32 and 64 bit\r\n\r\nThis requires [labscript_utils PR #96](#!/labscript_suite/labscript_utils/pull-requests/96/preparations-for-apps-to-be-restructured) for the `winshell` and `check_version` changes, and [labscript_utils PR #95](#!/labscript_suite/labscript_utils/pull-requests/95) for the change to not create log files in the package install directory..\r\n\r\nWith those two pull requests in `labscript_utils`, runviewer works as a regular PyPI package, I've uploaded it to `test.pypi.org`, and it can be installed with:\r\n\r\n`pip install --index-url https://test.pypi.org/simple/ runviewer`\r\n\r\nAfter running that and then `python -m labscript_utils.winshell --fix_shortcuts`, you'll be running runviewer from a regular package! But the repo is still entirely compatible with being run from within the labscript suite install directory.", "title": "Restructure into standard Python package", "destination": {"commit": {"hash": "cde474f6f5b9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/commit/cde474f6f5b9.json"}, "html": {"href": "#!/labscript_suite/runviewer/commits/cde474f6f5b9"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "41e4b74a8b31", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer/commit/41e4b74a8b31"}, "html": {"href": "#!/cbillington/runviewer/commits/41e4b74a8b31"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer"}, "html": {"href": "#!/cbillington/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3069dd3f-2a1f-409f-bebf-21e0965d6671}ts=python"}}, "type": "repository", "name": "runviewer", "full_name": "cbillington/runviewer", "uuid": "{3069dd3f-2a1f-409f-bebf-21e0965d6671}"}, "branch": {"name": "restructure"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-12-01T21:38:36.506720+00:00"}, "pull_request": {"type": "pullrequest", "id": 37, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37"}}, "title": "Restructure into standard Python package"}}, {"update": {"description": "(with backward compatibility - the resulting repo can still be just cloned into the python import path as is the case on existing labscript suite installs)\r\n\r\n* Move files into standard Python package repository layout.\r\n\r\n* Add setup.py, and shim modules for `__init__.py` and `__main__.py`. The shim `__init__.py` does a bit of magic to redirect the import to the package enclosed one level lower. The `__main__.py` runs `labscript_utils.winshell.fix_shortcuts()` if `labscript_utils` is new enough, and then runs the new shortcut. If `labscript_utils` is not new enough or if not on Windows, it runs the real `__main__.py` (in which case the user will get an error about `labscript_utils` not being new enough). This creates a pretty seamless upgrade - if one updates the existing runviewer repository within labscript_utils, everything will continue to work.\r\n\r\n* Define `runviwer_dir` in `__init__.py` based on `__file__`. Use it for opening files in package dir: splash screen svg and .ui file. Do not chdir() at startup. Require labscript_utils 2.15.0 which has check_version and winshell functions compatible with the new repository layout.\r\n\r\n* Recompile resample for Python 3.8 linux, windows 32 and 64 bit\r\n\r\nThis requires [labscript_utils PR #96](#!/labscript_suite/labscript_utils/pull-requests/96/preparations-for-apps-to-be-restructured) for the `winshell` and `check_version` changes, and [labscript_utils PR #95](#!/labscript_suite/labscript_utils/pull-requests/95) for the change to not create log files in the package install directory..\r\n\r\nWith those two pull requests in `labscript_utils`, runviewer works as a regular PyPI package, I've uploaded it to `test.pypi.org`, and it can be installed with:\r\n\r\n`pip install --index-url https://test.pypi.org/simple/ runviewer`\r\n\r\nAfter running that and then `python -m labscript_utils.winshell --fix_shortcuts`, you'll be running runviewer from a regular package! But the repo is still entirely compatible with being run from within the labscript suite install directory.", "title": "Restructure into standard Python package", "destination": {"commit": {"hash": "cde474f6f5b9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/commit/cde474f6f5b9.json"}, "html": {"href": "#!/labscript_suite/runviewer/commits/cde474f6f5b9"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "355461377a59", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer/commit/355461377a59"}, "html": {"href": "#!/cbillington/runviewer/commits/355461377a59"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer"}, "html": {"href": "#!/cbillington/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3069dd3f-2a1f-409f-bebf-21e0965d6671}ts=python"}}, "type": "repository", "name": "runviewer", "full_name": "cbillington/runviewer", "uuid": "{3069dd3f-2a1f-409f-bebf-21e0965d6671}"}, "branch": {"name": "restructure"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-11-30T23:49:38.306304+00:00"}, "pull_request": {"type": "pullrequest", "id": 37, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37"}}, "title": "Restructure into standard Python package"}}, {"update": {"description": "(with backward compatibility - the resulting repo can still be just cloned into the python import path as is the case on existing labscript suite installs)\r\n\r\n* Move files into standard Python package repository layout.\r\n\r\n* Add setup.py, and shim modules for `__init__.py` and `__main__.py`. The shim `__init__.py` does a bit of magic to redirect the import to the package enclosed one level lower. The `__main__.py` runs `labscript_utils.winshell.fix_shortcuts()` if `labscript_utils` is new enough, and then runs the new shortcut. If `labscript_utils` is not new enough or if not on Windows, it runs the real `__main__.py` (in which case the user will get an error about `labscript_utils` not being new enough). This creates a pretty seamless upgrade - if one updates the existing runviewer repository within labscript_utils, everything will continue to work.\r\n\r\n* Define `runviwer_dir` in `__init__.py` based on `__file__`. Use it for opening files in package dir: splash screen svg and .ui file. Do not chdir() at startup. Require labscript_utils 2.15.0 which has check_version and winshell functions compatible with the new repository layout.\r\n\r\n* Recompile resample for Python 3.8 linux, windows 32 and 64 bit\r\n\r\nThis requires [labscript_utils PR #96](#!/labscript_suite/labscript_utils/pull-requests/96/preparations-for-apps-to-be-restructured) for the `winshell` and `check_version` changes, and [labscript_utils PR #95](#!/labscript_suite/labscript_utils/pull-requests/95) for the change to not create log files in the package install directory..\r\n\r\nWith those two pull requests in `labscript_utils`, runviewer works as a regular PyPI package, I've uploaded it to `test.pypi.org`, and it can be installed with:\r\n\r\n`pip install --index-url https://test.pypi.org/simple/ runviewer`\r\n\r\nAfter running that and then `python -m labscript_utils.winshell --fix_shortcuts`, you'll be running runviewer from a regular package! But the repo is still entirely compatible with being run from within the labscript suite install directory.", "title": "Restructure into standard Python package", "destination": {"commit": {"hash": "cde474f6f5b9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/commit/cde474f6f5b9.json"}, "html": {"href": "#!/labscript_suite/runviewer/commits/cde474f6f5b9"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b4d144f611c6", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer/commit/b4d144f611c6"}, "html": {"href": "#!/cbillington/runviewer/commits/b4d144f611c6"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer"}, "html": {"href": "#!/cbillington/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3069dd3f-2a1f-409f-bebf-21e0965d6671}ts=python"}}, "type": "repository", "name": "runviewer", "full_name": "cbillington/runviewer", "uuid": "{3069dd3f-2a1f-409f-bebf-21e0965d6671}"}, "branch": {"name": "restructure"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-11-30T04:52:56.901965+00:00"}, "pull_request": {"type": "pullrequest", "id": 37, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37"}}, "title": "Restructure into standard Python package"}}, {"update": {"description": "(with backward compatibility - the resulting repo can still be just cloned into the python import path as is the case on existing labscript suite installs)\r\n\r\n* Move files into standard Python package repository layout.\r\n\r\n* Add setup.py, and shim modules for `__init__.py` and `__main__.py`. The shim `__init__.py` does a bit of magic to redirect the import to the package enclosed one level lower. The `__main__.py` runs `labscript_utils.winshell.fix_shortcuts()` if `labscript_utils` is new enough, and then runs the new shortcut. If `labscript_utils` is not new enough or if not on Windows, it runs the real `__main__.py` (in which case the user will get an error about `labscript_utils` not being new enough). This creates a pretty seamless upgrade - if one updates the existing runviewer repository within labscript_utils, everything will continue to work.\r\n\r\n* Define `runviwer_dir` in `__init__.py` based on `__file__`. Use it for opening files in package dir: splash screen svg and .ui file. Do not chdir() at startup. Require labscript_utils 2.15.0 which has check_version and winshell functions compatible with the new repository layout.\r\n\r\n* Recompile resample for Python 3.8 linux, windows 32 and 64 bit\r\n\r\nThis requires [`labscript_utils` PR #96](#!/labscript_suite/labscript_utils/pull-requests/96/preparations-for-apps-to-be-restructured) for the `winshell` and `check_version` changes, and [`labscript_utils` PR #95](#!/labscript_suite/labscript_utils/pull-requests/95) for the change to not create log files in the package install directory..\r\n\r\nWith those two pull requests in `labscript_utils`, runviewer works as a regular PyPI package, I've uploaded it to `test.pypi.org`, and it can be installed with:\r\n\r\n`pip install --index-url https://test.pypi.org/simple/ runviewer`\r\n\r\nAfter running that and then `python -m labscript_utils.winshell --fix_shortcuts`, you'll be running runviewer from a regular package! But the repo is still entirely compatible with being run from within the labscript suite install directory.", "title": "Restructure into standard Python package", "destination": {"commit": {"hash": "cde474f6f5b9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/commit/cde474f6f5b9.json"}, "html": {"href": "#!/labscript_suite/runviewer/commits/cde474f6f5b9"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b4d144f611c6", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer/commit/b4d144f611c6"}, "html": {"href": "#!/cbillington/runviewer/commits/b4d144f611c6"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer"}, "html": {"href": "#!/cbillington/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3069dd3f-2a1f-409f-bebf-21e0965d6671}ts=python"}}, "type": "repository", "name": "runviewer", "full_name": "cbillington/runviewer", "uuid": "{3069dd3f-2a1f-409f-bebf-21e0965d6671}"}, "branch": {"name": "restructure"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-11-30T04:50:53.155482+00:00"}, "pull_request": {"type": "pullrequest", "id": 37, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37"}}, "title": "Restructure into standard Python package"}}, {"update": {"description": "(with backward compatibility - the resulting repo can still be just cloned into the python import path as is the case on existing labscript suite installs)\r\n\r\n* Move files into standard Python package repository layout.\r\n\r\n* Add setup.py, and shim modules for `__init__.py` and `__main__.py`. The shim `__init__.py` does a bit of magic to redirect the import to the package enclosed one level lower. The `__main__.py` runs `labscript_utils.winshell.fix_shortcuts()` if `labscript_utils` is new enough, and then runs the new shortcut. If `labscript_utils` is not new enough or if not on Windows, it runs the real `__main__.py` (in which case the user will get an error about `labscript_utils` not being new enough). This creates a pretty seamless upgrade - if one updates the existing runviewer repository within labscript_utils, everything will continue to work.\r\n\r\n* Define `runviwer_dir` in `__init__.py` based on `__file__`. Use it for opening files in package dir: splash screen svg and .ui file. Do not chdir() at startup. Require labscript_utils 2.15.0 which has check_version and winshell functions compatible with the new repository layout.\r\n\r\n* Recompile resample for Python 3.8 windows 32 and 64 bit\r\n\r\nThis requires [`labscript_utils` PR #96](#!/labscript_suite/labscript_utils/pull-requests/96/preparations-for-apps-to-be-restructured) for the `winshell` and `check_version` changes, and [`labscript_utils` PR #95](#!/labscript_suite/labscript_utils/pull-requests/95) for the change to not create log files in the package install directory..\r\n\r\nWith those two pull requests in `labscript_utils`, runviewer works as a regular PyPI package, I've uploaded it to `test.pypi.org`, and it can be installed with:\r\n\r\n`pip install --index-url https://test.pypi.org/simple/ runviewer`\r\n\r\nAfter running that and then `python -m labscript_utils.winshell --fix_shortcuts`, you'll be running runviewer from a regular package! But the repo is still entirely compatible with being run from within the labscript suite install directory.", "title": "Restructure into standard Python package", "destination": {"commit": {"hash": "cde474f6f5b9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/commit/cde474f6f5b9.json"}, "html": {"href": "#!/labscript_suite/runviewer/commits/cde474f6f5b9"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b4d144f611c6", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer/commit/b4d144f611c6"}, "html": {"href": "#!/cbillington/runviewer/commits/b4d144f611c6"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer"}, "html": {"href": "#!/cbillington/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3069dd3f-2a1f-409f-bebf-21e0965d6671}ts=python"}}, "type": "repository", "name": "runviewer", "full_name": "cbillington/runviewer", "uuid": "{3069dd3f-2a1f-409f-bebf-21e0965d6671}"}, "branch": {"name": "restructure"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-11-30T04:50:24.817163+00:00"}, "pull_request": {"type": "pullrequest", "id": 37, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37"}}, "title": "Restructure into standard Python package"}}, {"update": {"description": "(with backward compatibility - the resulting repo can still be just cloned into the python import path as is the case on existing labscript suite installs)\r\n\r\n* Move files into standard Python package repository layout.\r\n\r\n* Add setup.py, and shim modules for `__init__.py` and `__main__.py`. The shim `__init__.py` does a bit of magic to redirect the import to the package enclosed one level lower. The `__main__.py` runs `labscript_utils.winshell.fix_shortcuts()` if `labscript_utils` is new enough, and then runs the new shortcut. If `labscript_utils` is not new enough or if not on Windows, it runs the real `__main__.py` (in which case the user will get an error about `labscript_utils` not being new enough). This creates a pretty seamless upgrade - if one updates the existing runviewer repository within labscript_utils, everything will continue to work.\r\n\r\n* Define `runviwer_dir` in `__init__.py` based on `__file__`. Use it for opening files in package dir: splash screen svg and .ui file. Do not chdir() at startup. Require labscript_utils 2.15.0 which has check_version and winshell functions compatible with the new repository layout.\r\n\r\n* Recompile resample for Python 3.8 windows 32 and 64 bit\r\n\r\nThis requires [`labscript_utils` PR #96](#!/labscript_suite/labscript_utils/pull-requests/96/preparations-for-apps-to-be-restructured) for the `winshell` and `check_version` changes, and [`labscript_utils` PR #95](#!/labscript_suite/labscript_utils/pull-requests/95) for the change to not create log files in the package install directory..\r\n\r\nWith those two pull requests in `labscript_utils`, runviewer works as a regular PyPI package, I've uploaded it to `test.pypi.org`, and it can be installed with:\r\n\r\n`pip install --index-url https://test.pypi.org/simple/ runviewer`\r\n\r\nAfter running that and then `python -m labscript_utils.winshell --fix_shortcuts`, you'll be running runviewer from a regular package! But the repo is still entirely compatible with being run from within the labscript suite install directory.", "title": "Restructure into standard Python package", "destination": {"commit": {"hash": "cde474f6f5b9", "type": "commit", "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/commit/cde474f6f5b9.json"}, "html": {"href": "#!/labscript_suite/runviewer/commits/cde474f6f5b9"}}}, "repository": {"links": {"self": {"href": "data/repositories/labscript_suite/runviewer.json"}, "html": {"href": "#!/labscript_suite/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71215673-ad3e-425c-ae04-84cc6c2ca7da}ts=445022"}}, "type": "repository", "name": "runviewer", "full_name": "labscript_suite/runviewer", "uuid": "{71215673-ad3e-425c-ae04-84cc6c2ca7da}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b4d144f611c6", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer/commit/b4d144f611c6"}, "html": {"href": "#!/cbillington/runviewer/commits/b4d144f611c6"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/runviewer"}, "html": {"href": "#!/cbillington/runviewer"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3069dd3f-2a1f-409f-bebf-21e0965d6671}ts=python"}}, "type": "repository", "name": "runviewer", "full_name": "cbillington/runviewer", "uuid": "{3069dd3f-2a1f-409f-bebf-21e0965d6671}"}, "branch": {"name": "restructure"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-11-30T04:50:24.760647+00:00"}, "pull_request": {"type": "pullrequest", "id": 37, "links": {"self": {"href": "data/repositories/labscript_suite/runviewer/pullrequests/37.json"}, "html": {"href": "#!/labscript_suite/runviewer/pull-requests/37"}}, "title": "Restructure into standard Python package"}}]}