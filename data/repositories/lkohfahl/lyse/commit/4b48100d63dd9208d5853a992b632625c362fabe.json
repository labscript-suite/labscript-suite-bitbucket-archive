{"rendered": {"message": {"raw": "Unicode dataframe column labels, and all `__future__` imports enabled.\n\nexecfile() replaced with compile & exec, as forward compatible with Python 3\n(as well as allowing for non-ascii filenames, addressing issue #28).\n\nRequire zprocess 2.2.2 which fixes a bug that prevented sending non-ascii\ncharacters to the output box.\n\n`str` aliased to `unicode` in Python 2.\n\nThese changes are not tested in Python 3, but getting all strings unicode in\nPython 2 as well as all other __future__ imports enabled is a good first step\nfor Python 3 compatibility.\n\nIn Python 2, unicode strings and bytestrings pass equality checks, meaning that\nindexing dataframes with bytestrings will still get the right columns even\nthough the column labels are now unicode strings:\n\n```\n>>> df[u'test_\u00fcmlaut', 'x']\nsequence                   run time\n2017-06-21 13:17:38-04:00  2017-07-25 16:15:53-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\nName: (test_\u00fcmlaut, x), dtype: float64\n```", "markup": "markdown", "html": "<p>Unicode dataframe column labels, and all <code>__future__</code> imports enabled.</p>\n<p>execfile() replaced with compile &amp; exec, as forward compatible with Python 3<br />\n(as well as allowing for non-ascii filenames, addressing issue #28).</p>\n<p>Require zprocess 2.2.2 which fixes a bug that prevented sending non-ascii<br />\ncharacters to the output box.</p>\n<p><code>str</code> aliased to <code>unicode</code> in Python 2.</p>\n<p>These changes are not tested in Python 3, but getting all strings unicode in<br />\nPython 2 as well as all other <strong>future</strong> imports enabled is a good first step<br />\nfor Python 3 compatibility.</p>\n<p>In Python 2, unicode strings and bytestrings pass equality checks, meaning that<br />\nindexing dataframes with bytestrings will still get the right columns even<br />\nthough the column labels are now unicode strings:</p>\n<div class=\"codehilite\"><pre><span></span>&gt;&gt;&gt; df[u&#39;test_\u00fcmlaut&#39;, &#39;x&#39;]\nsequence                   run time\n2017-06-21 13:17:38-04:00  2017-07-25 16:15:53-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\nName: (test_\u00fcmlaut, x), dtype: float64\n</pre></div>", "type": "rendered"}}, "hash": "4b48100d63dd9208d5853a992b632625c362fabe", "repository": {"links": {"self": {"href": "data/repositories/lkohfahl/lyse.json"}, "html": {"href": "#!/lkohfahl/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8f8d33fe-eb8c-405b-a8e7-cd20772a4bea}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "lkohfahl/lyse", "uuid": "{8f8d33fe-eb8c-405b-a8e7-cd20772a4bea}"}, "links": {"self": {"href": "data/repositories/lkohfahl/lyse/commit/4b48100d63dd9208d5853a992b632625c362fabe.json"}, "comments": {"href": "data/repositories/lkohfahl/lyse/commit/4b48100d63dd9208d5853a992b632625c362fabe/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/lkohfahl/lyse/patch/4b48100d63dd9208d5853a992b632625c362fabe"}, "html": {"href": "#!/lkohfahl/lyse/commits/4b48100d63dd9208d5853a992b632625c362fabe"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/lkohfahl/lyse/diff/4b48100d63dd9208d5853a992b632625c362fabe"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/lkohfahl/lyse/commit/4b48100d63dd9208d5853a992b632625c362fabe/approve"}, "statuses": {"href": "data/repositories/lkohfahl/lyse/commit/4b48100d63dd9208d5853a992b632625c362fabe/statuses_page=1.json"}}, "author": {"raw": "Chris Billington", "type": "author"}, "summary": {"raw": "Unicode dataframe column labels, and all `__future__` imports enabled.\n\nexecfile() replaced with compile & exec, as forward compatible with Python 3\n(as well as allowing for non-ascii filenames, addressing issue #28).\n\nRequire zprocess 2.2.2 which fixes a bug that prevented sending non-ascii\ncharacters to the output box.\n\n`str` aliased to `unicode` in Python 2.\n\nThese changes are not tested in Python 3, but getting all strings unicode in\nPython 2 as well as all other __future__ imports enabled is a good first step\nfor Python 3 compatibility.\n\nIn Python 2, unicode strings and bytestrings pass equality checks, meaning that\nindexing dataframes with bytestrings will still get the right columns even\nthough the column labels are now unicode strings:\n\n```\n>>> df[u'test_\u00fcmlaut', 'x']\nsequence                   run time\n2017-06-21 13:17:38-04:00  2017-07-25 16:15:53-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\nName: (test_\u00fcmlaut, x), dtype: float64\n```", "markup": "markdown", "html": "<p>Unicode dataframe column labels, and all <code>__future__</code> imports enabled.</p>\n<p>execfile() replaced with compile &amp; exec, as forward compatible with Python 3<br />\n(as well as allowing for non-ascii filenames, addressing issue #28).</p>\n<p>Require zprocess 2.2.2 which fixes a bug that prevented sending non-ascii<br />\ncharacters to the output box.</p>\n<p><code>str</code> aliased to <code>unicode</code> in Python 2.</p>\n<p>These changes are not tested in Python 3, but getting all strings unicode in<br />\nPython 2 as well as all other <strong>future</strong> imports enabled is a good first step<br />\nfor Python 3 compatibility.</p>\n<p>In Python 2, unicode strings and bytestrings pass equality checks, meaning that<br />\nindexing dataframes with bytestrings will still get the right columns even<br />\nthough the column labels are now unicode strings:</p>\n<div class=\"codehilite\"><pre><span></span>&gt;&gt;&gt; df[u&#39;test_\u00fcmlaut&#39;, &#39;x&#39;]\nsequence                   run time\n2017-06-21 13:17:38-04:00  2017-07-25 16:15:53-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\nName: (test_\u00fcmlaut, x), dtype: float64\n</pre></div>", "type": "rendered"}, "participants": [], "parents": [{"hash": "b2c123e4263fcdb783062d8ec889348862cff960", "type": "commit", "links": {"self": {"href": "data/repositories/lkohfahl/lyse/commit/b2c123e4263fcdb783062d8ec889348862cff960.json"}, "html": {"href": "#!/lkohfahl/lyse/commits/b2c123e4263fcdb783062d8ec889348862cff960"}}}], "date": "2017-07-25T20:17:16+00:00", "message": "Unicode dataframe column labels, and all `__future__` imports enabled.\n\nexecfile() replaced with compile & exec, as forward compatible with Python 3\n(as well as allowing for non-ascii filenames, addressing issue #28).\n\nRequire zprocess 2.2.2 which fixes a bug that prevented sending non-ascii\ncharacters to the output box.\n\n`str` aliased to `unicode` in Python 2.\n\nThese changes are not tested in Python 3, but getting all strings unicode in\nPython 2 as well as all other __future__ imports enabled is a good first step\nfor Python 3 compatibility.\n\nIn Python 2, unicode strings and bytestrings pass equality checks, meaning that\nindexing dataframes with bytestrings will still get the right columns even\nthough the column labels are now unicode strings:\n\n```\n>>> df[u'test_\u00fcmlaut', 'x']\nsequence                   run time\n2017-06-21 13:17:38-04:00  2017-07-25 16:15:53-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\n                           2017-07-25 16:15:54-04:00    70.0\nName: (test_\u00fcmlaut, x), dtype: float64\n```", "type": "commit", "git_hash": "1ee193fc1c1c31c962d6a7f21db76d9ebf761a90", "tags": null, "branches": "feature"}