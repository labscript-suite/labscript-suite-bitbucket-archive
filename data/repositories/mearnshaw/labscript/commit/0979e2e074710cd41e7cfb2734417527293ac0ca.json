{"rendered": {"message": {"raw": "Improve error handling for invalid names\n\nThere are very few cases where using exec is a good idea, blindly trying to assign any given name to None could cause some weird bugs (eg. in Python2.7 True and False aren't keywords so you could end up executing something like True = None). Also care should be taken over the use of assert statements because they are ignored if certain options are set, use them more for debugging or in tests. Finally, limit the use of \"except:\" to catch any exception as it can make debugging difficult, in general catch only those exceptions which you are expecting to be raised.", "markup": "markdown", "html": "<p>Improve error handling for invalid names</p>\n<p>There are very few cases where using exec is a good idea, blindly trying to assign any given name to None could cause some weird bugs (eg. in Python2.7 True and False aren't keywords so you could end up executing something like True = None). Also care should be taken over the use of assert statements because they are ignored if certain options are set, use them more for debugging or in tests. Finally, limit the use of \"except:\" to catch any exception as it can make debugging difficult, in general catch only those exceptions which you are expecting to be raised.</p>", "type": "rendered"}}, "hash": "0979e2e074710cd41e7cfb2734417527293ac0ca", "repository": {"links": {"self": {"href": "data/repositories/mearnshaw/labscript.json"}, "html": {"href": "#!/mearnshaw/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{afb47966-1312-4d7f-9910-6833f9a5718d}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "mearnshaw/labscript", "uuid": "{afb47966-1312-4d7f-9910-6833f9a5718d}"}, "links": {"self": {"href": "data/repositories/mearnshaw/labscript/commit/0979e2e074710cd41e7cfb2734417527293ac0ca.json"}, "comments": {"href": "data/repositories/mearnshaw/labscript/commit/0979e2e074710cd41e7cfb2734417527293ac0ca/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/mearnshaw/labscript/patch/0979e2e074710cd41e7cfb2734417527293ac0ca"}, "html": {"href": "#!/mearnshaw/labscript/commits/0979e2e074710cd41e7cfb2734417527293ac0ca"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/mearnshaw/labscript/diff/0979e2e074710cd41e7cfb2734417527293ac0ca"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/mearnshaw/labscript/commit/0979e2e074710cd41e7cfb2734417527293ac0ca/approve"}, "statuses": {"href": "data/repositories/mearnshaw/labscript/commit/0979e2e074710cd41e7cfb2734417527293ac0ca/statuses_page=1.json"}}, "author": {"raw": "Matt Earnshaw <matt@earnshaw.org.uk>", "type": "author", "user": {"display_name": "Matt Earnshaw", "uuid": "{17c89cfb-6d26-4163-b407-ca2461f38dc5}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17c89cfb-6d26-4163-b407-ca2461f38dc5%7D"}, "html": {"href": "https://bitbucket.org/%7B17c89cfb-6d26-4163-b407-ca2461f38dc5%7D/"}, "avatar": {"href": "https://bitbucket.org/account/mearnshaw/avatar/"}}, "nickname": "mearnshaw", "type": "user", "account_id": null}}, "summary": {"raw": "Improve error handling for invalid names\n\nThere are very few cases where using exec is a good idea, blindly trying to assign any given name to None could cause some weird bugs (eg. in Python2.7 True and False aren't keywords so you could end up executing something like True = None). Also care should be taken over the use of assert statements because they are ignored if certain options are set, use them more for debugging or in tests. Finally, limit the use of \"except:\" to catch any exception as it can make debugging difficult, in general catch only those exceptions which you are expecting to be raised.", "markup": "markdown", "html": "<p>Improve error handling for invalid names</p>\n<p>There are very few cases where using exec is a good idea, blindly trying to assign any given name to None could cause some weird bugs (eg. in Python2.7 True and False aren't keywords so you could end up executing something like True = None). Also care should be taken over the use of assert statements because they are ignored if certain options are set, use them more for debugging or in tests. Finally, limit the use of \"except:\" to catch any exception as it can make debugging difficult, in general catch only those exceptions which you are expecting to be raised.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "a336023a7cd133a7974e4be78e4bf490ca2dc2c6", "type": "commit", "links": {"self": {"href": "data/repositories/mearnshaw/labscript/commit/a336023a7cd133a7974e4be78e4bf490ca2dc2c6.json"}, "html": {"href": "#!/mearnshaw/labscript/commits/a336023a7cd133a7974e4be78e4bf490ca2dc2c6"}}}], "date": "2014-06-25T09:24:40+00:00", "message": "Improve error handling for invalid names\n\nThere are very few cases where using exec is a good idea, blindly trying to assign any given name to None could cause some weird bugs (eg. in Python2.7 True and False aren't keywords so you could end up executing something like True = None). Also care should be taken over the use of assert statements because they are ignored if certain options are set, use them more for debugging or in tests. Finally, limit the use of \"except:\" to catch any exception as it can make debugging difficult, in general catch only those exceptions which you are expecting to be raised.", "type": "commit", "git_hash": "868dd6d0b17f9ce03b71cd0a1ad9edb609f15b53", "tags": null, "branches": "default"}