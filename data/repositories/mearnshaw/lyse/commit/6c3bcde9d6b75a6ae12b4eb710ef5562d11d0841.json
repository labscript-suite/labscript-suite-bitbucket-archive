{"rendered": {"message": {"raw": "asdatetime now uses pandas.Timestamp with local timezone.\nIn __init__.py, the df.convert_objects() call leaves dates as is,\notherwise they get cast to numpy.datetime64 which is undesirable.\nUsing timezones.py (from github gist) to get the local timezone.\nThis is dodgy, and if we are going to use timezones, they should in\nfuture be put into the h5 file at compile/run time.", "markup": "markdown", "html": "<p>asdatetime now uses pandas.Timestamp with local timezone.<br />\nIn <strong>init</strong>.py, the df.convert_objects() call leaves dates as is,<br />\notherwise they get cast to numpy.datetime64 which is undesirable.<br />\nUsing timezones.py (from github gist) to get the local timezone.<br />\nThis is dodgy, and if we are going to use timezones, they should in<br />\nfuture be put into the h5 file at compile/run time.</p>", "type": "rendered"}}, "hash": "6c3bcde9d6b75a6ae12b4eb710ef5562d11d0841", "repository": {"links": {"self": {"href": "data/repositories/mearnshaw/lyse.json"}, "html": {"href": "#!/mearnshaw/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{539e3af3-6deb-496f-ae73-64118c6e28c5}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "mearnshaw/lyse", "uuid": "{539e3af3-6deb-496f-ae73-64118c6e28c5}"}, "links": {"self": {"href": "data/repositories/mearnshaw/lyse/commit/6c3bcde9d6b75a6ae12b4eb710ef5562d11d0841.json"}, "comments": {"href": "data/repositories/mearnshaw/lyse/commit/6c3bcde9d6b75a6ae12b4eb710ef5562d11d0841/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/mearnshaw/lyse/patch/6c3bcde9d6b75a6ae12b4eb710ef5562d11d0841"}, "html": {"href": "#!/mearnshaw/lyse/commits/6c3bcde9d6b75a6ae12b4eb710ef5562d11d0841"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/mearnshaw/lyse/diff/6c3bcde9d6b75a6ae12b4eb710ef5562d11d0841"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/mearnshaw/lyse/commit/6c3bcde9d6b75a6ae12b4eb710ef5562d11d0841/approve"}, "statuses": {"href": "data/repositories/mearnshaw/lyse/commit/6c3bcde9d6b75a6ae12b4eb710ef5562d11d0841/statuses_page=1.json"}}, "author": {"raw": "rander", "type": "author", "user": {"display_name": "Russell Anderson", "uuid": "{6c12ac6e-1980-466d-86fe-6c163bd116c2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D"}, "html": {"href": "https://bitbucket.org/%7B6c12ac6e-1980-466d-86fe-6c163bd116c2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e/e307ce36-5fb6-4418-8090-b9e533eab225/128"}}, "nickname": "rpanderson", "type": "user", "account_id": "557058:443e4cd1-86c9-4cd5-8034-22bab14d9d1e"}}, "summary": {"raw": "asdatetime now uses pandas.Timestamp with local timezone.\nIn __init__.py, the df.convert_objects() call leaves dates as is,\notherwise they get cast to numpy.datetime64 which is undesirable.\nUsing timezones.py (from github gist) to get the local timezone.\nThis is dodgy, and if we are going to use timezones, they should in\nfuture be put into the h5 file at compile/run time.", "markup": "markdown", "html": "<p>asdatetime now uses pandas.Timestamp with local timezone.<br />\nIn <strong>init</strong>.py, the df.convert_objects() call leaves dates as is,<br />\notherwise they get cast to numpy.datetime64 which is undesirable.<br />\nUsing timezones.py (from github gist) to get the local timezone.<br />\nThis is dodgy, and if we are going to use timezones, they should in<br />\nfuture be put into the h5 file at compile/run time.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "cea07a24774737061693e7b9f645e1aaa9b94bb5", "type": "commit", "links": {"self": {"href": "data/repositories/mearnshaw/lyse/commit/cea07a24774737061693e7b9f645e1aaa9b94bb5.json"}, "html": {"href": "#!/mearnshaw/lyse/commits/cea07a24774737061693e7b9f645e1aaa9b94bb5"}}}], "date": "2013-08-23T01:57:24+00:00", "message": "asdatetime now uses pandas.Timestamp with local timezone.\nIn __init__.py, the df.convert_objects() call leaves dates as is,\notherwise they get cast to numpy.datetime64 which is undesirable.\nUsing timezones.py (from github gist) to get the local timezone.\nThis is dodgy, and if we are going to use timezones, they should in\nfuture be put into the h5 file at compile/run time.", "type": "commit", "git_hash": "a355bf67e48e3c57fd6e1dc6547205286ac0a725", "tags": null, "branches": "default"}