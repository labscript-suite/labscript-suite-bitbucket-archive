{"name": "2.2.1", "links": {"commits": {"href": "data/repositories/monashkrb/labscript_utils/commits/2.2.1_page=1.json"}, "self": {"href": "data/repositories/monashkrb/labscript_utils/refs/tags/2.2.1.json"}, "html": {"href": "#!/monashkrb/labscript_utils/commits/tag/2.2.1"}}, "tagger": null, "date": null, "message": null, "type": "tag", "target": {"hash": "704329524042f776b2f4d6288774cf5e8565759a", "repository": {"links": {"self": {"href": "data/repositories/monashkrb/labscript_utils.json"}, "html": {"href": "#!/monashkrb/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a9e218ca-e910-49f5-a894-af2ca88d9e28}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "monashkrb/labscript_utils", "uuid": "{a9e218ca-e910-49f5-a894-af2ca88d9e28}"}, "links": {"self": {"href": "data/repositories/monashkrb/labscript_utils/commit/704329524042f776b2f4d6288774cf5e8565759a.json"}, "comments": {"href": "data/repositories/monashkrb/labscript_utils/commit/704329524042f776b2f4d6288774cf5e8565759a/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/labscript_utils/patch/704329524042f776b2f4d6288774cf5e8565759a"}, "html": {"href": "#!/monashkrb/labscript_utils/commits/704329524042f776b2f4d6288774cf5e8565759a"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/labscript_utils/diff/704329524042f776b2f4d6288774cf5e8565759a"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/labscript_utils/commit/704329524042f776b2f4d6288774cf5e8565759a/approve"}, "statuses": {"href": "data/repositories/monashkrb/labscript_utils/commit/704329524042f776b2f4d6288774cf5e8565759a/statuses_page=1.json"}}, "author": {"raw": "Chris Billington <chrisjbillington@gmail.com>", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "parents": [{"hash": "d0ce8d866af5890bdf8248e301e08fc5eb304ed7", "type": "commit", "links": {"self": {"href": "data/repositories/monashkrb/labscript_utils/commit/d0ce8d866af5890bdf8248e301e08fc5eb304ed7.json"}, "html": {"href": "#!/monashkrb/labscript_utils/commits/d0ce8d866af5890bdf8248e301e08fc5eb304ed7"}}}], "date": "2016-01-27T04:58:07+00:00", "message": "Added camera_server.py, which provides a class CameraServer, for implementing\nBIAS-like camera servers in Python.\n\nSubclassing it and overriding a few methods is sufficient to have some Python\ncode interact with a BLACS Camera tab. A basic example is included of a real\ncamera server I used to simply save images to file which were acquired with\nan external program that didn't require any configuration info from labscript.\n\nA Python camera server implementing this protocol via subclassing CameraServer\ncan be as simple or complex as required, perhaps just saving images to file as\nin the minimalistic example provided, or being in sole control of cameras and\nprogramming them with labscript-set parameters, performing fits, displaying\nimages, allowing you to set ROIs etc. This class just provides the interface to\nBLACS - what else your camera server does with hdf5 shot files and cameras is up\nto you.", "type": "commit"}}