{"rendered": {"message": {"raw": "Fixed a bug where the population didn't change when the spinbutton was clicked.\nFixed a bug where sometimes new individuals wouldn't be compiled, because the compile_loop wasn't yet waiting on timing_condition when timing_condition.notify_all() was called. The solution to this was to ensure that the code which checks whether there are any individuals to compile executes whilst holding the timing_condition lock. This ensures that the notify_all() doesn't happen until the wait() is called (since wait() releases the lock whilst it waits, and notify_all requires the lock)", "markup": "markdown", "html": "<p>Fixed a bug where the population didn't change when the spinbutton was clicked.<br />\nFixed a bug where sometimes new individuals wouldn't be compiled, because the compile_loop wasn't yet waiting on timing_condition when timing_condition.notify_all() was called. The solution to this was to ensure that the code which checks whether there are any individuals to compile executes whilst holding the timing_condition lock. This ensures that the notify_all() doesn't happen until the wait() is called (since wait() releases the lock whilst it waits, and notify_all requires the lock)</p>", "type": "rendered"}}, "hash": "0226cf777f4ceaac153c01a605f73f44809ff5de", "repository": {"links": {"self": {"href": "data/repositories/monashkrb/mise.json"}, "html": {"href": "#!/monashkrb/mise"}, "avatar": {"href": "data/bytebucket.org/ravatar/{fe94d081-a50e-45a0-9b39-e74d86c20879}ts=python"}}, "type": "repository", "name": "mise", "full_name": "monashkrb/mise", "uuid": "{fe94d081-a50e-45a0-9b39-e74d86c20879}"}, "links": {"self": {"href": "data/repositories/monashkrb/mise/commit/0226cf777f4ceaac153c01a605f73f44809ff5de.json"}, "comments": {"href": "data/repositories/monashkrb/mise/commit/0226cf777f4ceaac153c01a605f73f44809ff5de/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/mise/patch/0226cf777f4ceaac153c01a605f73f44809ff5de"}, "html": {"href": "#!/monashkrb/mise/commits/0226cf777f4ceaac153c01a605f73f44809ff5de"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/mise/diff/0226cf777f4ceaac153c01a605f73f44809ff5de"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/monashkrb/mise/commit/0226cf777f4ceaac153c01a605f73f44809ff5de/approve"}, "statuses": {"href": "data/repositories/monashkrb/mise/commit/0226cf777f4ceaac153c01a605f73f44809ff5de/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed a bug where the population didn't change when the spinbutton was clicked.\nFixed a bug where sometimes new individuals wouldn't be compiled, because the compile_loop wasn't yet waiting on timing_condition when timing_condition.notify_all() was called. The solution to this was to ensure that the code which checks whether there are any individuals to compile executes whilst holding the timing_condition lock. This ensures that the notify_all() doesn't happen until the wait() is called (since wait() releases the lock whilst it waits, and notify_all requires the lock)", "markup": "markdown", "html": "<p>Fixed a bug where the population didn't change when the spinbutton was clicked.<br />\nFixed a bug where sometimes new individuals wouldn't be compiled, because the compile_loop wasn't yet waiting on timing_condition when timing_condition.notify_all() was called. The solution to this was to ensure that the code which checks whether there are any individuals to compile executes whilst holding the timing_condition lock. This ensures that the notify_all() doesn't happen until the wait() is called (since wait() releases the lock whilst it waits, and notify_all requires the lock)</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "358c4b6e34a2fe113dd930c6e000870897468a96", "type": "commit", "links": {"self": {"href": "data/repositories/monashkrb/mise/commit/358c4b6e34a2fe113dd930c6e000870897468a96.json"}, "html": {"href": "#!/monashkrb/mise/commits/358c4b6e34a2fe113dd930c6e000870897468a96"}}}], "date": "2012-09-11T05:51:42+00:00", "message": "Fixed a bug where the population didn't change when the spinbutton was clicked.\nFixed a bug where sometimes new individuals wouldn't be compiled, because the compile_loop wasn't yet waiting on timing_condition when timing_condition.notify_all() was called. The solution to this was to ensure that the code which checks whether there are any individuals to compile executes whilst holding the timing_condition lock. This ensures that the notify_all() doesn't happen until the wait() is called (since wait() releases the lock whilst it waits, and notify_all requires the lock)", "type": "commit", "git_hash": "3aae8b970984a2c4a5f98d675fda0d6fa594b4aa", "tags": null, "branches": "default"}