{"rendered": {"message": {"raw": "Some more changes:\n\n* reverted the analysis_subprocess.py script to storing the reference to the Plot keyed by the figure, rather than the identifier as identifiers can change (so my original change was wrong)\n* Added the ability to close/recreate windows if the Plot subclass changes (this was necessary because we now key by figure, not identifier, so the plot clas required for a window could in theory change if a figure is removed from a script). This now removes the requirement that you can't change the Plot class without restarting the script (or at least it should...but I have a separate bug with the module reloading that I don't believe is related to this pull request, but I'll revert and test once this commit is done)\n* Fixed a bug where figure creation without plotting would result in everything using the same figure. Now we allocate a figure if an identifier is explicitly specified. Probably we should allocate figures even if an identifier is not specified, but I've left it doing what it used to do for now (but this means that `fig=figure();fig2=figure()` will still give odd behaviour)\n* Fixed a bug where a plot title might not get updated because there were multiple references to the same figure object in the dictionary\n* fixed a bug on Python 3.6 where we deleted items from the dictionary we were iterating over", "markup": "markdown", "html": "<p>Some more changes:</p>\n<ul>\n<li>reverted the analysis_subprocess.py script to storing the reference to the Plot keyed by the figure, rather than the identifier as identifiers can change (so my original change was wrong)</li>\n<li>Added the ability to close/recreate windows if the Plot subclass changes (this was necessary because we now key by figure, not identifier, so the plot clas required for a window could in theory change if a figure is removed from a script). This now removes the requirement that you can't change the Plot class without restarting the script (or at least it should...but I have a separate bug with the module reloading that I don't believe is related to this pull request, but I'll revert and test once this commit is done)</li>\n<li>Fixed a bug where figure creation without plotting would result in everything using the same figure. Now we allocate a figure if an identifier is explicitly specified. Probably we should allocate figures even if an identifier is not specified, but I've left it doing what it used to do for now (but this means that <code>fig=figure();fig2=figure()</code> will still give odd behaviour)</li>\n<li>Fixed a bug where a plot title might not get updated because there were multiple references to the same figure object in the dictionary</li>\n<li>fixed a bug on Python 3.6 where we deleted items from the dictionary we were iterating over</li>\n</ul>", "type": "rendered"}}, "hash": "90162fb21a2c0544f82156341c5d5d18a9ad405e", "repository": {"links": {"self": {"href": "data/repositories/monashspinor/lyse.json"}, "html": {"href": "#!/monashspinor/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}ts=python"}}, "type": "repository", "name": "lyse", "full_name": "monashspinor/lyse", "uuid": "{bc4f4324-6fe7-4c56-adaf-c4e726bd4914}"}, "links": {"self": {"href": "data/repositories/monashspinor/lyse/commit/90162fb21a2c0544f82156341c5d5d18a9ad405e.json"}, "comments": {"href": "data/repositories/monashspinor/lyse/commit/90162fb21a2c0544f82156341c5d5d18a9ad405e/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse/patch/90162fb21a2c0544f82156341c5d5d18a9ad405e"}, "html": {"href": "#!/monashspinor/lyse/commits/90162fb21a2c0544f82156341c5d5d18a9ad405e"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse/diff/90162fb21a2c0544f82156341c5d5d18a9ad405e"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/lyse/commit/90162fb21a2c0544f82156341c5d5d18a9ad405e/approve"}, "statuses": {"href": "data/repositories/monashspinor/lyse/commit/90162fb21a2c0544f82156341c5d5d18a9ad405e/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Some more changes:\n\n* reverted the analysis_subprocess.py script to storing the reference to the Plot keyed by the figure, rather than the identifier as identifiers can change (so my original change was wrong)\n* Added the ability to close/recreate windows if the Plot subclass changes (this was necessary because we now key by figure, not identifier, so the plot clas required for a window could in theory change if a figure is removed from a script). This now removes the requirement that you can't change the Plot class without restarting the script (or at least it should...but I have a separate bug with the module reloading that I don't believe is related to this pull request, but I'll revert and test once this commit is done)\n* Fixed a bug where figure creation without plotting would result in everything using the same figure. Now we allocate a figure if an identifier is explicitly specified. Probably we should allocate figures even if an identifier is not specified, but I've left it doing what it used to do for now (but this means that `fig=figure();fig2=figure()` will still give odd behaviour)\n* Fixed a bug where a plot title might not get updated because there were multiple references to the same figure object in the dictionary\n* fixed a bug on Python 3.6 where we deleted items from the dictionary we were iterating over", "markup": "markdown", "html": "<p>Some more changes:</p>\n<ul>\n<li>reverted the analysis_subprocess.py script to storing the reference to the Plot keyed by the figure, rather than the identifier as identifiers can change (so my original change was wrong)</li>\n<li>Added the ability to close/recreate windows if the Plot subclass changes (this was necessary because we now key by figure, not identifier, so the plot clas required for a window could in theory change if a figure is removed from a script). This now removes the requirement that you can't change the Plot class without restarting the script (or at least it should...but I have a separate bug with the module reloading that I don't believe is related to this pull request, but I'll revert and test once this commit is done)</li>\n<li>Fixed a bug where figure creation without plotting would result in everything using the same figure. Now we allocate a figure if an identifier is explicitly specified. Probably we should allocate figures even if an identifier is not specified, but I've left it doing what it used to do for now (but this means that <code>fig=figure();fig2=figure()</code> will still give odd behaviour)</li>\n<li>Fixed a bug where a plot title might not get updated because there were multiple references to the same figure object in the dictionary</li>\n<li>fixed a bug on Python 3.6 where we deleted items from the dictionary we were iterating over</li>\n</ul>", "type": "rendered"}, "participants": [], "parents": [{"hash": "279797ac5e680c35f22eb7866d70836f658d6216", "type": "commit", "links": {"self": {"href": "data/repositories/monashspinor/lyse/commit/279797ac5e680c35f22eb7866d70836f658d6216.json"}, "html": {"href": "#!/monashspinor/lyse/commits/279797ac5e680c35f22eb7866d70836f658d6216"}}}], "date": "2018-10-24T07:01:30+00:00", "message": "Some more changes:\n\n* reverted the analysis_subprocess.py script to storing the reference to the Plot keyed by the figure, rather than the identifier as identifiers can change (so my original change was wrong)\n* Added the ability to close/recreate windows if the Plot subclass changes (this was necessary because we now key by figure, not identifier, so the plot clas required for a window could in theory change if a figure is removed from a script). This now removes the requirement that you can't change the Plot class without restarting the script (or at least it should...but I have a separate bug with the module reloading that I don't believe is related to this pull request, but I'll revert and test once this commit is done)\n* Fixed a bug where figure creation without plotting would result in everything using the same figure. Now we allocate a figure if an identifier is explicitly specified. Probably we should allocate figures even if an identifier is not specified, but I've left it doing what it used to do for now (but this means that `fig=figure();fig2=figure()` will still give odd behaviour)\n* Fixed a bug where a plot title might not get updated because there were multiple references to the same figure object in the dictionary\n* fixed a bug on Python 3.6 where we deleted items from the dictionary we were iterating over", "type": "commit", "git_hash": "5a0c160995d44861629e9335b06d4b814c630e0a", "tags": null, "branches": "custom-Plot-classes"}