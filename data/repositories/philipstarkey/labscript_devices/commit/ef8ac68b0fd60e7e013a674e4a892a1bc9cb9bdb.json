{"rendered": {"message": {"raw": "Updates after testing in the lab (made all labscript and BLACS parameters correctly reference clock frequency)\n\n* Added the automatic creation of a `WaitMonitor` so that you don't have to remember the syntax (since it's a bit meaningless for this device)\n* Added a configurable trigger debouce parameter\n* Waits (and inbuilt wait monitor) have been tested and work. The measured wait duration appears reasonably accurate, but it's hard to tell without a function generator that is referenced to a common 10MHz signal and is capable of producing a delayed pulse and ensuring that we account correctly for output delays in NI cards, etc. etc). I have no reason to doubt it's accuracy though as it literally just counts internal clock ticks while it waits.\n* External referencing of the entire device was tested successfully (and is necessary if using it with other pseudoclocks, much like the PineBlaster). I tested with both a 33.333MHz reference and a 50MHz reference signal produced by a NB3N502 chip. The OpalKelly board stayed synchronised with our PulseBlasters that were similarly referenced to a common 10MHz GPS source.\n\nTODO:\n * confirm it works as a secondary pseudoclock", "markup": "markdown", "html": "<p>Updates after testing in the lab (made all labscript and BLACS parameters correctly reference clock frequency)</p>\n<ul>\n<li>Added the automatic creation of a <code>WaitMonitor</code> so that you don't have to remember the syntax (since it's a bit meaningless for this device)</li>\n<li>Added a configurable trigger debouce parameter</li>\n<li>Waits (and inbuilt wait monitor) have been tested and work. The measured wait duration appears reasonably accurate, but it's hard to tell without a function generator that is referenced to a common 10MHz signal and is capable of producing a delayed pulse and ensuring that we account correctly for output delays in NI cards, etc. etc). I have no reason to doubt it's accuracy though as it literally just counts internal clock ticks while it waits.</li>\n<li>External referencing of the entire device was tested successfully (and is necessary if using it with other pseudoclocks, much like the PineBlaster). I tested with both a 33.333MHz reference and a 50MHz reference signal produced by a NB3N502 chip. The OpalKelly board stayed synchronised with our PulseBlasters that were similarly referenced to a common 10MHz GPS source.</li>\n</ul>\n<p>TODO:<br />\n * confirm it works as a secondary pseudoclock</p>", "type": "rendered"}}, "hash": "ef8ac68b0fd60e7e013a674e4a892a1bc9cb9bdb", "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/labscript_devices.json"}, "html": {"href": "#!/philipstarkey/labscript_devices"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c015837e-2acd-4f39-9b05-05b4f6d854e8}ts=python"}}, "type": "repository", "name": "labscript_devices", "full_name": "philipstarkey/labscript_devices", "uuid": "{c015837e-2acd-4f39-9b05-05b4f6d854e8}"}, "links": {"self": {"href": "data/repositories/philipstarkey/labscript_devices/commit/ef8ac68b0fd60e7e013a674e4a892a1bc9cb9bdb.json"}, "comments": {"href": "data/repositories/philipstarkey/labscript_devices/commit/ef8ac68b0fd60e7e013a674e4a892a1bc9cb9bdb/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/philipstarkey/labscript_devices/patch/ef8ac68b0fd60e7e013a674e4a892a1bc9cb9bdb"}, "html": {"href": "#!/philipstarkey/labscript_devices/commits/ef8ac68b0fd60e7e013a674e4a892a1bc9cb9bdb"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/philipstarkey/labscript_devices/diff/ef8ac68b0fd60e7e013a674e4a892a1bc9cb9bdb"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/philipstarkey/labscript_devices/commit/ef8ac68b0fd60e7e013a674e4a892a1bc9cb9bdb/approve"}, "statuses": {"href": "data/repositories/philipstarkey/labscript_devices/commit/ef8ac68b0fd60e7e013a674e4a892a1bc9cb9bdb/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Updates after testing in the lab (made all labscript and BLACS parameters correctly reference clock frequency)\n\n* Added the automatic creation of a `WaitMonitor` so that you don't have to remember the syntax (since it's a bit meaningless for this device)\n* Added a configurable trigger debouce parameter\n* Waits (and inbuilt wait monitor) have been tested and work. The measured wait duration appears reasonably accurate, but it's hard to tell without a function generator that is referenced to a common 10MHz signal and is capable of producing a delayed pulse and ensuring that we account correctly for output delays in NI cards, etc. etc). I have no reason to doubt it's accuracy though as it literally just counts internal clock ticks while it waits.\n* External referencing of the entire device was tested successfully (and is necessary if using it with other pseudoclocks, much like the PineBlaster). I tested with both a 33.333MHz reference and a 50MHz reference signal produced by a NB3N502 chip. The OpalKelly board stayed synchronised with our PulseBlasters that were similarly referenced to a common 10MHz GPS source.\n\nTODO:\n * confirm it works as a secondary pseudoclock", "markup": "markdown", "html": "<p>Updates after testing in the lab (made all labscript and BLACS parameters correctly reference clock frequency)</p>\n<ul>\n<li>Added the automatic creation of a <code>WaitMonitor</code> so that you don't have to remember the syntax (since it's a bit meaningless for this device)</li>\n<li>Added a configurable trigger debouce parameter</li>\n<li>Waits (and inbuilt wait monitor) have been tested and work. The measured wait duration appears reasonably accurate, but it's hard to tell without a function generator that is referenced to a common 10MHz signal and is capable of producing a delayed pulse and ensuring that we account correctly for output delays in NI cards, etc. etc). I have no reason to doubt it's accuracy though as it literally just counts internal clock ticks while it waits.</li>\n<li>External referencing of the entire device was tested successfully (and is necessary if using it with other pseudoclocks, much like the PineBlaster). I tested with both a 33.333MHz reference and a 50MHz reference signal produced by a NB3N502 chip. The OpalKelly board stayed synchronised with our PulseBlasters that were similarly referenced to a common 10MHz GPS source.</li>\n</ul>\n<p>TODO:<br />\n * confirm it works as a secondary pseudoclock</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "15e9eef50484d06e645696d62d8ce981997b1a64", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/labscript_devices/commit/15e9eef50484d06e645696d62d8ce981997b1a64.json"}, "html": {"href": "#!/philipstarkey/labscript_devices/commits/15e9eef50484d06e645696d62d8ce981997b1a64"}}}], "date": "2019-01-11T01:14:08+00:00", "message": "Updates after testing in the lab (made all labscript and BLACS parameters correctly reference clock frequency)\n\n* Added the automatic creation of a `WaitMonitor` so that you don't have to remember the syntax (since it's a bit meaningless for this device)\n* Added a configurable trigger debouce parameter\n* Waits (and inbuilt wait monitor) have been tested and work. The measured wait duration appears reasonably accurate, but it's hard to tell without a function generator that is referenced to a common 10MHz signal and is capable of producing a delayed pulse and ensuring that we account correctly for output delays in NI cards, etc. etc). I have no reason to doubt it's accuracy though as it literally just counts internal clock ticks while it waits.\n* External referencing of the entire device was tested successfully (and is necessary if using it with other pseudoclocks, much like the PineBlaster). I tested with both a 33.333MHz reference and a 50MHz reference signal produced by a NB3N502 chip. The OpalKelly board stayed synchronised with our PulseBlasters that were similarly referenced to a common 10MHz GPS source.\n\nTODO:\n * confirm it works as a secondary pseudoclock", "type": "commit", "git_hash": "a309ec04b87291033a3b7f6c95bab77eaccaa917", "tags": null, "branches": "CiceroOpalKellyXem3001"}