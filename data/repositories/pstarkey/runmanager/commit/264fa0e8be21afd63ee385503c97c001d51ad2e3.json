{"rendered": {"message": {"raw": "Cleaned up the new batch compiler scripts so that we can instantiate the processors without needing it to be launched as a zprocess subprocess.\n\nThis allows someone to use the BatchProcessor class in their own script to compile labscript (or other) scripts while automatically gaining access to the machinery for loading globals. Ultimately we could reintroduce a command line utility to take a labscript file and globals file and compile a shot (like we used to have).\n\nAs an example of the above, consider doing:\nfrom runmanage.batch_compiler_labscript import BatchProcessor\nbatch_processor = BatchProcessor()\nbatch_processor.compile(labscript_file, globals_file)", "markup": "markdown", "html": "<p>Cleaned up the new batch compiler scripts so that we can instantiate the processors without needing it to be launched as a zprocess subprocess.</p>\n<p>This allows someone to use the BatchProcessor class in their own script to compile labscript (or other) scripts while automatically gaining access to the machinery for loading globals. Ultimately we could reintroduce a command line utility to take a labscript file and globals file and compile a shot (like we used to have).</p>\n<p>As an example of the above, consider doing:<br />\nfrom runmanage.batch_compiler_labscript import BatchProcessor<br />\nbatch_processor = BatchProcessor()<br />\nbatch_processor.compile(labscript_file, globals_file)</p>", "type": "rendered"}}, "hash": "264fa0e8be21afd63ee385503c97c001d51ad2e3", "repository": {"links": {"self": {"href": "data/repositories/pstarkey/runmanager.json"}, "html": {"href": "#!/pstarkey/runmanager"}, "avatar": {"href": "data/bytebucket.org/ravatar/{2f11f5fd-c84d-42bd-a265-eda8b5bef98b}ts=python"}}, "type": "repository", "name": "runmanager", "full_name": "pstarkey/runmanager", "uuid": "{2f11f5fd-c84d-42bd-a265-eda8b5bef98b}"}, "links": {"self": {"href": "data/repositories/pstarkey/runmanager/commit/264fa0e8be21afd63ee385503c97c001d51ad2e3.json"}, "comments": {"href": "data/repositories/pstarkey/runmanager/commit/264fa0e8be21afd63ee385503c97c001d51ad2e3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/runmanager/patch/264fa0e8be21afd63ee385503c97c001d51ad2e3"}, "html": {"href": "#!/pstarkey/runmanager/commits/264fa0e8be21afd63ee385503c97c001d51ad2e3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/runmanager/diff/264fa0e8be21afd63ee385503c97c001d51ad2e3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/pstarkey/runmanager/commit/264fa0e8be21afd63ee385503c97c001d51ad2e3/approve"}, "statuses": {"href": "data/repositories/pstarkey/runmanager/commit/264fa0e8be21afd63ee385503c97c001d51ad2e3/statuses_page=1.json"}}, "author": {"raw": "pstarkey", "type": "author", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, "summary": {"raw": "Cleaned up the new batch compiler scripts so that we can instantiate the processors without needing it to be launched as a zprocess subprocess.\n\nThis allows someone to use the BatchProcessor class in their own script to compile labscript (or other) scripts while automatically gaining access to the machinery for loading globals. Ultimately we could reintroduce a command line utility to take a labscript file and globals file and compile a shot (like we used to have).\n\nAs an example of the above, consider doing:\nfrom runmanage.batch_compiler_labscript import BatchProcessor\nbatch_processor = BatchProcessor()\nbatch_processor.compile(labscript_file, globals_file)", "markup": "markdown", "html": "<p>Cleaned up the new batch compiler scripts so that we can instantiate the processors without needing it to be launched as a zprocess subprocess.</p>\n<p>This allows someone to use the BatchProcessor class in their own script to compile labscript (or other) scripts while automatically gaining access to the machinery for loading globals. Ultimately we could reintroduce a command line utility to take a labscript file and globals file and compile a shot (like we used to have).</p>\n<p>As an example of the above, consider doing:<br />\nfrom runmanage.batch_compiler_labscript import BatchProcessor<br />\nbatch_processor = BatchProcessor()<br />\nbatch_processor.compile(labscript_file, globals_file)</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "1a4749d10f5455d03093193836407a1d43dafaad", "type": "commit", "links": {"self": {"href": "data/repositories/pstarkey/runmanager/commit/1a4749d10f5455d03093193836407a1d43dafaad.json"}, "html": {"href": "#!/pstarkey/runmanager/commits/1a4749d10f5455d03093193836407a1d43dafaad"}}}], "date": "2018-03-13T04:16:30+00:00", "message": "Cleaned up the new batch compiler scripts so that we can instantiate the processors without needing it to be launched as a zprocess subprocess.\n\nThis allows someone to use the BatchProcessor class in their own script to compile labscript (or other) scripts while automatically gaining access to the machinery for loading globals. Ultimately we could reintroduce a command line utility to take a labscript file and globals file and compile a shot (like we used to have).\n\nAs an example of the above, consider doing:\nfrom runmanage.batch_compiler_labscript import BatchProcessor\nbatch_processor = BatchProcessor()\nbatch_processor.compile(labscript_file, globals_file)", "type": "commit", "git_hash": "8061b7017bd00a52d99cbacea656efadfd7ec47e", "tags": null, "branches": "labscript-agnostic"}