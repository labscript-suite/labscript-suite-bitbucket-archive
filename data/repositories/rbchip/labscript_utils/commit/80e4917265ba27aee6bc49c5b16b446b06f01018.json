{"rendered": {"message": {"raw": "Allow serialiser to serialise bytestings, by base64 encoding them with a prefix.\n\nJSON does not distinguish between bytestrings and unicode strings, but Python\ndoes, and Python 3 has stricter requirements not to confuse the two.\n\nIn order for a bytestrings to survive serialisation and deserialisation, this\nchange encodes bytestrings as base64, adds a prefix, and the result is serialised\nin the JSON ouput the same as any unicode string. Upon deserialisation, strings\nare inspected for the prefix and decoded.\n\nThis is motivated by the labscript driver for NI IMAQdx cameras. Camera attributes\ncan be set, which are currently stored as connection table properties or device\nproperties. Currently they are stored as strings, even though this leads to\nvarious issues with the Python nivision API choking on some of them since they\nare not the right datatype. Not only can attributes be strings or integers or floats\netc, but nivision makes a distinction between byestrings and unicode strings.\nSo to correctly set these, our serialisation needs to allow this distinction to\nround-trip.\n\nThis encoding of bytestrings is only performed for Python 3. The NI IMAQdx camera\nserver is Python3-only in any case.", "markup": "markdown", "html": "<p>Allow serialiser to serialise bytestings, by base64 encoding them with a prefix.</p>\n<p>JSON does not distinguish between bytestrings and unicode strings, but Python<br />\ndoes, and Python 3 has stricter requirements not to confuse the two.</p>\n<p>In order for a bytestrings to survive serialisation and deserialisation, this<br />\nchange encodes bytestrings as base64, adds a prefix, and the result is serialised<br />\nin the JSON ouput the same as any unicode string. Upon deserialisation, strings<br />\nare inspected for the prefix and decoded.</p>\n<p>This is motivated by the labscript driver for NI IMAQdx cameras. Camera attributes<br />\ncan be set, which are currently stored as connection table properties or device<br />\nproperties. Currently they are stored as strings, even though this leads to<br />\nvarious issues with the Python nivision API choking on some of them since they<br />\nare not the right datatype. Not only can attributes be strings or integers or floats<br />\netc, but nivision makes a distinction between byestrings and unicode strings.<br />\nSo to correctly set these, our serialisation needs to allow this distinction to<br />\nround-trip.</p>\n<p>This encoding of bytestrings is only performed for Python 3. The NI IMAQdx camera<br />\nserver is Python3-only in any case.</p>", "type": "rendered"}}, "hash": "80e4917265ba27aee6bc49c5b16b446b06f01018", "repository": {"links": {"self": {"href": "data/repositories/rbchip/labscript_utils.json"}, "html": {"href": "#!/rbchip/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b751b730-de8b-4f57-85a7-d01935219340}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "rbchip/labscript_utils", "uuid": "{b751b730-de8b-4f57-85a7-d01935219340}"}, "links": {"self": {"href": "data/repositories/rbchip/labscript_utils/commit/80e4917265ba27aee6bc49c5b16b446b06f01018.json"}, "comments": {"href": "data/repositories/rbchip/labscript_utils/commit/80e4917265ba27aee6bc49c5b16b446b06f01018/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/rbchip/labscript_utils/patch/80e4917265ba27aee6bc49c5b16b446b06f01018"}, "html": {"href": "#!/rbchip/labscript_utils/commits/80e4917265ba27aee6bc49c5b16b446b06f01018"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/rbchip/labscript_utils/diff/80e4917265ba27aee6bc49c5b16b446b06f01018"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/rbchip/labscript_utils/commit/80e4917265ba27aee6bc49c5b16b446b06f01018/approve"}, "statuses": {"href": "data/repositories/rbchip/labscript_utils/commit/80e4917265ba27aee6bc49c5b16b446b06f01018/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Allow serialiser to serialise bytestings, by base64 encoding them with a prefix.\n\nJSON does not distinguish between bytestrings and unicode strings, but Python\ndoes, and Python 3 has stricter requirements not to confuse the two.\n\nIn order for a bytestrings to survive serialisation and deserialisation, this\nchange encodes bytestrings as base64, adds a prefix, and the result is serialised\nin the JSON ouput the same as any unicode string. Upon deserialisation, strings\nare inspected for the prefix and decoded.\n\nThis is motivated by the labscript driver for NI IMAQdx cameras. Camera attributes\ncan be set, which are currently stored as connection table properties or device\nproperties. Currently they are stored as strings, even though this leads to\nvarious issues with the Python nivision API choking on some of them since they\nare not the right datatype. Not only can attributes be strings or integers or floats\netc, but nivision makes a distinction between byestrings and unicode strings.\nSo to correctly set these, our serialisation needs to allow this distinction to\nround-trip.\n\nThis encoding of bytestrings is only performed for Python 3. The NI IMAQdx camera\nserver is Python3-only in any case.", "markup": "markdown", "html": "<p>Allow serialiser to serialise bytestings, by base64 encoding them with a prefix.</p>\n<p>JSON does not distinguish between bytestrings and unicode strings, but Python<br />\ndoes, and Python 3 has stricter requirements not to confuse the two.</p>\n<p>In order for a bytestrings to survive serialisation and deserialisation, this<br />\nchange encodes bytestrings as base64, adds a prefix, and the result is serialised<br />\nin the JSON ouput the same as any unicode string. Upon deserialisation, strings<br />\nare inspected for the prefix and decoded.</p>\n<p>This is motivated by the labscript driver for NI IMAQdx cameras. Camera attributes<br />\ncan be set, which are currently stored as connection table properties or device<br />\nproperties. Currently they are stored as strings, even though this leads to<br />\nvarious issues with the Python nivision API choking on some of them since they<br />\nare not the right datatype. Not only can attributes be strings or integers or floats<br />\netc, but nivision makes a distinction between byestrings and unicode strings.<br />\nSo to correctly set these, our serialisation needs to allow this distinction to<br />\nround-trip.</p>\n<p>This encoding of bytestrings is only performed for Python 3. The NI IMAQdx camera<br />\nserver is Python3-only in any case.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "ce867e414043cb0e7fad352f03eca0343a996c04", "type": "commit", "links": {"self": {"href": "data/repositories/rbchip/labscript_utils/commit/ce867e414043cb0e7fad352f03eca0343a996c04.json"}, "html": {"href": "#!/rbchip/labscript_utils/commits/ce867e414043cb0e7fad352f03eca0343a996c04"}}}], "date": "2019-03-29T15:01:39+00:00", "message": "Allow serialiser to serialise bytestings, by base64 encoding them with a prefix.\n\nJSON does not distinguish between bytestrings and unicode strings, but Python\ndoes, and Python 3 has stricter requirements not to confuse the two.\n\nIn order for a bytestrings to survive serialisation and deserialisation, this\nchange encodes bytestrings as base64, adds a prefix, and the result is serialised\nin the JSON ouput the same as any unicode string. Upon deserialisation, strings\nare inspected for the prefix and decoded.\n\nThis is motivated by the labscript driver for NI IMAQdx cameras. Camera attributes\ncan be set, which are currently stored as connection table properties or device\nproperties. Currently they are stored as strings, even though this leads to\nvarious issues with the Python nivision API choking on some of them since they\nare not the right datatype. Not only can attributes be strings or integers or floats\netc, but nivision makes a distinction between byestrings and unicode strings.\nSo to correctly set these, our serialisation needs to allow this distinction to\nround-trip.\n\nThis encoding of bytestrings is only performed for Python 3. The NI IMAQdx camera\nserver is Python3-only in any case.", "type": "commit", "git_hash": "98447bbc926c0b86f12713f8a798ebd8e42060c1", "tags": null, "branches": "JSON_bytestrings"}