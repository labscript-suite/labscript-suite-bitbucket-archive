{"rendered": {"message": {"raw": "Added priorities for plugin callbacks. Plugin callbacks may now be decorated\nwith the decorator `blacs.plugins.callback(priority=<number>)`, and those with\nthe lowest number for their priority will be called first. The defauly priority\nis 10, which will be used if no priority is specified or if a callback does not\nuse this decorator. Because it is optional, this change is backward compatible\nwith existing callbacks, which will work unmodified. I have not added the\ndecorator to any of the callbacks of the plugins shipped with BLACS.\n\nThis functionality was implemented by defining a Callback class in blacs.plugins\nthat has an attribute for the priority, but is also a callable, and so can be\njust called as normal if the priority is not relevant.\n\nMoved `get_callbacks()` from `blacs.experiment_queue` into `blacs.plugins`, and\nmodified it to return callbacks in order of priority. Removed the `inmain`\ndecorator from it since it should not normally need to touch the GUI - if a\nplugin needs to touch the GUI to get callbacks for whatever reason, it can call\n`inmain()` itself.\n\nReplaced the remaining code in the\nqueue manager that manually looked through plugins for callbacks with\na call to get_callbacks.\n\nThis is so that I can make a plugin with a callback for 'shot_complete', which\ndelays the start of the next shot. This callback should run last if there are\nother callbacks, necessitating priorities of some sort.", "markup": "markdown", "html": "<p>Added priorities for plugin callbacks. Plugin callbacks may now be decorated<br />\nwith the decorator <code>blacs.plugins.callback(priority=&lt;number&gt;)</code>, and those with<br />\nthe lowest number for their priority will be called first. The defauly priority<br />\nis 10, which will be used if no priority is specified or if a callback does not<br />\nuse this decorator. Because it is optional, this change is backward compatible<br />\nwith existing callbacks, which will work unmodified. I have not added the<br />\ndecorator to any of the callbacks of the plugins shipped with BLACS.</p>\n<p>This functionality was implemented by defining a Callback class in blacs.plugins<br />\nthat has an attribute for the priority, but is also a callable, and so can be<br />\njust called as normal if the priority is not relevant.</p>\n<p>Moved <code>get_callbacks()</code> from <code>blacs.experiment_queue</code> into <code>blacs.plugins</code>, and<br />\nmodified it to return callbacks in order of priority. Removed the <code>inmain</code><br />\ndecorator from it since it should not normally need to touch the GUI - if a<br />\nplugin needs to touch the GUI to get callbacks for whatever reason, it can call<br />\n<code>inmain()</code> itself.</p>\n<p>Replaced the remaining code in the<br />\nqueue manager that manually looked through plugins for callbacks with<br />\na call to get_callbacks.</p>\n<p>This is so that I can make a plugin with a callback for 'shot_complete', which<br />\ndelays the start of the next shot. This callback should run last if there are<br />\nother callbacks, necessitating priorities of some sort.</p>", "type": "rendered"}}, "hash": "77bf4d7eb3a2653c39edf4a3127e3924b53090b3", "repository": {"links": {"self": {"href": "data/repositories/rpanderson/blacs.json"}, "html": {"href": "#!/rpanderson/blacs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4821d2a9-d352-4126-866a-0af82f2ba7e4}ts=2203675"}}, "type": "repository", "name": "blacs", "full_name": "rpanderson/blacs", "uuid": "{4821d2a9-d352-4126-866a-0af82f2ba7e4}"}, "links": {"self": {"href": "data/repositories/rpanderson/blacs/commit/77bf4d7eb3a2653c39edf4a3127e3924b53090b3.json"}, "comments": {"href": "data/repositories/rpanderson/blacs/commit/77bf4d7eb3a2653c39edf4a3127e3924b53090b3/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/rpanderson/blacs/patch/77bf4d7eb3a2653c39edf4a3127e3924b53090b3"}, "html": {"href": "#!/rpanderson/blacs/commits/77bf4d7eb3a2653c39edf4a3127e3924b53090b3"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/rpanderson/blacs/diff/77bf4d7eb3a2653c39edf4a3127e3924b53090b3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/rpanderson/blacs/commit/77bf4d7eb3a2653c39edf4a3127e3924b53090b3/approve"}, "statuses": {"href": "data/repositories/rpanderson/blacs/commit/77bf4d7eb3a2653c39edf4a3127e3924b53090b3/statuses_page=1.json"}}, "author": {"raw": "Chris Billington", "type": "author"}, "summary": {"raw": "Added priorities for plugin callbacks. Plugin callbacks may now be decorated\nwith the decorator `blacs.plugins.callback(priority=<number>)`, and those with\nthe lowest number for their priority will be called first. The defauly priority\nis 10, which will be used if no priority is specified or if a callback does not\nuse this decorator. Because it is optional, this change is backward compatible\nwith existing callbacks, which will work unmodified. I have not added the\ndecorator to any of the callbacks of the plugins shipped with BLACS.\n\nThis functionality was implemented by defining a Callback class in blacs.plugins\nthat has an attribute for the priority, but is also a callable, and so can be\njust called as normal if the priority is not relevant.\n\nMoved `get_callbacks()` from `blacs.experiment_queue` into `blacs.plugins`, and\nmodified it to return callbacks in order of priority. Removed the `inmain`\ndecorator from it since it should not normally need to touch the GUI - if a\nplugin needs to touch the GUI to get callbacks for whatever reason, it can call\n`inmain()` itself.\n\nReplaced the remaining code in the\nqueue manager that manually looked through plugins for callbacks with\na call to get_callbacks.\n\nThis is so that I can make a plugin with a callback for 'shot_complete', which\ndelays the start of the next shot. This callback should run last if there are\nother callbacks, necessitating priorities of some sort.", "markup": "markdown", "html": "<p>Added priorities for plugin callbacks. Plugin callbacks may now be decorated<br />\nwith the decorator <code>blacs.plugins.callback(priority=&lt;number&gt;)</code>, and those with<br />\nthe lowest number for their priority will be called first. The defauly priority<br />\nis 10, which will be used if no priority is specified or if a callback does not<br />\nuse this decorator. Because it is optional, this change is backward compatible<br />\nwith existing callbacks, which will work unmodified. I have not added the<br />\ndecorator to any of the callbacks of the plugins shipped with BLACS.</p>\n<p>This functionality was implemented by defining a Callback class in blacs.plugins<br />\nthat has an attribute for the priority, but is also a callable, and so can be<br />\njust called as normal if the priority is not relevant.</p>\n<p>Moved <code>get_callbacks()</code> from <code>blacs.experiment_queue</code> into <code>blacs.plugins</code>, and<br />\nmodified it to return callbacks in order of priority. Removed the <code>inmain</code><br />\ndecorator from it since it should not normally need to touch the GUI - if a<br />\nplugin needs to touch the GUI to get callbacks for whatever reason, it can call<br />\n<code>inmain()</code> itself.</p>\n<p>Replaced the remaining code in the<br />\nqueue manager that manually looked through plugins for callbacks with<br />\na call to get_callbacks.</p>\n<p>This is so that I can make a plugin with a callback for 'shot_complete', which<br />\ndelays the start of the next shot. This callback should run last if there are<br />\nother callbacks, necessitating priorities of some sort.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "adee644a72e1a3c2769f31b234fd3011a1b29b78", "type": "commit", "links": {"self": {"href": "data/repositories/rpanderson/blacs/commit/adee644a72e1a3c2769f31b234fd3011a1b29b78.json"}, "html": {"href": "#!/rpanderson/blacs/commits/adee644a72e1a3c2769f31b234fd3011a1b29b78"}}}], "date": "2018-09-10T19:28:18+00:00", "message": "Added priorities for plugin callbacks. Plugin callbacks may now be decorated\nwith the decorator `blacs.plugins.callback(priority=<number>)`, and those with\nthe lowest number for their priority will be called first. The defauly priority\nis 10, which will be used if no priority is specified or if a callback does not\nuse this decorator. Because it is optional, this change is backward compatible\nwith existing callbacks, which will work unmodified. I have not added the\ndecorator to any of the callbacks of the plugins shipped with BLACS.\n\nThis functionality was implemented by defining a Callback class in blacs.plugins\nthat has an attribute for the priority, but is also a callable, and so can be\njust called as normal if the priority is not relevant.\n\nMoved `get_callbacks()` from `blacs.experiment_queue` into `blacs.plugins`, and\nmodified it to return callbacks in order of priority. Removed the `inmain`\ndecorator from it since it should not normally need to touch the GUI - if a\nplugin needs to touch the GUI to get callbacks for whatever reason, it can call\n`inmain()` itself.\n\nReplaced the remaining code in the\nqueue manager that manually looked through plugins for callbacks with\na call to get_callbacks.\n\nThis is so that I can make a plugin with a callback for 'shot_complete', which\ndelays the start of the next shot. This callback should run last if there are\nother callbacks, necessitating priorities of some sort.", "type": "commit", "git_hash": "71a94a2b60b63419b7db73f1a8edc03142f7112e", "tags": null, "branches": "callback_priorities"}