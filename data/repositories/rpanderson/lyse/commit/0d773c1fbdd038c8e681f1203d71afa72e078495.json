{"rendered": {"message": {"raw": "Resolves issue #47. We could replace the (KeyError, ValueError) catch with\nTypeError, but since the existence of the sequence_index column is guaranteed,\nthere's no need. Instead, check for a non-null value using pandas.notna.", "markup": "markdown", "html": "<p>Resolves issue #47. We could replace the (KeyError, ValueError) catch with<br />\nTypeError, but since the existence of the sequence_index column is guaranteed,<br />\nthere's no need. Instead, check for a non-null value using pandas.notna.</p>", "type": "rendered"}}, "hash": "0d773c1fbdd038c8e681f1203d71afa72e078495", "repository": {"links": {"self": {"href": "data/repositories/rpanderson/lyse.json"}, "html": {"href": "#!/rpanderson/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{af3f4037-4cb2-49dd-b675-22e0ce6522c4}ts=2203673"}}, "type": "repository", "name": "lyse", "full_name": "rpanderson/lyse", "uuid": "{af3f4037-4cb2-49dd-b675-22e0ce6522c4}"}, "links": {"self": {"href": "data/repositories/rpanderson/lyse/commit/0d773c1fbdd038c8e681f1203d71afa72e078495.json"}, "comments": {"href": "data/repositories/rpanderson/lyse/commit/0d773c1fbdd038c8e681f1203d71afa72e078495/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/rpanderson/lyse/patch/0d773c1fbdd038c8e681f1203d71afa72e078495"}, "html": {"href": "#!/rpanderson/lyse/commits/0d773c1fbdd038c8e681f1203d71afa72e078495"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/rpanderson/lyse/diff/0d773c1fbdd038c8e681f1203d71afa72e078495"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/rpanderson/lyse/commit/0d773c1fbdd038c8e681f1203d71afa72e078495/approve"}, "statuses": {"href": "data/repositories/rpanderson/lyse/commit/0d773c1fbdd038c8e681f1203d71afa72e078495/statuses_page=1.json"}}, "author": {"raw": "rpanderson", "type": "author"}, "summary": {"raw": "Resolves issue #47. We could replace the (KeyError, ValueError) catch with\nTypeError, but since the existence of the sequence_index column is guaranteed,\nthere's no need. Instead, check for a non-null value using pandas.notna.", "markup": "markdown", "html": "<p>Resolves issue #47. We could replace the (KeyError, ValueError) catch with<br />\nTypeError, but since the existence of the sequence_index column is guaranteed,<br />\nthere's no need. Instead, check for a non-null value using pandas.notna.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "96b98428ad8942296005ea52abf58a201a6e3b2d", "type": "commit", "links": {"self": {"href": "data/repositories/rpanderson/lyse/commit/96b98428ad8942296005ea52abf58a201a6e3b2d.json"}, "html": {"href": "#!/rpanderson/lyse/commits/96b98428ad8942296005ea52abf58a201a6e3b2d"}}}], "date": "2019-04-24T00:46:42+00:00", "message": "Resolves issue #47. We could replace the (KeyError, ValueError) catch with\nTypeError, but since the existence of the sequence_index column is guaranteed,\nthere's no need. Instead, check for a non-null value using pandas.notna.", "type": "commit", "git_hash": "23aa15180bb01736b50b22e1246fcba9e520fb95", "tags": null, "branches": "bugfix"}