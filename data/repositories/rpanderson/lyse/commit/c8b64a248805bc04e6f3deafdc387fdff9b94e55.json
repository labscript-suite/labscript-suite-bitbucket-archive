{"rendered": {"message": {"raw": "Fixed a bug with a gtk callback not being removed correctly when an analysis routine is killed or removed. Made analysis routines be removed a little more gently, rather than just killing them. If an analysis routine is actually stuck doing some work, it will remain stuck now and not get killed. But it will die once it finishes doing the work!\n\nMade a start putting some better logging in place. Haven't got that far. Removed OutputBox from main.pyw and OutputInterceptor from analysis_subprocess, they are both now in subproc_utils so I can re-use them elsewhere. See that commit message for more info. I think those two classes are the bee's knees.\n\nGot rid of annoying warnings about h5 non-errors and signal handlers not being connected.", "markup": "markdown", "html": "<p>Fixed a bug with a gtk callback not being removed correctly when an analysis routine is killed or removed. Made analysis routines be removed a little more gently, rather than just killing them. If an analysis routine is actually stuck doing some work, it will remain stuck now and not get killed. But it will die once it finishes doing the work!</p>\n<p>Made a start putting some better logging in place. Haven't got that far. Removed OutputBox from main.pyw and OutputInterceptor from analysis_subprocess, they are both now in subproc_utils so I can re-use them elsewhere. See that commit message for more info. I think those two classes are the bee's knees.</p>\n<p>Got rid of annoying warnings about h5 non-errors and signal handlers not being connected.</p>", "type": "rendered"}}, "hash": "c8b64a248805bc04e6f3deafdc387fdff9b94e55", "repository": {"links": {"self": {"href": "data/repositories/rpanderson/lyse.json"}, "html": {"href": "#!/rpanderson/lyse"}, "avatar": {"href": "data/bytebucket.org/ravatar/{af3f4037-4cb2-49dd-b675-22e0ce6522c4}ts=2203673"}}, "type": "repository", "name": "lyse", "full_name": "rpanderson/lyse", "uuid": "{af3f4037-4cb2-49dd-b675-22e0ce6522c4}"}, "links": {"self": {"href": "data/repositories/rpanderson/lyse/commit/c8b64a248805bc04e6f3deafdc387fdff9b94e55.json"}, "comments": {"href": "data/repositories/rpanderson/lyse/commit/c8b64a248805bc04e6f3deafdc387fdff9b94e55/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/rpanderson/lyse/patch/c8b64a248805bc04e6f3deafdc387fdff9b94e55"}, "html": {"href": "#!/rpanderson/lyse/commits/c8b64a248805bc04e6f3deafdc387fdff9b94e55"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/rpanderson/lyse/diff/c8b64a248805bc04e6f3deafdc387fdff9b94e55"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/rpanderson/lyse/commit/c8b64a248805bc04e6f3deafdc387fdff9b94e55/approve"}, "statuses": {"href": "data/repositories/rpanderson/lyse/commit/c8b64a248805bc04e6f3deafdc387fdff9b94e55/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed a bug with a gtk callback not being removed correctly when an analysis routine is killed or removed. Made analysis routines be removed a little more gently, rather than just killing them. If an analysis routine is actually stuck doing some work, it will remain stuck now and not get killed. But it will die once it finishes doing the work!\n\nMade a start putting some better logging in place. Haven't got that far. Removed OutputBox from main.pyw and OutputInterceptor from analysis_subprocess, they are both now in subproc_utils so I can re-use them elsewhere. See that commit message for more info. I think those two classes are the bee's knees.\n\nGot rid of annoying warnings about h5 non-errors and signal handlers not being connected.", "markup": "markdown", "html": "<p>Fixed a bug with a gtk callback not being removed correctly when an analysis routine is killed or removed. Made analysis routines be removed a little more gently, rather than just killing them. If an analysis routine is actually stuck doing some work, it will remain stuck now and not get killed. But it will die once it finishes doing the work!</p>\n<p>Made a start putting some better logging in place. Haven't got that far. Removed OutputBox from main.pyw and OutputInterceptor from analysis_subprocess, they are both now in subproc_utils so I can re-use them elsewhere. See that commit message for more info. I think those two classes are the bee's knees.</p>\n<p>Got rid of annoying warnings about h5 non-errors and signal handlers not being connected.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "6a5b67f7c1264e3232dfcceb562caf377f112c54", "type": "commit", "links": {"self": {"href": "data/repositories/rpanderson/lyse/commit/6a5b67f7c1264e3232dfcceb562caf377f112c54.json"}, "html": {"href": "#!/rpanderson/lyse/commits/6a5b67f7c1264e3232dfcceb562caf377f112c54"}}}], "date": "2012-06-11T15:27:25+00:00", "message": "Fixed a bug with a gtk callback not being removed correctly when an analysis routine is killed or removed. Made analysis routines be removed a little more gently, rather than just killing them. If an analysis routine is actually stuck doing some work, it will remain stuck now and not get killed. But it will die once it finishes doing the work!\n\nMade a start putting some better logging in place. Haven't got that far. Removed OutputBox from main.pyw and OutputInterceptor from analysis_subprocess, they are both now in subproc_utils so I can re-use them elsewhere. See that commit message for more info. I think those two classes are the bee's knees.\n\nGot rid of annoying warnings about h5 non-errors and signal handlers not being connected.", "type": "commit", "git_hash": "324faf008ef655961023293c7cebfadd3fb18798", "tags": null, "branches": "default"}