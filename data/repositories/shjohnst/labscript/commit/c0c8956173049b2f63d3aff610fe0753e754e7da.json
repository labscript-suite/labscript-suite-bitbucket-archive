{"rendered": {"message": {"raw": "Fixed a bug where generate_code() would crash when instructions were requested at certain times. The problem turned out to be\nthat I relied on the order of a list of times without having sorted it. The list was obtained from the keys of a dictionary,\nwhich everyone knows come back in a seemingly random order (they're ordered by their hashes). The reason this bug wasn't picked\nup on sooner is that I'd used integers for the instruction times in most of my tests. A great video I watched the other day:\n\nhttp://blip.tv/file/3332763\n\npointed out that the hash for an integer (and anything that equates to an integer with '==') *is that integer itself*.\nSo my keys were coming back in order most of the time, and I didn't realise til now that the list wasn't sorted. Thanks\nto Russ for the bug report.", "markup": "markdown", "html": "<p>Fixed a bug where generate_code() would crash when instructions were requested at certain times. The problem turned out to be<br />\nthat I relied on the order of a list of times without having sorted it. The list was obtained from the keys of a dictionary,<br />\nwhich everyone knows come back in a seemingly random order (they're ordered by their hashes). The reason this bug wasn't picked<br />\nup on sooner is that I'd used integers for the instruction times in most of my tests. A great video I watched the other day:</p>\n<p><a href=\"http://blip.tv/file/3332763\" rel=\"nofollow\" class=\"ap-connect-link\">http://blip.tv/file/3332763</a></p>\n<p>pointed out that the hash for an integer (and anything that equates to an integer with '==') <em>is that integer itself</em>.<br />\nSo my keys were coming back in order most of the time, and I didn't realise til now that the list wasn't sorted. Thanks<br />\nto Russ for the bug report.</p>", "type": "rendered"}}, "hash": "c0c8956173049b2f63d3aff610fe0753e754e7da", "repository": {"links": {"self": {"href": "data/repositories/shjohnst/labscript.json"}, "html": {"href": "#!/shjohnst/labscript"}, "avatar": {"href": "data/bytebucket.org/ravatar/{7abe33d7-0b22-49e6-bb15-ec1d22835819}ts=python"}}, "type": "repository", "name": "labscript", "full_name": "shjohnst/labscript", "uuid": "{7abe33d7-0b22-49e6-bb15-ec1d22835819}"}, "links": {"self": {"href": "data/repositories/shjohnst/labscript/commit/c0c8956173049b2f63d3aff610fe0753e754e7da.json"}, "comments": {"href": "data/repositories/shjohnst/labscript/commit/c0c8956173049b2f63d3aff610fe0753e754e7da/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/shjohnst/labscript/patch/c0c8956173049b2f63d3aff610fe0753e754e7da"}, "html": {"href": "#!/shjohnst/labscript/commits/c0c8956173049b2f63d3aff610fe0753e754e7da"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/shjohnst/labscript/diff/c0c8956173049b2f63d3aff610fe0753e754e7da"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/shjohnst/labscript/commit/c0c8956173049b2f63d3aff610fe0753e754e7da/approve"}, "statuses": {"href": "data/repositories/shjohnst/labscript/commit/c0c8956173049b2f63d3aff610fe0753e754e7da/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Fixed a bug where generate_code() would crash when instructions were requested at certain times. The problem turned out to be\nthat I relied on the order of a list of times without having sorted it. The list was obtained from the keys of a dictionary,\nwhich everyone knows come back in a seemingly random order (they're ordered by their hashes). The reason this bug wasn't picked\nup on sooner is that I'd used integers for the instruction times in most of my tests. A great video I watched the other day:\n\nhttp://blip.tv/file/3332763\n\npointed out that the hash for an integer (and anything that equates to an integer with '==') *is that integer itself*.\nSo my keys were coming back in order most of the time, and I didn't realise til now that the list wasn't sorted. Thanks\nto Russ for the bug report.", "markup": "markdown", "html": "<p>Fixed a bug where generate_code() would crash when instructions were requested at certain times. The problem turned out to be<br />\nthat I relied on the order of a list of times without having sorted it. The list was obtained from the keys of a dictionary,<br />\nwhich everyone knows come back in a seemingly random order (they're ordered by their hashes). The reason this bug wasn't picked<br />\nup on sooner is that I'd used integers for the instruction times in most of my tests. A great video I watched the other day:</p>\n<p><a href=\"http://blip.tv/file/3332763\" rel=\"nofollow\" class=\"ap-connect-link\">http://blip.tv/file/3332763</a></p>\n<p>pointed out that the hash for an integer (and anything that equates to an integer with '==') <em>is that integer itself</em>.<br />\nSo my keys were coming back in order most of the time, and I didn't realise til now that the list wasn't sorted. Thanks<br />\nto Russ for the bug report.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "452f33f84850252668c5c927522e50c934f26427", "type": "commit", "links": {"self": {"href": "data/repositories/shjohnst/labscript/commit/452f33f84850252668c5c927522e50c934f26427.json"}, "html": {"href": "#!/shjohnst/labscript/commits/452f33f84850252668c5c927522e50c934f26427"}}}], "date": "2011-03-17T12:20:40+00:00", "message": "Fixed a bug where generate_code() would crash when instructions were requested at certain times. The problem turned out to be\nthat I relied on the order of a list of times without having sorted it. The list was obtained from the keys of a dictionary,\nwhich everyone knows come back in a seemingly random order (they're ordered by their hashes). The reason this bug wasn't picked\nup on sooner is that I'd used integers for the instruction times in most of my tests. A great video I watched the other day:\n\nhttp://blip.tv/file/3332763\n\npointed out that the hash for an integer (and anything that equates to an integer with '==') *is that integer itself*.\nSo my keys were coming back in order most of the time, and I didn't realise til now that the list wasn't sorted. Thanks\nto Russ for the bug report.", "type": "commit", "git_hash": "1b3ae5a80fa1e96e6fc251f1e13f2f48ef01d11d", "tags": null, "branches": "default"}