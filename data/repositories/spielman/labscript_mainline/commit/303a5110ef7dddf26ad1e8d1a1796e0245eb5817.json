{"rendered": {"message": {"raw": "Several fairly big changes.\n\n1. Devices are now all in a group called 'devices' in the hdf5 file.\n\n2. A device connection table is now stored to a dataset called 'connection table' at the top level of the hdf5 file.\n\n3. Connections to all parent devices are now more descriptive, ie 'flag 2' for a connection to a PulseBlaster rather than just 2,\n   and 'channel 0' for a device connected to a Novatech DDS rather than just 0.\n\n4. The stop(t=stop_time) function now calls generate_code(), so a separate call is not needed. stop() also does sys.exit(0) when its done,\n   so any python code following it will not be executed. This will be useful for setting 'breakpoints' in experimental runs.\n\n5. Bit of refactoring, with a new class called IntermediateDevice, which both Novatech DDSs and NI cards are subclasses of.\n   Their __init__() functions were becoming pretty similar, so this avoids code duplication.\n\n6. example.py was simplified, with profiling code removed. We can do more profiling later if we see poor performance.", "markup": "markdown", "html": "<p>Several fairly big changes.</p>\n<ol>\n<li>\n<p>Devices are now all in a group called 'devices' in the hdf5 file.</p>\n</li>\n<li>\n<p>A device connection table is now stored to a dataset called 'connection table' at the top level of the hdf5 file.</p>\n</li>\n<li>\n<p>Connections to all parent devices are now more descriptive, ie 'flag 2' for a connection to a PulseBlaster rather than just 2,<br />\n   and 'channel 0' for a device connected to a Novatech DDS rather than just 0.</p>\n</li>\n<li>\n<p>The stop(t=stop_time) function now calls generate_code(), so a separate call is not needed. stop() also does sys.exit(0) when its done,<br />\n   so any python code following it will not be executed. This will be useful for setting 'breakpoints' in experimental runs.</p>\n</li>\n<li>\n<p>Bit of refactoring, with a new class called IntermediateDevice, which both Novatech DDSs and NI cards are subclasses of.<br />\n   Their <strong>init</strong>() functions were becoming pretty similar, so this avoids code duplication.</p>\n</li>\n<li>\n<p>example.py was simplified, with profiling code removed. We can do more profiling later if we see poor performance.</p>\n</li>\n</ol>", "type": "rendered"}}, "hash": "303a5110ef7dddf26ad1e8d1a1796e0245eb5817", "repository": {"links": {"self": {"href": "data/repositories/spielman/labscript_mainline.json"}, "html": {"href": "#!/spielman/labscript_mainline"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a18ab8b6-a82f-450d-a285-9c3a5d735358}ts=python"}}, "type": "repository", "name": "labscript_mainline", "full_name": "spielman/labscript_mainline", "uuid": "{a18ab8b6-a82f-450d-a285-9c3a5d735358}"}, "links": {"self": {"href": "data/repositories/spielman/labscript_mainline/commit/303a5110ef7dddf26ad1e8d1a1796e0245eb5817.json"}, "comments": {"href": "data/repositories/spielman/labscript_mainline/commit/303a5110ef7dddf26ad1e8d1a1796e0245eb5817/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/spielman/labscript_mainline/patch/303a5110ef7dddf26ad1e8d1a1796e0245eb5817"}, "html": {"href": "#!/spielman/labscript_mainline/commits/303a5110ef7dddf26ad1e8d1a1796e0245eb5817"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/spielman/labscript_mainline/diff/303a5110ef7dddf26ad1e8d1a1796e0245eb5817"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/spielman/labscript_mainline/commit/303a5110ef7dddf26ad1e8d1a1796e0245eb5817/approve"}, "statuses": {"href": "data/repositories/spielman/labscript_mainline/commit/303a5110ef7dddf26ad1e8d1a1796e0245eb5817/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Several fairly big changes.\n\n1. Devices are now all in a group called 'devices' in the hdf5 file.\n\n2. A device connection table is now stored to a dataset called 'connection table' at the top level of the hdf5 file.\n\n3. Connections to all parent devices are now more descriptive, ie 'flag 2' for a connection to a PulseBlaster rather than just 2,\n   and 'channel 0' for a device connected to a Novatech DDS rather than just 0.\n\n4. The stop(t=stop_time) function now calls generate_code(), so a separate call is not needed. stop() also does sys.exit(0) when its done,\n   so any python code following it will not be executed. This will be useful for setting 'breakpoints' in experimental runs.\n\n5. Bit of refactoring, with a new class called IntermediateDevice, which both Novatech DDSs and NI cards are subclasses of.\n   Their __init__() functions were becoming pretty similar, so this avoids code duplication.\n\n6. example.py was simplified, with profiling code removed. We can do more profiling later if we see poor performance.", "markup": "markdown", "html": "<p>Several fairly big changes.</p>\n<ol>\n<li>\n<p>Devices are now all in a group called 'devices' in the hdf5 file.</p>\n</li>\n<li>\n<p>A device connection table is now stored to a dataset called 'connection table' at the top level of the hdf5 file.</p>\n</li>\n<li>\n<p>Connections to all parent devices are now more descriptive, ie 'flag 2' for a connection to a PulseBlaster rather than just 2,<br />\n   and 'channel 0' for a device connected to a Novatech DDS rather than just 0.</p>\n</li>\n<li>\n<p>The stop(t=stop_time) function now calls generate_code(), so a separate call is not needed. stop() also does sys.exit(0) when its done,<br />\n   so any python code following it will not be executed. This will be useful for setting 'breakpoints' in experimental runs.</p>\n</li>\n<li>\n<p>Bit of refactoring, with a new class called IntermediateDevice, which both Novatech DDSs and NI cards are subclasses of.<br />\n   Their <strong>init</strong>() functions were becoming pretty similar, so this avoids code duplication.</p>\n</li>\n<li>\n<p>example.py was simplified, with profiling code removed. We can do more profiling later if we see poor performance.</p>\n</li>\n</ol>", "type": "rendered"}, "participants": [], "parents": [{"hash": "af480e94fb8460d3a825ca400ea9619ba082e5c0", "type": "commit", "links": {"self": {"href": "data/repositories/spielman/labscript_mainline/commit/af480e94fb8460d3a825ca400ea9619ba082e5c0.json"}, "html": {"href": "#!/spielman/labscript_mainline/commits/af480e94fb8460d3a825ca400ea9619ba082e5c0"}}}], "date": "2011-04-12T02:25:57+00:00", "message": "Several fairly big changes.\n\n1. Devices are now all in a group called 'devices' in the hdf5 file.\n\n2. A device connection table is now stored to a dataset called 'connection table' at the top level of the hdf5 file.\n\n3. Connections to all parent devices are now more descriptive, ie 'flag 2' for a connection to a PulseBlaster rather than just 2,\n   and 'channel 0' for a device connected to a Novatech DDS rather than just 0.\n\n4. The stop(t=stop_time) function now calls generate_code(), so a separate call is not needed. stop() also does sys.exit(0) when its done,\n   so any python code following it will not be executed. This will be useful for setting 'breakpoints' in experimental runs.\n\n5. Bit of refactoring, with a new class called IntermediateDevice, which both Novatech DDSs and NI cards are subclasses of.\n   Their __init__() functions were becoming pretty similar, so this avoids code duplication.\n\n6. example.py was simplified, with profiling code removed. We can do more profiling later if we see poor performance.", "type": "commit", "git_hash": "baee7bc7a949b6ba4f6576635cab2b2dcdee7c34", "tags": null, "branches": "default"}