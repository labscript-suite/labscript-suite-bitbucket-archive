{"rendered": {"message": {"raw": "Applied an attempted workaround to what appears to be a python bug.\n\nThe modulewatcher.ModuleWatcher.check_and_unload function would crash sometimes if a garbage collection cycle was running at the same time\nI am not sure which part of it specifically, as adding printlines seemed to decreas the probability of a collision.\n\nThe attempted workaround is to disable garbage collection and manually check once a cycle if garbage needs to be collected.", "markup": "markdown", "html": "<p>Applied an attempted workaround to what appears to be a python bug.</p>\n<p>The modulewatcher.ModuleWatcher.check_and_unload function would crash sometimes if a garbage collection cycle was running at the same time<br />\nI am not sure which part of it specifically, as adding printlines seemed to decreas the probability of a collision.</p>\n<p>The attempted workaround is to disable garbage collection and manually check once a cycle if garbage needs to be collected.</p>", "type": "rendered"}}, "hash": "29f51b905786cfe69ffd85abd6bd385c77014478", "repository": {"links": {"self": {"href": "data/repositories/synqs/labscript_utils.json"}, "html": {"href": "#!/synqs/labscript_utils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{cdc4a353-bea9-4d28-9a14-3ef107e5d030}ts=python"}}, "type": "repository", "name": "labscript_utils", "full_name": "synqs/labscript_utils", "uuid": "{cdc4a353-bea9-4d28-9a14-3ef107e5d030}"}, "links": {"self": {"href": "data/repositories/synqs/labscript_utils/commit/29f51b905786cfe69ffd85abd6bd385c77014478.json"}, "comments": {"href": "data/repositories/synqs/labscript_utils/commit/29f51b905786cfe69ffd85abd6bd385c77014478/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/synqs/labscript_utils/patch/29f51b905786cfe69ffd85abd6bd385c77014478"}, "html": {"href": "#!/synqs/labscript_utils/commits/29f51b905786cfe69ffd85abd6bd385c77014478"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/synqs/labscript_utils/diff/29f51b905786cfe69ffd85abd6bd385c77014478"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/synqs/labscript_utils/commit/29f51b905786cfe69ffd85abd6bd385c77014478/approve"}, "statuses": {"href": "data/repositories/synqs/labscript_utils/commit/29f51b905786cfe69ffd85abd6bd385c77014478/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Applied an attempted workaround to what appears to be a python bug.\n\nThe modulewatcher.ModuleWatcher.check_and_unload function would crash sometimes if a garbage collection cycle was running at the same time\nI am not sure which part of it specifically, as adding printlines seemed to decreas the probability of a collision.\n\nThe attempted workaround is to disable garbage collection and manually check once a cycle if garbage needs to be collected.", "markup": "markdown", "html": "<p>Applied an attempted workaround to what appears to be a python bug.</p>\n<p>The modulewatcher.ModuleWatcher.check_and_unload function would crash sometimes if a garbage collection cycle was running at the same time<br />\nI am not sure which part of it specifically, as adding printlines seemed to decreas the probability of a collision.</p>\n<p>The attempted workaround is to disable garbage collection and manually check once a cycle if garbage needs to be collected.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "4a3683fc1d6b5a847ab8c4bf6f213f48dc2bf5f4", "type": "commit", "links": {"self": {"href": "data/repositories/synqs/labscript_utils/commit/4a3683fc1d6b5a847ab8c4bf6f213f48dc2bf5f4.json"}, "html": {"href": "#!/synqs/labscript_utils/commits/4a3683fc1d6b5a847ab8c4bf6f213f48dc2bf5f4"}}}], "date": "2013-09-17T06:34:44+00:00", "message": "Applied an attempted workaround to what appears to be a python bug.\n\nThe modulewatcher.ModuleWatcher.check_and_unload function would crash sometimes if a garbage collection cycle was running at the same time\nI am not sure which part of it specifically, as adding printlines seemed to decreas the probability of a collision.\n\nThe attempted workaround is to disable garbage collection and manually check once a cycle if garbage needs to be collected.", "type": "commit", "git_hash": "d8fa8f3dba38a9d1b850afc40853283eeb6ce1f9", "tags": null, "branches": "default"}